ca65 V2.18 - Git N/A
Main file   : paxconsola.s
Current file: paxconsola.s

000000r 1               GFX = $0400
000000r 1               
000000r 1               ;helpful labels
000000r 1               ; https://gist.github.com/biomood/1001256
000000r 1               CLEAR = $E544
000000r 1               GETIN  =  $FFE4
000000r 1               SCNKEY =  $FF9F
000000r 1               
000000r 1               ; Override Datasette ram
000000r 1               TEMP = $92
000000r 1               TEMP2 = $93
000000r 1               TEMP3 = $94
000000r 1               
000000r 1               TEMP_PAX1 = $95
000000r 1               TEMP_PAX2 = $96
000000r 1               
000000r 1               STACK_RESERVE = $97
000000r 1               
000000r 1               ; Can override all BASIC values
000000r 1               ; https://csdb.dk/forums/index.php?roomid=11&topicid=3541&showallposts=1
000000r 1               X_START = $02
000000r 1               X_END = $7f
000000r 1               
000000r 1               .code
000000r 1                   ; Make screen black and text white
000000r 1  A9 00            lda #$00
000002r 1  8D 20 D0         sta $d020
000005r 1  8D 21 D0         sta $d021
000008r 1  A9 01            lda #$01
00000Ar 1  8D 86 02         sta $0286
00000Dr 1               
00000Dr 1                   ; Select charset
00000Dr 1  A9 17            lda #23
00000Fr 1  8D 18 D0         sta $d018
000012r 1               
000012r 1                   ; Clear the screen
000012r 1  20 44 E5         jsr $e544
000015r 1               
000015r 1                   ; draw some helpful text
000015r 1  20 rr rr         jsr draw_text
000018r 1               
000018r 1  A9 00            lda #00
00001Ar 1  A2 7D            ldx #(X_END-X_START)
00001Cr 1               ClearReturnStackLoop:
00001Cr 1  95 02            sta X_START,x
00001Er 1  CA               dex
00001Fr 1  10 FB            bpl ClearReturnStackLoop
000021r 1               
000021r 1  A9 00            lda #$00
000023r 1  A2 FF            ldx #$ff
000025r 1               ClearMemoryLoop:
000025r 1  9D 00 90         sta $9000,x
000028r 1  CA               dex
000029r 1  D0 FA            bne ClearMemoryLoop
00002Br 1               
00002Br 1               
00002Br 1               before_mainloop:
00002Br 1  EA               nop
00002Cr 1               mainloop:
00002Cr 1  AD 11 D0         lda $d011
00002Fr 1  10 FB            bpl mainloop ; no: go to mainloop
000031r 1               
000031r 1               pax_start:
000031r 1                   ; disable inerrupts
000031r 1  78               sei
000032r 1                   ; store stack pointer, since execution might not be clean
000032r 1  BA               tsx
000033r 1  86 97            stx STACK_RESERVE
000035r 1               
000035r 1                   ; Set up PAX registers for execution
000035r 1                   ; X=return stack pointer, Y = high byte of TOS, A = low byte of TOS
000035r 1  A2 02            ldx #X_START
000037r 1  A9 00            lda #0
000039r 1  A0 00            ldy #0
00003Br 1               
00003Br 1                   .include "generated.asm"
00003Br 2               @target_0:
00003Br 2               
00003Br 2               ; snake.pax:205:1 in `main`
00003Br 2               @OPCODE_1:   ; [c64_ir] PushLiteral(-28672)
00003Br 2  E8               inx
00003Cr 2  E8               inx
00003Dr 2  A9 00            lda #0
00003Fr 2  95 00            sta $00,x
000041r 2  A9 90            lda #144
000043r 2  95 01            sta $01,x
000045r 2               
000045r 2               ; snake.pax:205:13 in `main`
000045r 2               @OPCODE_2:   ; [c64_ir] Load
000045r 2  A1 00            lda ($00,x)
000047r 2  95 00            sta $00,x
000049r 2  A9 00            lda #0
00004Br 2  95 01            sta $01,x
00004Dr 2               
00004Dr 2               ; src/prelude.fth:21:8 in `0=`
00004Dr 2               @OPCODE_3:   ; [c64_ir] JumpIf0(2)
00004Dr 2  CA               dex
00004Er 2  CA               dex
00004Fr 2  B5 02            lda $02,x
000051r 2  15 03            ora $03,x
000053r 2  D0 03            bne *+5
000055r 2  4C rr rr         jmp @target_2
000058r 2               
000058r 2               @target_1:
000058r 2               
000058r 2               ; src/prelude.fth:21:11 in `0=`
000058r 2               @OPCODE_5:   ; [c64_ir] PushLiteral(0)
000058r 2  E8               inx
000059r 2  E8               inx
00005Ar 2  A9 00            lda #0
00005Cr 2  95 00            sta $00,x
00005Er 2  A9 00            lda #0
000060r 2  95 01            sta $01,x
000062r 2               
000062r 2               ; src/prelude.fth:21:13 in `0=`
000062r 2               @OPCODE_6:   ; [c64_ir] JumpElse(3)
000062r 2  4C rr rr         jmp @target_3
000065r 2               
000065r 2               @target_2:
000065r 2               
000065r 2               ; src/prelude.fth:21:18 in `0=`
000065r 2               @OPCODE_8:   ; [c64_ir] PushLiteral(-1)
000065r 2  E8               inx
000066r 2  E8               inx
000067r 2  A9 FF            lda #255
000069r 2  95 00            sta $00,x
00006Br 2  A9 FF            lda #255
00006Dr 2  95 01            sta $01,x
00006Fr 2               
00006Fr 2               ; src/prelude.fth:21:21 in `0=`
00006Fr 2               @OPCODE_9:   ; [c64_ir] JumpTarget(2)
00006Fr 2               
00006Fr 2               @target_3:
00006Fr 2               
00006Fr 2               ; snake.pax:205:18 in `main`
00006Fr 2               @OPCODE_11:   ; [c64_ir] JumpIf0(55)
00006Fr 2  CA               dex
000070r 2  CA               dex
000071r 2  B5 02            lda $02,x
000073r 2  15 03            ora $03,x
000075r 2  D0 03            bne *+5
000077r 2  4C rr rr         jmp @target_55
00007Ar 2               
00007Ar 2               @target_4:
00007Ar 2               
00007Ar 2               ; <inline>:0:0 in `main`
00007Ar 2               @OPCODE_13:   ; [c64_ir] PushLiteral(7777)
00007Ar 2  E8               inx
00007Br 2  E8               inx
00007Cr 2  A9 61            lda #97
00007Er 2  95 00            sta $00,x
000080r 2  A9 1E            lda #30
000082r 2  95 01            sta $01,x
000084r 2               
000084r 2               ; <inline>:0:0 in `main`
000084r 2               @OPCODE_14:   ; [c64_ir] AltPush
000084r 2  CA               dex
000085r 2  CA               dex
000086r 2  B5 03            lda $03,x
000088r 2  48               pha
000089r 2  B5 02            lda $02,x
00008Br 2  48               pha
00008Cr 2               
00008Cr 2               ; <inline>:0:0 in `main`
00008Cr 2               @OPCODE_15:   ; [c64_ir] PushLiteral(7777)
00008Cr 2  E8               inx
00008Dr 2  E8               inx
00008Er 2  A9 61            lda #97
000090r 2  95 00            sta $00,x
000092r 2  A9 1E            lda #30
000094r 2  95 01            sta $01,x
000096r 2               
000096r 2               ; <inline>:0:0 in `main`
000096r 2               @OPCODE_16:   ; [c64_ir] AltPush
000096r 2  CA               dex
000097r 2  CA               dex
000098r 2  B5 03            lda $03,x
00009Ar 2  48               pha
00009Br 2  B5 02            lda $02,x
00009Dr 2  48               pha
00009Er 2               
00009Er 2               ; snake.pax:57:5 in `draw-background`
00009Er 2               @OPCODE_17:   ; [c64_ir] PushLiteral(0)
00009Er 2  E8               inx
00009Fr 2  E8               inx
0000A0r 2  A9 00            lda #0
0000A2r 2  95 00            sta $00,x
0000A4r 2  A9 00            lda #0
0000A6r 2  95 01            sta $01,x
0000A8r 2               
0000A8r 2               ; snake.pax:58:5 in `draw-background`
0000A8r 2               @OPCODE_18:   ; [c64_ir] PushLiteral(25)
0000A8r 2  E8               inx
0000A9r 2  E8               inx
0000AAr 2  A9 19            lda #25
0000ACr 2  95 00            sta $00,x
0000AEr 2  A9 00            lda #0
0000B0r 2  95 01            sta $01,x
0000B2r 2               
0000B2r 2               ; snake.pax:58:12 in `draw-background`
0000B2r 2               @OPCODE_19:   ; [c64_ir] PushLiteral(0)
0000B2r 2  E8               inx
0000B3r 2  E8               inx
0000B4r 2  A9 00            lda #0
0000B6r 2  95 00            sta $00,x
0000B8r 2  A9 00            lda #0
0000BAr 2  95 01            sta $01,x
0000BCr 2               
0000BCr 2               ; snake.pax:58:14 in `draw-background`
0000BCr 2               @OPCODE_20:   ; [c64_ir] AltPush
0000BCr 2  CA               dex
0000BDr 2  CA               dex
0000BEr 2  B5 03            lda $03,x
0000C0r 2  48               pha
0000C1r 2  B5 02            lda $02,x
0000C3r 2  48               pha
0000C4r 2               
0000C4r 2               ; snake.pax:58:14 in `draw-background`
0000C4r 2               @OPCODE_21:   ; [c64_ir] AltPush
0000C4r 2  CA               dex
0000C5r 2  CA               dex
0000C6r 2  B5 03            lda $03,x
0000C8r 2  48               pha
0000C9r 2  B5 02            lda $02,x
0000CBr 2  48               pha
0000CCr 2               
0000CCr 2               ; snake.pax:58:14 in `draw-background`
0000CCr 2               @OPCODE_22:   ; [c64_ir] LoopTarget(4)
0000CCr 2               
0000CCr 2               @target_5:
0000CCr 2               
0000CCr 2               ; snake.pax:59:9 in `draw-background`
0000CCr 2               @OPCODE_24:   ; [c64_ir] PushLiteral(40)
0000CCr 2  E8               inx
0000CDr 2  E8               inx
0000CEr 2  A9 28            lda #40
0000D0r 2  95 00            sta $00,x
0000D2r 2  A9 00            lda #0
0000D4r 2  95 01            sta $01,x
0000D6r 2               
0000D6r 2               ; snake.pax:59:15 in `draw-background`
0000D6r 2               @OPCODE_25:   ; [c64_ir] PushLiteral(0)
0000D6r 2  E8               inx
0000D7r 2  E8               inx
0000D8r 2  A9 00            lda #0
0000DAr 2  95 00            sta $00,x
0000DCr 2  A9 00            lda #0
0000DEr 2  95 01            sta $01,x
0000E0r 2               
0000E0r 2               ; snake.pax:59:17 in `draw-background`
0000E0r 2               @OPCODE_26:   ; [c64_ir] AltPush
0000E0r 2  CA               dex
0000E1r 2  CA               dex
0000E2r 2  B5 03            lda $03,x
0000E4r 2  48               pha
0000E5r 2  B5 02            lda $02,x
0000E7r 2  48               pha
0000E8r 2               
0000E8r 2               ; snake.pax:59:17 in `draw-background`
0000E8r 2               @OPCODE_27:   ; [c64_ir] AltPush
0000E8r 2  CA               dex
0000E9r 2  CA               dex
0000EAr 2  B5 03            lda $03,x
0000ECr 2  48               pha
0000EDr 2  B5 02            lda $02,x
0000EFr 2  48               pha
0000F0r 2               
0000F0r 2               ; snake.pax:59:17 in `draw-background`
0000F0r 2               @OPCODE_28:   ; [c64_ir] LoopTarget(5)
0000F0r 2               
0000F0r 2               @target_6:
0000F0r 2               
0000F0r 2               ; src/prelude.fth:4:13 in `over`
0000F0r 2               @OPCODE_30:   ; [c64_ir] TempStore
0000F0r 2  CA               dex
0000F1r 2  CA               dex
0000F2r 2  B5 03            lda $03,x
0000F4r 2  85 96            sta TEMP_PAX2
0000F6r 2  B5 02            lda $02,x
0000F8r 2  85 95            sta TEMP_PAX1
0000FAr 2               
0000FAr 2               ; src/prelude.fth:4:19 in `over`
0000FAr 2               @OPCODE_31:   ; [c64_ir] TempLoad
0000FAr 2  E8               inx
0000FBr 2  E8               inx
0000FCr 2  A5 95            lda TEMP_PAX1
0000FEr 2  95 00            sta $00,x
000100r 2  A5 96            lda TEMP_PAX2
000102r 2  95 01            sta $01,x
000104r 2               
000104r 2               ; src/prelude.fth:4:25 in `over`
000104r 2               @OPCODE_32:   ; [c64_ir] PushLiteral(32)
000104r 2  E8               inx
000105r 2  E8               inx
000106r 2  A9 20            lda #32
000108r 2  95 00            sta $00,x
00010Ar 2  A9 00            lda #0
00010Cr 2  95 01            sta $01,x
00010Er 2               
00010Er 2               ; src/prelude.fth:4:28 in `over`
00010Er 2               @OPCODE_33:   ; [c64_ir] TempLoad
00010Er 2  E8               inx
00010Fr 2  E8               inx
000110r 2  A5 95            lda TEMP_PAX1
000112r 2  95 00            sta $00,x
000114r 2  A5 96            lda TEMP_PAX2
000116r 2  95 01            sta $01,x
000118r 2               
000118r 2               ; src/prelude.fth:38:8 in `i`
000118r 2               @OPCODE_34:   ; [c64_ir] AltPop
000118r 2  E8               inx
000119r 2  E8               inx
00011Ar 2  68               pla
00011Br 2  95 00            sta $00,x
00011Dr 2  68               pla
00011Er 2  95 01            sta $01,x
000120r 2               
000120r 2               ; src/prelude.fth:38:11 in `i`
000120r 2               @OPCODE_35:   ; [c64_ir] AltPop
000120r 2  E8               inx
000121r 2  E8               inx
000122r 2  68               pla
000123r 2  95 00            sta $00,x
000125r 2  68               pla
000126r 2  95 01            sta $01,x
000128r 2               
000128r 2               ; src/prelude.fth:38:14 in `i`
000128r 2               @OPCODE_36:   ; [c64_ir] TempStore
000128r 2  CA               dex
000129r 2  CA               dex
00012Ar 2  B5 03            lda $03,x
00012Cr 2  85 96            sta TEMP_PAX2
00012Er 2  B5 02            lda $02,x
000130r 2  85 95            sta TEMP_PAX1
000132r 2               
000132r 2               ; src/prelude.fth:38:20 in `i`
000132r 2               @OPCODE_37:   ; [c64_ir] TempLoad
000132r 2  E8               inx
000133r 2  E8               inx
000134r 2  A5 95            lda TEMP_PAX1
000136r 2  95 00            sta $00,x
000138r 2  A5 96            lda TEMP_PAX2
00013Ar 2  95 01            sta $01,x
00013Cr 2               
00013Cr 2               ; src/prelude.fth:38:26 in `i`
00013Cr 2               @OPCODE_38:   ; [c64_ir] AltPush
00013Cr 2  CA               dex
00013Dr 2  CA               dex
00013Er 2  B5 03            lda $03,x
000140r 2  48               pha
000141r 2  B5 02            lda $02,x
000143r 2  48               pha
000144r 2               
000144r 2               ; src/prelude.fth:38:29 in `i`
000144r 2               @OPCODE_39:   ; [c64_ir] AltPush
000144r 2  CA               dex
000145r 2  CA               dex
000146r 2  B5 03            lda $03,x
000148r 2  48               pha
000149r 2  B5 02            lda $02,x
00014Br 2  48               pha
00014Cr 2               
00014Cr 2               ; src/prelude.fth:38:35 in `i`
00014Cr 2               @OPCODE_40:   ; [c64_ir] TempLoad
00014Cr 2  E8               inx
00014Dr 2  E8               inx
00014Er 2  A5 95            lda TEMP_PAX1
000150r 2  95 00            sta $00,x
000152r 2  A5 96            lda TEMP_PAX2
000154r 2  95 01            sta $01,x
000156r 2               
000156r 2               ; snake.pax:60:32 in `draw-background`
000156r 2               @OPCODE_41:   ; [c64_ir] Add
000156r 2                   ; 21
000156r 2  CA               dex
000157r 2  CA               dex
000158r 2  18               clc
000159r 2  B5 00            lda $00,x
00015Br 2  75 02            adc $02,x
00015Dr 2  95 00            sta $00,x
00015Fr 2  B5 01            lda $01,x
000161r 2  75 03            adc $03,x
000163r 2  95 01            sta $01,x
000165r 2               
000165r 2               ; snake.pax:49:34 in `draw-index`
000165r 2               @OPCODE_42:   ; [c64_ir] PushLiteral(1024)
000165r 2  E8               inx
000166r 2  E8               inx
000167r 2  A9 00            lda #0
000169r 2  95 00            sta $00,x
00016Br 2  A9 04            lda #4
00016Dr 2  95 01            sta $01,x
00016Fr 2               
00016Fr 2               ; snake.pax:49:43 in `draw-index`
00016Fr 2               @OPCODE_43:   ; [c64_ir] Add
00016Fr 2                   ; 21
00016Fr 2  CA               dex
000170r 2  CA               dex
000171r 2  18               clc
000172r 2  B5 00            lda $00,x
000174r 2  75 02            adc $02,x
000176r 2  95 00            sta $00,x
000178r 2  B5 01            lda $01,x
00017Ar 2  75 03            adc $03,x
00017Cr 2  95 01            sta $01,x
00017Er 2               
00017Er 2               ; snake.pax:49:45 in `draw-index`
00017Er 2               @OPCODE_44:   ; [c64_ir] Store8
00017Er 2  CA               dex
00017Fr 2  CA               dex
000180r 2  CA               dex
000181r 2  CA               dex
000182r 2  B5 02            lda $02,x
000184r 2  81 04            sta ($04,x)
000186r 2                   ; TODO high byte
000186r 2               
000186r 2               ; src/prelude.fth:33:15 in `loopimpl`
000186r 2               @OPCODE_45:   ; [c64_ir] AltPop
000186r 2  E8               inx
000187r 2  E8               inx
000188r 2  68               pla
000189r 2  95 00            sta $00,x
00018Br 2  68               pla
00018Cr 2  95 01            sta $01,x
00018Er 2               
00018Er 2               ; src/prelude.fth:33:18 in `loopimpl`
00018Er 2               @OPCODE_46:   ; [c64_ir] AltPop
00018Er 2  E8               inx
00018Fr 2  E8               inx
000190r 2  68               pla
000191r 2  95 00            sta $00,x
000193r 2  68               pla
000194r 2  95 01            sta $01,x
000196r 2               
000196r 2               ; src/prelude.fth:18:8 in `1+`
000196r 2               @OPCODE_47:   ; [c64_ir] PushLiteral(1)
000196r 2  E8               inx
000197r 2  E8               inx
000198r 2  A9 01            lda #1
00019Ar 2  95 00            sta $00,x
00019Cr 2  A9 00            lda #0
00019Er 2  95 01            sta $01,x
0001A0r 2               
0001A0r 2               ; src/prelude.fth:18:10 in `1+`
0001A0r 2               @OPCODE_48:   ; [c64_ir] Add
0001A0r 2                   ; 21
0001A0r 2  CA               dex
0001A1r 2  CA               dex
0001A2r 2  18               clc
0001A3r 2  B5 00            lda $00,x
0001A5r 2  75 02            adc $02,x
0001A7r 2  95 00            sta $00,x
0001A9r 2  B5 01            lda $01,x
0001ABr 2  75 03            adc $03,x
0001ADr 2  95 01            sta $01,x
0001AFr 2               
0001AFr 2               ; src/prelude.fth:4:10 in `over`
0001AFr 2               @OPCODE_49:   ; [c64_ir] AltPush
0001AFr 2  CA               dex
0001B0r 2  CA               dex
0001B1r 2  B5 03            lda $03,x
0001B3r 2  48               pha
0001B4r 2  B5 02            lda $02,x
0001B6r 2  48               pha
0001B7r 2               
0001B7r 2               ; src/prelude.fth:4:13 in `over`
0001B7r 2               @OPCODE_50:   ; [c64_ir] TempStore
0001B7r 2  CA               dex
0001B8r 2  CA               dex
0001B9r 2  B5 03            lda $03,x
0001BBr 2  85 96            sta TEMP_PAX2
0001BDr 2  B5 02            lda $02,x
0001BFr 2  85 95            sta TEMP_PAX1
0001C1r 2               
0001C1r 2               ; src/prelude.fth:4:19 in `over`
0001C1r 2               @OPCODE_51:   ; [c64_ir] TempLoad
0001C1r 2  E8               inx
0001C2r 2  E8               inx
0001C3r 2  A5 95            lda TEMP_PAX1
0001C5r 2  95 00            sta $00,x
0001C7r 2  A5 96            lda TEMP_PAX2
0001C9r 2  95 01            sta $01,x
0001CBr 2               
0001CBr 2               ; src/prelude.fth:4:25 in `over`
0001CBr 2               @OPCODE_52:   ; [c64_ir] AltPop
0001CBr 2  E8               inx
0001CCr 2  E8               inx
0001CDr 2  68               pla
0001CEr 2  95 00            sta $00,x
0001D0r 2  68               pla
0001D1r 2  95 01            sta $01,x
0001D3r 2               
0001D3r 2               ; src/prelude.fth:4:28 in `over`
0001D3r 2               @OPCODE_53:   ; [c64_ir] TempLoad
0001D3r 2  E8               inx
0001D4r 2  E8               inx
0001D5r 2  A5 95            lda TEMP_PAX1
0001D7r 2  95 00            sta $00,x
0001D9r 2  A5 96            lda TEMP_PAX2
0001DBr 2  95 01            sta $01,x
0001DDr 2               
0001DDr 2               ; src/prelude.fth:4:10 in `over`
0001DDr 2               @OPCODE_54:   ; [c64_ir] AltPush
0001DDr 2  CA               dex
0001DEr 2  CA               dex
0001DFr 2  B5 03            lda $03,x
0001E1r 2  48               pha
0001E2r 2  B5 02            lda $02,x
0001E4r 2  48               pha
0001E5r 2               
0001E5r 2               ; src/prelude.fth:4:13 in `over`
0001E5r 2               @OPCODE_55:   ; [c64_ir] TempStore
0001E5r 2  CA               dex
0001E6r 2  CA               dex
0001E7r 2  B5 03            lda $03,x
0001E9r 2  85 96            sta TEMP_PAX2
0001EBr 2  B5 02            lda $02,x
0001EDr 2  85 95            sta TEMP_PAX1
0001EFr 2               
0001EFr 2               ; src/prelude.fth:4:19 in `over`
0001EFr 2               @OPCODE_56:   ; [c64_ir] TempLoad
0001EFr 2  E8               inx
0001F0r 2  E8               inx
0001F1r 2  A5 95            lda TEMP_PAX1
0001F3r 2  95 00            sta $00,x
0001F5r 2  A5 96            lda TEMP_PAX2
0001F7r 2  95 01            sta $01,x
0001F9r 2               
0001F9r 2               ; src/prelude.fth:4:25 in `over`
0001F9r 2               @OPCODE_57:   ; [c64_ir] AltPop
0001F9r 2  E8               inx
0001FAr 2  E8               inx
0001FBr 2  68               pla
0001FCr 2  95 00            sta $00,x
0001FEr 2  68               pla
0001FFr 2  95 01            sta $01,x
000201r 2               
000201r 2               ; src/prelude.fth:4:28 in `over`
000201r 2               @OPCODE_58:   ; [c64_ir] TempLoad
000201r 2  E8               inx
000202r 2  E8               inx
000203r 2  A5 95            lda TEMP_PAX1
000205r 2  95 00            sta $00,x
000207r 2  A5 96            lda TEMP_PAX2
000209r 2  95 01            sta $01,x
00020Br 2               
00020Br 2               ; src/prelude.fth:33:29 in `loopimpl`
00020Br 2               @OPCODE_59:   ; [c64_ir] AltPush
00020Br 2  CA               dex
00020Cr 2  CA               dex
00020Dr 2  B5 03            lda $03,x
00020Fr 2  48               pha
000210r 2  B5 02            lda $02,x
000212r 2  48               pha
000213r 2               
000213r 2               ; src/prelude.fth:33:32 in `loopimpl`
000213r 2               @OPCODE_60:   ; [c64_ir] AltPush
000213r 2  CA               dex
000214r 2  CA               dex
000215r 2  B5 03            lda $03,x
000217r 2  48               pha
000218r 2  B5 02            lda $02,x
00021Ar 2  48               pha
00021Br 2               
00021Br 2               ; src/prelude.fth:14:12 in `invert`
00021Br 2               @OPCODE_61:   ; [c64_ir] PushLiteral(-1)
00021Br 2  E8               inx
00021Cr 2  E8               inx
00021Dr 2  A9 FF            lda #255
00021Fr 2  95 00            sta $00,x
000221r 2  A9 FF            lda #255
000223r 2  95 01            sta $01,x
000225r 2               
000225r 2               ; src/prelude.fth:14:15 in `invert`
000225r 2               @OPCODE_62:   ; [c64_ir] Nand
000225r 2                   ; 26
000225r 2  CA               dex
000226r 2  CA               dex
000227r 2  B5 00            lda $00,x
000229r 2  35 02            and $02,x
00022Br 2  49 FF            eor #$ff
00022Dr 2  95 00            sta $00,x
00022Fr 2  B5 01            lda $01,x
000231r 2  35 03            and $03,x
000233r 2  49 FF            eor #$ff
000235r 2  95 01            sta $01,x
000237r 2               
000237r 2               ; src/prelude.fth:15:19 in `negate`
000237r 2               @OPCODE_63:   ; [c64_ir] PushLiteral(1)
000237r 2  E8               inx
000238r 2  E8               inx
000239r 2  A9 01            lda #1
00023Br 2  95 00            sta $00,x
00023Dr 2  A9 00            lda #0
00023Fr 2  95 01            sta $01,x
000241r 2               
000241r 2               ; src/prelude.fth:15:21 in `negate`
000241r 2               @OPCODE_64:   ; [c64_ir] Add
000241r 2                   ; 21
000241r 2  CA               dex
000242r 2  CA               dex
000243r 2  18               clc
000244r 2  B5 00            lda $00,x
000246r 2  75 02            adc $02,x
000248r 2  95 00            sta $00,x
00024Ar 2  B5 01            lda $01,x
00024Cr 2  75 03            adc $03,x
00024Er 2  95 01            sta $01,x
000250r 2               
000250r 2               ; src/prelude.fth:16:19 in `-`
000250r 2               @OPCODE_65:   ; [c64_ir] Add
000250r 2                   ; 21
000250r 2  CA               dex
000251r 2  CA               dex
000252r 2  18               clc
000253r 2  B5 00            lda $00,x
000255r 2  75 02            adc $02,x
000257r 2  95 00            sta $00,x
000259r 2  B5 01            lda $01,x
00025Br 2  75 03            adc $03,x
00025Dr 2  95 01            sta $01,x
00025Fr 2               
00025Fr 2               ; src/prelude.fth:21:8 in `0=`
00025Fr 2               @OPCODE_66:   ; [c64_ir] JumpIf0(8)
00025Fr 2  CA               dex
000260r 2  CA               dex
000261r 2  B5 02            lda $02,x
000263r 2  15 03            ora $03,x
000265r 2  D0 03            bne *+5
000267r 2  4C rr rr         jmp @target_8
00026Ar 2               
00026Ar 2               @target_7:
00026Ar 2               
00026Ar 2               ; src/prelude.fth:21:11 in `0=`
00026Ar 2               @OPCODE_68:   ; [c64_ir] PushLiteral(0)
00026Ar 2  E8               inx
00026Br 2  E8               inx
00026Cr 2  A9 00            lda #0
00026Er 2  95 00            sta $00,x
000270r 2  A9 00            lda #0
000272r 2  95 01            sta $01,x
000274r 2               
000274r 2               ; src/prelude.fth:21:13 in `0=`
000274r 2               @OPCODE_69:   ; [c64_ir] JumpElse(9)
000274r 2  4C rr rr         jmp @target_9
000277r 2               
000277r 2               @target_8:
000277r 2               
000277r 2               ; src/prelude.fth:21:18 in `0=`
000277r 2               @OPCODE_71:   ; [c64_ir] PushLiteral(-1)
000277r 2  E8               inx
000278r 2  E8               inx
000279r 2  A9 FF            lda #255
00027Br 2  95 00            sta $00,x
00027Dr 2  A9 FF            lda #255
00027Fr 2  95 01            sta $01,x
000281r 2               
000281r 2               ; src/prelude.fth:21:21 in `0=`
000281r 2               @OPCODE_72:   ; [c64_ir] JumpTarget(8)
000281r 2               
000281r 2               @target_9:
000281r 2               
000281r 2               ; src/prelude.fth:3:10 in `swap`
000281r 2               @OPCODE_74:   ; [c64_ir] AltPush
000281r 2  CA               dex
000282r 2  CA               dex
000283r 2  B5 03            lda $03,x
000285r 2  48               pha
000286r 2  B5 02            lda $02,x
000288r 2  48               pha
000289r 2               
000289r 2               ; src/prelude.fth:3:19 in `swap`
000289r 2               @OPCODE_75:   ; [c64_ir] AltPop
000289r 2  E8               inx
00028Ar 2  E8               inx
00028Br 2  68               pla
00028Cr 2  95 00            sta $00,x
00028Er 2  68               pla
00028Fr 2  95 01            sta $01,x
000291r 2               
000291r 2               ; snake.pax:61:9 in `draw-background`
000291r 2               @OPCODE_76:   ; [c64_ir] LoopIf0(6)
000291r 2  CA               dex
000292r 2  CA               dex
000293r 2  B5 02            lda $02,x
000295r 2  15 03            ora $03,x
000297r 2  D0 03            bne *+5
000299r 2  4C rr rr         jmp @target_6
00029Cr 2               
00029Cr 2               @target_10:
00029Cr 2               
00029Cr 2               ; snake.pax:61:9 in `draw-background`
00029Cr 2               @OPCODE_78:   ; [c64_ir] AltPop
00029Cr 2  E8               inx
00029Dr 2  E8               inx
00029Er 2  68               pla
00029Fr 2  95 00            sta $00,x
0002A1r 2  68               pla
0002A2r 2  95 01            sta $01,x
0002A4r 2               
0002A4r 2               ; snake.pax:61:9 in `draw-background`
0002A4r 2               @OPCODE_79:   ; [c64_ir] Drop
0002A4r 2  CA               dex
0002A5r 2  CA               dex
0002A6r 2               
0002A6r 2               ; snake.pax:61:9 in `draw-background`
0002A6r 2               @OPCODE_80:   ; [c64_ir] AltPop
0002A6r 2  E8               inx
0002A7r 2  E8               inx
0002A8r 2  68               pla
0002A9r 2  95 00            sta $00,x
0002ABr 2  68               pla
0002ACr 2  95 01            sta $01,x
0002AEr 2               
0002AEr 2               ; snake.pax:61:9 in `draw-background`
0002AEr 2               @OPCODE_81:   ; [c64_ir] Drop
0002AEr 2  CA               dex
0002AFr 2  CA               dex
0002B0r 2               
0002B0r 2               ; snake.pax:62:9 in `draw-background`
0002B0r 2               @OPCODE_82:   ; [c64_ir] PushLiteral(40)
0002B0r 2  E8               inx
0002B1r 2  E8               inx
0002B2r 2  A9 28            lda #40
0002B4r 2  95 00            sta $00,x
0002B6r 2  A9 00            lda #0
0002B8r 2  95 01            sta $01,x
0002BAr 2               
0002BAr 2               ; snake.pax:62:15 in `draw-background`
0002BAr 2               @OPCODE_83:   ; [c64_ir] Add
0002BAr 2                   ; 21
0002BAr 2  CA               dex
0002BBr 2  CA               dex
0002BCr 2  18               clc
0002BDr 2  B5 00            lda $00,x
0002BFr 2  75 02            adc $02,x
0002C1r 2  95 00            sta $00,x
0002C3r 2  B5 01            lda $01,x
0002C5r 2  75 03            adc $03,x
0002C7r 2  95 01            sta $01,x
0002C9r 2               
0002C9r 2               ; src/prelude.fth:33:15 in `loopimpl`
0002C9r 2               @OPCODE_84:   ; [c64_ir] AltPop
0002C9r 2  E8               inx
0002CAr 2  E8               inx
0002CBr 2  68               pla
0002CCr 2  95 00            sta $00,x
0002CEr 2  68               pla
0002CFr 2  95 01            sta $01,x
0002D1r 2               
0002D1r 2               ; src/prelude.fth:33:18 in `loopimpl`
0002D1r 2               @OPCODE_85:   ; [c64_ir] AltPop
0002D1r 2  E8               inx
0002D2r 2  E8               inx
0002D3r 2  68               pla
0002D4r 2  95 00            sta $00,x
0002D6r 2  68               pla
0002D7r 2  95 01            sta $01,x
0002D9r 2               
0002D9r 2               ; src/prelude.fth:18:8 in `1+`
0002D9r 2               @OPCODE_86:   ; [c64_ir] PushLiteral(1)
0002D9r 2  E8               inx
0002DAr 2  E8               inx
0002DBr 2  A9 01            lda #1
0002DDr 2  95 00            sta $00,x
0002DFr 2  A9 00            lda #0
0002E1r 2  95 01            sta $01,x
0002E3r 2               
0002E3r 2               ; src/prelude.fth:18:10 in `1+`
0002E3r 2               @OPCODE_87:   ; [c64_ir] Add
0002E3r 2                   ; 21
0002E3r 2  CA               dex
0002E4r 2  CA               dex
0002E5r 2  18               clc
0002E6r 2  B5 00            lda $00,x
0002E8r 2  75 02            adc $02,x
0002EAr 2  95 00            sta $00,x
0002ECr 2  B5 01            lda $01,x
0002EEr 2  75 03            adc $03,x
0002F0r 2  95 01            sta $01,x
0002F2r 2               
0002F2r 2               ; src/prelude.fth:4:10 in `over`
0002F2r 2               @OPCODE_88:   ; [c64_ir] AltPush
0002F2r 2  CA               dex
0002F3r 2  CA               dex
0002F4r 2  B5 03            lda $03,x
0002F6r 2  48               pha
0002F7r 2  B5 02            lda $02,x
0002F9r 2  48               pha
0002FAr 2               
0002FAr 2               ; src/prelude.fth:4:13 in `over`
0002FAr 2               @OPCODE_89:   ; [c64_ir] TempStore
0002FAr 2  CA               dex
0002FBr 2  CA               dex
0002FCr 2  B5 03            lda $03,x
0002FEr 2  85 96            sta TEMP_PAX2
000300r 2  B5 02            lda $02,x
000302r 2  85 95            sta TEMP_PAX1
000304r 2               
000304r 2               ; src/prelude.fth:4:19 in `over`
000304r 2               @OPCODE_90:   ; [c64_ir] TempLoad
000304r 2  E8               inx
000305r 2  E8               inx
000306r 2  A5 95            lda TEMP_PAX1
000308r 2  95 00            sta $00,x
00030Ar 2  A5 96            lda TEMP_PAX2
00030Cr 2  95 01            sta $01,x
00030Er 2               
00030Er 2               ; src/prelude.fth:4:25 in `over`
00030Er 2               @OPCODE_91:   ; [c64_ir] AltPop
00030Er 2  E8               inx
00030Fr 2  E8               inx
000310r 2  68               pla
000311r 2  95 00            sta $00,x
000313r 2  68               pla
000314r 2  95 01            sta $01,x
000316r 2               
000316r 2               ; src/prelude.fth:4:28 in `over`
000316r 2               @OPCODE_92:   ; [c64_ir] TempLoad
000316r 2  E8               inx
000317r 2  E8               inx
000318r 2  A5 95            lda TEMP_PAX1
00031Ar 2  95 00            sta $00,x
00031Cr 2  A5 96            lda TEMP_PAX2
00031Er 2  95 01            sta $01,x
000320r 2               
000320r 2               ; src/prelude.fth:4:10 in `over`
000320r 2               @OPCODE_93:   ; [c64_ir] AltPush
000320r 2  CA               dex
000321r 2  CA               dex
000322r 2  B5 03            lda $03,x
000324r 2  48               pha
000325r 2  B5 02            lda $02,x
000327r 2  48               pha
000328r 2               
000328r 2               ; src/prelude.fth:4:13 in `over`
000328r 2               @OPCODE_94:   ; [c64_ir] TempStore
000328r 2  CA               dex
000329r 2  CA               dex
00032Ar 2  B5 03            lda $03,x
00032Cr 2  85 96            sta TEMP_PAX2
00032Er 2  B5 02            lda $02,x
000330r 2  85 95            sta TEMP_PAX1
000332r 2               
000332r 2               ; src/prelude.fth:4:19 in `over`
000332r 2               @OPCODE_95:   ; [c64_ir] TempLoad
000332r 2  E8               inx
000333r 2  E8               inx
000334r 2  A5 95            lda TEMP_PAX1
000336r 2  95 00            sta $00,x
000338r 2  A5 96            lda TEMP_PAX2
00033Ar 2  95 01            sta $01,x
00033Cr 2               
00033Cr 2               ; src/prelude.fth:4:25 in `over`
00033Cr 2               @OPCODE_96:   ; [c64_ir] AltPop
00033Cr 2  E8               inx
00033Dr 2  E8               inx
00033Er 2  68               pla
00033Fr 2  95 00            sta $00,x
000341r 2  68               pla
000342r 2  95 01            sta $01,x
000344r 2               
000344r 2               ; src/prelude.fth:4:28 in `over`
000344r 2               @OPCODE_97:   ; [c64_ir] TempLoad
000344r 2  E8               inx
000345r 2  E8               inx
000346r 2  A5 95            lda TEMP_PAX1
000348r 2  95 00            sta $00,x
00034Ar 2  A5 96            lda TEMP_PAX2
00034Cr 2  95 01            sta $01,x
00034Er 2               
00034Er 2               ; src/prelude.fth:33:29 in `loopimpl`
00034Er 2               @OPCODE_98:   ; [c64_ir] AltPush
00034Er 2  CA               dex
00034Fr 2  CA               dex
000350r 2  B5 03            lda $03,x
000352r 2  48               pha
000353r 2  B5 02            lda $02,x
000355r 2  48               pha
000356r 2               
000356r 2               ; src/prelude.fth:33:32 in `loopimpl`
000356r 2               @OPCODE_99:   ; [c64_ir] AltPush
000356r 2  CA               dex
000357r 2  CA               dex
000358r 2  B5 03            lda $03,x
00035Ar 2  48               pha
00035Br 2  B5 02            lda $02,x
00035Dr 2  48               pha
00035Er 2               
00035Er 2               ; src/prelude.fth:14:12 in `invert`
00035Er 2               @OPCODE_100:   ; [c64_ir] PushLiteral(-1)
00035Er 2  E8               inx
00035Fr 2  E8               inx
000360r 2  A9 FF            lda #255
000362r 2  95 00            sta $00,x
000364r 2  A9 FF            lda #255
000366r 2  95 01            sta $01,x
000368r 2               
000368r 2               ; src/prelude.fth:14:15 in `invert`
000368r 2               @OPCODE_101:   ; [c64_ir] Nand
000368r 2                   ; 26
000368r 2  CA               dex
000369r 2  CA               dex
00036Ar 2  B5 00            lda $00,x
00036Cr 2  35 02            and $02,x
00036Er 2  49 FF            eor #$ff
000370r 2  95 00            sta $00,x
000372r 2  B5 01            lda $01,x
000374r 2  35 03            and $03,x
000376r 2  49 FF            eor #$ff
000378r 2  95 01            sta $01,x
00037Ar 2               
00037Ar 2               ; src/prelude.fth:15:19 in `negate`
00037Ar 2               @OPCODE_102:   ; [c64_ir] PushLiteral(1)
00037Ar 2  E8               inx
00037Br 2  E8               inx
00037Cr 2  A9 01            lda #1
00037Er 2  95 00            sta $00,x
000380r 2  A9 00            lda #0
000382r 2  95 01            sta $01,x
000384r 2               
000384r 2               ; src/prelude.fth:15:21 in `negate`
000384r 2               @OPCODE_103:   ; [c64_ir] Add
000384r 2                   ; 21
000384r 2  CA               dex
000385r 2  CA               dex
000386r 2  18               clc
000387r 2  B5 00            lda $00,x
000389r 2  75 02            adc $02,x
00038Br 2  95 00            sta $00,x
00038Dr 2  B5 01            lda $01,x
00038Fr 2  75 03            adc $03,x
000391r 2  95 01            sta $01,x
000393r 2               
000393r 2               ; src/prelude.fth:16:19 in `-`
000393r 2               @OPCODE_104:   ; [c64_ir] Add
000393r 2                   ; 21
000393r 2  CA               dex
000394r 2  CA               dex
000395r 2  18               clc
000396r 2  B5 00            lda $00,x
000398r 2  75 02            adc $02,x
00039Ar 2  95 00            sta $00,x
00039Cr 2  B5 01            lda $01,x
00039Er 2  75 03            adc $03,x
0003A0r 2  95 01            sta $01,x
0003A2r 2               
0003A2r 2               ; src/prelude.fth:21:8 in `0=`
0003A2r 2               @OPCODE_105:   ; [c64_ir] JumpIf0(12)
0003A2r 2  CA               dex
0003A3r 2  CA               dex
0003A4r 2  B5 02            lda $02,x
0003A6r 2  15 03            ora $03,x
0003A8r 2  D0 03            bne *+5
0003AAr 2  4C rr rr         jmp @target_12
0003ADr 2               
0003ADr 2               @target_11:
0003ADr 2               
0003ADr 2               ; src/prelude.fth:21:11 in `0=`
0003ADr 2               @OPCODE_107:   ; [c64_ir] PushLiteral(0)
0003ADr 2  E8               inx
0003AEr 2  E8               inx
0003AFr 2  A9 00            lda #0
0003B1r 2  95 00            sta $00,x
0003B3r 2  A9 00            lda #0
0003B5r 2  95 01            sta $01,x
0003B7r 2               
0003B7r 2               ; src/prelude.fth:21:13 in `0=`
0003B7r 2               @OPCODE_108:   ; [c64_ir] JumpElse(13)
0003B7r 2  4C rr rr         jmp @target_13
0003BAr 2               
0003BAr 2               @target_12:
0003BAr 2               
0003BAr 2               ; src/prelude.fth:21:18 in `0=`
0003BAr 2               @OPCODE_110:   ; [c64_ir] PushLiteral(-1)
0003BAr 2  E8               inx
0003BBr 2  E8               inx
0003BCr 2  A9 FF            lda #255
0003BEr 2  95 00            sta $00,x
0003C0r 2  A9 FF            lda #255
0003C2r 2  95 01            sta $01,x
0003C4r 2               
0003C4r 2               ; src/prelude.fth:21:21 in `0=`
0003C4r 2               @OPCODE_111:   ; [c64_ir] JumpTarget(12)
0003C4r 2               
0003C4r 2               @target_13:
0003C4r 2               
0003C4r 2               ; src/prelude.fth:3:10 in `swap`
0003C4r 2               @OPCODE_113:   ; [c64_ir] AltPush
0003C4r 2  CA               dex
0003C5r 2  CA               dex
0003C6r 2  B5 03            lda $03,x
0003C8r 2  48               pha
0003C9r 2  B5 02            lda $02,x
0003CBr 2  48               pha
0003CCr 2               
0003CCr 2               ; src/prelude.fth:3:19 in `swap`
0003CCr 2               @OPCODE_114:   ; [c64_ir] AltPop
0003CCr 2  E8               inx
0003CDr 2  E8               inx
0003CEr 2  68               pla
0003CFr 2  95 00            sta $00,x
0003D1r 2  68               pla
0003D2r 2  95 01            sta $01,x
0003D4r 2               
0003D4r 2               ; snake.pax:63:4 in `draw-background`
0003D4r 2               @OPCODE_115:   ; [c64_ir] LoopIf0(5)
0003D4r 2  CA               dex
0003D5r 2  CA               dex
0003D6r 2  B5 02            lda $02,x
0003D8r 2  15 03            ora $03,x
0003DAr 2  D0 03            bne *+5
0003DCr 2  4C rr rr         jmp @target_5
0003DFr 2               
0003DFr 2               @target_14:
0003DFr 2               
0003DFr 2               ; snake.pax:63:4 in `draw-background`
0003DFr 2               @OPCODE_117:   ; [c64_ir] AltPop
0003DFr 2  E8               inx
0003E0r 2  E8               inx
0003E1r 2  68               pla
0003E2r 2  95 00            sta $00,x
0003E4r 2  68               pla
0003E5r 2  95 01            sta $01,x
0003E7r 2               
0003E7r 2               ; snake.pax:63:4 in `draw-background`
0003E7r 2               @OPCODE_118:   ; [c64_ir] Drop
0003E7r 2  CA               dex
0003E8r 2  CA               dex
0003E9r 2               
0003E9r 2               ; snake.pax:63:4 in `draw-background`
0003E9r 2               @OPCODE_119:   ; [c64_ir] AltPop
0003E9r 2  E8               inx
0003EAr 2  E8               inx
0003EBr 2  68               pla
0003ECr 2  95 00            sta $00,x
0003EEr 2  68               pla
0003EFr 2  95 01            sta $01,x
0003F1r 2               
0003F1r 2               ; snake.pax:63:4 in `draw-background`
0003F1r 2               @OPCODE_120:   ; [c64_ir] Drop
0003F1r 2  CA               dex
0003F2r 2  CA               dex
0003F3r 2               
0003F3r 2               ; snake.pax:64:4 in `draw-background`
0003F3r 2               @OPCODE_121:   ; [c64_ir] Drop
0003F3r 2  CA               dex
0003F4r 2  CA               dex
0003F5r 2               
0003F5r 2               ; <inline>:0:0 in `main`
0003F5r 2               @OPCODE_122:   ; [c64_ir] AltPop
0003F5r 2  E8               inx
0003F6r 2  E8               inx
0003F7r 2  68               pla
0003F8r 2  95 00            sta $00,x
0003FAr 2  68               pla
0003FBr 2  95 01            sta $01,x
0003FDr 2               
0003FDr 2               ; <inline>:0:0 in `main`
0003FDr 2               @OPCODE_123:   ; [c64_ir] Drop
0003FDr 2  CA               dex
0003FEr 2  CA               dex
0003FFr 2               
0003FFr 2               ; <inline>:0:0 in `main`
0003FFr 2               @OPCODE_124:   ; [c64_ir] PushLiteral(7777)
0003FFr 2  E8               inx
000400r 2  E8               inx
000401r 2  A9 61            lda #97
000403r 2  95 00            sta $00,x
000405r 2  A9 1E            lda #30
000407r 2  95 01            sta $01,x
000409r 2               
000409r 2               ; <inline>:0:0 in `main`
000409r 2               @OPCODE_125:   ; [c64_ir] AltPush
000409r 2  CA               dex
00040Ar 2  CA               dex
00040Br 2  B5 03            lda $03,x
00040Dr 2  48               pha
00040Er 2  B5 02            lda $02,x
000410r 2  48               pha
000411r 2               
000411r 2               ; snake.pax:69:5 in `draw-walls`
000411r 2               @OPCODE_126:   ; [c64_ir] PushLiteral(40)
000411r 2  E8               inx
000412r 2  E8               inx
000413r 2  A9 28            lda #40
000415r 2  95 00            sta $00,x
000417r 2  A9 00            lda #0
000419r 2  95 01            sta $01,x
00041Br 2               
00041Br 2               ; snake.pax:69:11 in `draw-walls`
00041Br 2               @OPCODE_127:   ; [c64_ir] PushLiteral(25)
00041Br 2  E8               inx
00041Cr 2  E8               inx
00041Dr 2  A9 19            lda #25
00041Fr 2  95 00            sta $00,x
000421r 2  A9 00            lda #0
000423r 2  95 01            sta $01,x
000425r 2               
000425r 2               ; snake.pax:69:18 in `draw-walls`
000425r 2               @OPCODE_128:   ; [c64_ir] PushLiteral(1)
000425r 2  E8               inx
000426r 2  E8               inx
000427r 2  A9 01            lda #1
000429r 2  95 00            sta $00,x
00042Br 2  A9 00            lda #0
00042Dr 2  95 01            sta $01,x
00042Fr 2               
00042Fr 2               ; src/prelude.fth:14:12 in `invert`
00042Fr 2               @OPCODE_129:   ; [c64_ir] PushLiteral(-1)
00042Fr 2  E8               inx
000430r 2  E8               inx
000431r 2  A9 FF            lda #255
000433r 2  95 00            sta $00,x
000435r 2  A9 FF            lda #255
000437r 2  95 01            sta $01,x
000439r 2               
000439r 2               ; src/prelude.fth:14:15 in `invert`
000439r 2               @OPCODE_130:   ; [c64_ir] Nand
000439r 2                   ; 26
000439r 2  CA               dex
00043Ar 2  CA               dex
00043Br 2  B5 00            lda $00,x
00043Dr 2  35 02            and $02,x
00043Fr 2  49 FF            eor #$ff
000441r 2  95 00            sta $00,x
000443r 2  B5 01            lda $01,x
000445r 2  35 03            and $03,x
000447r 2  49 FF            eor #$ff
000449r 2  95 01            sta $01,x
00044Br 2               
00044Br 2               ; src/prelude.fth:15:19 in `negate`
00044Br 2               @OPCODE_131:   ; [c64_ir] PushLiteral(1)
00044Br 2  E8               inx
00044Cr 2  E8               inx
00044Dr 2  A9 01            lda #1
00044Fr 2  95 00            sta $00,x
000451r 2  A9 00            lda #0
000453r 2  95 01            sta $01,x
000455r 2               
000455r 2               ; src/prelude.fth:15:21 in `negate`
000455r 2               @OPCODE_132:   ; [c64_ir] Add
000455r 2                   ; 21
000455r 2  CA               dex
000456r 2  CA               dex
000457r 2  18               clc
000458r 2  B5 00            lda $00,x
00045Ar 2  75 02            adc $02,x
00045Cr 2  95 00            sta $00,x
00045Er 2  B5 01            lda $01,x
000460r 2  75 03            adc $03,x
000462r 2  95 01            sta $01,x
000464r 2               
000464r 2               ; src/prelude.fth:16:19 in `-`
000464r 2               @OPCODE_133:   ; [c64_ir] Add
000464r 2                   ; 21
000464r 2  CA               dex
000465r 2  CA               dex
000466r 2  18               clc
000467r 2  B5 00            lda $00,x
000469r 2  75 02            adc $02,x
00046Br 2  95 00            sta $00,x
00046Dr 2  B5 01            lda $01,x
00046Fr 2  75 03            adc $03,x
000471r 2  95 01            sta $01,x
000473r 2               
000473r 2               ; <inline>:0:0 in `main`
000473r 2               @OPCODE_134:   ; [c64_ir] PushLiteral(7777)
000473r 2  E8               inx
000474r 2  E8               inx
000475r 2  A9 61            lda #97
000477r 2  95 00            sta $00,x
000479r 2  A9 1E            lda #30
00047Br 2  95 01            sta $01,x
00047Dr 2               
00047Dr 2               ; <inline>:0:0 in `main`
00047Dr 2               @OPCODE_135:   ; [c64_ir] AltPush
00047Dr 2  CA               dex
00047Er 2  CA               dex
00047Fr 2  B5 03            lda $03,x
000481r 2  48               pha
000482r 2  B5 02            lda $02,x
000484r 2  48               pha
000485r 2               
000485r 2               ; src/prelude.fth:44:5 in `*`
000485r 2               @OPCODE_136:   ; [c64_ir] AltPush
000485r 2  CA               dex
000486r 2  CA               dex
000487r 2  B5 03            lda $03,x
000489r 2  48               pha
00048Ar 2  B5 02            lda $02,x
00048Cr 2  48               pha
00048Dr 2               
00048Dr 2               ; src/prelude.fth:44:8 in `*`
00048Dr 2               @OPCODE_137:   ; [c64_ir] PushLiteral(0)
00048Dr 2  E8               inx
00048Er 2  E8               inx
00048Fr 2  A9 00            lda #0
000491r 2  95 00            sta $00,x
000493r 2  A9 00            lda #0
000495r 2  95 01            sta $01,x
000497r 2               
000497r 2               ; src/prelude.fth:44:10 in `*`
000497r 2               @OPCODE_138:   ; [c64_ir] AltPop
000497r 2  E8               inx
000498r 2  E8               inx
000499r 2  68               pla
00049Ar 2  95 00            sta $00,x
00049Cr 2  68               pla
00049Dr 2  95 01            sta $01,x
00049Fr 2               
00049Fr 2               ; src/prelude.fth:44:13 in `*`
00049Fr 2               @OPCODE_139:   ; [c64_ir] PushLiteral(0)
00049Fr 2  E8               inx
0004A0r 2  E8               inx
0004A1r 2  A9 00            lda #0
0004A3r 2  95 00            sta $00,x
0004A5r 2  A9 00            lda #0
0004A7r 2  95 01            sta $01,x
0004A9r 2               
0004A9r 2               ; src/prelude.fth:44:15 in `*`
0004A9r 2               @OPCODE_140:   ; [c64_ir] AltPush
0004A9r 2  CA               dex
0004AAr 2  CA               dex
0004ABr 2  B5 03            lda $03,x
0004ADr 2  48               pha
0004AEr 2  B5 02            lda $02,x
0004B0r 2  48               pha
0004B1r 2               
0004B1r 2               ; src/prelude.fth:44:15 in `*`
0004B1r 2               @OPCODE_141:   ; [c64_ir] AltPush
0004B1r 2  CA               dex
0004B2r 2  CA               dex
0004B3r 2  B5 03            lda $03,x
0004B5r 2  48               pha
0004B6r 2  B5 02            lda $02,x
0004B8r 2  48               pha
0004B9r 2               
0004B9r 2               ; src/prelude.fth:44:15 in `*`
0004B9r 2               @OPCODE_142:   ; [c64_ir] LoopTarget(14)
0004B9r 2               
0004B9r 2               @target_15:
0004B9r 2               
0004B9r 2               ; src/prelude.fth:4:10 in `over`
0004B9r 2               @OPCODE_144:   ; [c64_ir] AltPush
0004B9r 2  CA               dex
0004BAr 2  CA               dex
0004BBr 2  B5 03            lda $03,x
0004BDr 2  48               pha
0004BEr 2  B5 02            lda $02,x
0004C0r 2  48               pha
0004C1r 2               
0004C1r 2               ; src/prelude.fth:4:13 in `over`
0004C1r 2               @OPCODE_145:   ; [c64_ir] TempStore
0004C1r 2  CA               dex
0004C2r 2  CA               dex
0004C3r 2  B5 03            lda $03,x
0004C5r 2  85 96            sta TEMP_PAX2
0004C7r 2  B5 02            lda $02,x
0004C9r 2  85 95            sta TEMP_PAX1
0004CBr 2               
0004CBr 2               ; src/prelude.fth:4:19 in `over`
0004CBr 2               @OPCODE_146:   ; [c64_ir] TempLoad
0004CBr 2  E8               inx
0004CCr 2  E8               inx
0004CDr 2  A5 95            lda TEMP_PAX1
0004CFr 2  95 00            sta $00,x
0004D1r 2  A5 96            lda TEMP_PAX2
0004D3r 2  95 01            sta $01,x
0004D5r 2               
0004D5r 2               ; src/prelude.fth:4:25 in `over`
0004D5r 2               @OPCODE_147:   ; [c64_ir] AltPop
0004D5r 2  E8               inx
0004D6r 2  E8               inx
0004D7r 2  68               pla
0004D8r 2  95 00            sta $00,x
0004DAr 2  68               pla
0004DBr 2  95 01            sta $01,x
0004DDr 2               
0004DDr 2               ; src/prelude.fth:4:28 in `over`
0004DDr 2               @OPCODE_148:   ; [c64_ir] TempLoad
0004DDr 2  E8               inx
0004DEr 2  E8               inx
0004DFr 2  A5 95            lda TEMP_PAX1
0004E1r 2  95 00            sta $00,x
0004E3r 2  A5 96            lda TEMP_PAX2
0004E5r 2  95 01            sta $01,x
0004E7r 2               
0004E7r 2               ; src/prelude.fth:44:23 in `*`
0004E7r 2               @OPCODE_149:   ; [c64_ir] Add
0004E7r 2                   ; 21
0004E7r 2  CA               dex
0004E8r 2  CA               dex
0004E9r 2  18               clc
0004EAr 2  B5 00            lda $00,x
0004ECr 2  75 02            adc $02,x
0004EEr 2  95 00            sta $00,x
0004F0r 2  B5 01            lda $01,x
0004F2r 2  75 03            adc $03,x
0004F4r 2  95 01            sta $01,x
0004F6r 2               
0004F6r 2               ; src/prelude.fth:33:15 in `loopimpl`
0004F6r 2               @OPCODE_150:   ; [c64_ir] AltPop
0004F6r 2  E8               inx
0004F7r 2  E8               inx
0004F8r 2  68               pla
0004F9r 2  95 00            sta $00,x
0004FBr 2  68               pla
0004FCr 2  95 01            sta $01,x
0004FEr 2               
0004FEr 2               ; src/prelude.fth:33:18 in `loopimpl`
0004FEr 2               @OPCODE_151:   ; [c64_ir] AltPop
0004FEr 2  E8               inx
0004FFr 2  E8               inx
000500r 2  68               pla
000501r 2  95 00            sta $00,x
000503r 2  68               pla
000504r 2  95 01            sta $01,x
000506r 2               
000506r 2               ; src/prelude.fth:18:8 in `1+`
000506r 2               @OPCODE_152:   ; [c64_ir] PushLiteral(1)
000506r 2  E8               inx
000507r 2  E8               inx
000508r 2  A9 01            lda #1
00050Ar 2  95 00            sta $00,x
00050Cr 2  A9 00            lda #0
00050Er 2  95 01            sta $01,x
000510r 2               
000510r 2               ; src/prelude.fth:18:10 in `1+`
000510r 2               @OPCODE_153:   ; [c64_ir] Add
000510r 2                   ; 21
000510r 2  CA               dex
000511r 2  CA               dex
000512r 2  18               clc
000513r 2  B5 00            lda $00,x
000515r 2  75 02            adc $02,x
000517r 2  95 00            sta $00,x
000519r 2  B5 01            lda $01,x
00051Br 2  75 03            adc $03,x
00051Dr 2  95 01            sta $01,x
00051Fr 2               
00051Fr 2               ; src/prelude.fth:4:10 in `over`
00051Fr 2               @OPCODE_154:   ; [c64_ir] AltPush
00051Fr 2  CA               dex
000520r 2  CA               dex
000521r 2  B5 03            lda $03,x
000523r 2  48               pha
000524r 2  B5 02            lda $02,x
000526r 2  48               pha
000527r 2               
000527r 2               ; src/prelude.fth:4:13 in `over`
000527r 2               @OPCODE_155:   ; [c64_ir] TempStore
000527r 2  CA               dex
000528r 2  CA               dex
000529r 2  B5 03            lda $03,x
00052Br 2  85 96            sta TEMP_PAX2
00052Dr 2  B5 02            lda $02,x
00052Fr 2  85 95            sta TEMP_PAX1
000531r 2               
000531r 2               ; src/prelude.fth:4:19 in `over`
000531r 2               @OPCODE_156:   ; [c64_ir] TempLoad
000531r 2  E8               inx
000532r 2  E8               inx
000533r 2  A5 95            lda TEMP_PAX1
000535r 2  95 00            sta $00,x
000537r 2  A5 96            lda TEMP_PAX2
000539r 2  95 01            sta $01,x
00053Br 2               
00053Br 2               ; src/prelude.fth:4:25 in `over`
00053Br 2               @OPCODE_157:   ; [c64_ir] AltPop
00053Br 2  E8               inx
00053Cr 2  E8               inx
00053Dr 2  68               pla
00053Er 2  95 00            sta $00,x
000540r 2  68               pla
000541r 2  95 01            sta $01,x
000543r 2               
000543r 2               ; src/prelude.fth:4:28 in `over`
000543r 2               @OPCODE_158:   ; [c64_ir] TempLoad
000543r 2  E8               inx
000544r 2  E8               inx
000545r 2  A5 95            lda TEMP_PAX1
000547r 2  95 00            sta $00,x
000549r 2  A5 96            lda TEMP_PAX2
00054Br 2  95 01            sta $01,x
00054Dr 2               
00054Dr 2               ; src/prelude.fth:4:10 in `over`
00054Dr 2               @OPCODE_159:   ; [c64_ir] AltPush
00054Dr 2  CA               dex
00054Er 2  CA               dex
00054Fr 2  B5 03            lda $03,x
000551r 2  48               pha
000552r 2  B5 02            lda $02,x
000554r 2  48               pha
000555r 2               
000555r 2               ; src/prelude.fth:4:13 in `over`
000555r 2               @OPCODE_160:   ; [c64_ir] TempStore
000555r 2  CA               dex
000556r 2  CA               dex
000557r 2  B5 03            lda $03,x
000559r 2  85 96            sta TEMP_PAX2
00055Br 2  B5 02            lda $02,x
00055Dr 2  85 95            sta TEMP_PAX1
00055Fr 2               
00055Fr 2               ; src/prelude.fth:4:19 in `over`
00055Fr 2               @OPCODE_161:   ; [c64_ir] TempLoad
00055Fr 2  E8               inx
000560r 2  E8               inx
000561r 2  A5 95            lda TEMP_PAX1
000563r 2  95 00            sta $00,x
000565r 2  A5 96            lda TEMP_PAX2
000567r 2  95 01            sta $01,x
000569r 2               
000569r 2               ; src/prelude.fth:4:25 in `over`
000569r 2               @OPCODE_162:   ; [c64_ir] AltPop
000569r 2  E8               inx
00056Ar 2  E8               inx
00056Br 2  68               pla
00056Cr 2  95 00            sta $00,x
00056Er 2  68               pla
00056Fr 2  95 01            sta $01,x
000571r 2               
000571r 2               ; src/prelude.fth:4:28 in `over`
000571r 2               @OPCODE_163:   ; [c64_ir] TempLoad
000571r 2  E8               inx
000572r 2  E8               inx
000573r 2  A5 95            lda TEMP_PAX1
000575r 2  95 00            sta $00,x
000577r 2  A5 96            lda TEMP_PAX2
000579r 2  95 01            sta $01,x
00057Br 2               
00057Br 2               ; src/prelude.fth:33:29 in `loopimpl`
00057Br 2               @OPCODE_164:   ; [c64_ir] AltPush
00057Br 2  CA               dex
00057Cr 2  CA               dex
00057Dr 2  B5 03            lda $03,x
00057Fr 2  48               pha
000580r 2  B5 02            lda $02,x
000582r 2  48               pha
000583r 2               
000583r 2               ; src/prelude.fth:33:32 in `loopimpl`
000583r 2               @OPCODE_165:   ; [c64_ir] AltPush
000583r 2  CA               dex
000584r 2  CA               dex
000585r 2  B5 03            lda $03,x
000587r 2  48               pha
000588r 2  B5 02            lda $02,x
00058Ar 2  48               pha
00058Br 2               
00058Br 2               ; src/prelude.fth:14:12 in `invert`
00058Br 2               @OPCODE_166:   ; [c64_ir] PushLiteral(-1)
00058Br 2  E8               inx
00058Cr 2  E8               inx
00058Dr 2  A9 FF            lda #255
00058Fr 2  95 00            sta $00,x
000591r 2  A9 FF            lda #255
000593r 2  95 01            sta $01,x
000595r 2               
000595r 2               ; src/prelude.fth:14:15 in `invert`
000595r 2               @OPCODE_167:   ; [c64_ir] Nand
000595r 2                   ; 26
000595r 2  CA               dex
000596r 2  CA               dex
000597r 2  B5 00            lda $00,x
000599r 2  35 02            and $02,x
00059Br 2  49 FF            eor #$ff
00059Dr 2  95 00            sta $00,x
00059Fr 2  B5 01            lda $01,x
0005A1r 2  35 03            and $03,x
0005A3r 2  49 FF            eor #$ff
0005A5r 2  95 01            sta $01,x
0005A7r 2               
0005A7r 2               ; src/prelude.fth:15:19 in `negate`
0005A7r 2               @OPCODE_168:   ; [c64_ir] PushLiteral(1)
0005A7r 2  E8               inx
0005A8r 2  E8               inx
0005A9r 2  A9 01            lda #1
0005ABr 2  95 00            sta $00,x
0005ADr 2  A9 00            lda #0
0005AFr 2  95 01            sta $01,x
0005B1r 2               
0005B1r 2               ; src/prelude.fth:15:21 in `negate`
0005B1r 2               @OPCODE_169:   ; [c64_ir] Add
0005B1r 2                   ; 21
0005B1r 2  CA               dex
0005B2r 2  CA               dex
0005B3r 2  18               clc
0005B4r 2  B5 00            lda $00,x
0005B6r 2  75 02            adc $02,x
0005B8r 2  95 00            sta $00,x
0005BAr 2  B5 01            lda $01,x
0005BCr 2  75 03            adc $03,x
0005BEr 2  95 01            sta $01,x
0005C0r 2               
0005C0r 2               ; src/prelude.fth:16:19 in `-`
0005C0r 2               @OPCODE_170:   ; [c64_ir] Add
0005C0r 2                   ; 21
0005C0r 2  CA               dex
0005C1r 2  CA               dex
0005C2r 2  18               clc
0005C3r 2  B5 00            lda $00,x
0005C5r 2  75 02            adc $02,x
0005C7r 2  95 00            sta $00,x
0005C9r 2  B5 01            lda $01,x
0005CBr 2  75 03            adc $03,x
0005CDr 2  95 01            sta $01,x
0005CFr 2               
0005CFr 2               ; src/prelude.fth:21:8 in `0=`
0005CFr 2               @OPCODE_171:   ; [c64_ir] JumpIf0(17)
0005CFr 2  CA               dex
0005D0r 2  CA               dex
0005D1r 2  B5 02            lda $02,x
0005D3r 2  15 03            ora $03,x
0005D5r 2  D0 03            bne *+5
0005D7r 2  4C rr rr         jmp @target_17
0005DAr 2               
0005DAr 2               @target_16:
0005DAr 2               
0005DAr 2               ; src/prelude.fth:21:11 in `0=`
0005DAr 2               @OPCODE_173:   ; [c64_ir] PushLiteral(0)
0005DAr 2  E8               inx
0005DBr 2  E8               inx
0005DCr 2  A9 00            lda #0
0005DEr 2  95 00            sta $00,x
0005E0r 2  A9 00            lda #0
0005E2r 2  95 01            sta $01,x
0005E4r 2               
0005E4r 2               ; src/prelude.fth:21:13 in `0=`
0005E4r 2               @OPCODE_174:   ; [c64_ir] JumpElse(18)
0005E4r 2  4C rr rr         jmp @target_18
0005E7r 2               
0005E7r 2               @target_17:
0005E7r 2               
0005E7r 2               ; src/prelude.fth:21:18 in `0=`
0005E7r 2               @OPCODE_176:   ; [c64_ir] PushLiteral(-1)
0005E7r 2  E8               inx
0005E8r 2  E8               inx
0005E9r 2  A9 FF            lda #255
0005EBr 2  95 00            sta $00,x
0005EDr 2  A9 FF            lda #255
0005EFr 2  95 01            sta $01,x
0005F1r 2               
0005F1r 2               ; src/prelude.fth:21:21 in `0=`
0005F1r 2               @OPCODE_177:   ; [c64_ir] JumpTarget(17)
0005F1r 2               
0005F1r 2               @target_18:
0005F1r 2               
0005F1r 2               ; src/prelude.fth:3:10 in `swap`
0005F1r 2               @OPCODE_179:   ; [c64_ir] AltPush
0005F1r 2  CA               dex
0005F2r 2  CA               dex
0005F3r 2  B5 03            lda $03,x
0005F5r 2  48               pha
0005F6r 2  B5 02            lda $02,x
0005F8r 2  48               pha
0005F9r 2               
0005F9r 2               ; src/prelude.fth:3:19 in `swap`
0005F9r 2               @OPCODE_180:   ; [c64_ir] AltPop
0005F9r 2  E8               inx
0005FAr 2  E8               inx
0005FBr 2  68               pla
0005FCr 2  95 00            sta $00,x
0005FEr 2  68               pla
0005FFr 2  95 01            sta $01,x
000601r 2               
000601r 2               ; src/prelude.fth:44:25 in `*`
000601r 2               @OPCODE_181:   ; [c64_ir] LoopIf0(15)
000601r 2  CA               dex
000602r 2  CA               dex
000603r 2  B5 02            lda $02,x
000605r 2  15 03            ora $03,x
000607r 2  D0 03            bne *+5
000609r 2  4C rr rr         jmp @target_15
00060Cr 2               
00060Cr 2               @target_19:
00060Cr 2               
00060Cr 2               ; src/prelude.fth:44:25 in `*`
00060Cr 2               @OPCODE_183:   ; [c64_ir] AltPop
00060Cr 2  E8               inx
00060Dr 2  E8               inx
00060Er 2  68               pla
00060Fr 2  95 00            sta $00,x
000611r 2  68               pla
000612r 2  95 01            sta $01,x
000614r 2               
000614r 2               ; src/prelude.fth:44:25 in `*`
000614r 2               @OPCODE_184:   ; [c64_ir] Drop
000614r 2  CA               dex
000615r 2  CA               dex
000616r 2               
000616r 2               ; src/prelude.fth:44:25 in `*`
000616r 2               @OPCODE_185:   ; [c64_ir] AltPop
000616r 2  E8               inx
000617r 2  E8               inx
000618r 2  68               pla
000619r 2  95 00            sta $00,x
00061Br 2  68               pla
00061Cr 2  95 01            sta $01,x
00061Er 2               
00061Er 2               ; src/prelude.fth:44:25 in `*`
00061Er 2               @OPCODE_186:   ; [c64_ir] Drop
00061Er 2  CA               dex
00061Fr 2  CA               dex
000620r 2               
000620r 2               ; src/prelude.fth:3:10 in `swap`
000620r 2               @OPCODE_187:   ; [c64_ir] AltPush
000620r 2  CA               dex
000621r 2  CA               dex
000622r 2  B5 03            lda $03,x
000624r 2  48               pha
000625r 2  B5 02            lda $02,x
000627r 2  48               pha
000628r 2               
000628r 2               ; src/prelude.fth:3:13 in `swap`
000628r 2               @OPCODE_188:   ; [c64_ir] TempStore
000628r 2  CA               dex
000629r 2  CA               dex
00062Ar 2  B5 03            lda $03,x
00062Cr 2  85 96            sta TEMP_PAX2
00062Er 2  B5 02            lda $02,x
000630r 2  85 95            sta TEMP_PAX1
000632r 2               
000632r 2               ; src/prelude.fth:3:19 in `swap`
000632r 2               @OPCODE_189:   ; [c64_ir] AltPop
000632r 2  E8               inx
000633r 2  E8               inx
000634r 2  68               pla
000635r 2  95 00            sta $00,x
000637r 2  68               pla
000638r 2  95 01            sta $01,x
00063Ar 2               
00063Ar 2               ; <inline>:0:0 in `main`
00063Ar 2               @OPCODE_190:   ; [c64_ir] AltPop
00063Ar 2  E8               inx
00063Br 2  E8               inx
00063Cr 2  68               pla
00063Dr 2  95 00            sta $00,x
00063Fr 2  68               pla
000640r 2  95 01            sta $01,x
000642r 2               
000642r 2               ; <inline>:0:0 in `main`
000642r 2               @OPCODE_191:   ; [c64_ir] Drop
000642r 2  CA               dex
000643r 2  CA               dex
000644r 2               
000644r 2               ; snake.pax:70:5 in `draw-walls`
000644r 2               @OPCODE_192:   ; [c64_ir] PushLiteral(40)
000644r 2  E8               inx
000645r 2  E8               inx
000646r 2  A9 28            lda #40
000648r 2  95 00            sta $00,x
00064Ar 2  A9 00            lda #0
00064Cr 2  95 01            sta $01,x
00064Er 2               
00064Er 2               ; snake.pax:70:11 in `draw-walls`
00064Er 2               @OPCODE_193:   ; [c64_ir] PushLiteral(0)
00064Er 2  E8               inx
00064Fr 2  E8               inx
000650r 2  A9 00            lda #0
000652r 2  95 00            sta $00,x
000654r 2  A9 00            lda #0
000656r 2  95 01            sta $01,x
000658r 2               
000658r 2               ; snake.pax:70:13 in `draw-walls`
000658r 2               @OPCODE_194:   ; [c64_ir] AltPush
000658r 2  CA               dex
000659r 2  CA               dex
00065Ar 2  B5 03            lda $03,x
00065Cr 2  48               pha
00065Dr 2  B5 02            lda $02,x
00065Fr 2  48               pha
000660r 2               
000660r 2               ; snake.pax:70:13 in `draw-walls`
000660r 2               @OPCODE_195:   ; [c64_ir] AltPush
000660r 2  CA               dex
000661r 2  CA               dex
000662r 2  B5 03            lda $03,x
000664r 2  48               pha
000665r 2  B5 02            lda $02,x
000667r 2  48               pha
000668r 2               
000668r 2               ; snake.pax:70:13 in `draw-walls`
000668r 2               @OPCODE_196:   ; [c64_ir] LoopTarget(19)
000668r 2               
000668r 2               @target_20:
000668r 2               
000668r 2               ; src/prelude.fth:4:13 in `over`
000668r 2               @OPCODE_198:   ; [c64_ir] TempStore
000668r 2  CA               dex
000669r 2  CA               dex
00066Ar 2  B5 03            lda $03,x
00066Cr 2  85 96            sta TEMP_PAX2
00066Er 2  B5 02            lda $02,x
000670r 2  85 95            sta TEMP_PAX1
000672r 2               
000672r 2               ; src/prelude.fth:4:19 in `over`
000672r 2               @OPCODE_199:   ; [c64_ir] TempLoad
000672r 2  E8               inx
000673r 2  E8               inx
000674r 2  A5 95            lda TEMP_PAX1
000676r 2  95 00            sta $00,x
000678r 2  A5 96            lda TEMP_PAX2
00067Ar 2  95 01            sta $01,x
00067Cr 2               
00067Cr 2               ; src/prelude.fth:4:25 in `over`
00067Cr 2               @OPCODE_200:   ; [c64_ir] PushLiteral(230)
00067Cr 2  E8               inx
00067Dr 2  E8               inx
00067Er 2  A9 E6            lda #230
000680r 2  95 00            sta $00,x
000682r 2  A9 00            lda #0
000684r 2  95 01            sta $01,x
000686r 2               
000686r 2               ; src/prelude.fth:4:28 in `over`
000686r 2               @OPCODE_201:   ; [c64_ir] TempLoad
000686r 2  E8               inx
000687r 2  E8               inx
000688r 2  A5 95            lda TEMP_PAX1
00068Ar 2  95 00            sta $00,x
00068Cr 2  A5 96            lda TEMP_PAX2
00068Er 2  95 01            sta $01,x
000690r 2               
000690r 2               ; src/prelude.fth:38:8 in `i`
000690r 2               @OPCODE_202:   ; [c64_ir] AltPop
000690r 2  E8               inx
000691r 2  E8               inx
000692r 2  68               pla
000693r 2  95 00            sta $00,x
000695r 2  68               pla
000696r 2  95 01            sta $01,x
000698r 2               
000698r 2               ; src/prelude.fth:38:11 in `i`
000698r 2               @OPCODE_203:   ; [c64_ir] AltPop
000698r 2  E8               inx
000699r 2  E8               inx
00069Ar 2  68               pla
00069Br 2  95 00            sta $00,x
00069Dr 2  68               pla
00069Er 2  95 01            sta $01,x
0006A0r 2               
0006A0r 2               ; src/prelude.fth:38:14 in `i`
0006A0r 2               @OPCODE_204:   ; [c64_ir] TempStore
0006A0r 2  CA               dex
0006A1r 2  CA               dex
0006A2r 2  B5 03            lda $03,x
0006A4r 2  85 96            sta TEMP_PAX2
0006A6r 2  B5 02            lda $02,x
0006A8r 2  85 95            sta TEMP_PAX1
0006AAr 2               
0006AAr 2               ; src/prelude.fth:38:20 in `i`
0006AAr 2               @OPCODE_205:   ; [c64_ir] TempLoad
0006AAr 2  E8               inx
0006ABr 2  E8               inx
0006ACr 2  A5 95            lda TEMP_PAX1
0006AEr 2  95 00            sta $00,x
0006B0r 2  A5 96            lda TEMP_PAX2
0006B2r 2  95 01            sta $01,x
0006B4r 2               
0006B4r 2               ; src/prelude.fth:38:26 in `i`
0006B4r 2               @OPCODE_206:   ; [c64_ir] AltPush
0006B4r 2  CA               dex
0006B5r 2  CA               dex
0006B6r 2  B5 03            lda $03,x
0006B8r 2  48               pha
0006B9r 2  B5 02            lda $02,x
0006BBr 2  48               pha
0006BCr 2               
0006BCr 2               ; src/prelude.fth:38:29 in `i`
0006BCr 2               @OPCODE_207:   ; [c64_ir] AltPush
0006BCr 2  CA               dex
0006BDr 2  CA               dex
0006BEr 2  B5 03            lda $03,x
0006C0r 2  48               pha
0006C1r 2  B5 02            lda $02,x
0006C3r 2  48               pha
0006C4r 2               
0006C4r 2               ; src/prelude.fth:38:35 in `i`
0006C4r 2               @OPCODE_208:   ; [c64_ir] TempLoad
0006C4r 2  E8               inx
0006C5r 2  E8               inx
0006C6r 2  A5 95            lda TEMP_PAX1
0006C8r 2  95 00            sta $00,x
0006CAr 2  A5 96            lda TEMP_PAX2
0006CCr 2  95 01            sta $01,x
0006CEr 2               
0006CEr 2               ; snake.pax:71:21 in `draw-walls`
0006CEr 2               @OPCODE_209:   ; [c64_ir] Add
0006CEr 2                   ; 21
0006CEr 2  CA               dex
0006CFr 2  CA               dex
0006D0r 2  18               clc
0006D1r 2  B5 00            lda $00,x
0006D3r 2  75 02            adc $02,x
0006D5r 2  95 00            sta $00,x
0006D7r 2  B5 01            lda $01,x
0006D9r 2  75 03            adc $03,x
0006DBr 2  95 01            sta $01,x
0006DDr 2               
0006DDr 2               ; snake.pax:49:34 in `draw-index`
0006DDr 2               @OPCODE_210:   ; [c64_ir] PushLiteral(1024)
0006DDr 2  E8               inx
0006DEr 2  E8               inx
0006DFr 2  A9 00            lda #0
0006E1r 2  95 00            sta $00,x
0006E3r 2  A9 04            lda #4
0006E5r 2  95 01            sta $01,x
0006E7r 2               
0006E7r 2               ; snake.pax:49:43 in `draw-index`
0006E7r 2               @OPCODE_211:   ; [c64_ir] Add
0006E7r 2                   ; 21
0006E7r 2  CA               dex
0006E8r 2  CA               dex
0006E9r 2  18               clc
0006EAr 2  B5 00            lda $00,x
0006ECr 2  75 02            adc $02,x
0006EEr 2  95 00            sta $00,x
0006F0r 2  B5 01            lda $01,x
0006F2r 2  75 03            adc $03,x
0006F4r 2  95 01            sta $01,x
0006F6r 2               
0006F6r 2               ; snake.pax:49:45 in `draw-index`
0006F6r 2               @OPCODE_212:   ; [c64_ir] Store8
0006F6r 2  CA               dex
0006F7r 2  CA               dex
0006F8r 2  CA               dex
0006F9r 2  CA               dex
0006FAr 2  B5 02            lda $02,x
0006FCr 2  81 04            sta ($04,x)
0006FEr 2                   ; TODO high byte
0006FEr 2               
0006FEr 2               ; src/prelude.fth:33:15 in `loopimpl`
0006FEr 2               @OPCODE_213:   ; [c64_ir] AltPop
0006FEr 2  E8               inx
0006FFr 2  E8               inx
000700r 2  68               pla
000701r 2  95 00            sta $00,x
000703r 2  68               pla
000704r 2  95 01            sta $01,x
000706r 2               
000706r 2               ; src/prelude.fth:33:18 in `loopimpl`
000706r 2               @OPCODE_214:   ; [c64_ir] AltPop
000706r 2  E8               inx
000707r 2  E8               inx
000708r 2  68               pla
000709r 2  95 00            sta $00,x
00070Br 2  68               pla
00070Cr 2  95 01            sta $01,x
00070Er 2               
00070Er 2               ; src/prelude.fth:18:8 in `1+`
00070Er 2               @OPCODE_215:   ; [c64_ir] PushLiteral(1)
00070Er 2  E8               inx
00070Fr 2  E8               inx
000710r 2  A9 01            lda #1
000712r 2  95 00            sta $00,x
000714r 2  A9 00            lda #0
000716r 2  95 01            sta $01,x
000718r 2               
000718r 2               ; src/prelude.fth:18:10 in `1+`
000718r 2               @OPCODE_216:   ; [c64_ir] Add
000718r 2                   ; 21
000718r 2  CA               dex
000719r 2  CA               dex
00071Ar 2  18               clc
00071Br 2  B5 00            lda $00,x
00071Dr 2  75 02            adc $02,x
00071Fr 2  95 00            sta $00,x
000721r 2  B5 01            lda $01,x
000723r 2  75 03            adc $03,x
000725r 2  95 01            sta $01,x
000727r 2               
000727r 2               ; src/prelude.fth:4:10 in `over`
000727r 2               @OPCODE_217:   ; [c64_ir] AltPush
000727r 2  CA               dex
000728r 2  CA               dex
000729r 2  B5 03            lda $03,x
00072Br 2  48               pha
00072Cr 2  B5 02            lda $02,x
00072Er 2  48               pha
00072Fr 2               
00072Fr 2               ; src/prelude.fth:4:13 in `over`
00072Fr 2               @OPCODE_218:   ; [c64_ir] TempStore
00072Fr 2  CA               dex
000730r 2  CA               dex
000731r 2  B5 03            lda $03,x
000733r 2  85 96            sta TEMP_PAX2
000735r 2  B5 02            lda $02,x
000737r 2  85 95            sta TEMP_PAX1
000739r 2               
000739r 2               ; src/prelude.fth:4:19 in `over`
000739r 2               @OPCODE_219:   ; [c64_ir] TempLoad
000739r 2  E8               inx
00073Ar 2  E8               inx
00073Br 2  A5 95            lda TEMP_PAX1
00073Dr 2  95 00            sta $00,x
00073Fr 2  A5 96            lda TEMP_PAX2
000741r 2  95 01            sta $01,x
000743r 2               
000743r 2               ; src/prelude.fth:4:25 in `over`
000743r 2               @OPCODE_220:   ; [c64_ir] AltPop
000743r 2  E8               inx
000744r 2  E8               inx
000745r 2  68               pla
000746r 2  95 00            sta $00,x
000748r 2  68               pla
000749r 2  95 01            sta $01,x
00074Br 2               
00074Br 2               ; src/prelude.fth:4:28 in `over`
00074Br 2               @OPCODE_221:   ; [c64_ir] TempLoad
00074Br 2  E8               inx
00074Cr 2  E8               inx
00074Dr 2  A5 95            lda TEMP_PAX1
00074Fr 2  95 00            sta $00,x
000751r 2  A5 96            lda TEMP_PAX2
000753r 2  95 01            sta $01,x
000755r 2               
000755r 2               ; src/prelude.fth:4:10 in `over`
000755r 2               @OPCODE_222:   ; [c64_ir] AltPush
000755r 2  CA               dex
000756r 2  CA               dex
000757r 2  B5 03            lda $03,x
000759r 2  48               pha
00075Ar 2  B5 02            lda $02,x
00075Cr 2  48               pha
00075Dr 2               
00075Dr 2               ; src/prelude.fth:4:13 in `over`
00075Dr 2               @OPCODE_223:   ; [c64_ir] TempStore
00075Dr 2  CA               dex
00075Er 2  CA               dex
00075Fr 2  B5 03            lda $03,x
000761r 2  85 96            sta TEMP_PAX2
000763r 2  B5 02            lda $02,x
000765r 2  85 95            sta TEMP_PAX1
000767r 2               
000767r 2               ; src/prelude.fth:4:19 in `over`
000767r 2               @OPCODE_224:   ; [c64_ir] TempLoad
000767r 2  E8               inx
000768r 2  E8               inx
000769r 2  A5 95            lda TEMP_PAX1
00076Br 2  95 00            sta $00,x
00076Dr 2  A5 96            lda TEMP_PAX2
00076Fr 2  95 01            sta $01,x
000771r 2               
000771r 2               ; src/prelude.fth:4:25 in `over`
000771r 2               @OPCODE_225:   ; [c64_ir] AltPop
000771r 2  E8               inx
000772r 2  E8               inx
000773r 2  68               pla
000774r 2  95 00            sta $00,x
000776r 2  68               pla
000777r 2  95 01            sta $01,x
000779r 2               
000779r 2               ; src/prelude.fth:4:28 in `over`
000779r 2               @OPCODE_226:   ; [c64_ir] TempLoad
000779r 2  E8               inx
00077Ar 2  E8               inx
00077Br 2  A5 95            lda TEMP_PAX1
00077Dr 2  95 00            sta $00,x
00077Fr 2  A5 96            lda TEMP_PAX2
000781r 2  95 01            sta $01,x
000783r 2               
000783r 2               ; src/prelude.fth:33:29 in `loopimpl`
000783r 2               @OPCODE_227:   ; [c64_ir] AltPush
000783r 2  CA               dex
000784r 2  CA               dex
000785r 2  B5 03            lda $03,x
000787r 2  48               pha
000788r 2  B5 02            lda $02,x
00078Ar 2  48               pha
00078Br 2               
00078Br 2               ; src/prelude.fth:33:32 in `loopimpl`
00078Br 2               @OPCODE_228:   ; [c64_ir] AltPush
00078Br 2  CA               dex
00078Cr 2  CA               dex
00078Dr 2  B5 03            lda $03,x
00078Fr 2  48               pha
000790r 2  B5 02            lda $02,x
000792r 2  48               pha
000793r 2               
000793r 2               ; src/prelude.fth:14:12 in `invert`
000793r 2               @OPCODE_229:   ; [c64_ir] PushLiteral(-1)
000793r 2  E8               inx
000794r 2  E8               inx
000795r 2  A9 FF            lda #255
000797r 2  95 00            sta $00,x
000799r 2  A9 FF            lda #255
00079Br 2  95 01            sta $01,x
00079Dr 2               
00079Dr 2               ; src/prelude.fth:14:15 in `invert`
00079Dr 2               @OPCODE_230:   ; [c64_ir] Nand
00079Dr 2                   ; 26
00079Dr 2  CA               dex
00079Er 2  CA               dex
00079Fr 2  B5 00            lda $00,x
0007A1r 2  35 02            and $02,x
0007A3r 2  49 FF            eor #$ff
0007A5r 2  95 00            sta $00,x
0007A7r 2  B5 01            lda $01,x
0007A9r 2  35 03            and $03,x
0007ABr 2  49 FF            eor #$ff
0007ADr 2  95 01            sta $01,x
0007AFr 2               
0007AFr 2               ; src/prelude.fth:15:19 in `negate`
0007AFr 2               @OPCODE_231:   ; [c64_ir] PushLiteral(1)
0007AFr 2  E8               inx
0007B0r 2  E8               inx
0007B1r 2  A9 01            lda #1
0007B3r 2  95 00            sta $00,x
0007B5r 2  A9 00            lda #0
0007B7r 2  95 01            sta $01,x
0007B9r 2               
0007B9r 2               ; src/prelude.fth:15:21 in `negate`
0007B9r 2               @OPCODE_232:   ; [c64_ir] Add
0007B9r 2                   ; 21
0007B9r 2  CA               dex
0007BAr 2  CA               dex
0007BBr 2  18               clc
0007BCr 2  B5 00            lda $00,x
0007BEr 2  75 02            adc $02,x
0007C0r 2  95 00            sta $00,x
0007C2r 2  B5 01            lda $01,x
0007C4r 2  75 03            adc $03,x
0007C6r 2  95 01            sta $01,x
0007C8r 2               
0007C8r 2               ; src/prelude.fth:16:19 in `-`
0007C8r 2               @OPCODE_233:   ; [c64_ir] Add
0007C8r 2                   ; 21
0007C8r 2  CA               dex
0007C9r 2  CA               dex
0007CAr 2  18               clc
0007CBr 2  B5 00            lda $00,x
0007CDr 2  75 02            adc $02,x
0007CFr 2  95 00            sta $00,x
0007D1r 2  B5 01            lda $01,x
0007D3r 2  75 03            adc $03,x
0007D5r 2  95 01            sta $01,x
0007D7r 2               
0007D7r 2               ; src/prelude.fth:21:8 in `0=`
0007D7r 2               @OPCODE_234:   ; [c64_ir] JumpIf0(22)
0007D7r 2  CA               dex
0007D8r 2  CA               dex
0007D9r 2  B5 02            lda $02,x
0007DBr 2  15 03            ora $03,x
0007DDr 2  D0 03            bne *+5
0007DFr 2  4C rr rr         jmp @target_22
0007E2r 2               
0007E2r 2               @target_21:
0007E2r 2               
0007E2r 2               ; src/prelude.fth:21:11 in `0=`
0007E2r 2               @OPCODE_236:   ; [c64_ir] PushLiteral(0)
0007E2r 2  E8               inx
0007E3r 2  E8               inx
0007E4r 2  A9 00            lda #0
0007E6r 2  95 00            sta $00,x
0007E8r 2  A9 00            lda #0
0007EAr 2  95 01            sta $01,x
0007ECr 2               
0007ECr 2               ; src/prelude.fth:21:13 in `0=`
0007ECr 2               @OPCODE_237:   ; [c64_ir] JumpElse(23)
0007ECr 2  4C rr rr         jmp @target_23
0007EFr 2               
0007EFr 2               @target_22:
0007EFr 2               
0007EFr 2               ; src/prelude.fth:21:18 in `0=`
0007EFr 2               @OPCODE_239:   ; [c64_ir] PushLiteral(-1)
0007EFr 2  E8               inx
0007F0r 2  E8               inx
0007F1r 2  A9 FF            lda #255
0007F3r 2  95 00            sta $00,x
0007F5r 2  A9 FF            lda #255
0007F7r 2  95 01            sta $01,x
0007F9r 2               
0007F9r 2               ; src/prelude.fth:21:21 in `0=`
0007F9r 2               @OPCODE_240:   ; [c64_ir] JumpTarget(22)
0007F9r 2               
0007F9r 2               @target_23:
0007F9r 2               
0007F9r 2               ; src/prelude.fth:3:10 in `swap`
0007F9r 2               @OPCODE_242:   ; [c64_ir] AltPush
0007F9r 2  CA               dex
0007FAr 2  CA               dex
0007FBr 2  B5 03            lda $03,x
0007FDr 2  48               pha
0007FEr 2  B5 02            lda $02,x
000800r 2  48               pha
000801r 2               
000801r 2               ; src/prelude.fth:3:19 in `swap`
000801r 2               @OPCODE_243:   ; [c64_ir] AltPop
000801r 2  E8               inx
000802r 2  E8               inx
000803r 2  68               pla
000804r 2  95 00            sta $00,x
000806r 2  68               pla
000807r 2  95 01            sta $01,x
000809r 2               
000809r 2               ; snake.pax:72:5 in `draw-walls`
000809r 2               @OPCODE_244:   ; [c64_ir] LoopIf0(20)
000809r 2  CA               dex
00080Ar 2  CA               dex
00080Br 2  B5 02            lda $02,x
00080Dr 2  15 03            ora $03,x
00080Fr 2  D0 03            bne *+5
000811r 2  4C rr rr         jmp @target_20
000814r 2               
000814r 2               @target_24:
000814r 2               
000814r 2               ; snake.pax:72:5 in `draw-walls`
000814r 2               @OPCODE_246:   ; [c64_ir] AltPop
000814r 2  E8               inx
000815r 2  E8               inx
000816r 2  68               pla
000817r 2  95 00            sta $00,x
000819r 2  68               pla
00081Ar 2  95 01            sta $01,x
00081Cr 2               
00081Cr 2               ; snake.pax:72:5 in `draw-walls`
00081Cr 2               @OPCODE_247:   ; [c64_ir] Drop
00081Cr 2  CA               dex
00081Dr 2  CA               dex
00081Er 2               
00081Er 2               ; snake.pax:72:5 in `draw-walls`
00081Er 2               @OPCODE_248:   ; [c64_ir] AltPop
00081Er 2  E8               inx
00081Fr 2  E8               inx
000820r 2  68               pla
000821r 2  95 00            sta $00,x
000823r 2  68               pla
000824r 2  95 01            sta $01,x
000826r 2               
000826r 2               ; snake.pax:72:5 in `draw-walls`
000826r 2               @OPCODE_249:   ; [c64_ir] Drop
000826r 2  CA               dex
000827r 2  CA               dex
000828r 2               
000828r 2               ; snake.pax:73:5 in `draw-walls`
000828r 2               @OPCODE_250:   ; [c64_ir] Drop
000828r 2  CA               dex
000829r 2  CA               dex
00082Ar 2               
00082Ar 2               ; snake.pax:74:5 in `draw-walls`
00082Ar 2               @OPCODE_251:   ; [c64_ir] PushLiteral(40)
00082Ar 2  E8               inx
00082Br 2  E8               inx
00082Cr 2  A9 28            lda #40
00082Er 2  95 00            sta $00,x
000830r 2  A9 00            lda #0
000832r 2  95 01            sta $01,x
000834r 2               
000834r 2               ; snake.pax:74:11 in `draw-walls`
000834r 2               @OPCODE_252:   ; [c64_ir] PushLiteral(0)
000834r 2  E8               inx
000835r 2  E8               inx
000836r 2  A9 00            lda #0
000838r 2  95 00            sta $00,x
00083Ar 2  A9 00            lda #0
00083Cr 2  95 01            sta $01,x
00083Er 2               
00083Er 2               ; snake.pax:74:13 in `draw-walls`
00083Er 2               @OPCODE_253:   ; [c64_ir] AltPush
00083Er 2  CA               dex
00083Fr 2  CA               dex
000840r 2  B5 03            lda $03,x
000842r 2  48               pha
000843r 2  B5 02            lda $02,x
000845r 2  48               pha
000846r 2               
000846r 2               ; snake.pax:74:13 in `draw-walls`
000846r 2               @OPCODE_254:   ; [c64_ir] AltPush
000846r 2  CA               dex
000847r 2  CA               dex
000848r 2  B5 03            lda $03,x
00084Ar 2  48               pha
00084Br 2  B5 02            lda $02,x
00084Dr 2  48               pha
00084Er 2               
00084Er 2               ; snake.pax:74:13 in `draw-walls`
00084Er 2               @OPCODE_255:   ; [c64_ir] LoopTarget(24)
00084Er 2               
00084Er 2               @target_25:
00084Er 2               
00084Er 2               ; snake.pax:75:9 in `draw-walls`
00084Er 2               @OPCODE_257:   ; [c64_ir] PushLiteral(230)
00084Er 2  E8               inx
00084Fr 2  E8               inx
000850r 2  A9 E6            lda #230
000852r 2  95 00            sta $00,x
000854r 2  A9 00            lda #0
000856r 2  95 01            sta $01,x
000858r 2               
000858r 2               ; src/prelude.fth:38:8 in `i`
000858r 2               @OPCODE_258:   ; [c64_ir] AltPop
000858r 2  E8               inx
000859r 2  E8               inx
00085Ar 2  68               pla
00085Br 2  95 00            sta $00,x
00085Dr 2  68               pla
00085Er 2  95 01            sta $01,x
000860r 2               
000860r 2               ; src/prelude.fth:38:11 in `i`
000860r 2               @OPCODE_259:   ; [c64_ir] AltPop
000860r 2  E8               inx
000861r 2  E8               inx
000862r 2  68               pla
000863r 2  95 00            sta $00,x
000865r 2  68               pla
000866r 2  95 01            sta $01,x
000868r 2               
000868r 2               ; src/prelude.fth:38:14 in `i`
000868r 2               @OPCODE_260:   ; [c64_ir] TempStore
000868r 2  CA               dex
000869r 2  CA               dex
00086Ar 2  B5 03            lda $03,x
00086Cr 2  85 96            sta TEMP_PAX2
00086Er 2  B5 02            lda $02,x
000870r 2  85 95            sta TEMP_PAX1
000872r 2               
000872r 2               ; src/prelude.fth:38:20 in `i`
000872r 2               @OPCODE_261:   ; [c64_ir] TempLoad
000872r 2  E8               inx
000873r 2  E8               inx
000874r 2  A5 95            lda TEMP_PAX1
000876r 2  95 00            sta $00,x
000878r 2  A5 96            lda TEMP_PAX2
00087Ar 2  95 01            sta $01,x
00087Cr 2               
00087Cr 2               ; src/prelude.fth:38:26 in `i`
00087Cr 2               @OPCODE_262:   ; [c64_ir] AltPush
00087Cr 2  CA               dex
00087Dr 2  CA               dex
00087Er 2  B5 03            lda $03,x
000880r 2  48               pha
000881r 2  B5 02            lda $02,x
000883r 2  48               pha
000884r 2               
000884r 2               ; src/prelude.fth:38:29 in `i`
000884r 2               @OPCODE_263:   ; [c64_ir] AltPush
000884r 2  CA               dex
000885r 2  CA               dex
000886r 2  B5 03            lda $03,x
000888r 2  48               pha
000889r 2  B5 02            lda $02,x
00088Br 2  48               pha
00088Cr 2               
00088Cr 2               ; src/prelude.fth:38:35 in `i`
00088Cr 2               @OPCODE_264:   ; [c64_ir] TempLoad
00088Cr 2  E8               inx
00088Dr 2  E8               inx
00088Er 2  A5 95            lda TEMP_PAX1
000890r 2  95 00            sta $00,x
000892r 2  A5 96            lda TEMP_PAX2
000894r 2  95 01            sta $01,x
000896r 2               
000896r 2               ; snake.pax:49:34 in `draw-index`
000896r 2               @OPCODE_265:   ; [c64_ir] PushLiteral(1024)
000896r 2  E8               inx
000897r 2  E8               inx
000898r 2  A9 00            lda #0
00089Ar 2  95 00            sta $00,x
00089Cr 2  A9 04            lda #4
00089Er 2  95 01            sta $01,x
0008A0r 2               
0008A0r 2               ; snake.pax:49:43 in `draw-index`
0008A0r 2               @OPCODE_266:   ; [c64_ir] Add
0008A0r 2                   ; 21
0008A0r 2  CA               dex
0008A1r 2  CA               dex
0008A2r 2  18               clc
0008A3r 2  B5 00            lda $00,x
0008A5r 2  75 02            adc $02,x
0008A7r 2  95 00            sta $00,x
0008A9r 2  B5 01            lda $01,x
0008ABr 2  75 03            adc $03,x
0008ADr 2  95 01            sta $01,x
0008AFr 2               
0008AFr 2               ; snake.pax:49:45 in `draw-index`
0008AFr 2               @OPCODE_267:   ; [c64_ir] Store8
0008AFr 2  CA               dex
0008B0r 2  CA               dex
0008B1r 2  CA               dex
0008B2r 2  CA               dex
0008B3r 2  B5 02            lda $02,x
0008B5r 2  81 04            sta ($04,x)
0008B7r 2                   ; TODO high byte
0008B7r 2               
0008B7r 2               ; src/prelude.fth:33:15 in `loopimpl`
0008B7r 2               @OPCODE_268:   ; [c64_ir] AltPop
0008B7r 2  E8               inx
0008B8r 2  E8               inx
0008B9r 2  68               pla
0008BAr 2  95 00            sta $00,x
0008BCr 2  68               pla
0008BDr 2  95 01            sta $01,x
0008BFr 2               
0008BFr 2               ; src/prelude.fth:33:18 in `loopimpl`
0008BFr 2               @OPCODE_269:   ; [c64_ir] AltPop
0008BFr 2  E8               inx
0008C0r 2  E8               inx
0008C1r 2  68               pla
0008C2r 2  95 00            sta $00,x
0008C4r 2  68               pla
0008C5r 2  95 01            sta $01,x
0008C7r 2               
0008C7r 2               ; src/prelude.fth:18:8 in `1+`
0008C7r 2               @OPCODE_270:   ; [c64_ir] PushLiteral(1)
0008C7r 2  E8               inx
0008C8r 2  E8               inx
0008C9r 2  A9 01            lda #1
0008CBr 2  95 00            sta $00,x
0008CDr 2  A9 00            lda #0
0008CFr 2  95 01            sta $01,x
0008D1r 2               
0008D1r 2               ; src/prelude.fth:18:10 in `1+`
0008D1r 2               @OPCODE_271:   ; [c64_ir] Add
0008D1r 2                   ; 21
0008D1r 2  CA               dex
0008D2r 2  CA               dex
0008D3r 2  18               clc
0008D4r 2  B5 00            lda $00,x
0008D6r 2  75 02            adc $02,x
0008D8r 2  95 00            sta $00,x
0008DAr 2  B5 01            lda $01,x
0008DCr 2  75 03            adc $03,x
0008DEr 2  95 01            sta $01,x
0008E0r 2               
0008E0r 2               ; src/prelude.fth:4:10 in `over`
0008E0r 2               @OPCODE_272:   ; [c64_ir] AltPush
0008E0r 2  CA               dex
0008E1r 2  CA               dex
0008E2r 2  B5 03            lda $03,x
0008E4r 2  48               pha
0008E5r 2  B5 02            lda $02,x
0008E7r 2  48               pha
0008E8r 2               
0008E8r 2               ; src/prelude.fth:4:13 in `over`
0008E8r 2               @OPCODE_273:   ; [c64_ir] TempStore
0008E8r 2  CA               dex
0008E9r 2  CA               dex
0008EAr 2  B5 03            lda $03,x
0008ECr 2  85 96            sta TEMP_PAX2
0008EEr 2  B5 02            lda $02,x
0008F0r 2  85 95            sta TEMP_PAX1
0008F2r 2               
0008F2r 2               ; src/prelude.fth:4:19 in `over`
0008F2r 2               @OPCODE_274:   ; [c64_ir] TempLoad
0008F2r 2  E8               inx
0008F3r 2  E8               inx
0008F4r 2  A5 95            lda TEMP_PAX1
0008F6r 2  95 00            sta $00,x
0008F8r 2  A5 96            lda TEMP_PAX2
0008FAr 2  95 01            sta $01,x
0008FCr 2               
0008FCr 2               ; src/prelude.fth:4:25 in `over`
0008FCr 2               @OPCODE_275:   ; [c64_ir] AltPop
0008FCr 2  E8               inx
0008FDr 2  E8               inx
0008FEr 2  68               pla
0008FFr 2  95 00            sta $00,x
000901r 2  68               pla
000902r 2  95 01            sta $01,x
000904r 2               
000904r 2               ; src/prelude.fth:4:28 in `over`
000904r 2               @OPCODE_276:   ; [c64_ir] TempLoad
000904r 2  E8               inx
000905r 2  E8               inx
000906r 2  A5 95            lda TEMP_PAX1
000908r 2  95 00            sta $00,x
00090Ar 2  A5 96            lda TEMP_PAX2
00090Cr 2  95 01            sta $01,x
00090Er 2               
00090Er 2               ; src/prelude.fth:4:10 in `over`
00090Er 2               @OPCODE_277:   ; [c64_ir] AltPush
00090Er 2  CA               dex
00090Fr 2  CA               dex
000910r 2  B5 03            lda $03,x
000912r 2  48               pha
000913r 2  B5 02            lda $02,x
000915r 2  48               pha
000916r 2               
000916r 2               ; src/prelude.fth:4:13 in `over`
000916r 2               @OPCODE_278:   ; [c64_ir] TempStore
000916r 2  CA               dex
000917r 2  CA               dex
000918r 2  B5 03            lda $03,x
00091Ar 2  85 96            sta TEMP_PAX2
00091Cr 2  B5 02            lda $02,x
00091Er 2  85 95            sta TEMP_PAX1
000920r 2               
000920r 2               ; src/prelude.fth:4:19 in `over`
000920r 2               @OPCODE_279:   ; [c64_ir] TempLoad
000920r 2  E8               inx
000921r 2  E8               inx
000922r 2  A5 95            lda TEMP_PAX1
000924r 2  95 00            sta $00,x
000926r 2  A5 96            lda TEMP_PAX2
000928r 2  95 01            sta $01,x
00092Ar 2               
00092Ar 2               ; src/prelude.fth:4:25 in `over`
00092Ar 2               @OPCODE_280:   ; [c64_ir] AltPop
00092Ar 2  E8               inx
00092Br 2  E8               inx
00092Cr 2  68               pla
00092Dr 2  95 00            sta $00,x
00092Fr 2  68               pla
000930r 2  95 01            sta $01,x
000932r 2               
000932r 2               ; src/prelude.fth:4:28 in `over`
000932r 2               @OPCODE_281:   ; [c64_ir] TempLoad
000932r 2  E8               inx
000933r 2  E8               inx
000934r 2  A5 95            lda TEMP_PAX1
000936r 2  95 00            sta $00,x
000938r 2  A5 96            lda TEMP_PAX2
00093Ar 2  95 01            sta $01,x
00093Cr 2               
00093Cr 2               ; src/prelude.fth:33:29 in `loopimpl`
00093Cr 2               @OPCODE_282:   ; [c64_ir] AltPush
00093Cr 2  CA               dex
00093Dr 2  CA               dex
00093Er 2  B5 03            lda $03,x
000940r 2  48               pha
000941r 2  B5 02            lda $02,x
000943r 2  48               pha
000944r 2               
000944r 2               ; src/prelude.fth:33:32 in `loopimpl`
000944r 2               @OPCODE_283:   ; [c64_ir] AltPush
000944r 2  CA               dex
000945r 2  CA               dex
000946r 2  B5 03            lda $03,x
000948r 2  48               pha
000949r 2  B5 02            lda $02,x
00094Br 2  48               pha
00094Cr 2               
00094Cr 2               ; src/prelude.fth:14:12 in `invert`
00094Cr 2               @OPCODE_284:   ; [c64_ir] PushLiteral(-1)
00094Cr 2  E8               inx
00094Dr 2  E8               inx
00094Er 2  A9 FF            lda #255
000950r 2  95 00            sta $00,x
000952r 2  A9 FF            lda #255
000954r 2  95 01            sta $01,x
000956r 2               
000956r 2               ; src/prelude.fth:14:15 in `invert`
000956r 2               @OPCODE_285:   ; [c64_ir] Nand
000956r 2                   ; 26
000956r 2  CA               dex
000957r 2  CA               dex
000958r 2  B5 00            lda $00,x
00095Ar 2  35 02            and $02,x
00095Cr 2  49 FF            eor #$ff
00095Er 2  95 00            sta $00,x
000960r 2  B5 01            lda $01,x
000962r 2  35 03            and $03,x
000964r 2  49 FF            eor #$ff
000966r 2  95 01            sta $01,x
000968r 2               
000968r 2               ; src/prelude.fth:15:19 in `negate`
000968r 2               @OPCODE_286:   ; [c64_ir] PushLiteral(1)
000968r 2  E8               inx
000969r 2  E8               inx
00096Ar 2  A9 01            lda #1
00096Cr 2  95 00            sta $00,x
00096Er 2  A9 00            lda #0
000970r 2  95 01            sta $01,x
000972r 2               
000972r 2               ; src/prelude.fth:15:21 in `negate`
000972r 2               @OPCODE_287:   ; [c64_ir] Add
000972r 2                   ; 21
000972r 2  CA               dex
000973r 2  CA               dex
000974r 2  18               clc
000975r 2  B5 00            lda $00,x
000977r 2  75 02            adc $02,x
000979r 2  95 00            sta $00,x
00097Br 2  B5 01            lda $01,x
00097Dr 2  75 03            adc $03,x
00097Fr 2  95 01            sta $01,x
000981r 2               
000981r 2               ; src/prelude.fth:16:19 in `-`
000981r 2               @OPCODE_288:   ; [c64_ir] Add
000981r 2                   ; 21
000981r 2  CA               dex
000982r 2  CA               dex
000983r 2  18               clc
000984r 2  B5 00            lda $00,x
000986r 2  75 02            adc $02,x
000988r 2  95 00            sta $00,x
00098Ar 2  B5 01            lda $01,x
00098Cr 2  75 03            adc $03,x
00098Er 2  95 01            sta $01,x
000990r 2               
000990r 2               ; src/prelude.fth:21:8 in `0=`
000990r 2               @OPCODE_289:   ; [c64_ir] JumpIf0(27)
000990r 2  CA               dex
000991r 2  CA               dex
000992r 2  B5 02            lda $02,x
000994r 2  15 03            ora $03,x
000996r 2  D0 03            bne *+5
000998r 2  4C rr rr         jmp @target_27
00099Br 2               
00099Br 2               @target_26:
00099Br 2               
00099Br 2               ; src/prelude.fth:21:11 in `0=`
00099Br 2               @OPCODE_291:   ; [c64_ir] PushLiteral(0)
00099Br 2  E8               inx
00099Cr 2  E8               inx
00099Dr 2  A9 00            lda #0
00099Fr 2  95 00            sta $00,x
0009A1r 2  A9 00            lda #0
0009A3r 2  95 01            sta $01,x
0009A5r 2               
0009A5r 2               ; src/prelude.fth:21:13 in `0=`
0009A5r 2               @OPCODE_292:   ; [c64_ir] JumpElse(28)
0009A5r 2  4C rr rr         jmp @target_28
0009A8r 2               
0009A8r 2               @target_27:
0009A8r 2               
0009A8r 2               ; src/prelude.fth:21:18 in `0=`
0009A8r 2               @OPCODE_294:   ; [c64_ir] PushLiteral(-1)
0009A8r 2  E8               inx
0009A9r 2  E8               inx
0009AAr 2  A9 FF            lda #255
0009ACr 2  95 00            sta $00,x
0009AEr 2  A9 FF            lda #255
0009B0r 2  95 01            sta $01,x
0009B2r 2               
0009B2r 2               ; src/prelude.fth:21:21 in `0=`
0009B2r 2               @OPCODE_295:   ; [c64_ir] JumpTarget(27)
0009B2r 2               
0009B2r 2               @target_28:
0009B2r 2               
0009B2r 2               ; src/prelude.fth:3:10 in `swap`
0009B2r 2               @OPCODE_297:   ; [c64_ir] AltPush
0009B2r 2  CA               dex
0009B3r 2  CA               dex
0009B4r 2  B5 03            lda $03,x
0009B6r 2  48               pha
0009B7r 2  B5 02            lda $02,x
0009B9r 2  48               pha
0009BAr 2               
0009BAr 2               ; src/prelude.fth:3:19 in `swap`
0009BAr 2               @OPCODE_298:   ; [c64_ir] AltPop
0009BAr 2  E8               inx
0009BBr 2  E8               inx
0009BCr 2  68               pla
0009BDr 2  95 00            sta $00,x
0009BFr 2  68               pla
0009C0r 2  95 01            sta $01,x
0009C2r 2               
0009C2r 2               ; snake.pax:76:5 in `draw-walls`
0009C2r 2               @OPCODE_299:   ; [c64_ir] LoopIf0(25)
0009C2r 2  CA               dex
0009C3r 2  CA               dex
0009C4r 2  B5 02            lda $02,x
0009C6r 2  15 03            ora $03,x
0009C8r 2  D0 03            bne *+5
0009CAr 2  4C rr rr         jmp @target_25
0009CDr 2               
0009CDr 2               @target_29:
0009CDr 2               
0009CDr 2               ; snake.pax:76:5 in `draw-walls`
0009CDr 2               @OPCODE_301:   ; [c64_ir] AltPop
0009CDr 2  E8               inx
0009CEr 2  E8               inx
0009CFr 2  68               pla
0009D0r 2  95 00            sta $00,x
0009D2r 2  68               pla
0009D3r 2  95 01            sta $01,x
0009D5r 2               
0009D5r 2               ; snake.pax:76:5 in `draw-walls`
0009D5r 2               @OPCODE_302:   ; [c64_ir] Drop
0009D5r 2  CA               dex
0009D6r 2  CA               dex
0009D7r 2               
0009D7r 2               ; snake.pax:76:5 in `draw-walls`
0009D7r 2               @OPCODE_303:   ; [c64_ir] AltPop
0009D7r 2  E8               inx
0009D8r 2  E8               inx
0009D9r 2  68               pla
0009DAr 2  95 00            sta $00,x
0009DCr 2  68               pla
0009DDr 2  95 01            sta $01,x
0009DFr 2               
0009DFr 2               ; snake.pax:76:5 in `draw-walls`
0009DFr 2               @OPCODE_304:   ; [c64_ir] Drop
0009DFr 2  CA               dex
0009E0r 2  CA               dex
0009E1r 2               
0009E1r 2               ; snake.pax:78:5 in `draw-walls`
0009E1r 2               @OPCODE_305:   ; [c64_ir] PushLiteral(40)
0009E1r 2  E8               inx
0009E2r 2  E8               inx
0009E3r 2  A9 28            lda #40
0009E5r 2  95 00            sta $00,x
0009E7r 2  A9 00            lda #0
0009E9r 2  95 01            sta $01,x
0009EBr 2               
0009EBr 2               ; snake.pax:78:11 in `draw-walls`
0009EBr 2               @OPCODE_306:   ; [c64_ir] PushLiteral(1)
0009EBr 2  E8               inx
0009ECr 2  E8               inx
0009EDr 2  A9 01            lda #1
0009EFr 2  95 00            sta $00,x
0009F1r 2  A9 00            lda #0
0009F3r 2  95 01            sta $01,x
0009F5r 2               
0009F5r 2               ; src/prelude.fth:14:12 in `invert`
0009F5r 2               @OPCODE_307:   ; [c64_ir] PushLiteral(-1)
0009F5r 2  E8               inx
0009F6r 2  E8               inx
0009F7r 2  A9 FF            lda #255
0009F9r 2  95 00            sta $00,x
0009FBr 2  A9 FF            lda #255
0009FDr 2  95 01            sta $01,x
0009FFr 2               
0009FFr 2               ; src/prelude.fth:14:15 in `invert`
0009FFr 2               @OPCODE_308:   ; [c64_ir] Nand
0009FFr 2                   ; 26
0009FFr 2  CA               dex
000A00r 2  CA               dex
000A01r 2  B5 00            lda $00,x
000A03r 2  35 02            and $02,x
000A05r 2  49 FF            eor #$ff
000A07r 2  95 00            sta $00,x
000A09r 2  B5 01            lda $01,x
000A0Br 2  35 03            and $03,x
000A0Dr 2  49 FF            eor #$ff
000A0Fr 2  95 01            sta $01,x
000A11r 2               
000A11r 2               ; src/prelude.fth:15:19 in `negate`
000A11r 2               @OPCODE_309:   ; [c64_ir] PushLiteral(1)
000A11r 2  E8               inx
000A12r 2  E8               inx
000A13r 2  A9 01            lda #1
000A15r 2  95 00            sta $00,x
000A17r 2  A9 00            lda #0
000A19r 2  95 01            sta $01,x
000A1Br 2               
000A1Br 2               ; src/prelude.fth:15:21 in `negate`
000A1Br 2               @OPCODE_310:   ; [c64_ir] Add
000A1Br 2                   ; 21
000A1Br 2  CA               dex
000A1Cr 2  CA               dex
000A1Dr 2  18               clc
000A1Er 2  B5 00            lda $00,x
000A20r 2  75 02            adc $02,x
000A22r 2  95 00            sta $00,x
000A24r 2  B5 01            lda $01,x
000A26r 2  75 03            adc $03,x
000A28r 2  95 01            sta $01,x
000A2Ar 2               
000A2Ar 2               ; src/prelude.fth:16:19 in `-`
000A2Ar 2               @OPCODE_311:   ; [c64_ir] Add
000A2Ar 2                   ; 21
000A2Ar 2  CA               dex
000A2Br 2  CA               dex
000A2Cr 2  18               clc
000A2Dr 2  B5 00            lda $00,x
000A2Fr 2  75 02            adc $02,x
000A31r 2  95 00            sta $00,x
000A33r 2  B5 01            lda $01,x
000A35r 2  75 03            adc $03,x
000A37r 2  95 01            sta $01,x
000A39r 2               
000A39r 2               ; snake.pax:79:5 in `draw-walls`
000A39r 2               @OPCODE_312:   ; [c64_ir] PushLiteral(25)
000A39r 2  E8               inx
000A3Ar 2  E8               inx
000A3Br 2  A9 19            lda #25
000A3Dr 2  95 00            sta $00,x
000A3Fr 2  A9 00            lda #0
000A41r 2  95 01            sta $01,x
000A43r 2               
000A43r 2               ; snake.pax:79:12 in `draw-walls`
000A43r 2               @OPCODE_313:   ; [c64_ir] PushLiteral(0)
000A43r 2  E8               inx
000A44r 2  E8               inx
000A45r 2  A9 00            lda #0
000A47r 2  95 00            sta $00,x
000A49r 2  A9 00            lda #0
000A4Br 2  95 01            sta $01,x
000A4Dr 2               
000A4Dr 2               ; snake.pax:79:14 in `draw-walls`
000A4Dr 2               @OPCODE_314:   ; [c64_ir] AltPush
000A4Dr 2  CA               dex
000A4Er 2  CA               dex
000A4Fr 2  B5 03            lda $03,x
000A51r 2  48               pha
000A52r 2  B5 02            lda $02,x
000A54r 2  48               pha
000A55r 2               
000A55r 2               ; snake.pax:79:14 in `draw-walls`
000A55r 2               @OPCODE_315:   ; [c64_ir] AltPush
000A55r 2  CA               dex
000A56r 2  CA               dex
000A57r 2  B5 03            lda $03,x
000A59r 2  48               pha
000A5Ar 2  B5 02            lda $02,x
000A5Cr 2  48               pha
000A5Dr 2               
000A5Dr 2               ; snake.pax:79:14 in `draw-walls`
000A5Dr 2               @OPCODE_316:   ; [c64_ir] LoopTarget(29)
000A5Dr 2               
000A5Dr 2               @target_30:
000A5Dr 2               
000A5Dr 2               ; src/prelude.fth:4:13 in `over`
000A5Dr 2               @OPCODE_318:   ; [c64_ir] TempStore
000A5Dr 2  CA               dex
000A5Er 2  CA               dex
000A5Fr 2  B5 03            lda $03,x
000A61r 2  85 96            sta TEMP_PAX2
000A63r 2  B5 02            lda $02,x
000A65r 2  85 95            sta TEMP_PAX1
000A67r 2               
000A67r 2               ; src/prelude.fth:4:19 in `over`
000A67r 2               @OPCODE_319:   ; [c64_ir] TempLoad
000A67r 2  E8               inx
000A68r 2  E8               inx
000A69r 2  A5 95            lda TEMP_PAX1
000A6Br 2  95 00            sta $00,x
000A6Dr 2  A5 96            lda TEMP_PAX2
000A6Fr 2  95 01            sta $01,x
000A71r 2               
000A71r 2               ; src/prelude.fth:4:25 in `over`
000A71r 2               @OPCODE_320:   ; [c64_ir] PushLiteral(230)
000A71r 2  E8               inx
000A72r 2  E8               inx
000A73r 2  A9 E6            lda #230
000A75r 2  95 00            sta $00,x
000A77r 2  A9 00            lda #0
000A79r 2  95 01            sta $01,x
000A7Br 2               
000A7Br 2               ; src/prelude.fth:4:28 in `over`
000A7Br 2               @OPCODE_321:   ; [c64_ir] TempLoad
000A7Br 2  E8               inx
000A7Cr 2  E8               inx
000A7Dr 2  A5 95            lda TEMP_PAX1
000A7Fr 2  95 00            sta $00,x
000A81r 2  A5 96            lda TEMP_PAX2
000A83r 2  95 01            sta $01,x
000A85r 2               
000A85r 2               ; snake.pax:49:34 in `draw-index`
000A85r 2               @OPCODE_322:   ; [c64_ir] PushLiteral(1024)
000A85r 2  E8               inx
000A86r 2  E8               inx
000A87r 2  A9 00            lda #0
000A89r 2  95 00            sta $00,x
000A8Br 2  A9 04            lda #4
000A8Dr 2  95 01            sta $01,x
000A8Fr 2               
000A8Fr 2               ; snake.pax:49:43 in `draw-index`
000A8Fr 2               @OPCODE_323:   ; [c64_ir] Add
000A8Fr 2                   ; 21
000A8Fr 2  CA               dex
000A90r 2  CA               dex
000A91r 2  18               clc
000A92r 2  B5 00            lda $00,x
000A94r 2  75 02            adc $02,x
000A96r 2  95 00            sta $00,x
000A98r 2  B5 01            lda $01,x
000A9Ar 2  75 03            adc $03,x
000A9Cr 2  95 01            sta $01,x
000A9Er 2               
000A9Er 2               ; snake.pax:49:45 in `draw-index`
000A9Er 2               @OPCODE_324:   ; [c64_ir] Store8
000A9Er 2  CA               dex
000A9Fr 2  CA               dex
000AA0r 2  CA               dex
000AA1r 2  CA               dex
000AA2r 2  B5 02            lda $02,x
000AA4r 2  81 04            sta ($04,x)
000AA6r 2                   ; TODO high byte
000AA6r 2               
000AA6r 2               ; snake.pax:81:9 in `draw-walls`
000AA6r 2               @OPCODE_325:   ; [c64_ir] PushLiteral(40)
000AA6r 2  E8               inx
000AA7r 2  E8               inx
000AA8r 2  A9 28            lda #40
000AAAr 2  95 00            sta $00,x
000AACr 2  A9 00            lda #0
000AAEr 2  95 01            sta $01,x
000AB0r 2               
000AB0r 2               ; snake.pax:81:15 in `draw-walls`
000AB0r 2               @OPCODE_326:   ; [c64_ir] Add
000AB0r 2                   ; 21
000AB0r 2  CA               dex
000AB1r 2  CA               dex
000AB2r 2  18               clc
000AB3r 2  B5 00            lda $00,x
000AB5r 2  75 02            adc $02,x
000AB7r 2  95 00            sta $00,x
000AB9r 2  B5 01            lda $01,x
000ABBr 2  75 03            adc $03,x
000ABDr 2  95 01            sta $01,x
000ABFr 2               
000ABFr 2               ; src/prelude.fth:33:15 in `loopimpl`
000ABFr 2               @OPCODE_327:   ; [c64_ir] AltPop
000ABFr 2  E8               inx
000AC0r 2  E8               inx
000AC1r 2  68               pla
000AC2r 2  95 00            sta $00,x
000AC4r 2  68               pla
000AC5r 2  95 01            sta $01,x
000AC7r 2               
000AC7r 2               ; src/prelude.fth:33:18 in `loopimpl`
000AC7r 2               @OPCODE_328:   ; [c64_ir] AltPop
000AC7r 2  E8               inx
000AC8r 2  E8               inx
000AC9r 2  68               pla
000ACAr 2  95 00            sta $00,x
000ACCr 2  68               pla
000ACDr 2  95 01            sta $01,x
000ACFr 2               
000ACFr 2               ; src/prelude.fth:18:8 in `1+`
000ACFr 2               @OPCODE_329:   ; [c64_ir] PushLiteral(1)
000ACFr 2  E8               inx
000AD0r 2  E8               inx
000AD1r 2  A9 01            lda #1
000AD3r 2  95 00            sta $00,x
000AD5r 2  A9 00            lda #0
000AD7r 2  95 01            sta $01,x
000AD9r 2               
000AD9r 2               ; src/prelude.fth:18:10 in `1+`
000AD9r 2               @OPCODE_330:   ; [c64_ir] Add
000AD9r 2                   ; 21
000AD9r 2  CA               dex
000ADAr 2  CA               dex
000ADBr 2  18               clc
000ADCr 2  B5 00            lda $00,x
000ADEr 2  75 02            adc $02,x
000AE0r 2  95 00            sta $00,x
000AE2r 2  B5 01            lda $01,x
000AE4r 2  75 03            adc $03,x
000AE6r 2  95 01            sta $01,x
000AE8r 2               
000AE8r 2               ; src/prelude.fth:4:10 in `over`
000AE8r 2               @OPCODE_331:   ; [c64_ir] AltPush
000AE8r 2  CA               dex
000AE9r 2  CA               dex
000AEAr 2  B5 03            lda $03,x
000AECr 2  48               pha
000AEDr 2  B5 02            lda $02,x
000AEFr 2  48               pha
000AF0r 2               
000AF0r 2               ; src/prelude.fth:4:13 in `over`
000AF0r 2               @OPCODE_332:   ; [c64_ir] TempStore
000AF0r 2  CA               dex
000AF1r 2  CA               dex
000AF2r 2  B5 03            lda $03,x
000AF4r 2  85 96            sta TEMP_PAX2
000AF6r 2  B5 02            lda $02,x
000AF8r 2  85 95            sta TEMP_PAX1
000AFAr 2               
000AFAr 2               ; src/prelude.fth:4:19 in `over`
000AFAr 2               @OPCODE_333:   ; [c64_ir] TempLoad
000AFAr 2  E8               inx
000AFBr 2  E8               inx
000AFCr 2  A5 95            lda TEMP_PAX1
000AFEr 2  95 00            sta $00,x
000B00r 2  A5 96            lda TEMP_PAX2
000B02r 2  95 01            sta $01,x
000B04r 2               
000B04r 2               ; src/prelude.fth:4:25 in `over`
000B04r 2               @OPCODE_334:   ; [c64_ir] AltPop
000B04r 2  E8               inx
000B05r 2  E8               inx
000B06r 2  68               pla
000B07r 2  95 00            sta $00,x
000B09r 2  68               pla
000B0Ar 2  95 01            sta $01,x
000B0Cr 2               
000B0Cr 2               ; src/prelude.fth:4:28 in `over`
000B0Cr 2               @OPCODE_335:   ; [c64_ir] TempLoad
000B0Cr 2  E8               inx
000B0Dr 2  E8               inx
000B0Er 2  A5 95            lda TEMP_PAX1
000B10r 2  95 00            sta $00,x
000B12r 2  A5 96            lda TEMP_PAX2
000B14r 2  95 01            sta $01,x
000B16r 2               
000B16r 2               ; src/prelude.fth:4:10 in `over`
000B16r 2               @OPCODE_336:   ; [c64_ir] AltPush
000B16r 2  CA               dex
000B17r 2  CA               dex
000B18r 2  B5 03            lda $03,x
000B1Ar 2  48               pha
000B1Br 2  B5 02            lda $02,x
000B1Dr 2  48               pha
000B1Er 2               
000B1Er 2               ; src/prelude.fth:4:13 in `over`
000B1Er 2               @OPCODE_337:   ; [c64_ir] TempStore
000B1Er 2  CA               dex
000B1Fr 2  CA               dex
000B20r 2  B5 03            lda $03,x
000B22r 2  85 96            sta TEMP_PAX2
000B24r 2  B5 02            lda $02,x
000B26r 2  85 95            sta TEMP_PAX1
000B28r 2               
000B28r 2               ; src/prelude.fth:4:19 in `over`
000B28r 2               @OPCODE_338:   ; [c64_ir] TempLoad
000B28r 2  E8               inx
000B29r 2  E8               inx
000B2Ar 2  A5 95            lda TEMP_PAX1
000B2Cr 2  95 00            sta $00,x
000B2Er 2  A5 96            lda TEMP_PAX2
000B30r 2  95 01            sta $01,x
000B32r 2               
000B32r 2               ; src/prelude.fth:4:25 in `over`
000B32r 2               @OPCODE_339:   ; [c64_ir] AltPop
000B32r 2  E8               inx
000B33r 2  E8               inx
000B34r 2  68               pla
000B35r 2  95 00            sta $00,x
000B37r 2  68               pla
000B38r 2  95 01            sta $01,x
000B3Ar 2               
000B3Ar 2               ; src/prelude.fth:4:28 in `over`
000B3Ar 2               @OPCODE_340:   ; [c64_ir] TempLoad
000B3Ar 2  E8               inx
000B3Br 2  E8               inx
000B3Cr 2  A5 95            lda TEMP_PAX1
000B3Er 2  95 00            sta $00,x
000B40r 2  A5 96            lda TEMP_PAX2
000B42r 2  95 01            sta $01,x
000B44r 2               
000B44r 2               ; src/prelude.fth:33:29 in `loopimpl`
000B44r 2               @OPCODE_341:   ; [c64_ir] AltPush
000B44r 2  CA               dex
000B45r 2  CA               dex
000B46r 2  B5 03            lda $03,x
000B48r 2  48               pha
000B49r 2  B5 02            lda $02,x
000B4Br 2  48               pha
000B4Cr 2               
000B4Cr 2               ; src/prelude.fth:33:32 in `loopimpl`
000B4Cr 2               @OPCODE_342:   ; [c64_ir] AltPush
000B4Cr 2  CA               dex
000B4Dr 2  CA               dex
000B4Er 2  B5 03            lda $03,x
000B50r 2  48               pha
000B51r 2  B5 02            lda $02,x
000B53r 2  48               pha
000B54r 2               
000B54r 2               ; src/prelude.fth:14:12 in `invert`
000B54r 2               @OPCODE_343:   ; [c64_ir] PushLiteral(-1)
000B54r 2  E8               inx
000B55r 2  E8               inx
000B56r 2  A9 FF            lda #255
000B58r 2  95 00            sta $00,x
000B5Ar 2  A9 FF            lda #255
000B5Cr 2  95 01            sta $01,x
000B5Er 2               
000B5Er 2               ; src/prelude.fth:14:15 in `invert`
000B5Er 2               @OPCODE_344:   ; [c64_ir] Nand
000B5Er 2                   ; 26
000B5Er 2  CA               dex
000B5Fr 2  CA               dex
000B60r 2  B5 00            lda $00,x
000B62r 2  35 02            and $02,x
000B64r 2  49 FF            eor #$ff
000B66r 2  95 00            sta $00,x
000B68r 2  B5 01            lda $01,x
000B6Ar 2  35 03            and $03,x
000B6Cr 2  49 FF            eor #$ff
000B6Er 2  95 01            sta $01,x
000B70r 2               
000B70r 2               ; src/prelude.fth:15:19 in `negate`
000B70r 2               @OPCODE_345:   ; [c64_ir] PushLiteral(1)
000B70r 2  E8               inx
000B71r 2  E8               inx
000B72r 2  A9 01            lda #1
000B74r 2  95 00            sta $00,x
000B76r 2  A9 00            lda #0
000B78r 2  95 01            sta $01,x
000B7Ar 2               
000B7Ar 2               ; src/prelude.fth:15:21 in `negate`
000B7Ar 2               @OPCODE_346:   ; [c64_ir] Add
000B7Ar 2                   ; 21
000B7Ar 2  CA               dex
000B7Br 2  CA               dex
000B7Cr 2  18               clc
000B7Dr 2  B5 00            lda $00,x
000B7Fr 2  75 02            adc $02,x
000B81r 2  95 00            sta $00,x
000B83r 2  B5 01            lda $01,x
000B85r 2  75 03            adc $03,x
000B87r 2  95 01            sta $01,x
000B89r 2               
000B89r 2               ; src/prelude.fth:16:19 in `-`
000B89r 2               @OPCODE_347:   ; [c64_ir] Add
000B89r 2                   ; 21
000B89r 2  CA               dex
000B8Ar 2  CA               dex
000B8Br 2  18               clc
000B8Cr 2  B5 00            lda $00,x
000B8Er 2  75 02            adc $02,x
000B90r 2  95 00            sta $00,x
000B92r 2  B5 01            lda $01,x
000B94r 2  75 03            adc $03,x
000B96r 2  95 01            sta $01,x
000B98r 2               
000B98r 2               ; src/prelude.fth:21:8 in `0=`
000B98r 2               @OPCODE_348:   ; [c64_ir] JumpIf0(32)
000B98r 2  CA               dex
000B99r 2  CA               dex
000B9Ar 2  B5 02            lda $02,x
000B9Cr 2  15 03            ora $03,x
000B9Er 2  D0 03            bne *+5
000BA0r 2  4C rr rr         jmp @target_32
000BA3r 2               
000BA3r 2               @target_31:
000BA3r 2               
000BA3r 2               ; src/prelude.fth:21:11 in `0=`
000BA3r 2               @OPCODE_350:   ; [c64_ir] PushLiteral(0)
000BA3r 2  E8               inx
000BA4r 2  E8               inx
000BA5r 2  A9 00            lda #0
000BA7r 2  95 00            sta $00,x
000BA9r 2  A9 00            lda #0
000BABr 2  95 01            sta $01,x
000BADr 2               
000BADr 2               ; src/prelude.fth:21:13 in `0=`
000BADr 2               @OPCODE_351:   ; [c64_ir] JumpElse(33)
000BADr 2  4C rr rr         jmp @target_33
000BB0r 2               
000BB0r 2               @target_32:
000BB0r 2               
000BB0r 2               ; src/prelude.fth:21:18 in `0=`
000BB0r 2               @OPCODE_353:   ; [c64_ir] PushLiteral(-1)
000BB0r 2  E8               inx
000BB1r 2  E8               inx
000BB2r 2  A9 FF            lda #255
000BB4r 2  95 00            sta $00,x
000BB6r 2  A9 FF            lda #255
000BB8r 2  95 01            sta $01,x
000BBAr 2               
000BBAr 2               ; src/prelude.fth:21:21 in `0=`
000BBAr 2               @OPCODE_354:   ; [c64_ir] JumpTarget(32)
000BBAr 2               
000BBAr 2               @target_33:
000BBAr 2               
000BBAr 2               ; src/prelude.fth:3:10 in `swap`
000BBAr 2               @OPCODE_356:   ; [c64_ir] AltPush
000BBAr 2  CA               dex
000BBBr 2  CA               dex
000BBCr 2  B5 03            lda $03,x
000BBEr 2  48               pha
000BBFr 2  B5 02            lda $02,x
000BC1r 2  48               pha
000BC2r 2               
000BC2r 2               ; src/prelude.fth:3:19 in `swap`
000BC2r 2               @OPCODE_357:   ; [c64_ir] AltPop
000BC2r 2  E8               inx
000BC3r 2  E8               inx
000BC4r 2  68               pla
000BC5r 2  95 00            sta $00,x
000BC7r 2  68               pla
000BC8r 2  95 01            sta $01,x
000BCAr 2               
000BCAr 2               ; snake.pax:82:5 in `draw-walls`
000BCAr 2               @OPCODE_358:   ; [c64_ir] LoopIf0(30)
000BCAr 2  CA               dex
000BCBr 2  CA               dex
000BCCr 2  B5 02            lda $02,x
000BCEr 2  15 03            ora $03,x
000BD0r 2  D0 03            bne *+5
000BD2r 2  4C rr rr         jmp @target_30
000BD5r 2               
000BD5r 2               @target_34:
000BD5r 2               
000BD5r 2               ; snake.pax:82:5 in `draw-walls`
000BD5r 2               @OPCODE_360:   ; [c64_ir] AltPop
000BD5r 2  E8               inx
000BD6r 2  E8               inx
000BD7r 2  68               pla
000BD8r 2  95 00            sta $00,x
000BDAr 2  68               pla
000BDBr 2  95 01            sta $01,x
000BDDr 2               
000BDDr 2               ; snake.pax:82:5 in `draw-walls`
000BDDr 2               @OPCODE_361:   ; [c64_ir] Drop
000BDDr 2  CA               dex
000BDEr 2  CA               dex
000BDFr 2               
000BDFr 2               ; snake.pax:82:5 in `draw-walls`
000BDFr 2               @OPCODE_362:   ; [c64_ir] AltPop
000BDFr 2  E8               inx
000BE0r 2  E8               inx
000BE1r 2  68               pla
000BE2r 2  95 00            sta $00,x
000BE4r 2  68               pla
000BE5r 2  95 01            sta $01,x
000BE7r 2               
000BE7r 2               ; snake.pax:82:5 in `draw-walls`
000BE7r 2               @OPCODE_363:   ; [c64_ir] Drop
000BE7r 2  CA               dex
000BE8r 2  CA               dex
000BE9r 2               
000BE9r 2               ; snake.pax:83:5 in `draw-walls`
000BE9r 2               @OPCODE_364:   ; [c64_ir] PushLiteral(0)
000BE9r 2  E8               inx
000BEAr 2  E8               inx
000BEBr 2  A9 00            lda #0
000BEDr 2  95 00            sta $00,x
000BEFr 2  A9 00            lda #0
000BF1r 2  95 01            sta $01,x
000BF3r 2               
000BF3r 2               ; snake.pax:84:5 in `draw-walls`
000BF3r 2               @OPCODE_365:   ; [c64_ir] PushLiteral(25)
000BF3r 2  E8               inx
000BF4r 2  E8               inx
000BF5r 2  A9 19            lda #25
000BF7r 2  95 00            sta $00,x
000BF9r 2  A9 00            lda #0
000BFBr 2  95 01            sta $01,x
000BFDr 2               
000BFDr 2               ; snake.pax:84:12 in `draw-walls`
000BFDr 2               @OPCODE_366:   ; [c64_ir] PushLiteral(0)
000BFDr 2  E8               inx
000BFEr 2  E8               inx
000BFFr 2  A9 00            lda #0
000C01r 2  95 00            sta $00,x
000C03r 2  A9 00            lda #0
000C05r 2  95 01            sta $01,x
000C07r 2               
000C07r 2               ; snake.pax:84:14 in `draw-walls`
000C07r 2               @OPCODE_367:   ; [c64_ir] AltPush
000C07r 2  CA               dex
000C08r 2  CA               dex
000C09r 2  B5 03            lda $03,x
000C0Br 2  48               pha
000C0Cr 2  B5 02            lda $02,x
000C0Er 2  48               pha
000C0Fr 2               
000C0Fr 2               ; snake.pax:84:14 in `draw-walls`
000C0Fr 2               @OPCODE_368:   ; [c64_ir] AltPush
000C0Fr 2  CA               dex
000C10r 2  CA               dex
000C11r 2  B5 03            lda $03,x
000C13r 2  48               pha
000C14r 2  B5 02            lda $02,x
000C16r 2  48               pha
000C17r 2               
000C17r 2               ; snake.pax:84:14 in `draw-walls`
000C17r 2               @OPCODE_369:   ; [c64_ir] LoopTarget(34)
000C17r 2               
000C17r 2               @target_35:
000C17r 2               
000C17r 2               ; src/prelude.fth:4:13 in `over`
000C17r 2               @OPCODE_371:   ; [c64_ir] TempStore
000C17r 2  CA               dex
000C18r 2  CA               dex
000C19r 2  B5 03            lda $03,x
000C1Br 2  85 96            sta TEMP_PAX2
000C1Dr 2  B5 02            lda $02,x
000C1Fr 2  85 95            sta TEMP_PAX1
000C21r 2               
000C21r 2               ; src/prelude.fth:4:19 in `over`
000C21r 2               @OPCODE_372:   ; [c64_ir] TempLoad
000C21r 2  E8               inx
000C22r 2  E8               inx
000C23r 2  A5 95            lda TEMP_PAX1
000C25r 2  95 00            sta $00,x
000C27r 2  A5 96            lda TEMP_PAX2
000C29r 2  95 01            sta $01,x
000C2Br 2               
000C2Br 2               ; src/prelude.fth:4:25 in `over`
000C2Br 2               @OPCODE_373:   ; [c64_ir] PushLiteral(230)
000C2Br 2  E8               inx
000C2Cr 2  E8               inx
000C2Dr 2  A9 E6            lda #230
000C2Fr 2  95 00            sta $00,x
000C31r 2  A9 00            lda #0
000C33r 2  95 01            sta $01,x
000C35r 2               
000C35r 2               ; src/prelude.fth:4:28 in `over`
000C35r 2               @OPCODE_374:   ; [c64_ir] TempLoad
000C35r 2  E8               inx
000C36r 2  E8               inx
000C37r 2  A5 95            lda TEMP_PAX1
000C39r 2  95 00            sta $00,x
000C3Br 2  A5 96            lda TEMP_PAX2
000C3Dr 2  95 01            sta $01,x
000C3Fr 2               
000C3Fr 2               ; snake.pax:49:34 in `draw-index`
000C3Fr 2               @OPCODE_375:   ; [c64_ir] PushLiteral(1024)
000C3Fr 2  E8               inx
000C40r 2  E8               inx
000C41r 2  A9 00            lda #0
000C43r 2  95 00            sta $00,x
000C45r 2  A9 04            lda #4
000C47r 2  95 01            sta $01,x
000C49r 2               
000C49r 2               ; snake.pax:49:43 in `draw-index`
000C49r 2               @OPCODE_376:   ; [c64_ir] Add
000C49r 2                   ; 21
000C49r 2  CA               dex
000C4Ar 2  CA               dex
000C4Br 2  18               clc
000C4Cr 2  B5 00            lda $00,x
000C4Er 2  75 02            adc $02,x
000C50r 2  95 00            sta $00,x
000C52r 2  B5 01            lda $01,x
000C54r 2  75 03            adc $03,x
000C56r 2  95 01            sta $01,x
000C58r 2               
000C58r 2               ; snake.pax:49:45 in `draw-index`
000C58r 2               @OPCODE_377:   ; [c64_ir] Store8
000C58r 2  CA               dex
000C59r 2  CA               dex
000C5Ar 2  CA               dex
000C5Br 2  CA               dex
000C5Cr 2  B5 02            lda $02,x
000C5Er 2  81 04            sta ($04,x)
000C60r 2                   ; TODO high byte
000C60r 2               
000C60r 2               ; snake.pax:86:9 in `draw-walls`
000C60r 2               @OPCODE_378:   ; [c64_ir] PushLiteral(40)
000C60r 2  E8               inx
000C61r 2  E8               inx
000C62r 2  A9 28            lda #40
000C64r 2  95 00            sta $00,x
000C66r 2  A9 00            lda #0
000C68r 2  95 01            sta $01,x
000C6Ar 2               
000C6Ar 2               ; snake.pax:86:15 in `draw-walls`
000C6Ar 2               @OPCODE_379:   ; [c64_ir] Add
000C6Ar 2                   ; 21
000C6Ar 2  CA               dex
000C6Br 2  CA               dex
000C6Cr 2  18               clc
000C6Dr 2  B5 00            lda $00,x
000C6Fr 2  75 02            adc $02,x
000C71r 2  95 00            sta $00,x
000C73r 2  B5 01            lda $01,x
000C75r 2  75 03            adc $03,x
000C77r 2  95 01            sta $01,x
000C79r 2               
000C79r 2               ; src/prelude.fth:33:15 in `loopimpl`
000C79r 2               @OPCODE_380:   ; [c64_ir] AltPop
000C79r 2  E8               inx
000C7Ar 2  E8               inx
000C7Br 2  68               pla
000C7Cr 2  95 00            sta $00,x
000C7Er 2  68               pla
000C7Fr 2  95 01            sta $01,x
000C81r 2               
000C81r 2               ; src/prelude.fth:33:18 in `loopimpl`
000C81r 2               @OPCODE_381:   ; [c64_ir] AltPop
000C81r 2  E8               inx
000C82r 2  E8               inx
000C83r 2  68               pla
000C84r 2  95 00            sta $00,x
000C86r 2  68               pla
000C87r 2  95 01            sta $01,x
000C89r 2               
000C89r 2               ; src/prelude.fth:18:8 in `1+`
000C89r 2               @OPCODE_382:   ; [c64_ir] PushLiteral(1)
000C89r 2  E8               inx
000C8Ar 2  E8               inx
000C8Br 2  A9 01            lda #1
000C8Dr 2  95 00            sta $00,x
000C8Fr 2  A9 00            lda #0
000C91r 2  95 01            sta $01,x
000C93r 2               
000C93r 2               ; src/prelude.fth:18:10 in `1+`
000C93r 2               @OPCODE_383:   ; [c64_ir] Add
000C93r 2                   ; 21
000C93r 2  CA               dex
000C94r 2  CA               dex
000C95r 2  18               clc
000C96r 2  B5 00            lda $00,x
000C98r 2  75 02            adc $02,x
000C9Ar 2  95 00            sta $00,x
000C9Cr 2  B5 01            lda $01,x
000C9Er 2  75 03            adc $03,x
000CA0r 2  95 01            sta $01,x
000CA2r 2               
000CA2r 2               ; src/prelude.fth:4:10 in `over`
000CA2r 2               @OPCODE_384:   ; [c64_ir] AltPush
000CA2r 2  CA               dex
000CA3r 2  CA               dex
000CA4r 2  B5 03            lda $03,x
000CA6r 2  48               pha
000CA7r 2  B5 02            lda $02,x
000CA9r 2  48               pha
000CAAr 2               
000CAAr 2               ; src/prelude.fth:4:13 in `over`
000CAAr 2               @OPCODE_385:   ; [c64_ir] TempStore
000CAAr 2  CA               dex
000CABr 2  CA               dex
000CACr 2  B5 03            lda $03,x
000CAEr 2  85 96            sta TEMP_PAX2
000CB0r 2  B5 02            lda $02,x
000CB2r 2  85 95            sta TEMP_PAX1
000CB4r 2               
000CB4r 2               ; src/prelude.fth:4:19 in `over`
000CB4r 2               @OPCODE_386:   ; [c64_ir] TempLoad
000CB4r 2  E8               inx
000CB5r 2  E8               inx
000CB6r 2  A5 95            lda TEMP_PAX1
000CB8r 2  95 00            sta $00,x
000CBAr 2  A5 96            lda TEMP_PAX2
000CBCr 2  95 01            sta $01,x
000CBEr 2               
000CBEr 2               ; src/prelude.fth:4:25 in `over`
000CBEr 2               @OPCODE_387:   ; [c64_ir] AltPop
000CBEr 2  E8               inx
000CBFr 2  E8               inx
000CC0r 2  68               pla
000CC1r 2  95 00            sta $00,x
000CC3r 2  68               pla
000CC4r 2  95 01            sta $01,x
000CC6r 2               
000CC6r 2               ; src/prelude.fth:4:28 in `over`
000CC6r 2               @OPCODE_388:   ; [c64_ir] TempLoad
000CC6r 2  E8               inx
000CC7r 2  E8               inx
000CC8r 2  A5 95            lda TEMP_PAX1
000CCAr 2  95 00            sta $00,x
000CCCr 2  A5 96            lda TEMP_PAX2
000CCEr 2  95 01            sta $01,x
000CD0r 2               
000CD0r 2               ; src/prelude.fth:4:10 in `over`
000CD0r 2               @OPCODE_389:   ; [c64_ir] AltPush
000CD0r 2  CA               dex
000CD1r 2  CA               dex
000CD2r 2  B5 03            lda $03,x
000CD4r 2  48               pha
000CD5r 2  B5 02            lda $02,x
000CD7r 2  48               pha
000CD8r 2               
000CD8r 2               ; src/prelude.fth:4:13 in `over`
000CD8r 2               @OPCODE_390:   ; [c64_ir] TempStore
000CD8r 2  CA               dex
000CD9r 2  CA               dex
000CDAr 2  B5 03            lda $03,x
000CDCr 2  85 96            sta TEMP_PAX2
000CDEr 2  B5 02            lda $02,x
000CE0r 2  85 95            sta TEMP_PAX1
000CE2r 2               
000CE2r 2               ; src/prelude.fth:4:19 in `over`
000CE2r 2               @OPCODE_391:   ; [c64_ir] TempLoad
000CE2r 2  E8               inx
000CE3r 2  E8               inx
000CE4r 2  A5 95            lda TEMP_PAX1
000CE6r 2  95 00            sta $00,x
000CE8r 2  A5 96            lda TEMP_PAX2
000CEAr 2  95 01            sta $01,x
000CECr 2               
000CECr 2               ; src/prelude.fth:4:25 in `over`
000CECr 2               @OPCODE_392:   ; [c64_ir] AltPop
000CECr 2  E8               inx
000CEDr 2  E8               inx
000CEEr 2  68               pla
000CEFr 2  95 00            sta $00,x
000CF1r 2  68               pla
000CF2r 2  95 01            sta $01,x
000CF4r 2               
000CF4r 2               ; src/prelude.fth:4:28 in `over`
000CF4r 2               @OPCODE_393:   ; [c64_ir] TempLoad
000CF4r 2  E8               inx
000CF5r 2  E8               inx
000CF6r 2  A5 95            lda TEMP_PAX1
000CF8r 2  95 00            sta $00,x
000CFAr 2  A5 96            lda TEMP_PAX2
000CFCr 2  95 01            sta $01,x
000CFEr 2               
000CFEr 2               ; src/prelude.fth:33:29 in `loopimpl`
000CFEr 2               @OPCODE_394:   ; [c64_ir] AltPush
000CFEr 2  CA               dex
000CFFr 2  CA               dex
000D00r 2  B5 03            lda $03,x
000D02r 2  48               pha
000D03r 2  B5 02            lda $02,x
000D05r 2  48               pha
000D06r 2               
000D06r 2               ; src/prelude.fth:33:32 in `loopimpl`
000D06r 2               @OPCODE_395:   ; [c64_ir] AltPush
000D06r 2  CA               dex
000D07r 2  CA               dex
000D08r 2  B5 03            lda $03,x
000D0Ar 2  48               pha
000D0Br 2  B5 02            lda $02,x
000D0Dr 2  48               pha
000D0Er 2               
000D0Er 2               ; src/prelude.fth:14:12 in `invert`
000D0Er 2               @OPCODE_396:   ; [c64_ir] PushLiteral(-1)
000D0Er 2  E8               inx
000D0Fr 2  E8               inx
000D10r 2  A9 FF            lda #255
000D12r 2  95 00            sta $00,x
000D14r 2  A9 FF            lda #255
000D16r 2  95 01            sta $01,x
000D18r 2               
000D18r 2               ; src/prelude.fth:14:15 in `invert`
000D18r 2               @OPCODE_397:   ; [c64_ir] Nand
000D18r 2                   ; 26
000D18r 2  CA               dex
000D19r 2  CA               dex
000D1Ar 2  B5 00            lda $00,x
000D1Cr 2  35 02            and $02,x
000D1Er 2  49 FF            eor #$ff
000D20r 2  95 00            sta $00,x
000D22r 2  B5 01            lda $01,x
000D24r 2  35 03            and $03,x
000D26r 2  49 FF            eor #$ff
000D28r 2  95 01            sta $01,x
000D2Ar 2               
000D2Ar 2               ; src/prelude.fth:15:19 in `negate`
000D2Ar 2               @OPCODE_398:   ; [c64_ir] PushLiteral(1)
000D2Ar 2  E8               inx
000D2Br 2  E8               inx
000D2Cr 2  A9 01            lda #1
000D2Er 2  95 00            sta $00,x
000D30r 2  A9 00            lda #0
000D32r 2  95 01            sta $01,x
000D34r 2               
000D34r 2               ; src/prelude.fth:15:21 in `negate`
000D34r 2               @OPCODE_399:   ; [c64_ir] Add
000D34r 2                   ; 21
000D34r 2  CA               dex
000D35r 2  CA               dex
000D36r 2  18               clc
000D37r 2  B5 00            lda $00,x
000D39r 2  75 02            adc $02,x
000D3Br 2  95 00            sta $00,x
000D3Dr 2  B5 01            lda $01,x
000D3Fr 2  75 03            adc $03,x
000D41r 2  95 01            sta $01,x
000D43r 2               
000D43r 2               ; src/prelude.fth:16:19 in `-`
000D43r 2               @OPCODE_400:   ; [c64_ir] Add
000D43r 2                   ; 21
000D43r 2  CA               dex
000D44r 2  CA               dex
000D45r 2  18               clc
000D46r 2  B5 00            lda $00,x
000D48r 2  75 02            adc $02,x
000D4Ar 2  95 00            sta $00,x
000D4Cr 2  B5 01            lda $01,x
000D4Er 2  75 03            adc $03,x
000D50r 2  95 01            sta $01,x
000D52r 2               
000D52r 2               ; src/prelude.fth:21:8 in `0=`
000D52r 2               @OPCODE_401:   ; [c64_ir] JumpIf0(37)
000D52r 2  CA               dex
000D53r 2  CA               dex
000D54r 2  B5 02            lda $02,x
000D56r 2  15 03            ora $03,x
000D58r 2  D0 03            bne *+5
000D5Ar 2  4C rr rr         jmp @target_37
000D5Dr 2               
000D5Dr 2               @target_36:
000D5Dr 2               
000D5Dr 2               ; src/prelude.fth:21:11 in `0=`
000D5Dr 2               @OPCODE_403:   ; [c64_ir] PushLiteral(0)
000D5Dr 2  E8               inx
000D5Er 2  E8               inx
000D5Fr 2  A9 00            lda #0
000D61r 2  95 00            sta $00,x
000D63r 2  A9 00            lda #0
000D65r 2  95 01            sta $01,x
000D67r 2               
000D67r 2               ; src/prelude.fth:21:13 in `0=`
000D67r 2               @OPCODE_404:   ; [c64_ir] JumpElse(38)
000D67r 2  4C rr rr         jmp @target_38
000D6Ar 2               
000D6Ar 2               @target_37:
000D6Ar 2               
000D6Ar 2               ; src/prelude.fth:21:18 in `0=`
000D6Ar 2               @OPCODE_406:   ; [c64_ir] PushLiteral(-1)
000D6Ar 2  E8               inx
000D6Br 2  E8               inx
000D6Cr 2  A9 FF            lda #255
000D6Er 2  95 00            sta $00,x
000D70r 2  A9 FF            lda #255
000D72r 2  95 01            sta $01,x
000D74r 2               
000D74r 2               ; src/prelude.fth:21:21 in `0=`
000D74r 2               @OPCODE_407:   ; [c64_ir] JumpTarget(37)
000D74r 2               
000D74r 2               @target_38:
000D74r 2               
000D74r 2               ; src/prelude.fth:3:10 in `swap`
000D74r 2               @OPCODE_409:   ; [c64_ir] AltPush
000D74r 2  CA               dex
000D75r 2  CA               dex
000D76r 2  B5 03            lda $03,x
000D78r 2  48               pha
000D79r 2  B5 02            lda $02,x
000D7Br 2  48               pha
000D7Cr 2               
000D7Cr 2               ; src/prelude.fth:3:19 in `swap`
000D7Cr 2               @OPCODE_410:   ; [c64_ir] AltPop
000D7Cr 2  E8               inx
000D7Dr 2  E8               inx
000D7Er 2  68               pla
000D7Fr 2  95 00            sta $00,x
000D81r 2  68               pla
000D82r 2  95 01            sta $01,x
000D84r 2               
000D84r 2               ; snake.pax:87:5 in `draw-walls`
000D84r 2               @OPCODE_411:   ; [c64_ir] LoopIf0(35)
000D84r 2  CA               dex
000D85r 2  CA               dex
000D86r 2  B5 02            lda $02,x
000D88r 2  15 03            ora $03,x
000D8Ar 2  D0 03            bne *+5
000D8Cr 2  4C rr rr         jmp @target_35
000D8Fr 2               
000D8Fr 2               @target_39:
000D8Fr 2               
000D8Fr 2               ; snake.pax:87:5 in `draw-walls`
000D8Fr 2               @OPCODE_413:   ; [c64_ir] AltPop
000D8Fr 2  E8               inx
000D90r 2  E8               inx
000D91r 2  68               pla
000D92r 2  95 00            sta $00,x
000D94r 2  68               pla
000D95r 2  95 01            sta $01,x
000D97r 2               
000D97r 2               ; snake.pax:87:5 in `draw-walls`
000D97r 2               @OPCODE_414:   ; [c64_ir] Drop
000D97r 2  CA               dex
000D98r 2  CA               dex
000D99r 2               
000D99r 2               ; snake.pax:87:5 in `draw-walls`
000D99r 2               @OPCODE_415:   ; [c64_ir] AltPop
000D99r 2  E8               inx
000D9Ar 2  E8               inx
000D9Br 2  68               pla
000D9Cr 2  95 00            sta $00,x
000D9Er 2  68               pla
000D9Fr 2  95 01            sta $01,x
000DA1r 2               
000DA1r 2               ; snake.pax:87:5 in `draw-walls`
000DA1r 2               @OPCODE_416:   ; [c64_ir] Drop
000DA1r 2  CA               dex
000DA2r 2  CA               dex
000DA3r 2               
000DA3r 2               ; <inline>:0:0 in `main`
000DA3r 2               @OPCODE_417:   ; [c64_ir] AltPop
000DA3r 2  E8               inx
000DA4r 2  E8               inx
000DA5r 2  68               pla
000DA6r 2  95 00            sta $00,x
000DA8r 2  68               pla
000DA9r 2  95 01            sta $01,x
000DABr 2               
000DABr 2               ; <inline>:0:0 in `main`
000DABr 2               @OPCODE_418:   ; [c64_ir] Drop
000DABr 2  CA               dex
000DACr 2  CA               dex
000DADr 2               
000DADr 2               ; <inline>:0:0 in `main`
000DADr 2               @OPCODE_419:   ; [c64_ir] PushLiteral(7777)
000DADr 2  E8               inx
000DAEr 2  E8               inx
000DAFr 2  A9 61            lda #97
000DB1r 2  95 00            sta $00,x
000DB3r 2  A9 1E            lda #30
000DB5r 2  95 01            sta $01,x
000DB7r 2               
000DB7r 2               ; <inline>:0:0 in `main`
000DB7r 2               @OPCODE_420:   ; [c64_ir] AltPush
000DB7r 2  CA               dex
000DB8r 2  CA               dex
000DB9r 2  B5 03            lda $03,x
000DBBr 2  48               pha
000DBCr 2  B5 02            lda $02,x
000DBEr 2  48               pha
000DBFr 2               
000DBFr 2               ; snake.pax:91:3 in `initialize-snake`
000DBFr 2               @OPCODE_421:   ; [c64_ir] PushLiteral(4)
000DBFr 2  E8               inx
000DC0r 2  E8               inx
000DC1r 2  A9 04            lda #4
000DC3r 2  95 00            sta $00,x
000DC5r 2  A9 00            lda #0
000DC7r 2  95 01            sta $01,x
000DC9r 2               
000DC9r 2               ; snake.pax:91:5 in `initialize-snake`
000DC9r 2               @OPCODE_422:   ; [c64_ir] PushLiteral(-26658)
000DC9r 2  E8               inx
000DCAr 2  E8               inx
000DCBr 2  A9 DE            lda #222
000DCDr 2  95 00            sta $00,x
000DCFr 2  A9 97            lda #151
000DD1r 2  95 01            sta $01,x
000DD3r 2               
000DD3r 2               ; snake.pax:91:12 in `initialize-snake`
000DD3r 2               @OPCODE_423:   ; [c64_ir] Store
000DD3r 2  CA               dex
000DD4r 2  CA               dex
000DD5r 2  CA               dex
000DD6r 2  CA               dex
000DD7r 2  B5 02            lda $02,x
000DD9r 2  81 04            sta ($04,x)
000DDBr 2                   ; TODO high byte
000DDBr 2               
000DDBr 2               ; snake.pax:92:3 in `initialize-snake`
000DDBr 2               @OPCODE_424:   ; [c64_ir] PushLiteral(-26658)
000DDBr 2  E8               inx
000DDCr 2  E8               inx
000DDDr 2  A9 DE            lda #222
000DDFr 2  95 00            sta $00,x
000DE1r 2  A9 97            lda #151
000DE3r 2  95 01            sta $01,x
000DE5r 2               
000DE5r 2               ; snake.pax:92:10 in `initialize-snake`
000DE5r 2               @OPCODE_425:   ; [c64_ir] Load
000DE5r 2  A1 00            lda ($00,x)
000DE7r 2  95 00            sta $00,x
000DE9r 2  A9 00            lda #0
000DEBr 2  95 01            sta $01,x
000DEDr 2               
000DEDr 2               ; snake.pax:92:12 in `initialize-snake`
000DEDr 2               @OPCODE_426:   ; [c64_ir] PushLiteral(1)
000DEDr 2  E8               inx
000DEEr 2  E8               inx
000DEFr 2  A9 01            lda #1
000DF1r 2  95 00            sta $00,x
000DF3r 2  A9 00            lda #0
000DF5r 2  95 01            sta $01,x
000DF7r 2               
000DF7r 2               ; snake.pax:92:14 in `initialize-snake`
000DF7r 2               @OPCODE_427:   ; [c64_ir] Add
000DF7r 2                   ; 21
000DF7r 2  CA               dex
000DF8r 2  CA               dex
000DF9r 2  18               clc
000DFAr 2  B5 00            lda $00,x
000DFCr 2  75 02            adc $02,x
000DFEr 2  95 00            sta $00,x
000E00r 2  B5 01            lda $01,x
000E02r 2  75 03            adc $03,x
000E04r 2  95 01            sta $01,x
000E06r 2               
000E06r 2               ; snake.pax:92:16 in `initialize-snake`
000E06r 2               @OPCODE_428:   ; [c64_ir] PushLiteral(0)
000E06r 2  E8               inx
000E07r 2  E8               inx
000E08r 2  A9 00            lda #0
000E0Ar 2  95 00            sta $00,x
000E0Cr 2  A9 00            lda #0
000E0Er 2  95 01            sta $01,x
000E10r 2               
000E10r 2               ; snake.pax:92:18 in `initialize-snake`
000E10r 2               @OPCODE_429:   ; [c64_ir] AltPush
000E10r 2  CA               dex
000E11r 2  CA               dex
000E12r 2  B5 03            lda $03,x
000E14r 2  48               pha
000E15r 2  B5 02            lda $02,x
000E17r 2  48               pha
000E18r 2               
000E18r 2               ; snake.pax:92:18 in `initialize-snake`
000E18r 2               @OPCODE_430:   ; [c64_ir] AltPush
000E18r 2  CA               dex
000E19r 2  CA               dex
000E1Ar 2  B5 03            lda $03,x
000E1Cr 2  48               pha
000E1Dr 2  B5 02            lda $02,x
000E1Fr 2  48               pha
000E20r 2               
000E20r 2               ; snake.pax:92:18 in `initialize-snake`
000E20r 2               @OPCODE_431:   ; [c64_ir] LoopTarget(39)
000E20r 2               
000E20r 2               @target_40:
000E20r 2               
000E20r 2               ; snake.pax:93:5 in `initialize-snake`
000E20r 2               @OPCODE_433:   ; [c64_ir] PushLiteral(8)
000E20r 2  E8               inx
000E21r 2  E8               inx
000E22r 2  A9 08            lda #8
000E24r 2  95 00            sta $00,x
000E26r 2  A9 00            lda #0
000E28r 2  95 01            sta $01,x
000E2Ar 2               
000E2Ar 2               ; src/prelude.fth:38:8 in `i`
000E2Ar 2               @OPCODE_434:   ; [c64_ir] AltPop
000E2Ar 2  E8               inx
000E2Br 2  E8               inx
000E2Cr 2  68               pla
000E2Dr 2  95 00            sta $00,x
000E2Fr 2  68               pla
000E30r 2  95 01            sta $01,x
000E32r 2               
000E32r 2               ; src/prelude.fth:38:11 in `i`
000E32r 2               @OPCODE_435:   ; [c64_ir] AltPop
000E32r 2  E8               inx
000E33r 2  E8               inx
000E34r 2  68               pla
000E35r 2  95 00            sta $00,x
000E37r 2  68               pla
000E38r 2  95 01            sta $01,x
000E3Ar 2               
000E3Ar 2               ; src/prelude.fth:38:14 in `i`
000E3Ar 2               @OPCODE_436:   ; [c64_ir] TempStore
000E3Ar 2  CA               dex
000E3Br 2  CA               dex
000E3Cr 2  B5 03            lda $03,x
000E3Er 2  85 96            sta TEMP_PAX2
000E40r 2  B5 02            lda $02,x
000E42r 2  85 95            sta TEMP_PAX1
000E44r 2               
000E44r 2               ; src/prelude.fth:38:20 in `i`
000E44r 2               @OPCODE_437:   ; [c64_ir] TempLoad
000E44r 2  E8               inx
000E45r 2  E8               inx
000E46r 2  A5 95            lda TEMP_PAX1
000E48r 2  95 00            sta $00,x
000E4Ar 2  A5 96            lda TEMP_PAX2
000E4Cr 2  95 01            sta $01,x
000E4Er 2               
000E4Er 2               ; src/prelude.fth:38:26 in `i`
000E4Er 2               @OPCODE_438:   ; [c64_ir] AltPush
000E4Er 2  CA               dex
000E4Fr 2  CA               dex
000E50r 2  B5 03            lda $03,x
000E52r 2  48               pha
000E53r 2  B5 02            lda $02,x
000E55r 2  48               pha
000E56r 2               
000E56r 2               ; src/prelude.fth:38:29 in `i`
000E56r 2               @OPCODE_439:   ; [c64_ir] AltPush
000E56r 2  CA               dex
000E57r 2  CA               dex
000E58r 2  B5 03            lda $03,x
000E5Ar 2  48               pha
000E5Br 2  B5 02            lda $02,x
000E5Dr 2  48               pha
000E5Er 2               
000E5Er 2               ; src/prelude.fth:38:35 in `i`
000E5Er 2               @OPCODE_440:   ; [c64_ir] TempLoad
000E5Er 2  E8               inx
000E5Fr 2  E8               inx
000E60r 2  A5 95            lda TEMP_PAX1
000E62r 2  95 00            sta $00,x
000E64r 2  A5 96            lda TEMP_PAX2
000E66r 2  95 01            sta $01,x
000E68r 2               
000E68r 2               ; src/prelude.fth:14:12 in `invert`
000E68r 2               @OPCODE_441:   ; [c64_ir] PushLiteral(-1)
000E68r 2  E8               inx
000E69r 2  E8               inx
000E6Ar 2  A9 FF            lda #255
000E6Cr 2  95 00            sta $00,x
000E6Er 2  A9 FF            lda #255
000E70r 2  95 01            sta $01,x
000E72r 2               
000E72r 2               ; src/prelude.fth:14:15 in `invert`
000E72r 2               @OPCODE_442:   ; [c64_ir] Nand
000E72r 2                   ; 26
000E72r 2  CA               dex
000E73r 2  CA               dex
000E74r 2  B5 00            lda $00,x
000E76r 2  35 02            and $02,x
000E78r 2  49 FF            eor #$ff
000E7Ar 2  95 00            sta $00,x
000E7Cr 2  B5 01            lda $01,x
000E7Er 2  35 03            and $03,x
000E80r 2  49 FF            eor #$ff
000E82r 2  95 01            sta $01,x
000E84r 2               
000E84r 2               ; src/prelude.fth:15:19 in `negate`
000E84r 2               @OPCODE_443:   ; [c64_ir] PushLiteral(1)
000E84r 2  E8               inx
000E85r 2  E8               inx
000E86r 2  A9 01            lda #1
000E88r 2  95 00            sta $00,x
000E8Ar 2  A9 00            lda #0
000E8Cr 2  95 01            sta $01,x
000E8Er 2               
000E8Er 2               ; src/prelude.fth:15:21 in `negate`
000E8Er 2               @OPCODE_444:   ; [c64_ir] Add
000E8Er 2                   ; 21
000E8Er 2  CA               dex
000E8Fr 2  CA               dex
000E90r 2  18               clc
000E91r 2  B5 00            lda $00,x
000E93r 2  75 02            adc $02,x
000E95r 2  95 00            sta $00,x
000E97r 2  B5 01            lda $01,x
000E99r 2  75 03            adc $03,x
000E9Br 2  95 01            sta $01,x
000E9Dr 2               
000E9Dr 2               ; src/prelude.fth:16:19 in `-`
000E9Dr 2               @OPCODE_445:   ; [c64_ir] Add
000E9Dr 2                   ; 21
000E9Dr 2  CA               dex
000E9Er 2  CA               dex
000E9Fr 2  18               clc
000EA0r 2  B5 00            lda $00,x
000EA2r 2  75 02            adc $02,x
000EA4r 2  95 00            sta $00,x
000EA6r 2  B5 01            lda $01,x
000EA8r 2  75 03            adc $03,x
000EAAr 2  95 01            sta $01,x
000EACr 2               
000EACr 2               ; src/prelude.fth:38:8 in `i`
000EACr 2               @OPCODE_446:   ; [c64_ir] AltPop
000EACr 2  E8               inx
000EADr 2  E8               inx
000EAEr 2  68               pla
000EAFr 2  95 00            sta $00,x
000EB1r 2  68               pla
000EB2r 2  95 01            sta $01,x
000EB4r 2               
000EB4r 2               ; src/prelude.fth:38:11 in `i`
000EB4r 2               @OPCODE_447:   ; [c64_ir] AltPop
000EB4r 2  E8               inx
000EB5r 2  E8               inx
000EB6r 2  68               pla
000EB7r 2  95 00            sta $00,x
000EB9r 2  68               pla
000EBAr 2  95 01            sta $01,x
000EBCr 2               
000EBCr 2               ; src/prelude.fth:38:14 in `i`
000EBCr 2               @OPCODE_448:   ; [c64_ir] TempStore
000EBCr 2  CA               dex
000EBDr 2  CA               dex
000EBEr 2  B5 03            lda $03,x
000EC0r 2  85 96            sta TEMP_PAX2
000EC2r 2  B5 02            lda $02,x
000EC4r 2  85 95            sta TEMP_PAX1
000EC6r 2               
000EC6r 2               ; src/prelude.fth:38:20 in `i`
000EC6r 2               @OPCODE_449:   ; [c64_ir] TempLoad
000EC6r 2  E8               inx
000EC7r 2  E8               inx
000EC8r 2  A5 95            lda TEMP_PAX1
000ECAr 2  95 00            sta $00,x
000ECCr 2  A5 96            lda TEMP_PAX2
000ECEr 2  95 01            sta $01,x
000ED0r 2               
000ED0r 2               ; src/prelude.fth:38:26 in `i`
000ED0r 2               @OPCODE_450:   ; [c64_ir] AltPush
000ED0r 2  CA               dex
000ED1r 2  CA               dex
000ED2r 2  B5 03            lda $03,x
000ED4r 2  48               pha
000ED5r 2  B5 02            lda $02,x
000ED7r 2  48               pha
000ED8r 2               
000ED8r 2               ; src/prelude.fth:38:29 in `i`
000ED8r 2               @OPCODE_451:   ; [c64_ir] AltPush
000ED8r 2  CA               dex
000ED9r 2  CA               dex
000EDAr 2  B5 03            lda $03,x
000EDCr 2  48               pha
000EDDr 2  B5 02            lda $02,x
000EDFr 2  48               pha
000EE0r 2               
000EE0r 2               ; src/prelude.fth:38:35 in `i`
000EE0r 2               @OPCODE_452:   ; [c64_ir] TempLoad
000EE0r 2  E8               inx
000EE1r 2  E8               inx
000EE2r 2  A5 95            lda TEMP_PAX1
000EE4r 2  95 00            sta $00,x
000EE6r 2  A5 96            lda TEMP_PAX2
000EE8r 2  95 01            sta $01,x
000EEAr 2               
000EEAr 2               ; src/prelude.fth:6:10 in `dup`
000EEAr 2               @OPCODE_453:   ; [c64_ir] TempStore
000EEAr 2  CA               dex
000EEBr 2  CA               dex
000EECr 2  B5 03            lda $03,x
000EEEr 2  85 96            sta TEMP_PAX2
000EF0r 2  B5 02            lda $02,x
000EF2r 2  85 95            sta TEMP_PAX1
000EF4r 2               
000EF4r 2               ; src/prelude.fth:6:16 in `dup`
000EF4r 2               @OPCODE_454:   ; [c64_ir] TempLoad
000EF4r 2  E8               inx
000EF5r 2  E8               inx
000EF6r 2  A5 95            lda TEMP_PAX1
000EF8r 2  95 00            sta $00,x
000EFAr 2  A5 96            lda TEMP_PAX2
000EFCr 2  95 01            sta $01,x
000EFEr 2               
000EFEr 2               ; src/prelude.fth:6:22 in `dup`
000EFEr 2               @OPCODE_455:   ; [c64_ir] TempLoad
000EFEr 2  E8               inx
000EFFr 2  E8               inx
000F00r 2  A5 95            lda TEMP_PAX1
000F02r 2  95 00            sta $00,x
000F04r 2  A5 96            lda TEMP_PAX2
000F06r 2  95 01            sta $01,x
000F08r 2               
000F08r 2               ; src/prelude.fth:41:13 in `cells`
000F08r 2               @OPCODE_456:   ; [c64_ir] Add
000F08r 2                   ; 21
000F08r 2  CA               dex
000F09r 2  CA               dex
000F0Ar 2  18               clc
000F0Br 2  B5 00            lda $00,x
000F0Dr 2  75 02            adc $02,x
000F0Fr 2  95 00            sta $00,x
000F11r 2  B5 01            lda $01,x
000F13r 2  75 03            adc $03,x
000F15r 2  95 01            sta $01,x
000F17r 2               
000F17r 2               ; snake.pax:42:9 in `snake-x`
000F17r 2               @OPCODE_457:   ; [c64_ir] PushLiteral(-28668)
000F17r 2  E8               inx
000F18r 2  E8               inx
000F19r 2  A9 04            lda #4
000F1Br 2  95 00            sta $00,x
000F1Dr 2  A9 90            lda #144
000F1Fr 2  95 01            sta $01,x
000F21r 2               
000F21r 2               ; snake.pax:42:22 in `snake-x`
000F21r 2               @OPCODE_458:   ; [c64_ir] Add
000F21r 2                   ; 21
000F21r 2  CA               dex
000F22r 2  CA               dex
000F23r 2  18               clc
000F24r 2  B5 00            lda $00,x
000F26r 2  75 02            adc $02,x
000F28r 2  95 00            sta $00,x
000F2Ar 2  B5 01            lda $01,x
000F2Cr 2  75 03            adc $03,x
000F2Er 2  95 01            sta $01,x
000F30r 2               
000F30r 2               ; snake.pax:93:21 in `initialize-snake`
000F30r 2               @OPCODE_459:   ; [c64_ir] Store
000F30r 2  CA               dex
000F31r 2  CA               dex
000F32r 2  CA               dex
000F33r 2  CA               dex
000F34r 2  B5 02            lda $02,x
000F36r 2  81 04            sta ($04,x)
000F38r 2                   ; TODO high byte
000F38r 2               
000F38r 2               ; snake.pax:94:5 in `initialize-snake`
000F38r 2               @OPCODE_460:   ; [c64_ir] PushLiteral(8)
000F38r 2  E8               inx
000F39r 2  E8               inx
000F3Ar 2  A9 08            lda #8
000F3Cr 2  95 00            sta $00,x
000F3Er 2  A9 00            lda #0
000F40r 2  95 01            sta $01,x
000F42r 2               
000F42r 2               ; src/prelude.fth:38:8 in `i`
000F42r 2               @OPCODE_461:   ; [c64_ir] AltPop
000F42r 2  E8               inx
000F43r 2  E8               inx
000F44r 2  68               pla
000F45r 2  95 00            sta $00,x
000F47r 2  68               pla
000F48r 2  95 01            sta $01,x
000F4Ar 2               
000F4Ar 2               ; src/prelude.fth:38:11 in `i`
000F4Ar 2               @OPCODE_462:   ; [c64_ir] AltPop
000F4Ar 2  E8               inx
000F4Br 2  E8               inx
000F4Cr 2  68               pla
000F4Dr 2  95 00            sta $00,x
000F4Fr 2  68               pla
000F50r 2  95 01            sta $01,x
000F52r 2               
000F52r 2               ; src/prelude.fth:38:14 in `i`
000F52r 2               @OPCODE_463:   ; [c64_ir] TempStore
000F52r 2  CA               dex
000F53r 2  CA               dex
000F54r 2  B5 03            lda $03,x
000F56r 2  85 96            sta TEMP_PAX2
000F58r 2  B5 02            lda $02,x
000F5Ar 2  85 95            sta TEMP_PAX1
000F5Cr 2               
000F5Cr 2               ; src/prelude.fth:38:20 in `i`
000F5Cr 2               @OPCODE_464:   ; [c64_ir] TempLoad
000F5Cr 2  E8               inx
000F5Dr 2  E8               inx
000F5Er 2  A5 95            lda TEMP_PAX1
000F60r 2  95 00            sta $00,x
000F62r 2  A5 96            lda TEMP_PAX2
000F64r 2  95 01            sta $01,x
000F66r 2               
000F66r 2               ; src/prelude.fth:38:26 in `i`
000F66r 2               @OPCODE_465:   ; [c64_ir] AltPush
000F66r 2  CA               dex
000F67r 2  CA               dex
000F68r 2  B5 03            lda $03,x
000F6Ar 2  48               pha
000F6Br 2  B5 02            lda $02,x
000F6Dr 2  48               pha
000F6Er 2               
000F6Er 2               ; src/prelude.fth:38:29 in `i`
000F6Er 2               @OPCODE_466:   ; [c64_ir] AltPush
000F6Er 2  CA               dex
000F6Fr 2  CA               dex
000F70r 2  B5 03            lda $03,x
000F72r 2  48               pha
000F73r 2  B5 02            lda $02,x
000F75r 2  48               pha
000F76r 2               
000F76r 2               ; src/prelude.fth:38:35 in `i`
000F76r 2               @OPCODE_467:   ; [c64_ir] TempLoad
000F76r 2  E8               inx
000F77r 2  E8               inx
000F78r 2  A5 95            lda TEMP_PAX1
000F7Ar 2  95 00            sta $00,x
000F7Cr 2  A5 96            lda TEMP_PAX2
000F7Er 2  95 01            sta $01,x
000F80r 2               
000F80r 2               ; src/prelude.fth:6:10 in `dup`
000F80r 2               @OPCODE_468:   ; [c64_ir] TempStore
000F80r 2  CA               dex
000F81r 2  CA               dex
000F82r 2  B5 03            lda $03,x
000F84r 2  85 96            sta TEMP_PAX2
000F86r 2  B5 02            lda $02,x
000F88r 2  85 95            sta TEMP_PAX1
000F8Ar 2               
000F8Ar 2               ; src/prelude.fth:6:16 in `dup`
000F8Ar 2               @OPCODE_469:   ; [c64_ir] TempLoad
000F8Ar 2  E8               inx
000F8Br 2  E8               inx
000F8Cr 2  A5 95            lda TEMP_PAX1
000F8Er 2  95 00            sta $00,x
000F90r 2  A5 96            lda TEMP_PAX2
000F92r 2  95 01            sta $01,x
000F94r 2               
000F94r 2               ; src/prelude.fth:6:22 in `dup`
000F94r 2               @OPCODE_470:   ; [c64_ir] TempLoad
000F94r 2  E8               inx
000F95r 2  E8               inx
000F96r 2  A5 95            lda TEMP_PAX1
000F98r 2  95 00            sta $00,x
000F9Ar 2  A5 96            lda TEMP_PAX2
000F9Cr 2  95 01            sta $01,x
000F9Er 2               
000F9Er 2               ; src/prelude.fth:41:13 in `cells`
000F9Er 2               @OPCODE_471:   ; [c64_ir] Add
000F9Er 2                   ; 21
000F9Er 2  CA               dex
000F9Fr 2  CA               dex
000FA0r 2  18               clc
000FA1r 2  B5 00            lda $00,x
000FA3r 2  75 02            adc $02,x
000FA5r 2  95 00            sta $00,x
000FA7r 2  B5 01            lda $01,x
000FA9r 2  75 03            adc $03,x
000FABr 2  95 01            sta $01,x
000FADr 2               
000FADr 2               ; snake.pax:45:9 in `snake-y`
000FADr 2               @OPCODE_472:   ; [c64_ir] PushLiteral(-27666)
000FADr 2  E8               inx
000FAEr 2  E8               inx
000FAFr 2  A9 EE            lda #238
000FB1r 2  95 00            sta $00,x
000FB3r 2  A9 93            lda #147
000FB5r 2  95 01            sta $01,x
000FB7r 2               
000FB7r 2               ; snake.pax:45:22 in `snake-y`
000FB7r 2               @OPCODE_473:   ; [c64_ir] Add
000FB7r 2                   ; 21
000FB7r 2  CA               dex
000FB8r 2  CA               dex
000FB9r 2  18               clc
000FBAr 2  B5 00            lda $00,x
000FBCr 2  75 02            adc $02,x
000FBEr 2  95 00            sta $00,x
000FC0r 2  B5 01            lda $01,x
000FC2r 2  75 03            adc $03,x
000FC4r 2  95 01            sta $01,x
000FC6r 2               
000FC6r 2               ; snake.pax:94:17 in `initialize-snake`
000FC6r 2               @OPCODE_474:   ; [c64_ir] Store
000FC6r 2  CA               dex
000FC7r 2  CA               dex
000FC8r 2  CA               dex
000FC9r 2  CA               dex
000FCAr 2  B5 02            lda $02,x
000FCCr 2  81 04            sta ($04,x)
000FCEr 2                   ; TODO high byte
000FCEr 2               
000FCEr 2               ; src/prelude.fth:33:15 in `loopimpl`
000FCEr 2               @OPCODE_475:   ; [c64_ir] AltPop
000FCEr 2  E8               inx
000FCFr 2  E8               inx
000FD0r 2  68               pla
000FD1r 2  95 00            sta $00,x
000FD3r 2  68               pla
000FD4r 2  95 01            sta $01,x
000FD6r 2               
000FD6r 2               ; src/prelude.fth:33:18 in `loopimpl`
000FD6r 2               @OPCODE_476:   ; [c64_ir] AltPop
000FD6r 2  E8               inx
000FD7r 2  E8               inx
000FD8r 2  68               pla
000FD9r 2  95 00            sta $00,x
000FDBr 2  68               pla
000FDCr 2  95 01            sta $01,x
000FDEr 2               
000FDEr 2               ; src/prelude.fth:18:8 in `1+`
000FDEr 2               @OPCODE_477:   ; [c64_ir] PushLiteral(1)
000FDEr 2  E8               inx
000FDFr 2  E8               inx
000FE0r 2  A9 01            lda #1
000FE2r 2  95 00            sta $00,x
000FE4r 2  A9 00            lda #0
000FE6r 2  95 01            sta $01,x
000FE8r 2               
000FE8r 2               ; src/prelude.fth:18:10 in `1+`
000FE8r 2               @OPCODE_478:   ; [c64_ir] Add
000FE8r 2                   ; 21
000FE8r 2  CA               dex
000FE9r 2  CA               dex
000FEAr 2  18               clc
000FEBr 2  B5 00            lda $00,x
000FEDr 2  75 02            adc $02,x
000FEFr 2  95 00            sta $00,x
000FF1r 2  B5 01            lda $01,x
000FF3r 2  75 03            adc $03,x
000FF5r 2  95 01            sta $01,x
000FF7r 2               
000FF7r 2               ; src/prelude.fth:4:10 in `over`
000FF7r 2               @OPCODE_479:   ; [c64_ir] AltPush
000FF7r 2  CA               dex
000FF8r 2  CA               dex
000FF9r 2  B5 03            lda $03,x
000FFBr 2  48               pha
000FFCr 2  B5 02            lda $02,x
000FFEr 2  48               pha
000FFFr 2               
000FFFr 2               ; src/prelude.fth:4:13 in `over`
000FFFr 2               @OPCODE_480:   ; [c64_ir] TempStore
000FFFr 2  CA               dex
001000r 2  CA               dex
001001r 2  B5 03            lda $03,x
001003r 2  85 96            sta TEMP_PAX2
001005r 2  B5 02            lda $02,x
001007r 2  85 95            sta TEMP_PAX1
001009r 2               
001009r 2               ; src/prelude.fth:4:19 in `over`
001009r 2               @OPCODE_481:   ; [c64_ir] TempLoad
001009r 2  E8               inx
00100Ar 2  E8               inx
00100Br 2  A5 95            lda TEMP_PAX1
00100Dr 2  95 00            sta $00,x
00100Fr 2  A5 96            lda TEMP_PAX2
001011r 2  95 01            sta $01,x
001013r 2               
001013r 2               ; src/prelude.fth:4:25 in `over`
001013r 2               @OPCODE_482:   ; [c64_ir] AltPop
001013r 2  E8               inx
001014r 2  E8               inx
001015r 2  68               pla
001016r 2  95 00            sta $00,x
001018r 2  68               pla
001019r 2  95 01            sta $01,x
00101Br 2               
00101Br 2               ; src/prelude.fth:4:28 in `over`
00101Br 2               @OPCODE_483:   ; [c64_ir] TempLoad
00101Br 2  E8               inx
00101Cr 2  E8               inx
00101Dr 2  A5 95            lda TEMP_PAX1
00101Fr 2  95 00            sta $00,x
001021r 2  A5 96            lda TEMP_PAX2
001023r 2  95 01            sta $01,x
001025r 2               
001025r 2               ; src/prelude.fth:4:10 in `over`
001025r 2               @OPCODE_484:   ; [c64_ir] AltPush
001025r 2  CA               dex
001026r 2  CA               dex
001027r 2  B5 03            lda $03,x
001029r 2  48               pha
00102Ar 2  B5 02            lda $02,x
00102Cr 2  48               pha
00102Dr 2               
00102Dr 2               ; src/prelude.fth:4:13 in `over`
00102Dr 2               @OPCODE_485:   ; [c64_ir] TempStore
00102Dr 2  CA               dex
00102Er 2  CA               dex
00102Fr 2  B5 03            lda $03,x
001031r 2  85 96            sta TEMP_PAX2
001033r 2  B5 02            lda $02,x
001035r 2  85 95            sta TEMP_PAX1
001037r 2               
001037r 2               ; src/prelude.fth:4:19 in `over`
001037r 2               @OPCODE_486:   ; [c64_ir] TempLoad
001037r 2  E8               inx
001038r 2  E8               inx
001039r 2  A5 95            lda TEMP_PAX1
00103Br 2  95 00            sta $00,x
00103Dr 2  A5 96            lda TEMP_PAX2
00103Fr 2  95 01            sta $01,x
001041r 2               
001041r 2               ; src/prelude.fth:4:25 in `over`
001041r 2               @OPCODE_487:   ; [c64_ir] AltPop
001041r 2  E8               inx
001042r 2  E8               inx
001043r 2  68               pla
001044r 2  95 00            sta $00,x
001046r 2  68               pla
001047r 2  95 01            sta $01,x
001049r 2               
001049r 2               ; src/prelude.fth:4:28 in `over`
001049r 2               @OPCODE_488:   ; [c64_ir] TempLoad
001049r 2  E8               inx
00104Ar 2  E8               inx
00104Br 2  A5 95            lda TEMP_PAX1
00104Dr 2  95 00            sta $00,x
00104Fr 2  A5 96            lda TEMP_PAX2
001051r 2  95 01            sta $01,x
001053r 2               
001053r 2               ; src/prelude.fth:33:29 in `loopimpl`
001053r 2               @OPCODE_489:   ; [c64_ir] AltPush
001053r 2  CA               dex
001054r 2  CA               dex
001055r 2  B5 03            lda $03,x
001057r 2  48               pha
001058r 2  B5 02            lda $02,x
00105Ar 2  48               pha
00105Br 2               
00105Br 2               ; src/prelude.fth:33:32 in `loopimpl`
00105Br 2               @OPCODE_490:   ; [c64_ir] AltPush
00105Br 2  CA               dex
00105Cr 2  CA               dex
00105Dr 2  B5 03            lda $03,x
00105Fr 2  48               pha
001060r 2  B5 02            lda $02,x
001062r 2  48               pha
001063r 2               
001063r 2               ; src/prelude.fth:14:12 in `invert`
001063r 2               @OPCODE_491:   ; [c64_ir] PushLiteral(-1)
001063r 2  E8               inx
001064r 2  E8               inx
001065r 2  A9 FF            lda #255
001067r 2  95 00            sta $00,x
001069r 2  A9 FF            lda #255
00106Br 2  95 01            sta $01,x
00106Dr 2               
00106Dr 2               ; src/prelude.fth:14:15 in `invert`
00106Dr 2               @OPCODE_492:   ; [c64_ir] Nand
00106Dr 2                   ; 26
00106Dr 2  CA               dex
00106Er 2  CA               dex
00106Fr 2  B5 00            lda $00,x
001071r 2  35 02            and $02,x
001073r 2  49 FF            eor #$ff
001075r 2  95 00            sta $00,x
001077r 2  B5 01            lda $01,x
001079r 2  35 03            and $03,x
00107Br 2  49 FF            eor #$ff
00107Dr 2  95 01            sta $01,x
00107Fr 2               
00107Fr 2               ; src/prelude.fth:15:19 in `negate`
00107Fr 2               @OPCODE_493:   ; [c64_ir] PushLiteral(1)
00107Fr 2  E8               inx
001080r 2  E8               inx
001081r 2  A9 01            lda #1
001083r 2  95 00            sta $00,x
001085r 2  A9 00            lda #0
001087r 2  95 01            sta $01,x
001089r 2               
001089r 2               ; src/prelude.fth:15:21 in `negate`
001089r 2               @OPCODE_494:   ; [c64_ir] Add
001089r 2                   ; 21
001089r 2  CA               dex
00108Ar 2  CA               dex
00108Br 2  18               clc
00108Cr 2  B5 00            lda $00,x
00108Er 2  75 02            adc $02,x
001090r 2  95 00            sta $00,x
001092r 2  B5 01            lda $01,x
001094r 2  75 03            adc $03,x
001096r 2  95 01            sta $01,x
001098r 2               
001098r 2               ; src/prelude.fth:16:19 in `-`
001098r 2               @OPCODE_495:   ; [c64_ir] Add
001098r 2                   ; 21
001098r 2  CA               dex
001099r 2  CA               dex
00109Ar 2  18               clc
00109Br 2  B5 00            lda $00,x
00109Dr 2  75 02            adc $02,x
00109Fr 2  95 00            sta $00,x
0010A1r 2  B5 01            lda $01,x
0010A3r 2  75 03            adc $03,x
0010A5r 2  95 01            sta $01,x
0010A7r 2               
0010A7r 2               ; src/prelude.fth:21:8 in `0=`
0010A7r 2               @OPCODE_496:   ; [c64_ir] JumpIf0(42)
0010A7r 2  CA               dex
0010A8r 2  CA               dex
0010A9r 2  B5 02            lda $02,x
0010ABr 2  15 03            ora $03,x
0010ADr 2  D0 03            bne *+5
0010AFr 2  4C rr rr         jmp @target_42
0010B2r 2               
0010B2r 2               @target_41:
0010B2r 2               
0010B2r 2               ; src/prelude.fth:21:11 in `0=`
0010B2r 2               @OPCODE_498:   ; [c64_ir] PushLiteral(0)
0010B2r 2  E8               inx
0010B3r 2  E8               inx
0010B4r 2  A9 00            lda #0
0010B6r 2  95 00            sta $00,x
0010B8r 2  A9 00            lda #0
0010BAr 2  95 01            sta $01,x
0010BCr 2               
0010BCr 2               ; src/prelude.fth:21:13 in `0=`
0010BCr 2               @OPCODE_499:   ; [c64_ir] JumpElse(43)
0010BCr 2  4C rr rr         jmp @target_43
0010BFr 2               
0010BFr 2               @target_42:
0010BFr 2               
0010BFr 2               ; src/prelude.fth:21:18 in `0=`
0010BFr 2               @OPCODE_501:   ; [c64_ir] PushLiteral(-1)
0010BFr 2  E8               inx
0010C0r 2  E8               inx
0010C1r 2  A9 FF            lda #255
0010C3r 2  95 00            sta $00,x
0010C5r 2  A9 FF            lda #255
0010C7r 2  95 01            sta $01,x
0010C9r 2               
0010C9r 2               ; src/prelude.fth:21:21 in `0=`
0010C9r 2               @OPCODE_502:   ; [c64_ir] JumpTarget(42)
0010C9r 2               
0010C9r 2               @target_43:
0010C9r 2               
0010C9r 2               ; src/prelude.fth:3:10 in `swap`
0010C9r 2               @OPCODE_504:   ; [c64_ir] AltPush
0010C9r 2  CA               dex
0010CAr 2  CA               dex
0010CBr 2  B5 03            lda $03,x
0010CDr 2  48               pha
0010CEr 2  B5 02            lda $02,x
0010D0r 2  48               pha
0010D1r 2               
0010D1r 2               ; src/prelude.fth:3:19 in `swap`
0010D1r 2               @OPCODE_505:   ; [c64_ir] AltPop
0010D1r 2  E8               inx
0010D2r 2  E8               inx
0010D3r 2  68               pla
0010D4r 2  95 00            sta $00,x
0010D6r 2  68               pla
0010D7r 2  95 01            sta $01,x
0010D9r 2               
0010D9r 2               ; snake.pax:95:3 in `initialize-snake`
0010D9r 2               @OPCODE_506:   ; [c64_ir] LoopIf0(40)
0010D9r 2  CA               dex
0010DAr 2  CA               dex
0010DBr 2  B5 02            lda $02,x
0010DDr 2  15 03            ora $03,x
0010DFr 2  D0 03            bne *+5
0010E1r 2  4C rr rr         jmp @target_40
0010E4r 2               
0010E4r 2               @target_44:
0010E4r 2               
0010E4r 2               ; snake.pax:95:3 in `initialize-snake`
0010E4r 2               @OPCODE_508:   ; [c64_ir] AltPop
0010E4r 2  E8               inx
0010E5r 2  E8               inx
0010E6r 2  68               pla
0010E7r 2  95 00            sta $00,x
0010E9r 2  68               pla
0010EAr 2  95 01            sta $01,x
0010ECr 2               
0010ECr 2               ; snake.pax:95:3 in `initialize-snake`
0010ECr 2               @OPCODE_509:   ; [c64_ir] Drop
0010ECr 2  CA               dex
0010EDr 2  CA               dex
0010EEr 2               
0010EEr 2               ; snake.pax:95:3 in `initialize-snake`
0010EEr 2               @OPCODE_510:   ; [c64_ir] AltPop
0010EEr 2  E8               inx
0010EFr 2  E8               inx
0010F0r 2  68               pla
0010F1r 2  95 00            sta $00,x
0010F3r 2  68               pla
0010F4r 2  95 01            sta $01,x
0010F6r 2               
0010F6r 2               ; snake.pax:95:3 in `initialize-snake`
0010F6r 2               @OPCODE_511:   ; [c64_ir] Drop
0010F6r 2  CA               dex
0010F7r 2  CA               dex
0010F8r 2               
0010F8r 2               ; snake.pax:96:3 in `initialize-snake`
0010F8r 2               @OPCODE_512:   ; [c64_ir] PushLiteral(39)
0010F8r 2  E8               inx
0010F9r 2  E8               inx
0010FAr 2  A9 27            lda #39
0010FCr 2  95 00            sta $00,x
0010FEr 2  A9 00            lda #0
001100r 2  95 01            sta $01,x
001102r 2               
001102r 2               ; snake.pax:96:9 in `initialize-snake`
001102r 2               @OPCODE_513:   ; [c64_ir] PushLiteral(-26660)
001102r 2  E8               inx
001103r 2  E8               inx
001104r 2  A9 DC            lda #220
001106r 2  95 00            sta $00,x
001108r 2  A9 97            lda #151
00110Ar 2  95 01            sta $01,x
00110Cr 2               
00110Cr 2               ; snake.pax:96:19 in `initialize-snake`
00110Cr 2               @OPCODE_514:   ; [c64_ir] Store
00110Cr 2  CA               dex
00110Dr 2  CA               dex
00110Er 2  CA               dex
00110Fr 2  CA               dex
001110r 2  B5 02            lda $02,x
001112r 2  81 04            sta ($04,x)
001114r 2                   ; TODO high byte
001114r 2               
001114r 2               ; <inline>:0:0 in `main`
001114r 2               @OPCODE_515:   ; [c64_ir] AltPop
001114r 2  E8               inx
001115r 2  E8               inx
001116r 2  68               pla
001117r 2  95 00            sta $00,x
001119r 2  68               pla
00111Ar 2  95 01            sta $01,x
00111Cr 2               
00111Cr 2               ; <inline>:0:0 in `main`
00111Cr 2               @OPCODE_516:   ; [c64_ir] Drop
00111Cr 2  CA               dex
00111Dr 2  CA               dex
00111Er 2               
00111Er 2               ; snake.pax:100:21 in `initialize-apple`
00111Er 2               @OPCODE_517:   ; [c64_ir] PushLiteral(8)
00111Er 2  E8               inx
00111Fr 2  E8               inx
001120r 2  A9 08            lda #8
001122r 2  95 00            sta $00,x
001124r 2  A9 00            lda #0
001126r 2  95 01            sta $01,x
001128r 2               
001128r 2               ; snake.pax:100:23 in `initialize-apple`
001128r 2               @OPCODE_518:   ; [c64_ir] PushLiteral(13)
001128r 2  E8               inx
001129r 2  E8               inx
00112Ar 2  A9 0D            lda #13
00112Cr 2  95 00            sta $00,x
00112Er 2  A9 00            lda #0
001130r 2  95 01            sta $01,x
001132r 2               
001132r 2               ; snake.pax:98:22 in `set-apple-position`
001132r 2               @OPCODE_519:   ; [c64_ir] PushLiteral(-26664)
001132r 2  E8               inx
001133r 2  E8               inx
001134r 2  A9 D8            lda #216
001136r 2  95 00            sta $00,x
001138r 2  A9 97            lda #151
00113Ar 2  95 01            sta $01,x
00113Cr 2               
00113Cr 2               ; snake.pax:98:30 in `set-apple-position`
00113Cr 2               @OPCODE_520:   ; [c64_ir] Store
00113Cr 2  CA               dex
00113Dr 2  CA               dex
00113Er 2  CA               dex
00113Fr 2  CA               dex
001140r 2  B5 02            lda $02,x
001142r 2  81 04            sta ($04,x)
001144r 2                   ; TODO high byte
001144r 2               
001144r 2               ; snake.pax:98:32 in `set-apple-position`
001144r 2               @OPCODE_521:   ; [c64_ir] PushLiteral(-26662)
001144r 2  E8               inx
001145r 2  E8               inx
001146r 2  A9 DA            lda #218
001148r 2  95 00            sta $00,x
00114Ar 2  A9 97            lda #151
00114Cr 2  95 01            sta $01,x
00114Er 2               
00114Er 2               ; snake.pax:98:40 in `set-apple-position`
00114Er 2               @OPCODE_522:   ; [c64_ir] Store
00114Er 2  CA               dex
00114Fr 2  CA               dex
001150r 2  CA               dex
001151r 2  CA               dex
001152r 2  B5 02            lda $02,x
001154r 2  81 04            sta ($04,x)
001156r 2                   ; TODO high byte
001156r 2               
001156r 2               ; <inline>:0:0 in `main`
001156r 2               @OPCODE_523:   ; [c64_ir] PushLiteral(7777)
001156r 2  E8               inx
001157r 2  E8               inx
001158r 2  A9 61            lda #97
00115Ar 2  95 00            sta $00,x
00115Cr 2  A9 1E            lda #30
00115Er 2  95 01            sta $01,x
001160r 2               
001160r 2               ; <inline>:0:0 in `main`
001160r 2               @OPCODE_524:   ; [c64_ir] AltPush
001160r 2  CA               dex
001161r 2  CA               dex
001162r 2  B5 03            lda $03,x
001164r 2  48               pha
001165r 2  B5 02            lda $02,x
001167r 2  48               pha
001168r 2               
001168r 2               ; snake.pax:103:3 in `draw-full-snake`
001168r 2               @OPCODE_525:   ; [c64_ir] PushLiteral(-26658)
001168r 2  E8               inx
001169r 2  E8               inx
00116Ar 2  A9 DE            lda #222
00116Cr 2  95 00            sta $00,x
00116Er 2  A9 97            lda #151
001170r 2  95 01            sta $01,x
001172r 2               
001172r 2               ; snake.pax:103:10 in `draw-full-snake`
001172r 2               @OPCODE_526:   ; [c64_ir] Load
001172r 2  A1 00            lda ($00,x)
001174r 2  95 00            sta $00,x
001176r 2  A9 00            lda #0
001178r 2  95 01            sta $01,x
00117Ar 2               
00117Ar 2               ; snake.pax:103:12 in `draw-full-snake`
00117Ar 2               @OPCODE_527:   ; [c64_ir] PushLiteral(0)
00117Ar 2  E8               inx
00117Br 2  E8               inx
00117Cr 2  A9 00            lda #0
00117Er 2  95 00            sta $00,x
001180r 2  A9 00            lda #0
001182r 2  95 01            sta $01,x
001184r 2               
001184r 2               ; snake.pax:103:14 in `draw-full-snake`
001184r 2               @OPCODE_528:   ; [c64_ir] AltPush
001184r 2  CA               dex
001185r 2  CA               dex
001186r 2  B5 03            lda $03,x
001188r 2  48               pha
001189r 2  B5 02            lda $02,x
00118Br 2  48               pha
00118Cr 2               
00118Cr 2               ; snake.pax:103:14 in `draw-full-snake`
00118Cr 2               @OPCODE_529:   ; [c64_ir] AltPush
00118Cr 2  CA               dex
00118Dr 2  CA               dex
00118Er 2  B5 03            lda $03,x
001190r 2  48               pha
001191r 2  B5 02            lda $02,x
001193r 2  48               pha
001194r 2               
001194r 2               ; snake.pax:103:14 in `draw-full-snake`
001194r 2               @OPCODE_530:   ; [c64_ir] LoopTarget(44)
001194r 2               
001194r 2               @target_45:
001194r 2               
001194r 2               ; src/prelude.fth:38:8 in `i`
001194r 2               @OPCODE_532:   ; [c64_ir] AltPop
001194r 2  E8               inx
001195r 2  E8               inx
001196r 2  68               pla
001197r 2  95 00            sta $00,x
001199r 2  68               pla
00119Ar 2  95 01            sta $01,x
00119Cr 2               
00119Cr 2               ; src/prelude.fth:38:11 in `i`
00119Cr 2               @OPCODE_533:   ; [c64_ir] AltPop
00119Cr 2  E8               inx
00119Dr 2  E8               inx
00119Er 2  68               pla
00119Fr 2  95 00            sta $00,x
0011A1r 2  68               pla
0011A2r 2  95 01            sta $01,x
0011A4r 2               
0011A4r 2               ; src/prelude.fth:38:14 in `i`
0011A4r 2               @OPCODE_534:   ; [c64_ir] TempStore
0011A4r 2  CA               dex
0011A5r 2  CA               dex
0011A6r 2  B5 03            lda $03,x
0011A8r 2  85 96            sta TEMP_PAX2
0011AAr 2  B5 02            lda $02,x
0011ACr 2  85 95            sta TEMP_PAX1
0011AEr 2               
0011AEr 2               ; src/prelude.fth:38:20 in `i`
0011AEr 2               @OPCODE_535:   ; [c64_ir] TempLoad
0011AEr 2  E8               inx
0011AFr 2  E8               inx
0011B0r 2  A5 95            lda TEMP_PAX1
0011B2r 2  95 00            sta $00,x
0011B4r 2  A5 96            lda TEMP_PAX2
0011B6r 2  95 01            sta $01,x
0011B8r 2               
0011B8r 2               ; src/prelude.fth:38:26 in `i`
0011B8r 2               @OPCODE_536:   ; [c64_ir] AltPush
0011B8r 2  CA               dex
0011B9r 2  CA               dex
0011BAr 2  B5 03            lda $03,x
0011BCr 2  48               pha
0011BDr 2  B5 02            lda $02,x
0011BFr 2  48               pha
0011C0r 2               
0011C0r 2               ; src/prelude.fth:38:29 in `i`
0011C0r 2               @OPCODE_537:   ; [c64_ir] AltPush
0011C0r 2  CA               dex
0011C1r 2  CA               dex
0011C2r 2  B5 03            lda $03,x
0011C4r 2  48               pha
0011C5r 2  B5 02            lda $02,x
0011C7r 2  48               pha
0011C8r 2               
0011C8r 2               ; src/prelude.fth:38:35 in `i`
0011C8r 2               @OPCODE_538:   ; [c64_ir] TempLoad
0011C8r 2  E8               inx
0011C9r 2  E8               inx
0011CAr 2  A5 95            lda TEMP_PAX1
0011CCr 2  95 00            sta $00,x
0011CEr 2  A5 96            lda TEMP_PAX2
0011D0r 2  95 01            sta $01,x
0011D2r 2               
0011D2r 2               ; src/prelude.fth:6:10 in `dup`
0011D2r 2               @OPCODE_539:   ; [c64_ir] TempStore
0011D2r 2  CA               dex
0011D3r 2  CA               dex
0011D4r 2  B5 03            lda $03,x
0011D6r 2  85 96            sta TEMP_PAX2
0011D8r 2  B5 02            lda $02,x
0011DAr 2  85 95            sta TEMP_PAX1
0011DCr 2               
0011DCr 2               ; src/prelude.fth:6:16 in `dup`
0011DCr 2               @OPCODE_540:   ; [c64_ir] TempLoad
0011DCr 2  E8               inx
0011DDr 2  E8               inx
0011DEr 2  A5 95            lda TEMP_PAX1
0011E0r 2  95 00            sta $00,x
0011E2r 2  A5 96            lda TEMP_PAX2
0011E4r 2  95 01            sta $01,x
0011E6r 2               
0011E6r 2               ; src/prelude.fth:6:22 in `dup`
0011E6r 2               @OPCODE_541:   ; [c64_ir] TempLoad
0011E6r 2  E8               inx
0011E7r 2  E8               inx
0011E8r 2  A5 95            lda TEMP_PAX1
0011EAr 2  95 00            sta $00,x
0011ECr 2  A5 96            lda TEMP_PAX2
0011EEr 2  95 01            sta $01,x
0011F0r 2               
0011F0r 2               ; src/prelude.fth:41:13 in `cells`
0011F0r 2               @OPCODE_542:   ; [c64_ir] Add
0011F0r 2                   ; 21
0011F0r 2  CA               dex
0011F1r 2  CA               dex
0011F2r 2  18               clc
0011F3r 2  B5 00            lda $00,x
0011F5r 2  75 02            adc $02,x
0011F7r 2  95 00            sta $00,x
0011F9r 2  B5 01            lda $01,x
0011FBr 2  75 03            adc $03,x
0011FDr 2  95 01            sta $01,x
0011FFr 2               
0011FFr 2               ; snake.pax:42:9 in `snake-x`
0011FFr 2               @OPCODE_543:   ; [c64_ir] PushLiteral(-28668)
0011FFr 2  E8               inx
001200r 2  E8               inx
001201r 2  A9 04            lda #4
001203r 2  95 00            sta $00,x
001205r 2  A9 90            lda #144
001207r 2  95 01            sta $01,x
001209r 2               
001209r 2               ; snake.pax:42:22 in `snake-x`
001209r 2               @OPCODE_544:   ; [c64_ir] Add
001209r 2                   ; 21
001209r 2  CA               dex
00120Ar 2  CA               dex
00120Br 2  18               clc
00120Cr 2  B5 00            lda $00,x
00120Er 2  75 02            adc $02,x
001210r 2  95 00            sta $00,x
001212r 2  B5 01            lda $01,x
001214r 2  75 03            adc $03,x
001216r 2  95 01            sta $01,x
001218r 2               
001218r 2               ; snake.pax:104:15 in `draw-full-snake`
001218r 2               @OPCODE_545:   ; [c64_ir] Load
001218r 2  A1 00            lda ($00,x)
00121Ar 2  95 00            sta $00,x
00121Cr 2  A9 00            lda #0
00121Er 2  95 01            sta $01,x
001220r 2               
001220r 2               ; src/prelude.fth:38:8 in `i`
001220r 2               @OPCODE_546:   ; [c64_ir] AltPop
001220r 2  E8               inx
001221r 2  E8               inx
001222r 2  68               pla
001223r 2  95 00            sta $00,x
001225r 2  68               pla
001226r 2  95 01            sta $01,x
001228r 2               
001228r 2               ; src/prelude.fth:38:11 in `i`
001228r 2               @OPCODE_547:   ; [c64_ir] AltPop
001228r 2  E8               inx
001229r 2  E8               inx
00122Ar 2  68               pla
00122Br 2  95 00            sta $00,x
00122Dr 2  68               pla
00122Er 2  95 01            sta $01,x
001230r 2               
001230r 2               ; src/prelude.fth:38:14 in `i`
001230r 2               @OPCODE_548:   ; [c64_ir] TempStore
001230r 2  CA               dex
001231r 2  CA               dex
001232r 2  B5 03            lda $03,x
001234r 2  85 96            sta TEMP_PAX2
001236r 2  B5 02            lda $02,x
001238r 2  85 95            sta TEMP_PAX1
00123Ar 2               
00123Ar 2               ; src/prelude.fth:38:20 in `i`
00123Ar 2               @OPCODE_549:   ; [c64_ir] TempLoad
00123Ar 2  E8               inx
00123Br 2  E8               inx
00123Cr 2  A5 95            lda TEMP_PAX1
00123Er 2  95 00            sta $00,x
001240r 2  A5 96            lda TEMP_PAX2
001242r 2  95 01            sta $01,x
001244r 2               
001244r 2               ; src/prelude.fth:38:26 in `i`
001244r 2               @OPCODE_550:   ; [c64_ir] AltPush
001244r 2  CA               dex
001245r 2  CA               dex
001246r 2  B5 03            lda $03,x
001248r 2  48               pha
001249r 2  B5 02            lda $02,x
00124Br 2  48               pha
00124Cr 2               
00124Cr 2               ; src/prelude.fth:38:29 in `i`
00124Cr 2               @OPCODE_551:   ; [c64_ir] AltPush
00124Cr 2  CA               dex
00124Dr 2  CA               dex
00124Er 2  B5 03            lda $03,x
001250r 2  48               pha
001251r 2  B5 02            lda $02,x
001253r 2  48               pha
001254r 2               
001254r 2               ; src/prelude.fth:38:35 in `i`
001254r 2               @OPCODE_552:   ; [c64_ir] TempLoad
001254r 2  E8               inx
001255r 2  E8               inx
001256r 2  A5 95            lda TEMP_PAX1
001258r 2  95 00            sta $00,x
00125Ar 2  A5 96            lda TEMP_PAX2
00125Cr 2  95 01            sta $01,x
00125Er 2               
00125Er 2               ; src/prelude.fth:6:10 in `dup`
00125Er 2               @OPCODE_553:   ; [c64_ir] TempStore
00125Er 2  CA               dex
00125Fr 2  CA               dex
001260r 2  B5 03            lda $03,x
001262r 2  85 96            sta TEMP_PAX2
001264r 2  B5 02            lda $02,x
001266r 2  85 95            sta TEMP_PAX1
001268r 2               
001268r 2               ; src/prelude.fth:6:16 in `dup`
001268r 2               @OPCODE_554:   ; [c64_ir] TempLoad
001268r 2  E8               inx
001269r 2  E8               inx
00126Ar 2  A5 95            lda TEMP_PAX1
00126Cr 2  95 00            sta $00,x
00126Er 2  A5 96            lda TEMP_PAX2
001270r 2  95 01            sta $01,x
001272r 2               
001272r 2               ; src/prelude.fth:6:22 in `dup`
001272r 2               @OPCODE_555:   ; [c64_ir] TempLoad
001272r 2  E8               inx
001273r 2  E8               inx
001274r 2  A5 95            lda TEMP_PAX1
001276r 2  95 00            sta $00,x
001278r 2  A5 96            lda TEMP_PAX2
00127Ar 2  95 01            sta $01,x
00127Cr 2               
00127Cr 2               ; src/prelude.fth:41:13 in `cells`
00127Cr 2               @OPCODE_556:   ; [c64_ir] Add
00127Cr 2                   ; 21
00127Cr 2  CA               dex
00127Dr 2  CA               dex
00127Er 2  18               clc
00127Fr 2  B5 00            lda $00,x
001281r 2  75 02            adc $02,x
001283r 2  95 00            sta $00,x
001285r 2  B5 01            lda $01,x
001287r 2  75 03            adc $03,x
001289r 2  95 01            sta $01,x
00128Br 2               
00128Br 2               ; snake.pax:45:9 in `snake-y`
00128Br 2               @OPCODE_557:   ; [c64_ir] PushLiteral(-27666)
00128Br 2  E8               inx
00128Cr 2  E8               inx
00128Dr 2  A9 EE            lda #238
00128Fr 2  95 00            sta $00,x
001291r 2  A9 93            lda #147
001293r 2  95 01            sta $01,x
001295r 2               
001295r 2               ; snake.pax:45:22 in `snake-y`
001295r 2               @OPCODE_558:   ; [c64_ir] Add
001295r 2                   ; 21
001295r 2  CA               dex
001296r 2  CA               dex
001297r 2  18               clc
001298r 2  B5 00            lda $00,x
00129Ar 2  75 02            adc $02,x
00129Cr 2  95 00            sta $00,x
00129Er 2  B5 01            lda $01,x
0012A0r 2  75 03            adc $03,x
0012A2r 2  95 01            sta $01,x
0012A4r 2               
0012A4r 2               ; snake.pax:104:27 in `draw-full-snake`
0012A4r 2               @OPCODE_559:   ; [c64_ir] Load
0012A4r 2  A1 00            lda ($00,x)
0012A6r 2  95 00            sta $00,x
0012A8r 2  A9 00            lda #0
0012AAr 2  95 01            sta $01,x
0012ACr 2               
0012ACr 2               ; <inline>:0:0 in `main`
0012ACr 2               @OPCODE_560:   ; [c64_ir] PushLiteral(7777)
0012ACr 2  E8               inx
0012ADr 2  E8               inx
0012AEr 2  A9 61            lda #97
0012B0r 2  95 00            sta $00,x
0012B2r 2  A9 1E            lda #30
0012B4r 2  95 01            sta $01,x
0012B6r 2               
0012B6r 2               ; <inline>:0:0 in `main`
0012B6r 2               @OPCODE_561:   ; [c64_ir] AltPush
0012B6r 2  CA               dex
0012B7r 2  CA               dex
0012B8r 2  B5 03            lda $03,x
0012BAr 2  48               pha
0012BBr 2  B5 02            lda $02,x
0012BDr 2  48               pha
0012BEr 2               
0012BEr 2               ; src/prelude.fth:3:10 in `swap`
0012BEr 2               @OPCODE_562:   ; [c64_ir] AltPush
0012BEr 2  CA               dex
0012BFr 2  CA               dex
0012C0r 2  B5 03            lda $03,x
0012C2r 2  48               pha
0012C3r 2  B5 02            lda $02,x
0012C5r 2  48               pha
0012C6r 2               
0012C6r 2               ; src/prelude.fth:3:13 in `swap`
0012C6r 2               @OPCODE_563:   ; [c64_ir] TempStore
0012C6r 2  CA               dex
0012C7r 2  CA               dex
0012C8r 2  B5 03            lda $03,x
0012CAr 2  85 96            sta TEMP_PAX2
0012CCr 2  B5 02            lda $02,x
0012CEr 2  85 95            sta TEMP_PAX1
0012D0r 2               
0012D0r 2               ; src/prelude.fth:3:19 in `swap`
0012D0r 2               @OPCODE_564:   ; [c64_ir] AltPop
0012D0r 2  E8               inx
0012D1r 2  E8               inx
0012D2r 2  68               pla
0012D3r 2  95 00            sta $00,x
0012D5r 2  68               pla
0012D6r 2  95 01            sta $01,x
0012D8r 2               
0012D8r 2               ; src/prelude.fth:3:22 in `swap`
0012D8r 2               @OPCODE_565:   ; [c64_ir] TempLoad
0012D8r 2  E8               inx
0012D9r 2  E8               inx
0012DAr 2  A5 95            lda TEMP_PAX1
0012DCr 2  95 00            sta $00,x
0012DEr 2  A5 96            lda TEMP_PAX2
0012E0r 2  95 01            sta $01,x
0012E2r 2               
0012E2r 2               ; src/prelude.fth:3:13 in `swap`
0012E2r 2               @OPCODE_566:   ; [c64_ir] TempStore
0012E2r 2  CA               dex
0012E3r 2  CA               dex
0012E4r 2  B5 03            lda $03,x
0012E6r 2  85 96            sta TEMP_PAX2
0012E8r 2  B5 02            lda $02,x
0012EAr 2  85 95            sta TEMP_PAX1
0012ECr 2               
0012ECr 2               ; src/prelude.fth:3:22 in `swap`
0012ECr 2               @OPCODE_567:   ; [c64_ir] TempLoad
0012ECr 2  E8               inx
0012EDr 2  E8               inx
0012EEr 2  A5 95            lda TEMP_PAX1
0012F0r 2  95 00            sta $00,x
0012F2r 2  A5 96            lda TEMP_PAX2
0012F4r 2  95 01            sta $01,x
0012F6r 2               
0012F6r 2               ; src/prelude.fth:5:10 in `rot`
0012F6r 2               @OPCODE_568:   ; [c64_ir] AltPush
0012F6r 2  CA               dex
0012F7r 2  CA               dex
0012F8r 2  B5 03            lda $03,x
0012FAr 2  48               pha
0012FBr 2  B5 02            lda $02,x
0012FDr 2  48               pha
0012FEr 2               
0012FEr 2               ; src/prelude.fth:3:13 in `swap`
0012FEr 2               @OPCODE_569:   ; [c64_ir] TempStore
0012FEr 2  CA               dex
0012FFr 2  CA               dex
001300r 2  B5 03            lda $03,x
001302r 2  85 96            sta TEMP_PAX2
001304r 2  B5 02            lda $02,x
001306r 2  85 95            sta TEMP_PAX1
001308r 2               
001308r 2               ; src/prelude.fth:3:19 in `swap`
001308r 2               @OPCODE_570:   ; [c64_ir] PushLiteral(232)
001308r 2  E8               inx
001309r 2  E8               inx
00130Ar 2  A9 E8            lda #232
00130Cr 2  95 00            sta $00,x
00130Er 2  A9 00            lda #0
001310r 2  95 01            sta $01,x
001312r 2               
001312r 2               ; src/prelude.fth:3:22 in `swap`
001312r 2               @OPCODE_571:   ; [c64_ir] TempLoad
001312r 2  E8               inx
001313r 2  E8               inx
001314r 2  A5 95            lda TEMP_PAX1
001316r 2  95 00            sta $00,x
001318r 2  A5 96            lda TEMP_PAX2
00131Ar 2  95 01            sta $01,x
00131Cr 2               
00131Cr 2               ; src/prelude.fth:5:18 in `rot`
00131Cr 2               @OPCODE_572:   ; [c64_ir] AltPop
00131Cr 2  E8               inx
00131Dr 2  E8               inx
00131Er 2  68               pla
00131Fr 2  95 00            sta $00,x
001321r 2  68               pla
001322r 2  95 01            sta $01,x
001324r 2               
001324r 2               ; src/prelude.fth:3:10 in `swap`
001324r 2               @OPCODE_573:   ; [c64_ir] AltPush
001324r 2  CA               dex
001325r 2  CA               dex
001326r 2  B5 03            lda $03,x
001328r 2  48               pha
001329r 2  B5 02            lda $02,x
00132Br 2  48               pha
00132Cr 2               
00132Cr 2               ; src/prelude.fth:3:13 in `swap`
00132Cr 2               @OPCODE_574:   ; [c64_ir] TempStore
00132Cr 2  CA               dex
00132Dr 2  CA               dex
00132Er 2  B5 03            lda $03,x
001330r 2  85 96            sta TEMP_PAX2
001332r 2  B5 02            lda $02,x
001334r 2  85 95            sta TEMP_PAX1
001336r 2               
001336r 2               ; src/prelude.fth:3:19 in `swap`
001336r 2               @OPCODE_575:   ; [c64_ir] AltPop
001336r 2  E8               inx
001337r 2  E8               inx
001338r 2  68               pla
001339r 2  95 00            sta $00,x
00133Br 2  68               pla
00133Cr 2  95 01            sta $01,x
00133Er 2               
00133Er 2               ; src/prelude.fth:3:22 in `swap`
00133Er 2               @OPCODE_576:   ; [c64_ir] TempLoad
00133Er 2  E8               inx
00133Fr 2  E8               inx
001340r 2  A5 95            lda TEMP_PAX1
001342r 2  95 00            sta $00,x
001344r 2  A5 96            lda TEMP_PAX2
001346r 2  95 01            sta $01,x
001348r 2               
001348r 2               ; <inline>:0:0 in `main`
001348r 2               @OPCODE_577:   ; [c64_ir] PushLiteral(7777)
001348r 2  E8               inx
001349r 2  E8               inx
00134Ar 2  A9 61            lda #97
00134Cr 2  95 00            sta $00,x
00134Er 2  A9 1E            lda #30
001350r 2  95 01            sta $01,x
001352r 2               
001352r 2               ; <inline>:0:0 in `main`
001352r 2               @OPCODE_578:   ; [c64_ir] AltPush
001352r 2  CA               dex
001353r 2  CA               dex
001354r 2  B5 03            lda $03,x
001356r 2  48               pha
001357r 2  B5 02            lda $02,x
001359r 2  48               pha
00135Ar 2               
00135Ar 2               ; <inline>:0:0 in `main`
00135Ar 2               @OPCODE_579:   ; [c64_ir] PushLiteral(7777)
00135Ar 2  E8               inx
00135Br 2  E8               inx
00135Cr 2  A9 61            lda #97
00135Er 2  95 00            sta $00,x
001360r 2  A9 1E            lda #30
001362r 2  95 01            sta $01,x
001364r 2               
001364r 2               ; <inline>:0:0 in `main`
001364r 2               @OPCODE_580:   ; [c64_ir] AltPush
001364r 2  CA               dex
001365r 2  CA               dex
001366r 2  B5 03            lda $03,x
001368r 2  48               pha
001369r 2  B5 02            lda $02,x
00136Br 2  48               pha
00136Cr 2               
00136Cr 2               ; <inline>:0:0 in `main`
00136Cr 2               @OPCODE_581:   ; [c64_ir] PushLiteral(7777)
00136Cr 2  E8               inx
00136Dr 2  E8               inx
00136Er 2  A9 61            lda #97
001370r 2  95 00            sta $00,x
001372r 2  A9 1E            lda #30
001374r 2  95 01            sta $01,x
001376r 2               
001376r 2               ; <inline>:0:0 in `main`
001376r 2               @OPCODE_582:   ; [c64_ir] AltPush
001376r 2  CA               dex
001377r 2  CA               dex
001378r 2  B5 03            lda $03,x
00137Ar 2  48               pha
00137Br 2  B5 02            lda $02,x
00137Dr 2  48               pha
00137Er 2               
00137Er 2               ; src/prelude.fth:44:8 in `*`
00137Er 2               @OPCODE_583:   ; [c64_ir] PushLiteral(0)
00137Er 2  E8               inx
00137Fr 2  E8               inx
001380r 2  A9 00            lda #0
001382r 2  95 00            sta $00,x
001384r 2  A9 00            lda #0
001386r 2  95 01            sta $01,x
001388r 2               
001388r 2               ; src/prelude.fth:44:10 in `*`
001388r 2               @OPCODE_584:   ; [c64_ir] PushLiteral(40)
001388r 2  E8               inx
001389r 2  E8               inx
00138Ar 2  A9 28            lda #40
00138Cr 2  95 00            sta $00,x
00138Er 2  A9 00            lda #0
001390r 2  95 01            sta $01,x
001392r 2               
001392r 2               ; src/prelude.fth:44:13 in `*`
001392r 2               @OPCODE_585:   ; [c64_ir] PushLiteral(0)
001392r 2  E8               inx
001393r 2  E8               inx
001394r 2  A9 00            lda #0
001396r 2  95 00            sta $00,x
001398r 2  A9 00            lda #0
00139Ar 2  95 01            sta $01,x
00139Cr 2               
00139Cr 2               ; src/prelude.fth:44:15 in `*`
00139Cr 2               @OPCODE_586:   ; [c64_ir] AltPush
00139Cr 2  CA               dex
00139Dr 2  CA               dex
00139Er 2  B5 03            lda $03,x
0013A0r 2  48               pha
0013A1r 2  B5 02            lda $02,x
0013A3r 2  48               pha
0013A4r 2               
0013A4r 2               ; src/prelude.fth:44:15 in `*`
0013A4r 2               @OPCODE_587:   ; [c64_ir] AltPush
0013A4r 2  CA               dex
0013A5r 2  CA               dex
0013A6r 2  B5 03            lda $03,x
0013A8r 2  48               pha
0013A9r 2  B5 02            lda $02,x
0013ABr 2  48               pha
0013ACr 2               
0013ACr 2               ; src/prelude.fth:44:15 in `*`
0013ACr 2               @OPCODE_588:   ; [c64_ir] LoopTarget(45)
0013ACr 2               
0013ACr 2               @target_46:
0013ACr 2               
0013ACr 2               ; src/prelude.fth:4:10 in `over`
0013ACr 2               @OPCODE_590:   ; [c64_ir] AltPush
0013ACr 2  CA               dex
0013ADr 2  CA               dex
0013AEr 2  B5 03            lda $03,x
0013B0r 2  48               pha
0013B1r 2  B5 02            lda $02,x
0013B3r 2  48               pha
0013B4r 2               
0013B4r 2               ; src/prelude.fth:4:13 in `over`
0013B4r 2               @OPCODE_591:   ; [c64_ir] TempStore
0013B4r 2  CA               dex
0013B5r 2  CA               dex
0013B6r 2  B5 03            lda $03,x
0013B8r 2  85 96            sta TEMP_PAX2
0013BAr 2  B5 02            lda $02,x
0013BCr 2  85 95            sta TEMP_PAX1
0013BEr 2               
0013BEr 2               ; src/prelude.fth:4:19 in `over`
0013BEr 2               @OPCODE_592:   ; [c64_ir] TempLoad
0013BEr 2  E8               inx
0013BFr 2  E8               inx
0013C0r 2  A5 95            lda TEMP_PAX1
0013C2r 2  95 00            sta $00,x
0013C4r 2  A5 96            lda TEMP_PAX2
0013C6r 2  95 01            sta $01,x
0013C8r 2               
0013C8r 2               ; src/prelude.fth:4:25 in `over`
0013C8r 2               @OPCODE_593:   ; [c64_ir] AltPop
0013C8r 2  E8               inx
0013C9r 2  E8               inx
0013CAr 2  68               pla
0013CBr 2  95 00            sta $00,x
0013CDr 2  68               pla
0013CEr 2  95 01            sta $01,x
0013D0r 2               
0013D0r 2               ; src/prelude.fth:4:28 in `over`
0013D0r 2               @OPCODE_594:   ; [c64_ir] TempLoad
0013D0r 2  E8               inx
0013D1r 2  E8               inx
0013D2r 2  A5 95            lda TEMP_PAX1
0013D4r 2  95 00            sta $00,x
0013D6r 2  A5 96            lda TEMP_PAX2
0013D8r 2  95 01            sta $01,x
0013DAr 2               
0013DAr 2               ; src/prelude.fth:44:23 in `*`
0013DAr 2               @OPCODE_595:   ; [c64_ir] Add
0013DAr 2                   ; 21
0013DAr 2  CA               dex
0013DBr 2  CA               dex
0013DCr 2  18               clc
0013DDr 2  B5 00            lda $00,x
0013DFr 2  75 02            adc $02,x
0013E1r 2  95 00            sta $00,x
0013E3r 2  B5 01            lda $01,x
0013E5r 2  75 03            adc $03,x
0013E7r 2  95 01            sta $01,x
0013E9r 2               
0013E9r 2               ; src/prelude.fth:33:15 in `loopimpl`
0013E9r 2               @OPCODE_596:   ; [c64_ir] AltPop
0013E9r 2  E8               inx
0013EAr 2  E8               inx
0013EBr 2  68               pla
0013ECr 2  95 00            sta $00,x
0013EEr 2  68               pla
0013EFr 2  95 01            sta $01,x
0013F1r 2               
0013F1r 2               ; src/prelude.fth:33:18 in `loopimpl`
0013F1r 2               @OPCODE_597:   ; [c64_ir] AltPop
0013F1r 2  E8               inx
0013F2r 2  E8               inx
0013F3r 2  68               pla
0013F4r 2  95 00            sta $00,x
0013F6r 2  68               pla
0013F7r 2  95 01            sta $01,x
0013F9r 2               
0013F9r 2               ; src/prelude.fth:18:8 in `1+`
0013F9r 2               @OPCODE_598:   ; [c64_ir] PushLiteral(1)
0013F9r 2  E8               inx
0013FAr 2  E8               inx
0013FBr 2  A9 01            lda #1
0013FDr 2  95 00            sta $00,x
0013FFr 2  A9 00            lda #0
001401r 2  95 01            sta $01,x
001403r 2               
001403r 2               ; src/prelude.fth:18:10 in `1+`
001403r 2               @OPCODE_599:   ; [c64_ir] Add
001403r 2                   ; 21
001403r 2  CA               dex
001404r 2  CA               dex
001405r 2  18               clc
001406r 2  B5 00            lda $00,x
001408r 2  75 02            adc $02,x
00140Ar 2  95 00            sta $00,x
00140Cr 2  B5 01            lda $01,x
00140Er 2  75 03            adc $03,x
001410r 2  95 01            sta $01,x
001412r 2               
001412r 2               ; src/prelude.fth:4:10 in `over`
001412r 2               @OPCODE_600:   ; [c64_ir] AltPush
001412r 2  CA               dex
001413r 2  CA               dex
001414r 2  B5 03            lda $03,x
001416r 2  48               pha
001417r 2  B5 02            lda $02,x
001419r 2  48               pha
00141Ar 2               
00141Ar 2               ; src/prelude.fth:4:13 in `over`
00141Ar 2               @OPCODE_601:   ; [c64_ir] TempStore
00141Ar 2  CA               dex
00141Br 2  CA               dex
00141Cr 2  B5 03            lda $03,x
00141Er 2  85 96            sta TEMP_PAX2
001420r 2  B5 02            lda $02,x
001422r 2  85 95            sta TEMP_PAX1
001424r 2               
001424r 2               ; src/prelude.fth:4:19 in `over`
001424r 2               @OPCODE_602:   ; [c64_ir] TempLoad
001424r 2  E8               inx
001425r 2  E8               inx
001426r 2  A5 95            lda TEMP_PAX1
001428r 2  95 00            sta $00,x
00142Ar 2  A5 96            lda TEMP_PAX2
00142Cr 2  95 01            sta $01,x
00142Er 2               
00142Er 2               ; src/prelude.fth:4:25 in `over`
00142Er 2               @OPCODE_603:   ; [c64_ir] AltPop
00142Er 2  E8               inx
00142Fr 2  E8               inx
001430r 2  68               pla
001431r 2  95 00            sta $00,x
001433r 2  68               pla
001434r 2  95 01            sta $01,x
001436r 2               
001436r 2               ; src/prelude.fth:4:28 in `over`
001436r 2               @OPCODE_604:   ; [c64_ir] TempLoad
001436r 2  E8               inx
001437r 2  E8               inx
001438r 2  A5 95            lda TEMP_PAX1
00143Ar 2  95 00            sta $00,x
00143Cr 2  A5 96            lda TEMP_PAX2
00143Er 2  95 01            sta $01,x
001440r 2               
001440r 2               ; src/prelude.fth:4:10 in `over`
001440r 2               @OPCODE_605:   ; [c64_ir] AltPush
001440r 2  CA               dex
001441r 2  CA               dex
001442r 2  B5 03            lda $03,x
001444r 2  48               pha
001445r 2  B5 02            lda $02,x
001447r 2  48               pha
001448r 2               
001448r 2               ; src/prelude.fth:4:13 in `over`
001448r 2               @OPCODE_606:   ; [c64_ir] TempStore
001448r 2  CA               dex
001449r 2  CA               dex
00144Ar 2  B5 03            lda $03,x
00144Cr 2  85 96            sta TEMP_PAX2
00144Er 2  B5 02            lda $02,x
001450r 2  85 95            sta TEMP_PAX1
001452r 2               
001452r 2               ; src/prelude.fth:4:19 in `over`
001452r 2               @OPCODE_607:   ; [c64_ir] TempLoad
001452r 2  E8               inx
001453r 2  E8               inx
001454r 2  A5 95            lda TEMP_PAX1
001456r 2  95 00            sta $00,x
001458r 2  A5 96            lda TEMP_PAX2
00145Ar 2  95 01            sta $01,x
00145Cr 2               
00145Cr 2               ; src/prelude.fth:4:25 in `over`
00145Cr 2               @OPCODE_608:   ; [c64_ir] AltPop
00145Cr 2  E8               inx
00145Dr 2  E8               inx
00145Er 2  68               pla
00145Fr 2  95 00            sta $00,x
001461r 2  68               pla
001462r 2  95 01            sta $01,x
001464r 2               
001464r 2               ; src/prelude.fth:4:28 in `over`
001464r 2               @OPCODE_609:   ; [c64_ir] TempLoad
001464r 2  E8               inx
001465r 2  E8               inx
001466r 2  A5 95            lda TEMP_PAX1
001468r 2  95 00            sta $00,x
00146Ar 2  A5 96            lda TEMP_PAX2
00146Cr 2  95 01            sta $01,x
00146Er 2               
00146Er 2               ; src/prelude.fth:33:29 in `loopimpl`
00146Er 2               @OPCODE_610:   ; [c64_ir] AltPush
00146Er 2  CA               dex
00146Fr 2  CA               dex
001470r 2  B5 03            lda $03,x
001472r 2  48               pha
001473r 2  B5 02            lda $02,x
001475r 2  48               pha
001476r 2               
001476r 2               ; src/prelude.fth:33:32 in `loopimpl`
001476r 2               @OPCODE_611:   ; [c64_ir] AltPush
001476r 2  CA               dex
001477r 2  CA               dex
001478r 2  B5 03            lda $03,x
00147Ar 2  48               pha
00147Br 2  B5 02            lda $02,x
00147Dr 2  48               pha
00147Er 2               
00147Er 2               ; src/prelude.fth:14:12 in `invert`
00147Er 2               @OPCODE_612:   ; [c64_ir] PushLiteral(-1)
00147Er 2  E8               inx
00147Fr 2  E8               inx
001480r 2  A9 FF            lda #255
001482r 2  95 00            sta $00,x
001484r 2  A9 FF            lda #255
001486r 2  95 01            sta $01,x
001488r 2               
001488r 2               ; src/prelude.fth:14:15 in `invert`
001488r 2               @OPCODE_613:   ; [c64_ir] Nand
001488r 2                   ; 26
001488r 2  CA               dex
001489r 2  CA               dex
00148Ar 2  B5 00            lda $00,x
00148Cr 2  35 02            and $02,x
00148Er 2  49 FF            eor #$ff
001490r 2  95 00            sta $00,x
001492r 2  B5 01            lda $01,x
001494r 2  35 03            and $03,x
001496r 2  49 FF            eor #$ff
001498r 2  95 01            sta $01,x
00149Ar 2               
00149Ar 2               ; src/prelude.fth:15:19 in `negate`
00149Ar 2               @OPCODE_614:   ; [c64_ir] PushLiteral(1)
00149Ar 2  E8               inx
00149Br 2  E8               inx
00149Cr 2  A9 01            lda #1
00149Er 2  95 00            sta $00,x
0014A0r 2  A9 00            lda #0
0014A2r 2  95 01            sta $01,x
0014A4r 2               
0014A4r 2               ; src/prelude.fth:15:21 in `negate`
0014A4r 2               @OPCODE_615:   ; [c64_ir] Add
0014A4r 2                   ; 21
0014A4r 2  CA               dex
0014A5r 2  CA               dex
0014A6r 2  18               clc
0014A7r 2  B5 00            lda $00,x
0014A9r 2  75 02            adc $02,x
0014ABr 2  95 00            sta $00,x
0014ADr 2  B5 01            lda $01,x
0014AFr 2  75 03            adc $03,x
0014B1r 2  95 01            sta $01,x
0014B3r 2               
0014B3r 2               ; src/prelude.fth:16:19 in `-`
0014B3r 2               @OPCODE_616:   ; [c64_ir] Add
0014B3r 2                   ; 21
0014B3r 2  CA               dex
0014B4r 2  CA               dex
0014B5r 2  18               clc
0014B6r 2  B5 00            lda $00,x
0014B8r 2  75 02            adc $02,x
0014BAr 2  95 00            sta $00,x
0014BCr 2  B5 01            lda $01,x
0014BEr 2  75 03            adc $03,x
0014C0r 2  95 01            sta $01,x
0014C2r 2               
0014C2r 2               ; src/prelude.fth:21:8 in `0=`
0014C2r 2               @OPCODE_617:   ; [c64_ir] JumpIf0(48)
0014C2r 2  CA               dex
0014C3r 2  CA               dex
0014C4r 2  B5 02            lda $02,x
0014C6r 2  15 03            ora $03,x
0014C8r 2  D0 03            bne *+5
0014CAr 2  4C rr rr         jmp @target_48
0014CDr 2               
0014CDr 2               @target_47:
0014CDr 2               
0014CDr 2               ; src/prelude.fth:21:11 in `0=`
0014CDr 2               @OPCODE_619:   ; [c64_ir] PushLiteral(0)
0014CDr 2  E8               inx
0014CEr 2  E8               inx
0014CFr 2  A9 00            lda #0
0014D1r 2  95 00            sta $00,x
0014D3r 2  A9 00            lda #0
0014D5r 2  95 01            sta $01,x
0014D7r 2               
0014D7r 2               ; src/prelude.fth:21:13 in `0=`
0014D7r 2               @OPCODE_620:   ; [c64_ir] JumpElse(49)
0014D7r 2  4C rr rr         jmp @target_49
0014DAr 2               
0014DAr 2               @target_48:
0014DAr 2               
0014DAr 2               ; src/prelude.fth:21:18 in `0=`
0014DAr 2               @OPCODE_622:   ; [c64_ir] PushLiteral(-1)
0014DAr 2  E8               inx
0014DBr 2  E8               inx
0014DCr 2  A9 FF            lda #255
0014DEr 2  95 00            sta $00,x
0014E0r 2  A9 FF            lda #255
0014E2r 2  95 01            sta $01,x
0014E4r 2               
0014E4r 2               ; src/prelude.fth:21:21 in `0=`
0014E4r 2               @OPCODE_623:   ; [c64_ir] JumpTarget(48)
0014E4r 2               
0014E4r 2               @target_49:
0014E4r 2               
0014E4r 2               ; src/prelude.fth:3:10 in `swap`
0014E4r 2               @OPCODE_625:   ; [c64_ir] AltPush
0014E4r 2  CA               dex
0014E5r 2  CA               dex
0014E6r 2  B5 03            lda $03,x
0014E8r 2  48               pha
0014E9r 2  B5 02            lda $02,x
0014EBr 2  48               pha
0014ECr 2               
0014ECr 2               ; src/prelude.fth:3:19 in `swap`
0014ECr 2               @OPCODE_626:   ; [c64_ir] AltPop
0014ECr 2  E8               inx
0014EDr 2  E8               inx
0014EEr 2  68               pla
0014EFr 2  95 00            sta $00,x
0014F1r 2  68               pla
0014F2r 2  95 01            sta $01,x
0014F4r 2               
0014F4r 2               ; src/prelude.fth:44:25 in `*`
0014F4r 2               @OPCODE_627:   ; [c64_ir] LoopIf0(46)
0014F4r 2  CA               dex
0014F5r 2  CA               dex
0014F6r 2  B5 02            lda $02,x
0014F8r 2  15 03            ora $03,x
0014FAr 2  D0 03            bne *+5
0014FCr 2  4C rr rr         jmp @target_46
0014FFr 2               
0014FFr 2               @target_50:
0014FFr 2               
0014FFr 2               ; src/prelude.fth:44:25 in `*`
0014FFr 2               @OPCODE_629:   ; [c64_ir] AltPop
0014FFr 2  E8               inx
001500r 2  E8               inx
001501r 2  68               pla
001502r 2  95 00            sta $00,x
001504r 2  68               pla
001505r 2  95 01            sta $01,x
001507r 2               
001507r 2               ; src/prelude.fth:44:25 in `*`
001507r 2               @OPCODE_630:   ; [c64_ir] Drop
001507r 2  CA               dex
001508r 2  CA               dex
001509r 2               
001509r 2               ; src/prelude.fth:44:25 in `*`
001509r 2               @OPCODE_631:   ; [c64_ir] AltPop
001509r 2  E8               inx
00150Ar 2  E8               inx
00150Br 2  68               pla
00150Cr 2  95 00            sta $00,x
00150Er 2  68               pla
00150Fr 2  95 01            sta $01,x
001511r 2               
001511r 2               ; src/prelude.fth:44:25 in `*`
001511r 2               @OPCODE_632:   ; [c64_ir] Drop
001511r 2  CA               dex
001512r 2  CA               dex
001513r 2               
001513r 2               ; src/prelude.fth:3:10 in `swap`
001513r 2               @OPCODE_633:   ; [c64_ir] AltPush
001513r 2  CA               dex
001514r 2  CA               dex
001515r 2  B5 03            lda $03,x
001517r 2  48               pha
001518r 2  B5 02            lda $02,x
00151Ar 2  48               pha
00151Br 2               
00151Br 2               ; src/prelude.fth:3:13 in `swap`
00151Br 2               @OPCODE_634:   ; [c64_ir] TempStore
00151Br 2  CA               dex
00151Cr 2  CA               dex
00151Dr 2  B5 03            lda $03,x
00151Fr 2  85 96            sta TEMP_PAX2
001521r 2  B5 02            lda $02,x
001523r 2  85 95            sta TEMP_PAX1
001525r 2               
001525r 2               ; src/prelude.fth:3:19 in `swap`
001525r 2               @OPCODE_635:   ; [c64_ir] AltPop
001525r 2  E8               inx
001526r 2  E8               inx
001527r 2  68               pla
001528r 2  95 00            sta $00,x
00152Ar 2  68               pla
00152Br 2  95 01            sta $01,x
00152Dr 2               
00152Dr 2               ; <inline>:0:0 in `main`
00152Dr 2               @OPCODE_636:   ; [c64_ir] AltPop
00152Dr 2  E8               inx
00152Er 2  E8               inx
00152Fr 2  68               pla
001530r 2  95 00            sta $00,x
001532r 2  68               pla
001533r 2  95 01            sta $01,x
001535r 2               
001535r 2               ; <inline>:0:0 in `main`
001535r 2               @OPCODE_637:   ; [c64_ir] Drop
001535r 2  CA               dex
001536r 2  CA               dex
001537r 2               
001537r 2               ; snake.pax:48:39 in `convert-x-y`
001537r 2               @OPCODE_638:   ; [c64_ir] Add
001537r 2                   ; 21
001537r 2  CA               dex
001538r 2  CA               dex
001539r 2  18               clc
00153Ar 2  B5 00            lda $00,x
00153Cr 2  75 02            adc $02,x
00153Er 2  95 00            sta $00,x
001540r 2  B5 01            lda $01,x
001542r 2  75 03            adc $03,x
001544r 2  95 01            sta $01,x
001546r 2               
001546r 2               ; <inline>:0:0 in `main`
001546r 2               @OPCODE_639:   ; [c64_ir] AltPop
001546r 2  E8               inx
001547r 2  E8               inx
001548r 2  68               pla
001549r 2  95 00            sta $00,x
00154Br 2  68               pla
00154Cr 2  95 01            sta $01,x
00154Er 2               
00154Er 2               ; <inline>:0:0 in `main`
00154Er 2               @OPCODE_640:   ; [c64_ir] Drop
00154Er 2  CA               dex
00154Fr 2  CA               dex
001550r 2               
001550r 2               ; snake.pax:49:34 in `draw-index`
001550r 2               @OPCODE_641:   ; [c64_ir] PushLiteral(1024)
001550r 2  E8               inx
001551r 2  E8               inx
001552r 2  A9 00            lda #0
001554r 2  95 00            sta $00,x
001556r 2  A9 04            lda #4
001558r 2  95 01            sta $01,x
00155Ar 2               
00155Ar 2               ; snake.pax:49:43 in `draw-index`
00155Ar 2               @OPCODE_642:   ; [c64_ir] Add
00155Ar 2                   ; 21
00155Ar 2  CA               dex
00155Br 2  CA               dex
00155Cr 2  18               clc
00155Dr 2  B5 00            lda $00,x
00155Fr 2  75 02            adc $02,x
001561r 2  95 00            sta $00,x
001563r 2  B5 01            lda $01,x
001565r 2  75 03            adc $03,x
001567r 2  95 01            sta $01,x
001569r 2               
001569r 2               ; snake.pax:49:45 in `draw-index`
001569r 2               @OPCODE_643:   ; [c64_ir] Store8
001569r 2  CA               dex
00156Ar 2  CA               dex
00156Br 2  CA               dex
00156Cr 2  CA               dex
00156Dr 2  B5 02            lda $02,x
00156Fr 2  81 04            sta ($04,x)
001571r 2                   ; TODO high byte
001571r 2               
001571r 2               ; <inline>:0:0 in `main`
001571r 2               @OPCODE_644:   ; [c64_ir] AltPop
001571r 2  E8               inx
001572r 2  E8               inx
001573r 2  68               pla
001574r 2  95 00            sta $00,x
001576r 2  68               pla
001577r 2  95 01            sta $01,x
001579r 2               
001579r 2               ; <inline>:0:0 in `main`
001579r 2               @OPCODE_645:   ; [c64_ir] Drop
001579r 2  CA               dex
00157Ar 2  CA               dex
00157Br 2               
00157Br 2               ; <inline>:0:0 in `main`
00157Br 2               @OPCODE_646:   ; [c64_ir] AltPop
00157Br 2  E8               inx
00157Cr 2  E8               inx
00157Dr 2  68               pla
00157Er 2  95 00            sta $00,x
001580r 2  68               pla
001581r 2  95 01            sta $01,x
001583r 2               
001583r 2               ; <inline>:0:0 in `main`
001583r 2               @OPCODE_647:   ; [c64_ir] Drop
001583r 2  CA               dex
001584r 2  CA               dex
001585r 2               
001585r 2               ; src/prelude.fth:33:15 in `loopimpl`
001585r 2               @OPCODE_648:   ; [c64_ir] AltPop
001585r 2  E8               inx
001586r 2  E8               inx
001587r 2  68               pla
001588r 2  95 00            sta $00,x
00158Ar 2  68               pla
00158Br 2  95 01            sta $01,x
00158Dr 2               
00158Dr 2               ; src/prelude.fth:33:18 in `loopimpl`
00158Dr 2               @OPCODE_649:   ; [c64_ir] AltPop
00158Dr 2  E8               inx
00158Er 2  E8               inx
00158Fr 2  68               pla
001590r 2  95 00            sta $00,x
001592r 2  68               pla
001593r 2  95 01            sta $01,x
001595r 2               
001595r 2               ; src/prelude.fth:18:8 in `1+`
001595r 2               @OPCODE_650:   ; [c64_ir] PushLiteral(1)
001595r 2  E8               inx
001596r 2  E8               inx
001597r 2  A9 01            lda #1
001599r 2  95 00            sta $00,x
00159Br 2  A9 00            lda #0
00159Dr 2  95 01            sta $01,x
00159Fr 2               
00159Fr 2               ; src/prelude.fth:18:10 in `1+`
00159Fr 2               @OPCODE_651:   ; [c64_ir] Add
00159Fr 2                   ; 21
00159Fr 2  CA               dex
0015A0r 2  CA               dex
0015A1r 2  18               clc
0015A2r 2  B5 00            lda $00,x
0015A4r 2  75 02            adc $02,x
0015A6r 2  95 00            sta $00,x
0015A8r 2  B5 01            lda $01,x
0015AAr 2  75 03            adc $03,x
0015ACr 2  95 01            sta $01,x
0015AEr 2               
0015AEr 2               ; src/prelude.fth:4:10 in `over`
0015AEr 2               @OPCODE_652:   ; [c64_ir] AltPush
0015AEr 2  CA               dex
0015AFr 2  CA               dex
0015B0r 2  B5 03            lda $03,x
0015B2r 2  48               pha
0015B3r 2  B5 02            lda $02,x
0015B5r 2  48               pha
0015B6r 2               
0015B6r 2               ; src/prelude.fth:4:13 in `over`
0015B6r 2               @OPCODE_653:   ; [c64_ir] TempStore
0015B6r 2  CA               dex
0015B7r 2  CA               dex
0015B8r 2  B5 03            lda $03,x
0015BAr 2  85 96            sta TEMP_PAX2
0015BCr 2  B5 02            lda $02,x
0015BEr 2  85 95            sta TEMP_PAX1
0015C0r 2               
0015C0r 2               ; src/prelude.fth:4:19 in `over`
0015C0r 2               @OPCODE_654:   ; [c64_ir] TempLoad
0015C0r 2  E8               inx
0015C1r 2  E8               inx
0015C2r 2  A5 95            lda TEMP_PAX1
0015C4r 2  95 00            sta $00,x
0015C6r 2  A5 96            lda TEMP_PAX2
0015C8r 2  95 01            sta $01,x
0015CAr 2               
0015CAr 2               ; src/prelude.fth:4:25 in `over`
0015CAr 2               @OPCODE_655:   ; [c64_ir] AltPop
0015CAr 2  E8               inx
0015CBr 2  E8               inx
0015CCr 2  68               pla
0015CDr 2  95 00            sta $00,x
0015CFr 2  68               pla
0015D0r 2  95 01            sta $01,x
0015D2r 2               
0015D2r 2               ; src/prelude.fth:4:28 in `over`
0015D2r 2               @OPCODE_656:   ; [c64_ir] TempLoad
0015D2r 2  E8               inx
0015D3r 2  E8               inx
0015D4r 2  A5 95            lda TEMP_PAX1
0015D6r 2  95 00            sta $00,x
0015D8r 2  A5 96            lda TEMP_PAX2
0015DAr 2  95 01            sta $01,x
0015DCr 2               
0015DCr 2               ; src/prelude.fth:4:10 in `over`
0015DCr 2               @OPCODE_657:   ; [c64_ir] AltPush
0015DCr 2  CA               dex
0015DDr 2  CA               dex
0015DEr 2  B5 03            lda $03,x
0015E0r 2  48               pha
0015E1r 2  B5 02            lda $02,x
0015E3r 2  48               pha
0015E4r 2               
0015E4r 2               ; src/prelude.fth:4:13 in `over`
0015E4r 2               @OPCODE_658:   ; [c64_ir] TempStore
0015E4r 2  CA               dex
0015E5r 2  CA               dex
0015E6r 2  B5 03            lda $03,x
0015E8r 2  85 96            sta TEMP_PAX2
0015EAr 2  B5 02            lda $02,x
0015ECr 2  85 95            sta TEMP_PAX1
0015EEr 2               
0015EEr 2               ; src/prelude.fth:4:19 in `over`
0015EEr 2               @OPCODE_659:   ; [c64_ir] TempLoad
0015EEr 2  E8               inx
0015EFr 2  E8               inx
0015F0r 2  A5 95            lda TEMP_PAX1
0015F2r 2  95 00            sta $00,x
0015F4r 2  A5 96            lda TEMP_PAX2
0015F6r 2  95 01            sta $01,x
0015F8r 2               
0015F8r 2               ; src/prelude.fth:4:25 in `over`
0015F8r 2               @OPCODE_660:   ; [c64_ir] AltPop
0015F8r 2  E8               inx
0015F9r 2  E8               inx
0015FAr 2  68               pla
0015FBr 2  95 00            sta $00,x
0015FDr 2  68               pla
0015FEr 2  95 01            sta $01,x
001600r 2               
001600r 2               ; src/prelude.fth:4:28 in `over`
001600r 2               @OPCODE_661:   ; [c64_ir] TempLoad
001600r 2  E8               inx
001601r 2  E8               inx
001602r 2  A5 95            lda TEMP_PAX1
001604r 2  95 00            sta $00,x
001606r 2  A5 96            lda TEMP_PAX2
001608r 2  95 01            sta $01,x
00160Ar 2               
00160Ar 2               ; src/prelude.fth:33:29 in `loopimpl`
00160Ar 2               @OPCODE_662:   ; [c64_ir] AltPush
00160Ar 2  CA               dex
00160Br 2  CA               dex
00160Cr 2  B5 03            lda $03,x
00160Er 2  48               pha
00160Fr 2  B5 02            lda $02,x
001611r 2  48               pha
001612r 2               
001612r 2               ; src/prelude.fth:33:32 in `loopimpl`
001612r 2               @OPCODE_663:   ; [c64_ir] AltPush
001612r 2  CA               dex
001613r 2  CA               dex
001614r 2  B5 03            lda $03,x
001616r 2  48               pha
001617r 2  B5 02            lda $02,x
001619r 2  48               pha
00161Ar 2               
00161Ar 2               ; src/prelude.fth:14:12 in `invert`
00161Ar 2               @OPCODE_664:   ; [c64_ir] PushLiteral(-1)
00161Ar 2  E8               inx
00161Br 2  E8               inx
00161Cr 2  A9 FF            lda #255
00161Er 2  95 00            sta $00,x
001620r 2  A9 FF            lda #255
001622r 2  95 01            sta $01,x
001624r 2               
001624r 2               ; src/prelude.fth:14:15 in `invert`
001624r 2               @OPCODE_665:   ; [c64_ir] Nand
001624r 2                   ; 26
001624r 2  CA               dex
001625r 2  CA               dex
001626r 2  B5 00            lda $00,x
001628r 2  35 02            and $02,x
00162Ar 2  49 FF            eor #$ff
00162Cr 2  95 00            sta $00,x
00162Er 2  B5 01            lda $01,x
001630r 2  35 03            and $03,x
001632r 2  49 FF            eor #$ff
001634r 2  95 01            sta $01,x
001636r 2               
001636r 2               ; src/prelude.fth:15:19 in `negate`
001636r 2               @OPCODE_666:   ; [c64_ir] PushLiteral(1)
001636r 2  E8               inx
001637r 2  E8               inx
001638r 2  A9 01            lda #1
00163Ar 2  95 00            sta $00,x
00163Cr 2  A9 00            lda #0
00163Er 2  95 01            sta $01,x
001640r 2               
001640r 2               ; src/prelude.fth:15:21 in `negate`
001640r 2               @OPCODE_667:   ; [c64_ir] Add
001640r 2                   ; 21
001640r 2  CA               dex
001641r 2  CA               dex
001642r 2  18               clc
001643r 2  B5 00            lda $00,x
001645r 2  75 02            adc $02,x
001647r 2  95 00            sta $00,x
001649r 2  B5 01            lda $01,x
00164Br 2  75 03            adc $03,x
00164Dr 2  95 01            sta $01,x
00164Fr 2               
00164Fr 2               ; src/prelude.fth:16:19 in `-`
00164Fr 2               @OPCODE_668:   ; [c64_ir] Add
00164Fr 2                   ; 21
00164Fr 2  CA               dex
001650r 2  CA               dex
001651r 2  18               clc
001652r 2  B5 00            lda $00,x
001654r 2  75 02            adc $02,x
001656r 2  95 00            sta $00,x
001658r 2  B5 01            lda $01,x
00165Ar 2  75 03            adc $03,x
00165Cr 2  95 01            sta $01,x
00165Er 2               
00165Er 2               ; src/prelude.fth:21:8 in `0=`
00165Er 2               @OPCODE_669:   ; [c64_ir] JumpIf0(52)
00165Er 2  CA               dex
00165Fr 2  CA               dex
001660r 2  B5 02            lda $02,x
001662r 2  15 03            ora $03,x
001664r 2  D0 03            bne *+5
001666r 2  4C rr rr         jmp @target_52
001669r 2               
001669r 2               @target_51:
001669r 2               
001669r 2               ; src/prelude.fth:21:11 in `0=`
001669r 2               @OPCODE_671:   ; [c64_ir] PushLiteral(0)
001669r 2  E8               inx
00166Ar 2  E8               inx
00166Br 2  A9 00            lda #0
00166Dr 2  95 00            sta $00,x
00166Fr 2  A9 00            lda #0
001671r 2  95 01            sta $01,x
001673r 2               
001673r 2               ; src/prelude.fth:21:13 in `0=`
001673r 2               @OPCODE_672:   ; [c64_ir] JumpElse(53)
001673r 2  4C rr rr         jmp @target_53
001676r 2               
001676r 2               @target_52:
001676r 2               
001676r 2               ; src/prelude.fth:21:18 in `0=`
001676r 2               @OPCODE_674:   ; [c64_ir] PushLiteral(-1)
001676r 2  E8               inx
001677r 2  E8               inx
001678r 2  A9 FF            lda #255
00167Ar 2  95 00            sta $00,x
00167Cr 2  A9 FF            lda #255
00167Er 2  95 01            sta $01,x
001680r 2               
001680r 2               ; src/prelude.fth:21:21 in `0=`
001680r 2               @OPCODE_675:   ; [c64_ir] JumpTarget(52)
001680r 2               
001680r 2               @target_53:
001680r 2               
001680r 2               ; src/prelude.fth:3:10 in `swap`
001680r 2               @OPCODE_677:   ; [c64_ir] AltPush
001680r 2  CA               dex
001681r 2  CA               dex
001682r 2  B5 03            lda $03,x
001684r 2  48               pha
001685r 2  B5 02            lda $02,x
001687r 2  48               pha
001688r 2               
001688r 2               ; src/prelude.fth:3:19 in `swap`
001688r 2               @OPCODE_678:   ; [c64_ir] AltPop
001688r 2  E8               inx
001689r 2  E8               inx
00168Ar 2  68               pla
00168Br 2  95 00            sta $00,x
00168Dr 2  68               pla
00168Er 2  95 01            sta $01,x
001690r 2               
001690r 2               ; snake.pax:105:3 in `draw-full-snake`
001690r 2               @OPCODE_679:   ; [c64_ir] LoopIf0(45)
001690r 2  CA               dex
001691r 2  CA               dex
001692r 2  B5 02            lda $02,x
001694r 2  15 03            ora $03,x
001696r 2  D0 03            bne *+5
001698r 2  4C rr rr         jmp @target_45
00169Br 2               
00169Br 2               @target_54:
00169Br 2               
00169Br 2               ; snake.pax:105:3 in `draw-full-snake`
00169Br 2               @OPCODE_681:   ; [c64_ir] AltPop
00169Br 2  E8               inx
00169Cr 2  E8               inx
00169Dr 2  68               pla
00169Er 2  95 00            sta $00,x
0016A0r 2  68               pla
0016A1r 2  95 01            sta $01,x
0016A3r 2               
0016A3r 2               ; snake.pax:105:3 in `draw-full-snake`
0016A3r 2               @OPCODE_682:   ; [c64_ir] Drop
0016A3r 2  CA               dex
0016A4r 2  CA               dex
0016A5r 2               
0016A5r 2               ; snake.pax:105:3 in `draw-full-snake`
0016A5r 2               @OPCODE_683:   ; [c64_ir] AltPop
0016A5r 2  E8               inx
0016A6r 2  E8               inx
0016A7r 2  68               pla
0016A8r 2  95 00            sta $00,x
0016AAr 2  68               pla
0016ABr 2  95 01            sta $01,x
0016ADr 2               
0016ADr 2               ; snake.pax:105:3 in `draw-full-snake`
0016ADr 2               @OPCODE_684:   ; [c64_ir] Drop
0016ADr 2  CA               dex
0016AEr 2  CA               dex
0016AFr 2               
0016AFr 2               ; <inline>:0:0 in `main`
0016AFr 2               @OPCODE_685:   ; [c64_ir] AltPop
0016AFr 2  E8               inx
0016B0r 2  E8               inx
0016B1r 2  68               pla
0016B2r 2  95 00            sta $00,x
0016B4r 2  68               pla
0016B5r 2  95 01            sta $01,x
0016B7r 2               
0016B7r 2               ; <inline>:0:0 in `main`
0016B7r 2               @OPCODE_686:   ; [c64_ir] Drop
0016B7r 2  CA               dex
0016B8r 2  CA               dex
0016B9r 2               
0016B9r 2               ; <inline>:0:0 in `main`
0016B9r 2               @OPCODE_687:   ; [c64_ir] AltPop
0016B9r 2  E8               inx
0016BAr 2  E8               inx
0016BBr 2  68               pla
0016BCr 2  95 00            sta $00,x
0016BEr 2  68               pla
0016BFr 2  95 01            sta $01,x
0016C1r 2               
0016C1r 2               ; <inline>:0:0 in `main`
0016C1r 2               @OPCODE_688:   ; [c64_ir] Drop
0016C1r 2  CA               dex
0016C2r 2  CA               dex
0016C3r 2               
0016C3r 2               ; snake.pax:205:32 in `main`
0016C3r 2               @OPCODE_689:   ; [c64_ir] JumpTarget(54)
0016C3r 2               
0016C3r 2               @target_55:
0016C3r 2               
0016C3r 2               ; snake.pax:206:1 in `main`
0016C3r 2               @OPCODE_691:   ; [c64_ir] PushLiteral(1)
0016C3r 2  E8               inx
0016C4r 2  E8               inx
0016C5r 2  A9 01            lda #1
0016C7r 2  95 00            sta $00,x
0016C9r 2  A9 00            lda #0
0016CBr 2  95 01            sta $01,x
0016CDr 2               
0016CDr 2               ; snake.pax:206:3 in `main`
0016CDr 2               @OPCODE_692:   ; [c64_ir] PushLiteral(-28672)
0016CDr 2  E8               inx
0016CEr 2  E8               inx
0016CFr 2  A9 00            lda #0
0016D1r 2  95 00            sta $00,x
0016D3r 2  A9 90            lda #144
0016D5r 2  95 01            sta $01,x
0016D7r 2               
0016D7r 2               ; snake.pax:206:15 in `main`
0016D7r 2               @OPCODE_693:   ; [c64_ir] Store
0016D7r 2  CA               dex
0016D8r 2  CA               dex
0016D9r 2  CA               dex
0016DAr 2  CA               dex
0016DBr 2  B5 02            lda $02,x
0016DDr 2  81 04            sta ($04,x)
0016DFr 2                   ; TODO high byte
0016DFr 2               
0016DFr 2               ; <inline>:0:0 in `main`
0016DFr 2               @OPCODE_694:   ; [c64_ir] PushLiteral(7777)
0016DFr 2  E8               inx
0016E0r 2  E8               inx
0016E1r 2  A9 61            lda #97
0016E3r 2  95 00            sta $00,x
0016E5r 2  A9 1E            lda #30
0016E7r 2  95 01            sta $01,x
0016E9r 2               
0016E9r 2               ; <inline>:0:0 in `main`
0016E9r 2               @OPCODE_695:   ; [c64_ir] AltPush
0016E9r 2  CA               dex
0016EAr 2  CA               dex
0016EBr 2  B5 03            lda $03,x
0016EDr 2  48               pha
0016EEr 2  B5 02            lda $02,x
0016F0r 2  48               pha
0016F1r 2               
0016F1r 2               ; src/prelude.fth:6:16 in `dup`
0016F1r 2               @OPCODE_696:   ; [c64_ir] PushLiteral(0)
0016F1r 2  E8               inx
0016F2r 2  E8               inx
0016F3r 2  A9 00            lda #0
0016F5r 2  95 00            sta $00,x
0016F7r 2  A9 00            lda #0
0016F9r 2  95 01            sta $01,x
0016FBr 2               
0016FBr 2               ; src/prelude.fth:6:22 in `dup`
0016FBr 2               @OPCODE_697:   ; [c64_ir] PushLiteral(0)
0016FBr 2  E8               inx
0016FCr 2  E8               inx
0016FDr 2  A9 00            lda #0
0016FFr 2  95 00            sta $00,x
001701r 2  A9 00            lda #0
001703r 2  95 01            sta $01,x
001705r 2               
001705r 2               ; src/prelude.fth:41:13 in `cells`
001705r 2               @OPCODE_698:   ; [c64_ir] Add
001705r 2                   ; 21
001705r 2  CA               dex
001706r 2  CA               dex
001707r 2  18               clc
001708r 2  B5 00            lda $00,x
00170Ar 2  75 02            adc $02,x
00170Cr 2  95 00            sta $00,x
00170Er 2  B5 01            lda $01,x
001710r 2  75 03            adc $03,x
001712r 2  95 01            sta $01,x
001714r 2               
001714r 2               ; snake.pax:42:9 in `snake-x`
001714r 2               @OPCODE_699:   ; [c64_ir] PushLiteral(-28668)
001714r 2  E8               inx
001715r 2  E8               inx
001716r 2  A9 04            lda #4
001718r 2  95 00            sta $00,x
00171Ar 2  A9 90            lda #144
00171Cr 2  95 01            sta $01,x
00171Er 2               
00171Er 2               ; snake.pax:42:22 in `snake-x`
00171Er 2               @OPCODE_700:   ; [c64_ir] Add
00171Er 2                   ; 21
00171Er 2  CA               dex
00171Fr 2  CA               dex
001720r 2  18               clc
001721r 2  B5 00            lda $00,x
001723r 2  75 02            adc $02,x
001725r 2  95 00            sta $00,x
001727r 2  B5 01            lda $01,x
001729r 2  75 03            adc $03,x
00172Br 2  95 01            sta $01,x
00172Dr 2               
00172Dr 2               ; snake.pax:195:13 in `draw-snake-head-tail`
00172Dr 2               @OPCODE_701:   ; [c64_ir] Load
00172Dr 2  A1 00            lda ($00,x)
00172Fr 2  95 00            sta $00,x
001731r 2  A9 00            lda #0
001733r 2  95 01            sta $01,x
001735r 2               
001735r 2               ; src/prelude.fth:6:16 in `dup`
001735r 2               @OPCODE_702:   ; [c64_ir] PushLiteral(0)
001735r 2  E8               inx
001736r 2  E8               inx
001737r 2  A9 00            lda #0
001739r 2  95 00            sta $00,x
00173Br 2  A9 00            lda #0
00173Dr 2  95 01            sta $01,x
00173Fr 2               
00173Fr 2               ; src/prelude.fth:6:22 in `dup`
00173Fr 2               @OPCODE_703:   ; [c64_ir] PushLiteral(0)
00173Fr 2  E8               inx
001740r 2  E8               inx
001741r 2  A9 00            lda #0
001743r 2  95 00            sta $00,x
001745r 2  A9 00            lda #0
001747r 2  95 01            sta $01,x
001749r 2               
001749r 2               ; src/prelude.fth:41:13 in `cells`
001749r 2               @OPCODE_704:   ; [c64_ir] Add
001749r 2                   ; 21
001749r 2  CA               dex
00174Ar 2  CA               dex
00174Br 2  18               clc
00174Cr 2  B5 00            lda $00,x
00174Er 2  75 02            adc $02,x
001750r 2  95 00            sta $00,x
001752r 2  B5 01            lda $01,x
001754r 2  75 03            adc $03,x
001756r 2  95 01            sta $01,x
001758r 2               
001758r 2               ; snake.pax:45:9 in `snake-y`
001758r 2               @OPCODE_705:   ; [c64_ir] PushLiteral(-27666)
001758r 2  E8               inx
001759r 2  E8               inx
00175Ar 2  A9 EE            lda #238
00175Cr 2  95 00            sta $00,x
00175Er 2  A9 93            lda #147
001760r 2  95 01            sta $01,x
001762r 2               
001762r 2               ; snake.pax:45:22 in `snake-y`
001762r 2               @OPCODE_706:   ; [c64_ir] Add
001762r 2                   ; 21
001762r 2  CA               dex
001763r 2  CA               dex
001764r 2  18               clc
001765r 2  B5 00            lda $00,x
001767r 2  75 02            adc $02,x
001769r 2  95 00            sta $00,x
00176Br 2  B5 01            lda $01,x
00176Dr 2  75 03            adc $03,x
00176Fr 2  95 01            sta $01,x
001771r 2               
001771r 2               ; snake.pax:195:25 in `draw-snake-head-tail`
001771r 2               @OPCODE_707:   ; [c64_ir] Load
001771r 2  A1 00            lda ($00,x)
001773r 2  95 00            sta $00,x
001775r 2  A9 00            lda #0
001777r 2  95 01            sta $01,x
001779r 2               
001779r 2               ; <inline>:0:0 in `main`
001779r 2               @OPCODE_708:   ; [c64_ir] PushLiteral(7777)
001779r 2  E8               inx
00177Ar 2  E8               inx
00177Br 2  A9 61            lda #97
00177Dr 2  95 00            sta $00,x
00177Fr 2  A9 1E            lda #30
001781r 2  95 01            sta $01,x
001783r 2               
001783r 2               ; <inline>:0:0 in `main`
001783r 2               @OPCODE_709:   ; [c64_ir] AltPush
001783r 2  CA               dex
001784r 2  CA               dex
001785r 2  B5 03            lda $03,x
001787r 2  48               pha
001788r 2  B5 02            lda $02,x
00178Ar 2  48               pha
00178Br 2               
00178Br 2               ; src/prelude.fth:3:10 in `swap`
00178Br 2               @OPCODE_710:   ; [c64_ir] AltPush
00178Br 2  CA               dex
00178Cr 2  CA               dex
00178Dr 2  B5 03            lda $03,x
00178Fr 2  48               pha
001790r 2  B5 02            lda $02,x
001792r 2  48               pha
001793r 2               
001793r 2               ; src/prelude.fth:3:13 in `swap`
001793r 2               @OPCODE_711:   ; [c64_ir] TempStore
001793r 2  CA               dex
001794r 2  CA               dex
001795r 2  B5 03            lda $03,x
001797r 2  85 96            sta TEMP_PAX2
001799r 2  B5 02            lda $02,x
00179Br 2  85 95            sta TEMP_PAX1
00179Dr 2               
00179Dr 2               ; src/prelude.fth:3:19 in `swap`
00179Dr 2               @OPCODE_712:   ; [c64_ir] AltPop
00179Dr 2  E8               inx
00179Er 2  E8               inx
00179Fr 2  68               pla
0017A0r 2  95 00            sta $00,x
0017A2r 2  68               pla
0017A3r 2  95 01            sta $01,x
0017A5r 2               
0017A5r 2               ; src/prelude.fth:3:22 in `swap`
0017A5r 2               @OPCODE_713:   ; [c64_ir] TempLoad
0017A5r 2  E8               inx
0017A6r 2  E8               inx
0017A7r 2  A5 95            lda TEMP_PAX1
0017A9r 2  95 00            sta $00,x
0017ABr 2  A5 96            lda TEMP_PAX2
0017ADr 2  95 01            sta $01,x
0017AFr 2               
0017AFr 2               ; src/prelude.fth:3:13 in `swap`
0017AFr 2               @OPCODE_714:   ; [c64_ir] TempStore
0017AFr 2  CA               dex
0017B0r 2  CA               dex
0017B1r 2  B5 03            lda $03,x
0017B3r 2  85 96            sta TEMP_PAX2
0017B5r 2  B5 02            lda $02,x
0017B7r 2  85 95            sta TEMP_PAX1
0017B9r 2               
0017B9r 2               ; src/prelude.fth:3:22 in `swap`
0017B9r 2               @OPCODE_715:   ; [c64_ir] TempLoad
0017B9r 2  E8               inx
0017BAr 2  E8               inx
0017BBr 2  A5 95            lda TEMP_PAX1
0017BDr 2  95 00            sta $00,x
0017BFr 2  A5 96            lda TEMP_PAX2
0017C1r 2  95 01            sta $01,x
0017C3r 2               
0017C3r 2               ; src/prelude.fth:5:10 in `rot`
0017C3r 2               @OPCODE_716:   ; [c64_ir] AltPush
0017C3r 2  CA               dex
0017C4r 2  CA               dex
0017C5r 2  B5 03            lda $03,x
0017C7r 2  48               pha
0017C8r 2  B5 02            lda $02,x
0017CAr 2  48               pha
0017CBr 2               
0017CBr 2               ; src/prelude.fth:3:13 in `swap`
0017CBr 2               @OPCODE_717:   ; [c64_ir] TempStore
0017CBr 2  CA               dex
0017CCr 2  CA               dex
0017CDr 2  B5 03            lda $03,x
0017CFr 2  85 96            sta TEMP_PAX2
0017D1r 2  B5 02            lda $02,x
0017D3r 2  85 95            sta TEMP_PAX1
0017D5r 2               
0017D5r 2               ; src/prelude.fth:3:19 in `swap`
0017D5r 2               @OPCODE_718:   ; [c64_ir] PushLiteral(232)
0017D5r 2  E8               inx
0017D6r 2  E8               inx
0017D7r 2  A9 E8            lda #232
0017D9r 2  95 00            sta $00,x
0017DBr 2  A9 00            lda #0
0017DDr 2  95 01            sta $01,x
0017DFr 2               
0017DFr 2               ; src/prelude.fth:3:22 in `swap`
0017DFr 2               @OPCODE_719:   ; [c64_ir] TempLoad
0017DFr 2  E8               inx
0017E0r 2  E8               inx
0017E1r 2  A5 95            lda TEMP_PAX1
0017E3r 2  95 00            sta $00,x
0017E5r 2  A5 96            lda TEMP_PAX2
0017E7r 2  95 01            sta $01,x
0017E9r 2               
0017E9r 2               ; src/prelude.fth:5:18 in `rot`
0017E9r 2               @OPCODE_720:   ; [c64_ir] AltPop
0017E9r 2  E8               inx
0017EAr 2  E8               inx
0017EBr 2  68               pla
0017ECr 2  95 00            sta $00,x
0017EEr 2  68               pla
0017EFr 2  95 01            sta $01,x
0017F1r 2               
0017F1r 2               ; src/prelude.fth:3:10 in `swap`
0017F1r 2               @OPCODE_721:   ; [c64_ir] AltPush
0017F1r 2  CA               dex
0017F2r 2  CA               dex
0017F3r 2  B5 03            lda $03,x
0017F5r 2  48               pha
0017F6r 2  B5 02            lda $02,x
0017F8r 2  48               pha
0017F9r 2               
0017F9r 2               ; src/prelude.fth:3:13 in `swap`
0017F9r 2               @OPCODE_722:   ; [c64_ir] TempStore
0017F9r 2  CA               dex
0017FAr 2  CA               dex
0017FBr 2  B5 03            lda $03,x
0017FDr 2  85 96            sta TEMP_PAX2
0017FFr 2  B5 02            lda $02,x
001801r 2  85 95            sta TEMP_PAX1
001803r 2               
001803r 2               ; src/prelude.fth:3:19 in `swap`
001803r 2               @OPCODE_723:   ; [c64_ir] AltPop
001803r 2  E8               inx
001804r 2  E8               inx
001805r 2  68               pla
001806r 2  95 00            sta $00,x
001808r 2  68               pla
001809r 2  95 01            sta $01,x
00180Br 2               
00180Br 2               ; src/prelude.fth:3:22 in `swap`
00180Br 2               @OPCODE_724:   ; [c64_ir] TempLoad
00180Br 2  E8               inx
00180Cr 2  E8               inx
00180Dr 2  A5 95            lda TEMP_PAX1
00180Fr 2  95 00            sta $00,x
001811r 2  A5 96            lda TEMP_PAX2
001813r 2  95 01            sta $01,x
001815r 2               
001815r 2               ; <inline>:0:0 in `main`
001815r 2               @OPCODE_725:   ; [c64_ir] PushLiteral(7777)
001815r 2  E8               inx
001816r 2  E8               inx
001817r 2  A9 61            lda #97
001819r 2  95 00            sta $00,x
00181Br 2  A9 1E            lda #30
00181Dr 2  95 01            sta $01,x
00181Fr 2               
00181Fr 2               ; <inline>:0:0 in `main`
00181Fr 2               @OPCODE_726:   ; [c64_ir] AltPush
00181Fr 2  CA               dex
001820r 2  CA               dex
001821r 2  B5 03            lda $03,x
001823r 2  48               pha
001824r 2  B5 02            lda $02,x
001826r 2  48               pha
001827r 2               
001827r 2               ; <inline>:0:0 in `main`
001827r 2               @OPCODE_727:   ; [c64_ir] PushLiteral(7777)
001827r 2  E8               inx
001828r 2  E8               inx
001829r 2  A9 61            lda #97
00182Br 2  95 00            sta $00,x
00182Dr 2  A9 1E            lda #30
00182Fr 2  95 01            sta $01,x
001831r 2               
001831r 2               ; <inline>:0:0 in `main`
001831r 2               @OPCODE_728:   ; [c64_ir] AltPush
001831r 2  CA               dex
001832r 2  CA               dex
001833r 2  B5 03            lda $03,x
001835r 2  48               pha
001836r 2  B5 02            lda $02,x
001838r 2  48               pha
001839r 2               
001839r 2               ; <inline>:0:0 in `main`
001839r 2               @OPCODE_729:   ; [c64_ir] PushLiteral(7777)
001839r 2  E8               inx
00183Ar 2  E8               inx
00183Br 2  A9 61            lda #97
00183Dr 2  95 00            sta $00,x
00183Fr 2  A9 1E            lda #30
001841r 2  95 01            sta $01,x
001843r 2               
001843r 2               ; <inline>:0:0 in `main`
001843r 2               @OPCODE_730:   ; [c64_ir] AltPush
001843r 2  CA               dex
001844r 2  CA               dex
001845r 2  B5 03            lda $03,x
001847r 2  48               pha
001848r 2  B5 02            lda $02,x
00184Ar 2  48               pha
00184Br 2               
00184Br 2               ; src/prelude.fth:44:8 in `*`
00184Br 2               @OPCODE_731:   ; [c64_ir] PushLiteral(0)
00184Br 2  E8               inx
00184Cr 2  E8               inx
00184Dr 2  A9 00            lda #0
00184Fr 2  95 00            sta $00,x
001851r 2  A9 00            lda #0
001853r 2  95 01            sta $01,x
001855r 2               
001855r 2               ; src/prelude.fth:44:10 in `*`
001855r 2               @OPCODE_732:   ; [c64_ir] PushLiteral(40)
001855r 2  E8               inx
001856r 2  E8               inx
001857r 2  A9 28            lda #40
001859r 2  95 00            sta $00,x
00185Br 2  A9 00            lda #0
00185Dr 2  95 01            sta $01,x
00185Fr 2               
00185Fr 2               ; src/prelude.fth:44:13 in `*`
00185Fr 2               @OPCODE_733:   ; [c64_ir] PushLiteral(0)
00185Fr 2  E8               inx
001860r 2  E8               inx
001861r 2  A9 00            lda #0
001863r 2  95 00            sta $00,x
001865r 2  A9 00            lda #0
001867r 2  95 01            sta $01,x
001869r 2               
001869r 2               ; src/prelude.fth:44:15 in `*`
001869r 2               @OPCODE_734:   ; [c64_ir] AltPush
001869r 2  CA               dex
00186Ar 2  CA               dex
00186Br 2  B5 03            lda $03,x
00186Dr 2  48               pha
00186Er 2  B5 02            lda $02,x
001870r 2  48               pha
001871r 2               
001871r 2               ; src/prelude.fth:44:15 in `*`
001871r 2               @OPCODE_735:   ; [c64_ir] AltPush
001871r 2  CA               dex
001872r 2  CA               dex
001873r 2  B5 03            lda $03,x
001875r 2  48               pha
001876r 2  B5 02            lda $02,x
001878r 2  48               pha
001879r 2               
001879r 2               ; src/prelude.fth:44:15 in `*`
001879r 2               @OPCODE_736:   ; [c64_ir] LoopTarget(55)
001879r 2               
001879r 2               @target_56:
001879r 2               
001879r 2               ; src/prelude.fth:4:10 in `over`
001879r 2               @OPCODE_738:   ; [c64_ir] AltPush
001879r 2  CA               dex
00187Ar 2  CA               dex
00187Br 2  B5 03            lda $03,x
00187Dr 2  48               pha
00187Er 2  B5 02            lda $02,x
001880r 2  48               pha
001881r 2               
001881r 2               ; src/prelude.fth:4:13 in `over`
001881r 2               @OPCODE_739:   ; [c64_ir] TempStore
001881r 2  CA               dex
001882r 2  CA               dex
001883r 2  B5 03            lda $03,x
001885r 2  85 96            sta TEMP_PAX2
001887r 2  B5 02            lda $02,x
001889r 2  85 95            sta TEMP_PAX1
00188Br 2               
00188Br 2               ; src/prelude.fth:4:19 in `over`
00188Br 2               @OPCODE_740:   ; [c64_ir] TempLoad
00188Br 2  E8               inx
00188Cr 2  E8               inx
00188Dr 2  A5 95            lda TEMP_PAX1
00188Fr 2  95 00            sta $00,x
001891r 2  A5 96            lda TEMP_PAX2
001893r 2  95 01            sta $01,x
001895r 2               
001895r 2               ; src/prelude.fth:4:25 in `over`
001895r 2               @OPCODE_741:   ; [c64_ir] AltPop
001895r 2  E8               inx
001896r 2  E8               inx
001897r 2  68               pla
001898r 2  95 00            sta $00,x
00189Ar 2  68               pla
00189Br 2  95 01            sta $01,x
00189Dr 2               
00189Dr 2               ; src/prelude.fth:4:28 in `over`
00189Dr 2               @OPCODE_742:   ; [c64_ir] TempLoad
00189Dr 2  E8               inx
00189Er 2  E8               inx
00189Fr 2  A5 95            lda TEMP_PAX1
0018A1r 2  95 00            sta $00,x
0018A3r 2  A5 96            lda TEMP_PAX2
0018A5r 2  95 01            sta $01,x
0018A7r 2               
0018A7r 2               ; src/prelude.fth:44:23 in `*`
0018A7r 2               @OPCODE_743:   ; [c64_ir] Add
0018A7r 2                   ; 21
0018A7r 2  CA               dex
0018A8r 2  CA               dex
0018A9r 2  18               clc
0018AAr 2  B5 00            lda $00,x
0018ACr 2  75 02            adc $02,x
0018AEr 2  95 00            sta $00,x
0018B0r 2  B5 01            lda $01,x
0018B2r 2  75 03            adc $03,x
0018B4r 2  95 01            sta $01,x
0018B6r 2               
0018B6r 2               ; src/prelude.fth:33:15 in `loopimpl`
0018B6r 2               @OPCODE_744:   ; [c64_ir] AltPop
0018B6r 2  E8               inx
0018B7r 2  E8               inx
0018B8r 2  68               pla
0018B9r 2  95 00            sta $00,x
0018BBr 2  68               pla
0018BCr 2  95 01            sta $01,x
0018BEr 2               
0018BEr 2               ; src/prelude.fth:33:18 in `loopimpl`
0018BEr 2               @OPCODE_745:   ; [c64_ir] AltPop
0018BEr 2  E8               inx
0018BFr 2  E8               inx
0018C0r 2  68               pla
0018C1r 2  95 00            sta $00,x
0018C3r 2  68               pla
0018C4r 2  95 01            sta $01,x
0018C6r 2               
0018C6r 2               ; src/prelude.fth:18:8 in `1+`
0018C6r 2               @OPCODE_746:   ; [c64_ir] PushLiteral(1)
0018C6r 2  E8               inx
0018C7r 2  E8               inx
0018C8r 2  A9 01            lda #1
0018CAr 2  95 00            sta $00,x
0018CCr 2  A9 00            lda #0
0018CEr 2  95 01            sta $01,x
0018D0r 2               
0018D0r 2               ; src/prelude.fth:18:10 in `1+`
0018D0r 2               @OPCODE_747:   ; [c64_ir] Add
0018D0r 2                   ; 21
0018D0r 2  CA               dex
0018D1r 2  CA               dex
0018D2r 2  18               clc
0018D3r 2  B5 00            lda $00,x
0018D5r 2  75 02            adc $02,x
0018D7r 2  95 00            sta $00,x
0018D9r 2  B5 01            lda $01,x
0018DBr 2  75 03            adc $03,x
0018DDr 2  95 01            sta $01,x
0018DFr 2               
0018DFr 2               ; src/prelude.fth:4:10 in `over`
0018DFr 2               @OPCODE_748:   ; [c64_ir] AltPush
0018DFr 2  CA               dex
0018E0r 2  CA               dex
0018E1r 2  B5 03            lda $03,x
0018E3r 2  48               pha
0018E4r 2  B5 02            lda $02,x
0018E6r 2  48               pha
0018E7r 2               
0018E7r 2               ; src/prelude.fth:4:13 in `over`
0018E7r 2               @OPCODE_749:   ; [c64_ir] TempStore
0018E7r 2  CA               dex
0018E8r 2  CA               dex
0018E9r 2  B5 03            lda $03,x
0018EBr 2  85 96            sta TEMP_PAX2
0018EDr 2  B5 02            lda $02,x
0018EFr 2  85 95            sta TEMP_PAX1
0018F1r 2               
0018F1r 2               ; src/prelude.fth:4:19 in `over`
0018F1r 2               @OPCODE_750:   ; [c64_ir] TempLoad
0018F1r 2  E8               inx
0018F2r 2  E8               inx
0018F3r 2  A5 95            lda TEMP_PAX1
0018F5r 2  95 00            sta $00,x
0018F7r 2  A5 96            lda TEMP_PAX2
0018F9r 2  95 01            sta $01,x
0018FBr 2               
0018FBr 2               ; src/prelude.fth:4:25 in `over`
0018FBr 2               @OPCODE_751:   ; [c64_ir] AltPop
0018FBr 2  E8               inx
0018FCr 2  E8               inx
0018FDr 2  68               pla
0018FEr 2  95 00            sta $00,x
001900r 2  68               pla
001901r 2  95 01            sta $01,x
001903r 2               
001903r 2               ; src/prelude.fth:4:28 in `over`
001903r 2               @OPCODE_752:   ; [c64_ir] TempLoad
001903r 2  E8               inx
001904r 2  E8               inx
001905r 2  A5 95            lda TEMP_PAX1
001907r 2  95 00            sta $00,x
001909r 2  A5 96            lda TEMP_PAX2
00190Br 2  95 01            sta $01,x
00190Dr 2               
00190Dr 2               ; src/prelude.fth:4:10 in `over`
00190Dr 2               @OPCODE_753:   ; [c64_ir] AltPush
00190Dr 2  CA               dex
00190Er 2  CA               dex
00190Fr 2  B5 03            lda $03,x
001911r 2  48               pha
001912r 2  B5 02            lda $02,x
001914r 2  48               pha
001915r 2               
001915r 2               ; src/prelude.fth:4:13 in `over`
001915r 2               @OPCODE_754:   ; [c64_ir] TempStore
001915r 2  CA               dex
001916r 2  CA               dex
001917r 2  B5 03            lda $03,x
001919r 2  85 96            sta TEMP_PAX2
00191Br 2  B5 02            lda $02,x
00191Dr 2  85 95            sta TEMP_PAX1
00191Fr 2               
00191Fr 2               ; src/prelude.fth:4:19 in `over`
00191Fr 2               @OPCODE_755:   ; [c64_ir] TempLoad
00191Fr 2  E8               inx
001920r 2  E8               inx
001921r 2  A5 95            lda TEMP_PAX1
001923r 2  95 00            sta $00,x
001925r 2  A5 96            lda TEMP_PAX2
001927r 2  95 01            sta $01,x
001929r 2               
001929r 2               ; src/prelude.fth:4:25 in `over`
001929r 2               @OPCODE_756:   ; [c64_ir] AltPop
001929r 2  E8               inx
00192Ar 2  E8               inx
00192Br 2  68               pla
00192Cr 2  95 00            sta $00,x
00192Er 2  68               pla
00192Fr 2  95 01            sta $01,x
001931r 2               
001931r 2               ; src/prelude.fth:4:28 in `over`
001931r 2               @OPCODE_757:   ; [c64_ir] TempLoad
001931r 2  E8               inx
001932r 2  E8               inx
001933r 2  A5 95            lda TEMP_PAX1
001935r 2  95 00            sta $00,x
001937r 2  A5 96            lda TEMP_PAX2
001939r 2  95 01            sta $01,x
00193Br 2               
00193Br 2               ; src/prelude.fth:33:29 in `loopimpl`
00193Br 2               @OPCODE_758:   ; [c64_ir] AltPush
00193Br 2  CA               dex
00193Cr 2  CA               dex
00193Dr 2  B5 03            lda $03,x
00193Fr 2  48               pha
001940r 2  B5 02            lda $02,x
001942r 2  48               pha
001943r 2               
001943r 2               ; src/prelude.fth:33:32 in `loopimpl`
001943r 2               @OPCODE_759:   ; [c64_ir] AltPush
001943r 2  CA               dex
001944r 2  CA               dex
001945r 2  B5 03            lda $03,x
001947r 2  48               pha
001948r 2  B5 02            lda $02,x
00194Ar 2  48               pha
00194Br 2               
00194Br 2               ; src/prelude.fth:14:12 in `invert`
00194Br 2               @OPCODE_760:   ; [c64_ir] PushLiteral(-1)
00194Br 2  E8               inx
00194Cr 2  E8               inx
00194Dr 2  A9 FF            lda #255
00194Fr 2  95 00            sta $00,x
001951r 2  A9 FF            lda #255
001953r 2  95 01            sta $01,x
001955r 2               
001955r 2               ; src/prelude.fth:14:15 in `invert`
001955r 2               @OPCODE_761:   ; [c64_ir] Nand
001955r 2                   ; 26
001955r 2  CA               dex
001956r 2  CA               dex
001957r 2  B5 00            lda $00,x
001959r 2  35 02            and $02,x
00195Br 2  49 FF            eor #$ff
00195Dr 2  95 00            sta $00,x
00195Fr 2  B5 01            lda $01,x
001961r 2  35 03            and $03,x
001963r 2  49 FF            eor #$ff
001965r 2  95 01            sta $01,x
001967r 2               
001967r 2               ; src/prelude.fth:15:19 in `negate`
001967r 2               @OPCODE_762:   ; [c64_ir] PushLiteral(1)
001967r 2  E8               inx
001968r 2  E8               inx
001969r 2  A9 01            lda #1
00196Br 2  95 00            sta $00,x
00196Dr 2  A9 00            lda #0
00196Fr 2  95 01            sta $01,x
001971r 2               
001971r 2               ; src/prelude.fth:15:21 in `negate`
001971r 2               @OPCODE_763:   ; [c64_ir] Add
001971r 2                   ; 21
001971r 2  CA               dex
001972r 2  CA               dex
001973r 2  18               clc
001974r 2  B5 00            lda $00,x
001976r 2  75 02            adc $02,x
001978r 2  95 00            sta $00,x
00197Ar 2  B5 01            lda $01,x
00197Cr 2  75 03            adc $03,x
00197Er 2  95 01            sta $01,x
001980r 2               
001980r 2               ; src/prelude.fth:16:19 in `-`
001980r 2               @OPCODE_764:   ; [c64_ir] Add
001980r 2                   ; 21
001980r 2  CA               dex
001981r 2  CA               dex
001982r 2  18               clc
001983r 2  B5 00            lda $00,x
001985r 2  75 02            adc $02,x
001987r 2  95 00            sta $00,x
001989r 2  B5 01            lda $01,x
00198Br 2  75 03            adc $03,x
00198Dr 2  95 01            sta $01,x
00198Fr 2               
00198Fr 2               ; src/prelude.fth:21:8 in `0=`
00198Fr 2               @OPCODE_765:   ; [c64_ir] JumpIf0(58)
00198Fr 2  CA               dex
001990r 2  CA               dex
001991r 2  B5 02            lda $02,x
001993r 2  15 03            ora $03,x
001995r 2  D0 03            bne *+5
001997r 2  4C rr rr         jmp @target_58
00199Ar 2               
00199Ar 2               @target_57:
00199Ar 2               
00199Ar 2               ; src/prelude.fth:21:11 in `0=`
00199Ar 2               @OPCODE_767:   ; [c64_ir] PushLiteral(0)
00199Ar 2  E8               inx
00199Br 2  E8               inx
00199Cr 2  A9 00            lda #0
00199Er 2  95 00            sta $00,x
0019A0r 2  A9 00            lda #0
0019A2r 2  95 01            sta $01,x
0019A4r 2               
0019A4r 2               ; src/prelude.fth:21:13 in `0=`
0019A4r 2               @OPCODE_768:   ; [c64_ir] JumpElse(59)
0019A4r 2  4C rr rr         jmp @target_59
0019A7r 2               
0019A7r 2               @target_58:
0019A7r 2               
0019A7r 2               ; src/prelude.fth:21:18 in `0=`
0019A7r 2               @OPCODE_770:   ; [c64_ir] PushLiteral(-1)
0019A7r 2  E8               inx
0019A8r 2  E8               inx
0019A9r 2  A9 FF            lda #255
0019ABr 2  95 00            sta $00,x
0019ADr 2  A9 FF            lda #255
0019AFr 2  95 01            sta $01,x
0019B1r 2               
0019B1r 2               ; src/prelude.fth:21:21 in `0=`
0019B1r 2               @OPCODE_771:   ; [c64_ir] JumpTarget(58)
0019B1r 2               
0019B1r 2               @target_59:
0019B1r 2               
0019B1r 2               ; src/prelude.fth:3:10 in `swap`
0019B1r 2               @OPCODE_773:   ; [c64_ir] AltPush
0019B1r 2  CA               dex
0019B2r 2  CA               dex
0019B3r 2  B5 03            lda $03,x
0019B5r 2  48               pha
0019B6r 2  B5 02            lda $02,x
0019B8r 2  48               pha
0019B9r 2               
0019B9r 2               ; src/prelude.fth:3:19 in `swap`
0019B9r 2               @OPCODE_774:   ; [c64_ir] AltPop
0019B9r 2  E8               inx
0019BAr 2  E8               inx
0019BBr 2  68               pla
0019BCr 2  95 00            sta $00,x
0019BEr 2  68               pla
0019BFr 2  95 01            sta $01,x
0019C1r 2               
0019C1r 2               ; src/prelude.fth:44:25 in `*`
0019C1r 2               @OPCODE_775:   ; [c64_ir] LoopIf0(56)
0019C1r 2  CA               dex
0019C2r 2  CA               dex
0019C3r 2  B5 02            lda $02,x
0019C5r 2  15 03            ora $03,x
0019C7r 2  D0 03            bne *+5
0019C9r 2  4C rr rr         jmp @target_56
0019CCr 2               
0019CCr 2               @target_60:
0019CCr 2               
0019CCr 2               ; src/prelude.fth:44:25 in `*`
0019CCr 2               @OPCODE_777:   ; [c64_ir] AltPop
0019CCr 2  E8               inx
0019CDr 2  E8               inx
0019CEr 2  68               pla
0019CFr 2  95 00            sta $00,x
0019D1r 2  68               pla
0019D2r 2  95 01            sta $01,x
0019D4r 2               
0019D4r 2               ; src/prelude.fth:44:25 in `*`
0019D4r 2               @OPCODE_778:   ; [c64_ir] Drop
0019D4r 2  CA               dex
0019D5r 2  CA               dex
0019D6r 2               
0019D6r 2               ; src/prelude.fth:44:25 in `*`
0019D6r 2               @OPCODE_779:   ; [c64_ir] AltPop
0019D6r 2  E8               inx
0019D7r 2  E8               inx
0019D8r 2  68               pla
0019D9r 2  95 00            sta $00,x
0019DBr 2  68               pla
0019DCr 2  95 01            sta $01,x
0019DEr 2               
0019DEr 2               ; src/prelude.fth:44:25 in `*`
0019DEr 2               @OPCODE_780:   ; [c64_ir] Drop
0019DEr 2  CA               dex
0019DFr 2  CA               dex
0019E0r 2               
0019E0r 2               ; src/prelude.fth:3:10 in `swap`
0019E0r 2               @OPCODE_781:   ; [c64_ir] AltPush
0019E0r 2  CA               dex
0019E1r 2  CA               dex
0019E2r 2  B5 03            lda $03,x
0019E4r 2  48               pha
0019E5r 2  B5 02            lda $02,x
0019E7r 2  48               pha
0019E8r 2               
0019E8r 2               ; src/prelude.fth:3:13 in `swap`
0019E8r 2               @OPCODE_782:   ; [c64_ir] TempStore
0019E8r 2  CA               dex
0019E9r 2  CA               dex
0019EAr 2  B5 03            lda $03,x
0019ECr 2  85 96            sta TEMP_PAX2
0019EEr 2  B5 02            lda $02,x
0019F0r 2  85 95            sta TEMP_PAX1
0019F2r 2               
0019F2r 2               ; src/prelude.fth:3:19 in `swap`
0019F2r 2               @OPCODE_783:   ; [c64_ir] AltPop
0019F2r 2  E8               inx
0019F3r 2  E8               inx
0019F4r 2  68               pla
0019F5r 2  95 00            sta $00,x
0019F7r 2  68               pla
0019F8r 2  95 01            sta $01,x
0019FAr 2               
0019FAr 2               ; <inline>:0:0 in `main`
0019FAr 2               @OPCODE_784:   ; [c64_ir] AltPop
0019FAr 2  E8               inx
0019FBr 2  E8               inx
0019FCr 2  68               pla
0019FDr 2  95 00            sta $00,x
0019FFr 2  68               pla
001A00r 2  95 01            sta $01,x
001A02r 2               
001A02r 2               ; <inline>:0:0 in `main`
001A02r 2               @OPCODE_785:   ; [c64_ir] Drop
001A02r 2  CA               dex
001A03r 2  CA               dex
001A04r 2               
001A04r 2               ; snake.pax:48:39 in `convert-x-y`
001A04r 2               @OPCODE_786:   ; [c64_ir] Add
001A04r 2                   ; 21
001A04r 2  CA               dex
001A05r 2  CA               dex
001A06r 2  18               clc
001A07r 2  B5 00            lda $00,x
001A09r 2  75 02            adc $02,x
001A0Br 2  95 00            sta $00,x
001A0Dr 2  B5 01            lda $01,x
001A0Fr 2  75 03            adc $03,x
001A11r 2  95 01            sta $01,x
001A13r 2               
001A13r 2               ; <inline>:0:0 in `main`
001A13r 2               @OPCODE_787:   ; [c64_ir] AltPop
001A13r 2  E8               inx
001A14r 2  E8               inx
001A15r 2  68               pla
001A16r 2  95 00            sta $00,x
001A18r 2  68               pla
001A19r 2  95 01            sta $01,x
001A1Br 2               
001A1Br 2               ; <inline>:0:0 in `main`
001A1Br 2               @OPCODE_788:   ; [c64_ir] Drop
001A1Br 2  CA               dex
001A1Cr 2  CA               dex
001A1Dr 2               
001A1Dr 2               ; snake.pax:49:34 in `draw-index`
001A1Dr 2               @OPCODE_789:   ; [c64_ir] PushLiteral(1024)
001A1Dr 2  E8               inx
001A1Er 2  E8               inx
001A1Fr 2  A9 00            lda #0
001A21r 2  95 00            sta $00,x
001A23r 2  A9 04            lda #4
001A25r 2  95 01            sta $01,x
001A27r 2               
001A27r 2               ; snake.pax:49:43 in `draw-index`
001A27r 2               @OPCODE_790:   ; [c64_ir] Add
001A27r 2                   ; 21
001A27r 2  CA               dex
001A28r 2  CA               dex
001A29r 2  18               clc
001A2Ar 2  B5 00            lda $00,x
001A2Cr 2  75 02            adc $02,x
001A2Er 2  95 00            sta $00,x
001A30r 2  B5 01            lda $01,x
001A32r 2  75 03            adc $03,x
001A34r 2  95 01            sta $01,x
001A36r 2               
001A36r 2               ; snake.pax:49:45 in `draw-index`
001A36r 2               @OPCODE_791:   ; [c64_ir] Store8
001A36r 2  CA               dex
001A37r 2  CA               dex
001A38r 2  CA               dex
001A39r 2  CA               dex
001A3Ar 2  B5 02            lda $02,x
001A3Cr 2  81 04            sta ($04,x)
001A3Er 2                   ; TODO high byte
001A3Er 2               
001A3Er 2               ; <inline>:0:0 in `main`
001A3Er 2               @OPCODE_792:   ; [c64_ir] AltPop
001A3Er 2  E8               inx
001A3Fr 2  E8               inx
001A40r 2  68               pla
001A41r 2  95 00            sta $00,x
001A43r 2  68               pla
001A44r 2  95 01            sta $01,x
001A46r 2               
001A46r 2               ; <inline>:0:0 in `main`
001A46r 2               @OPCODE_793:   ; [c64_ir] Drop
001A46r 2  CA               dex
001A47r 2  CA               dex
001A48r 2               
001A48r 2               ; <inline>:0:0 in `main`
001A48r 2               @OPCODE_794:   ; [c64_ir] AltPop
001A48r 2  E8               inx
001A49r 2  E8               inx
001A4Ar 2  68               pla
001A4Br 2  95 00            sta $00,x
001A4Dr 2  68               pla
001A4Er 2  95 01            sta $01,x
001A50r 2               
001A50r 2               ; <inline>:0:0 in `main`
001A50r 2               @OPCODE_795:   ; [c64_ir] Drop
001A50r 2  CA               dex
001A51r 2  CA               dex
001A52r 2               
001A52r 2               ; snake.pax:196:3 in `draw-snake-head-tail`
001A52r 2               @OPCODE_796:   ; [c64_ir] PushLiteral(-26658)
001A52r 2  E8               inx
001A53r 2  E8               inx
001A54r 2  A9 DE            lda #222
001A56r 2  95 00            sta $00,x
001A58r 2  A9 97            lda #151
001A5Ar 2  95 01            sta $01,x
001A5Cr 2               
001A5Cr 2               ; snake.pax:196:10 in `draw-snake-head-tail`
001A5Cr 2               @OPCODE_797:   ; [c64_ir] Load
001A5Cr 2  A1 00            lda ($00,x)
001A5Er 2  95 00            sta $00,x
001A60r 2  A9 00            lda #0
001A62r 2  95 01            sta $01,x
001A64r 2               
001A64r 2               ; src/prelude.fth:6:10 in `dup`
001A64r 2               @OPCODE_798:   ; [c64_ir] TempStore
001A64r 2  CA               dex
001A65r 2  CA               dex
001A66r 2  B5 03            lda $03,x
001A68r 2  85 96            sta TEMP_PAX2
001A6Ar 2  B5 02            lda $02,x
001A6Cr 2  85 95            sta TEMP_PAX1
001A6Er 2               
001A6Er 2               ; src/prelude.fth:6:16 in `dup`
001A6Er 2               @OPCODE_799:   ; [c64_ir] TempLoad
001A6Er 2  E8               inx
001A6Fr 2  E8               inx
001A70r 2  A5 95            lda TEMP_PAX1
001A72r 2  95 00            sta $00,x
001A74r 2  A5 96            lda TEMP_PAX2
001A76r 2  95 01            sta $01,x
001A78r 2               
001A78r 2               ; src/prelude.fth:6:22 in `dup`
001A78r 2               @OPCODE_800:   ; [c64_ir] TempLoad
001A78r 2  E8               inx
001A79r 2  E8               inx
001A7Ar 2  A5 95            lda TEMP_PAX1
001A7Cr 2  95 00            sta $00,x
001A7Er 2  A5 96            lda TEMP_PAX2
001A80r 2  95 01            sta $01,x
001A82r 2               
001A82r 2               ; src/prelude.fth:41:13 in `cells`
001A82r 2               @OPCODE_801:   ; [c64_ir] Add
001A82r 2                   ; 21
001A82r 2  CA               dex
001A83r 2  CA               dex
001A84r 2  18               clc
001A85r 2  B5 00            lda $00,x
001A87r 2  75 02            adc $02,x
001A89r 2  95 00            sta $00,x
001A8Br 2  B5 01            lda $01,x
001A8Dr 2  75 03            adc $03,x
001A8Fr 2  95 01            sta $01,x
001A91r 2               
001A91r 2               ; snake.pax:42:9 in `snake-x`
001A91r 2               @OPCODE_802:   ; [c64_ir] PushLiteral(-28668)
001A91r 2  E8               inx
001A92r 2  E8               inx
001A93r 2  A9 04            lda #4
001A95r 2  95 00            sta $00,x
001A97r 2  A9 90            lda #144
001A99r 2  95 01            sta $01,x
001A9Br 2               
001A9Br 2               ; snake.pax:42:22 in `snake-x`
001A9Br 2               @OPCODE_803:   ; [c64_ir] Add
001A9Br 2                   ; 21
001A9Br 2  CA               dex
001A9Cr 2  CA               dex
001A9Dr 2  18               clc
001A9Er 2  B5 00            lda $00,x
001AA0r 2  75 02            adc $02,x
001AA2r 2  95 00            sta $00,x
001AA4r 2  B5 01            lda $01,x
001AA6r 2  75 03            adc $03,x
001AA8r 2  95 01            sta $01,x
001AAAr 2               
001AAAr 2               ; snake.pax:196:20 in `draw-snake-head-tail`
001AAAr 2               @OPCODE_804:   ; [c64_ir] Load
001AAAr 2  A1 00            lda ($00,x)
001AACr 2  95 00            sta $00,x
001AAEr 2  A9 00            lda #0
001AB0r 2  95 01            sta $01,x
001AB2r 2               
001AB2r 2               ; snake.pax:197:3 in `draw-snake-head-tail`
001AB2r 2               @OPCODE_805:   ; [c64_ir] PushLiteral(-26658)
001AB2r 2  E8               inx
001AB3r 2  E8               inx
001AB4r 2  A9 DE            lda #222
001AB6r 2  95 00            sta $00,x
001AB8r 2  A9 97            lda #151
001ABAr 2  95 01            sta $01,x
001ABCr 2               
001ABCr 2               ; snake.pax:197:10 in `draw-snake-head-tail`
001ABCr 2               @OPCODE_806:   ; [c64_ir] Load
001ABCr 2  A1 00            lda ($00,x)
001ABEr 2  95 00            sta $00,x
001AC0r 2  A9 00            lda #0
001AC2r 2  95 01            sta $01,x
001AC4r 2               
001AC4r 2               ; src/prelude.fth:6:10 in `dup`
001AC4r 2               @OPCODE_807:   ; [c64_ir] TempStore
001AC4r 2  CA               dex
001AC5r 2  CA               dex
001AC6r 2  B5 03            lda $03,x
001AC8r 2  85 96            sta TEMP_PAX2
001ACAr 2  B5 02            lda $02,x
001ACCr 2  85 95            sta TEMP_PAX1
001ACEr 2               
001ACEr 2               ; src/prelude.fth:6:16 in `dup`
001ACEr 2               @OPCODE_808:   ; [c64_ir] TempLoad
001ACEr 2  E8               inx
001ACFr 2  E8               inx
001AD0r 2  A5 95            lda TEMP_PAX1
001AD2r 2  95 00            sta $00,x
001AD4r 2  A5 96            lda TEMP_PAX2
001AD6r 2  95 01            sta $01,x
001AD8r 2               
001AD8r 2               ; src/prelude.fth:6:22 in `dup`
001AD8r 2               @OPCODE_809:   ; [c64_ir] TempLoad
001AD8r 2  E8               inx
001AD9r 2  E8               inx
001ADAr 2  A5 95            lda TEMP_PAX1
001ADCr 2  95 00            sta $00,x
001ADEr 2  A5 96            lda TEMP_PAX2
001AE0r 2  95 01            sta $01,x
001AE2r 2               
001AE2r 2               ; src/prelude.fth:41:13 in `cells`
001AE2r 2               @OPCODE_810:   ; [c64_ir] Add
001AE2r 2                   ; 21
001AE2r 2  CA               dex
001AE3r 2  CA               dex
001AE4r 2  18               clc
001AE5r 2  B5 00            lda $00,x
001AE7r 2  75 02            adc $02,x
001AE9r 2  95 00            sta $00,x
001AEBr 2  B5 01            lda $01,x
001AEDr 2  75 03            adc $03,x
001AEFr 2  95 01            sta $01,x
001AF1r 2               
001AF1r 2               ; snake.pax:45:9 in `snake-y`
001AF1r 2               @OPCODE_811:   ; [c64_ir] PushLiteral(-27666)
001AF1r 2  E8               inx
001AF2r 2  E8               inx
001AF3r 2  A9 EE            lda #238
001AF5r 2  95 00            sta $00,x
001AF7r 2  A9 93            lda #147
001AF9r 2  95 01            sta $01,x
001AFBr 2               
001AFBr 2               ; snake.pax:45:22 in `snake-y`
001AFBr 2               @OPCODE_812:   ; [c64_ir] Add
001AFBr 2                   ; 21
001AFBr 2  CA               dex
001AFCr 2  CA               dex
001AFDr 2  18               clc
001AFEr 2  B5 00            lda $00,x
001B00r 2  75 02            adc $02,x
001B02r 2  95 00            sta $00,x
001B04r 2  B5 01            lda $01,x
001B06r 2  75 03            adc $03,x
001B08r 2  95 01            sta $01,x
001B0Ar 2               
001B0Ar 2               ; snake.pax:197:20 in `draw-snake-head-tail`
001B0Ar 2               @OPCODE_813:   ; [c64_ir] Load
001B0Ar 2  A1 00            lda ($00,x)
001B0Cr 2  95 00            sta $00,x
001B0Er 2  A9 00            lda #0
001B10r 2  95 01            sta $01,x
001B12r 2               
001B12r 2               ; <inline>:0:0 in `main`
001B12r 2               @OPCODE_814:   ; [c64_ir] PushLiteral(7777)
001B12r 2  E8               inx
001B13r 2  E8               inx
001B14r 2  A9 61            lda #97
001B16r 2  95 00            sta $00,x
001B18r 2  A9 1E            lda #30
001B1Ar 2  95 01            sta $01,x
001B1Cr 2               
001B1Cr 2               ; <inline>:0:0 in `main`
001B1Cr 2               @OPCODE_815:   ; [c64_ir] AltPush
001B1Cr 2  CA               dex
001B1Dr 2  CA               dex
001B1Er 2  B5 03            lda $03,x
001B20r 2  48               pha
001B21r 2  B5 02            lda $02,x
001B23r 2  48               pha
001B24r 2               
001B24r 2               ; src/prelude.fth:3:10 in `swap`
001B24r 2               @OPCODE_816:   ; [c64_ir] AltPush
001B24r 2  CA               dex
001B25r 2  CA               dex
001B26r 2  B5 03            lda $03,x
001B28r 2  48               pha
001B29r 2  B5 02            lda $02,x
001B2Br 2  48               pha
001B2Cr 2               
001B2Cr 2               ; src/prelude.fth:3:13 in `swap`
001B2Cr 2               @OPCODE_817:   ; [c64_ir] TempStore
001B2Cr 2  CA               dex
001B2Dr 2  CA               dex
001B2Er 2  B5 03            lda $03,x
001B30r 2  85 96            sta TEMP_PAX2
001B32r 2  B5 02            lda $02,x
001B34r 2  85 95            sta TEMP_PAX1
001B36r 2               
001B36r 2               ; src/prelude.fth:3:19 in `swap`
001B36r 2               @OPCODE_818:   ; [c64_ir] AltPop
001B36r 2  E8               inx
001B37r 2  E8               inx
001B38r 2  68               pla
001B39r 2  95 00            sta $00,x
001B3Br 2  68               pla
001B3Cr 2  95 01            sta $01,x
001B3Er 2               
001B3Er 2               ; src/prelude.fth:3:22 in `swap`
001B3Er 2               @OPCODE_819:   ; [c64_ir] TempLoad
001B3Er 2  E8               inx
001B3Fr 2  E8               inx
001B40r 2  A5 95            lda TEMP_PAX1
001B42r 2  95 00            sta $00,x
001B44r 2  A5 96            lda TEMP_PAX2
001B46r 2  95 01            sta $01,x
001B48r 2               
001B48r 2               ; src/prelude.fth:3:13 in `swap`
001B48r 2               @OPCODE_820:   ; [c64_ir] TempStore
001B48r 2  CA               dex
001B49r 2  CA               dex
001B4Ar 2  B5 03            lda $03,x
001B4Cr 2  85 96            sta TEMP_PAX2
001B4Er 2  B5 02            lda $02,x
001B50r 2  85 95            sta TEMP_PAX1
001B52r 2               
001B52r 2               ; src/prelude.fth:3:22 in `swap`
001B52r 2               @OPCODE_821:   ; [c64_ir] TempLoad
001B52r 2  E8               inx
001B53r 2  E8               inx
001B54r 2  A5 95            lda TEMP_PAX1
001B56r 2  95 00            sta $00,x
001B58r 2  A5 96            lda TEMP_PAX2
001B5Ar 2  95 01            sta $01,x
001B5Cr 2               
001B5Cr 2               ; src/prelude.fth:5:10 in `rot`
001B5Cr 2               @OPCODE_822:   ; [c64_ir] AltPush
001B5Cr 2  CA               dex
001B5Dr 2  CA               dex
001B5Er 2  B5 03            lda $03,x
001B60r 2  48               pha
001B61r 2  B5 02            lda $02,x
001B63r 2  48               pha
001B64r 2               
001B64r 2               ; src/prelude.fth:3:13 in `swap`
001B64r 2               @OPCODE_823:   ; [c64_ir] TempStore
001B64r 2  CA               dex
001B65r 2  CA               dex
001B66r 2  B5 03            lda $03,x
001B68r 2  85 96            sta TEMP_PAX2
001B6Ar 2  B5 02            lda $02,x
001B6Cr 2  85 95            sta TEMP_PAX1
001B6Er 2               
001B6Er 2               ; src/prelude.fth:3:19 in `swap`
001B6Er 2               @OPCODE_824:   ; [c64_ir] PushLiteral(32)
001B6Er 2  E8               inx
001B6Fr 2  E8               inx
001B70r 2  A9 20            lda #32
001B72r 2  95 00            sta $00,x
001B74r 2  A9 00            lda #0
001B76r 2  95 01            sta $01,x
001B78r 2               
001B78r 2               ; src/prelude.fth:3:22 in `swap`
001B78r 2               @OPCODE_825:   ; [c64_ir] TempLoad
001B78r 2  E8               inx
001B79r 2  E8               inx
001B7Ar 2  A5 95            lda TEMP_PAX1
001B7Cr 2  95 00            sta $00,x
001B7Er 2  A5 96            lda TEMP_PAX2
001B80r 2  95 01            sta $01,x
001B82r 2               
001B82r 2               ; src/prelude.fth:5:18 in `rot`
001B82r 2               @OPCODE_826:   ; [c64_ir] AltPop
001B82r 2  E8               inx
001B83r 2  E8               inx
001B84r 2  68               pla
001B85r 2  95 00            sta $00,x
001B87r 2  68               pla
001B88r 2  95 01            sta $01,x
001B8Ar 2               
001B8Ar 2               ; src/prelude.fth:3:10 in `swap`
001B8Ar 2               @OPCODE_827:   ; [c64_ir] AltPush
001B8Ar 2  CA               dex
001B8Br 2  CA               dex
001B8Cr 2  B5 03            lda $03,x
001B8Er 2  48               pha
001B8Fr 2  B5 02            lda $02,x
001B91r 2  48               pha
001B92r 2               
001B92r 2               ; src/prelude.fth:3:13 in `swap`
001B92r 2               @OPCODE_828:   ; [c64_ir] TempStore
001B92r 2  CA               dex
001B93r 2  CA               dex
001B94r 2  B5 03            lda $03,x
001B96r 2  85 96            sta TEMP_PAX2
001B98r 2  B5 02            lda $02,x
001B9Ar 2  85 95            sta TEMP_PAX1
001B9Cr 2               
001B9Cr 2               ; src/prelude.fth:3:19 in `swap`
001B9Cr 2               @OPCODE_829:   ; [c64_ir] AltPop
001B9Cr 2  E8               inx
001B9Dr 2  E8               inx
001B9Er 2  68               pla
001B9Fr 2  95 00            sta $00,x
001BA1r 2  68               pla
001BA2r 2  95 01            sta $01,x
001BA4r 2               
001BA4r 2               ; src/prelude.fth:3:22 in `swap`
001BA4r 2               @OPCODE_830:   ; [c64_ir] TempLoad
001BA4r 2  E8               inx
001BA5r 2  E8               inx
001BA6r 2  A5 95            lda TEMP_PAX1
001BA8r 2  95 00            sta $00,x
001BAAr 2  A5 96            lda TEMP_PAX2
001BACr 2  95 01            sta $01,x
001BAEr 2               
001BAEr 2               ; <inline>:0:0 in `main`
001BAEr 2               @OPCODE_831:   ; [c64_ir] PushLiteral(7777)
001BAEr 2  E8               inx
001BAFr 2  E8               inx
001BB0r 2  A9 61            lda #97
001BB2r 2  95 00            sta $00,x
001BB4r 2  A9 1E            lda #30
001BB6r 2  95 01            sta $01,x
001BB8r 2               
001BB8r 2               ; <inline>:0:0 in `main`
001BB8r 2               @OPCODE_832:   ; [c64_ir] AltPush
001BB8r 2  CA               dex
001BB9r 2  CA               dex
001BBAr 2  B5 03            lda $03,x
001BBCr 2  48               pha
001BBDr 2  B5 02            lda $02,x
001BBFr 2  48               pha
001BC0r 2               
001BC0r 2               ; <inline>:0:0 in `main`
001BC0r 2               @OPCODE_833:   ; [c64_ir] PushLiteral(7777)
001BC0r 2  E8               inx
001BC1r 2  E8               inx
001BC2r 2  A9 61            lda #97
001BC4r 2  95 00            sta $00,x
001BC6r 2  A9 1E            lda #30
001BC8r 2  95 01            sta $01,x
001BCAr 2               
001BCAr 2               ; <inline>:0:0 in `main`
001BCAr 2               @OPCODE_834:   ; [c64_ir] AltPush
001BCAr 2  CA               dex
001BCBr 2  CA               dex
001BCCr 2  B5 03            lda $03,x
001BCEr 2  48               pha
001BCFr 2  B5 02            lda $02,x
001BD1r 2  48               pha
001BD2r 2               
001BD2r 2               ; <inline>:0:0 in `main`
001BD2r 2               @OPCODE_835:   ; [c64_ir] PushLiteral(7777)
001BD2r 2  E8               inx
001BD3r 2  E8               inx
001BD4r 2  A9 61            lda #97
001BD6r 2  95 00            sta $00,x
001BD8r 2  A9 1E            lda #30
001BDAr 2  95 01            sta $01,x
001BDCr 2               
001BDCr 2               ; <inline>:0:0 in `main`
001BDCr 2               @OPCODE_836:   ; [c64_ir] AltPush
001BDCr 2  CA               dex
001BDDr 2  CA               dex
001BDEr 2  B5 03            lda $03,x
001BE0r 2  48               pha
001BE1r 2  B5 02            lda $02,x
001BE3r 2  48               pha
001BE4r 2               
001BE4r 2               ; src/prelude.fth:44:8 in `*`
001BE4r 2               @OPCODE_837:   ; [c64_ir] PushLiteral(0)
001BE4r 2  E8               inx
001BE5r 2  E8               inx
001BE6r 2  A9 00            lda #0
001BE8r 2  95 00            sta $00,x
001BEAr 2  A9 00            lda #0
001BECr 2  95 01            sta $01,x
001BEEr 2               
001BEEr 2               ; src/prelude.fth:44:10 in `*`
001BEEr 2               @OPCODE_838:   ; [c64_ir] PushLiteral(40)
001BEEr 2  E8               inx
001BEFr 2  E8               inx
001BF0r 2  A9 28            lda #40
001BF2r 2  95 00            sta $00,x
001BF4r 2  A9 00            lda #0
001BF6r 2  95 01            sta $01,x
001BF8r 2               
001BF8r 2               ; src/prelude.fth:44:13 in `*`
001BF8r 2               @OPCODE_839:   ; [c64_ir] PushLiteral(0)
001BF8r 2  E8               inx
001BF9r 2  E8               inx
001BFAr 2  A9 00            lda #0
001BFCr 2  95 00            sta $00,x
001BFEr 2  A9 00            lda #0
001C00r 2  95 01            sta $01,x
001C02r 2               
001C02r 2               ; src/prelude.fth:44:15 in `*`
001C02r 2               @OPCODE_840:   ; [c64_ir] AltPush
001C02r 2  CA               dex
001C03r 2  CA               dex
001C04r 2  B5 03            lda $03,x
001C06r 2  48               pha
001C07r 2  B5 02            lda $02,x
001C09r 2  48               pha
001C0Ar 2               
001C0Ar 2               ; src/prelude.fth:44:15 in `*`
001C0Ar 2               @OPCODE_841:   ; [c64_ir] AltPush
001C0Ar 2  CA               dex
001C0Br 2  CA               dex
001C0Cr 2  B5 03            lda $03,x
001C0Er 2  48               pha
001C0Fr 2  B5 02            lda $02,x
001C11r 2  48               pha
001C12r 2               
001C12r 2               ; src/prelude.fth:44:15 in `*`
001C12r 2               @OPCODE_842:   ; [c64_ir] LoopTarget(60)
001C12r 2               
001C12r 2               @target_61:
001C12r 2               
001C12r 2               ; src/prelude.fth:4:10 in `over`
001C12r 2               @OPCODE_844:   ; [c64_ir] AltPush
001C12r 2  CA               dex
001C13r 2  CA               dex
001C14r 2  B5 03            lda $03,x
001C16r 2  48               pha
001C17r 2  B5 02            lda $02,x
001C19r 2  48               pha
001C1Ar 2               
001C1Ar 2               ; src/prelude.fth:4:13 in `over`
001C1Ar 2               @OPCODE_845:   ; [c64_ir] TempStore
001C1Ar 2  CA               dex
001C1Br 2  CA               dex
001C1Cr 2  B5 03            lda $03,x
001C1Er 2  85 96            sta TEMP_PAX2
001C20r 2  B5 02            lda $02,x
001C22r 2  85 95            sta TEMP_PAX1
001C24r 2               
001C24r 2               ; src/prelude.fth:4:19 in `over`
001C24r 2               @OPCODE_846:   ; [c64_ir] TempLoad
001C24r 2  E8               inx
001C25r 2  E8               inx
001C26r 2  A5 95            lda TEMP_PAX1
001C28r 2  95 00            sta $00,x
001C2Ar 2  A5 96            lda TEMP_PAX2
001C2Cr 2  95 01            sta $01,x
001C2Er 2               
001C2Er 2               ; src/prelude.fth:4:25 in `over`
001C2Er 2               @OPCODE_847:   ; [c64_ir] AltPop
001C2Er 2  E8               inx
001C2Fr 2  E8               inx
001C30r 2  68               pla
001C31r 2  95 00            sta $00,x
001C33r 2  68               pla
001C34r 2  95 01            sta $01,x
001C36r 2               
001C36r 2               ; src/prelude.fth:4:28 in `over`
001C36r 2               @OPCODE_848:   ; [c64_ir] TempLoad
001C36r 2  E8               inx
001C37r 2  E8               inx
001C38r 2  A5 95            lda TEMP_PAX1
001C3Ar 2  95 00            sta $00,x
001C3Cr 2  A5 96            lda TEMP_PAX2
001C3Er 2  95 01            sta $01,x
001C40r 2               
001C40r 2               ; src/prelude.fth:44:23 in `*`
001C40r 2               @OPCODE_849:   ; [c64_ir] Add
001C40r 2                   ; 21
001C40r 2  CA               dex
001C41r 2  CA               dex
001C42r 2  18               clc
001C43r 2  B5 00            lda $00,x
001C45r 2  75 02            adc $02,x
001C47r 2  95 00            sta $00,x
001C49r 2  B5 01            lda $01,x
001C4Br 2  75 03            adc $03,x
001C4Dr 2  95 01            sta $01,x
001C4Fr 2               
001C4Fr 2               ; src/prelude.fth:33:15 in `loopimpl`
001C4Fr 2               @OPCODE_850:   ; [c64_ir] AltPop
001C4Fr 2  E8               inx
001C50r 2  E8               inx
001C51r 2  68               pla
001C52r 2  95 00            sta $00,x
001C54r 2  68               pla
001C55r 2  95 01            sta $01,x
001C57r 2               
001C57r 2               ; src/prelude.fth:33:18 in `loopimpl`
001C57r 2               @OPCODE_851:   ; [c64_ir] AltPop
001C57r 2  E8               inx
001C58r 2  E8               inx
001C59r 2  68               pla
001C5Ar 2  95 00            sta $00,x
001C5Cr 2  68               pla
001C5Dr 2  95 01            sta $01,x
001C5Fr 2               
001C5Fr 2               ; src/prelude.fth:18:8 in `1+`
001C5Fr 2               @OPCODE_852:   ; [c64_ir] PushLiteral(1)
001C5Fr 2  E8               inx
001C60r 2  E8               inx
001C61r 2  A9 01            lda #1
001C63r 2  95 00            sta $00,x
001C65r 2  A9 00            lda #0
001C67r 2  95 01            sta $01,x
001C69r 2               
001C69r 2               ; src/prelude.fth:18:10 in `1+`
001C69r 2               @OPCODE_853:   ; [c64_ir] Add
001C69r 2                   ; 21
001C69r 2  CA               dex
001C6Ar 2  CA               dex
001C6Br 2  18               clc
001C6Cr 2  B5 00            lda $00,x
001C6Er 2  75 02            adc $02,x
001C70r 2  95 00            sta $00,x
001C72r 2  B5 01            lda $01,x
001C74r 2  75 03            adc $03,x
001C76r 2  95 01            sta $01,x
001C78r 2               
001C78r 2               ; src/prelude.fth:4:10 in `over`
001C78r 2               @OPCODE_854:   ; [c64_ir] AltPush
001C78r 2  CA               dex
001C79r 2  CA               dex
001C7Ar 2  B5 03            lda $03,x
001C7Cr 2  48               pha
001C7Dr 2  B5 02            lda $02,x
001C7Fr 2  48               pha
001C80r 2               
001C80r 2               ; src/prelude.fth:4:13 in `over`
001C80r 2               @OPCODE_855:   ; [c64_ir] TempStore
001C80r 2  CA               dex
001C81r 2  CA               dex
001C82r 2  B5 03            lda $03,x
001C84r 2  85 96            sta TEMP_PAX2
001C86r 2  B5 02            lda $02,x
001C88r 2  85 95            sta TEMP_PAX1
001C8Ar 2               
001C8Ar 2               ; src/prelude.fth:4:19 in `over`
001C8Ar 2               @OPCODE_856:   ; [c64_ir] TempLoad
001C8Ar 2  E8               inx
001C8Br 2  E8               inx
001C8Cr 2  A5 95            lda TEMP_PAX1
001C8Er 2  95 00            sta $00,x
001C90r 2  A5 96            lda TEMP_PAX2
001C92r 2  95 01            sta $01,x
001C94r 2               
001C94r 2               ; src/prelude.fth:4:25 in `over`
001C94r 2               @OPCODE_857:   ; [c64_ir] AltPop
001C94r 2  E8               inx
001C95r 2  E8               inx
001C96r 2  68               pla
001C97r 2  95 00            sta $00,x
001C99r 2  68               pla
001C9Ar 2  95 01            sta $01,x
001C9Cr 2               
001C9Cr 2               ; src/prelude.fth:4:28 in `over`
001C9Cr 2               @OPCODE_858:   ; [c64_ir] TempLoad
001C9Cr 2  E8               inx
001C9Dr 2  E8               inx
001C9Er 2  A5 95            lda TEMP_PAX1
001CA0r 2  95 00            sta $00,x
001CA2r 2  A5 96            lda TEMP_PAX2
001CA4r 2  95 01            sta $01,x
001CA6r 2               
001CA6r 2               ; src/prelude.fth:4:10 in `over`
001CA6r 2               @OPCODE_859:   ; [c64_ir] AltPush
001CA6r 2  CA               dex
001CA7r 2  CA               dex
001CA8r 2  B5 03            lda $03,x
001CAAr 2  48               pha
001CABr 2  B5 02            lda $02,x
001CADr 2  48               pha
001CAEr 2               
001CAEr 2               ; src/prelude.fth:4:13 in `over`
001CAEr 2               @OPCODE_860:   ; [c64_ir] TempStore
001CAEr 2  CA               dex
001CAFr 2  CA               dex
001CB0r 2  B5 03            lda $03,x
001CB2r 2  85 96            sta TEMP_PAX2
001CB4r 2  B5 02            lda $02,x
001CB6r 2  85 95            sta TEMP_PAX1
001CB8r 2               
001CB8r 2               ; src/prelude.fth:4:19 in `over`
001CB8r 2               @OPCODE_861:   ; [c64_ir] TempLoad
001CB8r 2  E8               inx
001CB9r 2  E8               inx
001CBAr 2  A5 95            lda TEMP_PAX1
001CBCr 2  95 00            sta $00,x
001CBEr 2  A5 96            lda TEMP_PAX2
001CC0r 2  95 01            sta $01,x
001CC2r 2               
001CC2r 2               ; src/prelude.fth:4:25 in `over`
001CC2r 2               @OPCODE_862:   ; [c64_ir] AltPop
001CC2r 2  E8               inx
001CC3r 2  E8               inx
001CC4r 2  68               pla
001CC5r 2  95 00            sta $00,x
001CC7r 2  68               pla
001CC8r 2  95 01            sta $01,x
001CCAr 2               
001CCAr 2               ; src/prelude.fth:4:28 in `over`
001CCAr 2               @OPCODE_863:   ; [c64_ir] TempLoad
001CCAr 2  E8               inx
001CCBr 2  E8               inx
001CCCr 2  A5 95            lda TEMP_PAX1
001CCEr 2  95 00            sta $00,x
001CD0r 2  A5 96            lda TEMP_PAX2
001CD2r 2  95 01            sta $01,x
001CD4r 2               
001CD4r 2               ; src/prelude.fth:33:29 in `loopimpl`
001CD4r 2               @OPCODE_864:   ; [c64_ir] AltPush
001CD4r 2  CA               dex
001CD5r 2  CA               dex
001CD6r 2  B5 03            lda $03,x
001CD8r 2  48               pha
001CD9r 2  B5 02            lda $02,x
001CDBr 2  48               pha
001CDCr 2               
001CDCr 2               ; src/prelude.fth:33:32 in `loopimpl`
001CDCr 2               @OPCODE_865:   ; [c64_ir] AltPush
001CDCr 2  CA               dex
001CDDr 2  CA               dex
001CDEr 2  B5 03            lda $03,x
001CE0r 2  48               pha
001CE1r 2  B5 02            lda $02,x
001CE3r 2  48               pha
001CE4r 2               
001CE4r 2               ; src/prelude.fth:14:12 in `invert`
001CE4r 2               @OPCODE_866:   ; [c64_ir] PushLiteral(-1)
001CE4r 2  E8               inx
001CE5r 2  E8               inx
001CE6r 2  A9 FF            lda #255
001CE8r 2  95 00            sta $00,x
001CEAr 2  A9 FF            lda #255
001CECr 2  95 01            sta $01,x
001CEEr 2               
001CEEr 2               ; src/prelude.fth:14:15 in `invert`
001CEEr 2               @OPCODE_867:   ; [c64_ir] Nand
001CEEr 2                   ; 26
001CEEr 2  CA               dex
001CEFr 2  CA               dex
001CF0r 2  B5 00            lda $00,x
001CF2r 2  35 02            and $02,x
001CF4r 2  49 FF            eor #$ff
001CF6r 2  95 00            sta $00,x
001CF8r 2  B5 01            lda $01,x
001CFAr 2  35 03            and $03,x
001CFCr 2  49 FF            eor #$ff
001CFEr 2  95 01            sta $01,x
001D00r 2               
001D00r 2               ; src/prelude.fth:15:19 in `negate`
001D00r 2               @OPCODE_868:   ; [c64_ir] PushLiteral(1)
001D00r 2  E8               inx
001D01r 2  E8               inx
001D02r 2  A9 01            lda #1
001D04r 2  95 00            sta $00,x
001D06r 2  A9 00            lda #0
001D08r 2  95 01            sta $01,x
001D0Ar 2               
001D0Ar 2               ; src/prelude.fth:15:21 in `negate`
001D0Ar 2               @OPCODE_869:   ; [c64_ir] Add
001D0Ar 2                   ; 21
001D0Ar 2  CA               dex
001D0Br 2  CA               dex
001D0Cr 2  18               clc
001D0Dr 2  B5 00            lda $00,x
001D0Fr 2  75 02            adc $02,x
001D11r 2  95 00            sta $00,x
001D13r 2  B5 01            lda $01,x
001D15r 2  75 03            adc $03,x
001D17r 2  95 01            sta $01,x
001D19r 2               
001D19r 2               ; src/prelude.fth:16:19 in `-`
001D19r 2               @OPCODE_870:   ; [c64_ir] Add
001D19r 2                   ; 21
001D19r 2  CA               dex
001D1Ar 2  CA               dex
001D1Br 2  18               clc
001D1Cr 2  B5 00            lda $00,x
001D1Er 2  75 02            adc $02,x
001D20r 2  95 00            sta $00,x
001D22r 2  B5 01            lda $01,x
001D24r 2  75 03            adc $03,x
001D26r 2  95 01            sta $01,x
001D28r 2               
001D28r 2               ; src/prelude.fth:21:8 in `0=`
001D28r 2               @OPCODE_871:   ; [c64_ir] JumpIf0(63)
001D28r 2  CA               dex
001D29r 2  CA               dex
001D2Ar 2  B5 02            lda $02,x
001D2Cr 2  15 03            ora $03,x
001D2Er 2  D0 03            bne *+5
001D30r 2  4C rr rr         jmp @target_63
001D33r 2               
001D33r 2               @target_62:
001D33r 2               
001D33r 2               ; src/prelude.fth:21:11 in `0=`
001D33r 2               @OPCODE_873:   ; [c64_ir] PushLiteral(0)
001D33r 2  E8               inx
001D34r 2  E8               inx
001D35r 2  A9 00            lda #0
001D37r 2  95 00            sta $00,x
001D39r 2  A9 00            lda #0
001D3Br 2  95 01            sta $01,x
001D3Dr 2               
001D3Dr 2               ; src/prelude.fth:21:13 in `0=`
001D3Dr 2               @OPCODE_874:   ; [c64_ir] JumpElse(64)
001D3Dr 2  4C rr rr         jmp @target_64
001D40r 2               
001D40r 2               @target_63:
001D40r 2               
001D40r 2               ; src/prelude.fth:21:18 in `0=`
001D40r 2               @OPCODE_876:   ; [c64_ir] PushLiteral(-1)
001D40r 2  E8               inx
001D41r 2  E8               inx
001D42r 2  A9 FF            lda #255
001D44r 2  95 00            sta $00,x
001D46r 2  A9 FF            lda #255
001D48r 2  95 01            sta $01,x
001D4Ar 2               
001D4Ar 2               ; src/prelude.fth:21:21 in `0=`
001D4Ar 2               @OPCODE_877:   ; [c64_ir] JumpTarget(63)
001D4Ar 2               
001D4Ar 2               @target_64:
001D4Ar 2               
001D4Ar 2               ; src/prelude.fth:3:10 in `swap`
001D4Ar 2               @OPCODE_879:   ; [c64_ir] AltPush
001D4Ar 2  CA               dex
001D4Br 2  CA               dex
001D4Cr 2  B5 03            lda $03,x
001D4Er 2  48               pha
001D4Fr 2  B5 02            lda $02,x
001D51r 2  48               pha
001D52r 2               
001D52r 2               ; src/prelude.fth:3:19 in `swap`
001D52r 2               @OPCODE_880:   ; [c64_ir] AltPop
001D52r 2  E8               inx
001D53r 2  E8               inx
001D54r 2  68               pla
001D55r 2  95 00            sta $00,x
001D57r 2  68               pla
001D58r 2  95 01            sta $01,x
001D5Ar 2               
001D5Ar 2               ; src/prelude.fth:44:25 in `*`
001D5Ar 2               @OPCODE_881:   ; [c64_ir] LoopIf0(61)
001D5Ar 2  CA               dex
001D5Br 2  CA               dex
001D5Cr 2  B5 02            lda $02,x
001D5Er 2  15 03            ora $03,x
001D60r 2  D0 03            bne *+5
001D62r 2  4C rr rr         jmp @target_61
001D65r 2               
001D65r 2               @target_65:
001D65r 2               
001D65r 2               ; src/prelude.fth:44:25 in `*`
001D65r 2               @OPCODE_883:   ; [c64_ir] AltPop
001D65r 2  E8               inx
001D66r 2  E8               inx
001D67r 2  68               pla
001D68r 2  95 00            sta $00,x
001D6Ar 2  68               pla
001D6Br 2  95 01            sta $01,x
001D6Dr 2               
001D6Dr 2               ; src/prelude.fth:44:25 in `*`
001D6Dr 2               @OPCODE_884:   ; [c64_ir] Drop
001D6Dr 2  CA               dex
001D6Er 2  CA               dex
001D6Fr 2               
001D6Fr 2               ; src/prelude.fth:44:25 in `*`
001D6Fr 2               @OPCODE_885:   ; [c64_ir] AltPop
001D6Fr 2  E8               inx
001D70r 2  E8               inx
001D71r 2  68               pla
001D72r 2  95 00            sta $00,x
001D74r 2  68               pla
001D75r 2  95 01            sta $01,x
001D77r 2               
001D77r 2               ; src/prelude.fth:44:25 in `*`
001D77r 2               @OPCODE_886:   ; [c64_ir] Drop
001D77r 2  CA               dex
001D78r 2  CA               dex
001D79r 2               
001D79r 2               ; src/prelude.fth:3:10 in `swap`
001D79r 2               @OPCODE_887:   ; [c64_ir] AltPush
001D79r 2  CA               dex
001D7Ar 2  CA               dex
001D7Br 2  B5 03            lda $03,x
001D7Dr 2  48               pha
001D7Er 2  B5 02            lda $02,x
001D80r 2  48               pha
001D81r 2               
001D81r 2               ; src/prelude.fth:3:13 in `swap`
001D81r 2               @OPCODE_888:   ; [c64_ir] TempStore
001D81r 2  CA               dex
001D82r 2  CA               dex
001D83r 2  B5 03            lda $03,x
001D85r 2  85 96            sta TEMP_PAX2
001D87r 2  B5 02            lda $02,x
001D89r 2  85 95            sta TEMP_PAX1
001D8Br 2               
001D8Br 2               ; src/prelude.fth:3:19 in `swap`
001D8Br 2               @OPCODE_889:   ; [c64_ir] AltPop
001D8Br 2  E8               inx
001D8Cr 2  E8               inx
001D8Dr 2  68               pla
001D8Er 2  95 00            sta $00,x
001D90r 2  68               pla
001D91r 2  95 01            sta $01,x
001D93r 2               
001D93r 2               ; <inline>:0:0 in `main`
001D93r 2               @OPCODE_890:   ; [c64_ir] AltPop
001D93r 2  E8               inx
001D94r 2  E8               inx
001D95r 2  68               pla
001D96r 2  95 00            sta $00,x
001D98r 2  68               pla
001D99r 2  95 01            sta $01,x
001D9Br 2               
001D9Br 2               ; <inline>:0:0 in `main`
001D9Br 2               @OPCODE_891:   ; [c64_ir] Drop
001D9Br 2  CA               dex
001D9Cr 2  CA               dex
001D9Dr 2               
001D9Dr 2               ; snake.pax:48:39 in `convert-x-y`
001D9Dr 2               @OPCODE_892:   ; [c64_ir] Add
001D9Dr 2                   ; 21
001D9Dr 2  CA               dex
001D9Er 2  CA               dex
001D9Fr 2  18               clc
001DA0r 2  B5 00            lda $00,x
001DA2r 2  75 02            adc $02,x
001DA4r 2  95 00            sta $00,x
001DA6r 2  B5 01            lda $01,x
001DA8r 2  75 03            adc $03,x
001DAAr 2  95 01            sta $01,x
001DACr 2               
001DACr 2               ; <inline>:0:0 in `main`
001DACr 2               @OPCODE_893:   ; [c64_ir] AltPop
001DACr 2  E8               inx
001DADr 2  E8               inx
001DAEr 2  68               pla
001DAFr 2  95 00            sta $00,x
001DB1r 2  68               pla
001DB2r 2  95 01            sta $01,x
001DB4r 2               
001DB4r 2               ; <inline>:0:0 in `main`
001DB4r 2               @OPCODE_894:   ; [c64_ir] Drop
001DB4r 2  CA               dex
001DB5r 2  CA               dex
001DB6r 2               
001DB6r 2               ; snake.pax:49:34 in `draw-index`
001DB6r 2               @OPCODE_895:   ; [c64_ir] PushLiteral(1024)
001DB6r 2  E8               inx
001DB7r 2  E8               inx
001DB8r 2  A9 00            lda #0
001DBAr 2  95 00            sta $00,x
001DBCr 2  A9 04            lda #4
001DBEr 2  95 01            sta $01,x
001DC0r 2               
001DC0r 2               ; snake.pax:49:43 in `draw-index`
001DC0r 2               @OPCODE_896:   ; [c64_ir] Add
001DC0r 2                   ; 21
001DC0r 2  CA               dex
001DC1r 2  CA               dex
001DC2r 2  18               clc
001DC3r 2  B5 00            lda $00,x
001DC5r 2  75 02            adc $02,x
001DC7r 2  95 00            sta $00,x
001DC9r 2  B5 01            lda $01,x
001DCBr 2  75 03            adc $03,x
001DCDr 2  95 01            sta $01,x
001DCFr 2               
001DCFr 2               ; snake.pax:49:45 in `draw-index`
001DCFr 2               @OPCODE_897:   ; [c64_ir] Store8
001DCFr 2  CA               dex
001DD0r 2  CA               dex
001DD1r 2  CA               dex
001DD2r 2  CA               dex
001DD3r 2  B5 02            lda $02,x
001DD5r 2  81 04            sta ($04,x)
001DD7r 2                   ; TODO high byte
001DD7r 2               
001DD7r 2               ; <inline>:0:0 in `main`
001DD7r 2               @OPCODE_898:   ; [c64_ir] AltPop
001DD7r 2  E8               inx
001DD8r 2  E8               inx
001DD9r 2  68               pla
001DDAr 2  95 00            sta $00,x
001DDCr 2  68               pla
001DDDr 2  95 01            sta $01,x
001DDFr 2               
001DDFr 2               ; <inline>:0:0 in `main`
001DDFr 2               @OPCODE_899:   ; [c64_ir] Drop
001DDFr 2  CA               dex
001DE0r 2  CA               dex
001DE1r 2               
001DE1r 2               ; <inline>:0:0 in `main`
001DE1r 2               @OPCODE_900:   ; [c64_ir] AltPop
001DE1r 2  E8               inx
001DE2r 2  E8               inx
001DE3r 2  68               pla
001DE4r 2  95 00            sta $00,x
001DE6r 2  68               pla
001DE7r 2  95 01            sta $01,x
001DE9r 2               
001DE9r 2               ; <inline>:0:0 in `main`
001DE9r 2               @OPCODE_901:   ; [c64_ir] Drop
001DE9r 2  CA               dex
001DEAr 2  CA               dex
001DEBr 2               
001DEBr 2               ; <inline>:0:0 in `main`
001DEBr 2               @OPCODE_902:   ; [c64_ir] AltPop
001DEBr 2  E8               inx
001DECr 2  E8               inx
001DEDr 2  68               pla
001DEEr 2  95 00            sta $00,x
001DF0r 2  68               pla
001DF1r 2  95 01            sta $01,x
001DF3r 2               
001DF3r 2               ; <inline>:0:0 in `main`
001DF3r 2               @OPCODE_903:   ; [c64_ir] Drop
001DF3r 2  CA               dex
001DF4r 2  CA               dex
001DF5r 2               
001DF5r 2               ; <inline>:0:0 in `main`
001DF5r 2               @OPCODE_904:   ; [c64_ir] PushLiteral(7777)
001DF5r 2  E8               inx
001DF6r 2  E8               inx
001DF7r 2  A9 61            lda #97
001DF9r 2  95 00            sta $00,x
001DFBr 2  A9 1E            lda #30
001DFDr 2  95 01            sta $01,x
001DFFr 2               
001DFFr 2               ; <inline>:0:0 in `main`
001DFFr 2               @OPCODE_905:   ; [c64_ir] AltPush
001DFFr 2  CA               dex
001E00r 2  CA               dex
001E01r 2  B5 03            lda $03,x
001E03r 2  48               pha
001E04r 2  B5 02            lda $02,x
001E06r 2  48               pha
001E07r 2               
001E07r 2               ; snake.pax:201:3 in `draw-apple`
001E07r 2               @OPCODE_906:   ; [c64_ir] PushLiteral(-26664)
001E07r 2  E8               inx
001E08r 2  E8               inx
001E09r 2  A9 D8            lda #216
001E0Br 2  95 00            sta $00,x
001E0Dr 2  A9 97            lda #151
001E0Fr 2  95 01            sta $01,x
001E11r 2               
001E11r 2               ; snake.pax:201:11 in `draw-apple`
001E11r 2               @OPCODE_907:   ; [c64_ir] Load
001E11r 2  A1 00            lda ($00,x)
001E13r 2  95 00            sta $00,x
001E15r 2  A9 00            lda #0
001E17r 2  95 01            sta $01,x
001E19r 2               
001E19r 2               ; snake.pax:201:13 in `draw-apple`
001E19r 2               @OPCODE_908:   ; [c64_ir] PushLiteral(-26662)
001E19r 2  E8               inx
001E1Ar 2  E8               inx
001E1Br 2  A9 DA            lda #218
001E1Dr 2  95 00            sta $00,x
001E1Fr 2  A9 97            lda #151
001E21r 2  95 01            sta $01,x
001E23r 2               
001E23r 2               ; snake.pax:201:21 in `draw-apple`
001E23r 2               @OPCODE_909:   ; [c64_ir] Load
001E23r 2  A1 00            lda ($00,x)
001E25r 2  95 00            sta $00,x
001E27r 2  A9 00            lda #0
001E29r 2  95 01            sta $01,x
001E2Br 2               
001E2Br 2               ; <inline>:0:0 in `main`
001E2Br 2               @OPCODE_910:   ; [c64_ir] PushLiteral(7777)
001E2Br 2  E8               inx
001E2Cr 2  E8               inx
001E2Dr 2  A9 61            lda #97
001E2Fr 2  95 00            sta $00,x
001E31r 2  A9 1E            lda #30
001E33r 2  95 01            sta $01,x
001E35r 2               
001E35r 2               ; <inline>:0:0 in `main`
001E35r 2               @OPCODE_911:   ; [c64_ir] AltPush
001E35r 2  CA               dex
001E36r 2  CA               dex
001E37r 2  B5 03            lda $03,x
001E39r 2  48               pha
001E3Ar 2  B5 02            lda $02,x
001E3Cr 2  48               pha
001E3Dr 2               
001E3Dr 2               ; src/prelude.fth:3:10 in `swap`
001E3Dr 2               @OPCODE_912:   ; [c64_ir] AltPush
001E3Dr 2  CA               dex
001E3Er 2  CA               dex
001E3Fr 2  B5 03            lda $03,x
001E41r 2  48               pha
001E42r 2  B5 02            lda $02,x
001E44r 2  48               pha
001E45r 2               
001E45r 2               ; src/prelude.fth:3:13 in `swap`
001E45r 2               @OPCODE_913:   ; [c64_ir] TempStore
001E45r 2  CA               dex
001E46r 2  CA               dex
001E47r 2  B5 03            lda $03,x
001E49r 2  85 96            sta TEMP_PAX2
001E4Br 2  B5 02            lda $02,x
001E4Dr 2  85 95            sta TEMP_PAX1
001E4Fr 2               
001E4Fr 2               ; src/prelude.fth:3:19 in `swap`
001E4Fr 2               @OPCODE_914:   ; [c64_ir] AltPop
001E4Fr 2  E8               inx
001E50r 2  E8               inx
001E51r 2  68               pla
001E52r 2  95 00            sta $00,x
001E54r 2  68               pla
001E55r 2  95 01            sta $01,x
001E57r 2               
001E57r 2               ; src/prelude.fth:3:22 in `swap`
001E57r 2               @OPCODE_915:   ; [c64_ir] TempLoad
001E57r 2  E8               inx
001E58r 2  E8               inx
001E59r 2  A5 95            lda TEMP_PAX1
001E5Br 2  95 00            sta $00,x
001E5Dr 2  A5 96            lda TEMP_PAX2
001E5Fr 2  95 01            sta $01,x
001E61r 2               
001E61r 2               ; src/prelude.fth:3:13 in `swap`
001E61r 2               @OPCODE_916:   ; [c64_ir] TempStore
001E61r 2  CA               dex
001E62r 2  CA               dex
001E63r 2  B5 03            lda $03,x
001E65r 2  85 96            sta TEMP_PAX2
001E67r 2  B5 02            lda $02,x
001E69r 2  85 95            sta TEMP_PAX1
001E6Br 2               
001E6Br 2               ; src/prelude.fth:3:22 in `swap`
001E6Br 2               @OPCODE_917:   ; [c64_ir] TempLoad
001E6Br 2  E8               inx
001E6Cr 2  E8               inx
001E6Dr 2  A5 95            lda TEMP_PAX1
001E6Fr 2  95 00            sta $00,x
001E71r 2  A5 96            lda TEMP_PAX2
001E73r 2  95 01            sta $01,x
001E75r 2               
001E75r 2               ; src/prelude.fth:5:10 in `rot`
001E75r 2               @OPCODE_918:   ; [c64_ir] AltPush
001E75r 2  CA               dex
001E76r 2  CA               dex
001E77r 2  B5 03            lda $03,x
001E79r 2  48               pha
001E7Ar 2  B5 02            lda $02,x
001E7Cr 2  48               pha
001E7Dr 2               
001E7Dr 2               ; src/prelude.fth:3:13 in `swap`
001E7Dr 2               @OPCODE_919:   ; [c64_ir] TempStore
001E7Dr 2  CA               dex
001E7Er 2  CA               dex
001E7Fr 2  B5 03            lda $03,x
001E81r 2  85 96            sta TEMP_PAX2
001E83r 2  B5 02            lda $02,x
001E85r 2  85 95            sta TEMP_PAX1
001E87r 2               
001E87r 2               ; src/prelude.fth:3:19 in `swap`
001E87r 2               @OPCODE_920:   ; [c64_ir] PushLiteral(233)
001E87r 2  E8               inx
001E88r 2  E8               inx
001E89r 2  A9 E9            lda #233
001E8Br 2  95 00            sta $00,x
001E8Dr 2  A9 00            lda #0
001E8Fr 2  95 01            sta $01,x
001E91r 2               
001E91r 2               ; src/prelude.fth:3:22 in `swap`
001E91r 2               @OPCODE_921:   ; [c64_ir] TempLoad
001E91r 2  E8               inx
001E92r 2  E8               inx
001E93r 2  A5 95            lda TEMP_PAX1
001E95r 2  95 00            sta $00,x
001E97r 2  A5 96            lda TEMP_PAX2
001E99r 2  95 01            sta $01,x
001E9Br 2               
001E9Br 2               ; src/prelude.fth:5:18 in `rot`
001E9Br 2               @OPCODE_922:   ; [c64_ir] AltPop
001E9Br 2  E8               inx
001E9Cr 2  E8               inx
001E9Dr 2  68               pla
001E9Er 2  95 00            sta $00,x
001EA0r 2  68               pla
001EA1r 2  95 01            sta $01,x
001EA3r 2               
001EA3r 2               ; src/prelude.fth:3:10 in `swap`
001EA3r 2               @OPCODE_923:   ; [c64_ir] AltPush
001EA3r 2  CA               dex
001EA4r 2  CA               dex
001EA5r 2  B5 03            lda $03,x
001EA7r 2  48               pha
001EA8r 2  B5 02            lda $02,x
001EAAr 2  48               pha
001EABr 2               
001EABr 2               ; src/prelude.fth:3:13 in `swap`
001EABr 2               @OPCODE_924:   ; [c64_ir] TempStore
001EABr 2  CA               dex
001EACr 2  CA               dex
001EADr 2  B5 03            lda $03,x
001EAFr 2  85 96            sta TEMP_PAX2
001EB1r 2  B5 02            lda $02,x
001EB3r 2  85 95            sta TEMP_PAX1
001EB5r 2               
001EB5r 2               ; src/prelude.fth:3:19 in `swap`
001EB5r 2               @OPCODE_925:   ; [c64_ir] AltPop
001EB5r 2  E8               inx
001EB6r 2  E8               inx
001EB7r 2  68               pla
001EB8r 2  95 00            sta $00,x
001EBAr 2  68               pla
001EBBr 2  95 01            sta $01,x
001EBDr 2               
001EBDr 2               ; src/prelude.fth:3:22 in `swap`
001EBDr 2               @OPCODE_926:   ; [c64_ir] TempLoad
001EBDr 2  E8               inx
001EBEr 2  E8               inx
001EBFr 2  A5 95            lda TEMP_PAX1
001EC1r 2  95 00            sta $00,x
001EC3r 2  A5 96            lda TEMP_PAX2
001EC5r 2  95 01            sta $01,x
001EC7r 2               
001EC7r 2               ; <inline>:0:0 in `main`
001EC7r 2               @OPCODE_927:   ; [c64_ir] PushLiteral(7777)
001EC7r 2  E8               inx
001EC8r 2  E8               inx
001EC9r 2  A9 61            lda #97
001ECBr 2  95 00            sta $00,x
001ECDr 2  A9 1E            lda #30
001ECFr 2  95 01            sta $01,x
001ED1r 2               
001ED1r 2               ; <inline>:0:0 in `main`
001ED1r 2               @OPCODE_928:   ; [c64_ir] AltPush
001ED1r 2  CA               dex
001ED2r 2  CA               dex
001ED3r 2  B5 03            lda $03,x
001ED5r 2  48               pha
001ED6r 2  B5 02            lda $02,x
001ED8r 2  48               pha
001ED9r 2               
001ED9r 2               ; <inline>:0:0 in `main`
001ED9r 2               @OPCODE_929:   ; [c64_ir] PushLiteral(7777)
001ED9r 2  E8               inx
001EDAr 2  E8               inx
001EDBr 2  A9 61            lda #97
001EDDr 2  95 00            sta $00,x
001EDFr 2  A9 1E            lda #30
001EE1r 2  95 01            sta $01,x
001EE3r 2               
001EE3r 2               ; <inline>:0:0 in `main`
001EE3r 2               @OPCODE_930:   ; [c64_ir] AltPush
001EE3r 2  CA               dex
001EE4r 2  CA               dex
001EE5r 2  B5 03            lda $03,x
001EE7r 2  48               pha
001EE8r 2  B5 02            lda $02,x
001EEAr 2  48               pha
001EEBr 2               
001EEBr 2               ; <inline>:0:0 in `main`
001EEBr 2               @OPCODE_931:   ; [c64_ir] PushLiteral(7777)
001EEBr 2  E8               inx
001EECr 2  E8               inx
001EEDr 2  A9 61            lda #97
001EEFr 2  95 00            sta $00,x
001EF1r 2  A9 1E            lda #30
001EF3r 2  95 01            sta $01,x
001EF5r 2               
001EF5r 2               ; <inline>:0:0 in `main`
001EF5r 2               @OPCODE_932:   ; [c64_ir] AltPush
001EF5r 2  CA               dex
001EF6r 2  CA               dex
001EF7r 2  B5 03            lda $03,x
001EF9r 2  48               pha
001EFAr 2  B5 02            lda $02,x
001EFCr 2  48               pha
001EFDr 2               
001EFDr 2               ; src/prelude.fth:44:8 in `*`
001EFDr 2               @OPCODE_933:   ; [c64_ir] PushLiteral(0)
001EFDr 2  E8               inx
001EFEr 2  E8               inx
001EFFr 2  A9 00            lda #0
001F01r 2  95 00            sta $00,x
001F03r 2  A9 00            lda #0
001F05r 2  95 01            sta $01,x
001F07r 2               
001F07r 2               ; src/prelude.fth:44:10 in `*`
001F07r 2               @OPCODE_934:   ; [c64_ir] PushLiteral(40)
001F07r 2  E8               inx
001F08r 2  E8               inx
001F09r 2  A9 28            lda #40
001F0Br 2  95 00            sta $00,x
001F0Dr 2  A9 00            lda #0
001F0Fr 2  95 01            sta $01,x
001F11r 2               
001F11r 2               ; src/prelude.fth:44:13 in `*`
001F11r 2               @OPCODE_935:   ; [c64_ir] PushLiteral(0)
001F11r 2  E8               inx
001F12r 2  E8               inx
001F13r 2  A9 00            lda #0
001F15r 2  95 00            sta $00,x
001F17r 2  A9 00            lda #0
001F19r 2  95 01            sta $01,x
001F1Br 2               
001F1Br 2               ; src/prelude.fth:44:15 in `*`
001F1Br 2               @OPCODE_936:   ; [c64_ir] AltPush
001F1Br 2  CA               dex
001F1Cr 2  CA               dex
001F1Dr 2  B5 03            lda $03,x
001F1Fr 2  48               pha
001F20r 2  B5 02            lda $02,x
001F22r 2  48               pha
001F23r 2               
001F23r 2               ; src/prelude.fth:44:15 in `*`
001F23r 2               @OPCODE_937:   ; [c64_ir] AltPush
001F23r 2  CA               dex
001F24r 2  CA               dex
001F25r 2  B5 03            lda $03,x
001F27r 2  48               pha
001F28r 2  B5 02            lda $02,x
001F2Ar 2  48               pha
001F2Br 2               
001F2Br 2               ; src/prelude.fth:44:15 in `*`
001F2Br 2               @OPCODE_938:   ; [c64_ir] LoopTarget(65)
001F2Br 2               
001F2Br 2               @target_66:
001F2Br 2               
001F2Br 2               ; src/prelude.fth:4:10 in `over`
001F2Br 2               @OPCODE_940:   ; [c64_ir] AltPush
001F2Br 2  CA               dex
001F2Cr 2  CA               dex
001F2Dr 2  B5 03            lda $03,x
001F2Fr 2  48               pha
001F30r 2  B5 02            lda $02,x
001F32r 2  48               pha
001F33r 2               
001F33r 2               ; src/prelude.fth:4:13 in `over`
001F33r 2               @OPCODE_941:   ; [c64_ir] TempStore
001F33r 2  CA               dex
001F34r 2  CA               dex
001F35r 2  B5 03            lda $03,x
001F37r 2  85 96            sta TEMP_PAX2
001F39r 2  B5 02            lda $02,x
001F3Br 2  85 95            sta TEMP_PAX1
001F3Dr 2               
001F3Dr 2               ; src/prelude.fth:4:19 in `over`
001F3Dr 2               @OPCODE_942:   ; [c64_ir] TempLoad
001F3Dr 2  E8               inx
001F3Er 2  E8               inx
001F3Fr 2  A5 95            lda TEMP_PAX1
001F41r 2  95 00            sta $00,x
001F43r 2  A5 96            lda TEMP_PAX2
001F45r 2  95 01            sta $01,x
001F47r 2               
001F47r 2               ; src/prelude.fth:4:25 in `over`
001F47r 2               @OPCODE_943:   ; [c64_ir] AltPop
001F47r 2  E8               inx
001F48r 2  E8               inx
001F49r 2  68               pla
001F4Ar 2  95 00            sta $00,x
001F4Cr 2  68               pla
001F4Dr 2  95 01            sta $01,x
001F4Fr 2               
001F4Fr 2               ; src/prelude.fth:4:28 in `over`
001F4Fr 2               @OPCODE_944:   ; [c64_ir] TempLoad
001F4Fr 2  E8               inx
001F50r 2  E8               inx
001F51r 2  A5 95            lda TEMP_PAX1
001F53r 2  95 00            sta $00,x
001F55r 2  A5 96            lda TEMP_PAX2
001F57r 2  95 01            sta $01,x
001F59r 2               
001F59r 2               ; src/prelude.fth:44:23 in `*`
001F59r 2               @OPCODE_945:   ; [c64_ir] Add
001F59r 2                   ; 21
001F59r 2  CA               dex
001F5Ar 2  CA               dex
001F5Br 2  18               clc
001F5Cr 2  B5 00            lda $00,x
001F5Er 2  75 02            adc $02,x
001F60r 2  95 00            sta $00,x
001F62r 2  B5 01            lda $01,x
001F64r 2  75 03            adc $03,x
001F66r 2  95 01            sta $01,x
001F68r 2               
001F68r 2               ; src/prelude.fth:33:15 in `loopimpl`
001F68r 2               @OPCODE_946:   ; [c64_ir] AltPop
001F68r 2  E8               inx
001F69r 2  E8               inx
001F6Ar 2  68               pla
001F6Br 2  95 00            sta $00,x
001F6Dr 2  68               pla
001F6Er 2  95 01            sta $01,x
001F70r 2               
001F70r 2               ; src/prelude.fth:33:18 in `loopimpl`
001F70r 2               @OPCODE_947:   ; [c64_ir] AltPop
001F70r 2  E8               inx
001F71r 2  E8               inx
001F72r 2  68               pla
001F73r 2  95 00            sta $00,x
001F75r 2  68               pla
001F76r 2  95 01            sta $01,x
001F78r 2               
001F78r 2               ; src/prelude.fth:18:8 in `1+`
001F78r 2               @OPCODE_948:   ; [c64_ir] PushLiteral(1)
001F78r 2  E8               inx
001F79r 2  E8               inx
001F7Ar 2  A9 01            lda #1
001F7Cr 2  95 00            sta $00,x
001F7Er 2  A9 00            lda #0
001F80r 2  95 01            sta $01,x
001F82r 2               
001F82r 2               ; src/prelude.fth:18:10 in `1+`
001F82r 2               @OPCODE_949:   ; [c64_ir] Add
001F82r 2                   ; 21
001F82r 2  CA               dex
001F83r 2  CA               dex
001F84r 2  18               clc
001F85r 2  B5 00            lda $00,x
001F87r 2  75 02            adc $02,x
001F89r 2  95 00            sta $00,x
001F8Br 2  B5 01            lda $01,x
001F8Dr 2  75 03            adc $03,x
001F8Fr 2  95 01            sta $01,x
001F91r 2               
001F91r 2               ; src/prelude.fth:4:10 in `over`
001F91r 2               @OPCODE_950:   ; [c64_ir] AltPush
001F91r 2  CA               dex
001F92r 2  CA               dex
001F93r 2  B5 03            lda $03,x
001F95r 2  48               pha
001F96r 2  B5 02            lda $02,x
001F98r 2  48               pha
001F99r 2               
001F99r 2               ; src/prelude.fth:4:13 in `over`
001F99r 2               @OPCODE_951:   ; [c64_ir] TempStore
001F99r 2  CA               dex
001F9Ar 2  CA               dex
001F9Br 2  B5 03            lda $03,x
001F9Dr 2  85 96            sta TEMP_PAX2
001F9Fr 2  B5 02            lda $02,x
001FA1r 2  85 95            sta TEMP_PAX1
001FA3r 2               
001FA3r 2               ; src/prelude.fth:4:19 in `over`
001FA3r 2               @OPCODE_952:   ; [c64_ir] TempLoad
001FA3r 2  E8               inx
001FA4r 2  E8               inx
001FA5r 2  A5 95            lda TEMP_PAX1
001FA7r 2  95 00            sta $00,x
001FA9r 2  A5 96            lda TEMP_PAX2
001FABr 2  95 01            sta $01,x
001FADr 2               
001FADr 2               ; src/prelude.fth:4:25 in `over`
001FADr 2               @OPCODE_953:   ; [c64_ir] AltPop
001FADr 2  E8               inx
001FAEr 2  E8               inx
001FAFr 2  68               pla
001FB0r 2  95 00            sta $00,x
001FB2r 2  68               pla
001FB3r 2  95 01            sta $01,x
001FB5r 2               
001FB5r 2               ; src/prelude.fth:4:28 in `over`
001FB5r 2               @OPCODE_954:   ; [c64_ir] TempLoad
001FB5r 2  E8               inx
001FB6r 2  E8               inx
001FB7r 2  A5 95            lda TEMP_PAX1
001FB9r 2  95 00            sta $00,x
001FBBr 2  A5 96            lda TEMP_PAX2
001FBDr 2  95 01            sta $01,x
001FBFr 2               
001FBFr 2               ; src/prelude.fth:4:10 in `over`
001FBFr 2               @OPCODE_955:   ; [c64_ir] AltPush
001FBFr 2  CA               dex
001FC0r 2  CA               dex
001FC1r 2  B5 03            lda $03,x
001FC3r 2  48               pha
001FC4r 2  B5 02            lda $02,x
001FC6r 2  48               pha
001FC7r 2               
001FC7r 2               ; src/prelude.fth:4:13 in `over`
001FC7r 2               @OPCODE_956:   ; [c64_ir] TempStore
001FC7r 2  CA               dex
001FC8r 2  CA               dex
001FC9r 2  B5 03            lda $03,x
001FCBr 2  85 96            sta TEMP_PAX2
001FCDr 2  B5 02            lda $02,x
001FCFr 2  85 95            sta TEMP_PAX1
001FD1r 2               
001FD1r 2               ; src/prelude.fth:4:19 in `over`
001FD1r 2               @OPCODE_957:   ; [c64_ir] TempLoad
001FD1r 2  E8               inx
001FD2r 2  E8               inx
001FD3r 2  A5 95            lda TEMP_PAX1
001FD5r 2  95 00            sta $00,x
001FD7r 2  A5 96            lda TEMP_PAX2
001FD9r 2  95 01            sta $01,x
001FDBr 2               
001FDBr 2               ; src/prelude.fth:4:25 in `over`
001FDBr 2               @OPCODE_958:   ; [c64_ir] AltPop
001FDBr 2  E8               inx
001FDCr 2  E8               inx
001FDDr 2  68               pla
001FDEr 2  95 00            sta $00,x
001FE0r 2  68               pla
001FE1r 2  95 01            sta $01,x
001FE3r 2               
001FE3r 2               ; src/prelude.fth:4:28 in `over`
001FE3r 2               @OPCODE_959:   ; [c64_ir] TempLoad
001FE3r 2  E8               inx
001FE4r 2  E8               inx
001FE5r 2  A5 95            lda TEMP_PAX1
001FE7r 2  95 00            sta $00,x
001FE9r 2  A5 96            lda TEMP_PAX2
001FEBr 2  95 01            sta $01,x
001FEDr 2               
001FEDr 2               ; src/prelude.fth:33:29 in `loopimpl`
001FEDr 2               @OPCODE_960:   ; [c64_ir] AltPush
001FEDr 2  CA               dex
001FEEr 2  CA               dex
001FEFr 2  B5 03            lda $03,x
001FF1r 2  48               pha
001FF2r 2  B5 02            lda $02,x
001FF4r 2  48               pha
001FF5r 2               
001FF5r 2               ; src/prelude.fth:33:32 in `loopimpl`
001FF5r 2               @OPCODE_961:   ; [c64_ir] AltPush
001FF5r 2  CA               dex
001FF6r 2  CA               dex
001FF7r 2  B5 03            lda $03,x
001FF9r 2  48               pha
001FFAr 2  B5 02            lda $02,x
001FFCr 2  48               pha
001FFDr 2               
001FFDr 2               ; src/prelude.fth:14:12 in `invert`
001FFDr 2               @OPCODE_962:   ; [c64_ir] PushLiteral(-1)
001FFDr 2  E8               inx
001FFEr 2  E8               inx
001FFFr 2  A9 FF            lda #255
002001r 2  95 00            sta $00,x
002003r 2  A9 FF            lda #255
002005r 2  95 01            sta $01,x
002007r 2               
002007r 2               ; src/prelude.fth:14:15 in `invert`
002007r 2               @OPCODE_963:   ; [c64_ir] Nand
002007r 2                   ; 26
002007r 2  CA               dex
002008r 2  CA               dex
002009r 2  B5 00            lda $00,x
00200Br 2  35 02            and $02,x
00200Dr 2  49 FF            eor #$ff
00200Fr 2  95 00            sta $00,x
002011r 2  B5 01            lda $01,x
002013r 2  35 03            and $03,x
002015r 2  49 FF            eor #$ff
002017r 2  95 01            sta $01,x
002019r 2               
002019r 2               ; src/prelude.fth:15:19 in `negate`
002019r 2               @OPCODE_964:   ; [c64_ir] PushLiteral(1)
002019r 2  E8               inx
00201Ar 2  E8               inx
00201Br 2  A9 01            lda #1
00201Dr 2  95 00            sta $00,x
00201Fr 2  A9 00            lda #0
002021r 2  95 01            sta $01,x
002023r 2               
002023r 2               ; src/prelude.fth:15:21 in `negate`
002023r 2               @OPCODE_965:   ; [c64_ir] Add
002023r 2                   ; 21
002023r 2  CA               dex
002024r 2  CA               dex
002025r 2  18               clc
002026r 2  B5 00            lda $00,x
002028r 2  75 02            adc $02,x
00202Ar 2  95 00            sta $00,x
00202Cr 2  B5 01            lda $01,x
00202Er 2  75 03            adc $03,x
002030r 2  95 01            sta $01,x
002032r 2               
002032r 2               ; src/prelude.fth:16:19 in `-`
002032r 2               @OPCODE_966:   ; [c64_ir] Add
002032r 2                   ; 21
002032r 2  CA               dex
002033r 2  CA               dex
002034r 2  18               clc
002035r 2  B5 00            lda $00,x
002037r 2  75 02            adc $02,x
002039r 2  95 00            sta $00,x
00203Br 2  B5 01            lda $01,x
00203Dr 2  75 03            adc $03,x
00203Fr 2  95 01            sta $01,x
002041r 2               
002041r 2               ; src/prelude.fth:21:8 in `0=`
002041r 2               @OPCODE_967:   ; [c64_ir] JumpIf0(68)
002041r 2  CA               dex
002042r 2  CA               dex
002043r 2  B5 02            lda $02,x
002045r 2  15 03            ora $03,x
002047r 2  D0 03            bne *+5
002049r 2  4C rr rr         jmp @target_68
00204Cr 2               
00204Cr 2               @target_67:
00204Cr 2               
00204Cr 2               ; src/prelude.fth:21:11 in `0=`
00204Cr 2               @OPCODE_969:   ; [c64_ir] PushLiteral(0)
00204Cr 2  E8               inx
00204Dr 2  E8               inx
00204Er 2  A9 00            lda #0
002050r 2  95 00            sta $00,x
002052r 2  A9 00            lda #0
002054r 2  95 01            sta $01,x
002056r 2               
002056r 2               ; src/prelude.fth:21:13 in `0=`
002056r 2               @OPCODE_970:   ; [c64_ir] JumpElse(69)
002056r 2  4C rr rr         jmp @target_69
002059r 2               
002059r 2               @target_68:
002059r 2               
002059r 2               ; src/prelude.fth:21:18 in `0=`
002059r 2               @OPCODE_972:   ; [c64_ir] PushLiteral(-1)
002059r 2  E8               inx
00205Ar 2  E8               inx
00205Br 2  A9 FF            lda #255
00205Dr 2  95 00            sta $00,x
00205Fr 2  A9 FF            lda #255
002061r 2  95 01            sta $01,x
002063r 2               
002063r 2               ; src/prelude.fth:21:21 in `0=`
002063r 2               @OPCODE_973:   ; [c64_ir] JumpTarget(68)
002063r 2               
002063r 2               @target_69:
002063r 2               
002063r 2               ; src/prelude.fth:3:10 in `swap`
002063r 2               @OPCODE_975:   ; [c64_ir] AltPush
002063r 2  CA               dex
002064r 2  CA               dex
002065r 2  B5 03            lda $03,x
002067r 2  48               pha
002068r 2  B5 02            lda $02,x
00206Ar 2  48               pha
00206Br 2               
00206Br 2               ; src/prelude.fth:3:19 in `swap`
00206Br 2               @OPCODE_976:   ; [c64_ir] AltPop
00206Br 2  E8               inx
00206Cr 2  E8               inx
00206Dr 2  68               pla
00206Er 2  95 00            sta $00,x
002070r 2  68               pla
002071r 2  95 01            sta $01,x
002073r 2               
002073r 2               ; src/prelude.fth:44:25 in `*`
002073r 2               @OPCODE_977:   ; [c64_ir] LoopIf0(66)
002073r 2  CA               dex
002074r 2  CA               dex
002075r 2  B5 02            lda $02,x
002077r 2  15 03            ora $03,x
002079r 2  D0 03            bne *+5
00207Br 2  4C rr rr         jmp @target_66
00207Er 2               
00207Er 2               @target_70:
00207Er 2               
00207Er 2               ; src/prelude.fth:44:25 in `*`
00207Er 2               @OPCODE_979:   ; [c64_ir] AltPop
00207Er 2  E8               inx
00207Fr 2  E8               inx
002080r 2  68               pla
002081r 2  95 00            sta $00,x
002083r 2  68               pla
002084r 2  95 01            sta $01,x
002086r 2               
002086r 2               ; src/prelude.fth:44:25 in `*`
002086r 2               @OPCODE_980:   ; [c64_ir] Drop
002086r 2  CA               dex
002087r 2  CA               dex
002088r 2               
002088r 2               ; src/prelude.fth:44:25 in `*`
002088r 2               @OPCODE_981:   ; [c64_ir] AltPop
002088r 2  E8               inx
002089r 2  E8               inx
00208Ar 2  68               pla
00208Br 2  95 00            sta $00,x
00208Dr 2  68               pla
00208Er 2  95 01            sta $01,x
002090r 2               
002090r 2               ; src/prelude.fth:44:25 in `*`
002090r 2               @OPCODE_982:   ; [c64_ir] Drop
002090r 2  CA               dex
002091r 2  CA               dex
002092r 2               
002092r 2               ; src/prelude.fth:3:10 in `swap`
002092r 2               @OPCODE_983:   ; [c64_ir] AltPush
002092r 2  CA               dex
002093r 2  CA               dex
002094r 2  B5 03            lda $03,x
002096r 2  48               pha
002097r 2  B5 02            lda $02,x
002099r 2  48               pha
00209Ar 2               
00209Ar 2               ; src/prelude.fth:3:13 in `swap`
00209Ar 2               @OPCODE_984:   ; [c64_ir] TempStore
00209Ar 2  CA               dex
00209Br 2  CA               dex
00209Cr 2  B5 03            lda $03,x
00209Er 2  85 96            sta TEMP_PAX2
0020A0r 2  B5 02            lda $02,x
0020A2r 2  85 95            sta TEMP_PAX1
0020A4r 2               
0020A4r 2               ; src/prelude.fth:3:19 in `swap`
0020A4r 2               @OPCODE_985:   ; [c64_ir] AltPop
0020A4r 2  E8               inx
0020A5r 2  E8               inx
0020A6r 2  68               pla
0020A7r 2  95 00            sta $00,x
0020A9r 2  68               pla
0020AAr 2  95 01            sta $01,x
0020ACr 2               
0020ACr 2               ; <inline>:0:0 in `main`
0020ACr 2               @OPCODE_986:   ; [c64_ir] AltPop
0020ACr 2  E8               inx
0020ADr 2  E8               inx
0020AEr 2  68               pla
0020AFr 2  95 00            sta $00,x
0020B1r 2  68               pla
0020B2r 2  95 01            sta $01,x
0020B4r 2               
0020B4r 2               ; <inline>:0:0 in `main`
0020B4r 2               @OPCODE_987:   ; [c64_ir] Drop
0020B4r 2  CA               dex
0020B5r 2  CA               dex
0020B6r 2               
0020B6r 2               ; snake.pax:48:39 in `convert-x-y`
0020B6r 2               @OPCODE_988:   ; [c64_ir] Add
0020B6r 2                   ; 21
0020B6r 2  CA               dex
0020B7r 2  CA               dex
0020B8r 2  18               clc
0020B9r 2  B5 00            lda $00,x
0020BBr 2  75 02            adc $02,x
0020BDr 2  95 00            sta $00,x
0020BFr 2  B5 01            lda $01,x
0020C1r 2  75 03            adc $03,x
0020C3r 2  95 01            sta $01,x
0020C5r 2               
0020C5r 2               ; <inline>:0:0 in `main`
0020C5r 2               @OPCODE_989:   ; [c64_ir] AltPop
0020C5r 2  E8               inx
0020C6r 2  E8               inx
0020C7r 2  68               pla
0020C8r 2  95 00            sta $00,x
0020CAr 2  68               pla
0020CBr 2  95 01            sta $01,x
0020CDr 2               
0020CDr 2               ; <inline>:0:0 in `main`
0020CDr 2               @OPCODE_990:   ; [c64_ir] Drop
0020CDr 2  CA               dex
0020CEr 2  CA               dex
0020CFr 2               
0020CFr 2               ; snake.pax:49:34 in `draw-index`
0020CFr 2               @OPCODE_991:   ; [c64_ir] PushLiteral(1024)
0020CFr 2  E8               inx
0020D0r 2  E8               inx
0020D1r 2  A9 00            lda #0
0020D3r 2  95 00            sta $00,x
0020D5r 2  A9 04            lda #4
0020D7r 2  95 01            sta $01,x
0020D9r 2               
0020D9r 2               ; snake.pax:49:43 in `draw-index`
0020D9r 2               @OPCODE_992:   ; [c64_ir] Add
0020D9r 2                   ; 21
0020D9r 2  CA               dex
0020DAr 2  CA               dex
0020DBr 2  18               clc
0020DCr 2  B5 00            lda $00,x
0020DEr 2  75 02            adc $02,x
0020E0r 2  95 00            sta $00,x
0020E2r 2  B5 01            lda $01,x
0020E4r 2  75 03            adc $03,x
0020E6r 2  95 01            sta $01,x
0020E8r 2               
0020E8r 2               ; snake.pax:49:45 in `draw-index`
0020E8r 2               @OPCODE_993:   ; [c64_ir] Store8
0020E8r 2  CA               dex
0020E9r 2  CA               dex
0020EAr 2  CA               dex
0020EBr 2  CA               dex
0020ECr 2  B5 02            lda $02,x
0020EEr 2  81 04            sta ($04,x)
0020F0r 2                   ; TODO high byte
0020F0r 2               
0020F0r 2               ; <inline>:0:0 in `main`
0020F0r 2               @OPCODE_994:   ; [c64_ir] AltPop
0020F0r 2  E8               inx
0020F1r 2  E8               inx
0020F2r 2  68               pla
0020F3r 2  95 00            sta $00,x
0020F5r 2  68               pla
0020F6r 2  95 01            sta $01,x
0020F8r 2               
0020F8r 2               ; <inline>:0:0 in `main`
0020F8r 2               @OPCODE_995:   ; [c64_ir] Drop
0020F8r 2  CA               dex
0020F9r 2  CA               dex
0020FAr 2               
0020FAr 2               ; <inline>:0:0 in `main`
0020FAr 2               @OPCODE_996:   ; [c64_ir] AltPop
0020FAr 2  E8               inx
0020FBr 2  E8               inx
0020FCr 2  68               pla
0020FDr 2  95 00            sta $00,x
0020FFr 2  68               pla
002100r 2  95 01            sta $01,x
002102r 2               
002102r 2               ; <inline>:0:0 in `main`
002102r 2               @OPCODE_997:   ; [c64_ir] Drop
002102r 2  CA               dex
002103r 2  CA               dex
002104r 2               
002104r 2               ; <inline>:0:0 in `main`
002104r 2               @OPCODE_998:   ; [c64_ir] AltPop
002104r 2  E8               inx
002105r 2  E8               inx
002106r 2  68               pla
002107r 2  95 00            sta $00,x
002109r 2  68               pla
00210Ar 2  95 01            sta $01,x
00210Cr 2               
00210Cr 2               ; <inline>:0:0 in `main`
00210Cr 2               @OPCODE_999:   ; [c64_ir] Drop
00210Cr 2  CA               dex
00210Dr 2  CA               dex
00210Er 2               
00210Er 2               ; <inline>:0:0 in `main`
00210Er 2               @OPCODE_1000:   ; [c64_ir] PushLiteral(7777)
00210Er 2  E8               inx
00210Fr 2  E8               inx
002110r 2  A9 61            lda #97
002112r 2  95 00            sta $00,x
002114r 2  A9 1E            lda #30
002116r 2  95 01            sta $01,x
002118r 2               
002118r 2               ; <inline>:0:0 in `main`
002118r 2               @OPCODE_1001:   ; [c64_ir] AltPush
002118r 2  CA               dex
002119r 2  CA               dex
00211Ar 2  B5 03            lda $03,x
00211Cr 2  48               pha
00211Dr 2  B5 02            lda $02,x
00211Fr 2  48               pha
002120r 2               
002120r 2               ; snake.pax:160:3 in `check-input`
002120r 2               @OPCODE_1002:   ; [c64_ir] PushLiteral(126)
002120r 2  E8               inx
002121r 2  E8               inx
002122r 2  A9 7E            lda #126
002124r 2  95 00            sta $00,x
002126r 2  A9 00            lda #0
002128r 2  95 01            sta $01,x
00212Ar 2               
00212Ar 2               ; snake.pax:160:12 in `check-input`
00212Ar 2               @OPCODE_1003:   ; [c64_ir] Load
00212Ar 2  A1 00            lda ($00,x)
00212Cr 2  95 00            sta $00,x
00212Er 2  A9 00            lda #0
002130r 2  95 01            sta $01,x
002132r 2               
002132r 2               ; <inline>:0:0 in `main`
002132r 2               @OPCODE_1004:   ; [c64_ir] PushLiteral(7777)
002132r 2  E8               inx
002133r 2  E8               inx
002134r 2  A9 61            lda #97
002136r 2  95 00            sta $00,x
002138r 2  A9 1E            lda #30
00213Ar 2  95 01            sta $01,x
00213Cr 2               
00213Cr 2               ; <inline>:0:0 in `main`
00213Cr 2               @OPCODE_1005:   ; [c64_ir] AltPush
00213Cr 2  CA               dex
00213Dr 2  CA               dex
00213Er 2  B5 03            lda $03,x
002140r 2  48               pha
002141r 2  B5 02            lda $02,x
002143r 2  48               pha
002144r 2               
002144r 2               ; src/prelude.fth:4:13 in `over`
002144r 2               @OPCODE_1006:   ; [c64_ir] TempStore
002144r 2  CA               dex
002145r 2  CA               dex
002146r 2  B5 03            lda $03,x
002148r 2  85 96            sta TEMP_PAX2
00214Ar 2  B5 02            lda $02,x
00214Cr 2  85 95            sta TEMP_PAX1
00214Er 2               
00214Er 2               ; src/prelude.fth:4:19 in `over`
00214Er 2               @OPCODE_1007:   ; [c64_ir] TempLoad
00214Er 2  E8               inx
00214Fr 2  E8               inx
002150r 2  A5 95            lda TEMP_PAX1
002152r 2  95 00            sta $00,x
002154r 2  A5 96            lda TEMP_PAX2
002156r 2  95 01            sta $01,x
002158r 2               
002158r 2               ; src/prelude.fth:4:25 in `over`
002158r 2               @OPCODE_1008:   ; [c64_ir] PushLiteral(37)
002158r 2  E8               inx
002159r 2  E8               inx
00215Ar 2  A9 25            lda #37
00215Cr 2  95 00            sta $00,x
00215Er 2  A9 00            lda #0
002160r 2  95 01            sta $01,x
002162r 2               
002162r 2               ; src/prelude.fth:4:28 in `over`
002162r 2               @OPCODE_1009:   ; [c64_ir] TempLoad
002162r 2  E8               inx
002163r 2  E8               inx
002164r 2  A5 95            lda TEMP_PAX1
002166r 2  95 00            sta $00,x
002168r 2  A5 96            lda TEMP_PAX2
00216Ar 2  95 01            sta $01,x
00216Cr 2               
00216Cr 2               ; src/prelude.fth:14:12 in `invert`
00216Cr 2               @OPCODE_1010:   ; [c64_ir] PushLiteral(-1)
00216Cr 2  E8               inx
00216Dr 2  E8               inx
00216Er 2  A9 FF            lda #255
002170r 2  95 00            sta $00,x
002172r 2  A9 FF            lda #255
002174r 2  95 01            sta $01,x
002176r 2               
002176r 2               ; src/prelude.fth:14:15 in `invert`
002176r 2               @OPCODE_1011:   ; [c64_ir] Nand
002176r 2                   ; 26
002176r 2  CA               dex
002177r 2  CA               dex
002178r 2  B5 00            lda $00,x
00217Ar 2  35 02            and $02,x
00217Cr 2  49 FF            eor #$ff
00217Er 2  95 00            sta $00,x
002180r 2  B5 01            lda $01,x
002182r 2  35 03            and $03,x
002184r 2  49 FF            eor #$ff
002186r 2  95 01            sta $01,x
002188r 2               
002188r 2               ; src/prelude.fth:15:19 in `negate`
002188r 2               @OPCODE_1012:   ; [c64_ir] PushLiteral(1)
002188r 2  E8               inx
002189r 2  E8               inx
00218Ar 2  A9 01            lda #1
00218Cr 2  95 00            sta $00,x
00218Er 2  A9 00            lda #0
002190r 2  95 01            sta $01,x
002192r 2               
002192r 2               ; src/prelude.fth:15:21 in `negate`
002192r 2               @OPCODE_1013:   ; [c64_ir] Add
002192r 2                   ; 21
002192r 2  CA               dex
002193r 2  CA               dex
002194r 2  18               clc
002195r 2  B5 00            lda $00,x
002197r 2  75 02            adc $02,x
002199r 2  95 00            sta $00,x
00219Br 2  B5 01            lda $01,x
00219Dr 2  75 03            adc $03,x
00219Fr 2  95 01            sta $01,x
0021A1r 2               
0021A1r 2               ; src/prelude.fth:16:19 in `-`
0021A1r 2               @OPCODE_1014:   ; [c64_ir] Add
0021A1r 2                   ; 21
0021A1r 2  CA               dex
0021A2r 2  CA               dex
0021A3r 2  18               clc
0021A4r 2  B5 00            lda $00,x
0021A6r 2  75 02            adc $02,x
0021A8r 2  95 00            sta $00,x
0021AAr 2  B5 01            lda $01,x
0021ACr 2  75 03            adc $03,x
0021AEr 2  95 01            sta $01,x
0021B0r 2               
0021B0r 2               ; src/prelude.fth:21:8 in `0=`
0021B0r 2               @OPCODE_1015:   ; [c64_ir] JumpIf0(72)
0021B0r 2  CA               dex
0021B1r 2  CA               dex
0021B2r 2  B5 02            lda $02,x
0021B4r 2  15 03            ora $03,x
0021B6r 2  D0 03            bne *+5
0021B8r 2  4C rr rr         jmp @target_72
0021BBr 2               
0021BBr 2               @target_71:
0021BBr 2               
0021BBr 2               ; src/prelude.fth:21:11 in `0=`
0021BBr 2               @OPCODE_1017:   ; [c64_ir] PushLiteral(0)
0021BBr 2  E8               inx
0021BCr 2  E8               inx
0021BDr 2  A9 00            lda #0
0021BFr 2  95 00            sta $00,x
0021C1r 2  A9 00            lda #0
0021C3r 2  95 01            sta $01,x
0021C5r 2               
0021C5r 2               ; src/prelude.fth:21:13 in `0=`
0021C5r 2               @OPCODE_1018:   ; [c64_ir] JumpElse(73)
0021C5r 2  4C rr rr         jmp @target_73
0021C8r 2               
0021C8r 2               @target_72:
0021C8r 2               
0021C8r 2               ; src/prelude.fth:21:18 in `0=`
0021C8r 2               @OPCODE_1020:   ; [c64_ir] PushLiteral(-1)
0021C8r 2  E8               inx
0021C9r 2  E8               inx
0021CAr 2  A9 FF            lda #255
0021CCr 2  95 00            sta $00,x
0021CEr 2  A9 FF            lda #255
0021D0r 2  95 01            sta $01,x
0021D2r 2               
0021D2r 2               ; src/prelude.fth:21:21 in `0=`
0021D2r 2               @OPCODE_1021:   ; [c64_ir] JumpTarget(72)
0021D2r 2               
0021D2r 2               @target_73:
0021D2r 2               
0021D2r 2               ; snake.pax:153:15 in `change-direction`
0021D2r 2               @OPCODE_1023:   ; [c64_ir] JumpIf0(83)
0021D2r 2  CA               dex
0021D3r 2  CA               dex
0021D4r 2  B5 02            lda $02,x
0021D6r 2  15 03            ora $03,x
0021D8r 2  D0 03            bne *+5
0021DAr 2  4C rr rr         jmp @target_83
0021DDr 2               
0021DDr 2               @target_74:
0021DDr 2               
0021DDr 2               ; <inline>:0:0 in `main`
0021DDr 2               @OPCODE_1025:   ; [c64_ir] PushLiteral(7777)
0021DDr 2  E8               inx
0021DEr 2  E8               inx
0021DFr 2  A9 61            lda #97
0021E1r 2  95 00            sta $00,x
0021E3r 2  A9 1E            lda #30
0021E5r 2  95 01            sta $01,x
0021E7r 2               
0021E7r 2               ; <inline>:0:0 in `main`
0021E7r 2               @OPCODE_1026:   ; [c64_ir] AltPush
0021E7r 2  CA               dex
0021E8r 2  CA               dex
0021E9r 2  B5 03            lda $03,x
0021EBr 2  48               pha
0021ECr 2  B5 02            lda $02,x
0021EEr 2  48               pha
0021EFr 2               
0021EFr 2               ; <inline>:0:0 in `main`
0021EFr 2               @OPCODE_1027:   ; [c64_ir] PushLiteral(7777)
0021EFr 2  E8               inx
0021F0r 2  E8               inx
0021F1r 2  A9 61            lda #97
0021F3r 2  95 00            sta $00,x
0021F5r 2  A9 1E            lda #30
0021F7r 2  95 01            sta $01,x
0021F9r 2               
0021F9r 2               ; <inline>:0:0 in `main`
0021F9r 2               @OPCODE_1028:   ; [c64_ir] AltPush
0021F9r 2  CA               dex
0021FAr 2  CA               dex
0021FBr 2  B5 03            lda $03,x
0021FDr 2  48               pha
0021FEr 2  B5 02            lda $02,x
002200r 2  48               pha
002201r 2               
002201r 2               ; snake.pax:143:16 in `is-vertical`
002201r 2               @OPCODE_1029:   ; [c64_ir] PushLiteral(-26660)
002201r 2  E8               inx
002202r 2  E8               inx
002203r 2  A9 DC            lda #220
002205r 2  95 00            sta $00,x
002207r 2  A9 97            lda #151
002209r 2  95 01            sta $01,x
00220Br 2               
00220Br 2               ; snake.pax:143:26 in `is-vertical`
00220Br 2               @OPCODE_1030:   ; [c64_ir] Load
00220Br 2  A1 00            lda ($00,x)
00220Dr 2  95 00            sta $00,x
00220Fr 2  A9 00            lda #0
002211r 2  95 01            sta $01,x
002213r 2               
002213r 2               ; src/prelude.fth:6:10 in `dup`
002213r 2               @OPCODE_1031:   ; [c64_ir] TempStore
002213r 2  CA               dex
002214r 2  CA               dex
002215r 2  B5 03            lda $03,x
002217r 2  85 96            sta TEMP_PAX2
002219r 2  B5 02            lda $02,x
00221Br 2  85 95            sta TEMP_PAX1
00221Dr 2               
00221Dr 2               ; src/prelude.fth:6:16 in `dup`
00221Dr 2               @OPCODE_1032:   ; [c64_ir] TempLoad
00221Dr 2  E8               inx
00221Er 2  E8               inx
00221Fr 2  A5 95            lda TEMP_PAX1
002221r 2  95 00            sta $00,x
002223r 2  A5 96            lda TEMP_PAX2
002225r 2  95 01            sta $01,x
002227r 2               
002227r 2               ; src/prelude.fth:6:22 in `dup`
002227r 2               @OPCODE_1033:   ; [c64_ir] TempLoad
002227r 2  E8               inx
002228r 2  E8               inx
002229r 2  A5 95            lda TEMP_PAX1
00222Br 2  95 00            sta $00,x
00222Dr 2  A5 96            lda TEMP_PAX2
00222Fr 2  95 01            sta $01,x
002231r 2               
002231r 2               ; snake.pax:144:3 in `is-vertical`
002231r 2               @OPCODE_1034:   ; [c64_ir] PushLiteral(38)
002231r 2  E8               inx
002232r 2  E8               inx
002233r 2  A9 26            lda #38
002235r 2  95 00            sta $00,x
002237r 2  A9 00            lda #0
002239r 2  95 01            sta $01,x
00223Br 2               
00223Br 2               ; src/prelude.fth:14:12 in `invert`
00223Br 2               @OPCODE_1035:   ; [c64_ir] PushLiteral(-1)
00223Br 2  E8               inx
00223Cr 2  E8               inx
00223Dr 2  A9 FF            lda #255
00223Fr 2  95 00            sta $00,x
002241r 2  A9 FF            lda #255
002243r 2  95 01            sta $01,x
002245r 2               
002245r 2               ; src/prelude.fth:14:15 in `invert`
002245r 2               @OPCODE_1036:   ; [c64_ir] Nand
002245r 2                   ; 26
002245r 2  CA               dex
002246r 2  CA               dex
002247r 2  B5 00            lda $00,x
002249r 2  35 02            and $02,x
00224Br 2  49 FF            eor #$ff
00224Dr 2  95 00            sta $00,x
00224Fr 2  B5 01            lda $01,x
002251r 2  35 03            and $03,x
002253r 2  49 FF            eor #$ff
002255r 2  95 01            sta $01,x
002257r 2               
002257r 2               ; src/prelude.fth:15:19 in `negate`
002257r 2               @OPCODE_1037:   ; [c64_ir] PushLiteral(1)
002257r 2  E8               inx
002258r 2  E8               inx
002259r 2  A9 01            lda #1
00225Br 2  95 00            sta $00,x
00225Dr 2  A9 00            lda #0
00225Fr 2  95 01            sta $01,x
002261r 2               
002261r 2               ; src/prelude.fth:15:21 in `negate`
002261r 2               @OPCODE_1038:   ; [c64_ir] Add
002261r 2                   ; 21
002261r 2  CA               dex
002262r 2  CA               dex
002263r 2  18               clc
002264r 2  B5 00            lda $00,x
002266r 2  75 02            adc $02,x
002268r 2  95 00            sta $00,x
00226Ar 2  B5 01            lda $01,x
00226Cr 2  75 03            adc $03,x
00226Er 2  95 01            sta $01,x
002270r 2               
002270r 2               ; src/prelude.fth:16:19 in `-`
002270r 2               @OPCODE_1039:   ; [c64_ir] Add
002270r 2                   ; 21
002270r 2  CA               dex
002271r 2  CA               dex
002272r 2  18               clc
002273r 2  B5 00            lda $00,x
002275r 2  75 02            adc $02,x
002277r 2  95 00            sta $00,x
002279r 2  B5 01            lda $01,x
00227Br 2  75 03            adc $03,x
00227Dr 2  95 01            sta $01,x
00227Fr 2               
00227Fr 2               ; src/prelude.fth:21:8 in `0=`
00227Fr 2               @OPCODE_1040:   ; [c64_ir] JumpIf0(76)
00227Fr 2  CA               dex
002280r 2  CA               dex
002281r 2  B5 02            lda $02,x
002283r 2  15 03            ora $03,x
002285r 2  D0 03            bne *+5
002287r 2  4C rr rr         jmp @target_76
00228Ar 2               
00228Ar 2               @target_75:
00228Ar 2               
00228Ar 2               ; src/prelude.fth:21:11 in `0=`
00228Ar 2               @OPCODE_1042:   ; [c64_ir] PushLiteral(0)
00228Ar 2  E8               inx
00228Br 2  E8               inx
00228Cr 2  A9 00            lda #0
00228Er 2  95 00            sta $00,x
002290r 2  A9 00            lda #0
002292r 2  95 01            sta $01,x
002294r 2               
002294r 2               ; src/prelude.fth:21:13 in `0=`
002294r 2               @OPCODE_1043:   ; [c64_ir] JumpElse(77)
002294r 2  4C rr rr         jmp @target_77
002297r 2               
002297r 2               @target_76:
002297r 2               
002297r 2               ; src/prelude.fth:21:18 in `0=`
002297r 2               @OPCODE_1045:   ; [c64_ir] PushLiteral(-1)
002297r 2  E8               inx
002298r 2  E8               inx
002299r 2  A9 FF            lda #255
00229Br 2  95 00            sta $00,x
00229Dr 2  A9 FF            lda #255
00229Fr 2  95 01            sta $01,x
0022A1r 2               
0022A1r 2               ; src/prelude.fth:21:21 in `0=`
0022A1r 2               @OPCODE_1046:   ; [c64_ir] JumpTarget(76)
0022A1r 2               
0022A1r 2               @target_77:
0022A1r 2               
0022A1r 2               ; src/prelude.fth:3:10 in `swap`
0022A1r 2               @OPCODE_1048:   ; [c64_ir] AltPush
0022A1r 2  CA               dex
0022A2r 2  CA               dex
0022A3r 2  B5 03            lda $03,x
0022A5r 2  48               pha
0022A6r 2  B5 02            lda $02,x
0022A8r 2  48               pha
0022A9r 2               
0022A9r 2               ; src/prelude.fth:3:13 in `swap`
0022A9r 2               @OPCODE_1049:   ; [c64_ir] TempStore
0022A9r 2  CA               dex
0022AAr 2  CA               dex
0022ABr 2  B5 03            lda $03,x
0022ADr 2  85 96            sta TEMP_PAX2
0022AFr 2  B5 02            lda $02,x
0022B1r 2  85 95            sta TEMP_PAX1
0022B3r 2               
0022B3r 2               ; src/prelude.fth:3:19 in `swap`
0022B3r 2               @OPCODE_1050:   ; [c64_ir] AltPop
0022B3r 2  E8               inx
0022B4r 2  E8               inx
0022B5r 2  68               pla
0022B6r 2  95 00            sta $00,x
0022B8r 2  68               pla
0022B9r 2  95 01            sta $01,x
0022BBr 2               
0022BBr 2               ; src/prelude.fth:3:22 in `swap`
0022BBr 2               @OPCODE_1051:   ; [c64_ir] TempLoad
0022BBr 2  E8               inx
0022BCr 2  E8               inx
0022BDr 2  A5 95            lda TEMP_PAX1
0022BFr 2  95 00            sta $00,x
0022C1r 2  A5 96            lda TEMP_PAX2
0022C3r 2  95 01            sta $01,x
0022C5r 2               
0022C5r 2               ; snake.pax:145:3 in `is-vertical`
0022C5r 2               @OPCODE_1052:   ; [c64_ir] PushLiteral(40)
0022C5r 2  E8               inx
0022C6r 2  E8               inx
0022C7r 2  A9 28            lda #40
0022C9r 2  95 00            sta $00,x
0022CBr 2  A9 00            lda #0
0022CDr 2  95 01            sta $01,x
0022CFr 2               
0022CFr 2               ; src/prelude.fth:14:12 in `invert`
0022CFr 2               @OPCODE_1053:   ; [c64_ir] PushLiteral(-1)
0022CFr 2  E8               inx
0022D0r 2  E8               inx
0022D1r 2  A9 FF            lda #255
0022D3r 2  95 00            sta $00,x
0022D5r 2  A9 FF            lda #255
0022D7r 2  95 01            sta $01,x
0022D9r 2               
0022D9r 2               ; src/prelude.fth:14:15 in `invert`
0022D9r 2               @OPCODE_1054:   ; [c64_ir] Nand
0022D9r 2                   ; 26
0022D9r 2  CA               dex
0022DAr 2  CA               dex
0022DBr 2  B5 00            lda $00,x
0022DDr 2  35 02            and $02,x
0022DFr 2  49 FF            eor #$ff
0022E1r 2  95 00            sta $00,x
0022E3r 2  B5 01            lda $01,x
0022E5r 2  35 03            and $03,x
0022E7r 2  49 FF            eor #$ff
0022E9r 2  95 01            sta $01,x
0022EBr 2               
0022EBr 2               ; src/prelude.fth:15:19 in `negate`
0022EBr 2               @OPCODE_1055:   ; [c64_ir] PushLiteral(1)
0022EBr 2  E8               inx
0022ECr 2  E8               inx
0022EDr 2  A9 01            lda #1
0022EFr 2  95 00            sta $00,x
0022F1r 2  A9 00            lda #0
0022F3r 2  95 01            sta $01,x
0022F5r 2               
0022F5r 2               ; src/prelude.fth:15:21 in `negate`
0022F5r 2               @OPCODE_1056:   ; [c64_ir] Add
0022F5r 2                   ; 21
0022F5r 2  CA               dex
0022F6r 2  CA               dex
0022F7r 2  18               clc
0022F8r 2  B5 00            lda $00,x
0022FAr 2  75 02            adc $02,x
0022FCr 2  95 00            sta $00,x
0022FEr 2  B5 01            lda $01,x
002300r 2  75 03            adc $03,x
002302r 2  95 01            sta $01,x
002304r 2               
002304r 2               ; src/prelude.fth:16:19 in `-`
002304r 2               @OPCODE_1057:   ; [c64_ir] Add
002304r 2                   ; 21
002304r 2  CA               dex
002305r 2  CA               dex
002306r 2  18               clc
002307r 2  B5 00            lda $00,x
002309r 2  75 02            adc $02,x
00230Br 2  95 00            sta $00,x
00230Dr 2  B5 01            lda $01,x
00230Fr 2  75 03            adc $03,x
002311r 2  95 01            sta $01,x
002313r 2               
002313r 2               ; src/prelude.fth:21:8 in `0=`
002313r 2               @OPCODE_1058:   ; [c64_ir] JumpIf0(79)
002313r 2  CA               dex
002314r 2  CA               dex
002315r 2  B5 02            lda $02,x
002317r 2  15 03            ora $03,x
002319r 2  D0 03            bne *+5
00231Br 2  4C rr rr         jmp @target_79
00231Er 2               
00231Er 2               @target_78:
00231Er 2               
00231Er 2               ; src/prelude.fth:21:11 in `0=`
00231Er 2               @OPCODE_1060:   ; [c64_ir] PushLiteral(0)
00231Er 2  E8               inx
00231Fr 2  E8               inx
002320r 2  A9 00            lda #0
002322r 2  95 00            sta $00,x
002324r 2  A9 00            lda #0
002326r 2  95 01            sta $01,x
002328r 2               
002328r 2               ; src/prelude.fth:21:13 in `0=`
002328r 2               @OPCODE_1061:   ; [c64_ir] JumpElse(80)
002328r 2  4C rr rr         jmp @target_80
00232Br 2               
00232Br 2               @target_79:
00232Br 2               
00232Br 2               ; src/prelude.fth:21:18 in `0=`
00232Br 2               @OPCODE_1063:   ; [c64_ir] PushLiteral(-1)
00232Br 2  E8               inx
00232Cr 2  E8               inx
00232Dr 2  A9 FF            lda #255
00232Fr 2  95 00            sta $00,x
002331r 2  A9 FF            lda #255
002333r 2  95 01            sta $01,x
002335r 2               
002335r 2               ; src/prelude.fth:21:21 in `0=`
002335r 2               @OPCODE_1064:   ; [c64_ir] JumpTarget(79)
002335r 2               
002335r 2               @target_80:
002335r 2               
002335r 2               ; src/prelude.fth:14:12 in `invert`
002335r 2               @OPCODE_1066:   ; [c64_ir] PushLiteral(-1)
002335r 2  E8               inx
002336r 2  E8               inx
002337r 2  A9 FF            lda #255
002339r 2  95 00            sta $00,x
00233Br 2  A9 FF            lda #255
00233Dr 2  95 01            sta $01,x
00233Fr 2               
00233Fr 2               ; src/prelude.fth:14:15 in `invert`
00233Fr 2               @OPCODE_1067:   ; [c64_ir] Nand
00233Fr 2                   ; 26
00233Fr 2  CA               dex
002340r 2  CA               dex
002341r 2  B5 00            lda $00,x
002343r 2  35 02            and $02,x
002345r 2  49 FF            eor #$ff
002347r 2  95 00            sta $00,x
002349r 2  B5 01            lda $01,x
00234Br 2  35 03            and $03,x
00234Dr 2  49 FF            eor #$ff
00234Fr 2  95 01            sta $01,x
002351r 2               
002351r 2               ; src/prelude.fth:3:10 in `swap`
002351r 2               @OPCODE_1068:   ; [c64_ir] AltPush
002351r 2  CA               dex
002352r 2  CA               dex
002353r 2  B5 03            lda $03,x
002355r 2  48               pha
002356r 2  B5 02            lda $02,x
002358r 2  48               pha
002359r 2               
002359r 2               ; src/prelude.fth:3:13 in `swap`
002359r 2               @OPCODE_1069:   ; [c64_ir] TempStore
002359r 2  CA               dex
00235Ar 2  CA               dex
00235Br 2  B5 03            lda $03,x
00235Dr 2  85 96            sta TEMP_PAX2
00235Fr 2  B5 02            lda $02,x
002361r 2  85 95            sta TEMP_PAX1
002363r 2               
002363r 2               ; src/prelude.fth:3:19 in `swap`
002363r 2               @OPCODE_1070:   ; [c64_ir] AltPop
002363r 2  E8               inx
002364r 2  E8               inx
002365r 2  68               pla
002366r 2  95 00            sta $00,x
002368r 2  68               pla
002369r 2  95 01            sta $01,x
00236Br 2               
00236Br 2               ; src/prelude.fth:3:22 in `swap`
00236Br 2               @OPCODE_1071:   ; [c64_ir] TempLoad
00236Br 2  E8               inx
00236Cr 2  E8               inx
00236Dr 2  A5 95            lda TEMP_PAX1
00236Fr 2  95 00            sta $00,x
002371r 2  A5 96            lda TEMP_PAX2
002373r 2  95 01            sta $01,x
002375r 2               
002375r 2               ; src/prelude.fth:14:12 in `invert`
002375r 2               @OPCODE_1072:   ; [c64_ir] PushLiteral(-1)
002375r 2  E8               inx
002376r 2  E8               inx
002377r 2  A9 FF            lda #255
002379r 2  95 00            sta $00,x
00237Br 2  A9 FF            lda #255
00237Dr 2  95 01            sta $01,x
00237Fr 2               
00237Fr 2               ; src/prelude.fth:14:15 in `invert`
00237Fr 2               @OPCODE_1073:   ; [c64_ir] Nand
00237Fr 2                   ; 26
00237Fr 2  CA               dex
002380r 2  CA               dex
002381r 2  B5 00            lda $00,x
002383r 2  35 02            and $02,x
002385r 2  49 FF            eor #$ff
002387r 2  95 00            sta $00,x
002389r 2  B5 01            lda $01,x
00238Br 2  35 03            and $03,x
00238Dr 2  49 FF            eor #$ff
00238Fr 2  95 01            sta $01,x
002391r 2               
002391r 2               ; src/prelude.fth:26:27 in `or`
002391r 2               @OPCODE_1074:   ; [c64_ir] Nand
002391r 2                   ; 26
002391r 2  CA               dex
002392r 2  CA               dex
002393r 2  B5 00            lda $00,x
002395r 2  35 02            and $02,x
002397r 2  49 FF            eor #$ff
002399r 2  95 00            sta $00,x
00239Br 2  B5 01            lda $01,x
00239Dr 2  35 03            and $03,x
00239Fr 2  49 FF            eor #$ff
0023A1r 2  95 01            sta $01,x
0023A3r 2               
0023A3r 2               ; <inline>:0:0 in `main`
0023A3r 2               @OPCODE_1075:   ; [c64_ir] AltPop
0023A3r 2  E8               inx
0023A4r 2  E8               inx
0023A5r 2  68               pla
0023A6r 2  95 00            sta $00,x
0023A8r 2  68               pla
0023A9r 2  95 01            sta $01,x
0023ABr 2               
0023ABr 2               ; <inline>:0:0 in `main`
0023ABr 2               @OPCODE_1076:   ; [c64_ir] Drop
0023ABr 2  CA               dex
0023ACr 2  CA               dex
0023ADr 2               
0023ADr 2               ; snake.pax:148:27 in `turn-left`
0023ADr 2               @OPCODE_1077:   ; [c64_ir] JumpIf0(82)
0023ADr 2  CA               dex
0023AEr 2  CA               dex
0023AFr 2  B5 02            lda $02,x
0023B1r 2  15 03            ora $03,x
0023B3r 2  D0 03            bne *+5
0023B5r 2  4C rr rr         jmp @target_82
0023B8r 2               
0023B8r 2               @target_81:
0023B8r 2               
0023B8r 2               ; snake.pax:148:30 in `turn-left`
0023B8r 2               @OPCODE_1079:   ; [c64_ir] PushLiteral(37)
0023B8r 2  E8               inx
0023B9r 2  E8               inx
0023BAr 2  A9 25            lda #37
0023BCr 2  95 00            sta $00,x
0023BEr 2  A9 00            lda #0
0023C0r 2  95 01            sta $01,x
0023C2r 2               
0023C2r 2               ; snake.pax:148:35 in `turn-left`
0023C2r 2               @OPCODE_1080:   ; [c64_ir] PushLiteral(-26660)
0023C2r 2  E8               inx
0023C3r 2  E8               inx
0023C4r 2  A9 DC            lda #220
0023C6r 2  95 00            sta $00,x
0023C8r 2  A9 97            lda #151
0023CAr 2  95 01            sta $01,x
0023CCr 2               
0023CCr 2               ; snake.pax:148:45 in `turn-left`
0023CCr 2               @OPCODE_1081:   ; [c64_ir] Store
0023CCr 2  CA               dex
0023CDr 2  CA               dex
0023CEr 2  CA               dex
0023CFr 2  CA               dex
0023D0r 2  B5 02            lda $02,x
0023D2r 2  81 04            sta ($04,x)
0023D4r 2                   ; TODO high byte
0023D4r 2               
0023D4r 2               ; snake.pax:148:47 in `turn-left`
0023D4r 2               @OPCODE_1082:   ; [c64_ir] JumpTarget(81)
0023D4r 2               
0023D4r 2               @target_82:
0023D4r 2               
0023D4r 2               ; <inline>:0:0 in `main`
0023D4r 2               @OPCODE_1084:   ; [c64_ir] AltPop
0023D4r 2  E8               inx
0023D5r 2  E8               inx
0023D6r 2  68               pla
0023D7r 2  95 00            sta $00,x
0023D9r 2  68               pla
0023DAr 2  95 01            sta $01,x
0023DCr 2               
0023DCr 2               ; <inline>:0:0 in `main`
0023DCr 2               @OPCODE_1085:   ; [c64_ir] Drop
0023DCr 2  CA               dex
0023DDr 2  CA               dex
0023DEr 2               
0023DEr 2               ; snake.pax:153:28 in `change-direction`
0023DEr 2               @OPCODE_1086:   ; [c64_ir] JumpElse(125)
0023DEr 2  4C rr rr         jmp @target_125
0023E1r 2               
0023E1r 2               @target_83:
0023E1r 2               
0023E1r 2               ; src/prelude.fth:4:13 in `over`
0023E1r 2               @OPCODE_1088:   ; [c64_ir] TempStore
0023E1r 2  CA               dex
0023E2r 2  CA               dex
0023E3r 2  B5 03            lda $03,x
0023E5r 2  85 96            sta TEMP_PAX2
0023E7r 2  B5 02            lda $02,x
0023E9r 2  85 95            sta TEMP_PAX1
0023EBr 2               
0023EBr 2               ; src/prelude.fth:4:19 in `over`
0023EBr 2               @OPCODE_1089:   ; [c64_ir] TempLoad
0023EBr 2  E8               inx
0023ECr 2  E8               inx
0023EDr 2  A5 95            lda TEMP_PAX1
0023EFr 2  95 00            sta $00,x
0023F1r 2  A5 96            lda TEMP_PAX2
0023F3r 2  95 01            sta $01,x
0023F5r 2               
0023F5r 2               ; src/prelude.fth:4:25 in `over`
0023F5r 2               @OPCODE_1090:   ; [c64_ir] PushLiteral(38)
0023F5r 2  E8               inx
0023F6r 2  E8               inx
0023F7r 2  A9 26            lda #38
0023F9r 2  95 00            sta $00,x
0023FBr 2  A9 00            lda #0
0023FDr 2  95 01            sta $01,x
0023FFr 2               
0023FFr 2               ; src/prelude.fth:4:28 in `over`
0023FFr 2               @OPCODE_1091:   ; [c64_ir] TempLoad
0023FFr 2  E8               inx
002400r 2  E8               inx
002401r 2  A5 95            lda TEMP_PAX1
002403r 2  95 00            sta $00,x
002405r 2  A5 96            lda TEMP_PAX2
002407r 2  95 01            sta $01,x
002409r 2               
002409r 2               ; src/prelude.fth:14:12 in `invert`
002409r 2               @OPCODE_1092:   ; [c64_ir] PushLiteral(-1)
002409r 2  E8               inx
00240Ar 2  E8               inx
00240Br 2  A9 FF            lda #255
00240Dr 2  95 00            sta $00,x
00240Fr 2  A9 FF            lda #255
002411r 2  95 01            sta $01,x
002413r 2               
002413r 2               ; src/prelude.fth:14:15 in `invert`
002413r 2               @OPCODE_1093:   ; [c64_ir] Nand
002413r 2                   ; 26
002413r 2  CA               dex
002414r 2  CA               dex
002415r 2  B5 00            lda $00,x
002417r 2  35 02            and $02,x
002419r 2  49 FF            eor #$ff
00241Br 2  95 00            sta $00,x
00241Dr 2  B5 01            lda $01,x
00241Fr 2  35 03            and $03,x
002421r 2  49 FF            eor #$ff
002423r 2  95 01            sta $01,x
002425r 2               
002425r 2               ; src/prelude.fth:15:19 in `negate`
002425r 2               @OPCODE_1094:   ; [c64_ir] PushLiteral(1)
002425r 2  E8               inx
002426r 2  E8               inx
002427r 2  A9 01            lda #1
002429r 2  95 00            sta $00,x
00242Br 2  A9 00            lda #0
00242Dr 2  95 01            sta $01,x
00242Fr 2               
00242Fr 2               ; src/prelude.fth:15:21 in `negate`
00242Fr 2               @OPCODE_1095:   ; [c64_ir] Add
00242Fr 2                   ; 21
00242Fr 2  CA               dex
002430r 2  CA               dex
002431r 2  18               clc
002432r 2  B5 00            lda $00,x
002434r 2  75 02            adc $02,x
002436r 2  95 00            sta $00,x
002438r 2  B5 01            lda $01,x
00243Ar 2  75 03            adc $03,x
00243Cr 2  95 01            sta $01,x
00243Er 2               
00243Er 2               ; src/prelude.fth:16:19 in `-`
00243Er 2               @OPCODE_1096:   ; [c64_ir] Add
00243Er 2                   ; 21
00243Er 2  CA               dex
00243Fr 2  CA               dex
002440r 2  18               clc
002441r 2  B5 00            lda $00,x
002443r 2  75 02            adc $02,x
002445r 2  95 00            sta $00,x
002447r 2  B5 01            lda $01,x
002449r 2  75 03            adc $03,x
00244Br 2  95 01            sta $01,x
00244Dr 2               
00244Dr 2               ; src/prelude.fth:21:8 in `0=`
00244Dr 2               @OPCODE_1097:   ; [c64_ir] JumpIf0(85)
00244Dr 2  CA               dex
00244Er 2  CA               dex
00244Fr 2  B5 02            lda $02,x
002451r 2  15 03            ora $03,x
002453r 2  D0 03            bne *+5
002455r 2  4C rr rr         jmp @target_85
002458r 2               
002458r 2               @target_84:
002458r 2               
002458r 2               ; src/prelude.fth:21:11 in `0=`
002458r 2               @OPCODE_1099:   ; [c64_ir] PushLiteral(0)
002458r 2  E8               inx
002459r 2  E8               inx
00245Ar 2  A9 00            lda #0
00245Cr 2  95 00            sta $00,x
00245Er 2  A9 00            lda #0
002460r 2  95 01            sta $01,x
002462r 2               
002462r 2               ; src/prelude.fth:21:13 in `0=`
002462r 2               @OPCODE_1100:   ; [c64_ir] JumpElse(86)
002462r 2  4C rr rr         jmp @target_86
002465r 2               
002465r 2               @target_85:
002465r 2               
002465r 2               ; src/prelude.fth:21:18 in `0=`
002465r 2               @OPCODE_1102:   ; [c64_ir] PushLiteral(-1)
002465r 2  E8               inx
002466r 2  E8               inx
002467r 2  A9 FF            lda #255
002469r 2  95 00            sta $00,x
00246Br 2  A9 FF            lda #255
00246Dr 2  95 01            sta $01,x
00246Fr 2               
00246Fr 2               ; src/prelude.fth:21:21 in `0=`
00246Fr 2               @OPCODE_1103:   ; [c64_ir] JumpTarget(85)
00246Fr 2               
00246Fr 2               @target_86:
00246Fr 2               
00246Fr 2               ; snake.pax:154:13 in `change-direction`
00246Fr 2               @OPCODE_1105:   ; [c64_ir] JumpIf0(96)
00246Fr 2  CA               dex
002470r 2  CA               dex
002471r 2  B5 02            lda $02,x
002473r 2  15 03            ora $03,x
002475r 2  D0 03            bne *+5
002477r 2  4C rr rr         jmp @target_96
00247Ar 2               
00247Ar 2               @target_87:
00247Ar 2               
00247Ar 2               ; <inline>:0:0 in `main`
00247Ar 2               @OPCODE_1107:   ; [c64_ir] PushLiteral(7777)
00247Ar 2  E8               inx
00247Br 2  E8               inx
00247Cr 2  A9 61            lda #97
00247Er 2  95 00            sta $00,x
002480r 2  A9 1E            lda #30
002482r 2  95 01            sta $01,x
002484r 2               
002484r 2               ; <inline>:0:0 in `main`
002484r 2               @OPCODE_1108:   ; [c64_ir] AltPush
002484r 2  CA               dex
002485r 2  CA               dex
002486r 2  B5 03            lda $03,x
002488r 2  48               pha
002489r 2  B5 02            lda $02,x
00248Br 2  48               pha
00248Cr 2               
00248Cr 2               ; <inline>:0:0 in `main`
00248Cr 2               @OPCODE_1109:   ; [c64_ir] PushLiteral(7777)
00248Cr 2  E8               inx
00248Dr 2  E8               inx
00248Er 2  A9 61            lda #97
002490r 2  95 00            sta $00,x
002492r 2  A9 1E            lda #30
002494r 2  95 01            sta $01,x
002496r 2               
002496r 2               ; <inline>:0:0 in `main`
002496r 2               @OPCODE_1110:   ; [c64_ir] AltPush
002496r 2  CA               dex
002497r 2  CA               dex
002498r 2  B5 03            lda $03,x
00249Ar 2  48               pha
00249Br 2  B5 02            lda $02,x
00249Dr 2  48               pha
00249Er 2               
00249Er 2               ; snake.pax:139:18 in `is-horizontal`
00249Er 2               @OPCODE_1111:   ; [c64_ir] PushLiteral(-26660)
00249Er 2  E8               inx
00249Fr 2  E8               inx
0024A0r 2  A9 DC            lda #220
0024A2r 2  95 00            sta $00,x
0024A4r 2  A9 97            lda #151
0024A6r 2  95 01            sta $01,x
0024A8r 2               
0024A8r 2               ; snake.pax:139:28 in `is-horizontal`
0024A8r 2               @OPCODE_1112:   ; [c64_ir] Load
0024A8r 2  A1 00            lda ($00,x)
0024AAr 2  95 00            sta $00,x
0024ACr 2  A9 00            lda #0
0024AEr 2  95 01            sta $01,x
0024B0r 2               
0024B0r 2               ; src/prelude.fth:6:10 in `dup`
0024B0r 2               @OPCODE_1113:   ; [c64_ir] TempStore
0024B0r 2  CA               dex
0024B1r 2  CA               dex
0024B2r 2  B5 03            lda $03,x
0024B4r 2  85 96            sta TEMP_PAX2
0024B6r 2  B5 02            lda $02,x
0024B8r 2  85 95            sta TEMP_PAX1
0024BAr 2               
0024BAr 2               ; src/prelude.fth:6:16 in `dup`
0024BAr 2               @OPCODE_1114:   ; [c64_ir] TempLoad
0024BAr 2  E8               inx
0024BBr 2  E8               inx
0024BCr 2  A5 95            lda TEMP_PAX1
0024BEr 2  95 00            sta $00,x
0024C0r 2  A5 96            lda TEMP_PAX2
0024C2r 2  95 01            sta $01,x
0024C4r 2               
0024C4r 2               ; src/prelude.fth:6:22 in `dup`
0024C4r 2               @OPCODE_1115:   ; [c64_ir] TempLoad
0024C4r 2  E8               inx
0024C5r 2  E8               inx
0024C6r 2  A5 95            lda TEMP_PAX1
0024C8r 2  95 00            sta $00,x
0024CAr 2  A5 96            lda TEMP_PAX2
0024CCr 2  95 01            sta $01,x
0024CEr 2               
0024CEr 2               ; snake.pax:140:3 in `is-horizontal`
0024CEr 2               @OPCODE_1116:   ; [c64_ir] PushLiteral(37)
0024CEr 2  E8               inx
0024CFr 2  E8               inx
0024D0r 2  A9 25            lda #37
0024D2r 2  95 00            sta $00,x
0024D4r 2  A9 00            lda #0
0024D6r 2  95 01            sta $01,x
0024D8r 2               
0024D8r 2               ; src/prelude.fth:14:12 in `invert`
0024D8r 2               @OPCODE_1117:   ; [c64_ir] PushLiteral(-1)
0024D8r 2  E8               inx
0024D9r 2  E8               inx
0024DAr 2  A9 FF            lda #255
0024DCr 2  95 00            sta $00,x
0024DEr 2  A9 FF            lda #255
0024E0r 2  95 01            sta $01,x
0024E2r 2               
0024E2r 2               ; src/prelude.fth:14:15 in `invert`
0024E2r 2               @OPCODE_1118:   ; [c64_ir] Nand
0024E2r 2                   ; 26
0024E2r 2  CA               dex
0024E3r 2  CA               dex
0024E4r 2  B5 00            lda $00,x
0024E6r 2  35 02            and $02,x
0024E8r 2  49 FF            eor #$ff
0024EAr 2  95 00            sta $00,x
0024ECr 2  B5 01            lda $01,x
0024EEr 2  35 03            and $03,x
0024F0r 2  49 FF            eor #$ff
0024F2r 2  95 01            sta $01,x
0024F4r 2               
0024F4r 2               ; src/prelude.fth:15:19 in `negate`
0024F4r 2               @OPCODE_1119:   ; [c64_ir] PushLiteral(1)
0024F4r 2  E8               inx
0024F5r 2  E8               inx
0024F6r 2  A9 01            lda #1
0024F8r 2  95 00            sta $00,x
0024FAr 2  A9 00            lda #0
0024FCr 2  95 01            sta $01,x
0024FEr 2               
0024FEr 2               ; src/prelude.fth:15:21 in `negate`
0024FEr 2               @OPCODE_1120:   ; [c64_ir] Add
0024FEr 2                   ; 21
0024FEr 2  CA               dex
0024FFr 2  CA               dex
002500r 2  18               clc
002501r 2  B5 00            lda $00,x
002503r 2  75 02            adc $02,x
002505r 2  95 00            sta $00,x
002507r 2  B5 01            lda $01,x
002509r 2  75 03            adc $03,x
00250Br 2  95 01            sta $01,x
00250Dr 2               
00250Dr 2               ; src/prelude.fth:16:19 in `-`
00250Dr 2               @OPCODE_1121:   ; [c64_ir] Add
00250Dr 2                   ; 21
00250Dr 2  CA               dex
00250Er 2  CA               dex
00250Fr 2  18               clc
002510r 2  B5 00            lda $00,x
002512r 2  75 02            adc $02,x
002514r 2  95 00            sta $00,x
002516r 2  B5 01            lda $01,x
002518r 2  75 03            adc $03,x
00251Ar 2  95 01            sta $01,x
00251Cr 2               
00251Cr 2               ; src/prelude.fth:21:8 in `0=`
00251Cr 2               @OPCODE_1122:   ; [c64_ir] JumpIf0(89)
00251Cr 2  CA               dex
00251Dr 2  CA               dex
00251Er 2  B5 02            lda $02,x
002520r 2  15 03            ora $03,x
002522r 2  D0 03            bne *+5
002524r 2  4C rr rr         jmp @target_89
002527r 2               
002527r 2               @target_88:
002527r 2               
002527r 2               ; src/prelude.fth:21:11 in `0=`
002527r 2               @OPCODE_1124:   ; [c64_ir] PushLiteral(0)
002527r 2  E8               inx
002528r 2  E8               inx
002529r 2  A9 00            lda #0
00252Br 2  95 00            sta $00,x
00252Dr 2  A9 00            lda #0
00252Fr 2  95 01            sta $01,x
002531r 2               
002531r 2               ; src/prelude.fth:21:13 in `0=`
002531r 2               @OPCODE_1125:   ; [c64_ir] JumpElse(90)
002531r 2  4C rr rr         jmp @target_90
002534r 2               
002534r 2               @target_89:
002534r 2               
002534r 2               ; src/prelude.fth:21:18 in `0=`
002534r 2               @OPCODE_1127:   ; [c64_ir] PushLiteral(-1)
002534r 2  E8               inx
002535r 2  E8               inx
002536r 2  A9 FF            lda #255
002538r 2  95 00            sta $00,x
00253Ar 2  A9 FF            lda #255
00253Cr 2  95 01            sta $01,x
00253Er 2               
00253Er 2               ; src/prelude.fth:21:21 in `0=`
00253Er 2               @OPCODE_1128:   ; [c64_ir] JumpTarget(89)
00253Er 2               
00253Er 2               @target_90:
00253Er 2               
00253Er 2               ; src/prelude.fth:3:10 in `swap`
00253Er 2               @OPCODE_1130:   ; [c64_ir] AltPush
00253Er 2  CA               dex
00253Fr 2  CA               dex
002540r 2  B5 03            lda $03,x
002542r 2  48               pha
002543r 2  B5 02            lda $02,x
002545r 2  48               pha
002546r 2               
002546r 2               ; src/prelude.fth:3:13 in `swap`
002546r 2               @OPCODE_1131:   ; [c64_ir] TempStore
002546r 2  CA               dex
002547r 2  CA               dex
002548r 2  B5 03            lda $03,x
00254Ar 2  85 96            sta TEMP_PAX2
00254Cr 2  B5 02            lda $02,x
00254Er 2  85 95            sta TEMP_PAX1
002550r 2               
002550r 2               ; src/prelude.fth:3:19 in `swap`
002550r 2               @OPCODE_1132:   ; [c64_ir] AltPop
002550r 2  E8               inx
002551r 2  E8               inx
002552r 2  68               pla
002553r 2  95 00            sta $00,x
002555r 2  68               pla
002556r 2  95 01            sta $01,x
002558r 2               
002558r 2               ; src/prelude.fth:3:22 in `swap`
002558r 2               @OPCODE_1133:   ; [c64_ir] TempLoad
002558r 2  E8               inx
002559r 2  E8               inx
00255Ar 2  A5 95            lda TEMP_PAX1
00255Cr 2  95 00            sta $00,x
00255Er 2  A5 96            lda TEMP_PAX2
002560r 2  95 01            sta $01,x
002562r 2               
002562r 2               ; snake.pax:141:3 in `is-horizontal`
002562r 2               @OPCODE_1134:   ; [c64_ir] PushLiteral(39)
002562r 2  E8               inx
002563r 2  E8               inx
002564r 2  A9 27            lda #39
002566r 2  95 00            sta $00,x
002568r 2  A9 00            lda #0
00256Ar 2  95 01            sta $01,x
00256Cr 2               
00256Cr 2               ; src/prelude.fth:14:12 in `invert`
00256Cr 2               @OPCODE_1135:   ; [c64_ir] PushLiteral(-1)
00256Cr 2  E8               inx
00256Dr 2  E8               inx
00256Er 2  A9 FF            lda #255
002570r 2  95 00            sta $00,x
002572r 2  A9 FF            lda #255
002574r 2  95 01            sta $01,x
002576r 2               
002576r 2               ; src/prelude.fth:14:15 in `invert`
002576r 2               @OPCODE_1136:   ; [c64_ir] Nand
002576r 2                   ; 26
002576r 2  CA               dex
002577r 2  CA               dex
002578r 2  B5 00            lda $00,x
00257Ar 2  35 02            and $02,x
00257Cr 2  49 FF            eor #$ff
00257Er 2  95 00            sta $00,x
002580r 2  B5 01            lda $01,x
002582r 2  35 03            and $03,x
002584r 2  49 FF            eor #$ff
002586r 2  95 01            sta $01,x
002588r 2               
002588r 2               ; src/prelude.fth:15:19 in `negate`
002588r 2               @OPCODE_1137:   ; [c64_ir] PushLiteral(1)
002588r 2  E8               inx
002589r 2  E8               inx
00258Ar 2  A9 01            lda #1
00258Cr 2  95 00            sta $00,x
00258Er 2  A9 00            lda #0
002590r 2  95 01            sta $01,x
002592r 2               
002592r 2               ; src/prelude.fth:15:21 in `negate`
002592r 2               @OPCODE_1138:   ; [c64_ir] Add
002592r 2                   ; 21
002592r 2  CA               dex
002593r 2  CA               dex
002594r 2  18               clc
002595r 2  B5 00            lda $00,x
002597r 2  75 02            adc $02,x
002599r 2  95 00            sta $00,x
00259Br 2  B5 01            lda $01,x
00259Dr 2  75 03            adc $03,x
00259Fr 2  95 01            sta $01,x
0025A1r 2               
0025A1r 2               ; src/prelude.fth:16:19 in `-`
0025A1r 2               @OPCODE_1139:   ; [c64_ir] Add
0025A1r 2                   ; 21
0025A1r 2  CA               dex
0025A2r 2  CA               dex
0025A3r 2  18               clc
0025A4r 2  B5 00            lda $00,x
0025A6r 2  75 02            adc $02,x
0025A8r 2  95 00            sta $00,x
0025AAr 2  B5 01            lda $01,x
0025ACr 2  75 03            adc $03,x
0025AEr 2  95 01            sta $01,x
0025B0r 2               
0025B0r 2               ; src/prelude.fth:21:8 in `0=`
0025B0r 2               @OPCODE_1140:   ; [c64_ir] JumpIf0(92)
0025B0r 2  CA               dex
0025B1r 2  CA               dex
0025B2r 2  B5 02            lda $02,x
0025B4r 2  15 03            ora $03,x
0025B6r 2  D0 03            bne *+5
0025B8r 2  4C rr rr         jmp @target_92
0025BBr 2               
0025BBr 2               @target_91:
0025BBr 2               
0025BBr 2               ; src/prelude.fth:21:11 in `0=`
0025BBr 2               @OPCODE_1142:   ; [c64_ir] PushLiteral(0)
0025BBr 2  E8               inx
0025BCr 2  E8               inx
0025BDr 2  A9 00            lda #0
0025BFr 2  95 00            sta $00,x
0025C1r 2  A9 00            lda #0
0025C3r 2  95 01            sta $01,x
0025C5r 2               
0025C5r 2               ; src/prelude.fth:21:13 in `0=`
0025C5r 2               @OPCODE_1143:   ; [c64_ir] JumpElse(93)
0025C5r 2  4C rr rr         jmp @target_93
0025C8r 2               
0025C8r 2               @target_92:
0025C8r 2               
0025C8r 2               ; src/prelude.fth:21:18 in `0=`
0025C8r 2               @OPCODE_1145:   ; [c64_ir] PushLiteral(-1)
0025C8r 2  E8               inx
0025C9r 2  E8               inx
0025CAr 2  A9 FF            lda #255
0025CCr 2  95 00            sta $00,x
0025CEr 2  A9 FF            lda #255
0025D0r 2  95 01            sta $01,x
0025D2r 2               
0025D2r 2               ; src/prelude.fth:21:21 in `0=`
0025D2r 2               @OPCODE_1146:   ; [c64_ir] JumpTarget(92)
0025D2r 2               
0025D2r 2               @target_93:
0025D2r 2               
0025D2r 2               ; src/prelude.fth:14:12 in `invert`
0025D2r 2               @OPCODE_1148:   ; [c64_ir] PushLiteral(-1)
0025D2r 2  E8               inx
0025D3r 2  E8               inx
0025D4r 2  A9 FF            lda #255
0025D6r 2  95 00            sta $00,x
0025D8r 2  A9 FF            lda #255
0025DAr 2  95 01            sta $01,x
0025DCr 2               
0025DCr 2               ; src/prelude.fth:14:15 in `invert`
0025DCr 2               @OPCODE_1149:   ; [c64_ir] Nand
0025DCr 2                   ; 26
0025DCr 2  CA               dex
0025DDr 2  CA               dex
0025DEr 2  B5 00            lda $00,x
0025E0r 2  35 02            and $02,x
0025E2r 2  49 FF            eor #$ff
0025E4r 2  95 00            sta $00,x
0025E6r 2  B5 01            lda $01,x
0025E8r 2  35 03            and $03,x
0025EAr 2  49 FF            eor #$ff
0025ECr 2  95 01            sta $01,x
0025EEr 2               
0025EEr 2               ; src/prelude.fth:3:10 in `swap`
0025EEr 2               @OPCODE_1150:   ; [c64_ir] AltPush
0025EEr 2  CA               dex
0025EFr 2  CA               dex
0025F0r 2  B5 03            lda $03,x
0025F2r 2  48               pha
0025F3r 2  B5 02            lda $02,x
0025F5r 2  48               pha
0025F6r 2               
0025F6r 2               ; src/prelude.fth:3:13 in `swap`
0025F6r 2               @OPCODE_1151:   ; [c64_ir] TempStore
0025F6r 2  CA               dex
0025F7r 2  CA               dex
0025F8r 2  B5 03            lda $03,x
0025FAr 2  85 96            sta TEMP_PAX2
0025FCr 2  B5 02            lda $02,x
0025FEr 2  85 95            sta TEMP_PAX1
002600r 2               
002600r 2               ; src/prelude.fth:3:19 in `swap`
002600r 2               @OPCODE_1152:   ; [c64_ir] AltPop
002600r 2  E8               inx
002601r 2  E8               inx
002602r 2  68               pla
002603r 2  95 00            sta $00,x
002605r 2  68               pla
002606r 2  95 01            sta $01,x
002608r 2               
002608r 2               ; src/prelude.fth:3:22 in `swap`
002608r 2               @OPCODE_1153:   ; [c64_ir] TempLoad
002608r 2  E8               inx
002609r 2  E8               inx
00260Ar 2  A5 95            lda TEMP_PAX1
00260Cr 2  95 00            sta $00,x
00260Er 2  A5 96            lda TEMP_PAX2
002610r 2  95 01            sta $01,x
002612r 2               
002612r 2               ; src/prelude.fth:14:12 in `invert`
002612r 2               @OPCODE_1154:   ; [c64_ir] PushLiteral(-1)
002612r 2  E8               inx
002613r 2  E8               inx
002614r 2  A9 FF            lda #255
002616r 2  95 00            sta $00,x
002618r 2  A9 FF            lda #255
00261Ar 2  95 01            sta $01,x
00261Cr 2               
00261Cr 2               ; src/prelude.fth:14:15 in `invert`
00261Cr 2               @OPCODE_1155:   ; [c64_ir] Nand
00261Cr 2                   ; 26
00261Cr 2  CA               dex
00261Dr 2  CA               dex
00261Er 2  B5 00            lda $00,x
002620r 2  35 02            and $02,x
002622r 2  49 FF            eor #$ff
002624r 2  95 00            sta $00,x
002626r 2  B5 01            lda $01,x
002628r 2  35 03            and $03,x
00262Ar 2  49 FF            eor #$ff
00262Cr 2  95 01            sta $01,x
00262Er 2               
00262Er 2               ; src/prelude.fth:26:27 in `or`
00262Er 2               @OPCODE_1156:   ; [c64_ir] Nand
00262Er 2                   ; 26
00262Er 2  CA               dex
00262Fr 2  CA               dex
002630r 2  B5 00            lda $00,x
002632r 2  35 02            and $02,x
002634r 2  49 FF            eor #$ff
002636r 2  95 00            sta $00,x
002638r 2  B5 01            lda $01,x
00263Ar 2  35 03            and $03,x
00263Cr 2  49 FF            eor #$ff
00263Er 2  95 01            sta $01,x
002640r 2               
002640r 2               ; <inline>:0:0 in `main`
002640r 2               @OPCODE_1157:   ; [c64_ir] AltPop
002640r 2  E8               inx
002641r 2  E8               inx
002642r 2  68               pla
002643r 2  95 00            sta $00,x
002645r 2  68               pla
002646r 2  95 01            sta $01,x
002648r 2               
002648r 2               ; <inline>:0:0 in `main`
002648r 2               @OPCODE_1158:   ; [c64_ir] Drop
002648r 2  CA               dex
002649r 2  CA               dex
00264Ar 2               
00264Ar 2               ; snake.pax:147:29 in `turn-up`
00264Ar 2               @OPCODE_1159:   ; [c64_ir] JumpIf0(95)
00264Ar 2  CA               dex
00264Br 2  CA               dex
00264Cr 2  B5 02            lda $02,x
00264Er 2  15 03            ora $03,x
002650r 2  D0 03            bne *+5
002652r 2  4C rr rr         jmp @target_95
002655r 2               
002655r 2               @target_94:
002655r 2               
002655r 2               ; snake.pax:147:32 in `turn-up`
002655r 2               @OPCODE_1161:   ; [c64_ir] PushLiteral(38)
002655r 2  E8               inx
002656r 2  E8               inx
002657r 2  A9 26            lda #38
002659r 2  95 00            sta $00,x
00265Br 2  A9 00            lda #0
00265Dr 2  95 01            sta $01,x
00265Fr 2               
00265Fr 2               ; snake.pax:147:35 in `turn-up`
00265Fr 2               @OPCODE_1162:   ; [c64_ir] PushLiteral(-26660)
00265Fr 2  E8               inx
002660r 2  E8               inx
002661r 2  A9 DC            lda #220
002663r 2  95 00            sta $00,x
002665r 2  A9 97            lda #151
002667r 2  95 01            sta $01,x
002669r 2               
002669r 2               ; snake.pax:147:45 in `turn-up`
002669r 2               @OPCODE_1163:   ; [c64_ir] Store
002669r 2  CA               dex
00266Ar 2  CA               dex
00266Br 2  CA               dex
00266Cr 2  CA               dex
00266Dr 2  B5 02            lda $02,x
00266Fr 2  81 04            sta ($04,x)
002671r 2                   ; TODO high byte
002671r 2               
002671r 2               ; snake.pax:147:47 in `turn-up`
002671r 2               @OPCODE_1164:   ; [c64_ir] JumpTarget(94)
002671r 2               
002671r 2               @target_95:
002671r 2               
002671r 2               ; <inline>:0:0 in `main`
002671r 2               @OPCODE_1166:   ; [c64_ir] AltPop
002671r 2  E8               inx
002672r 2  E8               inx
002673r 2  68               pla
002674r 2  95 00            sta $00,x
002676r 2  68               pla
002677r 2  95 01            sta $01,x
002679r 2               
002679r 2               ; <inline>:0:0 in `main`
002679r 2               @OPCODE_1167:   ; [c64_ir] Drop
002679r 2  CA               dex
00267Ar 2  CA               dex
00267Br 2               
00267Br 2               ; snake.pax:154:24 in `change-direction`
00267Br 2               @OPCODE_1168:   ; [c64_ir] JumpElse(124)
00267Br 2  4C rr rr         jmp @target_124
00267Er 2               
00267Er 2               @target_96:
00267Er 2               
00267Er 2               ; src/prelude.fth:4:13 in `over`
00267Er 2               @OPCODE_1170:   ; [c64_ir] TempStore
00267Er 2  CA               dex
00267Fr 2  CA               dex
002680r 2  B5 03            lda $03,x
002682r 2  85 96            sta TEMP_PAX2
002684r 2  B5 02            lda $02,x
002686r 2  85 95            sta TEMP_PAX1
002688r 2               
002688r 2               ; src/prelude.fth:4:19 in `over`
002688r 2               @OPCODE_1171:   ; [c64_ir] TempLoad
002688r 2  E8               inx
002689r 2  E8               inx
00268Ar 2  A5 95            lda TEMP_PAX1
00268Cr 2  95 00            sta $00,x
00268Er 2  A5 96            lda TEMP_PAX2
002690r 2  95 01            sta $01,x
002692r 2               
002692r 2               ; src/prelude.fth:4:25 in `over`
002692r 2               @OPCODE_1172:   ; [c64_ir] PushLiteral(39)
002692r 2  E8               inx
002693r 2  E8               inx
002694r 2  A9 27            lda #39
002696r 2  95 00            sta $00,x
002698r 2  A9 00            lda #0
00269Ar 2  95 01            sta $01,x
00269Cr 2               
00269Cr 2               ; src/prelude.fth:4:28 in `over`
00269Cr 2               @OPCODE_1173:   ; [c64_ir] TempLoad
00269Cr 2  E8               inx
00269Dr 2  E8               inx
00269Er 2  A5 95            lda TEMP_PAX1
0026A0r 2  95 00            sta $00,x
0026A2r 2  A5 96            lda TEMP_PAX2
0026A4r 2  95 01            sta $01,x
0026A6r 2               
0026A6r 2               ; src/prelude.fth:14:12 in `invert`
0026A6r 2               @OPCODE_1174:   ; [c64_ir] PushLiteral(-1)
0026A6r 2  E8               inx
0026A7r 2  E8               inx
0026A8r 2  A9 FF            lda #255
0026AAr 2  95 00            sta $00,x
0026ACr 2  A9 FF            lda #255
0026AEr 2  95 01            sta $01,x
0026B0r 2               
0026B0r 2               ; src/prelude.fth:14:15 in `invert`
0026B0r 2               @OPCODE_1175:   ; [c64_ir] Nand
0026B0r 2                   ; 26
0026B0r 2  CA               dex
0026B1r 2  CA               dex
0026B2r 2  B5 00            lda $00,x
0026B4r 2  35 02            and $02,x
0026B6r 2  49 FF            eor #$ff
0026B8r 2  95 00            sta $00,x
0026BAr 2  B5 01            lda $01,x
0026BCr 2  35 03            and $03,x
0026BEr 2  49 FF            eor #$ff
0026C0r 2  95 01            sta $01,x
0026C2r 2               
0026C2r 2               ; src/prelude.fth:15:19 in `negate`
0026C2r 2               @OPCODE_1176:   ; [c64_ir] PushLiteral(1)
0026C2r 2  E8               inx
0026C3r 2  E8               inx
0026C4r 2  A9 01            lda #1
0026C6r 2  95 00            sta $00,x
0026C8r 2  A9 00            lda #0
0026CAr 2  95 01            sta $01,x
0026CCr 2               
0026CCr 2               ; src/prelude.fth:15:21 in `negate`
0026CCr 2               @OPCODE_1177:   ; [c64_ir] Add
0026CCr 2                   ; 21
0026CCr 2  CA               dex
0026CDr 2  CA               dex
0026CEr 2  18               clc
0026CFr 2  B5 00            lda $00,x
0026D1r 2  75 02            adc $02,x
0026D3r 2  95 00            sta $00,x
0026D5r 2  B5 01            lda $01,x
0026D7r 2  75 03            adc $03,x
0026D9r 2  95 01            sta $01,x
0026DBr 2               
0026DBr 2               ; src/prelude.fth:16:19 in `-`
0026DBr 2               @OPCODE_1178:   ; [c64_ir] Add
0026DBr 2                   ; 21
0026DBr 2  CA               dex
0026DCr 2  CA               dex
0026DDr 2  18               clc
0026DEr 2  B5 00            lda $00,x
0026E0r 2  75 02            adc $02,x
0026E2r 2  95 00            sta $00,x
0026E4r 2  B5 01            lda $01,x
0026E6r 2  75 03            adc $03,x
0026E8r 2  95 01            sta $01,x
0026EAr 2               
0026EAr 2               ; src/prelude.fth:21:8 in `0=`
0026EAr 2               @OPCODE_1179:   ; [c64_ir] JumpIf0(98)
0026EAr 2  CA               dex
0026EBr 2  CA               dex
0026ECr 2  B5 02            lda $02,x
0026EEr 2  15 03            ora $03,x
0026F0r 2  D0 03            bne *+5
0026F2r 2  4C rr rr         jmp @target_98
0026F5r 2               
0026F5r 2               @target_97:
0026F5r 2               
0026F5r 2               ; src/prelude.fth:21:11 in `0=`
0026F5r 2               @OPCODE_1181:   ; [c64_ir] PushLiteral(0)
0026F5r 2  E8               inx
0026F6r 2  E8               inx
0026F7r 2  A9 00            lda #0
0026F9r 2  95 00            sta $00,x
0026FBr 2  A9 00            lda #0
0026FDr 2  95 01            sta $01,x
0026FFr 2               
0026FFr 2               ; src/prelude.fth:21:13 in `0=`
0026FFr 2               @OPCODE_1182:   ; [c64_ir] JumpElse(99)
0026FFr 2  4C rr rr         jmp @target_99
002702r 2               
002702r 2               @target_98:
002702r 2               
002702r 2               ; src/prelude.fth:21:18 in `0=`
002702r 2               @OPCODE_1184:   ; [c64_ir] PushLiteral(-1)
002702r 2  E8               inx
002703r 2  E8               inx
002704r 2  A9 FF            lda #255
002706r 2  95 00            sta $00,x
002708r 2  A9 FF            lda #255
00270Ar 2  95 01            sta $01,x
00270Cr 2               
00270Cr 2               ; src/prelude.fth:21:21 in `0=`
00270Cr 2               @OPCODE_1185:   ; [c64_ir] JumpTarget(98)
00270Cr 2               
00270Cr 2               @target_99:
00270Cr 2               
00270Cr 2               ; snake.pax:155:16 in `change-direction`
00270Cr 2               @OPCODE_1187:   ; [c64_ir] JumpIf0(109)
00270Cr 2  CA               dex
00270Dr 2  CA               dex
00270Er 2  B5 02            lda $02,x
002710r 2  15 03            ora $03,x
002712r 2  D0 03            bne *+5
002714r 2  4C rr rr         jmp @target_109
002717r 2               
002717r 2               @target_100:
002717r 2               
002717r 2               ; <inline>:0:0 in `main`
002717r 2               @OPCODE_1189:   ; [c64_ir] PushLiteral(7777)
002717r 2  E8               inx
002718r 2  E8               inx
002719r 2  A9 61            lda #97
00271Br 2  95 00            sta $00,x
00271Dr 2  A9 1E            lda #30
00271Fr 2  95 01            sta $01,x
002721r 2               
002721r 2               ; <inline>:0:0 in `main`
002721r 2               @OPCODE_1190:   ; [c64_ir] AltPush
002721r 2  CA               dex
002722r 2  CA               dex
002723r 2  B5 03            lda $03,x
002725r 2  48               pha
002726r 2  B5 02            lda $02,x
002728r 2  48               pha
002729r 2               
002729r 2               ; <inline>:0:0 in `main`
002729r 2               @OPCODE_1191:   ; [c64_ir] PushLiteral(7777)
002729r 2  E8               inx
00272Ar 2  E8               inx
00272Br 2  A9 61            lda #97
00272Dr 2  95 00            sta $00,x
00272Fr 2  A9 1E            lda #30
002731r 2  95 01            sta $01,x
002733r 2               
002733r 2               ; <inline>:0:0 in `main`
002733r 2               @OPCODE_1192:   ; [c64_ir] AltPush
002733r 2  CA               dex
002734r 2  CA               dex
002735r 2  B5 03            lda $03,x
002737r 2  48               pha
002738r 2  B5 02            lda $02,x
00273Ar 2  48               pha
00273Br 2               
00273Br 2               ; snake.pax:143:16 in `is-vertical`
00273Br 2               @OPCODE_1193:   ; [c64_ir] PushLiteral(-26660)
00273Br 2  E8               inx
00273Cr 2  E8               inx
00273Dr 2  A9 DC            lda #220
00273Fr 2  95 00            sta $00,x
002741r 2  A9 97            lda #151
002743r 2  95 01            sta $01,x
002745r 2               
002745r 2               ; snake.pax:143:26 in `is-vertical`
002745r 2               @OPCODE_1194:   ; [c64_ir] Load
002745r 2  A1 00            lda ($00,x)
002747r 2  95 00            sta $00,x
002749r 2  A9 00            lda #0
00274Br 2  95 01            sta $01,x
00274Dr 2               
00274Dr 2               ; src/prelude.fth:6:10 in `dup`
00274Dr 2               @OPCODE_1195:   ; [c64_ir] TempStore
00274Dr 2  CA               dex
00274Er 2  CA               dex
00274Fr 2  B5 03            lda $03,x
002751r 2  85 96            sta TEMP_PAX2
002753r 2  B5 02            lda $02,x
002755r 2  85 95            sta TEMP_PAX1
002757r 2               
002757r 2               ; src/prelude.fth:6:16 in `dup`
002757r 2               @OPCODE_1196:   ; [c64_ir] TempLoad
002757r 2  E8               inx
002758r 2  E8               inx
002759r 2  A5 95            lda TEMP_PAX1
00275Br 2  95 00            sta $00,x
00275Dr 2  A5 96            lda TEMP_PAX2
00275Fr 2  95 01            sta $01,x
002761r 2               
002761r 2               ; src/prelude.fth:6:22 in `dup`
002761r 2               @OPCODE_1197:   ; [c64_ir] TempLoad
002761r 2  E8               inx
002762r 2  E8               inx
002763r 2  A5 95            lda TEMP_PAX1
002765r 2  95 00            sta $00,x
002767r 2  A5 96            lda TEMP_PAX2
002769r 2  95 01            sta $01,x
00276Br 2               
00276Br 2               ; snake.pax:144:3 in `is-vertical`
00276Br 2               @OPCODE_1198:   ; [c64_ir] PushLiteral(38)
00276Br 2  E8               inx
00276Cr 2  E8               inx
00276Dr 2  A9 26            lda #38
00276Fr 2  95 00            sta $00,x
002771r 2  A9 00            lda #0
002773r 2  95 01            sta $01,x
002775r 2               
002775r 2               ; src/prelude.fth:14:12 in `invert`
002775r 2               @OPCODE_1199:   ; [c64_ir] PushLiteral(-1)
002775r 2  E8               inx
002776r 2  E8               inx
002777r 2  A9 FF            lda #255
002779r 2  95 00            sta $00,x
00277Br 2  A9 FF            lda #255
00277Dr 2  95 01            sta $01,x
00277Fr 2               
00277Fr 2               ; src/prelude.fth:14:15 in `invert`
00277Fr 2               @OPCODE_1200:   ; [c64_ir] Nand
00277Fr 2                   ; 26
00277Fr 2  CA               dex
002780r 2  CA               dex
002781r 2  B5 00            lda $00,x
002783r 2  35 02            and $02,x
002785r 2  49 FF            eor #$ff
002787r 2  95 00            sta $00,x
002789r 2  B5 01            lda $01,x
00278Br 2  35 03            and $03,x
00278Dr 2  49 FF            eor #$ff
00278Fr 2  95 01            sta $01,x
002791r 2               
002791r 2               ; src/prelude.fth:15:19 in `negate`
002791r 2               @OPCODE_1201:   ; [c64_ir] PushLiteral(1)
002791r 2  E8               inx
002792r 2  E8               inx
002793r 2  A9 01            lda #1
002795r 2  95 00            sta $00,x
002797r 2  A9 00            lda #0
002799r 2  95 01            sta $01,x
00279Br 2               
00279Br 2               ; src/prelude.fth:15:21 in `negate`
00279Br 2               @OPCODE_1202:   ; [c64_ir] Add
00279Br 2                   ; 21
00279Br 2  CA               dex
00279Cr 2  CA               dex
00279Dr 2  18               clc
00279Er 2  B5 00            lda $00,x
0027A0r 2  75 02            adc $02,x
0027A2r 2  95 00            sta $00,x
0027A4r 2  B5 01            lda $01,x
0027A6r 2  75 03            adc $03,x
0027A8r 2  95 01            sta $01,x
0027AAr 2               
0027AAr 2               ; src/prelude.fth:16:19 in `-`
0027AAr 2               @OPCODE_1203:   ; [c64_ir] Add
0027AAr 2                   ; 21
0027AAr 2  CA               dex
0027ABr 2  CA               dex
0027ACr 2  18               clc
0027ADr 2  B5 00            lda $00,x
0027AFr 2  75 02            adc $02,x
0027B1r 2  95 00            sta $00,x
0027B3r 2  B5 01            lda $01,x
0027B5r 2  75 03            adc $03,x
0027B7r 2  95 01            sta $01,x
0027B9r 2               
0027B9r 2               ; src/prelude.fth:21:8 in `0=`
0027B9r 2               @OPCODE_1204:   ; [c64_ir] JumpIf0(102)
0027B9r 2  CA               dex
0027BAr 2  CA               dex
0027BBr 2  B5 02            lda $02,x
0027BDr 2  15 03            ora $03,x
0027BFr 2  D0 03            bne *+5
0027C1r 2  4C rr rr         jmp @target_102
0027C4r 2               
0027C4r 2               @target_101:
0027C4r 2               
0027C4r 2               ; src/prelude.fth:21:11 in `0=`
0027C4r 2               @OPCODE_1206:   ; [c64_ir] PushLiteral(0)
0027C4r 2  E8               inx
0027C5r 2  E8               inx
0027C6r 2  A9 00            lda #0
0027C8r 2  95 00            sta $00,x
0027CAr 2  A9 00            lda #0
0027CCr 2  95 01            sta $01,x
0027CEr 2               
0027CEr 2               ; src/prelude.fth:21:13 in `0=`
0027CEr 2               @OPCODE_1207:   ; [c64_ir] JumpElse(103)
0027CEr 2  4C rr rr         jmp @target_103
0027D1r 2               
0027D1r 2               @target_102:
0027D1r 2               
0027D1r 2               ; src/prelude.fth:21:18 in `0=`
0027D1r 2               @OPCODE_1209:   ; [c64_ir] PushLiteral(-1)
0027D1r 2  E8               inx
0027D2r 2  E8               inx
0027D3r 2  A9 FF            lda #255
0027D5r 2  95 00            sta $00,x
0027D7r 2  A9 FF            lda #255
0027D9r 2  95 01            sta $01,x
0027DBr 2               
0027DBr 2               ; src/prelude.fth:21:21 in `0=`
0027DBr 2               @OPCODE_1210:   ; [c64_ir] JumpTarget(102)
0027DBr 2               
0027DBr 2               @target_103:
0027DBr 2               
0027DBr 2               ; src/prelude.fth:3:10 in `swap`
0027DBr 2               @OPCODE_1212:   ; [c64_ir] AltPush
0027DBr 2  CA               dex
0027DCr 2  CA               dex
0027DDr 2  B5 03            lda $03,x
0027DFr 2  48               pha
0027E0r 2  B5 02            lda $02,x
0027E2r 2  48               pha
0027E3r 2               
0027E3r 2               ; src/prelude.fth:3:13 in `swap`
0027E3r 2               @OPCODE_1213:   ; [c64_ir] TempStore
0027E3r 2  CA               dex
0027E4r 2  CA               dex
0027E5r 2  B5 03            lda $03,x
0027E7r 2  85 96            sta TEMP_PAX2
0027E9r 2  B5 02            lda $02,x
0027EBr 2  85 95            sta TEMP_PAX1
0027EDr 2               
0027EDr 2               ; src/prelude.fth:3:19 in `swap`
0027EDr 2               @OPCODE_1214:   ; [c64_ir] AltPop
0027EDr 2  E8               inx
0027EEr 2  E8               inx
0027EFr 2  68               pla
0027F0r 2  95 00            sta $00,x
0027F2r 2  68               pla
0027F3r 2  95 01            sta $01,x
0027F5r 2               
0027F5r 2               ; src/prelude.fth:3:22 in `swap`
0027F5r 2               @OPCODE_1215:   ; [c64_ir] TempLoad
0027F5r 2  E8               inx
0027F6r 2  E8               inx
0027F7r 2  A5 95            lda TEMP_PAX1
0027F9r 2  95 00            sta $00,x
0027FBr 2  A5 96            lda TEMP_PAX2
0027FDr 2  95 01            sta $01,x
0027FFr 2               
0027FFr 2               ; snake.pax:145:3 in `is-vertical`
0027FFr 2               @OPCODE_1216:   ; [c64_ir] PushLiteral(40)
0027FFr 2  E8               inx
002800r 2  E8               inx
002801r 2  A9 28            lda #40
002803r 2  95 00            sta $00,x
002805r 2  A9 00            lda #0
002807r 2  95 01            sta $01,x
002809r 2               
002809r 2               ; src/prelude.fth:14:12 in `invert`
002809r 2               @OPCODE_1217:   ; [c64_ir] PushLiteral(-1)
002809r 2  E8               inx
00280Ar 2  E8               inx
00280Br 2  A9 FF            lda #255
00280Dr 2  95 00            sta $00,x
00280Fr 2  A9 FF            lda #255
002811r 2  95 01            sta $01,x
002813r 2               
002813r 2               ; src/prelude.fth:14:15 in `invert`
002813r 2               @OPCODE_1218:   ; [c64_ir] Nand
002813r 2                   ; 26
002813r 2  CA               dex
002814r 2  CA               dex
002815r 2  B5 00            lda $00,x
002817r 2  35 02            and $02,x
002819r 2  49 FF            eor #$ff
00281Br 2  95 00            sta $00,x
00281Dr 2  B5 01            lda $01,x
00281Fr 2  35 03            and $03,x
002821r 2  49 FF            eor #$ff
002823r 2  95 01            sta $01,x
002825r 2               
002825r 2               ; src/prelude.fth:15:19 in `negate`
002825r 2               @OPCODE_1219:   ; [c64_ir] PushLiteral(1)
002825r 2  E8               inx
002826r 2  E8               inx
002827r 2  A9 01            lda #1
002829r 2  95 00            sta $00,x
00282Br 2  A9 00            lda #0
00282Dr 2  95 01            sta $01,x
00282Fr 2               
00282Fr 2               ; src/prelude.fth:15:21 in `negate`
00282Fr 2               @OPCODE_1220:   ; [c64_ir] Add
00282Fr 2                   ; 21
00282Fr 2  CA               dex
002830r 2  CA               dex
002831r 2  18               clc
002832r 2  B5 00            lda $00,x
002834r 2  75 02            adc $02,x
002836r 2  95 00            sta $00,x
002838r 2  B5 01            lda $01,x
00283Ar 2  75 03            adc $03,x
00283Cr 2  95 01            sta $01,x
00283Er 2               
00283Er 2               ; src/prelude.fth:16:19 in `-`
00283Er 2               @OPCODE_1221:   ; [c64_ir] Add
00283Er 2                   ; 21
00283Er 2  CA               dex
00283Fr 2  CA               dex
002840r 2  18               clc
002841r 2  B5 00            lda $00,x
002843r 2  75 02            adc $02,x
002845r 2  95 00            sta $00,x
002847r 2  B5 01            lda $01,x
002849r 2  75 03            adc $03,x
00284Br 2  95 01            sta $01,x
00284Dr 2               
00284Dr 2               ; src/prelude.fth:21:8 in `0=`
00284Dr 2               @OPCODE_1222:   ; [c64_ir] JumpIf0(105)
00284Dr 2  CA               dex
00284Er 2  CA               dex
00284Fr 2  B5 02            lda $02,x
002851r 2  15 03            ora $03,x
002853r 2  D0 03            bne *+5
002855r 2  4C rr rr         jmp @target_105
002858r 2               
002858r 2               @target_104:
002858r 2               
002858r 2               ; src/prelude.fth:21:11 in `0=`
002858r 2               @OPCODE_1224:   ; [c64_ir] PushLiteral(0)
002858r 2  E8               inx
002859r 2  E8               inx
00285Ar 2  A9 00            lda #0
00285Cr 2  95 00            sta $00,x
00285Er 2  A9 00            lda #0
002860r 2  95 01            sta $01,x
002862r 2               
002862r 2               ; src/prelude.fth:21:13 in `0=`
002862r 2               @OPCODE_1225:   ; [c64_ir] JumpElse(106)
002862r 2  4C rr rr         jmp @target_106
002865r 2               
002865r 2               @target_105:
002865r 2               
002865r 2               ; src/prelude.fth:21:18 in `0=`
002865r 2               @OPCODE_1227:   ; [c64_ir] PushLiteral(-1)
002865r 2  E8               inx
002866r 2  E8               inx
002867r 2  A9 FF            lda #255
002869r 2  95 00            sta $00,x
00286Br 2  A9 FF            lda #255
00286Dr 2  95 01            sta $01,x
00286Fr 2               
00286Fr 2               ; src/prelude.fth:21:21 in `0=`
00286Fr 2               @OPCODE_1228:   ; [c64_ir] JumpTarget(105)
00286Fr 2               
00286Fr 2               @target_106:
00286Fr 2               
00286Fr 2               ; src/prelude.fth:14:12 in `invert`
00286Fr 2               @OPCODE_1230:   ; [c64_ir] PushLiteral(-1)
00286Fr 2  E8               inx
002870r 2  E8               inx
002871r 2  A9 FF            lda #255
002873r 2  95 00            sta $00,x
002875r 2  A9 FF            lda #255
002877r 2  95 01            sta $01,x
002879r 2               
002879r 2               ; src/prelude.fth:14:15 in `invert`
002879r 2               @OPCODE_1231:   ; [c64_ir] Nand
002879r 2                   ; 26
002879r 2  CA               dex
00287Ar 2  CA               dex
00287Br 2  B5 00            lda $00,x
00287Dr 2  35 02            and $02,x
00287Fr 2  49 FF            eor #$ff
002881r 2  95 00            sta $00,x
002883r 2  B5 01            lda $01,x
002885r 2  35 03            and $03,x
002887r 2  49 FF            eor #$ff
002889r 2  95 01            sta $01,x
00288Br 2               
00288Br 2               ; src/prelude.fth:3:10 in `swap`
00288Br 2               @OPCODE_1232:   ; [c64_ir] AltPush
00288Br 2  CA               dex
00288Cr 2  CA               dex
00288Dr 2  B5 03            lda $03,x
00288Fr 2  48               pha
002890r 2  B5 02            lda $02,x
002892r 2  48               pha
002893r 2               
002893r 2               ; src/prelude.fth:3:13 in `swap`
002893r 2               @OPCODE_1233:   ; [c64_ir] TempStore
002893r 2  CA               dex
002894r 2  CA               dex
002895r 2  B5 03            lda $03,x
002897r 2  85 96            sta TEMP_PAX2
002899r 2  B5 02            lda $02,x
00289Br 2  85 95            sta TEMP_PAX1
00289Dr 2               
00289Dr 2               ; src/prelude.fth:3:19 in `swap`
00289Dr 2               @OPCODE_1234:   ; [c64_ir] AltPop
00289Dr 2  E8               inx
00289Er 2  E8               inx
00289Fr 2  68               pla
0028A0r 2  95 00            sta $00,x
0028A2r 2  68               pla
0028A3r 2  95 01            sta $01,x
0028A5r 2               
0028A5r 2               ; src/prelude.fth:3:22 in `swap`
0028A5r 2               @OPCODE_1235:   ; [c64_ir] TempLoad
0028A5r 2  E8               inx
0028A6r 2  E8               inx
0028A7r 2  A5 95            lda TEMP_PAX1
0028A9r 2  95 00            sta $00,x
0028ABr 2  A5 96            lda TEMP_PAX2
0028ADr 2  95 01            sta $01,x
0028AFr 2               
0028AFr 2               ; src/prelude.fth:14:12 in `invert`
0028AFr 2               @OPCODE_1236:   ; [c64_ir] PushLiteral(-1)
0028AFr 2  E8               inx
0028B0r 2  E8               inx
0028B1r 2  A9 FF            lda #255
0028B3r 2  95 00            sta $00,x
0028B5r 2  A9 FF            lda #255
0028B7r 2  95 01            sta $01,x
0028B9r 2               
0028B9r 2               ; src/prelude.fth:14:15 in `invert`
0028B9r 2               @OPCODE_1237:   ; [c64_ir] Nand
0028B9r 2                   ; 26
0028B9r 2  CA               dex
0028BAr 2  CA               dex
0028BBr 2  B5 00            lda $00,x
0028BDr 2  35 02            and $02,x
0028BFr 2  49 FF            eor #$ff
0028C1r 2  95 00            sta $00,x
0028C3r 2  B5 01            lda $01,x
0028C5r 2  35 03            and $03,x
0028C7r 2  49 FF            eor #$ff
0028C9r 2  95 01            sta $01,x
0028CBr 2               
0028CBr 2               ; src/prelude.fth:26:27 in `or`
0028CBr 2               @OPCODE_1238:   ; [c64_ir] Nand
0028CBr 2                   ; 26
0028CBr 2  CA               dex
0028CCr 2  CA               dex
0028CDr 2  B5 00            lda $00,x
0028CFr 2  35 02            and $02,x
0028D1r 2  49 FF            eor #$ff
0028D3r 2  95 00            sta $00,x
0028D5r 2  B5 01            lda $01,x
0028D7r 2  35 03            and $03,x
0028D9r 2  49 FF            eor #$ff
0028DBr 2  95 01            sta $01,x
0028DDr 2               
0028DDr 2               ; <inline>:0:0 in `main`
0028DDr 2               @OPCODE_1239:   ; [c64_ir] AltPop
0028DDr 2  E8               inx
0028DEr 2  E8               inx
0028DFr 2  68               pla
0028E0r 2  95 00            sta $00,x
0028E2r 2  68               pla
0028E3r 2  95 01            sta $01,x
0028E5r 2               
0028E5r 2               ; <inline>:0:0 in `main`
0028E5r 2               @OPCODE_1240:   ; [c64_ir] Drop
0028E5r 2  CA               dex
0028E6r 2  CA               dex
0028E7r 2               
0028E7r 2               ; snake.pax:150:27 in `turn-right`
0028E7r 2               @OPCODE_1241:   ; [c64_ir] JumpIf0(108)
0028E7r 2  CA               dex
0028E8r 2  CA               dex
0028E9r 2  B5 02            lda $02,x
0028EBr 2  15 03            ora $03,x
0028EDr 2  D0 03            bne *+5
0028EFr 2  4C rr rr         jmp @target_108
0028F2r 2               
0028F2r 2               @target_107:
0028F2r 2               
0028F2r 2               ; snake.pax:150:30 in `turn-right`
0028F2r 2               @OPCODE_1243:   ; [c64_ir] PushLiteral(39)
0028F2r 2  E8               inx
0028F3r 2  E8               inx
0028F4r 2  A9 27            lda #39
0028F6r 2  95 00            sta $00,x
0028F8r 2  A9 00            lda #0
0028FAr 2  95 01            sta $01,x
0028FCr 2               
0028FCr 2               ; snake.pax:150:36 in `turn-right`
0028FCr 2               @OPCODE_1244:   ; [c64_ir] PushLiteral(-26660)
0028FCr 2  E8               inx
0028FDr 2  E8               inx
0028FEr 2  A9 DC            lda #220
002900r 2  95 00            sta $00,x
002902r 2  A9 97            lda #151
002904r 2  95 01            sta $01,x
002906r 2               
002906r 2               ; snake.pax:150:46 in `turn-right`
002906r 2               @OPCODE_1245:   ; [c64_ir] Store
002906r 2  CA               dex
002907r 2  CA               dex
002908r 2  CA               dex
002909r 2  CA               dex
00290Ar 2  B5 02            lda $02,x
00290Cr 2  81 04            sta ($04,x)
00290Er 2                   ; TODO high byte
00290Er 2               
00290Er 2               ; snake.pax:150:48 in `turn-right`
00290Er 2               @OPCODE_1246:   ; [c64_ir] JumpTarget(107)
00290Er 2               
00290Er 2               @target_108:
00290Er 2               
00290Er 2               ; <inline>:0:0 in `main`
00290Er 2               @OPCODE_1248:   ; [c64_ir] AltPop
00290Er 2  E8               inx
00290Fr 2  E8               inx
002910r 2  68               pla
002911r 2  95 00            sta $00,x
002913r 2  68               pla
002914r 2  95 01            sta $01,x
002916r 2               
002916r 2               ; <inline>:0:0 in `main`
002916r 2               @OPCODE_1249:   ; [c64_ir] Drop
002916r 2  CA               dex
002917r 2  CA               dex
002918r 2               
002918r 2               ; snake.pax:155:30 in `change-direction`
002918r 2               @OPCODE_1250:   ; [c64_ir] JumpElse(123)
002918r 2  4C rr rr         jmp @target_123
00291Br 2               
00291Br 2               @target_109:
00291Br 2               
00291Br 2               ; src/prelude.fth:4:13 in `over`
00291Br 2               @OPCODE_1252:   ; [c64_ir] TempStore
00291Br 2  CA               dex
00291Cr 2  CA               dex
00291Dr 2  B5 03            lda $03,x
00291Fr 2  85 96            sta TEMP_PAX2
002921r 2  B5 02            lda $02,x
002923r 2  85 95            sta TEMP_PAX1
002925r 2               
002925r 2               ; src/prelude.fth:4:19 in `over`
002925r 2               @OPCODE_1253:   ; [c64_ir] TempLoad
002925r 2  E8               inx
002926r 2  E8               inx
002927r 2  A5 95            lda TEMP_PAX1
002929r 2  95 00            sta $00,x
00292Br 2  A5 96            lda TEMP_PAX2
00292Dr 2  95 01            sta $01,x
00292Fr 2               
00292Fr 2               ; src/prelude.fth:4:25 in `over`
00292Fr 2               @OPCODE_1254:   ; [c64_ir] PushLiteral(40)
00292Fr 2  E8               inx
002930r 2  E8               inx
002931r 2  A9 28            lda #40
002933r 2  95 00            sta $00,x
002935r 2  A9 00            lda #0
002937r 2  95 01            sta $01,x
002939r 2               
002939r 2               ; src/prelude.fth:4:28 in `over`
002939r 2               @OPCODE_1255:   ; [c64_ir] TempLoad
002939r 2  E8               inx
00293Ar 2  E8               inx
00293Br 2  A5 95            lda TEMP_PAX1
00293Dr 2  95 00            sta $00,x
00293Fr 2  A5 96            lda TEMP_PAX2
002941r 2  95 01            sta $01,x
002943r 2               
002943r 2               ; src/prelude.fth:14:12 in `invert`
002943r 2               @OPCODE_1256:   ; [c64_ir] PushLiteral(-1)
002943r 2  E8               inx
002944r 2  E8               inx
002945r 2  A9 FF            lda #255
002947r 2  95 00            sta $00,x
002949r 2  A9 FF            lda #255
00294Br 2  95 01            sta $01,x
00294Dr 2               
00294Dr 2               ; src/prelude.fth:14:15 in `invert`
00294Dr 2               @OPCODE_1257:   ; [c64_ir] Nand
00294Dr 2                   ; 26
00294Dr 2  CA               dex
00294Er 2  CA               dex
00294Fr 2  B5 00            lda $00,x
002951r 2  35 02            and $02,x
002953r 2  49 FF            eor #$ff
002955r 2  95 00            sta $00,x
002957r 2  B5 01            lda $01,x
002959r 2  35 03            and $03,x
00295Br 2  49 FF            eor #$ff
00295Dr 2  95 01            sta $01,x
00295Fr 2               
00295Fr 2               ; src/prelude.fth:15:19 in `negate`
00295Fr 2               @OPCODE_1258:   ; [c64_ir] PushLiteral(1)
00295Fr 2  E8               inx
002960r 2  E8               inx
002961r 2  A9 01            lda #1
002963r 2  95 00            sta $00,x
002965r 2  A9 00            lda #0
002967r 2  95 01            sta $01,x
002969r 2               
002969r 2               ; src/prelude.fth:15:21 in `negate`
002969r 2               @OPCODE_1259:   ; [c64_ir] Add
002969r 2                   ; 21
002969r 2  CA               dex
00296Ar 2  CA               dex
00296Br 2  18               clc
00296Cr 2  B5 00            lda $00,x
00296Er 2  75 02            adc $02,x
002970r 2  95 00            sta $00,x
002972r 2  B5 01            lda $01,x
002974r 2  75 03            adc $03,x
002976r 2  95 01            sta $01,x
002978r 2               
002978r 2               ; src/prelude.fth:16:19 in `-`
002978r 2               @OPCODE_1260:   ; [c64_ir] Add
002978r 2                   ; 21
002978r 2  CA               dex
002979r 2  CA               dex
00297Ar 2  18               clc
00297Br 2  B5 00            lda $00,x
00297Dr 2  75 02            adc $02,x
00297Fr 2  95 00            sta $00,x
002981r 2  B5 01            lda $01,x
002983r 2  75 03            adc $03,x
002985r 2  95 01            sta $01,x
002987r 2               
002987r 2               ; src/prelude.fth:21:8 in `0=`
002987r 2               @OPCODE_1261:   ; [c64_ir] JumpIf0(111)
002987r 2  CA               dex
002988r 2  CA               dex
002989r 2  B5 02            lda $02,x
00298Br 2  15 03            ora $03,x
00298Dr 2  D0 03            bne *+5
00298Fr 2  4C rr rr         jmp @target_111
002992r 2               
002992r 2               @target_110:
002992r 2               
002992r 2               ; src/prelude.fth:21:11 in `0=`
002992r 2               @OPCODE_1263:   ; [c64_ir] PushLiteral(0)
002992r 2  E8               inx
002993r 2  E8               inx
002994r 2  A9 00            lda #0
002996r 2  95 00            sta $00,x
002998r 2  A9 00            lda #0
00299Ar 2  95 01            sta $01,x
00299Cr 2               
00299Cr 2               ; src/prelude.fth:21:13 in `0=`
00299Cr 2               @OPCODE_1264:   ; [c64_ir] JumpElse(112)
00299Cr 2  4C rr rr         jmp @target_112
00299Fr 2               
00299Fr 2               @target_111:
00299Fr 2               
00299Fr 2               ; src/prelude.fth:21:18 in `0=`
00299Fr 2               @OPCODE_1266:   ; [c64_ir] PushLiteral(-1)
00299Fr 2  E8               inx
0029A0r 2  E8               inx
0029A1r 2  A9 FF            lda #255
0029A3r 2  95 00            sta $00,x
0029A5r 2  A9 FF            lda #255
0029A7r 2  95 01            sta $01,x
0029A9r 2               
0029A9r 2               ; src/prelude.fth:21:21 in `0=`
0029A9r 2               @OPCODE_1267:   ; [c64_ir] JumpTarget(111)
0029A9r 2               
0029A9r 2               @target_112:
0029A9r 2               
0029A9r 2               ; snake.pax:156:15 in `change-direction`
0029A9r 2               @OPCODE_1269:   ; [c64_ir] JumpIf0(122)
0029A9r 2  CA               dex
0029AAr 2  CA               dex
0029ABr 2  B5 02            lda $02,x
0029ADr 2  15 03            ora $03,x
0029AFr 2  D0 03            bne *+5
0029B1r 2  4C rr rr         jmp @target_122
0029B4r 2               
0029B4r 2               @target_113:
0029B4r 2               
0029B4r 2               ; <inline>:0:0 in `main`
0029B4r 2               @OPCODE_1271:   ; [c64_ir] PushLiteral(7777)
0029B4r 2  E8               inx
0029B5r 2  E8               inx
0029B6r 2  A9 61            lda #97
0029B8r 2  95 00            sta $00,x
0029BAr 2  A9 1E            lda #30
0029BCr 2  95 01            sta $01,x
0029BEr 2               
0029BEr 2               ; <inline>:0:0 in `main`
0029BEr 2               @OPCODE_1272:   ; [c64_ir] AltPush
0029BEr 2  CA               dex
0029BFr 2  CA               dex
0029C0r 2  B5 03            lda $03,x
0029C2r 2  48               pha
0029C3r 2  B5 02            lda $02,x
0029C5r 2  48               pha
0029C6r 2               
0029C6r 2               ; <inline>:0:0 in `main`
0029C6r 2               @OPCODE_1273:   ; [c64_ir] PushLiteral(7777)
0029C6r 2  E8               inx
0029C7r 2  E8               inx
0029C8r 2  A9 61            lda #97
0029CAr 2  95 00            sta $00,x
0029CCr 2  A9 1E            lda #30
0029CEr 2  95 01            sta $01,x
0029D0r 2               
0029D0r 2               ; <inline>:0:0 in `main`
0029D0r 2               @OPCODE_1274:   ; [c64_ir] AltPush
0029D0r 2  CA               dex
0029D1r 2  CA               dex
0029D2r 2  B5 03            lda $03,x
0029D4r 2  48               pha
0029D5r 2  B5 02            lda $02,x
0029D7r 2  48               pha
0029D8r 2               
0029D8r 2               ; snake.pax:139:18 in `is-horizontal`
0029D8r 2               @OPCODE_1275:   ; [c64_ir] PushLiteral(-26660)
0029D8r 2  E8               inx
0029D9r 2  E8               inx
0029DAr 2  A9 DC            lda #220
0029DCr 2  95 00            sta $00,x
0029DEr 2  A9 97            lda #151
0029E0r 2  95 01            sta $01,x
0029E2r 2               
0029E2r 2               ; snake.pax:139:28 in `is-horizontal`
0029E2r 2               @OPCODE_1276:   ; [c64_ir] Load
0029E2r 2  A1 00            lda ($00,x)
0029E4r 2  95 00            sta $00,x
0029E6r 2  A9 00            lda #0
0029E8r 2  95 01            sta $01,x
0029EAr 2               
0029EAr 2               ; src/prelude.fth:6:10 in `dup`
0029EAr 2               @OPCODE_1277:   ; [c64_ir] TempStore
0029EAr 2  CA               dex
0029EBr 2  CA               dex
0029ECr 2  B5 03            lda $03,x
0029EEr 2  85 96            sta TEMP_PAX2
0029F0r 2  B5 02            lda $02,x
0029F2r 2  85 95            sta TEMP_PAX1
0029F4r 2               
0029F4r 2               ; src/prelude.fth:6:16 in `dup`
0029F4r 2               @OPCODE_1278:   ; [c64_ir] TempLoad
0029F4r 2  E8               inx
0029F5r 2  E8               inx
0029F6r 2  A5 95            lda TEMP_PAX1
0029F8r 2  95 00            sta $00,x
0029FAr 2  A5 96            lda TEMP_PAX2
0029FCr 2  95 01            sta $01,x
0029FEr 2               
0029FEr 2               ; src/prelude.fth:6:22 in `dup`
0029FEr 2               @OPCODE_1279:   ; [c64_ir] TempLoad
0029FEr 2  E8               inx
0029FFr 2  E8               inx
002A00r 2  A5 95            lda TEMP_PAX1
002A02r 2  95 00            sta $00,x
002A04r 2  A5 96            lda TEMP_PAX2
002A06r 2  95 01            sta $01,x
002A08r 2               
002A08r 2               ; snake.pax:140:3 in `is-horizontal`
002A08r 2               @OPCODE_1280:   ; [c64_ir] PushLiteral(37)
002A08r 2  E8               inx
002A09r 2  E8               inx
002A0Ar 2  A9 25            lda #37
002A0Cr 2  95 00            sta $00,x
002A0Er 2  A9 00            lda #0
002A10r 2  95 01            sta $01,x
002A12r 2               
002A12r 2               ; src/prelude.fth:14:12 in `invert`
002A12r 2               @OPCODE_1281:   ; [c64_ir] PushLiteral(-1)
002A12r 2  E8               inx
002A13r 2  E8               inx
002A14r 2  A9 FF            lda #255
002A16r 2  95 00            sta $00,x
002A18r 2  A9 FF            lda #255
002A1Ar 2  95 01            sta $01,x
002A1Cr 2               
002A1Cr 2               ; src/prelude.fth:14:15 in `invert`
002A1Cr 2               @OPCODE_1282:   ; [c64_ir] Nand
002A1Cr 2                   ; 26
002A1Cr 2  CA               dex
002A1Dr 2  CA               dex
002A1Er 2  B5 00            lda $00,x
002A20r 2  35 02            and $02,x
002A22r 2  49 FF            eor #$ff
002A24r 2  95 00            sta $00,x
002A26r 2  B5 01            lda $01,x
002A28r 2  35 03            and $03,x
002A2Ar 2  49 FF            eor #$ff
002A2Cr 2  95 01            sta $01,x
002A2Er 2               
002A2Er 2               ; src/prelude.fth:15:19 in `negate`
002A2Er 2               @OPCODE_1283:   ; [c64_ir] PushLiteral(1)
002A2Er 2  E8               inx
002A2Fr 2  E8               inx
002A30r 2  A9 01            lda #1
002A32r 2  95 00            sta $00,x
002A34r 2  A9 00            lda #0
002A36r 2  95 01            sta $01,x
002A38r 2               
002A38r 2               ; src/prelude.fth:15:21 in `negate`
002A38r 2               @OPCODE_1284:   ; [c64_ir] Add
002A38r 2                   ; 21
002A38r 2  CA               dex
002A39r 2  CA               dex
002A3Ar 2  18               clc
002A3Br 2  B5 00            lda $00,x
002A3Dr 2  75 02            adc $02,x
002A3Fr 2  95 00            sta $00,x
002A41r 2  B5 01            lda $01,x
002A43r 2  75 03            adc $03,x
002A45r 2  95 01            sta $01,x
002A47r 2               
002A47r 2               ; src/prelude.fth:16:19 in `-`
002A47r 2               @OPCODE_1285:   ; [c64_ir] Add
002A47r 2                   ; 21
002A47r 2  CA               dex
002A48r 2  CA               dex
002A49r 2  18               clc
002A4Ar 2  B5 00            lda $00,x
002A4Cr 2  75 02            adc $02,x
002A4Er 2  95 00            sta $00,x
002A50r 2  B5 01            lda $01,x
002A52r 2  75 03            adc $03,x
002A54r 2  95 01            sta $01,x
002A56r 2               
002A56r 2               ; src/prelude.fth:21:8 in `0=`
002A56r 2               @OPCODE_1286:   ; [c64_ir] JumpIf0(115)
002A56r 2  CA               dex
002A57r 2  CA               dex
002A58r 2  B5 02            lda $02,x
002A5Ar 2  15 03            ora $03,x
002A5Cr 2  D0 03            bne *+5
002A5Er 2  4C rr rr         jmp @target_115
002A61r 2               
002A61r 2               @target_114:
002A61r 2               
002A61r 2               ; src/prelude.fth:21:11 in `0=`
002A61r 2               @OPCODE_1288:   ; [c64_ir] PushLiteral(0)
002A61r 2  E8               inx
002A62r 2  E8               inx
002A63r 2  A9 00            lda #0
002A65r 2  95 00            sta $00,x
002A67r 2  A9 00            lda #0
002A69r 2  95 01            sta $01,x
002A6Br 2               
002A6Br 2               ; src/prelude.fth:21:13 in `0=`
002A6Br 2               @OPCODE_1289:   ; [c64_ir] JumpElse(116)
002A6Br 2  4C rr rr         jmp @target_116
002A6Er 2               
002A6Er 2               @target_115:
002A6Er 2               
002A6Er 2               ; src/prelude.fth:21:18 in `0=`
002A6Er 2               @OPCODE_1291:   ; [c64_ir] PushLiteral(-1)
002A6Er 2  E8               inx
002A6Fr 2  E8               inx
002A70r 2  A9 FF            lda #255
002A72r 2  95 00            sta $00,x
002A74r 2  A9 FF            lda #255
002A76r 2  95 01            sta $01,x
002A78r 2               
002A78r 2               ; src/prelude.fth:21:21 in `0=`
002A78r 2               @OPCODE_1292:   ; [c64_ir] JumpTarget(115)
002A78r 2               
002A78r 2               @target_116:
002A78r 2               
002A78r 2               ; src/prelude.fth:3:10 in `swap`
002A78r 2               @OPCODE_1294:   ; [c64_ir] AltPush
002A78r 2  CA               dex
002A79r 2  CA               dex
002A7Ar 2  B5 03            lda $03,x
002A7Cr 2  48               pha
002A7Dr 2  B5 02            lda $02,x
002A7Fr 2  48               pha
002A80r 2               
002A80r 2               ; src/prelude.fth:3:13 in `swap`
002A80r 2               @OPCODE_1295:   ; [c64_ir] TempStore
002A80r 2  CA               dex
002A81r 2  CA               dex
002A82r 2  B5 03            lda $03,x
002A84r 2  85 96            sta TEMP_PAX2
002A86r 2  B5 02            lda $02,x
002A88r 2  85 95            sta TEMP_PAX1
002A8Ar 2               
002A8Ar 2               ; src/prelude.fth:3:19 in `swap`
002A8Ar 2               @OPCODE_1296:   ; [c64_ir] AltPop
002A8Ar 2  E8               inx
002A8Br 2  E8               inx
002A8Cr 2  68               pla
002A8Dr 2  95 00            sta $00,x
002A8Fr 2  68               pla
002A90r 2  95 01            sta $01,x
002A92r 2               
002A92r 2               ; src/prelude.fth:3:22 in `swap`
002A92r 2               @OPCODE_1297:   ; [c64_ir] TempLoad
002A92r 2  E8               inx
002A93r 2  E8               inx
002A94r 2  A5 95            lda TEMP_PAX1
002A96r 2  95 00            sta $00,x
002A98r 2  A5 96            lda TEMP_PAX2
002A9Ar 2  95 01            sta $01,x
002A9Cr 2               
002A9Cr 2               ; snake.pax:141:3 in `is-horizontal`
002A9Cr 2               @OPCODE_1298:   ; [c64_ir] PushLiteral(39)
002A9Cr 2  E8               inx
002A9Dr 2  E8               inx
002A9Er 2  A9 27            lda #39
002AA0r 2  95 00            sta $00,x
002AA2r 2  A9 00            lda #0
002AA4r 2  95 01            sta $01,x
002AA6r 2               
002AA6r 2               ; src/prelude.fth:14:12 in `invert`
002AA6r 2               @OPCODE_1299:   ; [c64_ir] PushLiteral(-1)
002AA6r 2  E8               inx
002AA7r 2  E8               inx
002AA8r 2  A9 FF            lda #255
002AAAr 2  95 00            sta $00,x
002AACr 2  A9 FF            lda #255
002AAEr 2  95 01            sta $01,x
002AB0r 2               
002AB0r 2               ; src/prelude.fth:14:15 in `invert`
002AB0r 2               @OPCODE_1300:   ; [c64_ir] Nand
002AB0r 2                   ; 26
002AB0r 2  CA               dex
002AB1r 2  CA               dex
002AB2r 2  B5 00            lda $00,x
002AB4r 2  35 02            and $02,x
002AB6r 2  49 FF            eor #$ff
002AB8r 2  95 00            sta $00,x
002ABAr 2  B5 01            lda $01,x
002ABCr 2  35 03            and $03,x
002ABEr 2  49 FF            eor #$ff
002AC0r 2  95 01            sta $01,x
002AC2r 2               
002AC2r 2               ; src/prelude.fth:15:19 in `negate`
002AC2r 2               @OPCODE_1301:   ; [c64_ir] PushLiteral(1)
002AC2r 2  E8               inx
002AC3r 2  E8               inx
002AC4r 2  A9 01            lda #1
002AC6r 2  95 00            sta $00,x
002AC8r 2  A9 00            lda #0
002ACAr 2  95 01            sta $01,x
002ACCr 2               
002ACCr 2               ; src/prelude.fth:15:21 in `negate`
002ACCr 2               @OPCODE_1302:   ; [c64_ir] Add
002ACCr 2                   ; 21
002ACCr 2  CA               dex
002ACDr 2  CA               dex
002ACEr 2  18               clc
002ACFr 2  B5 00            lda $00,x
002AD1r 2  75 02            adc $02,x
002AD3r 2  95 00            sta $00,x
002AD5r 2  B5 01            lda $01,x
002AD7r 2  75 03            adc $03,x
002AD9r 2  95 01            sta $01,x
002ADBr 2               
002ADBr 2               ; src/prelude.fth:16:19 in `-`
002ADBr 2               @OPCODE_1303:   ; [c64_ir] Add
002ADBr 2                   ; 21
002ADBr 2  CA               dex
002ADCr 2  CA               dex
002ADDr 2  18               clc
002ADEr 2  B5 00            lda $00,x
002AE0r 2  75 02            adc $02,x
002AE2r 2  95 00            sta $00,x
002AE4r 2  B5 01            lda $01,x
002AE6r 2  75 03            adc $03,x
002AE8r 2  95 01            sta $01,x
002AEAr 2               
002AEAr 2               ; src/prelude.fth:21:8 in `0=`
002AEAr 2               @OPCODE_1304:   ; [c64_ir] JumpIf0(118)
002AEAr 2  CA               dex
002AEBr 2  CA               dex
002AECr 2  B5 02            lda $02,x
002AEEr 2  15 03            ora $03,x
002AF0r 2  D0 03            bne *+5
002AF2r 2  4C rr rr         jmp @target_118
002AF5r 2               
002AF5r 2               @target_117:
002AF5r 2               
002AF5r 2               ; src/prelude.fth:21:11 in `0=`
002AF5r 2               @OPCODE_1306:   ; [c64_ir] PushLiteral(0)
002AF5r 2  E8               inx
002AF6r 2  E8               inx
002AF7r 2  A9 00            lda #0
002AF9r 2  95 00            sta $00,x
002AFBr 2  A9 00            lda #0
002AFDr 2  95 01            sta $01,x
002AFFr 2               
002AFFr 2               ; src/prelude.fth:21:13 in `0=`
002AFFr 2               @OPCODE_1307:   ; [c64_ir] JumpElse(119)
002AFFr 2  4C rr rr         jmp @target_119
002B02r 2               
002B02r 2               @target_118:
002B02r 2               
002B02r 2               ; src/prelude.fth:21:18 in `0=`
002B02r 2               @OPCODE_1309:   ; [c64_ir] PushLiteral(-1)
002B02r 2  E8               inx
002B03r 2  E8               inx
002B04r 2  A9 FF            lda #255
002B06r 2  95 00            sta $00,x
002B08r 2  A9 FF            lda #255
002B0Ar 2  95 01            sta $01,x
002B0Cr 2               
002B0Cr 2               ; src/prelude.fth:21:21 in `0=`
002B0Cr 2               @OPCODE_1310:   ; [c64_ir] JumpTarget(118)
002B0Cr 2               
002B0Cr 2               @target_119:
002B0Cr 2               
002B0Cr 2               ; src/prelude.fth:14:12 in `invert`
002B0Cr 2               @OPCODE_1312:   ; [c64_ir] PushLiteral(-1)
002B0Cr 2  E8               inx
002B0Dr 2  E8               inx
002B0Er 2  A9 FF            lda #255
002B10r 2  95 00            sta $00,x
002B12r 2  A9 FF            lda #255
002B14r 2  95 01            sta $01,x
002B16r 2               
002B16r 2               ; src/prelude.fth:14:15 in `invert`
002B16r 2               @OPCODE_1313:   ; [c64_ir] Nand
002B16r 2                   ; 26
002B16r 2  CA               dex
002B17r 2  CA               dex
002B18r 2  B5 00            lda $00,x
002B1Ar 2  35 02            and $02,x
002B1Cr 2  49 FF            eor #$ff
002B1Er 2  95 00            sta $00,x
002B20r 2  B5 01            lda $01,x
002B22r 2  35 03            and $03,x
002B24r 2  49 FF            eor #$ff
002B26r 2  95 01            sta $01,x
002B28r 2               
002B28r 2               ; src/prelude.fth:3:10 in `swap`
002B28r 2               @OPCODE_1314:   ; [c64_ir] AltPush
002B28r 2  CA               dex
002B29r 2  CA               dex
002B2Ar 2  B5 03            lda $03,x
002B2Cr 2  48               pha
002B2Dr 2  B5 02            lda $02,x
002B2Fr 2  48               pha
002B30r 2               
002B30r 2               ; src/prelude.fth:3:13 in `swap`
002B30r 2               @OPCODE_1315:   ; [c64_ir] TempStore
002B30r 2  CA               dex
002B31r 2  CA               dex
002B32r 2  B5 03            lda $03,x
002B34r 2  85 96            sta TEMP_PAX2
002B36r 2  B5 02            lda $02,x
002B38r 2  85 95            sta TEMP_PAX1
002B3Ar 2               
002B3Ar 2               ; src/prelude.fth:3:19 in `swap`
002B3Ar 2               @OPCODE_1316:   ; [c64_ir] AltPop
002B3Ar 2  E8               inx
002B3Br 2  E8               inx
002B3Cr 2  68               pla
002B3Dr 2  95 00            sta $00,x
002B3Fr 2  68               pla
002B40r 2  95 01            sta $01,x
002B42r 2               
002B42r 2               ; src/prelude.fth:3:22 in `swap`
002B42r 2               @OPCODE_1317:   ; [c64_ir] TempLoad
002B42r 2  E8               inx
002B43r 2  E8               inx
002B44r 2  A5 95            lda TEMP_PAX1
002B46r 2  95 00            sta $00,x
002B48r 2  A5 96            lda TEMP_PAX2
002B4Ar 2  95 01            sta $01,x
002B4Cr 2               
002B4Cr 2               ; src/prelude.fth:14:12 in `invert`
002B4Cr 2               @OPCODE_1318:   ; [c64_ir] PushLiteral(-1)
002B4Cr 2  E8               inx
002B4Dr 2  E8               inx
002B4Er 2  A9 FF            lda #255
002B50r 2  95 00            sta $00,x
002B52r 2  A9 FF            lda #255
002B54r 2  95 01            sta $01,x
002B56r 2               
002B56r 2               ; src/prelude.fth:14:15 in `invert`
002B56r 2               @OPCODE_1319:   ; [c64_ir] Nand
002B56r 2                   ; 26
002B56r 2  CA               dex
002B57r 2  CA               dex
002B58r 2  B5 00            lda $00,x
002B5Ar 2  35 02            and $02,x
002B5Cr 2  49 FF            eor #$ff
002B5Er 2  95 00            sta $00,x
002B60r 2  B5 01            lda $01,x
002B62r 2  35 03            and $03,x
002B64r 2  49 FF            eor #$ff
002B66r 2  95 01            sta $01,x
002B68r 2               
002B68r 2               ; src/prelude.fth:26:27 in `or`
002B68r 2               @OPCODE_1320:   ; [c64_ir] Nand
002B68r 2                   ; 26
002B68r 2  CA               dex
002B69r 2  CA               dex
002B6Ar 2  B5 00            lda $00,x
002B6Cr 2  35 02            and $02,x
002B6Er 2  49 FF            eor #$ff
002B70r 2  95 00            sta $00,x
002B72r 2  B5 01            lda $01,x
002B74r 2  35 03            and $03,x
002B76r 2  49 FF            eor #$ff
002B78r 2  95 01            sta $01,x
002B7Ar 2               
002B7Ar 2               ; <inline>:0:0 in `main`
002B7Ar 2               @OPCODE_1321:   ; [c64_ir] AltPop
002B7Ar 2  E8               inx
002B7Br 2  E8               inx
002B7Cr 2  68               pla
002B7Dr 2  95 00            sta $00,x
002B7Fr 2  68               pla
002B80r 2  95 01            sta $01,x
002B82r 2               
002B82r 2               ; <inline>:0:0 in `main`
002B82r 2               @OPCODE_1322:   ; [c64_ir] Drop
002B82r 2  CA               dex
002B83r 2  CA               dex
002B84r 2               
002B84r 2               ; snake.pax:149:29 in `turn-down`
002B84r 2               @OPCODE_1323:   ; [c64_ir] JumpIf0(121)
002B84r 2  CA               dex
002B85r 2  CA               dex
002B86r 2  B5 02            lda $02,x
002B88r 2  15 03            ora $03,x
002B8Ar 2  D0 03            bne *+5
002B8Cr 2  4C rr rr         jmp @target_121
002B8Fr 2               
002B8Fr 2               @target_120:
002B8Fr 2               
002B8Fr 2               ; snake.pax:149:32 in `turn-down`
002B8Fr 2               @OPCODE_1325:   ; [c64_ir] PushLiteral(40)
002B8Fr 2  E8               inx
002B90r 2  E8               inx
002B91r 2  A9 28            lda #40
002B93r 2  95 00            sta $00,x
002B95r 2  A9 00            lda #0
002B97r 2  95 01            sta $01,x
002B99r 2               
002B99r 2               ; snake.pax:149:37 in `turn-down`
002B99r 2               @OPCODE_1326:   ; [c64_ir] PushLiteral(-26660)
002B99r 2  E8               inx
002B9Ar 2  E8               inx
002B9Br 2  A9 DC            lda #220
002B9Dr 2  95 00            sta $00,x
002B9Fr 2  A9 97            lda #151
002BA1r 2  95 01            sta $01,x
002BA3r 2               
002BA3r 2               ; snake.pax:149:47 in `turn-down`
002BA3r 2               @OPCODE_1327:   ; [c64_ir] Store
002BA3r 2  CA               dex
002BA4r 2  CA               dex
002BA5r 2  CA               dex
002BA6r 2  CA               dex
002BA7r 2  B5 02            lda $02,x
002BA9r 2  81 04            sta ($04,x)
002BABr 2                   ; TODO high byte
002BABr 2               
002BABr 2               ; snake.pax:149:49 in `turn-down`
002BABr 2               @OPCODE_1328:   ; [c64_ir] JumpTarget(120)
002BABr 2               
002BABr 2               @target_121:
002BABr 2               
002BABr 2               ; <inline>:0:0 in `main`
002BABr 2               @OPCODE_1330:   ; [c64_ir] AltPop
002BABr 2  E8               inx
002BACr 2  E8               inx
002BADr 2  68               pla
002BAEr 2  95 00            sta $00,x
002BB0r 2  68               pla
002BB1r 2  95 01            sta $01,x
002BB3r 2               
002BB3r 2               ; <inline>:0:0 in `main`
002BB3r 2               @OPCODE_1331:   ; [c64_ir] Drop
002BB3r 2  CA               dex
002BB4r 2  CA               dex
002BB5r 2               
002BB5r 2               ; snake.pax:157:3 in `change-direction`
002BB5r 2               @OPCODE_1332:   ; [c64_ir] JumpTarget(121)
002BB5r 2               
002BB5r 2               @target_122:
002BB5r 2               
002BB5r 2               ; snake.pax:157:8 in `change-direction`
002BB5r 2               @OPCODE_1334:   ; [c64_ir] JumpTarget(122)
002BB5r 2               
002BB5r 2               @target_123:
002BB5r 2               
002BB5r 2               ; snake.pax:157:13 in `change-direction`
002BB5r 2               @OPCODE_1336:   ; [c64_ir] JumpTarget(123)
002BB5r 2               
002BB5r 2               @target_124:
002BB5r 2               
002BB5r 2               ; snake.pax:157:18 in `change-direction`
002BB5r 2               @OPCODE_1338:   ; [c64_ir] JumpTarget(124)
002BB5r 2               
002BB5r 2               @target_125:
002BB5r 2               
002BB5r 2               ; snake.pax:157:23 in `change-direction`
002BB5r 2               @OPCODE_1340:   ; [c64_ir] Drop
002BB5r 2  CA               dex
002BB6r 2  CA               dex
002BB7r 2               
002BB7r 2               ; <inline>:0:0 in `main`
002BB7r 2               @OPCODE_1341:   ; [c64_ir] AltPop
002BB7r 2  E8               inx
002BB8r 2  E8               inx
002BB9r 2  68               pla
002BBAr 2  95 00            sta $00,x
002BBCr 2  68               pla
002BBDr 2  95 01            sta $01,x
002BBFr 2               
002BBFr 2               ; <inline>:0:0 in `main`
002BBFr 2               @OPCODE_1342:   ; [c64_ir] Drop
002BBFr 2  CA               dex
002BC0r 2  CA               dex
002BC1r 2               
002BC1r 2               ; snake.pax:161:3 in `check-input`
002BC1r 2               @OPCODE_1343:   ; [c64_ir] PushLiteral(0)
002BC1r 2  E8               inx
002BC2r 2  E8               inx
002BC3r 2  A9 00            lda #0
002BC5r 2  95 00            sta $00,x
002BC7r 2  A9 00            lda #0
002BC9r 2  95 01            sta $01,x
002BCBr 2               
002BCBr 2               ; snake.pax:161:5 in `check-input`
002BCBr 2               @OPCODE_1344:   ; [c64_ir] PushLiteral(126)
002BCBr 2  E8               inx
002BCCr 2  E8               inx
002BCDr 2  A9 7E            lda #126
002BCFr 2  95 00            sta $00,x
002BD1r 2  A9 00            lda #0
002BD3r 2  95 01            sta $01,x
002BD5r 2               
002BD5r 2               ; snake.pax:161:14 in `check-input`
002BD5r 2               @OPCODE_1345:   ; [c64_ir] Store
002BD5r 2  CA               dex
002BD6r 2  CA               dex
002BD7r 2  CA               dex
002BD8r 2  CA               dex
002BD9r 2  B5 02            lda $02,x
002BDBr 2  81 04            sta ($04,x)
002BDDr 2                   ; TODO high byte
002BDDr 2               
002BDDr 2               ; <inline>:0:0 in `main`
002BDDr 2               @OPCODE_1346:   ; [c64_ir] AltPop
002BDDr 2  E8               inx
002BDEr 2  E8               inx
002BDFr 2  68               pla
002BE0r 2  95 00            sta $00,x
002BE2r 2  68               pla
002BE3r 2  95 01            sta $01,x
002BE5r 2               
002BE5r 2               ; <inline>:0:0 in `main`
002BE5r 2               @OPCODE_1347:   ; [c64_ir] Drop
002BE5r 2  CA               dex
002BE6r 2  CA               dex
002BE7r 2               
002BE7r 2               ; <inline>:0:0 in `main`
002BE7r 2               @OPCODE_1348:   ; [c64_ir] PushLiteral(7777)
002BE7r 2  E8               inx
002BE8r 2  E8               inx
002BE9r 2  A9 61            lda #97
002BEBr 2  95 00            sta $00,x
002BEDr 2  A9 1E            lda #30
002BEFr 2  95 01            sta $01,x
002BF1r 2               
002BF1r 2               ; <inline>:0:0 in `main`
002BF1r 2               @OPCODE_1349:   ; [c64_ir] AltPush
002BF1r 2  CA               dex
002BF2r 2  CA               dex
002BF3r 2  B5 03            lda $03,x
002BF5r 2  48               pha
002BF6r 2  B5 02            lda $02,x
002BF8r 2  48               pha
002BF9r 2               
002BF9r 2               ; snake.pax:133:3 in `move-snake-tail`
002BF9r 2               @OPCODE_1350:   ; [c64_ir] PushLiteral(-1)
002BF9r 2  E8               inx
002BFAr 2  E8               inx
002BFBr 2  A9 FF            lda #255
002BFDr 2  95 00            sta $00,x
002BFFr 2  A9 FF            lda #255
002C01r 2  95 01            sta $01,x
002C03r 2               
002C03r 2               ; snake.pax:133:6 in `move-snake-tail`
002C03r 2               @OPCODE_1351:   ; [c64_ir] PushLiteral(-26658)
002C03r 2  E8               inx
002C04r 2  E8               inx
002C05r 2  A9 DE            lda #222
002C07r 2  95 00            sta $00,x
002C09r 2  A9 97            lda #151
002C0Br 2  95 01            sta $01,x
002C0Dr 2               
002C0Dr 2               ; snake.pax:133:13 in `move-snake-tail`
002C0Dr 2               @OPCODE_1352:   ; [c64_ir] Load
002C0Dr 2  A1 00            lda ($00,x)
002C0Fr 2  95 00            sta $00,x
002C11r 2  A9 00            lda #0
002C13r 2  95 01            sta $01,x
002C15r 2               
002C15r 2               ; snake.pax:133:15 in `move-snake-tail`
002C15r 2               @OPCODE_1353:   ; [c64_ir] AltPush
002C15r 2  CA               dex
002C16r 2  CA               dex
002C17r 2  B5 03            lda $03,x
002C19r 2  48               pha
002C1Ar 2  B5 02            lda $02,x
002C1Cr 2  48               pha
002C1Dr 2               
002C1Dr 2               ; snake.pax:133:15 in `move-snake-tail`
002C1Dr 2               @OPCODE_1354:   ; [c64_ir] AltPush
002C1Dr 2  CA               dex
002C1Er 2  CA               dex
002C1Fr 2  B5 03            lda $03,x
002C21r 2  48               pha
002C22r 2  B5 02            lda $02,x
002C24r 2  48               pha
002C25r 2               
002C25r 2               ; snake.pax:133:15 in `move-snake-tail`
002C25r 2               @OPCODE_1355:   ; [c64_ir] LoopTarget(125)
002C25r 2               
002C25r 2               @target_126:
002C25r 2               
002C25r 2               ; src/prelude.fth:38:8 in `i`
002C25r 2               @OPCODE_1357:   ; [c64_ir] AltPop
002C25r 2  E8               inx
002C26r 2  E8               inx
002C27r 2  68               pla
002C28r 2  95 00            sta $00,x
002C2Ar 2  68               pla
002C2Br 2  95 01            sta $01,x
002C2Dr 2               
002C2Dr 2               ; src/prelude.fth:38:11 in `i`
002C2Dr 2               @OPCODE_1358:   ; [c64_ir] AltPop
002C2Dr 2  E8               inx
002C2Er 2  E8               inx
002C2Fr 2  68               pla
002C30r 2  95 00            sta $00,x
002C32r 2  68               pla
002C33r 2  95 01            sta $01,x
002C35r 2               
002C35r 2               ; src/prelude.fth:38:14 in `i`
002C35r 2               @OPCODE_1359:   ; [c64_ir] TempStore
002C35r 2  CA               dex
002C36r 2  CA               dex
002C37r 2  B5 03            lda $03,x
002C39r 2  85 96            sta TEMP_PAX2
002C3Br 2  B5 02            lda $02,x
002C3Dr 2  85 95            sta TEMP_PAX1
002C3Fr 2               
002C3Fr 2               ; src/prelude.fth:38:20 in `i`
002C3Fr 2               @OPCODE_1360:   ; [c64_ir] TempLoad
002C3Fr 2  E8               inx
002C40r 2  E8               inx
002C41r 2  A5 95            lda TEMP_PAX1
002C43r 2  95 00            sta $00,x
002C45r 2  A5 96            lda TEMP_PAX2
002C47r 2  95 01            sta $01,x
002C49r 2               
002C49r 2               ; src/prelude.fth:38:26 in `i`
002C49r 2               @OPCODE_1361:   ; [c64_ir] AltPush
002C49r 2  CA               dex
002C4Ar 2  CA               dex
002C4Br 2  B5 03            lda $03,x
002C4Dr 2  48               pha
002C4Er 2  B5 02            lda $02,x
002C50r 2  48               pha
002C51r 2               
002C51r 2               ; src/prelude.fth:38:29 in `i`
002C51r 2               @OPCODE_1362:   ; [c64_ir] AltPush
002C51r 2  CA               dex
002C52r 2  CA               dex
002C53r 2  B5 03            lda $03,x
002C55r 2  48               pha
002C56r 2  B5 02            lda $02,x
002C58r 2  48               pha
002C59r 2               
002C59r 2               ; src/prelude.fth:38:8 in `i`
002C59r 2               @OPCODE_1363:   ; [c64_ir] AltPop
002C59r 2  E8               inx
002C5Ar 2  E8               inx
002C5Br 2  68               pla
002C5Cr 2  95 00            sta $00,x
002C5Er 2  68               pla
002C5Fr 2  95 01            sta $01,x
002C61r 2               
002C61r 2               ; src/prelude.fth:38:11 in `i`
002C61r 2               @OPCODE_1364:   ; [c64_ir] AltPop
002C61r 2  E8               inx
002C62r 2  E8               inx
002C63r 2  68               pla
002C64r 2  95 00            sta $00,x
002C66r 2  68               pla
002C67r 2  95 01            sta $01,x
002C69r 2               
002C69r 2               ; src/prelude.fth:38:14 in `i`
002C69r 2               @OPCODE_1365:   ; [c64_ir] TempStore
002C69r 2  CA               dex
002C6Ar 2  CA               dex
002C6Br 2  B5 03            lda $03,x
002C6Dr 2  85 96            sta TEMP_PAX2
002C6Fr 2  B5 02            lda $02,x
002C71r 2  85 95            sta TEMP_PAX1
002C73r 2               
002C73r 2               ; src/prelude.fth:38:20 in `i`
002C73r 2               @OPCODE_1366:   ; [c64_ir] TempLoad
002C73r 2  E8               inx
002C74r 2  E8               inx
002C75r 2  A5 95            lda TEMP_PAX1
002C77r 2  95 00            sta $00,x
002C79r 2  A5 96            lda TEMP_PAX2
002C7Br 2  95 01            sta $01,x
002C7Dr 2               
002C7Dr 2               ; src/prelude.fth:38:26 in `i`
002C7Dr 2               @OPCODE_1367:   ; [c64_ir] AltPush
002C7Dr 2  CA               dex
002C7Er 2  CA               dex
002C7Fr 2  B5 03            lda $03,x
002C81r 2  48               pha
002C82r 2  B5 02            lda $02,x
002C84r 2  48               pha
002C85r 2               
002C85r 2               ; src/prelude.fth:38:29 in `i`
002C85r 2               @OPCODE_1368:   ; [c64_ir] AltPush
002C85r 2  CA               dex
002C86r 2  CA               dex
002C87r 2  B5 03            lda $03,x
002C89r 2  48               pha
002C8Ar 2  B5 02            lda $02,x
002C8Cr 2  48               pha
002C8Dr 2               
002C8Dr 2               ; src/prelude.fth:38:35 in `i`
002C8Dr 2               @OPCODE_1369:   ; [c64_ir] TempLoad
002C8Dr 2  E8               inx
002C8Er 2  E8               inx
002C8Fr 2  A5 95            lda TEMP_PAX1
002C91r 2  95 00            sta $00,x
002C93r 2  A5 96            lda TEMP_PAX2
002C95r 2  95 01            sta $01,x
002C97r 2               
002C97r 2               ; src/prelude.fth:6:10 in `dup`
002C97r 2               @OPCODE_1370:   ; [c64_ir] TempStore
002C97r 2  CA               dex
002C98r 2  CA               dex
002C99r 2  B5 03            lda $03,x
002C9Br 2  85 96            sta TEMP_PAX2
002C9Dr 2  B5 02            lda $02,x
002C9Fr 2  85 95            sta TEMP_PAX1
002CA1r 2               
002CA1r 2               ; src/prelude.fth:6:16 in `dup`
002CA1r 2               @OPCODE_1371:   ; [c64_ir] TempLoad
002CA1r 2  E8               inx
002CA2r 2  E8               inx
002CA3r 2  A5 95            lda TEMP_PAX1
002CA5r 2  95 00            sta $00,x
002CA7r 2  A5 96            lda TEMP_PAX2
002CA9r 2  95 01            sta $01,x
002CABr 2               
002CABr 2               ; src/prelude.fth:6:22 in `dup`
002CABr 2               @OPCODE_1372:   ; [c64_ir] TempLoad
002CABr 2  E8               inx
002CACr 2  E8               inx
002CADr 2  A5 95            lda TEMP_PAX1
002CAFr 2  95 00            sta $00,x
002CB1r 2  A5 96            lda TEMP_PAX2
002CB3r 2  95 01            sta $01,x
002CB5r 2               
002CB5r 2               ; src/prelude.fth:41:13 in `cells`
002CB5r 2               @OPCODE_1373:   ; [c64_ir] Add
002CB5r 2                   ; 21
002CB5r 2  CA               dex
002CB6r 2  CA               dex
002CB7r 2  18               clc
002CB8r 2  B5 00            lda $00,x
002CBAr 2  75 02            adc $02,x
002CBCr 2  95 00            sta $00,x
002CBEr 2  B5 01            lda $01,x
002CC0r 2  75 03            adc $03,x
002CC2r 2  95 01            sta $01,x
002CC4r 2               
002CC4r 2               ; snake.pax:42:9 in `snake-x`
002CC4r 2               @OPCODE_1374:   ; [c64_ir] PushLiteral(-28668)
002CC4r 2  E8               inx
002CC5r 2  E8               inx
002CC6r 2  A9 04            lda #4
002CC8r 2  95 00            sta $00,x
002CCAr 2  A9 90            lda #144
002CCCr 2  95 01            sta $01,x
002CCEr 2               
002CCEr 2               ; snake.pax:42:22 in `snake-x`
002CCEr 2               @OPCODE_1375:   ; [c64_ir] Add
002CCEr 2                   ; 21
002CCEr 2  CA               dex
002CCFr 2  CA               dex
002CD0r 2  18               clc
002CD1r 2  B5 00            lda $00,x
002CD3r 2  75 02            adc $02,x
002CD5r 2  95 00            sta $00,x
002CD7r 2  B5 01            lda $01,x
002CD9r 2  75 03            adc $03,x
002CDBr 2  95 01            sta $01,x
002CDDr 2               
002CDDr 2               ; snake.pax:134:24 in `move-snake-tail`
002CDDr 2               @OPCODE_1376:   ; [c64_ir] Load
002CDDr 2  A1 00            lda ($00,x)
002CDFr 2  95 00            sta $00,x
002CE1r 2  A9 00            lda #0
002CE3r 2  95 01            sta $01,x
002CE5r 2               
002CE5r 2               ; src/prelude.fth:38:8 in `i`
002CE5r 2               @OPCODE_1377:   ; [c64_ir] AltPop
002CE5r 2  E8               inx
002CE6r 2  E8               inx
002CE7r 2  68               pla
002CE8r 2  95 00            sta $00,x
002CEAr 2  68               pla
002CEBr 2  95 01            sta $01,x
002CEDr 2               
002CEDr 2               ; src/prelude.fth:38:11 in `i`
002CEDr 2               @OPCODE_1378:   ; [c64_ir] AltPop
002CEDr 2  E8               inx
002CEEr 2  E8               inx
002CEFr 2  68               pla
002CF0r 2  95 00            sta $00,x
002CF2r 2  68               pla
002CF3r 2  95 01            sta $01,x
002CF5r 2               
002CF5r 2               ; src/prelude.fth:38:14 in `i`
002CF5r 2               @OPCODE_1379:   ; [c64_ir] TempStore
002CF5r 2  CA               dex
002CF6r 2  CA               dex
002CF7r 2  B5 03            lda $03,x
002CF9r 2  85 96            sta TEMP_PAX2
002CFBr 2  B5 02            lda $02,x
002CFDr 2  85 95            sta TEMP_PAX1
002CFFr 2               
002CFFr 2               ; src/prelude.fth:38:20 in `i`
002CFFr 2               @OPCODE_1380:   ; [c64_ir] TempLoad
002CFFr 2  E8               inx
002D00r 2  E8               inx
002D01r 2  A5 95            lda TEMP_PAX1
002D03r 2  95 00            sta $00,x
002D05r 2  A5 96            lda TEMP_PAX2
002D07r 2  95 01            sta $01,x
002D09r 2               
002D09r 2               ; src/prelude.fth:38:26 in `i`
002D09r 2               @OPCODE_1381:   ; [c64_ir] AltPush
002D09r 2  CA               dex
002D0Ar 2  CA               dex
002D0Br 2  B5 03            lda $03,x
002D0Dr 2  48               pha
002D0Er 2  B5 02            lda $02,x
002D10r 2  48               pha
002D11r 2               
002D11r 2               ; src/prelude.fth:38:29 in `i`
002D11r 2               @OPCODE_1382:   ; [c64_ir] AltPush
002D11r 2  CA               dex
002D12r 2  CA               dex
002D13r 2  B5 03            lda $03,x
002D15r 2  48               pha
002D16r 2  B5 02            lda $02,x
002D18r 2  48               pha
002D19r 2               
002D19r 2               ; src/prelude.fth:38:35 in `i`
002D19r 2               @OPCODE_1383:   ; [c64_ir] TempLoad
002D19r 2  E8               inx
002D1Ar 2  E8               inx
002D1Br 2  A5 95            lda TEMP_PAX1
002D1Dr 2  95 00            sta $00,x
002D1Fr 2  A5 96            lda TEMP_PAX2
002D21r 2  95 01            sta $01,x
002D23r 2               
002D23r 2               ; snake.pax:134:28 in `move-snake-tail`
002D23r 2               @OPCODE_1384:   ; [c64_ir] PushLiteral(1)
002D23r 2  E8               inx
002D24r 2  E8               inx
002D25r 2  A9 01            lda #1
002D27r 2  95 00            sta $00,x
002D29r 2  A9 00            lda #0
002D2Br 2  95 01            sta $01,x
002D2Dr 2               
002D2Dr 2               ; snake.pax:134:30 in `move-snake-tail`
002D2Dr 2               @OPCODE_1385:   ; [c64_ir] Add
002D2Dr 2                   ; 21
002D2Dr 2  CA               dex
002D2Er 2  CA               dex
002D2Fr 2  18               clc
002D30r 2  B5 00            lda $00,x
002D32r 2  75 02            adc $02,x
002D34r 2  95 00            sta $00,x
002D36r 2  B5 01            lda $01,x
002D38r 2  75 03            adc $03,x
002D3Ar 2  95 01            sta $01,x
002D3Cr 2               
002D3Cr 2               ; src/prelude.fth:6:10 in `dup`
002D3Cr 2               @OPCODE_1386:   ; [c64_ir] TempStore
002D3Cr 2  CA               dex
002D3Dr 2  CA               dex
002D3Er 2  B5 03            lda $03,x
002D40r 2  85 96            sta TEMP_PAX2
002D42r 2  B5 02            lda $02,x
002D44r 2  85 95            sta TEMP_PAX1
002D46r 2               
002D46r 2               ; src/prelude.fth:6:16 in `dup`
002D46r 2               @OPCODE_1387:   ; [c64_ir] TempLoad
002D46r 2  E8               inx
002D47r 2  E8               inx
002D48r 2  A5 95            lda TEMP_PAX1
002D4Ar 2  95 00            sta $00,x
002D4Cr 2  A5 96            lda TEMP_PAX2
002D4Er 2  95 01            sta $01,x
002D50r 2               
002D50r 2               ; src/prelude.fth:6:22 in `dup`
002D50r 2               @OPCODE_1388:   ; [c64_ir] TempLoad
002D50r 2  E8               inx
002D51r 2  E8               inx
002D52r 2  A5 95            lda TEMP_PAX1
002D54r 2  95 00            sta $00,x
002D56r 2  A5 96            lda TEMP_PAX2
002D58r 2  95 01            sta $01,x
002D5Ar 2               
002D5Ar 2               ; src/prelude.fth:41:13 in `cells`
002D5Ar 2               @OPCODE_1389:   ; [c64_ir] Add
002D5Ar 2                   ; 21
002D5Ar 2  CA               dex
002D5Br 2  CA               dex
002D5Cr 2  18               clc
002D5Dr 2  B5 00            lda $00,x
002D5Fr 2  75 02            adc $02,x
002D61r 2  95 00            sta $00,x
002D63r 2  B5 01            lda $01,x
002D65r 2  75 03            adc $03,x
002D67r 2  95 01            sta $01,x
002D69r 2               
002D69r 2               ; snake.pax:42:9 in `snake-x`
002D69r 2               @OPCODE_1390:   ; [c64_ir] PushLiteral(-28668)
002D69r 2  E8               inx
002D6Ar 2  E8               inx
002D6Br 2  A9 04            lda #4
002D6Dr 2  95 00            sta $00,x
002D6Fr 2  A9 90            lda #144
002D71r 2  95 01            sta $01,x
002D73r 2               
002D73r 2               ; snake.pax:42:22 in `snake-x`
002D73r 2               @OPCODE_1391:   ; [c64_ir] Add
002D73r 2                   ; 21
002D73r 2  CA               dex
002D74r 2  CA               dex
002D75r 2  18               clc
002D76r 2  B5 00            lda $00,x
002D78r 2  75 02            adc $02,x
002D7Ar 2  95 00            sta $00,x
002D7Cr 2  B5 01            lda $01,x
002D7Er 2  75 03            adc $03,x
002D80r 2  95 01            sta $01,x
002D82r 2               
002D82r 2               ; snake.pax:134:40 in `move-snake-tail`
002D82r 2               @OPCODE_1392:   ; [c64_ir] Store
002D82r 2  CA               dex
002D83r 2  CA               dex
002D84r 2  CA               dex
002D85r 2  CA               dex
002D86r 2  B5 02            lda $02,x
002D88r 2  81 04            sta ($04,x)
002D8Ar 2                   ; TODO high byte
002D8Ar 2               
002D8Ar 2               ; src/prelude.fth:38:8 in `i`
002D8Ar 2               @OPCODE_1393:   ; [c64_ir] AltPop
002D8Ar 2  E8               inx
002D8Br 2  E8               inx
002D8Cr 2  68               pla
002D8Dr 2  95 00            sta $00,x
002D8Fr 2  68               pla
002D90r 2  95 01            sta $01,x
002D92r 2               
002D92r 2               ; src/prelude.fth:38:11 in `i`
002D92r 2               @OPCODE_1394:   ; [c64_ir] AltPop
002D92r 2  E8               inx
002D93r 2  E8               inx
002D94r 2  68               pla
002D95r 2  95 00            sta $00,x
002D97r 2  68               pla
002D98r 2  95 01            sta $01,x
002D9Ar 2               
002D9Ar 2               ; src/prelude.fth:38:14 in `i`
002D9Ar 2               @OPCODE_1395:   ; [c64_ir] TempStore
002D9Ar 2  CA               dex
002D9Br 2  CA               dex
002D9Cr 2  B5 03            lda $03,x
002D9Er 2  85 96            sta TEMP_PAX2
002DA0r 2  B5 02            lda $02,x
002DA2r 2  85 95            sta TEMP_PAX1
002DA4r 2               
002DA4r 2               ; src/prelude.fth:38:20 in `i`
002DA4r 2               @OPCODE_1396:   ; [c64_ir] TempLoad
002DA4r 2  E8               inx
002DA5r 2  E8               inx
002DA6r 2  A5 95            lda TEMP_PAX1
002DA8r 2  95 00            sta $00,x
002DAAr 2  A5 96            lda TEMP_PAX2
002DACr 2  95 01            sta $01,x
002DAEr 2               
002DAEr 2               ; src/prelude.fth:38:26 in `i`
002DAEr 2               @OPCODE_1397:   ; [c64_ir] AltPush
002DAEr 2  CA               dex
002DAFr 2  CA               dex
002DB0r 2  B5 03            lda $03,x
002DB2r 2  48               pha
002DB3r 2  B5 02            lda $02,x
002DB5r 2  48               pha
002DB6r 2               
002DB6r 2               ; src/prelude.fth:38:29 in `i`
002DB6r 2               @OPCODE_1398:   ; [c64_ir] AltPush
002DB6r 2  CA               dex
002DB7r 2  CA               dex
002DB8r 2  B5 03            lda $03,x
002DBAr 2  48               pha
002DBBr 2  B5 02            lda $02,x
002DBDr 2  48               pha
002DBEr 2               
002DBEr 2               ; src/prelude.fth:38:35 in `i`
002DBEr 2               @OPCODE_1399:   ; [c64_ir] TempLoad
002DBEr 2  E8               inx
002DBFr 2  E8               inx
002DC0r 2  A5 95            lda TEMP_PAX1
002DC2r 2  95 00            sta $00,x
002DC4r 2  A5 96            lda TEMP_PAX2
002DC6r 2  95 01            sta $01,x
002DC8r 2               
002DC8r 2               ; src/prelude.fth:6:10 in `dup`
002DC8r 2               @OPCODE_1400:   ; [c64_ir] TempStore
002DC8r 2  CA               dex
002DC9r 2  CA               dex
002DCAr 2  B5 03            lda $03,x
002DCCr 2  85 96            sta TEMP_PAX2
002DCEr 2  B5 02            lda $02,x
002DD0r 2  85 95            sta TEMP_PAX1
002DD2r 2               
002DD2r 2               ; src/prelude.fth:6:16 in `dup`
002DD2r 2               @OPCODE_1401:   ; [c64_ir] TempLoad
002DD2r 2  E8               inx
002DD3r 2  E8               inx
002DD4r 2  A5 95            lda TEMP_PAX1
002DD6r 2  95 00            sta $00,x
002DD8r 2  A5 96            lda TEMP_PAX2
002DDAr 2  95 01            sta $01,x
002DDCr 2               
002DDCr 2               ; src/prelude.fth:6:22 in `dup`
002DDCr 2               @OPCODE_1402:   ; [c64_ir] TempLoad
002DDCr 2  E8               inx
002DDDr 2  E8               inx
002DDEr 2  A5 95            lda TEMP_PAX1
002DE0r 2  95 00            sta $00,x
002DE2r 2  A5 96            lda TEMP_PAX2
002DE4r 2  95 01            sta $01,x
002DE6r 2               
002DE6r 2               ; src/prelude.fth:41:13 in `cells`
002DE6r 2               @OPCODE_1403:   ; [c64_ir] Add
002DE6r 2                   ; 21
002DE6r 2  CA               dex
002DE7r 2  CA               dex
002DE8r 2  18               clc
002DE9r 2  B5 00            lda $00,x
002DEBr 2  75 02            adc $02,x
002DEDr 2  95 00            sta $00,x
002DEFr 2  B5 01            lda $01,x
002DF1r 2  75 03            adc $03,x
002DF3r 2  95 01            sta $01,x
002DF5r 2               
002DF5r 2               ; snake.pax:45:9 in `snake-y`
002DF5r 2               @OPCODE_1404:   ; [c64_ir] PushLiteral(-27666)
002DF5r 2  E8               inx
002DF6r 2  E8               inx
002DF7r 2  A9 EE            lda #238
002DF9r 2  95 00            sta $00,x
002DFBr 2  A9 93            lda #147
002DFDr 2  95 01            sta $01,x
002DFFr 2               
002DFFr 2               ; snake.pax:45:22 in `snake-y`
002DFFr 2               @OPCODE_1405:   ; [c64_ir] Add
002DFFr 2                   ; 21
002DFFr 2  CA               dex
002E00r 2  CA               dex
002E01r 2  18               clc
002E02r 2  B5 00            lda $00,x
002E04r 2  75 02            adc $02,x
002E06r 2  95 00            sta $00,x
002E08r 2  B5 01            lda $01,x
002E0Ar 2  75 03            adc $03,x
002E0Cr 2  95 01            sta $01,x
002E0Er 2               
002E0Er 2               ; snake.pax:135:17 in `move-snake-tail`
002E0Er 2               @OPCODE_1406:   ; [c64_ir] Load
002E0Er 2  A1 00            lda ($00,x)
002E10r 2  95 00            sta $00,x
002E12r 2  A9 00            lda #0
002E14r 2  95 01            sta $01,x
002E16r 2               
002E16r 2               ; src/prelude.fth:38:8 in `i`
002E16r 2               @OPCODE_1407:   ; [c64_ir] AltPop
002E16r 2  E8               inx
002E17r 2  E8               inx
002E18r 2  68               pla
002E19r 2  95 00            sta $00,x
002E1Br 2  68               pla
002E1Cr 2  95 01            sta $01,x
002E1Er 2               
002E1Er 2               ; src/prelude.fth:38:11 in `i`
002E1Er 2               @OPCODE_1408:   ; [c64_ir] AltPop
002E1Er 2  E8               inx
002E1Fr 2  E8               inx
002E20r 2  68               pla
002E21r 2  95 00            sta $00,x
002E23r 2  68               pla
002E24r 2  95 01            sta $01,x
002E26r 2               
002E26r 2               ; src/prelude.fth:38:14 in `i`
002E26r 2               @OPCODE_1409:   ; [c64_ir] TempStore
002E26r 2  CA               dex
002E27r 2  CA               dex
002E28r 2  B5 03            lda $03,x
002E2Ar 2  85 96            sta TEMP_PAX2
002E2Cr 2  B5 02            lda $02,x
002E2Er 2  85 95            sta TEMP_PAX1
002E30r 2               
002E30r 2               ; src/prelude.fth:38:20 in `i`
002E30r 2               @OPCODE_1410:   ; [c64_ir] TempLoad
002E30r 2  E8               inx
002E31r 2  E8               inx
002E32r 2  A5 95            lda TEMP_PAX1
002E34r 2  95 00            sta $00,x
002E36r 2  A5 96            lda TEMP_PAX2
002E38r 2  95 01            sta $01,x
002E3Ar 2               
002E3Ar 2               ; src/prelude.fth:38:26 in `i`
002E3Ar 2               @OPCODE_1411:   ; [c64_ir] AltPush
002E3Ar 2  CA               dex
002E3Br 2  CA               dex
002E3Cr 2  B5 03            lda $03,x
002E3Er 2  48               pha
002E3Fr 2  B5 02            lda $02,x
002E41r 2  48               pha
002E42r 2               
002E42r 2               ; src/prelude.fth:38:29 in `i`
002E42r 2               @OPCODE_1412:   ; [c64_ir] AltPush
002E42r 2  CA               dex
002E43r 2  CA               dex
002E44r 2  B5 03            lda $03,x
002E46r 2  48               pha
002E47r 2  B5 02            lda $02,x
002E49r 2  48               pha
002E4Ar 2               
002E4Ar 2               ; src/prelude.fth:38:35 in `i`
002E4Ar 2               @OPCODE_1413:   ; [c64_ir] TempLoad
002E4Ar 2  E8               inx
002E4Br 2  E8               inx
002E4Cr 2  A5 95            lda TEMP_PAX1
002E4Er 2  95 00            sta $00,x
002E50r 2  A5 96            lda TEMP_PAX2
002E52r 2  95 01            sta $01,x
002E54r 2               
002E54r 2               ; snake.pax:135:21 in `move-snake-tail`
002E54r 2               @OPCODE_1414:   ; [c64_ir] PushLiteral(1)
002E54r 2  E8               inx
002E55r 2  E8               inx
002E56r 2  A9 01            lda #1
002E58r 2  95 00            sta $00,x
002E5Ar 2  A9 00            lda #0
002E5Cr 2  95 01            sta $01,x
002E5Er 2               
002E5Er 2               ; snake.pax:135:23 in `move-snake-tail`
002E5Er 2               @OPCODE_1415:   ; [c64_ir] Add
002E5Er 2                   ; 21
002E5Er 2  CA               dex
002E5Fr 2  CA               dex
002E60r 2  18               clc
002E61r 2  B5 00            lda $00,x
002E63r 2  75 02            adc $02,x
002E65r 2  95 00            sta $00,x
002E67r 2  B5 01            lda $01,x
002E69r 2  75 03            adc $03,x
002E6Br 2  95 01            sta $01,x
002E6Dr 2               
002E6Dr 2               ; src/prelude.fth:6:10 in `dup`
002E6Dr 2               @OPCODE_1416:   ; [c64_ir] TempStore
002E6Dr 2  CA               dex
002E6Er 2  CA               dex
002E6Fr 2  B5 03            lda $03,x
002E71r 2  85 96            sta TEMP_PAX2
002E73r 2  B5 02            lda $02,x
002E75r 2  85 95            sta TEMP_PAX1
002E77r 2               
002E77r 2               ; src/prelude.fth:6:16 in `dup`
002E77r 2               @OPCODE_1417:   ; [c64_ir] TempLoad
002E77r 2  E8               inx
002E78r 2  E8               inx
002E79r 2  A5 95            lda TEMP_PAX1
002E7Br 2  95 00            sta $00,x
002E7Dr 2  A5 96            lda TEMP_PAX2
002E7Fr 2  95 01            sta $01,x
002E81r 2               
002E81r 2               ; src/prelude.fth:6:22 in `dup`
002E81r 2               @OPCODE_1418:   ; [c64_ir] TempLoad
002E81r 2  E8               inx
002E82r 2  E8               inx
002E83r 2  A5 95            lda TEMP_PAX1
002E85r 2  95 00            sta $00,x
002E87r 2  A5 96            lda TEMP_PAX2
002E89r 2  95 01            sta $01,x
002E8Br 2               
002E8Br 2               ; src/prelude.fth:41:13 in `cells`
002E8Br 2               @OPCODE_1419:   ; [c64_ir] Add
002E8Br 2                   ; 21
002E8Br 2  CA               dex
002E8Cr 2  CA               dex
002E8Dr 2  18               clc
002E8Er 2  B5 00            lda $00,x
002E90r 2  75 02            adc $02,x
002E92r 2  95 00            sta $00,x
002E94r 2  B5 01            lda $01,x
002E96r 2  75 03            adc $03,x
002E98r 2  95 01            sta $01,x
002E9Ar 2               
002E9Ar 2               ; snake.pax:45:9 in `snake-y`
002E9Ar 2               @OPCODE_1420:   ; [c64_ir] PushLiteral(-27666)
002E9Ar 2  E8               inx
002E9Br 2  E8               inx
002E9Cr 2  A9 EE            lda #238
002E9Er 2  95 00            sta $00,x
002EA0r 2  A9 93            lda #147
002EA2r 2  95 01            sta $01,x
002EA4r 2               
002EA4r 2               ; snake.pax:45:22 in `snake-y`
002EA4r 2               @OPCODE_1421:   ; [c64_ir] Add
002EA4r 2                   ; 21
002EA4r 2  CA               dex
002EA5r 2  CA               dex
002EA6r 2  18               clc
002EA7r 2  B5 00            lda $00,x
002EA9r 2  75 02            adc $02,x
002EABr 2  95 00            sta $00,x
002EADr 2  B5 01            lda $01,x
002EAFr 2  75 03            adc $03,x
002EB1r 2  95 01            sta $01,x
002EB3r 2               
002EB3r 2               ; snake.pax:135:33 in `move-snake-tail`
002EB3r 2               @OPCODE_1422:   ; [c64_ir] Store
002EB3r 2  CA               dex
002EB4r 2  CA               dex
002EB5r 2  CA               dex
002EB6r 2  CA               dex
002EB7r 2  B5 02            lda $02,x
002EB9r 2  81 04            sta ($04,x)
002EBBr 2                   ; TODO high byte
002EBBr 2               
002EBBr 2               ; src/prelude.fth:35:21 in `-loopimpl`
002EBBr 2               @OPCODE_1423:   ; [c64_ir] AltPop
002EBBr 2  E8               inx
002EBCr 2  E8               inx
002EBDr 2  68               pla
002EBEr 2  95 00            sta $00,x
002EC0r 2  68               pla
002EC1r 2  95 01            sta $01,x
002EC3r 2               
002EC3r 2               ; src/prelude.fth:3:10 in `swap`
002EC3r 2               @OPCODE_1424:   ; [c64_ir] AltPush
002EC3r 2  CA               dex
002EC4r 2  CA               dex
002EC5r 2  B5 03            lda $03,x
002EC7r 2  48               pha
002EC8r 2  B5 02            lda $02,x
002ECAr 2  48               pha
002ECBr 2               
002ECBr 2               ; src/prelude.fth:3:19 in `swap`
002ECBr 2               @OPCODE_1425:   ; [c64_ir] AltPop
002ECBr 2  E8               inx
002ECCr 2  E8               inx
002ECDr 2  68               pla
002ECEr 2  95 00            sta $00,x
002ED0r 2  68               pla
002ED1r 2  95 01            sta $01,x
002ED3r 2               
002ED3r 2               ; src/prelude.fth:35:29 in `-loopimpl`
002ED3r 2               @OPCODE_1426:   ; [c64_ir] AltPop
002ED3r 2  E8               inx
002ED4r 2  E8               inx
002ED5r 2  68               pla
002ED6r 2  95 00            sta $00,x
002ED8r 2  68               pla
002ED9r 2  95 01            sta $01,x
002EDBr 2               
002EDBr 2               ; src/prelude.fth:3:10 in `swap`
002EDBr 2               @OPCODE_1427:   ; [c64_ir] AltPush
002EDBr 2  CA               dex
002EDCr 2  CA               dex
002EDDr 2  B5 03            lda $03,x
002EDFr 2  48               pha
002EE0r 2  B5 02            lda $02,x
002EE2r 2  48               pha
002EE3r 2               
002EE3r 2               ; src/prelude.fth:3:19 in `swap`
002EE3r 2               @OPCODE_1428:   ; [c64_ir] AltPop
002EE3r 2  E8               inx
002EE4r 2  E8               inx
002EE5r 2  68               pla
002EE6r 2  95 00            sta $00,x
002EE8r 2  68               pla
002EE9r 2  95 01            sta $01,x
002EEBr 2               
002EEBr 2               ; src/prelude.fth:3:22 in `swap`
002EEBr 2               @OPCODE_1429:   ; [c64_ir] PushLiteral(1)
002EEBr 2  E8               inx
002EECr 2  E8               inx
002EEDr 2  A9 01            lda #1
002EEFr 2  95 00            sta $00,x
002EF1r 2  A9 00            lda #0
002EF3r 2  95 01            sta $01,x
002EF5r 2               
002EF5r 2               ; src/prelude.fth:14:12 in `invert`
002EF5r 2               @OPCODE_1430:   ; [c64_ir] PushLiteral(-1)
002EF5r 2  E8               inx
002EF6r 2  E8               inx
002EF7r 2  A9 FF            lda #255
002EF9r 2  95 00            sta $00,x
002EFBr 2  A9 FF            lda #255
002EFDr 2  95 01            sta $01,x
002EFFr 2               
002EFFr 2               ; src/prelude.fth:14:15 in `invert`
002EFFr 2               @OPCODE_1431:   ; [c64_ir] Nand
002EFFr 2                   ; 26
002EFFr 2  CA               dex
002F00r 2  CA               dex
002F01r 2  B5 00            lda $00,x
002F03r 2  35 02            and $02,x
002F05r 2  49 FF            eor #$ff
002F07r 2  95 00            sta $00,x
002F09r 2  B5 01            lda $01,x
002F0Br 2  35 03            and $03,x
002F0Dr 2  49 FF            eor #$ff
002F0Fr 2  95 01            sta $01,x
002F11r 2               
002F11r 2               ; src/prelude.fth:15:19 in `negate`
002F11r 2               @OPCODE_1432:   ; [c64_ir] PushLiteral(1)
002F11r 2  E8               inx
002F12r 2  E8               inx
002F13r 2  A9 01            lda #1
002F15r 2  95 00            sta $00,x
002F17r 2  A9 00            lda #0
002F19r 2  95 01            sta $01,x
002F1Br 2               
002F1Br 2               ; src/prelude.fth:15:21 in `negate`
002F1Br 2               @OPCODE_1433:   ; [c64_ir] Add
002F1Br 2                   ; 21
002F1Br 2  CA               dex
002F1Cr 2  CA               dex
002F1Dr 2  18               clc
002F1Er 2  B5 00            lda $00,x
002F20r 2  75 02            adc $02,x
002F22r 2  95 00            sta $00,x
002F24r 2  B5 01            lda $01,x
002F26r 2  75 03            adc $03,x
002F28r 2  95 01            sta $01,x
002F2Ar 2               
002F2Ar 2               ; src/prelude.fth:16:19 in `-`
002F2Ar 2               @OPCODE_1434:   ; [c64_ir] Add
002F2Ar 2                   ; 21
002F2Ar 2  CA               dex
002F2Br 2  CA               dex
002F2Cr 2  18               clc
002F2Dr 2  B5 00            lda $00,x
002F2Fr 2  75 02            adc $02,x
002F31r 2  95 00            sta $00,x
002F33r 2  B5 01            lda $01,x
002F35r 2  75 03            adc $03,x
002F37r 2  95 01            sta $01,x
002F39r 2               
002F39r 2               ; src/prelude.fth:4:10 in `over`
002F39r 2               @OPCODE_1435:   ; [c64_ir] AltPush
002F39r 2  CA               dex
002F3Ar 2  CA               dex
002F3Br 2  B5 03            lda $03,x
002F3Dr 2  48               pha
002F3Er 2  B5 02            lda $02,x
002F40r 2  48               pha
002F41r 2               
002F41r 2               ; src/prelude.fth:4:13 in `over`
002F41r 2               @OPCODE_1436:   ; [c64_ir] TempStore
002F41r 2  CA               dex
002F42r 2  CA               dex
002F43r 2  B5 03            lda $03,x
002F45r 2  85 96            sta TEMP_PAX2
002F47r 2  B5 02            lda $02,x
002F49r 2  85 95            sta TEMP_PAX1
002F4Br 2               
002F4Br 2               ; src/prelude.fth:4:19 in `over`
002F4Br 2               @OPCODE_1437:   ; [c64_ir] TempLoad
002F4Br 2  E8               inx
002F4Cr 2  E8               inx
002F4Dr 2  A5 95            lda TEMP_PAX1
002F4Fr 2  95 00            sta $00,x
002F51r 2  A5 96            lda TEMP_PAX2
002F53r 2  95 01            sta $01,x
002F55r 2               
002F55r 2               ; src/prelude.fth:4:25 in `over`
002F55r 2               @OPCODE_1438:   ; [c64_ir] AltPop
002F55r 2  E8               inx
002F56r 2  E8               inx
002F57r 2  68               pla
002F58r 2  95 00            sta $00,x
002F5Ar 2  68               pla
002F5Br 2  95 01            sta $01,x
002F5Dr 2               
002F5Dr 2               ; src/prelude.fth:4:28 in `over`
002F5Dr 2               @OPCODE_1439:   ; [c64_ir] TempLoad
002F5Dr 2  E8               inx
002F5Er 2  E8               inx
002F5Fr 2  A5 95            lda TEMP_PAX1
002F61r 2  95 00            sta $00,x
002F63r 2  A5 96            lda TEMP_PAX2
002F65r 2  95 01            sta $01,x
002F67r 2               
002F67r 2               ; src/prelude.fth:4:10 in `over`
002F67r 2               @OPCODE_1440:   ; [c64_ir] AltPush
002F67r 2  CA               dex
002F68r 2  CA               dex
002F69r 2  B5 03            lda $03,x
002F6Br 2  48               pha
002F6Cr 2  B5 02            lda $02,x
002F6Er 2  48               pha
002F6Fr 2               
002F6Fr 2               ; src/prelude.fth:4:13 in `over`
002F6Fr 2               @OPCODE_1441:   ; [c64_ir] TempStore
002F6Fr 2  CA               dex
002F70r 2  CA               dex
002F71r 2  B5 03            lda $03,x
002F73r 2  85 96            sta TEMP_PAX2
002F75r 2  B5 02            lda $02,x
002F77r 2  85 95            sta TEMP_PAX1
002F79r 2               
002F79r 2               ; src/prelude.fth:4:19 in `over`
002F79r 2               @OPCODE_1442:   ; [c64_ir] TempLoad
002F79r 2  E8               inx
002F7Ar 2  E8               inx
002F7Br 2  A5 95            lda TEMP_PAX1
002F7Dr 2  95 00            sta $00,x
002F7Fr 2  A5 96            lda TEMP_PAX2
002F81r 2  95 01            sta $01,x
002F83r 2               
002F83r 2               ; src/prelude.fth:4:25 in `over`
002F83r 2               @OPCODE_1443:   ; [c64_ir] AltPop
002F83r 2  E8               inx
002F84r 2  E8               inx
002F85r 2  68               pla
002F86r 2  95 00            sta $00,x
002F88r 2  68               pla
002F89r 2  95 01            sta $01,x
002F8Br 2               
002F8Br 2               ; src/prelude.fth:4:28 in `over`
002F8Br 2               @OPCODE_1444:   ; [c64_ir] TempLoad
002F8Br 2  E8               inx
002F8Cr 2  E8               inx
002F8Dr 2  A5 95            lda TEMP_PAX1
002F8Fr 2  95 00            sta $00,x
002F91r 2  A5 96            lda TEMP_PAX2
002F93r 2  95 01            sta $01,x
002F95r 2               
002F95r 2               ; src/prelude.fth:35:44 in `-loopimpl`
002F95r 2               @OPCODE_1445:   ; [c64_ir] AltPush
002F95r 2  CA               dex
002F96r 2  CA               dex
002F97r 2  B5 03            lda $03,x
002F99r 2  48               pha
002F9Ar 2  B5 02            lda $02,x
002F9Cr 2  48               pha
002F9Dr 2               
002F9Dr 2               ; src/prelude.fth:35:47 in `-loopimpl`
002F9Dr 2               @OPCODE_1446:   ; [c64_ir] AltPush
002F9Dr 2  CA               dex
002F9Er 2  CA               dex
002F9Fr 2  B5 03            lda $03,x
002FA1r 2  48               pha
002FA2r 2  B5 02            lda $02,x
002FA4r 2  48               pha
002FA5r 2               
002FA5r 2               ; src/prelude.fth:14:12 in `invert`
002FA5r 2               @OPCODE_1447:   ; [c64_ir] PushLiteral(-1)
002FA5r 2  E8               inx
002FA6r 2  E8               inx
002FA7r 2  A9 FF            lda #255
002FA9r 2  95 00            sta $00,x
002FABr 2  A9 FF            lda #255
002FADr 2  95 01            sta $01,x
002FAFr 2               
002FAFr 2               ; src/prelude.fth:14:15 in `invert`
002FAFr 2               @OPCODE_1448:   ; [c64_ir] Nand
002FAFr 2                   ; 26
002FAFr 2  CA               dex
002FB0r 2  CA               dex
002FB1r 2  B5 00            lda $00,x
002FB3r 2  35 02            and $02,x
002FB5r 2  49 FF            eor #$ff
002FB7r 2  95 00            sta $00,x
002FB9r 2  B5 01            lda $01,x
002FBBr 2  35 03            and $03,x
002FBDr 2  49 FF            eor #$ff
002FBFr 2  95 01            sta $01,x
002FC1r 2               
002FC1r 2               ; src/prelude.fth:15:19 in `negate`
002FC1r 2               @OPCODE_1449:   ; [c64_ir] PushLiteral(1)
002FC1r 2  E8               inx
002FC2r 2  E8               inx
002FC3r 2  A9 01            lda #1
002FC5r 2  95 00            sta $00,x
002FC7r 2  A9 00            lda #0
002FC9r 2  95 01            sta $01,x
002FCBr 2               
002FCBr 2               ; src/prelude.fth:15:21 in `negate`
002FCBr 2               @OPCODE_1450:   ; [c64_ir] Add
002FCBr 2                   ; 21
002FCBr 2  CA               dex
002FCCr 2  CA               dex
002FCDr 2  18               clc
002FCEr 2  B5 00            lda $00,x
002FD0r 2  75 02            adc $02,x
002FD2r 2  95 00            sta $00,x
002FD4r 2  B5 01            lda $01,x
002FD6r 2  75 03            adc $03,x
002FD8r 2  95 01            sta $01,x
002FDAr 2               
002FDAr 2               ; src/prelude.fth:16:19 in `-`
002FDAr 2               @OPCODE_1451:   ; [c64_ir] Add
002FDAr 2                   ; 21
002FDAr 2  CA               dex
002FDBr 2  CA               dex
002FDCr 2  18               clc
002FDDr 2  B5 00            lda $00,x
002FDFr 2  75 02            adc $02,x
002FE1r 2  95 00            sta $00,x
002FE3r 2  B5 01            lda $01,x
002FE5r 2  75 03            adc $03,x
002FE7r 2  95 01            sta $01,x
002FE9r 2               
002FE9r 2               ; src/prelude.fth:21:8 in `0=`
002FE9r 2               @OPCODE_1452:   ; [c64_ir] JumpIf0(128)
002FE9r 2  CA               dex
002FEAr 2  CA               dex
002FEBr 2  B5 02            lda $02,x
002FEDr 2  15 03            ora $03,x
002FEFr 2  D0 03            bne *+5
002FF1r 2  4C rr rr         jmp @target_128
002FF4r 2               
002FF4r 2               @target_127:
002FF4r 2               
002FF4r 2               ; src/prelude.fth:21:11 in `0=`
002FF4r 2               @OPCODE_1454:   ; [c64_ir] PushLiteral(0)
002FF4r 2  E8               inx
002FF5r 2  E8               inx
002FF6r 2  A9 00            lda #0
002FF8r 2  95 00            sta $00,x
002FFAr 2  A9 00            lda #0
002FFCr 2  95 01            sta $01,x
002FFEr 2               
002FFEr 2               ; src/prelude.fth:21:13 in `0=`
002FFEr 2               @OPCODE_1455:   ; [c64_ir] JumpElse(129)
002FFEr 2  4C rr rr         jmp @target_129
003001r 2               
003001r 2               @target_128:
003001r 2               
003001r 2               ; src/prelude.fth:21:18 in `0=`
003001r 2               @OPCODE_1457:   ; [c64_ir] PushLiteral(-1)
003001r 2  E8               inx
003002r 2  E8               inx
003003r 2  A9 FF            lda #255
003005r 2  95 00            sta $00,x
003007r 2  A9 FF            lda #255
003009r 2  95 01            sta $01,x
00300Br 2               
00300Br 2               ; src/prelude.fth:21:21 in `0=`
00300Br 2               @OPCODE_1458:   ; [c64_ir] JumpTarget(128)
00300Br 2               
00300Br 2               @target_129:
00300Br 2               
00300Br 2               ; src/prelude.fth:3:10 in `swap`
00300Br 2               @OPCODE_1460:   ; [c64_ir] AltPush
00300Br 2  CA               dex
00300Cr 2  CA               dex
00300Dr 2  B5 03            lda $03,x
00300Fr 2  48               pha
003010r 2  B5 02            lda $02,x
003012r 2  48               pha
003013r 2               
003013r 2               ; src/prelude.fth:3:19 in `swap`
003013r 2               @OPCODE_1461:   ; [c64_ir] AltPop
003013r 2  E8               inx
003014r 2  E8               inx
003015r 2  68               pla
003016r 2  95 00            sta $00,x
003018r 2  68               pla
003019r 2  95 01            sta $01,x
00301Br 2               
00301Br 2               ; snake.pax:136:5 in `move-snake-tail`
00301Br 2               @OPCODE_1462:   ; [c64_ir] LoopIf0(126)
00301Br 2  CA               dex
00301Cr 2  CA               dex
00301Dr 2  B5 02            lda $02,x
00301Fr 2  15 03            ora $03,x
003021r 2  D0 03            bne *+5
003023r 2  4C rr rr         jmp @target_126
003026r 2               
003026r 2               @target_130:
003026r 2               
003026r 2               ; snake.pax:136:5 in `move-snake-tail`
003026r 2               @OPCODE_1464:   ; [c64_ir] AltPop
003026r 2  E8               inx
003027r 2  E8               inx
003028r 2  68               pla
003029r 2  95 00            sta $00,x
00302Br 2  68               pla
00302Cr 2  95 01            sta $01,x
00302Er 2               
00302Er 2               ; snake.pax:136:5 in `move-snake-tail`
00302Er 2               @OPCODE_1465:   ; [c64_ir] Drop
00302Er 2  CA               dex
00302Fr 2  CA               dex
003030r 2               
003030r 2               ; snake.pax:136:5 in `move-snake-tail`
003030r 2               @OPCODE_1466:   ; [c64_ir] AltPop
003030r 2  E8               inx
003031r 2  E8               inx
003032r 2  68               pla
003033r 2  95 00            sta $00,x
003035r 2  68               pla
003036r 2  95 01            sta $01,x
003038r 2               
003038r 2               ; snake.pax:136:5 in `move-snake-tail`
003038r 2               @OPCODE_1467:   ; [c64_ir] Drop
003038r 2  CA               dex
003039r 2  CA               dex
00303Ar 2               
00303Ar 2               ; <inline>:0:0 in `main`
00303Ar 2               @OPCODE_1468:   ; [c64_ir] AltPop
00303Ar 2  E8               inx
00303Br 2  E8               inx
00303Cr 2  68               pla
00303Dr 2  95 00            sta $00,x
00303Fr 2  68               pla
003040r 2  95 01            sta $01,x
003042r 2               
003042r 2               ; <inline>:0:0 in `main`
003042r 2               @OPCODE_1469:   ; [c64_ir] Drop
003042r 2  CA               dex
003043r 2  CA               dex
003044r 2               
003044r 2               ; <inline>:0:0 in `main`
003044r 2               @OPCODE_1470:   ; [c64_ir] PushLiteral(7777)
003044r 2  E8               inx
003045r 2  E8               inx
003046r 2  A9 61            lda #97
003048r 2  95 00            sta $00,x
00304Ar 2  A9 1E            lda #30
00304Cr 2  95 01            sta $01,x
00304Er 2               
00304Er 2               ; <inline>:0:0 in `main`
00304Er 2               @OPCODE_1471:   ; [c64_ir] AltPush
00304Er 2  CA               dex
00304Fr 2  CA               dex
003050r 2  B5 03            lda $03,x
003052r 2  48               pha
003053r 2  B5 02            lda $02,x
003055r 2  48               pha
003056r 2               
003056r 2               ; snake.pax:124:20 in `move-snake-head`
003056r 2               @OPCODE_1472:   ; [c64_ir] PushLiteral(-26660)
003056r 2  E8               inx
003057r 2  E8               inx
003058r 2  A9 DC            lda #220
00305Ar 2  95 00            sta $00,x
00305Cr 2  A9 97            lda #151
00305Er 2  95 01            sta $01,x
003060r 2               
003060r 2               ; snake.pax:124:30 in `move-snake-head`
003060r 2               @OPCODE_1473:   ; [c64_ir] Load
003060r 2  A1 00            lda ($00,x)
003062r 2  95 00            sta $00,x
003064r 2  A9 00            lda #0
003066r 2  95 01            sta $01,x
003068r 2               
003068r 2               ; src/prelude.fth:4:13 in `over`
003068r 2               @OPCODE_1474:   ; [c64_ir] TempStore
003068r 2  CA               dex
003069r 2  CA               dex
00306Ar 2  B5 03            lda $03,x
00306Cr 2  85 96            sta TEMP_PAX2
00306Er 2  B5 02            lda $02,x
003070r 2  85 95            sta TEMP_PAX1
003072r 2               
003072r 2               ; src/prelude.fth:4:19 in `over`
003072r 2               @OPCODE_1475:   ; [c64_ir] TempLoad
003072r 2  E8               inx
003073r 2  E8               inx
003074r 2  A5 95            lda TEMP_PAX1
003076r 2  95 00            sta $00,x
003078r 2  A5 96            lda TEMP_PAX2
00307Ar 2  95 01            sta $01,x
00307Cr 2               
00307Cr 2               ; src/prelude.fth:4:25 in `over`
00307Cr 2               @OPCODE_1476:   ; [c64_ir] PushLiteral(37)
00307Cr 2  E8               inx
00307Dr 2  E8               inx
00307Er 2  A9 25            lda #37
003080r 2  95 00            sta $00,x
003082r 2  A9 00            lda #0
003084r 2  95 01            sta $01,x
003086r 2               
003086r 2               ; src/prelude.fth:4:28 in `over`
003086r 2               @OPCODE_1477:   ; [c64_ir] TempLoad
003086r 2  E8               inx
003087r 2  E8               inx
003088r 2  A5 95            lda TEMP_PAX1
00308Ar 2  95 00            sta $00,x
00308Cr 2  A5 96            lda TEMP_PAX2
00308Er 2  95 01            sta $01,x
003090r 2               
003090r 2               ; src/prelude.fth:14:12 in `invert`
003090r 2               @OPCODE_1478:   ; [c64_ir] PushLiteral(-1)
003090r 2  E8               inx
003091r 2  E8               inx
003092r 2  A9 FF            lda #255
003094r 2  95 00            sta $00,x
003096r 2  A9 FF            lda #255
003098r 2  95 01            sta $01,x
00309Ar 2               
00309Ar 2               ; src/prelude.fth:14:15 in `invert`
00309Ar 2               @OPCODE_1479:   ; [c64_ir] Nand
00309Ar 2                   ; 26
00309Ar 2  CA               dex
00309Br 2  CA               dex
00309Cr 2  B5 00            lda $00,x
00309Er 2  35 02            and $02,x
0030A0r 2  49 FF            eor #$ff
0030A2r 2  95 00            sta $00,x
0030A4r 2  B5 01            lda $01,x
0030A6r 2  35 03            and $03,x
0030A8r 2  49 FF            eor #$ff
0030AAr 2  95 01            sta $01,x
0030ACr 2               
0030ACr 2               ; src/prelude.fth:15:19 in `negate`
0030ACr 2               @OPCODE_1480:   ; [c64_ir] PushLiteral(1)
0030ACr 2  E8               inx
0030ADr 2  E8               inx
0030AEr 2  A9 01            lda #1
0030B0r 2  95 00            sta $00,x
0030B2r 2  A9 00            lda #0
0030B4r 2  95 01            sta $01,x
0030B6r 2               
0030B6r 2               ; src/prelude.fth:15:21 in `negate`
0030B6r 2               @OPCODE_1481:   ; [c64_ir] Add
0030B6r 2                   ; 21
0030B6r 2  CA               dex
0030B7r 2  CA               dex
0030B8r 2  18               clc
0030B9r 2  B5 00            lda $00,x
0030BBr 2  75 02            adc $02,x
0030BDr 2  95 00            sta $00,x
0030BFr 2  B5 01            lda $01,x
0030C1r 2  75 03            adc $03,x
0030C3r 2  95 01            sta $01,x
0030C5r 2               
0030C5r 2               ; src/prelude.fth:16:19 in `-`
0030C5r 2               @OPCODE_1482:   ; [c64_ir] Add
0030C5r 2                   ; 21
0030C5r 2  CA               dex
0030C6r 2  CA               dex
0030C7r 2  18               clc
0030C8r 2  B5 00            lda $00,x
0030CAr 2  75 02            adc $02,x
0030CCr 2  95 00            sta $00,x
0030CEr 2  B5 01            lda $01,x
0030D0r 2  75 03            adc $03,x
0030D2r 2  95 01            sta $01,x
0030D4r 2               
0030D4r 2               ; src/prelude.fth:21:8 in `0=`
0030D4r 2               @OPCODE_1483:   ; [c64_ir] JumpIf0(132)
0030D4r 2  CA               dex
0030D5r 2  CA               dex
0030D6r 2  B5 02            lda $02,x
0030D8r 2  15 03            ora $03,x
0030DAr 2  D0 03            bne *+5
0030DCr 2  4C rr rr         jmp @target_132
0030DFr 2               
0030DFr 2               @target_131:
0030DFr 2               
0030DFr 2               ; src/prelude.fth:21:11 in `0=`
0030DFr 2               @OPCODE_1485:   ; [c64_ir] PushLiteral(0)
0030DFr 2  E8               inx
0030E0r 2  E8               inx
0030E1r 2  A9 00            lda #0
0030E3r 2  95 00            sta $00,x
0030E5r 2  A9 00            lda #0
0030E7r 2  95 01            sta $01,x
0030E9r 2               
0030E9r 2               ; src/prelude.fth:21:13 in `0=`
0030E9r 2               @OPCODE_1486:   ; [c64_ir] JumpElse(133)
0030E9r 2  4C rr rr         jmp @target_133
0030ECr 2               
0030ECr 2               @target_132:
0030ECr 2               
0030ECr 2               ; src/prelude.fth:21:18 in `0=`
0030ECr 2               @OPCODE_1488:   ; [c64_ir] PushLiteral(-1)
0030ECr 2  E8               inx
0030EDr 2  E8               inx
0030EEr 2  A9 FF            lda #255
0030F0r 2  95 00            sta $00,x
0030F2r 2  A9 FF            lda #255
0030F4r 2  95 01            sta $01,x
0030F6r 2               
0030F6r 2               ; src/prelude.fth:21:21 in `0=`
0030F6r 2               @OPCODE_1489:   ; [c64_ir] JumpTarget(132)
0030F6r 2               
0030F6r 2               @target_133:
0030F6r 2               
0030F6r 2               ; snake.pax:125:16 in `move-snake-head`
0030F6r 2               @OPCODE_1491:   ; [c64_ir] JumpIf0(135)
0030F6r 2  CA               dex
0030F7r 2  CA               dex
0030F8r 2  B5 02            lda $02,x
0030FAr 2  15 03            ora $03,x
0030FCr 2  D0 03            bne *+5
0030FEr 2  4C rr rr         jmp @target_135
003101r 2               
003101r 2               @target_134:
003101r 2               
003101r 2               ; snake.pax:120:14 in `move-left`
003101r 2               @OPCODE_1493:   ; [c64_ir] PushLiteral(-1)
003101r 2  E8               inx
003102r 2  E8               inx
003103r 2  A9 FF            lda #255
003105r 2  95 00            sta $00,x
003107r 2  A9 FF            lda #255
003109r 2  95 01            sta $01,x
00310Br 2               
00310Br 2               ; src/prelude.fth:6:16 in `dup`
00310Br 2               @OPCODE_1494:   ; [c64_ir] PushLiteral(-28668)
00310Br 2  E8               inx
00310Cr 2  E8               inx
00310Dr 2  A9 04            lda #4
00310Fr 2  95 00            sta $00,x
003111r 2  A9 90            lda #144
003113r 2  95 01            sta $01,x
003115r 2               
003115r 2               ; src/prelude.fth:20:15 in `+!`
003115r 2               @OPCODE_1495:   ; [c64_ir] Load
003115r 2  A1 00            lda ($00,x)
003117r 2  95 00            sta $00,x
003119r 2  A9 00            lda #0
00311Br 2  95 01            sta $01,x
00311Dr 2               
00311Dr 2               ; src/prelude.fth:20:17 in `+!`
00311Dr 2               @OPCODE_1496:   ; [c64_ir] Add
00311Dr 2                   ; 21
00311Dr 2  CA               dex
00311Er 2  CA               dex
00311Fr 2  18               clc
003120r 2  B5 00            lda $00,x
003122r 2  75 02            adc $02,x
003124r 2  95 00            sta $00,x
003126r 2  B5 01            lda $01,x
003128r 2  75 03            adc $03,x
00312Ar 2  95 01            sta $01,x
00312Cr 2               
00312Cr 2               ; src/prelude.fth:20:19 in `+!`
00312Cr 2               @OPCODE_1497:   ; [c64_ir] PushLiteral(-28668)
00312Cr 2  E8               inx
00312Dr 2  E8               inx
00312Er 2  A9 04            lda #4
003130r 2  95 00            sta $00,x
003132r 2  A9 90            lda #144
003134r 2  95 01            sta $01,x
003136r 2               
003136r 2               ; src/prelude.fth:20:22 in `+!`
003136r 2               @OPCODE_1498:   ; [c64_ir] Store
003136r 2  CA               dex
003137r 2  CA               dex
003138r 2  CA               dex
003139r 2  CA               dex
00313Ar 2  B5 02            lda $02,x
00313Cr 2  81 04            sta ($04,x)
00313Er 2                   ; TODO high byte
00313Er 2               
00313Er 2               ; snake.pax:125:29 in `move-snake-head`
00313Er 2               @OPCODE_1499:   ; [c64_ir] JumpElse(153)
00313Er 2  4C rr rr         jmp @target_153
003141r 2               
003141r 2               @target_135:
003141r 2               
003141r 2               ; src/prelude.fth:4:13 in `over`
003141r 2               @OPCODE_1501:   ; [c64_ir] TempStore
003141r 2  CA               dex
003142r 2  CA               dex
003143r 2  B5 03            lda $03,x
003145r 2  85 96            sta TEMP_PAX2
003147r 2  B5 02            lda $02,x
003149r 2  85 95            sta TEMP_PAX1
00314Br 2               
00314Br 2               ; src/prelude.fth:4:19 in `over`
00314Br 2               @OPCODE_1502:   ; [c64_ir] TempLoad
00314Br 2  E8               inx
00314Cr 2  E8               inx
00314Dr 2  A5 95            lda TEMP_PAX1
00314Fr 2  95 00            sta $00,x
003151r 2  A5 96            lda TEMP_PAX2
003153r 2  95 01            sta $01,x
003155r 2               
003155r 2               ; src/prelude.fth:4:25 in `over`
003155r 2               @OPCODE_1503:   ; [c64_ir] PushLiteral(38)
003155r 2  E8               inx
003156r 2  E8               inx
003157r 2  A9 26            lda #38
003159r 2  95 00            sta $00,x
00315Br 2  A9 00            lda #0
00315Dr 2  95 01            sta $01,x
00315Fr 2               
00315Fr 2               ; src/prelude.fth:4:28 in `over`
00315Fr 2               @OPCODE_1504:   ; [c64_ir] TempLoad
00315Fr 2  E8               inx
003160r 2  E8               inx
003161r 2  A5 95            lda TEMP_PAX1
003163r 2  95 00            sta $00,x
003165r 2  A5 96            lda TEMP_PAX2
003167r 2  95 01            sta $01,x
003169r 2               
003169r 2               ; src/prelude.fth:14:12 in `invert`
003169r 2               @OPCODE_1505:   ; [c64_ir] PushLiteral(-1)
003169r 2  E8               inx
00316Ar 2  E8               inx
00316Br 2  A9 FF            lda #255
00316Dr 2  95 00            sta $00,x
00316Fr 2  A9 FF            lda #255
003171r 2  95 01            sta $01,x
003173r 2               
003173r 2               ; src/prelude.fth:14:15 in `invert`
003173r 2               @OPCODE_1506:   ; [c64_ir] Nand
003173r 2                   ; 26
003173r 2  CA               dex
003174r 2  CA               dex
003175r 2  B5 00            lda $00,x
003177r 2  35 02            and $02,x
003179r 2  49 FF            eor #$ff
00317Br 2  95 00            sta $00,x
00317Dr 2  B5 01            lda $01,x
00317Fr 2  35 03            and $03,x
003181r 2  49 FF            eor #$ff
003183r 2  95 01            sta $01,x
003185r 2               
003185r 2               ; src/prelude.fth:15:19 in `negate`
003185r 2               @OPCODE_1507:   ; [c64_ir] PushLiteral(1)
003185r 2  E8               inx
003186r 2  E8               inx
003187r 2  A9 01            lda #1
003189r 2  95 00            sta $00,x
00318Br 2  A9 00            lda #0
00318Dr 2  95 01            sta $01,x
00318Fr 2               
00318Fr 2               ; src/prelude.fth:15:21 in `negate`
00318Fr 2               @OPCODE_1508:   ; [c64_ir] Add
00318Fr 2                   ; 21
00318Fr 2  CA               dex
003190r 2  CA               dex
003191r 2  18               clc
003192r 2  B5 00            lda $00,x
003194r 2  75 02            adc $02,x
003196r 2  95 00            sta $00,x
003198r 2  B5 01            lda $01,x
00319Ar 2  75 03            adc $03,x
00319Cr 2  95 01            sta $01,x
00319Er 2               
00319Er 2               ; src/prelude.fth:16:19 in `-`
00319Er 2               @OPCODE_1509:   ; [c64_ir] Add
00319Er 2                   ; 21
00319Er 2  CA               dex
00319Fr 2  CA               dex
0031A0r 2  18               clc
0031A1r 2  B5 00            lda $00,x
0031A3r 2  75 02            adc $02,x
0031A5r 2  95 00            sta $00,x
0031A7r 2  B5 01            lda $01,x
0031A9r 2  75 03            adc $03,x
0031ABr 2  95 01            sta $01,x
0031ADr 2               
0031ADr 2               ; src/prelude.fth:21:8 in `0=`
0031ADr 2               @OPCODE_1510:   ; [c64_ir] JumpIf0(137)
0031ADr 2  CA               dex
0031AEr 2  CA               dex
0031AFr 2  B5 02            lda $02,x
0031B1r 2  15 03            ora $03,x
0031B3r 2  D0 03            bne *+5
0031B5r 2  4C rr rr         jmp @target_137
0031B8r 2               
0031B8r 2               @target_136:
0031B8r 2               
0031B8r 2               ; src/prelude.fth:21:11 in `0=`
0031B8r 2               @OPCODE_1512:   ; [c64_ir] PushLiteral(0)
0031B8r 2  E8               inx
0031B9r 2  E8               inx
0031BAr 2  A9 00            lda #0
0031BCr 2  95 00            sta $00,x
0031BEr 2  A9 00            lda #0
0031C0r 2  95 01            sta $01,x
0031C2r 2               
0031C2r 2               ; src/prelude.fth:21:13 in `0=`
0031C2r 2               @OPCODE_1513:   ; [c64_ir] JumpElse(138)
0031C2r 2  4C rr rr         jmp @target_138
0031C5r 2               
0031C5r 2               @target_137:
0031C5r 2               
0031C5r 2               ; src/prelude.fth:21:18 in `0=`
0031C5r 2               @OPCODE_1515:   ; [c64_ir] PushLiteral(-1)
0031C5r 2  E8               inx
0031C6r 2  E8               inx
0031C7r 2  A9 FF            lda #255
0031C9r 2  95 00            sta $00,x
0031CBr 2  A9 FF            lda #255
0031CDr 2  95 01            sta $01,x
0031CFr 2               
0031CFr 2               ; src/prelude.fth:21:21 in `0=`
0031CFr 2               @OPCODE_1516:   ; [c64_ir] JumpTarget(137)
0031CFr 2               
0031CFr 2               @target_138:
0031CFr 2               
0031CFr 2               ; snake.pax:126:16 in `move-snake-head`
0031CFr 2               @OPCODE_1518:   ; [c64_ir] JumpIf0(140)
0031CFr 2  CA               dex
0031D0r 2  CA               dex
0031D1r 2  B5 02            lda $02,x
0031D3r 2  15 03            ora $03,x
0031D5r 2  D0 03            bne *+5
0031D7r 2  4C rr rr         jmp @target_140
0031DAr 2               
0031DAr 2               @target_139:
0031DAr 2               
0031DAr 2               ; snake.pax:119:12 in `move-up`
0031DAr 2               @OPCODE_1520:   ; [c64_ir] PushLiteral(-1)
0031DAr 2  E8               inx
0031DBr 2  E8               inx
0031DCr 2  A9 FF            lda #255
0031DEr 2  95 00            sta $00,x
0031E0r 2  A9 FF            lda #255
0031E2r 2  95 01            sta $01,x
0031E4r 2               
0031E4r 2               ; src/prelude.fth:6:16 in `dup`
0031E4r 2               @OPCODE_1521:   ; [c64_ir] PushLiteral(-27666)
0031E4r 2  E8               inx
0031E5r 2  E8               inx
0031E6r 2  A9 EE            lda #238
0031E8r 2  95 00            sta $00,x
0031EAr 2  A9 93            lda #147
0031ECr 2  95 01            sta $01,x
0031EEr 2               
0031EEr 2               ; src/prelude.fth:20:15 in `+!`
0031EEr 2               @OPCODE_1522:   ; [c64_ir] Load
0031EEr 2  A1 00            lda ($00,x)
0031F0r 2  95 00            sta $00,x
0031F2r 2  A9 00            lda #0
0031F4r 2  95 01            sta $01,x
0031F6r 2               
0031F6r 2               ; src/prelude.fth:20:17 in `+!`
0031F6r 2               @OPCODE_1523:   ; [c64_ir] Add
0031F6r 2                   ; 21
0031F6r 2  CA               dex
0031F7r 2  CA               dex
0031F8r 2  18               clc
0031F9r 2  B5 00            lda $00,x
0031FBr 2  75 02            adc $02,x
0031FDr 2  95 00            sta $00,x
0031FFr 2  B5 01            lda $01,x
003201r 2  75 03            adc $03,x
003203r 2  95 01            sta $01,x
003205r 2               
003205r 2               ; src/prelude.fth:20:19 in `+!`
003205r 2               @OPCODE_1524:   ; [c64_ir] PushLiteral(-27666)
003205r 2  E8               inx
003206r 2  E8               inx
003207r 2  A9 EE            lda #238
003209r 2  95 00            sta $00,x
00320Br 2  A9 93            lda #147
00320Dr 2  95 01            sta $01,x
00320Fr 2               
00320Fr 2               ; src/prelude.fth:20:22 in `+!`
00320Fr 2               @OPCODE_1525:   ; [c64_ir] Store
00320Fr 2  CA               dex
003210r 2  CA               dex
003211r 2  CA               dex
003212r 2  CA               dex
003213r 2  B5 02            lda $02,x
003215r 2  81 04            sta ($04,x)
003217r 2                   ; TODO high byte
003217r 2               
003217r 2               ; snake.pax:126:27 in `move-snake-head`
003217r 2               @OPCODE_1526:   ; [c64_ir] JumpElse(152)
003217r 2  4C rr rr         jmp @target_152
00321Ar 2               
00321Ar 2               @target_140:
00321Ar 2               
00321Ar 2               ; src/prelude.fth:4:13 in `over`
00321Ar 2               @OPCODE_1528:   ; [c64_ir] TempStore
00321Ar 2  CA               dex
00321Br 2  CA               dex
00321Cr 2  B5 03            lda $03,x
00321Er 2  85 96            sta TEMP_PAX2
003220r 2  B5 02            lda $02,x
003222r 2  85 95            sta TEMP_PAX1
003224r 2               
003224r 2               ; src/prelude.fth:4:19 in `over`
003224r 2               @OPCODE_1529:   ; [c64_ir] TempLoad
003224r 2  E8               inx
003225r 2  E8               inx
003226r 2  A5 95            lda TEMP_PAX1
003228r 2  95 00            sta $00,x
00322Ar 2  A5 96            lda TEMP_PAX2
00322Cr 2  95 01            sta $01,x
00322Er 2               
00322Er 2               ; src/prelude.fth:4:25 in `over`
00322Er 2               @OPCODE_1530:   ; [c64_ir] PushLiteral(39)
00322Er 2  E8               inx
00322Fr 2  E8               inx
003230r 2  A9 27            lda #39
003232r 2  95 00            sta $00,x
003234r 2  A9 00            lda #0
003236r 2  95 01            sta $01,x
003238r 2               
003238r 2               ; src/prelude.fth:4:28 in `over`
003238r 2               @OPCODE_1531:   ; [c64_ir] TempLoad
003238r 2  E8               inx
003239r 2  E8               inx
00323Ar 2  A5 95            lda TEMP_PAX1
00323Cr 2  95 00            sta $00,x
00323Er 2  A5 96            lda TEMP_PAX2
003240r 2  95 01            sta $01,x
003242r 2               
003242r 2               ; src/prelude.fth:14:12 in `invert`
003242r 2               @OPCODE_1532:   ; [c64_ir] PushLiteral(-1)
003242r 2  E8               inx
003243r 2  E8               inx
003244r 2  A9 FF            lda #255
003246r 2  95 00            sta $00,x
003248r 2  A9 FF            lda #255
00324Ar 2  95 01            sta $01,x
00324Cr 2               
00324Cr 2               ; src/prelude.fth:14:15 in `invert`
00324Cr 2               @OPCODE_1533:   ; [c64_ir] Nand
00324Cr 2                   ; 26
00324Cr 2  CA               dex
00324Dr 2  CA               dex
00324Er 2  B5 00            lda $00,x
003250r 2  35 02            and $02,x
003252r 2  49 FF            eor #$ff
003254r 2  95 00            sta $00,x
003256r 2  B5 01            lda $01,x
003258r 2  35 03            and $03,x
00325Ar 2  49 FF            eor #$ff
00325Cr 2  95 01            sta $01,x
00325Er 2               
00325Er 2               ; src/prelude.fth:15:19 in `negate`
00325Er 2               @OPCODE_1534:   ; [c64_ir] PushLiteral(1)
00325Er 2  E8               inx
00325Fr 2  E8               inx
003260r 2  A9 01            lda #1
003262r 2  95 00            sta $00,x
003264r 2  A9 00            lda #0
003266r 2  95 01            sta $01,x
003268r 2               
003268r 2               ; src/prelude.fth:15:21 in `negate`
003268r 2               @OPCODE_1535:   ; [c64_ir] Add
003268r 2                   ; 21
003268r 2  CA               dex
003269r 2  CA               dex
00326Ar 2  18               clc
00326Br 2  B5 00            lda $00,x
00326Dr 2  75 02            adc $02,x
00326Fr 2  95 00            sta $00,x
003271r 2  B5 01            lda $01,x
003273r 2  75 03            adc $03,x
003275r 2  95 01            sta $01,x
003277r 2               
003277r 2               ; src/prelude.fth:16:19 in `-`
003277r 2               @OPCODE_1536:   ; [c64_ir] Add
003277r 2                   ; 21
003277r 2  CA               dex
003278r 2  CA               dex
003279r 2  18               clc
00327Ar 2  B5 00            lda $00,x
00327Cr 2  75 02            adc $02,x
00327Er 2  95 00            sta $00,x
003280r 2  B5 01            lda $01,x
003282r 2  75 03            adc $03,x
003284r 2  95 01            sta $01,x
003286r 2               
003286r 2               ; src/prelude.fth:21:8 in `0=`
003286r 2               @OPCODE_1537:   ; [c64_ir] JumpIf0(142)
003286r 2  CA               dex
003287r 2  CA               dex
003288r 2  B5 02            lda $02,x
00328Ar 2  15 03            ora $03,x
00328Cr 2  D0 03            bne *+5
00328Er 2  4C rr rr         jmp @target_142
003291r 2               
003291r 2               @target_141:
003291r 2               
003291r 2               ; src/prelude.fth:21:11 in `0=`
003291r 2               @OPCODE_1539:   ; [c64_ir] PushLiteral(0)
003291r 2  E8               inx
003292r 2  E8               inx
003293r 2  A9 00            lda #0
003295r 2  95 00            sta $00,x
003297r 2  A9 00            lda #0
003299r 2  95 01            sta $01,x
00329Br 2               
00329Br 2               ; src/prelude.fth:21:13 in `0=`
00329Br 2               @OPCODE_1540:   ; [c64_ir] JumpElse(143)
00329Br 2  4C rr rr         jmp @target_143
00329Er 2               
00329Er 2               @target_142:
00329Er 2               
00329Er 2               ; src/prelude.fth:21:18 in `0=`
00329Er 2               @OPCODE_1542:   ; [c64_ir] PushLiteral(-1)
00329Er 2  E8               inx
00329Fr 2  E8               inx
0032A0r 2  A9 FF            lda #255
0032A2r 2  95 00            sta $00,x
0032A4r 2  A9 FF            lda #255
0032A6r 2  95 01            sta $01,x
0032A8r 2               
0032A8r 2               ; src/prelude.fth:21:21 in `0=`
0032A8r 2               @OPCODE_1543:   ; [c64_ir] JumpTarget(142)
0032A8r 2               
0032A8r 2               @target_143:
0032A8r 2               
0032A8r 2               ; snake.pax:127:16 in `move-snake-head`
0032A8r 2               @OPCODE_1545:   ; [c64_ir] JumpIf0(145)
0032A8r 2  CA               dex
0032A9r 2  CA               dex
0032AAr 2  B5 02            lda $02,x
0032ACr 2  15 03            ora $03,x
0032AEr 2  D0 03            bne *+5
0032B0r 2  4C rr rr         jmp @target_145
0032B3r 2               
0032B3r 2               @target_144:
0032B3r 2               
0032B3r 2               ; snake.pax:122:15 in `move-right`
0032B3r 2               @OPCODE_1547:   ; [c64_ir] PushLiteral(1)
0032B3r 2  E8               inx
0032B4r 2  E8               inx
0032B5r 2  A9 01            lda #1
0032B7r 2  95 00            sta $00,x
0032B9r 2  A9 00            lda #0
0032BBr 2  95 01            sta $01,x
0032BDr 2               
0032BDr 2               ; src/prelude.fth:6:16 in `dup`
0032BDr 2               @OPCODE_1548:   ; [c64_ir] PushLiteral(-28668)
0032BDr 2  E8               inx
0032BEr 2  E8               inx
0032BFr 2  A9 04            lda #4
0032C1r 2  95 00            sta $00,x
0032C3r 2  A9 90            lda #144
0032C5r 2  95 01            sta $01,x
0032C7r 2               
0032C7r 2               ; src/prelude.fth:20:15 in `+!`
0032C7r 2               @OPCODE_1549:   ; [c64_ir] Load
0032C7r 2  A1 00            lda ($00,x)
0032C9r 2  95 00            sta $00,x
0032CBr 2  A9 00            lda #0
0032CDr 2  95 01            sta $01,x
0032CFr 2               
0032CFr 2               ; src/prelude.fth:20:17 in `+!`
0032CFr 2               @OPCODE_1550:   ; [c64_ir] Add
0032CFr 2                   ; 21
0032CFr 2  CA               dex
0032D0r 2  CA               dex
0032D1r 2  18               clc
0032D2r 2  B5 00            lda $00,x
0032D4r 2  75 02            adc $02,x
0032D6r 2  95 00            sta $00,x
0032D8r 2  B5 01            lda $01,x
0032DAr 2  75 03            adc $03,x
0032DCr 2  95 01            sta $01,x
0032DEr 2               
0032DEr 2               ; src/prelude.fth:20:19 in `+!`
0032DEr 2               @OPCODE_1551:   ; [c64_ir] PushLiteral(-28668)
0032DEr 2  E8               inx
0032DFr 2  E8               inx
0032E0r 2  A9 04            lda #4
0032E2r 2  95 00            sta $00,x
0032E4r 2  A9 90            lda #144
0032E6r 2  95 01            sta $01,x
0032E8r 2               
0032E8r 2               ; src/prelude.fth:20:22 in `+!`
0032E8r 2               @OPCODE_1552:   ; [c64_ir] Store
0032E8r 2  CA               dex
0032E9r 2  CA               dex
0032EAr 2  CA               dex
0032EBr 2  CA               dex
0032ECr 2  B5 02            lda $02,x
0032EEr 2  81 04            sta ($04,x)
0032F0r 2                   ; TODO high byte
0032F0r 2               
0032F0r 2               ; snake.pax:127:30 in `move-snake-head`
0032F0r 2               @OPCODE_1553:   ; [c64_ir] JumpElse(151)
0032F0r 2  4C rr rr         jmp @target_151
0032F3r 2               
0032F3r 2               @target_145:
0032F3r 2               
0032F3r 2               ; src/prelude.fth:4:13 in `over`
0032F3r 2               @OPCODE_1555:   ; [c64_ir] TempStore
0032F3r 2  CA               dex
0032F4r 2  CA               dex
0032F5r 2  B5 03            lda $03,x
0032F7r 2  85 96            sta TEMP_PAX2
0032F9r 2  B5 02            lda $02,x
0032FBr 2  85 95            sta TEMP_PAX1
0032FDr 2               
0032FDr 2               ; src/prelude.fth:4:19 in `over`
0032FDr 2               @OPCODE_1556:   ; [c64_ir] TempLoad
0032FDr 2  E8               inx
0032FEr 2  E8               inx
0032FFr 2  A5 95            lda TEMP_PAX1
003301r 2  95 00            sta $00,x
003303r 2  A5 96            lda TEMP_PAX2
003305r 2  95 01            sta $01,x
003307r 2               
003307r 2               ; src/prelude.fth:4:25 in `over`
003307r 2               @OPCODE_1557:   ; [c64_ir] PushLiteral(40)
003307r 2  E8               inx
003308r 2  E8               inx
003309r 2  A9 28            lda #40
00330Br 2  95 00            sta $00,x
00330Dr 2  A9 00            lda #0
00330Fr 2  95 01            sta $01,x
003311r 2               
003311r 2               ; src/prelude.fth:4:28 in `over`
003311r 2               @OPCODE_1558:   ; [c64_ir] TempLoad
003311r 2  E8               inx
003312r 2  E8               inx
003313r 2  A5 95            lda TEMP_PAX1
003315r 2  95 00            sta $00,x
003317r 2  A5 96            lda TEMP_PAX2
003319r 2  95 01            sta $01,x
00331Br 2               
00331Br 2               ; src/prelude.fth:14:12 in `invert`
00331Br 2               @OPCODE_1559:   ; [c64_ir] PushLiteral(-1)
00331Br 2  E8               inx
00331Cr 2  E8               inx
00331Dr 2  A9 FF            lda #255
00331Fr 2  95 00            sta $00,x
003321r 2  A9 FF            lda #255
003323r 2  95 01            sta $01,x
003325r 2               
003325r 2               ; src/prelude.fth:14:15 in `invert`
003325r 2               @OPCODE_1560:   ; [c64_ir] Nand
003325r 2                   ; 26
003325r 2  CA               dex
003326r 2  CA               dex
003327r 2  B5 00            lda $00,x
003329r 2  35 02            and $02,x
00332Br 2  49 FF            eor #$ff
00332Dr 2  95 00            sta $00,x
00332Fr 2  B5 01            lda $01,x
003331r 2  35 03            and $03,x
003333r 2  49 FF            eor #$ff
003335r 2  95 01            sta $01,x
003337r 2               
003337r 2               ; src/prelude.fth:15:19 in `negate`
003337r 2               @OPCODE_1561:   ; [c64_ir] PushLiteral(1)
003337r 2  E8               inx
003338r 2  E8               inx
003339r 2  A9 01            lda #1
00333Br 2  95 00            sta $00,x
00333Dr 2  A9 00            lda #0
00333Fr 2  95 01            sta $01,x
003341r 2               
003341r 2               ; src/prelude.fth:15:21 in `negate`
003341r 2               @OPCODE_1562:   ; [c64_ir] Add
003341r 2                   ; 21
003341r 2  CA               dex
003342r 2  CA               dex
003343r 2  18               clc
003344r 2  B5 00            lda $00,x
003346r 2  75 02            adc $02,x
003348r 2  95 00            sta $00,x
00334Ar 2  B5 01            lda $01,x
00334Cr 2  75 03            adc $03,x
00334Er 2  95 01            sta $01,x
003350r 2               
003350r 2               ; src/prelude.fth:16:19 in `-`
003350r 2               @OPCODE_1563:   ; [c64_ir] Add
003350r 2                   ; 21
003350r 2  CA               dex
003351r 2  CA               dex
003352r 2  18               clc
003353r 2  B5 00            lda $00,x
003355r 2  75 02            adc $02,x
003357r 2  95 00            sta $00,x
003359r 2  B5 01            lda $01,x
00335Br 2  75 03            adc $03,x
00335Dr 2  95 01            sta $01,x
00335Fr 2               
00335Fr 2               ; src/prelude.fth:21:8 in `0=`
00335Fr 2               @OPCODE_1564:   ; [c64_ir] JumpIf0(147)
00335Fr 2  CA               dex
003360r 2  CA               dex
003361r 2  B5 02            lda $02,x
003363r 2  15 03            ora $03,x
003365r 2  D0 03            bne *+5
003367r 2  4C rr rr         jmp @target_147
00336Ar 2               
00336Ar 2               @target_146:
00336Ar 2               
00336Ar 2               ; src/prelude.fth:21:11 in `0=`
00336Ar 2               @OPCODE_1566:   ; [c64_ir] PushLiteral(0)
00336Ar 2  E8               inx
00336Br 2  E8               inx
00336Cr 2  A9 00            lda #0
00336Er 2  95 00            sta $00,x
003370r 2  A9 00            lda #0
003372r 2  95 01            sta $01,x
003374r 2               
003374r 2               ; src/prelude.fth:21:13 in `0=`
003374r 2               @OPCODE_1567:   ; [c64_ir] JumpElse(148)
003374r 2  4C rr rr         jmp @target_148
003377r 2               
003377r 2               @target_147:
003377r 2               
003377r 2               ; src/prelude.fth:21:18 in `0=`
003377r 2               @OPCODE_1569:   ; [c64_ir] PushLiteral(-1)
003377r 2  E8               inx
003378r 2  E8               inx
003379r 2  A9 FF            lda #255
00337Br 2  95 00            sta $00,x
00337Dr 2  A9 FF            lda #255
00337Fr 2  95 01            sta $01,x
003381r 2               
003381r 2               ; src/prelude.fth:21:21 in `0=`
003381r 2               @OPCODE_1570:   ; [c64_ir] JumpTarget(147)
003381r 2               
003381r 2               @target_148:
003381r 2               
003381r 2               ; snake.pax:128:16 in `move-snake-head`
003381r 2               @OPCODE_1572:   ; [c64_ir] JumpIf0(150)
003381r 2  CA               dex
003382r 2  CA               dex
003383r 2  B5 02            lda $02,x
003385r 2  15 03            ora $03,x
003387r 2  D0 03            bne *+5
003389r 2  4C rr rr         jmp @target_150
00338Cr 2               
00338Cr 2               @target_149:
00338Cr 2               
00338Cr 2               ; snake.pax:121:14 in `move-down`
00338Cr 2               @OPCODE_1574:   ; [c64_ir] PushLiteral(1)
00338Cr 2  E8               inx
00338Dr 2  E8               inx
00338Er 2  A9 01            lda #1
003390r 2  95 00            sta $00,x
003392r 2  A9 00            lda #0
003394r 2  95 01            sta $01,x
003396r 2               
003396r 2               ; src/prelude.fth:6:16 in `dup`
003396r 2               @OPCODE_1575:   ; [c64_ir] PushLiteral(-27666)
003396r 2  E8               inx
003397r 2  E8               inx
003398r 2  A9 EE            lda #238
00339Ar 2  95 00            sta $00,x
00339Cr 2  A9 93            lda #147
00339Er 2  95 01            sta $01,x
0033A0r 2               
0033A0r 2               ; src/prelude.fth:20:15 in `+!`
0033A0r 2               @OPCODE_1576:   ; [c64_ir] Load
0033A0r 2  A1 00            lda ($00,x)
0033A2r 2  95 00            sta $00,x
0033A4r 2  A9 00            lda #0
0033A6r 2  95 01            sta $01,x
0033A8r 2               
0033A8r 2               ; src/prelude.fth:20:17 in `+!`
0033A8r 2               @OPCODE_1577:   ; [c64_ir] Add
0033A8r 2                   ; 21
0033A8r 2  CA               dex
0033A9r 2  CA               dex
0033AAr 2  18               clc
0033ABr 2  B5 00            lda $00,x
0033ADr 2  75 02            adc $02,x
0033AFr 2  95 00            sta $00,x
0033B1r 2  B5 01            lda $01,x
0033B3r 2  75 03            adc $03,x
0033B5r 2  95 01            sta $01,x
0033B7r 2               
0033B7r 2               ; src/prelude.fth:20:19 in `+!`
0033B7r 2               @OPCODE_1578:   ; [c64_ir] PushLiteral(-27666)
0033B7r 2  E8               inx
0033B8r 2  E8               inx
0033B9r 2  A9 EE            lda #238
0033BBr 2  95 00            sta $00,x
0033BDr 2  A9 93            lda #147
0033BFr 2  95 01            sta $01,x
0033C1r 2               
0033C1r 2               ; src/prelude.fth:20:22 in `+!`
0033C1r 2               @OPCODE_1579:   ; [c64_ir] Store
0033C1r 2  CA               dex
0033C2r 2  CA               dex
0033C3r 2  CA               dex
0033C4r 2  CA               dex
0033C5r 2  B5 02            lda $02,x
0033C7r 2  81 04            sta ($04,x)
0033C9r 2                   ; TODO high byte
0033C9r 2               
0033C9r 2               ; snake.pax:129:3 in `move-snake-head`
0033C9r 2               @OPCODE_1580:   ; [c64_ir] JumpTarget(149)
0033C9r 2               
0033C9r 2               @target_150:
0033C9r 2               
0033C9r 2               ; snake.pax:129:8 in `move-snake-head`
0033C9r 2               @OPCODE_1582:   ; [c64_ir] JumpTarget(150)
0033C9r 2               
0033C9r 2               @target_151:
0033C9r 2               
0033C9r 2               ; snake.pax:129:13 in `move-snake-head`
0033C9r 2               @OPCODE_1584:   ; [c64_ir] JumpTarget(151)
0033C9r 2               
0033C9r 2               @target_152:
0033C9r 2               
0033C9r 2               ; snake.pax:129:18 in `move-snake-head`
0033C9r 2               @OPCODE_1586:   ; [c64_ir] JumpTarget(152)
0033C9r 2               
0033C9r 2               @target_153:
0033C9r 2               
0033C9r 2               ; snake.pax:129:23 in `move-snake-head`
0033C9r 2               @OPCODE_1588:   ; [c64_ir] Drop
0033C9r 2  CA               dex
0033CAr 2  CA               dex
0033CBr 2               
0033CBr 2               ; <inline>:0:0 in `main`
0033CBr 2               @OPCODE_1589:   ; [c64_ir] AltPop
0033CBr 2  E8               inx
0033CCr 2  E8               inx
0033CDr 2  68               pla
0033CEr 2  95 00            sta $00,x
0033D0r 2  68               pla
0033D1r 2  95 01            sta $01,x
0033D3r 2               
0033D3r 2               ; <inline>:0:0 in `main`
0033D3r 2               @OPCODE_1590:   ; [c64_ir] Drop
0033D3r 2  CA               dex
0033D4r 2  CA               dex
0033D5r 2               
0033D5r 2               ; <inline>:0:0 in `main`
0033D5r 2               @OPCODE_1591:   ; [c64_ir] PushLiteral(7777)
0033D5r 2  E8               inx
0033D6r 2  E8               inx
0033D7r 2  A9 61            lda #97
0033D9r 2  95 00            sta $00,x
0033DBr 2  A9 1E            lda #30
0033DDr 2  95 01            sta $01,x
0033DFr 2               
0033DFr 2               ; <inline>:0:0 in `main`
0033DFr 2               @OPCODE_1592:   ; [c64_ir] AltPush
0033DFr 2  CA               dex
0033E0r 2  CA               dex
0033E1r 2  B5 03            lda $03,x
0033E3r 2  48               pha
0033E4r 2  B5 02            lda $02,x
0033E6r 2  48               pha
0033E7r 2               
0033E7r 2               ; snake.pax:177:3 in `check-apple`
0033E7r 2               @OPCODE_1593:   ; [c64_ir] PushLiteral(-28668)
0033E7r 2  E8               inx
0033E8r 2  E8               inx
0033E9r 2  A9 04            lda #4
0033EBr 2  95 00            sta $00,x
0033EDr 2  A9 90            lda #144
0033EFr 2  95 01            sta $01,x
0033F1r 2               
0033F1r 2               ; snake.pax:177:16 in `check-apple`
0033F1r 2               @OPCODE_1594:   ; [c64_ir] Load
0033F1r 2  A1 00            lda ($00,x)
0033F3r 2  95 00            sta $00,x
0033F5r 2  A9 00            lda #0
0033F7r 2  95 01            sta $01,x
0033F9r 2               
0033F9r 2               ; snake.pax:177:18 in `check-apple`
0033F9r 2               @OPCODE_1595:   ; [c64_ir] PushLiteral(-26664)
0033F9r 2  E8               inx
0033FAr 2  E8               inx
0033FBr 2  A9 D8            lda #216
0033FDr 2  95 00            sta $00,x
0033FFr 2  A9 97            lda #151
003401r 2  95 01            sta $01,x
003403r 2               
003403r 2               ; snake.pax:177:26 in `check-apple`
003403r 2               @OPCODE_1596:   ; [c64_ir] Load
003403r 2  A1 00            lda ($00,x)
003405r 2  95 00            sta $00,x
003407r 2  A9 00            lda #0
003409r 2  95 01            sta $01,x
00340Br 2               
00340Br 2               ; src/prelude.fth:14:12 in `invert`
00340Br 2               @OPCODE_1597:   ; [c64_ir] PushLiteral(-1)
00340Br 2  E8               inx
00340Cr 2  E8               inx
00340Dr 2  A9 FF            lda #255
00340Fr 2  95 00            sta $00,x
003411r 2  A9 FF            lda #255
003413r 2  95 01            sta $01,x
003415r 2               
003415r 2               ; src/prelude.fth:14:15 in `invert`
003415r 2               @OPCODE_1598:   ; [c64_ir] Nand
003415r 2                   ; 26
003415r 2  CA               dex
003416r 2  CA               dex
003417r 2  B5 00            lda $00,x
003419r 2  35 02            and $02,x
00341Br 2  49 FF            eor #$ff
00341Dr 2  95 00            sta $00,x
00341Fr 2  B5 01            lda $01,x
003421r 2  35 03            and $03,x
003423r 2  49 FF            eor #$ff
003425r 2  95 01            sta $01,x
003427r 2               
003427r 2               ; src/prelude.fth:15:19 in `negate`
003427r 2               @OPCODE_1599:   ; [c64_ir] PushLiteral(1)
003427r 2  E8               inx
003428r 2  E8               inx
003429r 2  A9 01            lda #1
00342Br 2  95 00            sta $00,x
00342Dr 2  A9 00            lda #0
00342Fr 2  95 01            sta $01,x
003431r 2               
003431r 2               ; src/prelude.fth:15:21 in `negate`
003431r 2               @OPCODE_1600:   ; [c64_ir] Add
003431r 2                   ; 21
003431r 2  CA               dex
003432r 2  CA               dex
003433r 2  18               clc
003434r 2  B5 00            lda $00,x
003436r 2  75 02            adc $02,x
003438r 2  95 00            sta $00,x
00343Ar 2  B5 01            lda $01,x
00343Cr 2  75 03            adc $03,x
00343Er 2  95 01            sta $01,x
003440r 2               
003440r 2               ; src/prelude.fth:16:19 in `-`
003440r 2               @OPCODE_1601:   ; [c64_ir] Add
003440r 2                   ; 21
003440r 2  CA               dex
003441r 2  CA               dex
003442r 2  18               clc
003443r 2  B5 00            lda $00,x
003445r 2  75 02            adc $02,x
003447r 2  95 00            sta $00,x
003449r 2  B5 01            lda $01,x
00344Br 2  75 03            adc $03,x
00344Dr 2  95 01            sta $01,x
00344Fr 2               
00344Fr 2               ; src/prelude.fth:21:8 in `0=`
00344Fr 2               @OPCODE_1602:   ; [c64_ir] JumpIf0(155)
00344Fr 2  CA               dex
003450r 2  CA               dex
003451r 2  B5 02            lda $02,x
003453r 2  15 03            ora $03,x
003455r 2  D0 03            bne *+5
003457r 2  4C rr rr         jmp @target_155
00345Ar 2               
00345Ar 2               @target_154:
00345Ar 2               
00345Ar 2               ; src/prelude.fth:21:11 in `0=`
00345Ar 2               @OPCODE_1604:   ; [c64_ir] PushLiteral(0)
00345Ar 2  E8               inx
00345Br 2  E8               inx
00345Cr 2  A9 00            lda #0
00345Er 2  95 00            sta $00,x
003460r 2  A9 00            lda #0
003462r 2  95 01            sta $01,x
003464r 2               
003464r 2               ; src/prelude.fth:21:13 in `0=`
003464r 2               @OPCODE_1605:   ; [c64_ir] JumpElse(156)
003464r 2  4C rr rr         jmp @target_156
003467r 2               
003467r 2               @target_155:
003467r 2               
003467r 2               ; src/prelude.fth:21:18 in `0=`
003467r 2               @OPCODE_1607:   ; [c64_ir] PushLiteral(-1)
003467r 2  E8               inx
003468r 2  E8               inx
003469r 2  A9 FF            lda #255
00346Br 2  95 00            sta $00,x
00346Dr 2  A9 FF            lda #255
00346Fr 2  95 01            sta $01,x
003471r 2               
003471r 2               ; src/prelude.fth:21:21 in `0=`
003471r 2               @OPCODE_1608:   ; [c64_ir] JumpTarget(155)
003471r 2               
003471r 2               @target_156:
003471r 2               
003471r 2               ; snake.pax:178:3 in `check-apple`
003471r 2               @OPCODE_1610:   ; [c64_ir] PushLiteral(-27666)
003471r 2  E8               inx
003472r 2  E8               inx
003473r 2  A9 EE            lda #238
003475r 2  95 00            sta $00,x
003477r 2  A9 93            lda #147
003479r 2  95 01            sta $01,x
00347Br 2               
00347Br 2               ; snake.pax:178:16 in `check-apple`
00347Br 2               @OPCODE_1611:   ; [c64_ir] Load
00347Br 2  A1 00            lda ($00,x)
00347Dr 2  95 00            sta $00,x
00347Fr 2  A9 00            lda #0
003481r 2  95 01            sta $01,x
003483r 2               
003483r 2               ; snake.pax:178:18 in `check-apple`
003483r 2               @OPCODE_1612:   ; [c64_ir] PushLiteral(-26662)
003483r 2  E8               inx
003484r 2  E8               inx
003485r 2  A9 DA            lda #218
003487r 2  95 00            sta $00,x
003489r 2  A9 97            lda #151
00348Br 2  95 01            sta $01,x
00348Dr 2               
00348Dr 2               ; snake.pax:178:26 in `check-apple`
00348Dr 2               @OPCODE_1613:   ; [c64_ir] Load
00348Dr 2  A1 00            lda ($00,x)
00348Fr 2  95 00            sta $00,x
003491r 2  A9 00            lda #0
003493r 2  95 01            sta $01,x
003495r 2               
003495r 2               ; src/prelude.fth:14:12 in `invert`
003495r 2               @OPCODE_1614:   ; [c64_ir] PushLiteral(-1)
003495r 2  E8               inx
003496r 2  E8               inx
003497r 2  A9 FF            lda #255
003499r 2  95 00            sta $00,x
00349Br 2  A9 FF            lda #255
00349Dr 2  95 01            sta $01,x
00349Fr 2               
00349Fr 2               ; src/prelude.fth:14:15 in `invert`
00349Fr 2               @OPCODE_1615:   ; [c64_ir] Nand
00349Fr 2                   ; 26
00349Fr 2  CA               dex
0034A0r 2  CA               dex
0034A1r 2  B5 00            lda $00,x
0034A3r 2  35 02            and $02,x
0034A5r 2  49 FF            eor #$ff
0034A7r 2  95 00            sta $00,x
0034A9r 2  B5 01            lda $01,x
0034ABr 2  35 03            and $03,x
0034ADr 2  49 FF            eor #$ff
0034AFr 2  95 01            sta $01,x
0034B1r 2               
0034B1r 2               ; src/prelude.fth:15:19 in `negate`
0034B1r 2               @OPCODE_1616:   ; [c64_ir] PushLiteral(1)
0034B1r 2  E8               inx
0034B2r 2  E8               inx
0034B3r 2  A9 01            lda #1
0034B5r 2  95 00            sta $00,x
0034B7r 2  A9 00            lda #0
0034B9r 2  95 01            sta $01,x
0034BBr 2               
0034BBr 2               ; src/prelude.fth:15:21 in `negate`
0034BBr 2               @OPCODE_1617:   ; [c64_ir] Add
0034BBr 2                   ; 21
0034BBr 2  CA               dex
0034BCr 2  CA               dex
0034BDr 2  18               clc
0034BEr 2  B5 00            lda $00,x
0034C0r 2  75 02            adc $02,x
0034C2r 2  95 00            sta $00,x
0034C4r 2  B5 01            lda $01,x
0034C6r 2  75 03            adc $03,x
0034C8r 2  95 01            sta $01,x
0034CAr 2               
0034CAr 2               ; src/prelude.fth:16:19 in `-`
0034CAr 2               @OPCODE_1618:   ; [c64_ir] Add
0034CAr 2                   ; 21
0034CAr 2  CA               dex
0034CBr 2  CA               dex
0034CCr 2  18               clc
0034CDr 2  B5 00            lda $00,x
0034CFr 2  75 02            adc $02,x
0034D1r 2  95 00            sta $00,x
0034D3r 2  B5 01            lda $01,x
0034D5r 2  75 03            adc $03,x
0034D7r 2  95 01            sta $01,x
0034D9r 2               
0034D9r 2               ; src/prelude.fth:21:8 in `0=`
0034D9r 2               @OPCODE_1619:   ; [c64_ir] JumpIf0(158)
0034D9r 2  CA               dex
0034DAr 2  CA               dex
0034DBr 2  B5 02            lda $02,x
0034DDr 2  15 03            ora $03,x
0034DFr 2  D0 03            bne *+5
0034E1r 2  4C rr rr         jmp @target_158
0034E4r 2               
0034E4r 2               @target_157:
0034E4r 2               
0034E4r 2               ; src/prelude.fth:21:11 in `0=`
0034E4r 2               @OPCODE_1621:   ; [c64_ir] PushLiteral(0)
0034E4r 2  E8               inx
0034E5r 2  E8               inx
0034E6r 2  A9 00            lda #0
0034E8r 2  95 00            sta $00,x
0034EAr 2  A9 00            lda #0
0034ECr 2  95 01            sta $01,x
0034EEr 2               
0034EEr 2               ; src/prelude.fth:21:13 in `0=`
0034EEr 2               @OPCODE_1622:   ; [c64_ir] JumpElse(159)
0034EEr 2  4C rr rr         jmp @target_159
0034F1r 2               
0034F1r 2               @target_158:
0034F1r 2               
0034F1r 2               ; src/prelude.fth:21:18 in `0=`
0034F1r 2               @OPCODE_1624:   ; [c64_ir] PushLiteral(-1)
0034F1r 2  E8               inx
0034F2r 2  E8               inx
0034F3r 2  A9 FF            lda #255
0034F5r 2  95 00            sta $00,x
0034F7r 2  A9 FF            lda #255
0034F9r 2  95 01            sta $01,x
0034FBr 2               
0034FBr 2               ; src/prelude.fth:21:21 in `0=`
0034FBr 2               @OPCODE_1625:   ; [c64_ir] JumpTarget(158)
0034FBr 2               
0034FBr 2               @target_159:
0034FBr 2               
0034FBr 2               ; src/prelude.fth:28:9 in `and`
0034FBr 2               @OPCODE_1627:   ; [c64_ir] Nand
0034FBr 2                   ; 26
0034FBr 2  CA               dex
0034FCr 2  CA               dex
0034FDr 2  B5 00            lda $00,x
0034FFr 2  35 02            and $02,x
003501r 2  49 FF            eor #$ff
003503r 2  95 00            sta $00,x
003505r 2  B5 01            lda $01,x
003507r 2  35 03            and $03,x
003509r 2  49 FF            eor #$ff
00350Br 2  95 01            sta $01,x
00350Dr 2               
00350Dr 2               ; src/prelude.fth:14:12 in `invert`
00350Dr 2               @OPCODE_1628:   ; [c64_ir] PushLiteral(-1)
00350Dr 2  E8               inx
00350Er 2  E8               inx
00350Fr 2  A9 FF            lda #255
003511r 2  95 00            sta $00,x
003513r 2  A9 FF            lda #255
003515r 2  95 01            sta $01,x
003517r 2               
003517r 2               ; src/prelude.fth:14:15 in `invert`
003517r 2               @OPCODE_1629:   ; [c64_ir] Nand
003517r 2                   ; 26
003517r 2  CA               dex
003518r 2  CA               dex
003519r 2  B5 00            lda $00,x
00351Br 2  35 02            and $02,x
00351Dr 2  49 FF            eor #$ff
00351Fr 2  95 00            sta $00,x
003521r 2  B5 01            lda $01,x
003523r 2  35 03            and $03,x
003525r 2  49 FF            eor #$ff
003527r 2  95 01            sta $01,x
003529r 2               
003529r 2               ; snake.pax:179:7 in `check-apple`
003529r 2               @OPCODE_1630:   ; [c64_ir] JumpIf0(182)
003529r 2  CA               dex
00352Ar 2  CA               dex
00352Br 2  B5 02            lda $02,x
00352Dr 2  15 03            ora $03,x
00352Fr 2  D0 03            bne *+5
003531r 2  4C rr rr         jmp @target_182
003534r 2               
003534r 2               @target_160:
003534r 2               
003534r 2               ; <inline>:0:0 in `main`
003534r 2               @OPCODE_1632:   ; [c64_ir] PushLiteral(7777)
003534r 2  E8               inx
003535r 2  E8               inx
003536r 2  A9 61            lda #97
003538r 2  95 00            sta $00,x
00353Ar 2  A9 1E            lda #30
00353Cr 2  95 01            sta $01,x
00353Er 2               
00353Er 2               ; <inline>:0:0 in `main`
00353Er 2               @OPCODE_1633:   ; [c64_ir] AltPush
00353Er 2  CA               dex
00353Fr 2  CA               dex
003540r 2  B5 03            lda $03,x
003542r 2  48               pha
003543r 2  B5 02            lda $02,x
003545r 2  48               pha
003546r 2               
003546r 2               ; snake.pax:170:3 in `move-apple`
003546r 2               @OPCODE_1634:   ; [c64_ir] PushLiteral(-26664)
003546r 2  E8               inx
003547r 2  E8               inx
003548r 2  A9 D8            lda #216
00354Ar 2  95 00            sta $00,x
00354Cr 2  A9 97            lda #151
00354Er 2  95 01            sta $01,x
003550r 2               
003550r 2               ; snake.pax:170:11 in `move-apple`
003550r 2               @OPCODE_1635:   ; [c64_ir] Load
003550r 2  A1 00            lda ($00,x)
003552r 2  95 00            sta $00,x
003554r 2  A9 00            lda #0
003556r 2  95 01            sta $01,x
003558r 2               
003558r 2               ; snake.pax:170:13 in `move-apple`
003558r 2               @OPCODE_1636:   ; [c64_ir] PushLiteral(-26662)
003558r 2  E8               inx
003559r 2  E8               inx
00355Ar 2  A9 DA            lda #218
00355Cr 2  95 00            sta $00,x
00355Er 2  A9 97            lda #151
003560r 2  95 01            sta $01,x
003562r 2               
003562r 2               ; snake.pax:170:21 in `move-apple`
003562r 2               @OPCODE_1637:   ; [c64_ir] Load
003562r 2  A1 00            lda ($00,x)
003564r 2  95 00            sta $00,x
003566r 2  A9 00            lda #0
003568r 2  95 01            sta $01,x
00356Ar 2               
00356Ar 2               ; <inline>:0:0 in `main`
00356Ar 2               @OPCODE_1638:   ; [c64_ir] PushLiteral(7777)
00356Ar 2  E8               inx
00356Br 2  E8               inx
00356Cr 2  A9 61            lda #97
00356Er 2  95 00            sta $00,x
003570r 2  A9 1E            lda #30
003572r 2  95 01            sta $01,x
003574r 2               
003574r 2               ; <inline>:0:0 in `main`
003574r 2               @OPCODE_1639:   ; [c64_ir] AltPush
003574r 2  CA               dex
003575r 2  CA               dex
003576r 2  B5 03            lda $03,x
003578r 2  48               pha
003579r 2  B5 02            lda $02,x
00357Br 2  48               pha
00357Cr 2               
00357Cr 2               ; src/prelude.fth:3:10 in `swap`
00357Cr 2               @OPCODE_1640:   ; [c64_ir] AltPush
00357Cr 2  CA               dex
00357Dr 2  CA               dex
00357Er 2  B5 03            lda $03,x
003580r 2  48               pha
003581r 2  B5 02            lda $02,x
003583r 2  48               pha
003584r 2               
003584r 2               ; src/prelude.fth:3:13 in `swap`
003584r 2               @OPCODE_1641:   ; [c64_ir] TempStore
003584r 2  CA               dex
003585r 2  CA               dex
003586r 2  B5 03            lda $03,x
003588r 2  85 96            sta TEMP_PAX2
00358Ar 2  B5 02            lda $02,x
00358Cr 2  85 95            sta TEMP_PAX1
00358Er 2               
00358Er 2               ; src/prelude.fth:3:19 in `swap`
00358Er 2               @OPCODE_1642:   ; [c64_ir] AltPop
00358Er 2  E8               inx
00358Fr 2  E8               inx
003590r 2  68               pla
003591r 2  95 00            sta $00,x
003593r 2  68               pla
003594r 2  95 01            sta $01,x
003596r 2               
003596r 2               ; src/prelude.fth:3:22 in `swap`
003596r 2               @OPCODE_1643:   ; [c64_ir] TempLoad
003596r 2  E8               inx
003597r 2  E8               inx
003598r 2  A5 95            lda TEMP_PAX1
00359Ar 2  95 00            sta $00,x
00359Cr 2  A5 96            lda TEMP_PAX2
00359Er 2  95 01            sta $01,x
0035A0r 2               
0035A0r 2               ; src/prelude.fth:3:13 in `swap`
0035A0r 2               @OPCODE_1644:   ; [c64_ir] TempStore
0035A0r 2  CA               dex
0035A1r 2  CA               dex
0035A2r 2  B5 03            lda $03,x
0035A4r 2  85 96            sta TEMP_PAX2
0035A6r 2  B5 02            lda $02,x
0035A8r 2  85 95            sta TEMP_PAX1
0035AAr 2               
0035AAr 2               ; src/prelude.fth:3:22 in `swap`
0035AAr 2               @OPCODE_1645:   ; [c64_ir] TempLoad
0035AAr 2  E8               inx
0035ABr 2  E8               inx
0035ACr 2  A5 95            lda TEMP_PAX1
0035AEr 2  95 00            sta $00,x
0035B0r 2  A5 96            lda TEMP_PAX2
0035B2r 2  95 01            sta $01,x
0035B4r 2               
0035B4r 2               ; src/prelude.fth:5:10 in `rot`
0035B4r 2               @OPCODE_1646:   ; [c64_ir] AltPush
0035B4r 2  CA               dex
0035B5r 2  CA               dex
0035B6r 2  B5 03            lda $03,x
0035B8r 2  48               pha
0035B9r 2  B5 02            lda $02,x
0035BBr 2  48               pha
0035BCr 2               
0035BCr 2               ; src/prelude.fth:3:13 in `swap`
0035BCr 2               @OPCODE_1647:   ; [c64_ir] TempStore
0035BCr 2  CA               dex
0035BDr 2  CA               dex
0035BEr 2  B5 03            lda $03,x
0035C0r 2  85 96            sta TEMP_PAX2
0035C2r 2  B5 02            lda $02,x
0035C4r 2  85 95            sta TEMP_PAX1
0035C6r 2               
0035C6r 2               ; src/prelude.fth:3:19 in `swap`
0035C6r 2               @OPCODE_1648:   ; [c64_ir] PushLiteral(32)
0035C6r 2  E8               inx
0035C7r 2  E8               inx
0035C8r 2  A9 20            lda #32
0035CAr 2  95 00            sta $00,x
0035CCr 2  A9 00            lda #0
0035CEr 2  95 01            sta $01,x
0035D0r 2               
0035D0r 2               ; src/prelude.fth:3:22 in `swap`
0035D0r 2               @OPCODE_1649:   ; [c64_ir] TempLoad
0035D0r 2  E8               inx
0035D1r 2  E8               inx
0035D2r 2  A5 95            lda TEMP_PAX1
0035D4r 2  95 00            sta $00,x
0035D6r 2  A5 96            lda TEMP_PAX2
0035D8r 2  95 01            sta $01,x
0035DAr 2               
0035DAr 2               ; src/prelude.fth:5:18 in `rot`
0035DAr 2               @OPCODE_1650:   ; [c64_ir] AltPop
0035DAr 2  E8               inx
0035DBr 2  E8               inx
0035DCr 2  68               pla
0035DDr 2  95 00            sta $00,x
0035DFr 2  68               pla
0035E0r 2  95 01            sta $01,x
0035E2r 2               
0035E2r 2               ; src/prelude.fth:3:10 in `swap`
0035E2r 2               @OPCODE_1651:   ; [c64_ir] AltPush
0035E2r 2  CA               dex
0035E3r 2  CA               dex
0035E4r 2  B5 03            lda $03,x
0035E6r 2  48               pha
0035E7r 2  B5 02            lda $02,x
0035E9r 2  48               pha
0035EAr 2               
0035EAr 2               ; src/prelude.fth:3:13 in `swap`
0035EAr 2               @OPCODE_1652:   ; [c64_ir] TempStore
0035EAr 2  CA               dex
0035EBr 2  CA               dex
0035ECr 2  B5 03            lda $03,x
0035EEr 2  85 96            sta TEMP_PAX2
0035F0r 2  B5 02            lda $02,x
0035F2r 2  85 95            sta TEMP_PAX1
0035F4r 2               
0035F4r 2               ; src/prelude.fth:3:19 in `swap`
0035F4r 2               @OPCODE_1653:   ; [c64_ir] AltPop
0035F4r 2  E8               inx
0035F5r 2  E8               inx
0035F6r 2  68               pla
0035F7r 2  95 00            sta $00,x
0035F9r 2  68               pla
0035FAr 2  95 01            sta $01,x
0035FCr 2               
0035FCr 2               ; src/prelude.fth:3:22 in `swap`
0035FCr 2               @OPCODE_1654:   ; [c64_ir] TempLoad
0035FCr 2  E8               inx
0035FDr 2  E8               inx
0035FEr 2  A5 95            lda TEMP_PAX1
003600r 2  95 00            sta $00,x
003602r 2  A5 96            lda TEMP_PAX2
003604r 2  95 01            sta $01,x
003606r 2               
003606r 2               ; <inline>:0:0 in `main`
003606r 2               @OPCODE_1655:   ; [c64_ir] PushLiteral(7777)
003606r 2  E8               inx
003607r 2  E8               inx
003608r 2  A9 61            lda #97
00360Ar 2  95 00            sta $00,x
00360Cr 2  A9 1E            lda #30
00360Er 2  95 01            sta $01,x
003610r 2               
003610r 2               ; <inline>:0:0 in `main`
003610r 2               @OPCODE_1656:   ; [c64_ir] AltPush
003610r 2  CA               dex
003611r 2  CA               dex
003612r 2  B5 03            lda $03,x
003614r 2  48               pha
003615r 2  B5 02            lda $02,x
003617r 2  48               pha
003618r 2               
003618r 2               ; <inline>:0:0 in `main`
003618r 2               @OPCODE_1657:   ; [c64_ir] PushLiteral(7777)
003618r 2  E8               inx
003619r 2  E8               inx
00361Ar 2  A9 61            lda #97
00361Cr 2  95 00            sta $00,x
00361Er 2  A9 1E            lda #30
003620r 2  95 01            sta $01,x
003622r 2               
003622r 2               ; <inline>:0:0 in `main`
003622r 2               @OPCODE_1658:   ; [c64_ir] AltPush
003622r 2  CA               dex
003623r 2  CA               dex
003624r 2  B5 03            lda $03,x
003626r 2  48               pha
003627r 2  B5 02            lda $02,x
003629r 2  48               pha
00362Ar 2               
00362Ar 2               ; <inline>:0:0 in `main`
00362Ar 2               @OPCODE_1659:   ; [c64_ir] PushLiteral(7777)
00362Ar 2  E8               inx
00362Br 2  E8               inx
00362Cr 2  A9 61            lda #97
00362Er 2  95 00            sta $00,x
003630r 2  A9 1E            lda #30
003632r 2  95 01            sta $01,x
003634r 2               
003634r 2               ; <inline>:0:0 in `main`
003634r 2               @OPCODE_1660:   ; [c64_ir] AltPush
003634r 2  CA               dex
003635r 2  CA               dex
003636r 2  B5 03            lda $03,x
003638r 2  48               pha
003639r 2  B5 02            lda $02,x
00363Br 2  48               pha
00363Cr 2               
00363Cr 2               ; src/prelude.fth:44:8 in `*`
00363Cr 2               @OPCODE_1661:   ; [c64_ir] PushLiteral(0)
00363Cr 2  E8               inx
00363Dr 2  E8               inx
00363Er 2  A9 00            lda #0
003640r 2  95 00            sta $00,x
003642r 2  A9 00            lda #0
003644r 2  95 01            sta $01,x
003646r 2               
003646r 2               ; src/prelude.fth:44:10 in `*`
003646r 2               @OPCODE_1662:   ; [c64_ir] PushLiteral(40)
003646r 2  E8               inx
003647r 2  E8               inx
003648r 2  A9 28            lda #40
00364Ar 2  95 00            sta $00,x
00364Cr 2  A9 00            lda #0
00364Er 2  95 01            sta $01,x
003650r 2               
003650r 2               ; src/prelude.fth:44:13 in `*`
003650r 2               @OPCODE_1663:   ; [c64_ir] PushLiteral(0)
003650r 2  E8               inx
003651r 2  E8               inx
003652r 2  A9 00            lda #0
003654r 2  95 00            sta $00,x
003656r 2  A9 00            lda #0
003658r 2  95 01            sta $01,x
00365Ar 2               
00365Ar 2               ; src/prelude.fth:44:15 in `*`
00365Ar 2               @OPCODE_1664:   ; [c64_ir] AltPush
00365Ar 2  CA               dex
00365Br 2  CA               dex
00365Cr 2  B5 03            lda $03,x
00365Er 2  48               pha
00365Fr 2  B5 02            lda $02,x
003661r 2  48               pha
003662r 2               
003662r 2               ; src/prelude.fth:44:15 in `*`
003662r 2               @OPCODE_1665:   ; [c64_ir] AltPush
003662r 2  CA               dex
003663r 2  CA               dex
003664r 2  B5 03            lda $03,x
003666r 2  48               pha
003667r 2  B5 02            lda $02,x
003669r 2  48               pha
00366Ar 2               
00366Ar 2               ; src/prelude.fth:44:15 in `*`
00366Ar 2               @OPCODE_1666:   ; [c64_ir] LoopTarget(160)
00366Ar 2               
00366Ar 2               @target_161:
00366Ar 2               
00366Ar 2               ; src/prelude.fth:4:10 in `over`
00366Ar 2               @OPCODE_1668:   ; [c64_ir] AltPush
00366Ar 2  CA               dex
00366Br 2  CA               dex
00366Cr 2  B5 03            lda $03,x
00366Er 2  48               pha
00366Fr 2  B5 02            lda $02,x
003671r 2  48               pha
003672r 2               
003672r 2               ; src/prelude.fth:4:13 in `over`
003672r 2               @OPCODE_1669:   ; [c64_ir] TempStore
003672r 2  CA               dex
003673r 2  CA               dex
003674r 2  B5 03            lda $03,x
003676r 2  85 96            sta TEMP_PAX2
003678r 2  B5 02            lda $02,x
00367Ar 2  85 95            sta TEMP_PAX1
00367Cr 2               
00367Cr 2               ; src/prelude.fth:4:19 in `over`
00367Cr 2               @OPCODE_1670:   ; [c64_ir] TempLoad
00367Cr 2  E8               inx
00367Dr 2  E8               inx
00367Er 2  A5 95            lda TEMP_PAX1
003680r 2  95 00            sta $00,x
003682r 2  A5 96            lda TEMP_PAX2
003684r 2  95 01            sta $01,x
003686r 2               
003686r 2               ; src/prelude.fth:4:25 in `over`
003686r 2               @OPCODE_1671:   ; [c64_ir] AltPop
003686r 2  E8               inx
003687r 2  E8               inx
003688r 2  68               pla
003689r 2  95 00            sta $00,x
00368Br 2  68               pla
00368Cr 2  95 01            sta $01,x
00368Er 2               
00368Er 2               ; src/prelude.fth:4:28 in `over`
00368Er 2               @OPCODE_1672:   ; [c64_ir] TempLoad
00368Er 2  E8               inx
00368Fr 2  E8               inx
003690r 2  A5 95            lda TEMP_PAX1
003692r 2  95 00            sta $00,x
003694r 2  A5 96            lda TEMP_PAX2
003696r 2  95 01            sta $01,x
003698r 2               
003698r 2               ; src/prelude.fth:44:23 in `*`
003698r 2               @OPCODE_1673:   ; [c64_ir] Add
003698r 2                   ; 21
003698r 2  CA               dex
003699r 2  CA               dex
00369Ar 2  18               clc
00369Br 2  B5 00            lda $00,x
00369Dr 2  75 02            adc $02,x
00369Fr 2  95 00            sta $00,x
0036A1r 2  B5 01            lda $01,x
0036A3r 2  75 03            adc $03,x
0036A5r 2  95 01            sta $01,x
0036A7r 2               
0036A7r 2               ; src/prelude.fth:33:15 in `loopimpl`
0036A7r 2               @OPCODE_1674:   ; [c64_ir] AltPop
0036A7r 2  E8               inx
0036A8r 2  E8               inx
0036A9r 2  68               pla
0036AAr 2  95 00            sta $00,x
0036ACr 2  68               pla
0036ADr 2  95 01            sta $01,x
0036AFr 2               
0036AFr 2               ; src/prelude.fth:33:18 in `loopimpl`
0036AFr 2               @OPCODE_1675:   ; [c64_ir] AltPop
0036AFr 2  E8               inx
0036B0r 2  E8               inx
0036B1r 2  68               pla
0036B2r 2  95 00            sta $00,x
0036B4r 2  68               pla
0036B5r 2  95 01            sta $01,x
0036B7r 2               
0036B7r 2               ; src/prelude.fth:18:8 in `1+`
0036B7r 2               @OPCODE_1676:   ; [c64_ir] PushLiteral(1)
0036B7r 2  E8               inx
0036B8r 2  E8               inx
0036B9r 2  A9 01            lda #1
0036BBr 2  95 00            sta $00,x
0036BDr 2  A9 00            lda #0
0036BFr 2  95 01            sta $01,x
0036C1r 2               
0036C1r 2               ; src/prelude.fth:18:10 in `1+`
0036C1r 2               @OPCODE_1677:   ; [c64_ir] Add
0036C1r 2                   ; 21
0036C1r 2  CA               dex
0036C2r 2  CA               dex
0036C3r 2  18               clc
0036C4r 2  B5 00            lda $00,x
0036C6r 2  75 02            adc $02,x
0036C8r 2  95 00            sta $00,x
0036CAr 2  B5 01            lda $01,x
0036CCr 2  75 03            adc $03,x
0036CEr 2  95 01            sta $01,x
0036D0r 2               
0036D0r 2               ; src/prelude.fth:4:10 in `over`
0036D0r 2               @OPCODE_1678:   ; [c64_ir] AltPush
0036D0r 2  CA               dex
0036D1r 2  CA               dex
0036D2r 2  B5 03            lda $03,x
0036D4r 2  48               pha
0036D5r 2  B5 02            lda $02,x
0036D7r 2  48               pha
0036D8r 2               
0036D8r 2               ; src/prelude.fth:4:13 in `over`
0036D8r 2               @OPCODE_1679:   ; [c64_ir] TempStore
0036D8r 2  CA               dex
0036D9r 2  CA               dex
0036DAr 2  B5 03            lda $03,x
0036DCr 2  85 96            sta TEMP_PAX2
0036DEr 2  B5 02            lda $02,x
0036E0r 2  85 95            sta TEMP_PAX1
0036E2r 2               
0036E2r 2               ; src/prelude.fth:4:19 in `over`
0036E2r 2               @OPCODE_1680:   ; [c64_ir] TempLoad
0036E2r 2  E8               inx
0036E3r 2  E8               inx
0036E4r 2  A5 95            lda TEMP_PAX1
0036E6r 2  95 00            sta $00,x
0036E8r 2  A5 96            lda TEMP_PAX2
0036EAr 2  95 01            sta $01,x
0036ECr 2               
0036ECr 2               ; src/prelude.fth:4:25 in `over`
0036ECr 2               @OPCODE_1681:   ; [c64_ir] AltPop
0036ECr 2  E8               inx
0036EDr 2  E8               inx
0036EEr 2  68               pla
0036EFr 2  95 00            sta $00,x
0036F1r 2  68               pla
0036F2r 2  95 01            sta $01,x
0036F4r 2               
0036F4r 2               ; src/prelude.fth:4:28 in `over`
0036F4r 2               @OPCODE_1682:   ; [c64_ir] TempLoad
0036F4r 2  E8               inx
0036F5r 2  E8               inx
0036F6r 2  A5 95            lda TEMP_PAX1
0036F8r 2  95 00            sta $00,x
0036FAr 2  A5 96            lda TEMP_PAX2
0036FCr 2  95 01            sta $01,x
0036FEr 2               
0036FEr 2               ; src/prelude.fth:4:10 in `over`
0036FEr 2               @OPCODE_1683:   ; [c64_ir] AltPush
0036FEr 2  CA               dex
0036FFr 2  CA               dex
003700r 2  B5 03            lda $03,x
003702r 2  48               pha
003703r 2  B5 02            lda $02,x
003705r 2  48               pha
003706r 2               
003706r 2               ; src/prelude.fth:4:13 in `over`
003706r 2               @OPCODE_1684:   ; [c64_ir] TempStore
003706r 2  CA               dex
003707r 2  CA               dex
003708r 2  B5 03            lda $03,x
00370Ar 2  85 96            sta TEMP_PAX2
00370Cr 2  B5 02            lda $02,x
00370Er 2  85 95            sta TEMP_PAX1
003710r 2               
003710r 2               ; src/prelude.fth:4:19 in `over`
003710r 2               @OPCODE_1685:   ; [c64_ir] TempLoad
003710r 2  E8               inx
003711r 2  E8               inx
003712r 2  A5 95            lda TEMP_PAX1
003714r 2  95 00            sta $00,x
003716r 2  A5 96            lda TEMP_PAX2
003718r 2  95 01            sta $01,x
00371Ar 2               
00371Ar 2               ; src/prelude.fth:4:25 in `over`
00371Ar 2               @OPCODE_1686:   ; [c64_ir] AltPop
00371Ar 2  E8               inx
00371Br 2  E8               inx
00371Cr 2  68               pla
00371Dr 2  95 00            sta $00,x
00371Fr 2  68               pla
003720r 2  95 01            sta $01,x
003722r 2               
003722r 2               ; src/prelude.fth:4:28 in `over`
003722r 2               @OPCODE_1687:   ; [c64_ir] TempLoad
003722r 2  E8               inx
003723r 2  E8               inx
003724r 2  A5 95            lda TEMP_PAX1
003726r 2  95 00            sta $00,x
003728r 2  A5 96            lda TEMP_PAX2
00372Ar 2  95 01            sta $01,x
00372Cr 2               
00372Cr 2               ; src/prelude.fth:33:29 in `loopimpl`
00372Cr 2               @OPCODE_1688:   ; [c64_ir] AltPush
00372Cr 2  CA               dex
00372Dr 2  CA               dex
00372Er 2  B5 03            lda $03,x
003730r 2  48               pha
003731r 2  B5 02            lda $02,x
003733r 2  48               pha
003734r 2               
003734r 2               ; src/prelude.fth:33:32 in `loopimpl`
003734r 2               @OPCODE_1689:   ; [c64_ir] AltPush
003734r 2  CA               dex
003735r 2  CA               dex
003736r 2  B5 03            lda $03,x
003738r 2  48               pha
003739r 2  B5 02            lda $02,x
00373Br 2  48               pha
00373Cr 2               
00373Cr 2               ; src/prelude.fth:14:12 in `invert`
00373Cr 2               @OPCODE_1690:   ; [c64_ir] PushLiteral(-1)
00373Cr 2  E8               inx
00373Dr 2  E8               inx
00373Er 2  A9 FF            lda #255
003740r 2  95 00            sta $00,x
003742r 2  A9 FF            lda #255
003744r 2  95 01            sta $01,x
003746r 2               
003746r 2               ; src/prelude.fth:14:15 in `invert`
003746r 2               @OPCODE_1691:   ; [c64_ir] Nand
003746r 2                   ; 26
003746r 2  CA               dex
003747r 2  CA               dex
003748r 2  B5 00            lda $00,x
00374Ar 2  35 02            and $02,x
00374Cr 2  49 FF            eor #$ff
00374Er 2  95 00            sta $00,x
003750r 2  B5 01            lda $01,x
003752r 2  35 03            and $03,x
003754r 2  49 FF            eor #$ff
003756r 2  95 01            sta $01,x
003758r 2               
003758r 2               ; src/prelude.fth:15:19 in `negate`
003758r 2               @OPCODE_1692:   ; [c64_ir] PushLiteral(1)
003758r 2  E8               inx
003759r 2  E8               inx
00375Ar 2  A9 01            lda #1
00375Cr 2  95 00            sta $00,x
00375Er 2  A9 00            lda #0
003760r 2  95 01            sta $01,x
003762r 2               
003762r 2               ; src/prelude.fth:15:21 in `negate`
003762r 2               @OPCODE_1693:   ; [c64_ir] Add
003762r 2                   ; 21
003762r 2  CA               dex
003763r 2  CA               dex
003764r 2  18               clc
003765r 2  B5 00            lda $00,x
003767r 2  75 02            adc $02,x
003769r 2  95 00            sta $00,x
00376Br 2  B5 01            lda $01,x
00376Dr 2  75 03            adc $03,x
00376Fr 2  95 01            sta $01,x
003771r 2               
003771r 2               ; src/prelude.fth:16:19 in `-`
003771r 2               @OPCODE_1694:   ; [c64_ir] Add
003771r 2                   ; 21
003771r 2  CA               dex
003772r 2  CA               dex
003773r 2  18               clc
003774r 2  B5 00            lda $00,x
003776r 2  75 02            adc $02,x
003778r 2  95 00            sta $00,x
00377Ar 2  B5 01            lda $01,x
00377Cr 2  75 03            adc $03,x
00377Er 2  95 01            sta $01,x
003780r 2               
003780r 2               ; src/prelude.fth:21:8 in `0=`
003780r 2               @OPCODE_1695:   ; [c64_ir] JumpIf0(163)
003780r 2  CA               dex
003781r 2  CA               dex
003782r 2  B5 02            lda $02,x
003784r 2  15 03            ora $03,x
003786r 2  D0 03            bne *+5
003788r 2  4C rr rr         jmp @target_163
00378Br 2               
00378Br 2               @target_162:
00378Br 2               
00378Br 2               ; src/prelude.fth:21:11 in `0=`
00378Br 2               @OPCODE_1697:   ; [c64_ir] PushLiteral(0)
00378Br 2  E8               inx
00378Cr 2  E8               inx
00378Dr 2  A9 00            lda #0
00378Fr 2  95 00            sta $00,x
003791r 2  A9 00            lda #0
003793r 2  95 01            sta $01,x
003795r 2               
003795r 2               ; src/prelude.fth:21:13 in `0=`
003795r 2               @OPCODE_1698:   ; [c64_ir] JumpElse(164)
003795r 2  4C rr rr         jmp @target_164
003798r 2               
003798r 2               @target_163:
003798r 2               
003798r 2               ; src/prelude.fth:21:18 in `0=`
003798r 2               @OPCODE_1700:   ; [c64_ir] PushLiteral(-1)
003798r 2  E8               inx
003799r 2  E8               inx
00379Ar 2  A9 FF            lda #255
00379Cr 2  95 00            sta $00,x
00379Er 2  A9 FF            lda #255
0037A0r 2  95 01            sta $01,x
0037A2r 2               
0037A2r 2               ; src/prelude.fth:21:21 in `0=`
0037A2r 2               @OPCODE_1701:   ; [c64_ir] JumpTarget(163)
0037A2r 2               
0037A2r 2               @target_164:
0037A2r 2               
0037A2r 2               ; src/prelude.fth:3:10 in `swap`
0037A2r 2               @OPCODE_1703:   ; [c64_ir] AltPush
0037A2r 2  CA               dex
0037A3r 2  CA               dex
0037A4r 2  B5 03            lda $03,x
0037A6r 2  48               pha
0037A7r 2  B5 02            lda $02,x
0037A9r 2  48               pha
0037AAr 2               
0037AAr 2               ; src/prelude.fth:3:19 in `swap`
0037AAr 2               @OPCODE_1704:   ; [c64_ir] AltPop
0037AAr 2  E8               inx
0037ABr 2  E8               inx
0037ACr 2  68               pla
0037ADr 2  95 00            sta $00,x
0037AFr 2  68               pla
0037B0r 2  95 01            sta $01,x
0037B2r 2               
0037B2r 2               ; src/prelude.fth:44:25 in `*`
0037B2r 2               @OPCODE_1705:   ; [c64_ir] LoopIf0(161)
0037B2r 2  CA               dex
0037B3r 2  CA               dex
0037B4r 2  B5 02            lda $02,x
0037B6r 2  15 03            ora $03,x
0037B8r 2  D0 03            bne *+5
0037BAr 2  4C rr rr         jmp @target_161
0037BDr 2               
0037BDr 2               @target_165:
0037BDr 2               
0037BDr 2               ; src/prelude.fth:44:25 in `*`
0037BDr 2               @OPCODE_1707:   ; [c64_ir] AltPop
0037BDr 2  E8               inx
0037BEr 2  E8               inx
0037BFr 2  68               pla
0037C0r 2  95 00            sta $00,x
0037C2r 2  68               pla
0037C3r 2  95 01            sta $01,x
0037C5r 2               
0037C5r 2               ; src/prelude.fth:44:25 in `*`
0037C5r 2               @OPCODE_1708:   ; [c64_ir] Drop
0037C5r 2  CA               dex
0037C6r 2  CA               dex
0037C7r 2               
0037C7r 2               ; src/prelude.fth:44:25 in `*`
0037C7r 2               @OPCODE_1709:   ; [c64_ir] AltPop
0037C7r 2  E8               inx
0037C8r 2  E8               inx
0037C9r 2  68               pla
0037CAr 2  95 00            sta $00,x
0037CCr 2  68               pla
0037CDr 2  95 01            sta $01,x
0037CFr 2               
0037CFr 2               ; src/prelude.fth:44:25 in `*`
0037CFr 2               @OPCODE_1710:   ; [c64_ir] Drop
0037CFr 2  CA               dex
0037D0r 2  CA               dex
0037D1r 2               
0037D1r 2               ; src/prelude.fth:3:10 in `swap`
0037D1r 2               @OPCODE_1711:   ; [c64_ir] AltPush
0037D1r 2  CA               dex
0037D2r 2  CA               dex
0037D3r 2  B5 03            lda $03,x
0037D5r 2  48               pha
0037D6r 2  B5 02            lda $02,x
0037D8r 2  48               pha
0037D9r 2               
0037D9r 2               ; src/prelude.fth:3:13 in `swap`
0037D9r 2               @OPCODE_1712:   ; [c64_ir] TempStore
0037D9r 2  CA               dex
0037DAr 2  CA               dex
0037DBr 2  B5 03            lda $03,x
0037DDr 2  85 96            sta TEMP_PAX2
0037DFr 2  B5 02            lda $02,x
0037E1r 2  85 95            sta TEMP_PAX1
0037E3r 2               
0037E3r 2               ; src/prelude.fth:3:19 in `swap`
0037E3r 2               @OPCODE_1713:   ; [c64_ir] AltPop
0037E3r 2  E8               inx
0037E4r 2  E8               inx
0037E5r 2  68               pla
0037E6r 2  95 00            sta $00,x
0037E8r 2  68               pla
0037E9r 2  95 01            sta $01,x
0037EBr 2               
0037EBr 2               ; <inline>:0:0 in `main`
0037EBr 2               @OPCODE_1714:   ; [c64_ir] AltPop
0037EBr 2  E8               inx
0037ECr 2  E8               inx
0037EDr 2  68               pla
0037EEr 2  95 00            sta $00,x
0037F0r 2  68               pla
0037F1r 2  95 01            sta $01,x
0037F3r 2               
0037F3r 2               ; <inline>:0:0 in `main`
0037F3r 2               @OPCODE_1715:   ; [c64_ir] Drop
0037F3r 2  CA               dex
0037F4r 2  CA               dex
0037F5r 2               
0037F5r 2               ; snake.pax:48:39 in `convert-x-y`
0037F5r 2               @OPCODE_1716:   ; [c64_ir] Add
0037F5r 2                   ; 21
0037F5r 2  CA               dex
0037F6r 2  CA               dex
0037F7r 2  18               clc
0037F8r 2  B5 00            lda $00,x
0037FAr 2  75 02            adc $02,x
0037FCr 2  95 00            sta $00,x
0037FEr 2  B5 01            lda $01,x
003800r 2  75 03            adc $03,x
003802r 2  95 01            sta $01,x
003804r 2               
003804r 2               ; <inline>:0:0 in `main`
003804r 2               @OPCODE_1717:   ; [c64_ir] AltPop
003804r 2  E8               inx
003805r 2  E8               inx
003806r 2  68               pla
003807r 2  95 00            sta $00,x
003809r 2  68               pla
00380Ar 2  95 01            sta $01,x
00380Cr 2               
00380Cr 2               ; <inline>:0:0 in `main`
00380Cr 2               @OPCODE_1718:   ; [c64_ir] Drop
00380Cr 2  CA               dex
00380Dr 2  CA               dex
00380Er 2               
00380Er 2               ; snake.pax:49:34 in `draw-index`
00380Er 2               @OPCODE_1719:   ; [c64_ir] PushLiteral(1024)
00380Er 2  E8               inx
00380Fr 2  E8               inx
003810r 2  A9 00            lda #0
003812r 2  95 00            sta $00,x
003814r 2  A9 04            lda #4
003816r 2  95 01            sta $01,x
003818r 2               
003818r 2               ; snake.pax:49:43 in `draw-index`
003818r 2               @OPCODE_1720:   ; [c64_ir] Add
003818r 2                   ; 21
003818r 2  CA               dex
003819r 2  CA               dex
00381Ar 2  18               clc
00381Br 2  B5 00            lda $00,x
00381Dr 2  75 02            adc $02,x
00381Fr 2  95 00            sta $00,x
003821r 2  B5 01            lda $01,x
003823r 2  75 03            adc $03,x
003825r 2  95 01            sta $01,x
003827r 2               
003827r 2               ; snake.pax:49:45 in `draw-index`
003827r 2               @OPCODE_1721:   ; [c64_ir] Store8
003827r 2  CA               dex
003828r 2  CA               dex
003829r 2  CA               dex
00382Ar 2  CA               dex
00382Br 2  B5 02            lda $02,x
00382Dr 2  81 04            sta ($04,x)
00382Fr 2                   ; TODO high byte
00382Fr 2               
00382Fr 2               ; <inline>:0:0 in `main`
00382Fr 2               @OPCODE_1722:   ; [c64_ir] AltPop
00382Fr 2  E8               inx
003830r 2  E8               inx
003831r 2  68               pla
003832r 2  95 00            sta $00,x
003834r 2  68               pla
003835r 2  95 01            sta $01,x
003837r 2               
003837r 2               ; <inline>:0:0 in `main`
003837r 2               @OPCODE_1723:   ; [c64_ir] Drop
003837r 2  CA               dex
003838r 2  CA               dex
003839r 2               
003839r 2               ; <inline>:0:0 in `main`
003839r 2               @OPCODE_1724:   ; [c64_ir] AltPop
003839r 2  E8               inx
00383Ar 2  E8               inx
00383Br 2  68               pla
00383Cr 2  95 00            sta $00,x
00383Er 2  68               pla
00383Fr 2  95 01            sta $01,x
003841r 2               
003841r 2               ; <inline>:0:0 in `main`
003841r 2               @OPCODE_1725:   ; [c64_ir] Drop
003841r 2  CA               dex
003842r 2  CA               dex
003843r 2               
003843r 2               ; <inline>:0:0 in `main`
003843r 2               @OPCODE_1726:   ; [c64_ir] PushLiteral(7777)
003843r 2  E8               inx
003844r 2  E8               inx
003845r 2  A9 61            lda #97
003847r 2  95 00            sta $00,x
003849r 2  A9 1E            lda #30
00384Br 2  95 01            sta $01,x
00384Dr 2               
00384Dr 2               ; <inline>:0:0 in `main`
00384Dr 2               @OPCODE_1727:   ; [c64_ir] AltPush
00384Dr 2  CA               dex
00384Er 2  CA               dex
00384Fr 2  B5 03            lda $03,x
003851r 2  48               pha
003852r 2  B5 02            lda $02,x
003854r 2  48               pha
003855r 2               
003855r 2               ; snake.pax:165:3 in `random-x-position`
003855r 2               @OPCODE_1728:   ; [c64_ir] PushLiteral(40)
003855r 2  E8               inx
003856r 2  E8               inx
003857r 2  A9 28            lda #40
003859r 2  95 00            sta $00,x
00385Br 2  A9 00            lda #0
00385Dr 2  95 01            sta $01,x
00385Fr 2               
00385Fr 2               ; snake.pax:165:9 in `random-x-position`
00385Fr 2               @OPCODE_1729:   ; [c64_ir] PushLiteral(4)
00385Fr 2  E8               inx
003860r 2  E8               inx
003861r 2  A9 04            lda #4
003863r 2  95 00            sta $00,x
003865r 2  A9 00            lda #0
003867r 2  95 01            sta $01,x
003869r 2               
003869r 2               ; src/prelude.fth:14:12 in `invert`
003869r 2               @OPCODE_1730:   ; [c64_ir] PushLiteral(-1)
003869r 2  E8               inx
00386Ar 2  E8               inx
00386Br 2  A9 FF            lda #255
00386Dr 2  95 00            sta $00,x
00386Fr 2  A9 FF            lda #255
003871r 2  95 01            sta $01,x
003873r 2               
003873r 2               ; src/prelude.fth:14:15 in `invert`
003873r 2               @OPCODE_1731:   ; [c64_ir] Nand
003873r 2                   ; 26
003873r 2  CA               dex
003874r 2  CA               dex
003875r 2  B5 00            lda $00,x
003877r 2  35 02            and $02,x
003879r 2  49 FF            eor #$ff
00387Br 2  95 00            sta $00,x
00387Dr 2  B5 01            lda $01,x
00387Fr 2  35 03            and $03,x
003881r 2  49 FF            eor #$ff
003883r 2  95 01            sta $01,x
003885r 2               
003885r 2               ; src/prelude.fth:15:19 in `negate`
003885r 2               @OPCODE_1732:   ; [c64_ir] PushLiteral(1)
003885r 2  E8               inx
003886r 2  E8               inx
003887r 2  A9 01            lda #1
003889r 2  95 00            sta $00,x
00388Br 2  A9 00            lda #0
00388Dr 2  95 01            sta $01,x
00388Fr 2               
00388Fr 2               ; src/prelude.fth:15:21 in `negate`
00388Fr 2               @OPCODE_1733:   ; [c64_ir] Add
00388Fr 2                   ; 21
00388Fr 2  CA               dex
003890r 2  CA               dex
003891r 2  18               clc
003892r 2  B5 00            lda $00,x
003894r 2  75 02            adc $02,x
003896r 2  95 00            sta $00,x
003898r 2  B5 01            lda $01,x
00389Ar 2  75 03            adc $03,x
00389Cr 2  95 01            sta $01,x
00389Er 2               
00389Er 2               ; src/prelude.fth:16:19 in `-`
00389Er 2               @OPCODE_1734:   ; [c64_ir] Add
00389Er 2                   ; 21
00389Er 2  CA               dex
00389Fr 2  CA               dex
0038A0r 2  18               clc
0038A1r 2  B5 00            lda $00,x
0038A3r 2  75 02            adc $02,x
0038A5r 2  95 00            sta $00,x
0038A7r 2  B5 01            lda $01,x
0038A9r 2  75 03            adc $03,x
0038ABr 2  95 01            sta $01,x
0038ADr 2               
0038ADr 2               ; <inline>:0:0 in `main`
0038ADr 2               @OPCODE_1735:   ; [c64_ir] PushLiteral(7777)
0038ADr 2  E8               inx
0038AEr 2  E8               inx
0038AFr 2  A9 61            lda #97
0038B1r 2  95 00            sta $00,x
0038B3r 2  A9 1E            lda #30
0038B5r 2  95 01            sta $01,x
0038B7r 2               
0038B7r 2               ; <inline>:0:0 in `main`
0038B7r 2               @OPCODE_1736:   ; [c64_ir] AltPush
0038B7r 2  CA               dex
0038B8r 2  CA               dex
0038B9r 2  B5 03            lda $03,x
0038BBr 2  48               pha
0038BCr 2  B5 02            lda $02,x
0038BEr 2  48               pha
0038BFr 2               
0038BFr 2               ; snake.pax:8:10 in `random`
0038BFr 2               @OPCODE_1737:   ; [c64_ir] PushLiteral(127)
0038BFr 2  E8               inx
0038C0r 2  E8               inx
0038C1r 2  A9 7F            lda #127
0038C3r 2  95 00            sta $00,x
0038C5r 2  A9 00            lda #0
0038C7r 2  95 01            sta $01,x
0038C9r 2               
0038C9r 2               ; snake.pax:8:26 in `random`
0038C9r 2               @OPCODE_1738:   ; [c64_ir] Load
0038C9r 2  A1 00            lda ($00,x)
0038CBr 2  95 00            sta $00,x
0038CDr 2  A9 00            lda #0
0038CFr 2  95 01            sta $01,x
0038D1r 2               
0038D1r 2               ; snake.pax:8:28 in `random`
0038D1r 2               @OPCODE_1739:   ; [c64_ir] PushLiteral(255)
0038D1r 2  E8               inx
0038D2r 2  E8               inx
0038D3r 2  A9 FF            lda #255
0038D5r 2  95 00            sta $00,x
0038D7r 2  A9 00            lda #0
0038D9r 2  95 01            sta $01,x
0038DBr 2               
0038DBr 2               ; src/prelude.fth:28:9 in `and`
0038DBr 2               @OPCODE_1740:   ; [c64_ir] Nand
0038DBr 2                   ; 26
0038DBr 2  CA               dex
0038DCr 2  CA               dex
0038DDr 2  B5 00            lda $00,x
0038DFr 2  35 02            and $02,x
0038E1r 2  49 FF            eor #$ff
0038E3r 2  95 00            sta $00,x
0038E5r 2  B5 01            lda $01,x
0038E7r 2  35 03            and $03,x
0038E9r 2  49 FF            eor #$ff
0038EBr 2  95 01            sta $01,x
0038EDr 2               
0038EDr 2               ; src/prelude.fth:14:12 in `invert`
0038EDr 2               @OPCODE_1741:   ; [c64_ir] PushLiteral(-1)
0038EDr 2  E8               inx
0038EEr 2  E8               inx
0038EFr 2  A9 FF            lda #255
0038F1r 2  95 00            sta $00,x
0038F3r 2  A9 FF            lda #255
0038F5r 2  95 01            sta $01,x
0038F7r 2               
0038F7r 2               ; src/prelude.fth:14:15 in `invert`
0038F7r 2               @OPCODE_1742:   ; [c64_ir] Nand
0038F7r 2                   ; 26
0038F7r 2  CA               dex
0038F8r 2  CA               dex
0038F9r 2  B5 00            lda $00,x
0038FBr 2  35 02            and $02,x
0038FDr 2  49 FF            eor #$ff
0038FFr 2  95 00            sta $00,x
003901r 2  B5 01            lda $01,x
003903r 2  35 03            and $03,x
003905r 2  49 FF            eor #$ff
003907r 2  95 01            sta $01,x
003909r 2               
003909r 2               ; src/prelude.fth:3:10 in `swap`
003909r 2               @OPCODE_1743:   ; [c64_ir] AltPush
003909r 2  CA               dex
00390Ar 2  CA               dex
00390Br 2  B5 03            lda $03,x
00390Dr 2  48               pha
00390Er 2  B5 02            lda $02,x
003910r 2  48               pha
003911r 2               
003911r 2               ; src/prelude.fth:3:13 in `swap`
003911r 2               @OPCODE_1744:   ; [c64_ir] TempStore
003911r 2  CA               dex
003912r 2  CA               dex
003913r 2  B5 03            lda $03,x
003915r 2  85 96            sta TEMP_PAX2
003917r 2  B5 02            lda $02,x
003919r 2  85 95            sta TEMP_PAX1
00391Br 2               
00391Br 2               ; src/prelude.fth:3:19 in `swap`
00391Br 2               @OPCODE_1745:   ; [c64_ir] AltPop
00391Br 2  E8               inx
00391Cr 2  E8               inx
00391Dr 2  68               pla
00391Er 2  95 00            sta $00,x
003920r 2  68               pla
003921r 2  95 01            sta $01,x
003923r 2               
003923r 2               ; src/prelude.fth:3:22 in `swap`
003923r 2               @OPCODE_1746:   ; [c64_ir] TempLoad
003923r 2  E8               inx
003924r 2  E8               inx
003925r 2  A5 95            lda TEMP_PAX1
003927r 2  95 00            sta $00,x
003929r 2  A5 96            lda TEMP_PAX2
00392Br 2  95 01            sta $01,x
00392Dr 2               
00392Dr 2               ; <inline>:0:0 in `main`
00392Dr 2               @OPCODE_1747:   ; [c64_ir] PushLiteral(7777)
00392Dr 2  E8               inx
00392Er 2  E8               inx
00392Fr 2  A9 61            lda #97
003931r 2  95 00            sta $00,x
003933r 2  A9 1E            lda #30
003935r 2  95 01            sta $01,x
003937r 2               
003937r 2               ; <inline>:0:0 in `main`
003937r 2               @OPCODE_1748:   ; [c64_ir] AltPush
003937r 2  CA               dex
003938r 2  CA               dex
003939r 2  B5 03            lda $03,x
00393Br 2  48               pha
00393Cr 2  B5 02            lda $02,x
00393Er 2  48               pha
00393Fr 2               
00393Fr 2               ; src/prelude.fth:48:34 in `%`
00393Fr 2               @OPCODE_1749:   ; [c64_ir] LoopTarget(165)
00393Fr 2               
00393Fr 2               @target_166:
00393Fr 2               
00393Fr 2               ; src/prelude.fth:4:10 in `over`
00393Fr 2               @OPCODE_1751:   ; [c64_ir] AltPush
00393Fr 2  CA               dex
003940r 2  CA               dex
003941r 2  B5 03            lda $03,x
003943r 2  48               pha
003944r 2  B5 02            lda $02,x
003946r 2  48               pha
003947r 2               
003947r 2               ; src/prelude.fth:4:13 in `over`
003947r 2               @OPCODE_1752:   ; [c64_ir] TempStore
003947r 2  CA               dex
003948r 2  CA               dex
003949r 2  B5 03            lda $03,x
00394Br 2  85 96            sta TEMP_PAX2
00394Dr 2  B5 02            lda $02,x
00394Fr 2  85 95            sta TEMP_PAX1
003951r 2               
003951r 2               ; src/prelude.fth:4:19 in `over`
003951r 2               @OPCODE_1753:   ; [c64_ir] TempLoad
003951r 2  E8               inx
003952r 2  E8               inx
003953r 2  A5 95            lda TEMP_PAX1
003955r 2  95 00            sta $00,x
003957r 2  A5 96            lda TEMP_PAX2
003959r 2  95 01            sta $01,x
00395Br 2               
00395Br 2               ; src/prelude.fth:4:25 in `over`
00395Br 2               @OPCODE_1754:   ; [c64_ir] AltPop
00395Br 2  E8               inx
00395Cr 2  E8               inx
00395Dr 2  68               pla
00395Er 2  95 00            sta $00,x
003960r 2  68               pla
003961r 2  95 01            sta $01,x
003963r 2               
003963r 2               ; src/prelude.fth:4:28 in `over`
003963r 2               @OPCODE_1755:   ; [c64_ir] TempLoad
003963r 2  E8               inx
003964r 2  E8               inx
003965r 2  A5 95            lda TEMP_PAX1
003967r 2  95 00            sta $00,x
003969r 2  A5 96            lda TEMP_PAX2
00396Br 2  95 01            sta $01,x
00396Dr 2               
00396Dr 2               ; src/prelude.fth:4:10 in `over`
00396Dr 2               @OPCODE_1756:   ; [c64_ir] AltPush
00396Dr 2  CA               dex
00396Er 2  CA               dex
00396Fr 2  B5 03            lda $03,x
003971r 2  48               pha
003972r 2  B5 02            lda $02,x
003974r 2  48               pha
003975r 2               
003975r 2               ; src/prelude.fth:4:13 in `over`
003975r 2               @OPCODE_1757:   ; [c64_ir] TempStore
003975r 2  CA               dex
003976r 2  CA               dex
003977r 2  B5 03            lda $03,x
003979r 2  85 96            sta TEMP_PAX2
00397Br 2  B5 02            lda $02,x
00397Dr 2  85 95            sta TEMP_PAX1
00397Fr 2               
00397Fr 2               ; src/prelude.fth:4:19 in `over`
00397Fr 2               @OPCODE_1758:   ; [c64_ir] TempLoad
00397Fr 2  E8               inx
003980r 2  E8               inx
003981r 2  A5 95            lda TEMP_PAX1
003983r 2  95 00            sta $00,x
003985r 2  A5 96            lda TEMP_PAX2
003987r 2  95 01            sta $01,x
003989r 2               
003989r 2               ; src/prelude.fth:4:25 in `over`
003989r 2               @OPCODE_1759:   ; [c64_ir] AltPop
003989r 2  E8               inx
00398Ar 2  E8               inx
00398Br 2  68               pla
00398Cr 2  95 00            sta $00,x
00398Er 2  68               pla
00398Fr 2  95 01            sta $01,x
003991r 2               
003991r 2               ; src/prelude.fth:4:28 in `over`
003991r 2               @OPCODE_1760:   ; [c64_ir] TempLoad
003991r 2  E8               inx
003992r 2  E8               inx
003993r 2  A5 95            lda TEMP_PAX1
003995r 2  95 00            sta $00,x
003997r 2  A5 96            lda TEMP_PAX2
003999r 2  95 01            sta $01,x
00399Br 2               
00399Br 2               ; src/prelude.fth:14:12 in `invert`
00399Br 2               @OPCODE_1761:   ; [c64_ir] PushLiteral(-1)
00399Br 2  E8               inx
00399Cr 2  E8               inx
00399Dr 2  A9 FF            lda #255
00399Fr 2  95 00            sta $00,x
0039A1r 2  A9 FF            lda #255
0039A3r 2  95 01            sta $01,x
0039A5r 2               
0039A5r 2               ; src/prelude.fth:14:15 in `invert`
0039A5r 2               @OPCODE_1762:   ; [c64_ir] Nand
0039A5r 2                   ; 26
0039A5r 2  CA               dex
0039A6r 2  CA               dex
0039A7r 2  B5 00            lda $00,x
0039A9r 2  35 02            and $02,x
0039ABr 2  49 FF            eor #$ff
0039ADr 2  95 00            sta $00,x
0039AFr 2  B5 01            lda $01,x
0039B1r 2  35 03            and $03,x
0039B3r 2  49 FF            eor #$ff
0039B5r 2  95 01            sta $01,x
0039B7r 2               
0039B7r 2               ; src/prelude.fth:15:19 in `negate`
0039B7r 2               @OPCODE_1763:   ; [c64_ir] PushLiteral(1)
0039B7r 2  E8               inx
0039B8r 2  E8               inx
0039B9r 2  A9 01            lda #1
0039BBr 2  95 00            sta $00,x
0039BDr 2  A9 00            lda #0
0039BFr 2  95 01            sta $01,x
0039C1r 2               
0039C1r 2               ; src/prelude.fth:15:21 in `negate`
0039C1r 2               @OPCODE_1764:   ; [c64_ir] Add
0039C1r 2                   ; 21
0039C1r 2  CA               dex
0039C2r 2  CA               dex
0039C3r 2  18               clc
0039C4r 2  B5 00            lda $00,x
0039C6r 2  75 02            adc $02,x
0039C8r 2  95 00            sta $00,x
0039CAr 2  B5 01            lda $01,x
0039CCr 2  75 03            adc $03,x
0039CEr 2  95 01            sta $01,x
0039D0r 2               
0039D0r 2               ; src/prelude.fth:16:19 in `-`
0039D0r 2               @OPCODE_1765:   ; [c64_ir] Add
0039D0r 2                   ; 21
0039D0r 2  CA               dex
0039D1r 2  CA               dex
0039D2r 2  18               clc
0039D3r 2  B5 00            lda $00,x
0039D5r 2  75 02            adc $02,x
0039D7r 2  95 00            sta $00,x
0039D9r 2  B5 01            lda $01,x
0039DBr 2  75 03            adc $03,x
0039DDr 2  95 01            sta $01,x
0039DFr 2               
0039DFr 2               ; src/prelude.fth:6:10 in `dup`
0039DFr 2               @OPCODE_1766:   ; [c64_ir] TempStore
0039DFr 2  CA               dex
0039E0r 2  CA               dex
0039E1r 2  B5 03            lda $03,x
0039E3r 2  85 96            sta TEMP_PAX2
0039E5r 2  B5 02            lda $02,x
0039E7r 2  85 95            sta TEMP_PAX1
0039E9r 2               
0039E9r 2               ; src/prelude.fth:6:16 in `dup`
0039E9r 2               @OPCODE_1767:   ; [c64_ir] TempLoad
0039E9r 2  E8               inx
0039EAr 2  E8               inx
0039EBr 2  A5 95            lda TEMP_PAX1
0039EDr 2  95 00            sta $00,x
0039EFr 2  A5 96            lda TEMP_PAX2
0039F1r 2  95 01            sta $01,x
0039F3r 2               
0039F3r 2               ; src/prelude.fth:6:22 in `dup`
0039F3r 2               @OPCODE_1768:   ; [c64_ir] TempLoad
0039F3r 2  E8               inx
0039F4r 2  E8               inx
0039F5r 2  A5 95            lda TEMP_PAX1
0039F7r 2  95 00            sta $00,x
0039F9r 2  A5 96            lda TEMP_PAX2
0039FBr 2  95 01            sta $01,x
0039FDr 2               
0039FDr 2               ; src/prelude.fth:47:8 in `0<`
0039FDr 2               @OPCODE_1769:   ; [c64_ir] PushLiteral(-32768)
0039FDr 2  E8               inx
0039FEr 2  E8               inx
0039FFr 2  A9 00            lda #0
003A01r 2  95 00            sta $00,x
003A03r 2  A9 80            lda #128
003A05r 2  95 01            sta $01,x
003A07r 2               
003A07r 2               ; src/prelude.fth:47:14 in `0<`
003A07r 2               @OPCODE_1770:   ; [c64_ir] Nand
003A07r 2                   ; 26
003A07r 2  CA               dex
003A08r 2  CA               dex
003A09r 2  B5 00            lda $00,x
003A0Br 2  35 02            and $02,x
003A0Dr 2  49 FF            eor #$ff
003A0Fr 2  95 00            sta $00,x
003A11r 2  B5 01            lda $01,x
003A13r 2  35 03            and $03,x
003A15r 2  49 FF            eor #$ff
003A17r 2  95 01            sta $01,x
003A19r 2               
003A19r 2               ; src/prelude.fth:14:12 in `invert`
003A19r 2               @OPCODE_1771:   ; [c64_ir] PushLiteral(-1)
003A19r 2  E8               inx
003A1Ar 2  E8               inx
003A1Br 2  A9 FF            lda #255
003A1Dr 2  95 00            sta $00,x
003A1Fr 2  A9 FF            lda #255
003A21r 2  95 01            sta $01,x
003A23r 2               
003A23r 2               ; src/prelude.fth:14:15 in `invert`
003A23r 2               @OPCODE_1772:   ; [c64_ir] Nand
003A23r 2                   ; 26
003A23r 2  CA               dex
003A24r 2  CA               dex
003A25r 2  B5 00            lda $00,x
003A27r 2  35 02            and $02,x
003A29r 2  49 FF            eor #$ff
003A2Br 2  95 00            sta $00,x
003A2Dr 2  B5 01            lda $01,x
003A2Fr 2  35 03            and $03,x
003A31r 2  49 FF            eor #$ff
003A33r 2  95 01            sta $01,x
003A35r 2               
003A35r 2               ; src/prelude.fth:47:26 in `0<`
003A35r 2               @OPCODE_1773:   ; [c64_ir] JumpIf0(168)
003A35r 2  CA               dex
003A36r 2  CA               dex
003A37r 2  B5 02            lda $02,x
003A39r 2  15 03            ora $03,x
003A3Br 2  D0 03            bne *+5
003A3Dr 2  4C rr rr         jmp @target_168
003A40r 2               
003A40r 2               @target_167:
003A40r 2               
003A40r 2               ; src/prelude.fth:47:29 in `0<`
003A40r 2               @OPCODE_1775:   ; [c64_ir] PushLiteral(-1)
003A40r 2  E8               inx
003A41r 2  E8               inx
003A42r 2  A9 FF            lda #255
003A44r 2  95 00            sta $00,x
003A46r 2  A9 FF            lda #255
003A48r 2  95 01            sta $01,x
003A4Ar 2               
003A4Ar 2               ; src/prelude.fth:47:32 in `0<`
003A4Ar 2               @OPCODE_1776:   ; [c64_ir] JumpElse(169)
003A4Ar 2  4C rr rr         jmp @target_169
003A4Dr 2               
003A4Dr 2               @target_168:
003A4Dr 2               
003A4Dr 2               ; src/prelude.fth:47:37 in `0<`
003A4Dr 2               @OPCODE_1778:   ; [c64_ir] PushLiteral(0)
003A4Dr 2  E8               inx
003A4Er 2  E8               inx
003A4Fr 2  A9 00            lda #0
003A51r 2  95 00            sta $00,x
003A53r 2  A9 00            lda #0
003A55r 2  95 01            sta $01,x
003A57r 2               
003A57r 2               ; src/prelude.fth:47:39 in `0<`
003A57r 2               @OPCODE_1779:   ; [c64_ir] JumpTarget(168)
003A57r 2               
003A57r 2               @target_169:
003A57r 2               
003A57r 2               ; src/prelude.fth:48:54 in `%`
003A57r 2               @OPCODE_1781:   ; [c64_ir] JumpIf0(171)
003A57r 2  CA               dex
003A58r 2  CA               dex
003A59r 2  B5 02            lda $02,x
003A5Br 2  15 03            ora $03,x
003A5Dr 2  D0 03            bne *+5
003A5Fr 2  4C rr rr         jmp @target_171
003A62r 2               
003A62r 2               @target_170:
003A62r 2               
003A62r 2               ; src/prelude.fth:48:57 in `%`
003A62r 2               @OPCODE_1783:   ; [c64_ir] Add
003A62r 2                   ; 21
003A62r 2  CA               dex
003A63r 2  CA               dex
003A64r 2  18               clc
003A65r 2  B5 00            lda $00,x
003A67r 2  75 02            adc $02,x
003A69r 2  95 00            sta $00,x
003A6Br 2  B5 01            lda $01,x
003A6Dr 2  75 03            adc $03,x
003A6Fr 2  95 01            sta $01,x
003A71r 2               
003A71r 2               ; src/prelude.fth:48:59 in `%`
003A71r 2               @OPCODE_1784:   ; [c64_ir] PushLiteral(-1)
003A71r 2  E8               inx
003A72r 2  E8               inx
003A73r 2  A9 FF            lda #255
003A75r 2  95 00            sta $00,x
003A77r 2  A9 FF            lda #255
003A79r 2  95 01            sta $01,x
003A7Br 2               
003A7Br 2               ; src/prelude.fth:48:62 in `%`
003A7Br 2               @OPCODE_1785:   ; [c64_ir] JumpElse(172)
003A7Br 2  4C rr rr         jmp @target_172
003A7Er 2               
003A7Er 2               @target_171:
003A7Er 2               
003A7Er 2               ; src/prelude.fth:5:10 in `rot`
003A7Er 2               @OPCODE_1787:   ; [c64_ir] AltPush
003A7Er 2  CA               dex
003A7Fr 2  CA               dex
003A80r 2  B5 03            lda $03,x
003A82r 2  48               pha
003A83r 2  B5 02            lda $02,x
003A85r 2  48               pha
003A86r 2               
003A86r 2               ; src/prelude.fth:3:10 in `swap`
003A86r 2               @OPCODE_1788:   ; [c64_ir] AltPush
003A86r 2  CA               dex
003A87r 2  CA               dex
003A88r 2  B5 03            lda $03,x
003A8Ar 2  48               pha
003A8Br 2  B5 02            lda $02,x
003A8Dr 2  48               pha
003A8Er 2               
003A8Er 2               ; src/prelude.fth:3:13 in `swap`
003A8Er 2               @OPCODE_1789:   ; [c64_ir] TempStore
003A8Er 2  CA               dex
003A8Fr 2  CA               dex
003A90r 2  B5 03            lda $03,x
003A92r 2  85 96            sta TEMP_PAX2
003A94r 2  B5 02            lda $02,x
003A96r 2  85 95            sta TEMP_PAX1
003A98r 2               
003A98r 2               ; src/prelude.fth:3:19 in `swap`
003A98r 2               @OPCODE_1790:   ; [c64_ir] AltPop
003A98r 2  E8               inx
003A99r 2  E8               inx
003A9Ar 2  68               pla
003A9Br 2  95 00            sta $00,x
003A9Dr 2  68               pla
003A9Er 2  95 01            sta $01,x
003AA0r 2               
003AA0r 2               ; src/prelude.fth:5:18 in `rot`
003AA0r 2               @OPCODE_1791:   ; [c64_ir] AltPop
003AA0r 2  E8               inx
003AA1r 2  E8               inx
003AA2r 2  68               pla
003AA3r 2  95 00            sta $00,x
003AA5r 2  68               pla
003AA6r 2  95 01            sta $01,x
003AA8r 2               
003AA8r 2               ; src/prelude.fth:3:10 in `swap`
003AA8r 2               @OPCODE_1792:   ; [c64_ir] AltPush
003AA8r 2  CA               dex
003AA9r 2  CA               dex
003AAAr 2  B5 03            lda $03,x
003AACr 2  48               pha
003AADr 2  B5 02            lda $02,x
003AAFr 2  48               pha
003AB0r 2               
003AB0r 2               ; src/prelude.fth:3:19 in `swap`
003AB0r 2               @OPCODE_1793:   ; [c64_ir] AltPop
003AB0r 2  E8               inx
003AB1r 2  E8               inx
003AB2r 2  68               pla
003AB3r 2  95 00            sta $00,x
003AB5r 2  68               pla
003AB6r 2  95 01            sta $01,x
003AB8r 2               
003AB8r 2               ; src/prelude.fth:3:10 in `swap`
003AB8r 2               @OPCODE_1794:   ; [c64_ir] AltPush
003AB8r 2  CA               dex
003AB9r 2  CA               dex
003ABAr 2  B5 03            lda $03,x
003ABCr 2  48               pha
003ABDr 2  B5 02            lda $02,x
003ABFr 2  48               pha
003AC0r 2               
003AC0r 2               ; src/prelude.fth:3:13 in `swap`
003AC0r 2               @OPCODE_1795:   ; [c64_ir] TempStore
003AC0r 2  CA               dex
003AC1r 2  CA               dex
003AC2r 2  B5 03            lda $03,x
003AC4r 2  85 96            sta TEMP_PAX2
003AC6r 2  B5 02            lda $02,x
003AC8r 2  85 95            sta TEMP_PAX1
003ACAr 2               
003ACAr 2               ; src/prelude.fth:3:19 in `swap`
003ACAr 2               @OPCODE_1796:   ; [c64_ir] AltPop
003ACAr 2  E8               inx
003ACBr 2  E8               inx
003ACCr 2  68               pla
003ACDr 2  95 00            sta $00,x
003ACFr 2  68               pla
003AD0r 2  95 01            sta $01,x
003AD2r 2               
003AD2r 2               ; src/prelude.fth:3:22 in `swap`
003AD2r 2               @OPCODE_1797:   ; [c64_ir] TempLoad
003AD2r 2  E8               inx
003AD3r 2  E8               inx
003AD4r 2  A5 95            lda TEMP_PAX1
003AD6r 2  95 00            sta $00,x
003AD8r 2  A5 96            lda TEMP_PAX2
003ADAr 2  95 01            sta $01,x
003ADCr 2               
003ADCr 2               ; src/prelude.fth:48:81 in `%`
003ADCr 2               @OPCODE_1798:   ; [c64_ir] PushLiteral(0)
003ADCr 2  E8               inx
003ADDr 2  E8               inx
003ADEr 2  A9 00            lda #0
003AE0r 2  95 00            sta $00,x
003AE2r 2  A9 00            lda #0
003AE4r 2  95 01            sta $01,x
003AE6r 2               
003AE6r 2               ; src/prelude.fth:48:83 in `%`
003AE6r 2               @OPCODE_1799:   ; [c64_ir] JumpTarget(171)
003AE6r 2               
003AE6r 2               @target_172:
003AE6r 2               
003AE6r 2               ; src/prelude.fth:48:88 in `%`
003AE6r 2               @OPCODE_1801:   ; [c64_ir] LoopIf0(166)
003AE6r 2  CA               dex
003AE7r 2  CA               dex
003AE8r 2  B5 02            lda $02,x
003AEAr 2  15 03            ora $03,x
003AECr 2  D0 03            bne *+5
003AEEr 2  4C rr rr         jmp @target_166
003AF1r 2               
003AF1r 2               @target_173:
003AF1r 2               
003AF1r 2               ; src/prelude.fth:3:10 in `swap`
003AF1r 2               @OPCODE_1803:   ; [c64_ir] AltPush
003AF1r 2  CA               dex
003AF2r 2  CA               dex
003AF3r 2  B5 03            lda $03,x
003AF5r 2  48               pha
003AF6r 2  B5 02            lda $02,x
003AF8r 2  48               pha
003AF9r 2               
003AF9r 2               ; src/prelude.fth:3:13 in `swap`
003AF9r 2               @OPCODE_1804:   ; [c64_ir] TempStore
003AF9r 2  CA               dex
003AFAr 2  CA               dex
003AFBr 2  B5 03            lda $03,x
003AFDr 2  85 96            sta TEMP_PAX2
003AFFr 2  B5 02            lda $02,x
003B01r 2  85 95            sta TEMP_PAX1
003B03r 2               
003B03r 2               ; src/prelude.fth:3:19 in `swap`
003B03r 2               @OPCODE_1805:   ; [c64_ir] AltPop
003B03r 2  E8               inx
003B04r 2  E8               inx
003B05r 2  68               pla
003B06r 2  95 00            sta $00,x
003B08r 2  68               pla
003B09r 2  95 01            sta $01,x
003B0Br 2               
003B0Br 2               ; <inline>:0:0 in `main`
003B0Br 2               @OPCODE_1806:   ; [c64_ir] AltPop
003B0Br 2  E8               inx
003B0Cr 2  E8               inx
003B0Dr 2  68               pla
003B0Er 2  95 00            sta $00,x
003B10r 2  68               pla
003B11r 2  95 01            sta $01,x
003B13r 2               
003B13r 2               ; <inline>:0:0 in `main`
003B13r 2               @OPCODE_1807:   ; [c64_ir] Drop
003B13r 2  CA               dex
003B14r 2  CA               dex
003B15r 2               
003B15r 2               ; <inline>:0:0 in `main`
003B15r 2               @OPCODE_1808:   ; [c64_ir] AltPop
003B15r 2  E8               inx
003B16r 2  E8               inx
003B17r 2  68               pla
003B18r 2  95 00            sta $00,x
003B1Ar 2  68               pla
003B1Br 2  95 01            sta $01,x
003B1Dr 2               
003B1Dr 2               ; <inline>:0:0 in `main`
003B1Dr 2               @OPCODE_1809:   ; [c64_ir] Drop
003B1Dr 2  CA               dex
003B1Er 2  CA               dex
003B1Fr 2               
003B1Fr 2               ; snake.pax:165:20 in `random-x-position`
003B1Fr 2               @OPCODE_1810:   ; [c64_ir] PushLiteral(2)
003B1Fr 2  E8               inx
003B20r 2  E8               inx
003B21r 2  A9 02            lda #2
003B23r 2  95 00            sta $00,x
003B25r 2  A9 00            lda #0
003B27r 2  95 01            sta $01,x
003B29r 2               
003B29r 2               ; snake.pax:165:22 in `random-x-position`
003B29r 2               @OPCODE_1811:   ; [c64_ir] Add
003B29r 2                   ; 21
003B29r 2  CA               dex
003B2Ar 2  CA               dex
003B2Br 2  18               clc
003B2Cr 2  B5 00            lda $00,x
003B2Er 2  75 02            adc $02,x
003B30r 2  95 00            sta $00,x
003B32r 2  B5 01            lda $01,x
003B34r 2  75 03            adc $03,x
003B36r 2  95 01            sta $01,x
003B38r 2               
003B38r 2               ; <inline>:0:0 in `main`
003B38r 2               @OPCODE_1812:   ; [c64_ir] AltPop
003B38r 2  E8               inx
003B39r 2  E8               inx
003B3Ar 2  68               pla
003B3Br 2  95 00            sta $00,x
003B3Dr 2  68               pla
003B3Er 2  95 01            sta $01,x
003B40r 2               
003B40r 2               ; <inline>:0:0 in `main`
003B40r 2               @OPCODE_1813:   ; [c64_ir] Drop
003B40r 2  CA               dex
003B41r 2  CA               dex
003B42r 2               
003B42r 2               ; <inline>:0:0 in `main`
003B42r 2               @OPCODE_1814:   ; [c64_ir] PushLiteral(7777)
003B42r 2  E8               inx
003B43r 2  E8               inx
003B44r 2  A9 61            lda #97
003B46r 2  95 00            sta $00,x
003B48r 2  A9 1E            lda #30
003B4Ar 2  95 01            sta $01,x
003B4Cr 2               
003B4Cr 2               ; <inline>:0:0 in `main`
003B4Cr 2               @OPCODE_1815:   ; [c64_ir] AltPush
003B4Cr 2  CA               dex
003B4Dr 2  CA               dex
003B4Er 2  B5 03            lda $03,x
003B50r 2  48               pha
003B51r 2  B5 02            lda $02,x
003B53r 2  48               pha
003B54r 2               
003B54r 2               ; snake.pax:167:3 in `random-y-position`
003B54r 2               @OPCODE_1816:   ; [c64_ir] PushLiteral(25)
003B54r 2  E8               inx
003B55r 2  E8               inx
003B56r 2  A9 19            lda #25
003B58r 2  95 00            sta $00,x
003B5Ar 2  A9 00            lda #0
003B5Cr 2  95 01            sta $01,x
003B5Er 2               
003B5Er 2               ; snake.pax:167:10 in `random-y-position`
003B5Er 2               @OPCODE_1817:   ; [c64_ir] PushLiteral(4)
003B5Er 2  E8               inx
003B5Fr 2  E8               inx
003B60r 2  A9 04            lda #4
003B62r 2  95 00            sta $00,x
003B64r 2  A9 00            lda #0
003B66r 2  95 01            sta $01,x
003B68r 2               
003B68r 2               ; src/prelude.fth:14:12 in `invert`
003B68r 2               @OPCODE_1818:   ; [c64_ir] PushLiteral(-1)
003B68r 2  E8               inx
003B69r 2  E8               inx
003B6Ar 2  A9 FF            lda #255
003B6Cr 2  95 00            sta $00,x
003B6Er 2  A9 FF            lda #255
003B70r 2  95 01            sta $01,x
003B72r 2               
003B72r 2               ; src/prelude.fth:14:15 in `invert`
003B72r 2               @OPCODE_1819:   ; [c64_ir] Nand
003B72r 2                   ; 26
003B72r 2  CA               dex
003B73r 2  CA               dex
003B74r 2  B5 00            lda $00,x
003B76r 2  35 02            and $02,x
003B78r 2  49 FF            eor #$ff
003B7Ar 2  95 00            sta $00,x
003B7Cr 2  B5 01            lda $01,x
003B7Er 2  35 03            and $03,x
003B80r 2  49 FF            eor #$ff
003B82r 2  95 01            sta $01,x
003B84r 2               
003B84r 2               ; src/prelude.fth:15:19 in `negate`
003B84r 2               @OPCODE_1820:   ; [c64_ir] PushLiteral(1)
003B84r 2  E8               inx
003B85r 2  E8               inx
003B86r 2  A9 01            lda #1
003B88r 2  95 00            sta $00,x
003B8Ar 2  A9 00            lda #0
003B8Cr 2  95 01            sta $01,x
003B8Er 2               
003B8Er 2               ; src/prelude.fth:15:21 in `negate`
003B8Er 2               @OPCODE_1821:   ; [c64_ir] Add
003B8Er 2                   ; 21
003B8Er 2  CA               dex
003B8Fr 2  CA               dex
003B90r 2  18               clc
003B91r 2  B5 00            lda $00,x
003B93r 2  75 02            adc $02,x
003B95r 2  95 00            sta $00,x
003B97r 2  B5 01            lda $01,x
003B99r 2  75 03            adc $03,x
003B9Br 2  95 01            sta $01,x
003B9Dr 2               
003B9Dr 2               ; src/prelude.fth:16:19 in `-`
003B9Dr 2               @OPCODE_1822:   ; [c64_ir] Add
003B9Dr 2                   ; 21
003B9Dr 2  CA               dex
003B9Er 2  CA               dex
003B9Fr 2  18               clc
003BA0r 2  B5 00            lda $00,x
003BA2r 2  75 02            adc $02,x
003BA4r 2  95 00            sta $00,x
003BA6r 2  B5 01            lda $01,x
003BA8r 2  75 03            adc $03,x
003BAAr 2  95 01            sta $01,x
003BACr 2               
003BACr 2               ; <inline>:0:0 in `main`
003BACr 2               @OPCODE_1823:   ; [c64_ir] PushLiteral(7777)
003BACr 2  E8               inx
003BADr 2  E8               inx
003BAEr 2  A9 61            lda #97
003BB0r 2  95 00            sta $00,x
003BB2r 2  A9 1E            lda #30
003BB4r 2  95 01            sta $01,x
003BB6r 2               
003BB6r 2               ; <inline>:0:0 in `main`
003BB6r 2               @OPCODE_1824:   ; [c64_ir] AltPush
003BB6r 2  CA               dex
003BB7r 2  CA               dex
003BB8r 2  B5 03            lda $03,x
003BBAr 2  48               pha
003BBBr 2  B5 02            lda $02,x
003BBDr 2  48               pha
003BBEr 2               
003BBEr 2               ; snake.pax:8:10 in `random`
003BBEr 2               @OPCODE_1825:   ; [c64_ir] PushLiteral(127)
003BBEr 2  E8               inx
003BBFr 2  E8               inx
003BC0r 2  A9 7F            lda #127
003BC2r 2  95 00            sta $00,x
003BC4r 2  A9 00            lda #0
003BC6r 2  95 01            sta $01,x
003BC8r 2               
003BC8r 2               ; snake.pax:8:26 in `random`
003BC8r 2               @OPCODE_1826:   ; [c64_ir] Load
003BC8r 2  A1 00            lda ($00,x)
003BCAr 2  95 00            sta $00,x
003BCCr 2  A9 00            lda #0
003BCEr 2  95 01            sta $01,x
003BD0r 2               
003BD0r 2               ; snake.pax:8:28 in `random`
003BD0r 2               @OPCODE_1827:   ; [c64_ir] PushLiteral(255)
003BD0r 2  E8               inx
003BD1r 2  E8               inx
003BD2r 2  A9 FF            lda #255
003BD4r 2  95 00            sta $00,x
003BD6r 2  A9 00            lda #0
003BD8r 2  95 01            sta $01,x
003BDAr 2               
003BDAr 2               ; src/prelude.fth:28:9 in `and`
003BDAr 2               @OPCODE_1828:   ; [c64_ir] Nand
003BDAr 2                   ; 26
003BDAr 2  CA               dex
003BDBr 2  CA               dex
003BDCr 2  B5 00            lda $00,x
003BDEr 2  35 02            and $02,x
003BE0r 2  49 FF            eor #$ff
003BE2r 2  95 00            sta $00,x
003BE4r 2  B5 01            lda $01,x
003BE6r 2  35 03            and $03,x
003BE8r 2  49 FF            eor #$ff
003BEAr 2  95 01            sta $01,x
003BECr 2               
003BECr 2               ; src/prelude.fth:14:12 in `invert`
003BECr 2               @OPCODE_1829:   ; [c64_ir] PushLiteral(-1)
003BECr 2  E8               inx
003BEDr 2  E8               inx
003BEEr 2  A9 FF            lda #255
003BF0r 2  95 00            sta $00,x
003BF2r 2  A9 FF            lda #255
003BF4r 2  95 01            sta $01,x
003BF6r 2               
003BF6r 2               ; src/prelude.fth:14:15 in `invert`
003BF6r 2               @OPCODE_1830:   ; [c64_ir] Nand
003BF6r 2                   ; 26
003BF6r 2  CA               dex
003BF7r 2  CA               dex
003BF8r 2  B5 00            lda $00,x
003BFAr 2  35 02            and $02,x
003BFCr 2  49 FF            eor #$ff
003BFEr 2  95 00            sta $00,x
003C00r 2  B5 01            lda $01,x
003C02r 2  35 03            and $03,x
003C04r 2  49 FF            eor #$ff
003C06r 2  95 01            sta $01,x
003C08r 2               
003C08r 2               ; src/prelude.fth:3:10 in `swap`
003C08r 2               @OPCODE_1831:   ; [c64_ir] AltPush
003C08r 2  CA               dex
003C09r 2  CA               dex
003C0Ar 2  B5 03            lda $03,x
003C0Cr 2  48               pha
003C0Dr 2  B5 02            lda $02,x
003C0Fr 2  48               pha
003C10r 2               
003C10r 2               ; src/prelude.fth:3:13 in `swap`
003C10r 2               @OPCODE_1832:   ; [c64_ir] TempStore
003C10r 2  CA               dex
003C11r 2  CA               dex
003C12r 2  B5 03            lda $03,x
003C14r 2  85 96            sta TEMP_PAX2
003C16r 2  B5 02            lda $02,x
003C18r 2  85 95            sta TEMP_PAX1
003C1Ar 2               
003C1Ar 2               ; src/prelude.fth:3:19 in `swap`
003C1Ar 2               @OPCODE_1833:   ; [c64_ir] AltPop
003C1Ar 2  E8               inx
003C1Br 2  E8               inx
003C1Cr 2  68               pla
003C1Dr 2  95 00            sta $00,x
003C1Fr 2  68               pla
003C20r 2  95 01            sta $01,x
003C22r 2               
003C22r 2               ; src/prelude.fth:3:22 in `swap`
003C22r 2               @OPCODE_1834:   ; [c64_ir] TempLoad
003C22r 2  E8               inx
003C23r 2  E8               inx
003C24r 2  A5 95            lda TEMP_PAX1
003C26r 2  95 00            sta $00,x
003C28r 2  A5 96            lda TEMP_PAX2
003C2Ar 2  95 01            sta $01,x
003C2Cr 2               
003C2Cr 2               ; <inline>:0:0 in `main`
003C2Cr 2               @OPCODE_1835:   ; [c64_ir] PushLiteral(7777)
003C2Cr 2  E8               inx
003C2Dr 2  E8               inx
003C2Er 2  A9 61            lda #97
003C30r 2  95 00            sta $00,x
003C32r 2  A9 1E            lda #30
003C34r 2  95 01            sta $01,x
003C36r 2               
003C36r 2               ; <inline>:0:0 in `main`
003C36r 2               @OPCODE_1836:   ; [c64_ir] AltPush
003C36r 2  CA               dex
003C37r 2  CA               dex
003C38r 2  B5 03            lda $03,x
003C3Ar 2  48               pha
003C3Br 2  B5 02            lda $02,x
003C3Dr 2  48               pha
003C3Er 2               
003C3Er 2               ; src/prelude.fth:48:34 in `%`
003C3Er 2               @OPCODE_1837:   ; [c64_ir] LoopTarget(173)
003C3Er 2               
003C3Er 2               @target_174:
003C3Er 2               
003C3Er 2               ; src/prelude.fth:4:10 in `over`
003C3Er 2               @OPCODE_1839:   ; [c64_ir] AltPush
003C3Er 2  CA               dex
003C3Fr 2  CA               dex
003C40r 2  B5 03            lda $03,x
003C42r 2  48               pha
003C43r 2  B5 02            lda $02,x
003C45r 2  48               pha
003C46r 2               
003C46r 2               ; src/prelude.fth:4:13 in `over`
003C46r 2               @OPCODE_1840:   ; [c64_ir] TempStore
003C46r 2  CA               dex
003C47r 2  CA               dex
003C48r 2  B5 03            lda $03,x
003C4Ar 2  85 96            sta TEMP_PAX2
003C4Cr 2  B5 02            lda $02,x
003C4Er 2  85 95            sta TEMP_PAX1
003C50r 2               
003C50r 2               ; src/prelude.fth:4:19 in `over`
003C50r 2               @OPCODE_1841:   ; [c64_ir] TempLoad
003C50r 2  E8               inx
003C51r 2  E8               inx
003C52r 2  A5 95            lda TEMP_PAX1
003C54r 2  95 00            sta $00,x
003C56r 2  A5 96            lda TEMP_PAX2
003C58r 2  95 01            sta $01,x
003C5Ar 2               
003C5Ar 2               ; src/prelude.fth:4:25 in `over`
003C5Ar 2               @OPCODE_1842:   ; [c64_ir] AltPop
003C5Ar 2  E8               inx
003C5Br 2  E8               inx
003C5Cr 2  68               pla
003C5Dr 2  95 00            sta $00,x
003C5Fr 2  68               pla
003C60r 2  95 01            sta $01,x
003C62r 2               
003C62r 2               ; src/prelude.fth:4:28 in `over`
003C62r 2               @OPCODE_1843:   ; [c64_ir] TempLoad
003C62r 2  E8               inx
003C63r 2  E8               inx
003C64r 2  A5 95            lda TEMP_PAX1
003C66r 2  95 00            sta $00,x
003C68r 2  A5 96            lda TEMP_PAX2
003C6Ar 2  95 01            sta $01,x
003C6Cr 2               
003C6Cr 2               ; src/prelude.fth:4:10 in `over`
003C6Cr 2               @OPCODE_1844:   ; [c64_ir] AltPush
003C6Cr 2  CA               dex
003C6Dr 2  CA               dex
003C6Er 2  B5 03            lda $03,x
003C70r 2  48               pha
003C71r 2  B5 02            lda $02,x
003C73r 2  48               pha
003C74r 2               
003C74r 2               ; src/prelude.fth:4:13 in `over`
003C74r 2               @OPCODE_1845:   ; [c64_ir] TempStore
003C74r 2  CA               dex
003C75r 2  CA               dex
003C76r 2  B5 03            lda $03,x
003C78r 2  85 96            sta TEMP_PAX2
003C7Ar 2  B5 02            lda $02,x
003C7Cr 2  85 95            sta TEMP_PAX1
003C7Er 2               
003C7Er 2               ; src/prelude.fth:4:19 in `over`
003C7Er 2               @OPCODE_1846:   ; [c64_ir] TempLoad
003C7Er 2  E8               inx
003C7Fr 2  E8               inx
003C80r 2  A5 95            lda TEMP_PAX1
003C82r 2  95 00            sta $00,x
003C84r 2  A5 96            lda TEMP_PAX2
003C86r 2  95 01            sta $01,x
003C88r 2               
003C88r 2               ; src/prelude.fth:4:25 in `over`
003C88r 2               @OPCODE_1847:   ; [c64_ir] AltPop
003C88r 2  E8               inx
003C89r 2  E8               inx
003C8Ar 2  68               pla
003C8Br 2  95 00            sta $00,x
003C8Dr 2  68               pla
003C8Er 2  95 01            sta $01,x
003C90r 2               
003C90r 2               ; src/prelude.fth:4:28 in `over`
003C90r 2               @OPCODE_1848:   ; [c64_ir] TempLoad
003C90r 2  E8               inx
003C91r 2  E8               inx
003C92r 2  A5 95            lda TEMP_PAX1
003C94r 2  95 00            sta $00,x
003C96r 2  A5 96            lda TEMP_PAX2
003C98r 2  95 01            sta $01,x
003C9Ar 2               
003C9Ar 2               ; src/prelude.fth:14:12 in `invert`
003C9Ar 2               @OPCODE_1849:   ; [c64_ir] PushLiteral(-1)
003C9Ar 2  E8               inx
003C9Br 2  E8               inx
003C9Cr 2  A9 FF            lda #255
003C9Er 2  95 00            sta $00,x
003CA0r 2  A9 FF            lda #255
003CA2r 2  95 01            sta $01,x
003CA4r 2               
003CA4r 2               ; src/prelude.fth:14:15 in `invert`
003CA4r 2               @OPCODE_1850:   ; [c64_ir] Nand
003CA4r 2                   ; 26
003CA4r 2  CA               dex
003CA5r 2  CA               dex
003CA6r 2  B5 00            lda $00,x
003CA8r 2  35 02            and $02,x
003CAAr 2  49 FF            eor #$ff
003CACr 2  95 00            sta $00,x
003CAEr 2  B5 01            lda $01,x
003CB0r 2  35 03            and $03,x
003CB2r 2  49 FF            eor #$ff
003CB4r 2  95 01            sta $01,x
003CB6r 2               
003CB6r 2               ; src/prelude.fth:15:19 in `negate`
003CB6r 2               @OPCODE_1851:   ; [c64_ir] PushLiteral(1)
003CB6r 2  E8               inx
003CB7r 2  E8               inx
003CB8r 2  A9 01            lda #1
003CBAr 2  95 00            sta $00,x
003CBCr 2  A9 00            lda #0
003CBEr 2  95 01            sta $01,x
003CC0r 2               
003CC0r 2               ; src/prelude.fth:15:21 in `negate`
003CC0r 2               @OPCODE_1852:   ; [c64_ir] Add
003CC0r 2                   ; 21
003CC0r 2  CA               dex
003CC1r 2  CA               dex
003CC2r 2  18               clc
003CC3r 2  B5 00            lda $00,x
003CC5r 2  75 02            adc $02,x
003CC7r 2  95 00            sta $00,x
003CC9r 2  B5 01            lda $01,x
003CCBr 2  75 03            adc $03,x
003CCDr 2  95 01            sta $01,x
003CCFr 2               
003CCFr 2               ; src/prelude.fth:16:19 in `-`
003CCFr 2               @OPCODE_1853:   ; [c64_ir] Add
003CCFr 2                   ; 21
003CCFr 2  CA               dex
003CD0r 2  CA               dex
003CD1r 2  18               clc
003CD2r 2  B5 00            lda $00,x
003CD4r 2  75 02            adc $02,x
003CD6r 2  95 00            sta $00,x
003CD8r 2  B5 01            lda $01,x
003CDAr 2  75 03            adc $03,x
003CDCr 2  95 01            sta $01,x
003CDEr 2               
003CDEr 2               ; src/prelude.fth:6:10 in `dup`
003CDEr 2               @OPCODE_1854:   ; [c64_ir] TempStore
003CDEr 2  CA               dex
003CDFr 2  CA               dex
003CE0r 2  B5 03            lda $03,x
003CE2r 2  85 96            sta TEMP_PAX2
003CE4r 2  B5 02            lda $02,x
003CE6r 2  85 95            sta TEMP_PAX1
003CE8r 2               
003CE8r 2               ; src/prelude.fth:6:16 in `dup`
003CE8r 2               @OPCODE_1855:   ; [c64_ir] TempLoad
003CE8r 2  E8               inx
003CE9r 2  E8               inx
003CEAr 2  A5 95            lda TEMP_PAX1
003CECr 2  95 00            sta $00,x
003CEEr 2  A5 96            lda TEMP_PAX2
003CF0r 2  95 01            sta $01,x
003CF2r 2               
003CF2r 2               ; src/prelude.fth:6:22 in `dup`
003CF2r 2               @OPCODE_1856:   ; [c64_ir] TempLoad
003CF2r 2  E8               inx
003CF3r 2  E8               inx
003CF4r 2  A5 95            lda TEMP_PAX1
003CF6r 2  95 00            sta $00,x
003CF8r 2  A5 96            lda TEMP_PAX2
003CFAr 2  95 01            sta $01,x
003CFCr 2               
003CFCr 2               ; src/prelude.fth:47:8 in `0<`
003CFCr 2               @OPCODE_1857:   ; [c64_ir] PushLiteral(-32768)
003CFCr 2  E8               inx
003CFDr 2  E8               inx
003CFEr 2  A9 00            lda #0
003D00r 2  95 00            sta $00,x
003D02r 2  A9 80            lda #128
003D04r 2  95 01            sta $01,x
003D06r 2               
003D06r 2               ; src/prelude.fth:47:14 in `0<`
003D06r 2               @OPCODE_1858:   ; [c64_ir] Nand
003D06r 2                   ; 26
003D06r 2  CA               dex
003D07r 2  CA               dex
003D08r 2  B5 00            lda $00,x
003D0Ar 2  35 02            and $02,x
003D0Cr 2  49 FF            eor #$ff
003D0Er 2  95 00            sta $00,x
003D10r 2  B5 01            lda $01,x
003D12r 2  35 03            and $03,x
003D14r 2  49 FF            eor #$ff
003D16r 2  95 01            sta $01,x
003D18r 2               
003D18r 2               ; src/prelude.fth:14:12 in `invert`
003D18r 2               @OPCODE_1859:   ; [c64_ir] PushLiteral(-1)
003D18r 2  E8               inx
003D19r 2  E8               inx
003D1Ar 2  A9 FF            lda #255
003D1Cr 2  95 00            sta $00,x
003D1Er 2  A9 FF            lda #255
003D20r 2  95 01            sta $01,x
003D22r 2               
003D22r 2               ; src/prelude.fth:14:15 in `invert`
003D22r 2               @OPCODE_1860:   ; [c64_ir] Nand
003D22r 2                   ; 26
003D22r 2  CA               dex
003D23r 2  CA               dex
003D24r 2  B5 00            lda $00,x
003D26r 2  35 02            and $02,x
003D28r 2  49 FF            eor #$ff
003D2Ar 2  95 00            sta $00,x
003D2Cr 2  B5 01            lda $01,x
003D2Er 2  35 03            and $03,x
003D30r 2  49 FF            eor #$ff
003D32r 2  95 01            sta $01,x
003D34r 2               
003D34r 2               ; src/prelude.fth:47:26 in `0<`
003D34r 2               @OPCODE_1861:   ; [c64_ir] JumpIf0(176)
003D34r 2  CA               dex
003D35r 2  CA               dex
003D36r 2  B5 02            lda $02,x
003D38r 2  15 03            ora $03,x
003D3Ar 2  D0 03            bne *+5
003D3Cr 2  4C rr rr         jmp @target_176
003D3Fr 2               
003D3Fr 2               @target_175:
003D3Fr 2               
003D3Fr 2               ; src/prelude.fth:47:29 in `0<`
003D3Fr 2               @OPCODE_1863:   ; [c64_ir] PushLiteral(-1)
003D3Fr 2  E8               inx
003D40r 2  E8               inx
003D41r 2  A9 FF            lda #255
003D43r 2  95 00            sta $00,x
003D45r 2  A9 FF            lda #255
003D47r 2  95 01            sta $01,x
003D49r 2               
003D49r 2               ; src/prelude.fth:47:32 in `0<`
003D49r 2               @OPCODE_1864:   ; [c64_ir] JumpElse(177)
003D49r 2  4C rr rr         jmp @target_177
003D4Cr 2               
003D4Cr 2               @target_176:
003D4Cr 2               
003D4Cr 2               ; src/prelude.fth:47:37 in `0<`
003D4Cr 2               @OPCODE_1866:   ; [c64_ir] PushLiteral(0)
003D4Cr 2  E8               inx
003D4Dr 2  E8               inx
003D4Er 2  A9 00            lda #0
003D50r 2  95 00            sta $00,x
003D52r 2  A9 00            lda #0
003D54r 2  95 01            sta $01,x
003D56r 2               
003D56r 2               ; src/prelude.fth:47:39 in `0<`
003D56r 2               @OPCODE_1867:   ; [c64_ir] JumpTarget(176)
003D56r 2               
003D56r 2               @target_177:
003D56r 2               
003D56r 2               ; src/prelude.fth:48:54 in `%`
003D56r 2               @OPCODE_1869:   ; [c64_ir] JumpIf0(179)
003D56r 2  CA               dex
003D57r 2  CA               dex
003D58r 2  B5 02            lda $02,x
003D5Ar 2  15 03            ora $03,x
003D5Cr 2  D0 03            bne *+5
003D5Er 2  4C rr rr         jmp @target_179
003D61r 2               
003D61r 2               @target_178:
003D61r 2               
003D61r 2               ; src/prelude.fth:48:57 in `%`
003D61r 2               @OPCODE_1871:   ; [c64_ir] Add
003D61r 2                   ; 21
003D61r 2  CA               dex
003D62r 2  CA               dex
003D63r 2  18               clc
003D64r 2  B5 00            lda $00,x
003D66r 2  75 02            adc $02,x
003D68r 2  95 00            sta $00,x
003D6Ar 2  B5 01            lda $01,x
003D6Cr 2  75 03            adc $03,x
003D6Er 2  95 01            sta $01,x
003D70r 2               
003D70r 2               ; src/prelude.fth:48:59 in `%`
003D70r 2               @OPCODE_1872:   ; [c64_ir] PushLiteral(-1)
003D70r 2  E8               inx
003D71r 2  E8               inx
003D72r 2  A9 FF            lda #255
003D74r 2  95 00            sta $00,x
003D76r 2  A9 FF            lda #255
003D78r 2  95 01            sta $01,x
003D7Ar 2               
003D7Ar 2               ; src/prelude.fth:48:62 in `%`
003D7Ar 2               @OPCODE_1873:   ; [c64_ir] JumpElse(180)
003D7Ar 2  4C rr rr         jmp @target_180
003D7Dr 2               
003D7Dr 2               @target_179:
003D7Dr 2               
003D7Dr 2               ; src/prelude.fth:5:10 in `rot`
003D7Dr 2               @OPCODE_1875:   ; [c64_ir] AltPush
003D7Dr 2  CA               dex
003D7Er 2  CA               dex
003D7Fr 2  B5 03            lda $03,x
003D81r 2  48               pha
003D82r 2  B5 02            lda $02,x
003D84r 2  48               pha
003D85r 2               
003D85r 2               ; src/prelude.fth:3:10 in `swap`
003D85r 2               @OPCODE_1876:   ; [c64_ir] AltPush
003D85r 2  CA               dex
003D86r 2  CA               dex
003D87r 2  B5 03            lda $03,x
003D89r 2  48               pha
003D8Ar 2  B5 02            lda $02,x
003D8Cr 2  48               pha
003D8Dr 2               
003D8Dr 2               ; src/prelude.fth:3:13 in `swap`
003D8Dr 2               @OPCODE_1877:   ; [c64_ir] TempStore
003D8Dr 2  CA               dex
003D8Er 2  CA               dex
003D8Fr 2  B5 03            lda $03,x
003D91r 2  85 96            sta TEMP_PAX2
003D93r 2  B5 02            lda $02,x
003D95r 2  85 95            sta TEMP_PAX1
003D97r 2               
003D97r 2               ; src/prelude.fth:3:19 in `swap`
003D97r 2               @OPCODE_1878:   ; [c64_ir] AltPop
003D97r 2  E8               inx
003D98r 2  E8               inx
003D99r 2  68               pla
003D9Ar 2  95 00            sta $00,x
003D9Cr 2  68               pla
003D9Dr 2  95 01            sta $01,x
003D9Fr 2               
003D9Fr 2               ; src/prelude.fth:5:18 in `rot`
003D9Fr 2               @OPCODE_1879:   ; [c64_ir] AltPop
003D9Fr 2  E8               inx
003DA0r 2  E8               inx
003DA1r 2  68               pla
003DA2r 2  95 00            sta $00,x
003DA4r 2  68               pla
003DA5r 2  95 01            sta $01,x
003DA7r 2               
003DA7r 2               ; src/prelude.fth:3:10 in `swap`
003DA7r 2               @OPCODE_1880:   ; [c64_ir] AltPush
003DA7r 2  CA               dex
003DA8r 2  CA               dex
003DA9r 2  B5 03            lda $03,x
003DABr 2  48               pha
003DACr 2  B5 02            lda $02,x
003DAEr 2  48               pha
003DAFr 2               
003DAFr 2               ; src/prelude.fth:3:19 in `swap`
003DAFr 2               @OPCODE_1881:   ; [c64_ir] AltPop
003DAFr 2  E8               inx
003DB0r 2  E8               inx
003DB1r 2  68               pla
003DB2r 2  95 00            sta $00,x
003DB4r 2  68               pla
003DB5r 2  95 01            sta $01,x
003DB7r 2               
003DB7r 2               ; src/prelude.fth:3:10 in `swap`
003DB7r 2               @OPCODE_1882:   ; [c64_ir] AltPush
003DB7r 2  CA               dex
003DB8r 2  CA               dex
003DB9r 2  B5 03            lda $03,x
003DBBr 2  48               pha
003DBCr 2  B5 02            lda $02,x
003DBEr 2  48               pha
003DBFr 2               
003DBFr 2               ; src/prelude.fth:3:13 in `swap`
003DBFr 2               @OPCODE_1883:   ; [c64_ir] TempStore
003DBFr 2  CA               dex
003DC0r 2  CA               dex
003DC1r 2  B5 03            lda $03,x
003DC3r 2  85 96            sta TEMP_PAX2
003DC5r 2  B5 02            lda $02,x
003DC7r 2  85 95            sta TEMP_PAX1
003DC9r 2               
003DC9r 2               ; src/prelude.fth:3:19 in `swap`
003DC9r 2               @OPCODE_1884:   ; [c64_ir] AltPop
003DC9r 2  E8               inx
003DCAr 2  E8               inx
003DCBr 2  68               pla
003DCCr 2  95 00            sta $00,x
003DCEr 2  68               pla
003DCFr 2  95 01            sta $01,x
003DD1r 2               
003DD1r 2               ; src/prelude.fth:3:22 in `swap`
003DD1r 2               @OPCODE_1885:   ; [c64_ir] TempLoad
003DD1r 2  E8               inx
003DD2r 2  E8               inx
003DD3r 2  A5 95            lda TEMP_PAX1
003DD5r 2  95 00            sta $00,x
003DD7r 2  A5 96            lda TEMP_PAX2
003DD9r 2  95 01            sta $01,x
003DDBr 2               
003DDBr 2               ; src/prelude.fth:48:81 in `%`
003DDBr 2               @OPCODE_1886:   ; [c64_ir] PushLiteral(0)
003DDBr 2  E8               inx
003DDCr 2  E8               inx
003DDDr 2  A9 00            lda #0
003DDFr 2  95 00            sta $00,x
003DE1r 2  A9 00            lda #0
003DE3r 2  95 01            sta $01,x
003DE5r 2               
003DE5r 2               ; src/prelude.fth:48:83 in `%`
003DE5r 2               @OPCODE_1887:   ; [c64_ir] JumpTarget(179)
003DE5r 2               
003DE5r 2               @target_180:
003DE5r 2               
003DE5r 2               ; src/prelude.fth:48:88 in `%`
003DE5r 2               @OPCODE_1889:   ; [c64_ir] LoopIf0(174)
003DE5r 2  CA               dex
003DE6r 2  CA               dex
003DE7r 2  B5 02            lda $02,x
003DE9r 2  15 03            ora $03,x
003DEBr 2  D0 03            bne *+5
003DEDr 2  4C rr rr         jmp @target_174
003DF0r 2               
003DF0r 2               @target_181:
003DF0r 2               
003DF0r 2               ; src/prelude.fth:3:10 in `swap`
003DF0r 2               @OPCODE_1891:   ; [c64_ir] AltPush
003DF0r 2  CA               dex
003DF1r 2  CA               dex
003DF2r 2  B5 03            lda $03,x
003DF4r 2  48               pha
003DF5r 2  B5 02            lda $02,x
003DF7r 2  48               pha
003DF8r 2               
003DF8r 2               ; src/prelude.fth:3:13 in `swap`
003DF8r 2               @OPCODE_1892:   ; [c64_ir] TempStore
003DF8r 2  CA               dex
003DF9r 2  CA               dex
003DFAr 2  B5 03            lda $03,x
003DFCr 2  85 96            sta TEMP_PAX2
003DFEr 2  B5 02            lda $02,x
003E00r 2  85 95            sta TEMP_PAX1
003E02r 2               
003E02r 2               ; src/prelude.fth:3:19 in `swap`
003E02r 2               @OPCODE_1893:   ; [c64_ir] AltPop
003E02r 2  E8               inx
003E03r 2  E8               inx
003E04r 2  68               pla
003E05r 2  95 00            sta $00,x
003E07r 2  68               pla
003E08r 2  95 01            sta $01,x
003E0Ar 2               
003E0Ar 2               ; <inline>:0:0 in `main`
003E0Ar 2               @OPCODE_1894:   ; [c64_ir] AltPop
003E0Ar 2  E8               inx
003E0Br 2  E8               inx
003E0Cr 2  68               pla
003E0Dr 2  95 00            sta $00,x
003E0Fr 2  68               pla
003E10r 2  95 01            sta $01,x
003E12r 2               
003E12r 2               ; <inline>:0:0 in `main`
003E12r 2               @OPCODE_1895:   ; [c64_ir] Drop
003E12r 2  CA               dex
003E13r 2  CA               dex
003E14r 2               
003E14r 2               ; <inline>:0:0 in `main`
003E14r 2               @OPCODE_1896:   ; [c64_ir] AltPop
003E14r 2  E8               inx
003E15r 2  E8               inx
003E16r 2  68               pla
003E17r 2  95 00            sta $00,x
003E19r 2  68               pla
003E1Ar 2  95 01            sta $01,x
003E1Cr 2               
003E1Cr 2               ; <inline>:0:0 in `main`
003E1Cr 2               @OPCODE_1897:   ; [c64_ir] Drop
003E1Cr 2  CA               dex
003E1Dr 2  CA               dex
003E1Er 2               
003E1Er 2               ; snake.pax:167:21 in `random-y-position`
003E1Er 2               @OPCODE_1898:   ; [c64_ir] PushLiteral(2)
003E1Er 2  E8               inx
003E1Fr 2  E8               inx
003E20r 2  A9 02            lda #2
003E22r 2  95 00            sta $00,x
003E24r 2  A9 00            lda #0
003E26r 2  95 01            sta $01,x
003E28r 2               
003E28r 2               ; snake.pax:167:23 in `random-y-position`
003E28r 2               @OPCODE_1899:   ; [c64_ir] Add
003E28r 2                   ; 21
003E28r 2  CA               dex
003E29r 2  CA               dex
003E2Ar 2  18               clc
003E2Br 2  B5 00            lda $00,x
003E2Dr 2  75 02            adc $02,x
003E2Fr 2  95 00            sta $00,x
003E31r 2  B5 01            lda $01,x
003E33r 2  75 03            adc $03,x
003E35r 2  95 01            sta $01,x
003E37r 2               
003E37r 2               ; <inline>:0:0 in `main`
003E37r 2               @OPCODE_1900:   ; [c64_ir] AltPop
003E37r 2  E8               inx
003E38r 2  E8               inx
003E39r 2  68               pla
003E3Ar 2  95 00            sta $00,x
003E3Cr 2  68               pla
003E3Dr 2  95 01            sta $01,x
003E3Fr 2               
003E3Fr 2               ; <inline>:0:0 in `main`
003E3Fr 2               @OPCODE_1901:   ; [c64_ir] Drop
003E3Fr 2  CA               dex
003E40r 2  CA               dex
003E41r 2               
003E41r 2               ; snake.pax:98:22 in `set-apple-position`
003E41r 2               @OPCODE_1902:   ; [c64_ir] PushLiteral(-26664)
003E41r 2  E8               inx
003E42r 2  E8               inx
003E43r 2  A9 D8            lda #216
003E45r 2  95 00            sta $00,x
003E47r 2  A9 97            lda #151
003E49r 2  95 01            sta $01,x
003E4Br 2               
003E4Br 2               ; snake.pax:98:30 in `set-apple-position`
003E4Br 2               @OPCODE_1903:   ; [c64_ir] Store
003E4Br 2  CA               dex
003E4Cr 2  CA               dex
003E4Dr 2  CA               dex
003E4Er 2  CA               dex
003E4Fr 2  B5 02            lda $02,x
003E51r 2  81 04            sta ($04,x)
003E53r 2                   ; TODO high byte
003E53r 2               
003E53r 2               ; snake.pax:98:32 in `set-apple-position`
003E53r 2               @OPCODE_1904:   ; [c64_ir] PushLiteral(-26662)
003E53r 2  E8               inx
003E54r 2  E8               inx
003E55r 2  A9 DA            lda #218
003E57r 2  95 00            sta $00,x
003E59r 2  A9 97            lda #151
003E5Br 2  95 01            sta $01,x
003E5Dr 2               
003E5Dr 2               ; snake.pax:98:40 in `set-apple-position`
003E5Dr 2               @OPCODE_1905:   ; [c64_ir] Store
003E5Dr 2  CA               dex
003E5Er 2  CA               dex
003E5Fr 2  CA               dex
003E60r 2  CA               dex
003E61r 2  B5 02            lda $02,x
003E63r 2  81 04            sta ($04,x)
003E65r 2                   ; TODO high byte
003E65r 2               
003E65r 2               ; <inline>:0:0 in `main`
003E65r 2               @OPCODE_1906:   ; [c64_ir] AltPop
003E65r 2  E8               inx
003E66r 2  E8               inx
003E67r 2  68               pla
003E68r 2  95 00            sta $00,x
003E6Ar 2  68               pla
003E6Br 2  95 01            sta $01,x
003E6Dr 2               
003E6Dr 2               ; <inline>:0:0 in `main`
003E6Dr 2               @OPCODE_1907:   ; [c64_ir] Drop
003E6Dr 2  CA               dex
003E6Er 2  CA               dex
003E6Fr 2               
003E6Fr 2               ; snake.pax:174:15 in `grow-snake`
003E6Fr 2               @OPCODE_1908:   ; [c64_ir] PushLiteral(1)
003E6Fr 2  E8               inx
003E70r 2  E8               inx
003E71r 2  A9 01            lda #1
003E73r 2  95 00            sta $00,x
003E75r 2  A9 00            lda #0
003E77r 2  95 01            sta $01,x
003E79r 2               
003E79r 2               ; src/prelude.fth:6:16 in `dup`
003E79r 2               @OPCODE_1909:   ; [c64_ir] PushLiteral(-26658)
003E79r 2  E8               inx
003E7Ar 2  E8               inx
003E7Br 2  A9 DE            lda #222
003E7Dr 2  95 00            sta $00,x
003E7Fr 2  A9 97            lda #151
003E81r 2  95 01            sta $01,x
003E83r 2               
003E83r 2               ; src/prelude.fth:20:15 in `+!`
003E83r 2               @OPCODE_1910:   ; [c64_ir] Load
003E83r 2  A1 00            lda ($00,x)
003E85r 2  95 00            sta $00,x
003E87r 2  A9 00            lda #0
003E89r 2  95 01            sta $01,x
003E8Br 2               
003E8Br 2               ; src/prelude.fth:20:17 in `+!`
003E8Br 2               @OPCODE_1911:   ; [c64_ir] Add
003E8Br 2                   ; 21
003E8Br 2  CA               dex
003E8Cr 2  CA               dex
003E8Dr 2  18               clc
003E8Er 2  B5 00            lda $00,x
003E90r 2  75 02            adc $02,x
003E92r 2  95 00            sta $00,x
003E94r 2  B5 01            lda $01,x
003E96r 2  75 03            adc $03,x
003E98r 2  95 01            sta $01,x
003E9Ar 2               
003E9Ar 2               ; src/prelude.fth:20:19 in `+!`
003E9Ar 2               @OPCODE_1912:   ; [c64_ir] PushLiteral(-26658)
003E9Ar 2  E8               inx
003E9Br 2  E8               inx
003E9Cr 2  A9 DE            lda #222
003E9Er 2  95 00            sta $00,x
003EA0r 2  A9 97            lda #151
003EA2r 2  95 01            sta $01,x
003EA4r 2               
003EA4r 2               ; src/prelude.fth:20:22 in `+!`
003EA4r 2               @OPCODE_1913:   ; [c64_ir] Store
003EA4r 2  CA               dex
003EA5r 2  CA               dex
003EA6r 2  CA               dex
003EA7r 2  CA               dex
003EA8r 2  B5 02            lda $02,x
003EAAr 2  81 04            sta ($04,x)
003EACr 2                   ; TODO high byte
003EACr 2               
003EACr 2               ; snake.pax:182:3 in `check-apple`
003EACr 2               @OPCODE_1914:   ; [c64_ir] JumpTarget(181)
003EACr 2               
003EACr 2               @target_182:
003EACr 2               
003EACr 2               ; <inline>:0:0 in `main`
003EACr 2               @OPCODE_1916:   ; [c64_ir] AltPop
003EACr 2  E8               inx
003EADr 2  E8               inx
003EAEr 2  68               pla
003EAFr 2  95 00            sta $00,x
003EB1r 2  68               pla
003EB2r 2  95 01            sta $01,x
003EB4r 2               
003EB4r 2               ; <inline>:0:0 in `main`
003EB4r 2               @OPCODE_1917:   ; [c64_ir] Drop
003EB4r 2  CA               dex
003EB5r 2  CA               dex
003EB6r 2               
003EB6r 2               ; <inline>:0:0 in `main`
003EB6r 2               @OPCODE_1918:   ; [c64_ir] PushLiteral(7777)
003EB6r 2  E8               inx
003EB7r 2  E8               inx
003EB8r 2  A9 61            lda #97
003EBAr 2  95 00            sta $00,x
003EBCr 2  A9 1E            lda #30
003EBEr 2  95 01            sta $01,x
003EC0r 2               
003EC0r 2               ; <inline>:0:0 in `main`
003EC0r 2               @OPCODE_1919:   ; [c64_ir] AltPush
003EC0r 2  CA               dex
003EC1r 2  CA               dex
003EC2r 2  B5 03            lda $03,x
003EC4r 2  48               pha
003EC5r 2  B5 02            lda $02,x
003EC7r 2  48               pha
003EC8r 2               
003EC8r 2               ; snake.pax:186:3 in `check-collision`
003EC8r 2               @OPCODE_1920:   ; [c64_ir] PushLiteral(-28668)
003EC8r 2  E8               inx
003EC9r 2  E8               inx
003ECAr 2  A9 04            lda #4
003ECCr 2  95 00            sta $00,x
003ECEr 2  A9 90            lda #144
003ED0r 2  95 01            sta $01,x
003ED2r 2               
003ED2r 2               ; snake.pax:186:16 in `check-collision`
003ED2r 2               @OPCODE_1921:   ; [c64_ir] Load
003ED2r 2  A1 00            lda ($00,x)
003ED4r 2  95 00            sta $00,x
003ED6r 2  A9 00            lda #0
003ED8r 2  95 01            sta $01,x
003EDAr 2               
003EDAr 2               ; snake.pax:186:18 in `check-collision`
003EDAr 2               @OPCODE_1922:   ; [c64_ir] PushLiteral(-27666)
003EDAr 2  E8               inx
003EDBr 2  E8               inx
003EDCr 2  A9 EE            lda #238
003EDEr 2  95 00            sta $00,x
003EE0r 2  A9 93            lda #147
003EE2r 2  95 01            sta $01,x
003EE4r 2               
003EE4r 2               ; snake.pax:186:31 in `check-collision`
003EE4r 2               @OPCODE_1923:   ; [c64_ir] Load
003EE4r 2  A1 00            lda ($00,x)
003EE6r 2  95 00            sta $00,x
003EE8r 2  A9 00            lda #0
003EEAr 2  95 01            sta $01,x
003EECr 2               
003EECr 2               ; <inline>:0:0 in `main`
003EECr 2               @OPCODE_1924:   ; [c64_ir] PushLiteral(7777)
003EECr 2  E8               inx
003EEDr 2  E8               inx
003EEEr 2  A9 61            lda #97
003EF0r 2  95 00            sta $00,x
003EF2r 2  A9 1E            lda #30
003EF4r 2  95 01            sta $01,x
003EF6r 2               
003EF6r 2               ; <inline>:0:0 in `main`
003EF6r 2               @OPCODE_1925:   ; [c64_ir] AltPush
003EF6r 2  CA               dex
003EF7r 2  CA               dex
003EF8r 2  B5 03            lda $03,x
003EFAr 2  48               pha
003EFBr 2  B5 02            lda $02,x
003EFDr 2  48               pha
003EFEr 2               
003EFEr 2               ; <inline>:0:0 in `main`
003EFEr 2               @OPCODE_1926:   ; [c64_ir] PushLiteral(7777)
003EFEr 2  E8               inx
003EFFr 2  E8               inx
003F00r 2  A9 61            lda #97
003F02r 2  95 00            sta $00,x
003F04r 2  A9 1E            lda #30
003F06r 2  95 01            sta $01,x
003F08r 2               
003F08r 2               ; <inline>:0:0 in `main`
003F08r 2               @OPCODE_1927:   ; [c64_ir] AltPush
003F08r 2  CA               dex
003F09r 2  CA               dex
003F0Ar 2  B5 03            lda $03,x
003F0Cr 2  48               pha
003F0Dr 2  B5 02            lda $02,x
003F0Fr 2  48               pha
003F10r 2               
003F10r 2               ; src/prelude.fth:44:8 in `*`
003F10r 2               @OPCODE_1928:   ; [c64_ir] PushLiteral(0)
003F10r 2  E8               inx
003F11r 2  E8               inx
003F12r 2  A9 00            lda #0
003F14r 2  95 00            sta $00,x
003F16r 2  A9 00            lda #0
003F18r 2  95 01            sta $01,x
003F1Ar 2               
003F1Ar 2               ; src/prelude.fth:44:10 in `*`
003F1Ar 2               @OPCODE_1929:   ; [c64_ir] PushLiteral(40)
003F1Ar 2  E8               inx
003F1Br 2  E8               inx
003F1Cr 2  A9 28            lda #40
003F1Er 2  95 00            sta $00,x
003F20r 2  A9 00            lda #0
003F22r 2  95 01            sta $01,x
003F24r 2               
003F24r 2               ; src/prelude.fth:44:13 in `*`
003F24r 2               @OPCODE_1930:   ; [c64_ir] PushLiteral(0)
003F24r 2  E8               inx
003F25r 2  E8               inx
003F26r 2  A9 00            lda #0
003F28r 2  95 00            sta $00,x
003F2Ar 2  A9 00            lda #0
003F2Cr 2  95 01            sta $01,x
003F2Er 2               
003F2Er 2               ; src/prelude.fth:44:15 in `*`
003F2Er 2               @OPCODE_1931:   ; [c64_ir] AltPush
003F2Er 2  CA               dex
003F2Fr 2  CA               dex
003F30r 2  B5 03            lda $03,x
003F32r 2  48               pha
003F33r 2  B5 02            lda $02,x
003F35r 2  48               pha
003F36r 2               
003F36r 2               ; src/prelude.fth:44:15 in `*`
003F36r 2               @OPCODE_1932:   ; [c64_ir] AltPush
003F36r 2  CA               dex
003F37r 2  CA               dex
003F38r 2  B5 03            lda $03,x
003F3Ar 2  48               pha
003F3Br 2  B5 02            lda $02,x
003F3Dr 2  48               pha
003F3Er 2               
003F3Er 2               ; src/prelude.fth:44:15 in `*`
003F3Er 2               @OPCODE_1933:   ; [c64_ir] LoopTarget(182)
003F3Er 2               
003F3Er 2               @target_183:
003F3Er 2               
003F3Er 2               ; src/prelude.fth:4:10 in `over`
003F3Er 2               @OPCODE_1935:   ; [c64_ir] AltPush
003F3Er 2  CA               dex
003F3Fr 2  CA               dex
003F40r 2  B5 03            lda $03,x
003F42r 2  48               pha
003F43r 2  B5 02            lda $02,x
003F45r 2  48               pha
003F46r 2               
003F46r 2               ; src/prelude.fth:4:13 in `over`
003F46r 2               @OPCODE_1936:   ; [c64_ir] TempStore
003F46r 2  CA               dex
003F47r 2  CA               dex
003F48r 2  B5 03            lda $03,x
003F4Ar 2  85 96            sta TEMP_PAX2
003F4Cr 2  B5 02            lda $02,x
003F4Er 2  85 95            sta TEMP_PAX1
003F50r 2               
003F50r 2               ; src/prelude.fth:4:19 in `over`
003F50r 2               @OPCODE_1937:   ; [c64_ir] TempLoad
003F50r 2  E8               inx
003F51r 2  E8               inx
003F52r 2  A5 95            lda TEMP_PAX1
003F54r 2  95 00            sta $00,x
003F56r 2  A5 96            lda TEMP_PAX2
003F58r 2  95 01            sta $01,x
003F5Ar 2               
003F5Ar 2               ; src/prelude.fth:4:25 in `over`
003F5Ar 2               @OPCODE_1938:   ; [c64_ir] AltPop
003F5Ar 2  E8               inx
003F5Br 2  E8               inx
003F5Cr 2  68               pla
003F5Dr 2  95 00            sta $00,x
003F5Fr 2  68               pla
003F60r 2  95 01            sta $01,x
003F62r 2               
003F62r 2               ; src/prelude.fth:4:28 in `over`
003F62r 2               @OPCODE_1939:   ; [c64_ir] TempLoad
003F62r 2  E8               inx
003F63r 2  E8               inx
003F64r 2  A5 95            lda TEMP_PAX1
003F66r 2  95 00            sta $00,x
003F68r 2  A5 96            lda TEMP_PAX2
003F6Ar 2  95 01            sta $01,x
003F6Cr 2               
003F6Cr 2               ; src/prelude.fth:44:23 in `*`
003F6Cr 2               @OPCODE_1940:   ; [c64_ir] Add
003F6Cr 2                   ; 21
003F6Cr 2  CA               dex
003F6Dr 2  CA               dex
003F6Er 2  18               clc
003F6Fr 2  B5 00            lda $00,x
003F71r 2  75 02            adc $02,x
003F73r 2  95 00            sta $00,x
003F75r 2  B5 01            lda $01,x
003F77r 2  75 03            adc $03,x
003F79r 2  95 01            sta $01,x
003F7Br 2               
003F7Br 2               ; src/prelude.fth:33:15 in `loopimpl`
003F7Br 2               @OPCODE_1941:   ; [c64_ir] AltPop
003F7Br 2  E8               inx
003F7Cr 2  E8               inx
003F7Dr 2  68               pla
003F7Er 2  95 00            sta $00,x
003F80r 2  68               pla
003F81r 2  95 01            sta $01,x
003F83r 2               
003F83r 2               ; src/prelude.fth:33:18 in `loopimpl`
003F83r 2               @OPCODE_1942:   ; [c64_ir] AltPop
003F83r 2  E8               inx
003F84r 2  E8               inx
003F85r 2  68               pla
003F86r 2  95 00            sta $00,x
003F88r 2  68               pla
003F89r 2  95 01            sta $01,x
003F8Br 2               
003F8Br 2               ; src/prelude.fth:18:8 in `1+`
003F8Br 2               @OPCODE_1943:   ; [c64_ir] PushLiteral(1)
003F8Br 2  E8               inx
003F8Cr 2  E8               inx
003F8Dr 2  A9 01            lda #1
003F8Fr 2  95 00            sta $00,x
003F91r 2  A9 00            lda #0
003F93r 2  95 01            sta $01,x
003F95r 2               
003F95r 2               ; src/prelude.fth:18:10 in `1+`
003F95r 2               @OPCODE_1944:   ; [c64_ir] Add
003F95r 2                   ; 21
003F95r 2  CA               dex
003F96r 2  CA               dex
003F97r 2  18               clc
003F98r 2  B5 00            lda $00,x
003F9Ar 2  75 02            adc $02,x
003F9Cr 2  95 00            sta $00,x
003F9Er 2  B5 01            lda $01,x
003FA0r 2  75 03            adc $03,x
003FA2r 2  95 01            sta $01,x
003FA4r 2               
003FA4r 2               ; src/prelude.fth:4:10 in `over`
003FA4r 2               @OPCODE_1945:   ; [c64_ir] AltPush
003FA4r 2  CA               dex
003FA5r 2  CA               dex
003FA6r 2  B5 03            lda $03,x
003FA8r 2  48               pha
003FA9r 2  B5 02            lda $02,x
003FABr 2  48               pha
003FACr 2               
003FACr 2               ; src/prelude.fth:4:13 in `over`
003FACr 2               @OPCODE_1946:   ; [c64_ir] TempStore
003FACr 2  CA               dex
003FADr 2  CA               dex
003FAEr 2  B5 03            lda $03,x
003FB0r 2  85 96            sta TEMP_PAX2
003FB2r 2  B5 02            lda $02,x
003FB4r 2  85 95            sta TEMP_PAX1
003FB6r 2               
003FB6r 2               ; src/prelude.fth:4:19 in `over`
003FB6r 2               @OPCODE_1947:   ; [c64_ir] TempLoad
003FB6r 2  E8               inx
003FB7r 2  E8               inx
003FB8r 2  A5 95            lda TEMP_PAX1
003FBAr 2  95 00            sta $00,x
003FBCr 2  A5 96            lda TEMP_PAX2
003FBEr 2  95 01            sta $01,x
003FC0r 2               
003FC0r 2               ; src/prelude.fth:4:25 in `over`
003FC0r 2               @OPCODE_1948:   ; [c64_ir] AltPop
003FC0r 2  E8               inx
003FC1r 2  E8               inx
003FC2r 2  68               pla
003FC3r 2  95 00            sta $00,x
003FC5r 2  68               pla
003FC6r 2  95 01            sta $01,x
003FC8r 2               
003FC8r 2               ; src/prelude.fth:4:28 in `over`
003FC8r 2               @OPCODE_1949:   ; [c64_ir] TempLoad
003FC8r 2  E8               inx
003FC9r 2  E8               inx
003FCAr 2  A5 95            lda TEMP_PAX1
003FCCr 2  95 00            sta $00,x
003FCEr 2  A5 96            lda TEMP_PAX2
003FD0r 2  95 01            sta $01,x
003FD2r 2               
003FD2r 2               ; src/prelude.fth:4:10 in `over`
003FD2r 2               @OPCODE_1950:   ; [c64_ir] AltPush
003FD2r 2  CA               dex
003FD3r 2  CA               dex
003FD4r 2  B5 03            lda $03,x
003FD6r 2  48               pha
003FD7r 2  B5 02            lda $02,x
003FD9r 2  48               pha
003FDAr 2               
003FDAr 2               ; src/prelude.fth:4:13 in `over`
003FDAr 2               @OPCODE_1951:   ; [c64_ir] TempStore
003FDAr 2  CA               dex
003FDBr 2  CA               dex
003FDCr 2  B5 03            lda $03,x
003FDEr 2  85 96            sta TEMP_PAX2
003FE0r 2  B5 02            lda $02,x
003FE2r 2  85 95            sta TEMP_PAX1
003FE4r 2               
003FE4r 2               ; src/prelude.fth:4:19 in `over`
003FE4r 2               @OPCODE_1952:   ; [c64_ir] TempLoad
003FE4r 2  E8               inx
003FE5r 2  E8               inx
003FE6r 2  A5 95            lda TEMP_PAX1
003FE8r 2  95 00            sta $00,x
003FEAr 2  A5 96            lda TEMP_PAX2
003FECr 2  95 01            sta $01,x
003FEEr 2               
003FEEr 2               ; src/prelude.fth:4:25 in `over`
003FEEr 2               @OPCODE_1953:   ; [c64_ir] AltPop
003FEEr 2  E8               inx
003FEFr 2  E8               inx
003FF0r 2  68               pla
003FF1r 2  95 00            sta $00,x
003FF3r 2  68               pla
003FF4r 2  95 01            sta $01,x
003FF6r 2               
003FF6r 2               ; src/prelude.fth:4:28 in `over`
003FF6r 2               @OPCODE_1954:   ; [c64_ir] TempLoad
003FF6r 2  E8               inx
003FF7r 2  E8               inx
003FF8r 2  A5 95            lda TEMP_PAX1
003FFAr 2  95 00            sta $00,x
003FFCr 2  A5 96            lda TEMP_PAX2
003FFEr 2  95 01            sta $01,x
004000r 2               
004000r 2               ; src/prelude.fth:33:29 in `loopimpl`
004000r 2               @OPCODE_1955:   ; [c64_ir] AltPush
004000r 2  CA               dex
004001r 2  CA               dex
004002r 2  B5 03            lda $03,x
004004r 2  48               pha
004005r 2  B5 02            lda $02,x
004007r 2  48               pha
004008r 2               
004008r 2               ; src/prelude.fth:33:32 in `loopimpl`
004008r 2               @OPCODE_1956:   ; [c64_ir] AltPush
004008r 2  CA               dex
004009r 2  CA               dex
00400Ar 2  B5 03            lda $03,x
00400Cr 2  48               pha
00400Dr 2  B5 02            lda $02,x
00400Fr 2  48               pha
004010r 2               
004010r 2               ; src/prelude.fth:14:12 in `invert`
004010r 2               @OPCODE_1957:   ; [c64_ir] PushLiteral(-1)
004010r 2  E8               inx
004011r 2  E8               inx
004012r 2  A9 FF            lda #255
004014r 2  95 00            sta $00,x
004016r 2  A9 FF            lda #255
004018r 2  95 01            sta $01,x
00401Ar 2               
00401Ar 2               ; src/prelude.fth:14:15 in `invert`
00401Ar 2               @OPCODE_1958:   ; [c64_ir] Nand
00401Ar 2                   ; 26
00401Ar 2  CA               dex
00401Br 2  CA               dex
00401Cr 2  B5 00            lda $00,x
00401Er 2  35 02            and $02,x
004020r 2  49 FF            eor #$ff
004022r 2  95 00            sta $00,x
004024r 2  B5 01            lda $01,x
004026r 2  35 03            and $03,x
004028r 2  49 FF            eor #$ff
00402Ar 2  95 01            sta $01,x
00402Cr 2               
00402Cr 2               ; src/prelude.fth:15:19 in `negate`
00402Cr 2               @OPCODE_1959:   ; [c64_ir] PushLiteral(1)
00402Cr 2  E8               inx
00402Dr 2  E8               inx
00402Er 2  A9 01            lda #1
004030r 2  95 00            sta $00,x
004032r 2  A9 00            lda #0
004034r 2  95 01            sta $01,x
004036r 2               
004036r 2               ; src/prelude.fth:15:21 in `negate`
004036r 2               @OPCODE_1960:   ; [c64_ir] Add
004036r 2                   ; 21
004036r 2  CA               dex
004037r 2  CA               dex
004038r 2  18               clc
004039r 2  B5 00            lda $00,x
00403Br 2  75 02            adc $02,x
00403Dr 2  95 00            sta $00,x
00403Fr 2  B5 01            lda $01,x
004041r 2  75 03            adc $03,x
004043r 2  95 01            sta $01,x
004045r 2               
004045r 2               ; src/prelude.fth:16:19 in `-`
004045r 2               @OPCODE_1961:   ; [c64_ir] Add
004045r 2                   ; 21
004045r 2  CA               dex
004046r 2  CA               dex
004047r 2  18               clc
004048r 2  B5 00            lda $00,x
00404Ar 2  75 02            adc $02,x
00404Cr 2  95 00            sta $00,x
00404Er 2  B5 01            lda $01,x
004050r 2  75 03            adc $03,x
004052r 2  95 01            sta $01,x
004054r 2               
004054r 2               ; src/prelude.fth:21:8 in `0=`
004054r 2               @OPCODE_1962:   ; [c64_ir] JumpIf0(185)
004054r 2  CA               dex
004055r 2  CA               dex
004056r 2  B5 02            lda $02,x
004058r 2  15 03            ora $03,x
00405Ar 2  D0 03            bne *+5
00405Cr 2  4C rr rr         jmp @target_185
00405Fr 2               
00405Fr 2               @target_184:
00405Fr 2               
00405Fr 2               ; src/prelude.fth:21:11 in `0=`
00405Fr 2               @OPCODE_1964:   ; [c64_ir] PushLiteral(0)
00405Fr 2  E8               inx
004060r 2  E8               inx
004061r 2  A9 00            lda #0
004063r 2  95 00            sta $00,x
004065r 2  A9 00            lda #0
004067r 2  95 01            sta $01,x
004069r 2               
004069r 2               ; src/prelude.fth:21:13 in `0=`
004069r 2               @OPCODE_1965:   ; [c64_ir] JumpElse(186)
004069r 2  4C rr rr         jmp @target_186
00406Cr 2               
00406Cr 2               @target_185:
00406Cr 2               
00406Cr 2               ; src/prelude.fth:21:18 in `0=`
00406Cr 2               @OPCODE_1967:   ; [c64_ir] PushLiteral(-1)
00406Cr 2  E8               inx
00406Dr 2  E8               inx
00406Er 2  A9 FF            lda #255
004070r 2  95 00            sta $00,x
004072r 2  A9 FF            lda #255
004074r 2  95 01            sta $01,x
004076r 2               
004076r 2               ; src/prelude.fth:21:21 in `0=`
004076r 2               @OPCODE_1968:   ; [c64_ir] JumpTarget(185)
004076r 2               
004076r 2               @target_186:
004076r 2               
004076r 2               ; src/prelude.fth:3:10 in `swap`
004076r 2               @OPCODE_1970:   ; [c64_ir] AltPush
004076r 2  CA               dex
004077r 2  CA               dex
004078r 2  B5 03            lda $03,x
00407Ar 2  48               pha
00407Br 2  B5 02            lda $02,x
00407Dr 2  48               pha
00407Er 2               
00407Er 2               ; src/prelude.fth:3:19 in `swap`
00407Er 2               @OPCODE_1971:   ; [c64_ir] AltPop
00407Er 2  E8               inx
00407Fr 2  E8               inx
004080r 2  68               pla
004081r 2  95 00            sta $00,x
004083r 2  68               pla
004084r 2  95 01            sta $01,x
004086r 2               
004086r 2               ; src/prelude.fth:44:25 in `*`
004086r 2               @OPCODE_1972:   ; [c64_ir] LoopIf0(183)
004086r 2  CA               dex
004087r 2  CA               dex
004088r 2  B5 02            lda $02,x
00408Ar 2  15 03            ora $03,x
00408Cr 2  D0 03            bne *+5
00408Er 2  4C rr rr         jmp @target_183
004091r 2               
004091r 2               @target_187:
004091r 2               
004091r 2               ; src/prelude.fth:44:25 in `*`
004091r 2               @OPCODE_1974:   ; [c64_ir] AltPop
004091r 2  E8               inx
004092r 2  E8               inx
004093r 2  68               pla
004094r 2  95 00            sta $00,x
004096r 2  68               pla
004097r 2  95 01            sta $01,x
004099r 2               
004099r 2               ; src/prelude.fth:44:25 in `*`
004099r 2               @OPCODE_1975:   ; [c64_ir] Drop
004099r 2  CA               dex
00409Ar 2  CA               dex
00409Br 2               
00409Br 2               ; src/prelude.fth:44:25 in `*`
00409Br 2               @OPCODE_1976:   ; [c64_ir] AltPop
00409Br 2  E8               inx
00409Cr 2  E8               inx
00409Dr 2  68               pla
00409Er 2  95 00            sta $00,x
0040A0r 2  68               pla
0040A1r 2  95 01            sta $01,x
0040A3r 2               
0040A3r 2               ; src/prelude.fth:44:25 in `*`
0040A3r 2               @OPCODE_1977:   ; [c64_ir] Drop
0040A3r 2  CA               dex
0040A4r 2  CA               dex
0040A5r 2               
0040A5r 2               ; src/prelude.fth:3:10 in `swap`
0040A5r 2               @OPCODE_1978:   ; [c64_ir] AltPush
0040A5r 2  CA               dex
0040A6r 2  CA               dex
0040A7r 2  B5 03            lda $03,x
0040A9r 2  48               pha
0040AAr 2  B5 02            lda $02,x
0040ACr 2  48               pha
0040ADr 2               
0040ADr 2               ; src/prelude.fth:3:13 in `swap`
0040ADr 2               @OPCODE_1979:   ; [c64_ir] TempStore
0040ADr 2  CA               dex
0040AEr 2  CA               dex
0040AFr 2  B5 03            lda $03,x
0040B1r 2  85 96            sta TEMP_PAX2
0040B3r 2  B5 02            lda $02,x
0040B5r 2  85 95            sta TEMP_PAX1
0040B7r 2               
0040B7r 2               ; src/prelude.fth:3:19 in `swap`
0040B7r 2               @OPCODE_1980:   ; [c64_ir] AltPop
0040B7r 2  E8               inx
0040B8r 2  E8               inx
0040B9r 2  68               pla
0040BAr 2  95 00            sta $00,x
0040BCr 2  68               pla
0040BDr 2  95 01            sta $01,x
0040BFr 2               
0040BFr 2               ; <inline>:0:0 in `main`
0040BFr 2               @OPCODE_1981:   ; [c64_ir] AltPop
0040BFr 2  E8               inx
0040C0r 2  E8               inx
0040C1r 2  68               pla
0040C2r 2  95 00            sta $00,x
0040C4r 2  68               pla
0040C5r 2  95 01            sta $01,x
0040C7r 2               
0040C7r 2               ; <inline>:0:0 in `main`
0040C7r 2               @OPCODE_1982:   ; [c64_ir] Drop
0040C7r 2  CA               dex
0040C8r 2  CA               dex
0040C9r 2               
0040C9r 2               ; snake.pax:48:39 in `convert-x-y`
0040C9r 2               @OPCODE_1983:   ; [c64_ir] Add
0040C9r 2                   ; 21
0040C9r 2  CA               dex
0040CAr 2  CA               dex
0040CBr 2  18               clc
0040CCr 2  B5 00            lda $00,x
0040CEr 2  75 02            adc $02,x
0040D0r 2  95 00            sta $00,x
0040D2r 2  B5 01            lda $01,x
0040D4r 2  75 03            adc $03,x
0040D6r 2  95 01            sta $01,x
0040D8r 2               
0040D8r 2               ; <inline>:0:0 in `main`
0040D8r 2               @OPCODE_1984:   ; [c64_ir] AltPop
0040D8r 2  E8               inx
0040D9r 2  E8               inx
0040DAr 2  68               pla
0040DBr 2  95 00            sta $00,x
0040DDr 2  68               pla
0040DEr 2  95 01            sta $01,x
0040E0r 2               
0040E0r 2               ; <inline>:0:0 in `main`
0040E0r 2               @OPCODE_1985:   ; [c64_ir] Drop
0040E0r 2  CA               dex
0040E1r 2  CA               dex
0040E2r 2               
0040E2r 2               ; snake.pax:189:15 in `check-collision`
0040E2r 2               @OPCODE_1986:   ; [c64_ir] PushLiteral(1024)
0040E2r 2  E8               inx
0040E3r 2  E8               inx
0040E4r 2  A9 00            lda #0
0040E6r 2  95 00            sta $00,x
0040E8r 2  A9 04            lda #4
0040EAr 2  95 01            sta $01,x
0040ECr 2               
0040ECr 2               ; snake.pax:189:24 in `check-collision`
0040ECr 2               @OPCODE_1987:   ; [c64_ir] Add
0040ECr 2                   ; 21
0040ECr 2  CA               dex
0040EDr 2  CA               dex
0040EEr 2  18               clc
0040EFr 2  B5 00            lda $00,x
0040F1r 2  75 02            adc $02,x
0040F3r 2  95 00            sta $00,x
0040F5r 2  B5 01            lda $01,x
0040F7r 2  75 03            adc $03,x
0040F9r 2  95 01            sta $01,x
0040FBr 2               
0040FBr 2               ; snake.pax:189:26 in `check-collision`
0040FBr 2               @OPCODE_1988:   ; [c64_ir] Load8
0040FBr 2  A1 00            lda ($00,x)
0040FDr 2  95 00            sta $00,x
0040FFr 2  A9 00            lda #0
004101r 2  95 01            sta $01,x
004103r 2               
004103r 2               ; snake.pax:192:3 in `check-collision`
004103r 2               @OPCODE_1989:   ; [c64_ir] PushLiteral(32)
004103r 2  E8               inx
004104r 2  E8               inx
004105r 2  A9 20            lda #32
004107r 2  95 00            sta $00,x
004109r 2  A9 00            lda #0
00410Br 2  95 01            sta $01,x
00410Dr 2               
00410Dr 2               ; src/prelude.fth:14:12 in `invert`
00410Dr 2               @OPCODE_1990:   ; [c64_ir] PushLiteral(-1)
00410Dr 2  E8               inx
00410Er 2  E8               inx
00410Fr 2  A9 FF            lda #255
004111r 2  95 00            sta $00,x
004113r 2  A9 FF            lda #255
004115r 2  95 01            sta $01,x
004117r 2               
004117r 2               ; src/prelude.fth:14:15 in `invert`
004117r 2               @OPCODE_1991:   ; [c64_ir] Nand
004117r 2                   ; 26
004117r 2  CA               dex
004118r 2  CA               dex
004119r 2  B5 00            lda $00,x
00411Br 2  35 02            and $02,x
00411Dr 2  49 FF            eor #$ff
00411Fr 2  95 00            sta $00,x
004121r 2  B5 01            lda $01,x
004123r 2  35 03            and $03,x
004125r 2  49 FF            eor #$ff
004127r 2  95 01            sta $01,x
004129r 2               
004129r 2               ; src/prelude.fth:15:19 in `negate`
004129r 2               @OPCODE_1992:   ; [c64_ir] PushLiteral(1)
004129r 2  E8               inx
00412Ar 2  E8               inx
00412Br 2  A9 01            lda #1
00412Dr 2  95 00            sta $00,x
00412Fr 2  A9 00            lda #0
004131r 2  95 01            sta $01,x
004133r 2               
004133r 2               ; src/prelude.fth:15:21 in `negate`
004133r 2               @OPCODE_1993:   ; [c64_ir] Add
004133r 2                   ; 21
004133r 2  CA               dex
004134r 2  CA               dex
004135r 2  18               clc
004136r 2  B5 00            lda $00,x
004138r 2  75 02            adc $02,x
00413Ar 2  95 00            sta $00,x
00413Cr 2  B5 01            lda $01,x
00413Er 2  75 03            adc $03,x
004140r 2  95 01            sta $01,x
004142r 2               
004142r 2               ; src/prelude.fth:16:19 in `-`
004142r 2               @OPCODE_1994:   ; [c64_ir] Add
004142r 2                   ; 21
004142r 2  CA               dex
004143r 2  CA               dex
004144r 2  18               clc
004145r 2  B5 00            lda $00,x
004147r 2  75 02            adc $02,x
004149r 2  95 00            sta $00,x
00414Br 2  B5 01            lda $01,x
00414Dr 2  75 03            adc $03,x
00414Fr 2  95 01            sta $01,x
004151r 2               
004151r 2               ; src/prelude.fth:21:8 in `0=`
004151r 2               @OPCODE_1995:   ; [c64_ir] JumpIf0(189)
004151r 2  CA               dex
004152r 2  CA               dex
004153r 2  B5 02            lda $02,x
004155r 2  15 03            ora $03,x
004157r 2  D0 03            bne *+5
004159r 2  4C rr rr         jmp @target_189
00415Cr 2               
00415Cr 2               @target_188:
00415Cr 2               
00415Cr 2               ; src/prelude.fth:21:11 in `0=`
00415Cr 2               @OPCODE_1997:   ; [c64_ir] PushLiteral(0)
00415Cr 2  E8               inx
00415Dr 2  E8               inx
00415Er 2  A9 00            lda #0
004160r 2  95 00            sta $00,x
004162r 2  A9 00            lda #0
004164r 2  95 01            sta $01,x
004166r 2               
004166r 2               ; src/prelude.fth:21:13 in `0=`
004166r 2               @OPCODE_1998:   ; [c64_ir] JumpElse(190)
004166r 2  4C rr rr         jmp @target_190
004169r 2               
004169r 2               @target_189:
004169r 2               
004169r 2               ; src/prelude.fth:21:18 in `0=`
004169r 2               @OPCODE_2000:   ; [c64_ir] PushLiteral(-1)
004169r 2  E8               inx
00416Ar 2  E8               inx
00416Br 2  A9 FF            lda #255
00416Dr 2  95 00            sta $00,x
00416Fr 2  A9 FF            lda #255
004171r 2  95 01            sta $01,x
004173r 2               
004173r 2               ; src/prelude.fth:21:21 in `0=`
004173r 2               @OPCODE_2001:   ; [c64_ir] JumpTarget(189)
004173r 2               
004173r 2               @target_190:
004173r 2               
004173r 2               ; <inline>:0:0 in `main`
004173r 2               @OPCODE_2003:   ; [c64_ir] AltPop
004173r 2  E8               inx
004174r 2  E8               inx
004175r 2  68               pla
004176r 2  95 00            sta $00,x
004178r 2  68               pla
004179r 2  95 01            sta $01,x
00417Br 2               
00417Br 2               ; <inline>:0:0 in `main`
00417Br 2               @OPCODE_2004:   ; [c64_ir] Drop
00417Br 2  CA               dex
00417Cr 2  CA               dex
00417Dr 2               
00417Dr 2               ; snake.pax:217:1 in `main`
00417Dr 2               @OPCODE_2005:   ; [c64_ir] JumpIf0(192)
00417Dr 2  CA               dex
00417Er 2  CA               dex
00417Fr 2  B5 02            lda $02,x
004181r 2  15 03            ora $03,x
004183r 2  D0 03            bne *+5
004185r 2  4C rr rr         jmp @target_192
004188r 2               
004188r 2               @target_191:
004188r 2               
004188r 2               ; snake.pax:217:4 in `main`
004188r 2               @OPCODE_2007:   ; [c64_ir] JumpElse(193)
004188r 2  4C rr rr         jmp @target_193
00418Br 2               
00418Br 2               @target_192:
00418Br 2               
00418Br 2               ; snake.pax:217:9 in `main`
00418Br 2               @OPCODE_2009:   ; [c64_ir] PushLiteral(0)
00418Br 2  E8               inx
00418Cr 2  E8               inx
00418Dr 2  A9 00            lda #0
00418Fr 2  95 00            sta $00,x
004191r 2  A9 00            lda #0
004193r 2  95 01            sta $01,x
004195r 2               
004195r 2               ; snake.pax:217:11 in `main`
004195r 2               @OPCODE_2010:   ; [c64_ir] PushLiteral(-28672)
004195r 2  E8               inx
004196r 2  E8               inx
004197r 2  A9 00            lda #0
004199r 2  95 00            sta $00,x
00419Br 2  A9 90            lda #144
00419Dr 2  95 01            sta $01,x
00419Fr 2               
00419Fr 2               ; snake.pax:217:23 in `main`
00419Fr 2               @OPCODE_2011:   ; [c64_ir] Store
00419Fr 2  CA               dex
0041A0r 2  CA               dex
0041A1r 2  CA               dex
0041A2r 2  CA               dex
0041A3r 2  B5 02            lda $02,x
0041A5r 2  81 04            sta ($04,x)
0041A7r 2                   ; TODO high byte
0041A7r 2               
0041A7r 2               ; snake.pax:217:25 in `main`
0041A7r 2               @OPCODE_2012:   ; [c64_ir] JumpTarget(192)
0041A7r 2               
0041A7r 2               @target_193:
0041A7r 2               
0041A7r 2               ; :0:0 in ``
0041A7r 2               @OPCODE_2014:   ; [c64_ir] Exit
0041A7r 2                   ;rts
0041A7r 2               
0041A7r 2               
0041A7r 2               
0041A7r 2               
0041A7r 2               
0041A7r 2               
0041A7r 2               ; function start
0041A7r 2               
0041A7r 2               
0041A7r 2               
0041A7r 1               
0041A7r 1                   ; restore stack
0041A7r 1  A6 97            ldx STACK_RESERVE
0041A9r 1  9A               txs
0041AAr 1                   ; re-enable interrupts
0041AAr 1  58               cli
0041ABr 1               
0041ABr 1               
0041ABr 1  A9 05            LDA #5
0041ADr 1  85 7F            STA $7f
0041AFr 1               
0041AFr 1  20 9F FF         JSR SCNKEY      ;SCAN KEYBOARD
0041B2r 1  20 E4 FF         JSR GETIN       ;GET CHARACTER
0041B5r 1  C9 00            CMP #0          ;IS IT NULL?
0041B7r 1  F0 2F            BEQ pax_finished  ;no? skip
0041B9r 1               
0041B9r 1               
0041B9r 1               START	:
0041B9r 1  C9 57            CMP #87		;W - up
0041BBr 1  F0 0F            BEQ UP
0041BDr 1               
0041BDr 1  C9 53            CMP #83		;S - down
0041BFr 1  F0 12            BEQ DOWN
0041C1r 1               
0041C1r 1  C9 41            CMP #65		;A - left
0041C3r 1  F0 15            BEQ LEFT
0041C5r 1               
0041C5r 1  C9 44            CMP #68		;D - right
0041C7r 1  F0 18            BEQ RIGHT
0041C9r 1               
0041C9r 1                   ;CMP ENTER	;end if enter clicked
0041C9r 1                   ;BEQ END
0041C9r 1               
0041C9r 1  4C rr rr         JMP pax_finished
0041CCr 1               
0041CCr 1               UP:
0041CCr 1  A9 26            LDA #38
0041CEr 1  85 7E            STA $7e
0041D0r 1  4C rr rr         JMP pax_finished
0041D3r 1               
0041D3r 1               DOWN:
0041D3r 1  A9 28            LDA #40
0041D5r 1  85 7E            STA $7e
0041D7r 1  4C rr rr         JMP pax_finished
0041DAr 1               
0041DAr 1               LEFT:
0041DAr 1  A9 25            LDA #37
0041DCr 1  85 7E            STA $7e
0041DEr 1  4C rr rr         JMP pax_finished
0041E1r 1               
0041E1r 1               RIGHT:
0041E1r 1  A9 27            LDA #39
0041E3r 1  85 7E            STA $7e
0041E5r 1  4C rr rr         JMP pax_finished
0041E8r 1               
0041E8r 1               
0041E8r 1               pax_finished:
0041E8r 1  4C rr rr         jmp mainloop
0041EBr 1               
0041EBr 1               
0041EBr 1               msg:
0041EBr 1  20 20 20 20      .asciiz "              snake world!              "
0041EFr 1  20 20 20 20  
0041F3r 1  20 20 20 20  
004214r 1               
004214r 1               draw_text:
004214r 1  A2 00            ldx #$00
004216r 1               draw_loop:
004216r 1  BD rr rr         lda msg,x
004219r 1  9D 18 05         sta $0518,x
00421Cr 1  E8               inx
00421Dr 1  E0 28            cpx #$28
00421Fr 1  D0 F5            bne draw_loop
004221r 1  60               rts
004221r 1               

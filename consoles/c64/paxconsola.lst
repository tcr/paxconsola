ca65 V2.18 - Git N/A
Main file   : paxconsola.s
Current file: paxconsola.s

000000r 1               GFX = $0400
000000r 1               
000000r 1               ;helpful labels
000000r 1               ; https://gist.github.com/biomood/1001256
000000r 1               CLEAR = $E544
000000r 1               GETIN  =  $FFE4
000000r 1               SCNKEY =  $FF9F
000000r 1               
000000r 1               ; Override Datasette ram
000000r 1               TEMP = $92
000000r 1               TEMP2 = $93
000000r 1               TEMP3 = $94
000000r 1               
000000r 1               TEMP_PAX1 = $95
000000r 1               TEMP_PAX2 = $96
000000r 1               
000000r 1               STACK_RESERVE = $97
000000r 1               
000000r 1               ; Can override all BASIC values
000000r 1               ; https://csdb.dk/forums/index.php?roomid=11&topicid=3541&showallposts=1
000000r 1               X_START = $02
000000r 1               X_END = $7f
000000r 1               
000000r 1               .code
000000r 1                   ; Make screen black and text white
000000r 1  A9 00            lda #$00
000002r 1  8D 20 D0         sta $d020
000005r 1  8D 21 D0         sta $d021
000008r 1  A9 01            lda #$01
00000Ar 1  8D 86 02         sta $0286
00000Dr 1               
00000Dr 1                   ; Select charset
00000Dr 1  A9 17            lda #23
00000Fr 1  8D 18 D0         sta $d018
000012r 1               
000012r 1                   ; Clear the screen
000012r 1  20 44 E5         jsr $e544
000015r 1               
000015r 1                   ; draw some helpful text
000015r 1  20 rr rr         jsr draw_text
000018r 1               
000018r 1  A9 00            lda #00
00001Ar 1  A2 7D            ldx #(X_END-X_START)
00001Cr 1               ClearReturnStackLoop:
00001Cr 1  95 02            sta X_START,x
00001Er 1  CA               dex
00001Fr 1  10 FB            bpl ClearReturnStackLoop
000021r 1               
000021r 1  A9 00            lda #$00
000023r 1  A2 FF            ldx #$ff
000025r 1               ClearMemoryLoop:
000025r 1  9D 00 90         sta $9000,x
000028r 1  CA               dex
000029r 1  D0 FA            bne ClearMemoryLoop
00002Br 1               
00002Br 1               
00002Br 1               before_mainloop:
00002Br 1  EA               nop
00002Cr 1               mainloop:
00002Cr 1  AD 11 D0         lda $d011
00002Fr 1  10 FB            bpl mainloop ; no: go to mainloop
000031r 1               
000031r 1               pax_start:
000031r 1                   ; disable inerrupts
000031r 1  78               sei
000032r 1                   ; store stack pointer, since execution might not be clean
000032r 1  BA               tsx
000033r 1  86 97            stx STACK_RESERVE
000035r 1               
000035r 1                   ; Set up PAX registers for execution
000035r 1                   ; X=return stack pointer, Y = high byte of TOS, A = low byte of TOS
000035r 1  A2 02            ldx #X_START
000037r 1  A9 00            lda #0
000039r 1  A0 00            ldy #0
00003Br 1               
00003Br 1  20 rr rr         jsr PAX_FN_main
00003Er 1               
00003Er 1                   ; restore stack
00003Er 1  A6 97            ldx STACK_RESERVE
000040r 1  9A               txs
000041r 1                   ; re-enable interrupts
000041r 1  58               cli
000042r 1               
000042r 1               
000042r 1  A9 05            LDA #5
000044r 1  85 7F            STA $7f
000046r 1               
000046r 1  20 9F FF         JSR SCNKEY      ;SCAN KEYBOARD
000049r 1  20 E4 FF         JSR GETIN       ;GET CHARACTER
00004Cr 1  C9 00            CMP #0          ;IS IT NULL?
00004Er 1  F0 2F            BEQ pax_finished  ;no? skip
000050r 1               
000050r 1               
000050r 1               START	:
000050r 1  C9 57            CMP #87		;W - up
000052r 1  F0 0F            BEQ UP
000054r 1               
000054r 1  C9 53            CMP #83		;S - down
000056r 1  F0 12            BEQ DOWN
000058r 1               
000058r 1  C9 41            CMP #65		;A - left
00005Ar 1  F0 15            BEQ LEFT
00005Cr 1               
00005Cr 1  C9 44            CMP #68		;D - right
00005Er 1  F0 18            BEQ RIGHT
000060r 1               
000060r 1                   ;CMP ENTER	;end if enter clicked
000060r 1                   ;BEQ END
000060r 1               
000060r 1  4C rr rr         JMP pax_finished
000063r 1               
000063r 1               UP:
000063r 1  A9 26            LDA #38
000065r 1  85 7E            STA $7e
000067r 1  4C rr rr         JMP pax_finished
00006Ar 1               
00006Ar 1               DOWN:
00006Ar 1  A9 28            LDA #40
00006Cr 1  85 7E            STA $7e
00006Er 1  4C rr rr         JMP pax_finished
000071r 1               
000071r 1               LEFT:
000071r 1  A9 25            LDA #37
000073r 1  85 7E            STA $7e
000075r 1  4C rr rr         JMP pax_finished
000078r 1               
000078r 1               RIGHT:
000078r 1  A9 27            LDA #39
00007Ar 1  85 7E            STA $7e
00007Cr 1  4C rr rr         JMP pax_finished
00007Fr 1               
00007Fr 1               
00007Fr 1               pax_finished:
00007Fr 1  4C rr rr         jmp mainloop
000082r 1               
000082r 1               
000082r 1               msg:
000082r 1  20 20 20 20      .asciiz "              snake world!              "
000086r 1  20 20 20 20  
00008Ar 1  20 20 20 20  
0000ABr 1               
0000ABr 1               draw_text:
0000ABr 1  A2 00            ldx #$00
0000ADr 1               draw_loop:
0000ADr 1  BD rr rr         lda msg,x
0000B0r 1  9D 18 05         sta $0518,x
0000B3r 1  E8               inx
0000B4r 1  E0 28            cpx #$28
0000B6r 1  D0 F5            bne draw_loop
0000B8r 1  60               rts
0000B9r 1               
0000B9r 1               
0000B9r 1               ; http://forum.6502.org/viewtopic.php?f=9&t=689
0000B9r 1               .proc replace_PAX_FN_2A
0000B9r 1  CA               dex
0000BAr 1  CA               dex
0000BBr 1               
0000BBr 1  A0 00            LDY   #0
0000BDr 1  B5 00            LDA   0,X   ; Move NOS to N and then zero
0000BFr 1  85 92            STA   TEMP  ; (ie, erase) NOS (2 bytes).
0000C1r 1  94 00            STY   0,X   ; STZ can be replaced with STY
0000C3r 1                               ; here since NEXT left 0 in Y.
0000C3r 1  B5 01            LDA   1,X
0000C5r 1  85 93            STA   TEMP2
0000C7r 1  94 01            STY   1,X   ; STZ can be replaced with STY
0000C9r 1                               ; here since NEXT left 0 in Y.
0000C9r 1  A0 10            LDY   #$10  ; Go through the loop 16 times.
0000CBr 1               
0000CBr 1               @1:
0000CBr 1  16 00            ASL  0,X    ; Shift the 2 top stack cells
0000CDr 1  36 01            ROL  1,X    ; (ie, four bytes) left one bit.
0000CFr 1  36 02            ROL  2,X    ; The multiplier gets shifted out
0000D1r 1  36 03            ROL  3,X    ; as the product gets shifted in.
0000D3r 1  90 15            BCC  @2
0000D5r 1                               ; If the high bit shifted out was 1,
0000D5r 1  18               CLC         ; add the 2-byte value at N into NOS,
0000D6r 1  A5 92            LDA  TEMP
0000D8r 1  75 00            ADC  0,X    ; low byte,
0000DAr 1  95 00            STA  0,X
0000DCr 1               
0000DCr 1  A5 93            LDA  TEMP2
0000DEr 1  75 01            ADC  1,X    ; then high byte.
0000E0r 1  95 01            STA  1,X
0000E2r 1                               ; If there was a carry, then
0000E2r 1  90 06            BCC  @2     ; increment low byte of high cell.
0000E4r 1  F6 02            INC  2,X    ; Public-domain used LDA#0, ADC, STA.
0000E6r 1                               ; If incrementing the low byte of the
0000E6r 1  D0 02            BNE  @2     ; high cell made it 0, you must also
0000E8r 1  F6 03            INC  3,X    ; increment the high byte of the high
0000EAr 1                               ; cell!  Lacking this is where the
0000EAr 1                               ; bug lay in the public-domain UM*
0000EAr 1               @2:
0000EAr 1  88               DEY
0000EBr 1  D0 DE            BNE   @1    ; Loop again if not done.
0000EDr 1               
0000EDr 1  60               rts
0000EEr 1               .endproc
0000EEr 1               
0000EEr 1               
0000EEr 1               
0000EEr 1               ; Generated code
0000EEr 1               
0000EEr 1                   .include "generated.asm"
0000EEr 2               .proc PAX_FN_main
0000EEr 2               @target_0:
0000EEr 2               
0000EEr 2               ; snake.fth:23:1 in `main`
0000EEr 2               @OPCODE_1:   ; [c64_ir] PushLiteral(500)
0000EEr 2  E8               inx
0000EFr 2  E8               inx
0000F0r 2  A9 F4            lda #244
0000F2r 2  95 00            sta $00,x
0000F4r 2  A9 01            lda #1
0000F6r 2  95 01            sta $01,x
0000F8r 2               
0000F8r 2               ; <inline>:0:0 in `main`
0000F8r 2               @OPCODE_2:   ; [c64_ir] PushLiteral(7777)
0000F8r 2  E8               inx
0000F9r 2  E8               inx
0000FAr 2  A9 61            lda #97
0000FCr 2  95 00            sta $00,x
0000FEr 2  A9 1E            lda #30
000100r 2  95 01            sta $01,x
000102r 2               
000102r 2               ; <inline>:0:0 in `main`
000102r 2               @OPCODE_3:   ; [c64_ir] AltPush
000102r 2  CA               dex
000103r 2  CA               dex
000104r 2  B5 03            lda $03,x
000106r 2  48               pha
000107r 2  B5 02            lda $02,x
000109r 2  48               pha
00010Ar 2               
00010Ar 2               ; <inline>:0:0 in `main`
00010Ar 2               @OPCODE_4:   ; [c64_ir] PushLiteral(7777)
00010Ar 2  E8               inx
00010Br 2  E8               inx
00010Cr 2  A9 61            lda #97
00010Er 2  95 00            sta $00,x
000110r 2  A9 1E            lda #30
000112r 2  95 01            sta $01,x
000114r 2               
000114r 2               ; <inline>:0:0 in `main`
000114r 2               @OPCODE_5:   ; [c64_ir] AltPush
000114r 2  CA               dex
000115r 2  CA               dex
000116r 2  B5 03            lda $03,x
000118r 2  48               pha
000119r 2  B5 02            lda $02,x
00011Br 2  48               pha
00011Cr 2               
00011Cr 2               ; src/prelude.fth:6:10 in `dup`
00011Cr 2               @OPCODE_6:   ; [c64_ir] TempStore
00011Cr 2  CA               dex
00011Dr 2  CA               dex
00011Er 2  B5 03            lda $03,x
000120r 2  85 96            sta TEMP_PAX2
000122r 2  B5 02            lda $02,x
000124r 2  85 95            sta TEMP_PAX1
000126r 2               
000126r 2               ; src/prelude.fth:6:16 in `dup`
000126r 2               @OPCODE_7:   ; [c64_ir] TempLoad
000126r 2  E8               inx
000127r 2  E8               inx
000128r 2  A5 95            lda TEMP_PAX1
00012Ar 2  95 00            sta $00,x
00012Cr 2  A5 96            lda TEMP_PAX2
00012Er 2  95 01            sta $01,x
000130r 2               
000130r 2               ; src/prelude.fth:6:22 in `dup`
000130r 2               @OPCODE_8:   ; [c64_ir] TempLoad
000130r 2  E8               inx
000131r 2  E8               inx
000132r 2  A5 95            lda TEMP_PAX1
000134r 2  95 00            sta $00,x
000136r 2  A5 96            lda TEMP_PAX2
000138r 2  95 01            sta $01,x
00013Ar 2               
00013Ar 2               ; <inline>:0:0 in `main`
00013Ar 2               @OPCODE_9:   ; [c64_ir] AltPop
00013Ar 2  E8               inx
00013Br 2  E8               inx
00013Cr 2  68               pla
00013Dr 2  95 00            sta $00,x
00013Fr 2  68               pla
000140r 2  95 01            sta $01,x
000142r 2               
000142r 2               ; <inline>:0:0 in `main`
000142r 2               @OPCODE_10:   ; [c64_ir] Drop
000142r 2  CA               dex
000143r 2  CA               dex
000144r 2               
000144r 2               ; src/prelude.fth:41:13 in `cells`
000144r 2               @OPCODE_11:   ; [c64_ir] Add
000144r 2                   ; 21
000144r 2  CA               dex
000145r 2  CA               dex
000146r 2  18               clc
000147r 2  B5 00            lda $00,x
000149r 2  75 02            adc $02,x
00014Br 2  95 00            sta $00,x
00014Dr 2  B5 01            lda $01,x
00014Fr 2  75 03            adc $03,x
000151r 2  95 01            sta $01,x
000153r 2               
000153r 2               ; <inline>:0:0 in `main`
000153r 2               @OPCODE_12:   ; [c64_ir] AltPop
000153r 2  E8               inx
000154r 2  E8               inx
000155r 2  68               pla
000156r 2  95 00            sta $00,x
000158r 2  68               pla
000159r 2  95 01            sta $01,x
00015Br 2               
00015Br 2               ; <inline>:0:0 in `main`
00015Br 2               @OPCODE_13:   ; [c64_ir] Drop
00015Br 2  CA               dex
00015Cr 2  CA               dex
00015Dr 2               
00015Dr 2               ; snake.fth:23:11 in `main`
00015Dr 2               @OPCODE_14:   ; [c64_ir] Drop
00015Dr 2  CA               dex
00015Er 2  CA               dex
00015Fr 2               
00015Fr 2               ; snake.fth:26:1 in `main`
00015Fr 2               @OPCODE_15:   ; [c64_ir] PushLiteral(500)
00015Fr 2  E8               inx
000160r 2  E8               inx
000161r 2  A9 F4            lda #244
000163r 2  95 00            sta $00,x
000165r 2  A9 01            lda #1
000167r 2  95 01            sta $01,x
000169r 2               
000169r 2               ; <inline>:0:0 in `main`
000169r 2               @OPCODE_16:   ; [c64_ir] PushLiteral(7777)
000169r 2  E8               inx
00016Ar 2  E8               inx
00016Br 2  A9 61            lda #97
00016Dr 2  95 00            sta $00,x
00016Fr 2  A9 1E            lda #30
000171r 2  95 01            sta $01,x
000173r 2               
000173r 2               ; <inline>:0:0 in `main`
000173r 2               @OPCODE_17:   ; [c64_ir] AltPush
000173r 2  CA               dex
000174r 2  CA               dex
000175r 2  B5 03            lda $03,x
000177r 2  48               pha
000178r 2  B5 02            lda $02,x
00017Ar 2  48               pha
00017Br 2               
00017Br 2               ; <inline>:0:0 in `main`
00017Br 2               @OPCODE_18:   ; [c64_ir] PushLiteral(7777)
00017Br 2  E8               inx
00017Cr 2  E8               inx
00017Dr 2  A9 61            lda #97
00017Fr 2  95 00            sta $00,x
000181r 2  A9 1E            lda #30
000183r 2  95 01            sta $01,x
000185r 2               
000185r 2               ; <inline>:0:0 in `main`
000185r 2               @OPCODE_19:   ; [c64_ir] AltPush
000185r 2  CA               dex
000186r 2  CA               dex
000187r 2  B5 03            lda $03,x
000189r 2  48               pha
00018Ar 2  B5 02            lda $02,x
00018Cr 2  48               pha
00018Dr 2               
00018Dr 2               ; src/prelude.fth:6:10 in `dup`
00018Dr 2               @OPCODE_20:   ; [c64_ir] TempStore
00018Dr 2  CA               dex
00018Er 2  CA               dex
00018Fr 2  B5 03            lda $03,x
000191r 2  85 96            sta TEMP_PAX2
000193r 2  B5 02            lda $02,x
000195r 2  85 95            sta TEMP_PAX1
000197r 2               
000197r 2               ; src/prelude.fth:6:16 in `dup`
000197r 2               @OPCODE_21:   ; [c64_ir] TempLoad
000197r 2  E8               inx
000198r 2  E8               inx
000199r 2  A5 95            lda TEMP_PAX1
00019Br 2  95 00            sta $00,x
00019Dr 2  A5 96            lda TEMP_PAX2
00019Fr 2  95 01            sta $01,x
0001A1r 2               
0001A1r 2               ; src/prelude.fth:6:22 in `dup`
0001A1r 2               @OPCODE_22:   ; [c64_ir] TempLoad
0001A1r 2  E8               inx
0001A2r 2  E8               inx
0001A3r 2  A5 95            lda TEMP_PAX1
0001A5r 2  95 00            sta $00,x
0001A7r 2  A5 96            lda TEMP_PAX2
0001A9r 2  95 01            sta $01,x
0001ABr 2               
0001ABr 2               ; <inline>:0:0 in `main`
0001ABr 2               @OPCODE_23:   ; [c64_ir] AltPop
0001ABr 2  E8               inx
0001ACr 2  E8               inx
0001ADr 2  68               pla
0001AEr 2  95 00            sta $00,x
0001B0r 2  68               pla
0001B1r 2  95 01            sta $01,x
0001B3r 2               
0001B3r 2               ; <inline>:0:0 in `main`
0001B3r 2               @OPCODE_24:   ; [c64_ir] Drop
0001B3r 2  CA               dex
0001B4r 2  CA               dex
0001B5r 2               
0001B5r 2               ; src/prelude.fth:41:13 in `cells`
0001B5r 2               @OPCODE_25:   ; [c64_ir] Add
0001B5r 2                   ; 21
0001B5r 2  CA               dex
0001B6r 2  CA               dex
0001B7r 2  18               clc
0001B8r 2  B5 00            lda $00,x
0001BAr 2  75 02            adc $02,x
0001BCr 2  95 00            sta $00,x
0001BEr 2  B5 01            lda $01,x
0001C0r 2  75 03            adc $03,x
0001C2r 2  95 01            sta $01,x
0001C4r 2               
0001C4r 2               ; <inline>:0:0 in `main`
0001C4r 2               @OPCODE_26:   ; [c64_ir] AltPop
0001C4r 2  E8               inx
0001C5r 2  E8               inx
0001C6r 2  68               pla
0001C7r 2  95 00            sta $00,x
0001C9r 2  68               pla
0001CAr 2  95 01            sta $01,x
0001CCr 2               
0001CCr 2               ; <inline>:0:0 in `main`
0001CCr 2               @OPCODE_27:   ; [c64_ir] Drop
0001CCr 2  CA               dex
0001CDr 2  CA               dex
0001CEr 2               
0001CEr 2               ; snake.fth:26:11 in `main`
0001CEr 2               @OPCODE_28:   ; [c64_ir] Drop
0001CEr 2  CA               dex
0001CFr 2  CA               dex
0001D0r 2               
0001D0r 2               ; snake.fth:212:1 in `main`
0001D0r 2               @OPCODE_29:   ; [c64_ir] PushLiteral(-28672)
0001D0r 2  E8               inx
0001D1r 2  E8               inx
0001D2r 2  A9 00            lda #0
0001D4r 2  95 00            sta $00,x
0001D6r 2  A9 90            lda #144
0001D8r 2  95 01            sta $01,x
0001DAr 2               
0001DAr 2               ; snake.fth:212:13 in `main`
0001DAr 2               @OPCODE_30:   ; [c64_ir] Load
0001DAr 2  A1 00            lda ($00,x)
0001DCr 2  95 00            sta $00,x
0001DEr 2  A9 00            lda #0
0001E0r 2  95 01            sta $01,x
0001E2r 2               
0001E2r 2               ; <inline>:0:0 in `main`
0001E2r 2               @OPCODE_31:   ; [c64_ir] PushLiteral(7777)
0001E2r 2  E8               inx
0001E3r 2  E8               inx
0001E4r 2  A9 61            lda #97
0001E6r 2  95 00            sta $00,x
0001E8r 2  A9 1E            lda #30
0001EAr 2  95 01            sta $01,x
0001ECr 2               
0001ECr 2               ; <inline>:0:0 in `main`
0001ECr 2               @OPCODE_32:   ; [c64_ir] AltPush
0001ECr 2  CA               dex
0001EDr 2  CA               dex
0001EEr 2  B5 03            lda $03,x
0001F0r 2  48               pha
0001F1r 2  B5 02            lda $02,x
0001F3r 2  48               pha
0001F4r 2               
0001F4r 2               ; src/prelude.fth:21:8 in `0=`
0001F4r 2               @OPCODE_33:   ; [c64_ir] JumpIf0(2)
0001F4r 2  CA               dex
0001F5r 2  CA               dex
0001F6r 2  B5 02            lda $02,x
0001F8r 2  15 03            ora $03,x
0001FAr 2  D0 03            bne *+5
0001FCr 2  4C rr rr         jmp @target_2
0001FFr 2               
0001FFr 2               @target_1:
0001FFr 2               
0001FFr 2               ; src/prelude.fth:21:11 in `0=`
0001FFr 2               @OPCODE_35:   ; [c64_ir] PushLiteral(0)
0001FFr 2  E8               inx
000200r 2  E8               inx
000201r 2  A9 00            lda #0
000203r 2  95 00            sta $00,x
000205r 2  A9 00            lda #0
000207r 2  95 01            sta $01,x
000209r 2               
000209r 2               ; src/prelude.fth:21:13 in `0=`
000209r 2               @OPCODE_36:   ; [c64_ir] JumpElse(3)
000209r 2  4C rr rr         jmp @target_3
00020Cr 2               
00020Cr 2               @target_2:
00020Cr 2               
00020Cr 2               ; src/prelude.fth:21:18 in `0=`
00020Cr 2               @OPCODE_38:   ; [c64_ir] PushLiteral(-1)
00020Cr 2  E8               inx
00020Dr 2  E8               inx
00020Er 2  A9 FF            lda #255
000210r 2  95 00            sta $00,x
000212r 2  A9 FF            lda #255
000214r 2  95 01            sta $01,x
000216r 2               
000216r 2               ; src/prelude.fth:21:21 in `0=`
000216r 2               @OPCODE_39:   ; [c64_ir] JumpTarget(2)
000216r 2               
000216r 2               @target_3:
000216r 2               
000216r 2               ; <inline>:0:0 in `main`
000216r 2               @OPCODE_41:   ; [c64_ir] AltPop
000216r 2  E8               inx
000217r 2  E8               inx
000218r 2  68               pla
000219r 2  95 00            sta $00,x
00021Br 2  68               pla
00021Cr 2  95 01            sta $01,x
00021Er 2               
00021Er 2               ; <inline>:0:0 in `main`
00021Er 2               @OPCODE_42:   ; [c64_ir] Drop
00021Er 2  CA               dex
00021Fr 2  CA               dex
000220r 2               
000220r 2               ; snake.fth:212:18 in `main`
000220r 2               @OPCODE_43:   ; [c64_ir] JumpIf0(55)
000220r 2  CA               dex
000221r 2  CA               dex
000222r 2  B5 02            lda $02,x
000224r 2  15 03            ora $03,x
000226r 2  D0 03            bne *+5
000228r 2  4C rr rr         jmp @target_55
00022Br 2               
00022Br 2               @target_4:
00022Br 2               
00022Br 2               ; <inline>:0:0 in `main`
00022Br 2               @OPCODE_45:   ; [c64_ir] PushLiteral(7777)
00022Br 2  E8               inx
00022Cr 2  E8               inx
00022Dr 2  A9 61            lda #97
00022Fr 2  95 00            sta $00,x
000231r 2  A9 1E            lda #30
000233r 2  95 01            sta $01,x
000235r 2               
000235r 2               ; <inline>:0:0 in `main`
000235r 2               @OPCODE_46:   ; [c64_ir] AltPush
000235r 2  CA               dex
000236r 2  CA               dex
000237r 2  B5 03            lda $03,x
000239r 2  48               pha
00023Ar 2  B5 02            lda $02,x
00023Cr 2  48               pha
00023Dr 2               
00023Dr 2               ; <inline>:0:0 in `main`
00023Dr 2               @OPCODE_47:   ; [c64_ir] PushLiteral(7777)
00023Dr 2  E8               inx
00023Er 2  E8               inx
00023Fr 2  A9 61            lda #97
000241r 2  95 00            sta $00,x
000243r 2  A9 1E            lda #30
000245r 2  95 01            sta $01,x
000247r 2               
000247r 2               ; <inline>:0:0 in `main`
000247r 2               @OPCODE_48:   ; [c64_ir] AltPush
000247r 2  CA               dex
000248r 2  CA               dex
000249r 2  B5 03            lda $03,x
00024Br 2  48               pha
00024Cr 2  B5 02            lda $02,x
00024Er 2  48               pha
00024Fr 2               
00024Fr 2               ; snake.fth:57:5 in `draw-background`
00024Fr 2               @OPCODE_49:   ; [c64_ir] PushLiteral(0)
00024Fr 2  E8               inx
000250r 2  E8               inx
000251r 2  A9 00            lda #0
000253r 2  95 00            sta $00,x
000255r 2  A9 00            lda #0
000257r 2  95 01            sta $01,x
000259r 2               
000259r 2               ; snake.fth:58:5 in `draw-background`
000259r 2               @OPCODE_50:   ; [c64_ir] PushLiteral(25)
000259r 2  E8               inx
00025Ar 2  E8               inx
00025Br 2  A9 19            lda #25
00025Dr 2  95 00            sta $00,x
00025Fr 2  A9 00            lda #0
000261r 2  95 01            sta $01,x
000263r 2               
000263r 2               ; snake.fth:58:12 in `draw-background`
000263r 2               @OPCODE_51:   ; [c64_ir] PushLiteral(0)
000263r 2  E8               inx
000264r 2  E8               inx
000265r 2  A9 00            lda #0
000267r 2  95 00            sta $00,x
000269r 2  A9 00            lda #0
00026Br 2  95 01            sta $01,x
00026Dr 2               
00026Dr 2               ; snake.fth:58:14 in `draw-background`
00026Dr 2               @OPCODE_52:   ; [c64_ir] AltPush
00026Dr 2  CA               dex
00026Er 2  CA               dex
00026Fr 2  B5 03            lda $03,x
000271r 2  48               pha
000272r 2  B5 02            lda $02,x
000274r 2  48               pha
000275r 2               
000275r 2               ; snake.fth:58:14 in `draw-background`
000275r 2               @OPCODE_53:   ; [c64_ir] AltPush
000275r 2  CA               dex
000276r 2  CA               dex
000277r 2  B5 03            lda $03,x
000279r 2  48               pha
00027Ar 2  B5 02            lda $02,x
00027Cr 2  48               pha
00027Dr 2               
00027Dr 2               ; snake.fth:58:14 in `draw-background`
00027Dr 2               @OPCODE_54:   ; [c64_ir] LoopTarget(4)
00027Dr 2               
00027Dr 2               @target_5:
00027Dr 2               
00027Dr 2               ; snake.fth:59:9 in `draw-background`
00027Dr 2               @OPCODE_56:   ; [c64_ir] PushLiteral(40)
00027Dr 2  E8               inx
00027Er 2  E8               inx
00027Fr 2  A9 28            lda #40
000281r 2  95 00            sta $00,x
000283r 2  A9 00            lda #0
000285r 2  95 01            sta $01,x
000287r 2               
000287r 2               ; snake.fth:59:15 in `draw-background`
000287r 2               @OPCODE_57:   ; [c64_ir] PushLiteral(0)
000287r 2  E8               inx
000288r 2  E8               inx
000289r 2  A9 00            lda #0
00028Br 2  95 00            sta $00,x
00028Dr 2  A9 00            lda #0
00028Fr 2  95 01            sta $01,x
000291r 2               
000291r 2               ; snake.fth:59:17 in `draw-background`
000291r 2               @OPCODE_58:   ; [c64_ir] AltPush
000291r 2  CA               dex
000292r 2  CA               dex
000293r 2  B5 03            lda $03,x
000295r 2  48               pha
000296r 2  B5 02            lda $02,x
000298r 2  48               pha
000299r 2               
000299r 2               ; snake.fth:59:17 in `draw-background`
000299r 2               @OPCODE_59:   ; [c64_ir] AltPush
000299r 2  CA               dex
00029Ar 2  CA               dex
00029Br 2  B5 03            lda $03,x
00029Dr 2  48               pha
00029Er 2  B5 02            lda $02,x
0002A0r 2  48               pha
0002A1r 2               
0002A1r 2               ; snake.fth:59:17 in `draw-background`
0002A1r 2               @OPCODE_60:   ; [c64_ir] LoopTarget(5)
0002A1r 2               
0002A1r 2               @target_6:
0002A1r 2               
0002A1r 2               ; snake.fth:60:13 in `draw-background`
0002A1r 2               @OPCODE_62:   ; [c64_ir] PushLiteral(32)
0002A1r 2  E8               inx
0002A2r 2  E8               inx
0002A3r 2  A9 20            lda #32
0002A5r 2  95 00            sta $00,x
0002A7r 2  A9 00            lda #0
0002A9r 2  95 01            sta $01,x
0002ABr 2               
0002ABr 2               ; <inline>:0:0 in `main`
0002ABr 2               @OPCODE_63:   ; [c64_ir] PushLiteral(7777)
0002ABr 2  E8               inx
0002ACr 2  E8               inx
0002ADr 2  A9 61            lda #97
0002AFr 2  95 00            sta $00,x
0002B1r 2  A9 1E            lda #30
0002B3r 2  95 01            sta $01,x
0002B5r 2               
0002B5r 2               ; <inline>:0:0 in `main`
0002B5r 2               @OPCODE_64:   ; [c64_ir] AltPush
0002B5r 2  CA               dex
0002B6r 2  CA               dex
0002B7r 2  B5 03            lda $03,x
0002B9r 2  48               pha
0002BAr 2  B5 02            lda $02,x
0002BCr 2  48               pha
0002BDr 2               
0002BDr 2               ; src/prelude.fth:4:10 in `over`
0002BDr 2               @OPCODE_65:   ; [c64_ir] AltPush
0002BDr 2  CA               dex
0002BEr 2  CA               dex
0002BFr 2  B5 03            lda $03,x
0002C1r 2  48               pha
0002C2r 2  B5 02            lda $02,x
0002C4r 2  48               pha
0002C5r 2               
0002C5r 2               ; src/prelude.fth:4:13 in `over`
0002C5r 2               @OPCODE_66:   ; [c64_ir] TempStore
0002C5r 2  CA               dex
0002C6r 2  CA               dex
0002C7r 2  B5 03            lda $03,x
0002C9r 2  85 96            sta TEMP_PAX2
0002CBr 2  B5 02            lda $02,x
0002CDr 2  85 95            sta TEMP_PAX1
0002CFr 2               
0002CFr 2               ; src/prelude.fth:4:19 in `over`
0002CFr 2               @OPCODE_67:   ; [c64_ir] TempLoad
0002CFr 2  E8               inx
0002D0r 2  E8               inx
0002D1r 2  A5 95            lda TEMP_PAX1
0002D3r 2  95 00            sta $00,x
0002D5r 2  A5 96            lda TEMP_PAX2
0002D7r 2  95 01            sta $01,x
0002D9r 2               
0002D9r 2               ; src/prelude.fth:4:25 in `over`
0002D9r 2               @OPCODE_68:   ; [c64_ir] AltPop
0002D9r 2  E8               inx
0002DAr 2  E8               inx
0002DBr 2  68               pla
0002DCr 2  95 00            sta $00,x
0002DEr 2  68               pla
0002DFr 2  95 01            sta $01,x
0002E1r 2               
0002E1r 2               ; src/prelude.fth:4:28 in `over`
0002E1r 2               @OPCODE_69:   ; [c64_ir] TempLoad
0002E1r 2  E8               inx
0002E2r 2  E8               inx
0002E3r 2  A5 95            lda TEMP_PAX1
0002E5r 2  95 00            sta $00,x
0002E7r 2  A5 96            lda TEMP_PAX2
0002E9r 2  95 01            sta $01,x
0002EBr 2               
0002EBr 2               ; <inline>:0:0 in `main`
0002EBr 2               @OPCODE_70:   ; [c64_ir] AltPop
0002EBr 2  E8               inx
0002ECr 2  E8               inx
0002EDr 2  68               pla
0002EEr 2  95 00            sta $00,x
0002F0r 2  68               pla
0002F1r 2  95 01            sta $01,x
0002F3r 2               
0002F3r 2               ; <inline>:0:0 in `main`
0002F3r 2               @OPCODE_71:   ; [c64_ir] Drop
0002F3r 2  CA               dex
0002F4r 2  CA               dex
0002F5r 2               
0002F5r 2               ; <inline>:0:0 in `main`
0002F5r 2               @OPCODE_72:   ; [c64_ir] PushLiteral(7777)
0002F5r 2  E8               inx
0002F6r 2  E8               inx
0002F7r 2  A9 61            lda #97
0002F9r 2  95 00            sta $00,x
0002FBr 2  A9 1E            lda #30
0002FDr 2  95 01            sta $01,x
0002FFr 2               
0002FFr 2               ; <inline>:0:0 in `main`
0002FFr 2               @OPCODE_73:   ; [c64_ir] AltPush
0002FFr 2  CA               dex
000300r 2  CA               dex
000301r 2  B5 03            lda $03,x
000303r 2  48               pha
000304r 2  B5 02            lda $02,x
000306r 2  48               pha
000307r 2               
000307r 2               ; src/prelude.fth:38:5 in `i`
000307r 2               @OPCODE_74:   ; [c64_ir] AltPop
000307r 2  E8               inx
000308r 2  E8               inx
000309r 2  68               pla
00030Ar 2  95 00            sta $00,x
00030Cr 2  68               pla
00030Dr 2  95 01            sta $01,x
00030Fr 2               
00030Fr 2               ; src/prelude.fth:38:8 in `i`
00030Fr 2               @OPCODE_75:   ; [c64_ir] AltPop
00030Fr 2  E8               inx
000310r 2  E8               inx
000311r 2  68               pla
000312r 2  95 00            sta $00,x
000314r 2  68               pla
000315r 2  95 01            sta $01,x
000317r 2               
000317r 2               ; src/prelude.fth:38:11 in `i`
000317r 2               @OPCODE_76:   ; [c64_ir] AltPop
000317r 2  E8               inx
000318r 2  E8               inx
000319r 2  68               pla
00031Ar 2  95 00            sta $00,x
00031Cr 2  68               pla
00031Dr 2  95 01            sta $01,x
00031Fr 2               
00031Fr 2               ; src/prelude.fth:38:14 in `i`
00031Fr 2               @OPCODE_77:   ; [c64_ir] TempStore
00031Fr 2  CA               dex
000320r 2  CA               dex
000321r 2  B5 03            lda $03,x
000323r 2  85 96            sta TEMP_PAX2
000325r 2  B5 02            lda $02,x
000327r 2  85 95            sta TEMP_PAX1
000329r 2               
000329r 2               ; src/prelude.fth:38:20 in `i`
000329r 2               @OPCODE_78:   ; [c64_ir] TempLoad
000329r 2  E8               inx
00032Ar 2  E8               inx
00032Br 2  A5 95            lda TEMP_PAX1
00032Dr 2  95 00            sta $00,x
00032Fr 2  A5 96            lda TEMP_PAX2
000331r 2  95 01            sta $01,x
000333r 2               
000333r 2               ; src/prelude.fth:38:26 in `i`
000333r 2               @OPCODE_79:   ; [c64_ir] AltPush
000333r 2  CA               dex
000334r 2  CA               dex
000335r 2  B5 03            lda $03,x
000337r 2  48               pha
000338r 2  B5 02            lda $02,x
00033Ar 2  48               pha
00033Br 2               
00033Br 2               ; src/prelude.fth:38:29 in `i`
00033Br 2               @OPCODE_80:   ; [c64_ir] AltPush
00033Br 2  CA               dex
00033Cr 2  CA               dex
00033Dr 2  B5 03            lda $03,x
00033Fr 2  48               pha
000340r 2  B5 02            lda $02,x
000342r 2  48               pha
000343r 2               
000343r 2               ; src/prelude.fth:38:32 in `i`
000343r 2               @OPCODE_81:   ; [c64_ir] AltPush
000343r 2  CA               dex
000344r 2  CA               dex
000345r 2  B5 03            lda $03,x
000347r 2  48               pha
000348r 2  B5 02            lda $02,x
00034Ar 2  48               pha
00034Br 2               
00034Br 2               ; src/prelude.fth:38:35 in `i`
00034Br 2               @OPCODE_82:   ; [c64_ir] TempLoad
00034Br 2  E8               inx
00034Cr 2  E8               inx
00034Dr 2  A5 95            lda TEMP_PAX1
00034Fr 2  95 00            sta $00,x
000351r 2  A5 96            lda TEMP_PAX2
000353r 2  95 01            sta $01,x
000355r 2               
000355r 2               ; <inline>:0:0 in `main`
000355r 2               @OPCODE_83:   ; [c64_ir] AltPop
000355r 2  E8               inx
000356r 2  E8               inx
000357r 2  68               pla
000358r 2  95 00            sta $00,x
00035Ar 2  68               pla
00035Br 2  95 01            sta $01,x
00035Dr 2               
00035Dr 2               ; <inline>:0:0 in `main`
00035Dr 2               @OPCODE_84:   ; [c64_ir] Drop
00035Dr 2  CA               dex
00035Er 2  CA               dex
00035Fr 2               
00035Fr 2               ; snake.fth:60:32 in `draw-background`
00035Fr 2               @OPCODE_85:   ; [c64_ir] Add
00035Fr 2                   ; 21
00035Fr 2  CA               dex
000360r 2  CA               dex
000361r 2  18               clc
000362r 2  B5 00            lda $00,x
000364r 2  75 02            adc $02,x
000366r 2  95 00            sta $00,x
000368r 2  B5 01            lda $01,x
00036Ar 2  75 03            adc $03,x
00036Cr 2  95 01            sta $01,x
00036Er 2               
00036Er 2               ; <inline>:0:0 in `main`
00036Er 2               @OPCODE_86:   ; [c64_ir] PushLiteral(7777)
00036Er 2  E8               inx
00036Fr 2  E8               inx
000370r 2  A9 61            lda #97
000372r 2  95 00            sta $00,x
000374r 2  A9 1E            lda #30
000376r 2  95 01            sta $01,x
000378r 2               
000378r 2               ; <inline>:0:0 in `main`
000378r 2               @OPCODE_87:   ; [c64_ir] AltPush
000378r 2  CA               dex
000379r 2  CA               dex
00037Ar 2  B5 03            lda $03,x
00037Cr 2  48               pha
00037Dr 2  B5 02            lda $02,x
00037Fr 2  48               pha
000380r 2               
000380r 2               ; snake.fth:49:34 in `draw-index`
000380r 2               @OPCODE_88:   ; [c64_ir] PushLiteral(1024)
000380r 2  E8               inx
000381r 2  E8               inx
000382r 2  A9 00            lda #0
000384r 2  95 00            sta $00,x
000386r 2  A9 04            lda #4
000388r 2  95 01            sta $01,x
00038Ar 2               
00038Ar 2               ; snake.fth:49:43 in `draw-index`
00038Ar 2               @OPCODE_89:   ; [c64_ir] Add
00038Ar 2                   ; 21
00038Ar 2  CA               dex
00038Br 2  CA               dex
00038Cr 2  18               clc
00038Dr 2  B5 00            lda $00,x
00038Fr 2  75 02            adc $02,x
000391r 2  95 00            sta $00,x
000393r 2  B5 01            lda $01,x
000395r 2  75 03            adc $03,x
000397r 2  95 01            sta $01,x
000399r 2               
000399r 2               ; snake.fth:49:45 in `draw-index`
000399r 2               @OPCODE_90:   ; [c64_ir] Store8
000399r 2  CA               dex
00039Ar 2  CA               dex
00039Br 2  CA               dex
00039Cr 2  CA               dex
00039Dr 2  B5 02            lda $02,x
00039Fr 2  81 04            sta ($04,x)
0003A1r 2                   ; TODO high byte
0003A1r 2               
0003A1r 2               ; <inline>:0:0 in `main`
0003A1r 2               @OPCODE_91:   ; [c64_ir] AltPop
0003A1r 2  E8               inx
0003A2r 2  E8               inx
0003A3r 2  68               pla
0003A4r 2  95 00            sta $00,x
0003A6r 2  68               pla
0003A7r 2  95 01            sta $01,x
0003A9r 2               
0003A9r 2               ; <inline>:0:0 in `main`
0003A9r 2               @OPCODE_92:   ; [c64_ir] Drop
0003A9r 2  CA               dex
0003AAr 2  CA               dex
0003ABr 2               
0003ABr 2               ; <inline>:0:0 in `main`
0003ABr 2               @OPCODE_93:   ; [c64_ir] PushLiteral(7777)
0003ABr 2  E8               inx
0003ACr 2  E8               inx
0003ADr 2  A9 61            lda #97
0003AFr 2  95 00            sta $00,x
0003B1r 2  A9 1E            lda #30
0003B3r 2  95 01            sta $01,x
0003B5r 2               
0003B5r 2               ; <inline>:0:0 in `main`
0003B5r 2               @OPCODE_94:   ; [c64_ir] AltPush
0003B5r 2  CA               dex
0003B6r 2  CA               dex
0003B7r 2  B5 03            lda $03,x
0003B9r 2  48               pha
0003BAr 2  B5 02            lda $02,x
0003BCr 2  48               pha
0003BDr 2               
0003BDr 2               ; src/prelude.fth:33:12 in `loopimpl`
0003BDr 2               @OPCODE_95:   ; [c64_ir] AltPop
0003BDr 2  E8               inx
0003BEr 2  E8               inx
0003BFr 2  68               pla
0003C0r 2  95 00            sta $00,x
0003C2r 2  68               pla
0003C3r 2  95 01            sta $01,x
0003C5r 2               
0003C5r 2               ; src/prelude.fth:33:15 in `loopimpl`
0003C5r 2               @OPCODE_96:   ; [c64_ir] AltPop
0003C5r 2  E8               inx
0003C6r 2  E8               inx
0003C7r 2  68               pla
0003C8r 2  95 00            sta $00,x
0003CAr 2  68               pla
0003CBr 2  95 01            sta $01,x
0003CDr 2               
0003CDr 2               ; src/prelude.fth:33:18 in `loopimpl`
0003CDr 2               @OPCODE_97:   ; [c64_ir] AltPop
0003CDr 2  E8               inx
0003CEr 2  E8               inx
0003CFr 2  68               pla
0003D0r 2  95 00            sta $00,x
0003D2r 2  68               pla
0003D3r 2  95 01            sta $01,x
0003D5r 2               
0003D5r 2               ; <inline>:0:0 in `main`
0003D5r 2               @OPCODE_98:   ; [c64_ir] PushLiteral(7777)
0003D5r 2  E8               inx
0003D6r 2  E8               inx
0003D7r 2  A9 61            lda #97
0003D9r 2  95 00            sta $00,x
0003DBr 2  A9 1E            lda #30
0003DDr 2  95 01            sta $01,x
0003DFr 2               
0003DFr 2               ; <inline>:0:0 in `main`
0003DFr 2               @OPCODE_99:   ; [c64_ir] AltPush
0003DFr 2  CA               dex
0003E0r 2  CA               dex
0003E1r 2  B5 03            lda $03,x
0003E3r 2  48               pha
0003E4r 2  B5 02            lda $02,x
0003E6r 2  48               pha
0003E7r 2               
0003E7r 2               ; src/prelude.fth:18:8 in `1+`
0003E7r 2               @OPCODE_100:   ; [c64_ir] PushLiteral(1)
0003E7r 2  E8               inx
0003E8r 2  E8               inx
0003E9r 2  A9 01            lda #1
0003EBr 2  95 00            sta $00,x
0003EDr 2  A9 00            lda #0
0003EFr 2  95 01            sta $01,x
0003F1r 2               
0003F1r 2               ; src/prelude.fth:18:10 in `1+`
0003F1r 2               @OPCODE_101:   ; [c64_ir] Add
0003F1r 2                   ; 21
0003F1r 2  CA               dex
0003F2r 2  CA               dex
0003F3r 2  18               clc
0003F4r 2  B5 00            lda $00,x
0003F6r 2  75 02            adc $02,x
0003F8r 2  95 00            sta $00,x
0003FAr 2  B5 01            lda $01,x
0003FCr 2  75 03            adc $03,x
0003FEr 2  95 01            sta $01,x
000400r 2               
000400r 2               ; <inline>:0:0 in `main`
000400r 2               @OPCODE_102:   ; [c64_ir] AltPop
000400r 2  E8               inx
000401r 2  E8               inx
000402r 2  68               pla
000403r 2  95 00            sta $00,x
000405r 2  68               pla
000406r 2  95 01            sta $01,x
000408r 2               
000408r 2               ; <inline>:0:0 in `main`
000408r 2               @OPCODE_103:   ; [c64_ir] Drop
000408r 2  CA               dex
000409r 2  CA               dex
00040Ar 2               
00040Ar 2               ; <inline>:0:0 in `main`
00040Ar 2               @OPCODE_104:   ; [c64_ir] PushLiteral(7777)
00040Ar 2  E8               inx
00040Br 2  E8               inx
00040Cr 2  A9 61            lda #97
00040Er 2  95 00            sta $00,x
000410r 2  A9 1E            lda #30
000412r 2  95 01            sta $01,x
000414r 2               
000414r 2               ; <inline>:0:0 in `main`
000414r 2               @OPCODE_105:   ; [c64_ir] AltPush
000414r 2  CA               dex
000415r 2  CA               dex
000416r 2  B5 03            lda $03,x
000418r 2  48               pha
000419r 2  B5 02            lda $02,x
00041Br 2  48               pha
00041Cr 2               
00041Cr 2               ; <inline>:0:0 in `main`
00041Cr 2               @OPCODE_106:   ; [c64_ir] PushLiteral(7777)
00041Cr 2  E8               inx
00041Dr 2  E8               inx
00041Er 2  A9 61            lda #97
000420r 2  95 00            sta $00,x
000422r 2  A9 1E            lda #30
000424r 2  95 01            sta $01,x
000426r 2               
000426r 2               ; <inline>:0:0 in `main`
000426r 2               @OPCODE_107:   ; [c64_ir] AltPush
000426r 2  CA               dex
000427r 2  CA               dex
000428r 2  B5 03            lda $03,x
00042Ar 2  48               pha
00042Br 2  B5 02            lda $02,x
00042Dr 2  48               pha
00042Er 2               
00042Er 2               ; src/prelude.fth:4:10 in `over`
00042Er 2               @OPCODE_108:   ; [c64_ir] AltPush
00042Er 2  CA               dex
00042Fr 2  CA               dex
000430r 2  B5 03            lda $03,x
000432r 2  48               pha
000433r 2  B5 02            lda $02,x
000435r 2  48               pha
000436r 2               
000436r 2               ; src/prelude.fth:4:13 in `over`
000436r 2               @OPCODE_109:   ; [c64_ir] TempStore
000436r 2  CA               dex
000437r 2  CA               dex
000438r 2  B5 03            lda $03,x
00043Ar 2  85 96            sta TEMP_PAX2
00043Cr 2  B5 02            lda $02,x
00043Er 2  85 95            sta TEMP_PAX1
000440r 2               
000440r 2               ; src/prelude.fth:4:19 in `over`
000440r 2               @OPCODE_110:   ; [c64_ir] TempLoad
000440r 2  E8               inx
000441r 2  E8               inx
000442r 2  A5 95            lda TEMP_PAX1
000444r 2  95 00            sta $00,x
000446r 2  A5 96            lda TEMP_PAX2
000448r 2  95 01            sta $01,x
00044Ar 2               
00044Ar 2               ; src/prelude.fth:4:25 in `over`
00044Ar 2               @OPCODE_111:   ; [c64_ir] AltPop
00044Ar 2  E8               inx
00044Br 2  E8               inx
00044Cr 2  68               pla
00044Dr 2  95 00            sta $00,x
00044Fr 2  68               pla
000450r 2  95 01            sta $01,x
000452r 2               
000452r 2               ; src/prelude.fth:4:28 in `over`
000452r 2               @OPCODE_112:   ; [c64_ir] TempLoad
000452r 2  E8               inx
000453r 2  E8               inx
000454r 2  A5 95            lda TEMP_PAX1
000456r 2  95 00            sta $00,x
000458r 2  A5 96            lda TEMP_PAX2
00045Ar 2  95 01            sta $01,x
00045Cr 2               
00045Cr 2               ; <inline>:0:0 in `main`
00045Cr 2               @OPCODE_113:   ; [c64_ir] AltPop
00045Cr 2  E8               inx
00045Dr 2  E8               inx
00045Er 2  68               pla
00045Fr 2  95 00            sta $00,x
000461r 2  68               pla
000462r 2  95 01            sta $01,x
000464r 2               
000464r 2               ; <inline>:0:0 in `main`
000464r 2               @OPCODE_114:   ; [c64_ir] Drop
000464r 2  CA               dex
000465r 2  CA               dex
000466r 2               
000466r 2               ; <inline>:0:0 in `main`
000466r 2               @OPCODE_115:   ; [c64_ir] PushLiteral(7777)
000466r 2  E8               inx
000467r 2  E8               inx
000468r 2  A9 61            lda #97
00046Ar 2  95 00            sta $00,x
00046Cr 2  A9 1E            lda #30
00046Er 2  95 01            sta $01,x
000470r 2               
000470r 2               ; <inline>:0:0 in `main`
000470r 2               @OPCODE_116:   ; [c64_ir] AltPush
000470r 2  CA               dex
000471r 2  CA               dex
000472r 2  B5 03            lda $03,x
000474r 2  48               pha
000475r 2  B5 02            lda $02,x
000477r 2  48               pha
000478r 2               
000478r 2               ; src/prelude.fth:4:10 in `over`
000478r 2               @OPCODE_117:   ; [c64_ir] AltPush
000478r 2  CA               dex
000479r 2  CA               dex
00047Ar 2  B5 03            lda $03,x
00047Cr 2  48               pha
00047Dr 2  B5 02            lda $02,x
00047Fr 2  48               pha
000480r 2               
000480r 2               ; src/prelude.fth:4:13 in `over`
000480r 2               @OPCODE_118:   ; [c64_ir] TempStore
000480r 2  CA               dex
000481r 2  CA               dex
000482r 2  B5 03            lda $03,x
000484r 2  85 96            sta TEMP_PAX2
000486r 2  B5 02            lda $02,x
000488r 2  85 95            sta TEMP_PAX1
00048Ar 2               
00048Ar 2               ; src/prelude.fth:4:19 in `over`
00048Ar 2               @OPCODE_119:   ; [c64_ir] TempLoad
00048Ar 2  E8               inx
00048Br 2  E8               inx
00048Cr 2  A5 95            lda TEMP_PAX1
00048Er 2  95 00            sta $00,x
000490r 2  A5 96            lda TEMP_PAX2
000492r 2  95 01            sta $01,x
000494r 2               
000494r 2               ; src/prelude.fth:4:25 in `over`
000494r 2               @OPCODE_120:   ; [c64_ir] AltPop
000494r 2  E8               inx
000495r 2  E8               inx
000496r 2  68               pla
000497r 2  95 00            sta $00,x
000499r 2  68               pla
00049Ar 2  95 01            sta $01,x
00049Cr 2               
00049Cr 2               ; src/prelude.fth:4:28 in `over`
00049Cr 2               @OPCODE_121:   ; [c64_ir] TempLoad
00049Cr 2  E8               inx
00049Dr 2  E8               inx
00049Er 2  A5 95            lda TEMP_PAX1
0004A0r 2  95 00            sta $00,x
0004A2r 2  A5 96            lda TEMP_PAX2
0004A4r 2  95 01            sta $01,x
0004A6r 2               
0004A6r 2               ; <inline>:0:0 in `main`
0004A6r 2               @OPCODE_122:   ; [c64_ir] AltPop
0004A6r 2  E8               inx
0004A7r 2  E8               inx
0004A8r 2  68               pla
0004A9r 2  95 00            sta $00,x
0004ABr 2  68               pla
0004ACr 2  95 01            sta $01,x
0004AEr 2               
0004AEr 2               ; <inline>:0:0 in `main`
0004AEr 2               @OPCODE_123:   ; [c64_ir] Drop
0004AEr 2  CA               dex
0004AFr 2  CA               dex
0004B0r 2               
0004B0r 2               ; <inline>:0:0 in `main`
0004B0r 2               @OPCODE_124:   ; [c64_ir] AltPop
0004B0r 2  E8               inx
0004B1r 2  E8               inx
0004B2r 2  68               pla
0004B3r 2  95 00            sta $00,x
0004B5r 2  68               pla
0004B6r 2  95 01            sta $01,x
0004B8r 2               
0004B8r 2               ; <inline>:0:0 in `main`
0004B8r 2               @OPCODE_125:   ; [c64_ir] Drop
0004B8r 2  CA               dex
0004B9r 2  CA               dex
0004BAr 2               
0004BAr 2               ; src/prelude.fth:33:29 in `loopimpl`
0004BAr 2               @OPCODE_126:   ; [c64_ir] AltPush
0004BAr 2  CA               dex
0004BBr 2  CA               dex
0004BCr 2  B5 03            lda $03,x
0004BEr 2  48               pha
0004BFr 2  B5 02            lda $02,x
0004C1r 2  48               pha
0004C2r 2               
0004C2r 2               ; src/prelude.fth:33:32 in `loopimpl`
0004C2r 2               @OPCODE_127:   ; [c64_ir] AltPush
0004C2r 2  CA               dex
0004C3r 2  CA               dex
0004C4r 2  B5 03            lda $03,x
0004C6r 2  48               pha
0004C7r 2  B5 02            lda $02,x
0004C9r 2  48               pha
0004CAr 2               
0004CAr 2               ; <inline>:0:0 in `main`
0004CAr 2               @OPCODE_128:   ; [c64_ir] PushLiteral(7777)
0004CAr 2  E8               inx
0004CBr 2  E8               inx
0004CCr 2  A9 61            lda #97
0004CEr 2  95 00            sta $00,x
0004D0r 2  A9 1E            lda #30
0004D2r 2  95 01            sta $01,x
0004D4r 2               
0004D4r 2               ; <inline>:0:0 in `main`
0004D4r 2               @OPCODE_129:   ; [c64_ir] AltPush
0004D4r 2  CA               dex
0004D5r 2  CA               dex
0004D6r 2  B5 03            lda $03,x
0004D8r 2  48               pha
0004D9r 2  B5 02            lda $02,x
0004DBr 2  48               pha
0004DCr 2               
0004DCr 2               ; <inline>:0:0 in `main`
0004DCr 2               @OPCODE_130:   ; [c64_ir] PushLiteral(7777)
0004DCr 2  E8               inx
0004DDr 2  E8               inx
0004DEr 2  A9 61            lda #97
0004E0r 2  95 00            sta $00,x
0004E2r 2  A9 1E            lda #30
0004E4r 2  95 01            sta $01,x
0004E6r 2               
0004E6r 2               ; <inline>:0:0 in `main`
0004E6r 2               @OPCODE_131:   ; [c64_ir] AltPush
0004E6r 2  CA               dex
0004E7r 2  CA               dex
0004E8r 2  B5 03            lda $03,x
0004EAr 2  48               pha
0004EBr 2  B5 02            lda $02,x
0004EDr 2  48               pha
0004EEr 2               
0004EEr 2               ; <inline>:0:0 in `main`
0004EEr 2               @OPCODE_132:   ; [c64_ir] PushLiteral(7777)
0004EEr 2  E8               inx
0004EFr 2  E8               inx
0004F0r 2  A9 61            lda #97
0004F2r 2  95 00            sta $00,x
0004F4r 2  A9 1E            lda #30
0004F6r 2  95 01            sta $01,x
0004F8r 2               
0004F8r 2               ; <inline>:0:0 in `main`
0004F8r 2               @OPCODE_133:   ; [c64_ir] AltPush
0004F8r 2  CA               dex
0004F9r 2  CA               dex
0004FAr 2  B5 03            lda $03,x
0004FCr 2  48               pha
0004FDr 2  B5 02            lda $02,x
0004FFr 2  48               pha
000500r 2               
000500r 2               ; <inline>:0:0 in `main`
000500r 2               @OPCODE_134:   ; [c64_ir] PushLiteral(7777)
000500r 2  E8               inx
000501r 2  E8               inx
000502r 2  A9 61            lda #97
000504r 2  95 00            sta $00,x
000506r 2  A9 1E            lda #30
000508r 2  95 01            sta $01,x
00050Ar 2               
00050Ar 2               ; <inline>:0:0 in `main`
00050Ar 2               @OPCODE_135:   ; [c64_ir] AltPush
00050Ar 2  CA               dex
00050Br 2  CA               dex
00050Cr 2  B5 03            lda $03,x
00050Er 2  48               pha
00050Fr 2  B5 02            lda $02,x
000511r 2  48               pha
000512r 2               
000512r 2               ; src/prelude.fth:14:12 in `invert`
000512r 2               @OPCODE_136:   ; [c64_ir] PushLiteral(-1)
000512r 2  E8               inx
000513r 2  E8               inx
000514r 2  A9 FF            lda #255
000516r 2  95 00            sta $00,x
000518r 2  A9 FF            lda #255
00051Ar 2  95 01            sta $01,x
00051Cr 2               
00051Cr 2               ; src/prelude.fth:14:15 in `invert`
00051Cr 2               @OPCODE_137:   ; [c64_ir] Nand
00051Cr 2                   ; 26
00051Cr 2  CA               dex
00051Dr 2  CA               dex
00051Er 2  B5 00            lda $00,x
000520r 2  35 02            and $02,x
000522r 2  49 FF            eor #$ff
000524r 2  95 00            sta $00,x
000526r 2  B5 01            lda $01,x
000528r 2  35 03            and $03,x
00052Ar 2  49 FF            eor #$ff
00052Cr 2  95 01            sta $01,x
00052Er 2               
00052Er 2               ; <inline>:0:0 in `main`
00052Er 2               @OPCODE_138:   ; [c64_ir] AltPop
00052Er 2  E8               inx
00052Fr 2  E8               inx
000530r 2  68               pla
000531r 2  95 00            sta $00,x
000533r 2  68               pla
000534r 2  95 01            sta $01,x
000536r 2               
000536r 2               ; <inline>:0:0 in `main`
000536r 2               @OPCODE_139:   ; [c64_ir] Drop
000536r 2  CA               dex
000537r 2  CA               dex
000538r 2               
000538r 2               ; src/prelude.fth:15:19 in `negate`
000538r 2               @OPCODE_140:   ; [c64_ir] PushLiteral(1)
000538r 2  E8               inx
000539r 2  E8               inx
00053Ar 2  A9 01            lda #1
00053Cr 2  95 00            sta $00,x
00053Er 2  A9 00            lda #0
000540r 2  95 01            sta $01,x
000542r 2               
000542r 2               ; src/prelude.fth:15:21 in `negate`
000542r 2               @OPCODE_141:   ; [c64_ir] Add
000542r 2                   ; 21
000542r 2  CA               dex
000543r 2  CA               dex
000544r 2  18               clc
000545r 2  B5 00            lda $00,x
000547r 2  75 02            adc $02,x
000549r 2  95 00            sta $00,x
00054Br 2  B5 01            lda $01,x
00054Dr 2  75 03            adc $03,x
00054Fr 2  95 01            sta $01,x
000551r 2               
000551r 2               ; <inline>:0:0 in `main`
000551r 2               @OPCODE_142:   ; [c64_ir] AltPop
000551r 2  E8               inx
000552r 2  E8               inx
000553r 2  68               pla
000554r 2  95 00            sta $00,x
000556r 2  68               pla
000557r 2  95 01            sta $01,x
000559r 2               
000559r 2               ; <inline>:0:0 in `main`
000559r 2               @OPCODE_143:   ; [c64_ir] Drop
000559r 2  CA               dex
00055Ar 2  CA               dex
00055Br 2               
00055Br 2               ; src/prelude.fth:16:19 in `-`
00055Br 2               @OPCODE_144:   ; [c64_ir] Add
00055Br 2                   ; 21
00055Br 2  CA               dex
00055Cr 2  CA               dex
00055Dr 2  18               clc
00055Er 2  B5 00            lda $00,x
000560r 2  75 02            adc $02,x
000562r 2  95 00            sta $00,x
000564r 2  B5 01            lda $01,x
000566r 2  75 03            adc $03,x
000568r 2  95 01            sta $01,x
00056Ar 2               
00056Ar 2               ; <inline>:0:0 in `main`
00056Ar 2               @OPCODE_145:   ; [c64_ir] AltPop
00056Ar 2  E8               inx
00056Br 2  E8               inx
00056Cr 2  68               pla
00056Dr 2  95 00            sta $00,x
00056Fr 2  68               pla
000570r 2  95 01            sta $01,x
000572r 2               
000572r 2               ; <inline>:0:0 in `main`
000572r 2               @OPCODE_146:   ; [c64_ir] Drop
000572r 2  CA               dex
000573r 2  CA               dex
000574r 2               
000574r 2               ; <inline>:0:0 in `main`
000574r 2               @OPCODE_147:   ; [c64_ir] PushLiteral(7777)
000574r 2  E8               inx
000575r 2  E8               inx
000576r 2  A9 61            lda #97
000578r 2  95 00            sta $00,x
00057Ar 2  A9 1E            lda #30
00057Cr 2  95 01            sta $01,x
00057Er 2               
00057Er 2               ; <inline>:0:0 in `main`
00057Er 2               @OPCODE_148:   ; [c64_ir] AltPush
00057Er 2  CA               dex
00057Fr 2  CA               dex
000580r 2  B5 03            lda $03,x
000582r 2  48               pha
000583r 2  B5 02            lda $02,x
000585r 2  48               pha
000586r 2               
000586r 2               ; src/prelude.fth:21:8 in `0=`
000586r 2               @OPCODE_149:   ; [c64_ir] JumpIf0(8)
000586r 2  CA               dex
000587r 2  CA               dex
000588r 2  B5 02            lda $02,x
00058Ar 2  15 03            ora $03,x
00058Cr 2  D0 03            bne *+5
00058Er 2  4C rr rr         jmp @target_8
000591r 2               
000591r 2               @target_7:
000591r 2               
000591r 2               ; src/prelude.fth:21:11 in `0=`
000591r 2               @OPCODE_151:   ; [c64_ir] PushLiteral(0)
000591r 2  E8               inx
000592r 2  E8               inx
000593r 2  A9 00            lda #0
000595r 2  95 00            sta $00,x
000597r 2  A9 00            lda #0
000599r 2  95 01            sta $01,x
00059Br 2               
00059Br 2               ; src/prelude.fth:21:13 in `0=`
00059Br 2               @OPCODE_152:   ; [c64_ir] JumpElse(9)
00059Br 2  4C rr rr         jmp @target_9
00059Er 2               
00059Er 2               @target_8:
00059Er 2               
00059Er 2               ; src/prelude.fth:21:18 in `0=`
00059Er 2               @OPCODE_154:   ; [c64_ir] PushLiteral(-1)
00059Er 2  E8               inx
00059Fr 2  E8               inx
0005A0r 2  A9 FF            lda #255
0005A2r 2  95 00            sta $00,x
0005A4r 2  A9 FF            lda #255
0005A6r 2  95 01            sta $01,x
0005A8r 2               
0005A8r 2               ; src/prelude.fth:21:21 in `0=`
0005A8r 2               @OPCODE_155:   ; [c64_ir] JumpTarget(8)
0005A8r 2               
0005A8r 2               @target_9:
0005A8r 2               
0005A8r 2               ; <inline>:0:0 in `main`
0005A8r 2               @OPCODE_157:   ; [c64_ir] AltPop
0005A8r 2  E8               inx
0005A9r 2  E8               inx
0005AAr 2  68               pla
0005ABr 2  95 00            sta $00,x
0005ADr 2  68               pla
0005AEr 2  95 01            sta $01,x
0005B0r 2               
0005B0r 2               ; <inline>:0:0 in `main`
0005B0r 2               @OPCODE_158:   ; [c64_ir] Drop
0005B0r 2  CA               dex
0005B1r 2  CA               dex
0005B2r 2               
0005B2r 2               ; <inline>:0:0 in `main`
0005B2r 2               @OPCODE_159:   ; [c64_ir] AltPop
0005B2r 2  E8               inx
0005B3r 2  E8               inx
0005B4r 2  68               pla
0005B5r 2  95 00            sta $00,x
0005B7r 2  68               pla
0005B8r 2  95 01            sta $01,x
0005BAr 2               
0005BAr 2               ; <inline>:0:0 in `main`
0005BAr 2               @OPCODE_160:   ; [c64_ir] Drop
0005BAr 2  CA               dex
0005BBr 2  CA               dex
0005BCr 2               
0005BCr 2               ; <inline>:0:0 in `main`
0005BCr 2               @OPCODE_161:   ; [c64_ir] PushLiteral(7777)
0005BCr 2  E8               inx
0005BDr 2  E8               inx
0005BEr 2  A9 61            lda #97
0005C0r 2  95 00            sta $00,x
0005C2r 2  A9 1E            lda #30
0005C4r 2  95 01            sta $01,x
0005C6r 2               
0005C6r 2               ; <inline>:0:0 in `main`
0005C6r 2               @OPCODE_162:   ; [c64_ir] AltPush
0005C6r 2  CA               dex
0005C7r 2  CA               dex
0005C8r 2  B5 03            lda $03,x
0005CAr 2  48               pha
0005CBr 2  B5 02            lda $02,x
0005CDr 2  48               pha
0005CEr 2               
0005CEr 2               ; src/prelude.fth:3:10 in `swap`
0005CEr 2               @OPCODE_163:   ; [c64_ir] AltPush
0005CEr 2  CA               dex
0005CFr 2  CA               dex
0005D0r 2  B5 03            lda $03,x
0005D2r 2  48               pha
0005D3r 2  B5 02            lda $02,x
0005D5r 2  48               pha
0005D6r 2               
0005D6r 2               ; src/prelude.fth:3:13 in `swap`
0005D6r 2               @OPCODE_164:   ; [c64_ir] TempStore
0005D6r 2  CA               dex
0005D7r 2  CA               dex
0005D8r 2  B5 03            lda $03,x
0005DAr 2  85 96            sta TEMP_PAX2
0005DCr 2  B5 02            lda $02,x
0005DEr 2  85 95            sta TEMP_PAX1
0005E0r 2               
0005E0r 2               ; src/prelude.fth:3:19 in `swap`
0005E0r 2               @OPCODE_165:   ; [c64_ir] AltPop
0005E0r 2  E8               inx
0005E1r 2  E8               inx
0005E2r 2  68               pla
0005E3r 2  95 00            sta $00,x
0005E5r 2  68               pla
0005E6r 2  95 01            sta $01,x
0005E8r 2               
0005E8r 2               ; src/prelude.fth:3:22 in `swap`
0005E8r 2               @OPCODE_166:   ; [c64_ir] TempLoad
0005E8r 2  E8               inx
0005E9r 2  E8               inx
0005EAr 2  A5 95            lda TEMP_PAX1
0005ECr 2  95 00            sta $00,x
0005EEr 2  A5 96            lda TEMP_PAX2
0005F0r 2  95 01            sta $01,x
0005F2r 2               
0005F2r 2               ; <inline>:0:0 in `main`
0005F2r 2               @OPCODE_167:   ; [c64_ir] AltPop
0005F2r 2  E8               inx
0005F3r 2  E8               inx
0005F4r 2  68               pla
0005F5r 2  95 00            sta $00,x
0005F7r 2  68               pla
0005F8r 2  95 01            sta $01,x
0005FAr 2               
0005FAr 2               ; <inline>:0:0 in `main`
0005FAr 2               @OPCODE_168:   ; [c64_ir] Drop
0005FAr 2  CA               dex
0005FBr 2  CA               dex
0005FCr 2               
0005FCr 2               ; src/prelude.fth:33:42 in `loopimpl`
0005FCr 2               @OPCODE_169:   ; [c64_ir] AltPush
0005FCr 2  CA               dex
0005FDr 2  CA               dex
0005FEr 2  B5 03            lda $03,x
000600r 2  48               pha
000601r 2  B5 02            lda $02,x
000603r 2  48               pha
000604r 2               
000604r 2               ; <inline>:0:0 in `main`
000604r 2               @OPCODE_170:   ; [c64_ir] AltPop
000604r 2  E8               inx
000605r 2  E8               inx
000606r 2  68               pla
000607r 2  95 00            sta $00,x
000609r 2  68               pla
00060Ar 2  95 01            sta $01,x
00060Cr 2               
00060Cr 2               ; <inline>:0:0 in `main`
00060Cr 2               @OPCODE_171:   ; [c64_ir] Drop
00060Cr 2  CA               dex
00060Dr 2  CA               dex
00060Er 2               
00060Er 2               ; snake.fth:61:9 in `draw-background`
00060Er 2               @OPCODE_172:   ; [c64_ir] LoopIf0(6)
00060Er 2  CA               dex
00060Fr 2  CA               dex
000610r 2  B5 02            lda $02,x
000612r 2  15 03            ora $03,x
000614r 2  D0 03            bne *+5
000616r 2  4C rr rr         jmp @target_6
000619r 2               
000619r 2               @target_10:
000619r 2               
000619r 2               ; snake.fth:61:9 in `draw-background`
000619r 2               @OPCODE_174:   ; [c64_ir] AltPop
000619r 2  E8               inx
00061Ar 2  E8               inx
00061Br 2  68               pla
00061Cr 2  95 00            sta $00,x
00061Er 2  68               pla
00061Fr 2  95 01            sta $01,x
000621r 2               
000621r 2               ; snake.fth:61:9 in `draw-background`
000621r 2               @OPCODE_175:   ; [c64_ir] Drop
000621r 2  CA               dex
000622r 2  CA               dex
000623r 2               
000623r 2               ; snake.fth:61:9 in `draw-background`
000623r 2               @OPCODE_176:   ; [c64_ir] AltPop
000623r 2  E8               inx
000624r 2  E8               inx
000625r 2  68               pla
000626r 2  95 00            sta $00,x
000628r 2  68               pla
000629r 2  95 01            sta $01,x
00062Br 2               
00062Br 2               ; snake.fth:61:9 in `draw-background`
00062Br 2               @OPCODE_177:   ; [c64_ir] Drop
00062Br 2  CA               dex
00062Cr 2  CA               dex
00062Dr 2               
00062Dr 2               ; snake.fth:62:9 in `draw-background`
00062Dr 2               @OPCODE_178:   ; [c64_ir] PushLiteral(40)
00062Dr 2  E8               inx
00062Er 2  E8               inx
00062Fr 2  A9 28            lda #40
000631r 2  95 00            sta $00,x
000633r 2  A9 00            lda #0
000635r 2  95 01            sta $01,x
000637r 2               
000637r 2               ; snake.fth:62:15 in `draw-background`
000637r 2               @OPCODE_179:   ; [c64_ir] Add
000637r 2                   ; 21
000637r 2  CA               dex
000638r 2  CA               dex
000639r 2  18               clc
00063Ar 2  B5 00            lda $00,x
00063Cr 2  75 02            adc $02,x
00063Er 2  95 00            sta $00,x
000640r 2  B5 01            lda $01,x
000642r 2  75 03            adc $03,x
000644r 2  95 01            sta $01,x
000646r 2               
000646r 2               ; <inline>:0:0 in `main`
000646r 2               @OPCODE_180:   ; [c64_ir] PushLiteral(7777)
000646r 2  E8               inx
000647r 2  E8               inx
000648r 2  A9 61            lda #97
00064Ar 2  95 00            sta $00,x
00064Cr 2  A9 1E            lda #30
00064Er 2  95 01            sta $01,x
000650r 2               
000650r 2               ; <inline>:0:0 in `main`
000650r 2               @OPCODE_181:   ; [c64_ir] AltPush
000650r 2  CA               dex
000651r 2  CA               dex
000652r 2  B5 03            lda $03,x
000654r 2  48               pha
000655r 2  B5 02            lda $02,x
000657r 2  48               pha
000658r 2               
000658r 2               ; src/prelude.fth:33:12 in `loopimpl`
000658r 2               @OPCODE_182:   ; [c64_ir] AltPop
000658r 2  E8               inx
000659r 2  E8               inx
00065Ar 2  68               pla
00065Br 2  95 00            sta $00,x
00065Dr 2  68               pla
00065Er 2  95 01            sta $01,x
000660r 2               
000660r 2               ; src/prelude.fth:33:15 in `loopimpl`
000660r 2               @OPCODE_183:   ; [c64_ir] AltPop
000660r 2  E8               inx
000661r 2  E8               inx
000662r 2  68               pla
000663r 2  95 00            sta $00,x
000665r 2  68               pla
000666r 2  95 01            sta $01,x
000668r 2               
000668r 2               ; src/prelude.fth:33:18 in `loopimpl`
000668r 2               @OPCODE_184:   ; [c64_ir] AltPop
000668r 2  E8               inx
000669r 2  E8               inx
00066Ar 2  68               pla
00066Br 2  95 00            sta $00,x
00066Dr 2  68               pla
00066Er 2  95 01            sta $01,x
000670r 2               
000670r 2               ; <inline>:0:0 in `main`
000670r 2               @OPCODE_185:   ; [c64_ir] PushLiteral(7777)
000670r 2  E8               inx
000671r 2  E8               inx
000672r 2  A9 61            lda #97
000674r 2  95 00            sta $00,x
000676r 2  A9 1E            lda #30
000678r 2  95 01            sta $01,x
00067Ar 2               
00067Ar 2               ; <inline>:0:0 in `main`
00067Ar 2               @OPCODE_186:   ; [c64_ir] AltPush
00067Ar 2  CA               dex
00067Br 2  CA               dex
00067Cr 2  B5 03            lda $03,x
00067Er 2  48               pha
00067Fr 2  B5 02            lda $02,x
000681r 2  48               pha
000682r 2               
000682r 2               ; src/prelude.fth:18:8 in `1+`
000682r 2               @OPCODE_187:   ; [c64_ir] PushLiteral(1)
000682r 2  E8               inx
000683r 2  E8               inx
000684r 2  A9 01            lda #1
000686r 2  95 00            sta $00,x
000688r 2  A9 00            lda #0
00068Ar 2  95 01            sta $01,x
00068Cr 2               
00068Cr 2               ; src/prelude.fth:18:10 in `1+`
00068Cr 2               @OPCODE_188:   ; [c64_ir] Add
00068Cr 2                   ; 21
00068Cr 2  CA               dex
00068Dr 2  CA               dex
00068Er 2  18               clc
00068Fr 2  B5 00            lda $00,x
000691r 2  75 02            adc $02,x
000693r 2  95 00            sta $00,x
000695r 2  B5 01            lda $01,x
000697r 2  75 03            adc $03,x
000699r 2  95 01            sta $01,x
00069Br 2               
00069Br 2               ; <inline>:0:0 in `main`
00069Br 2               @OPCODE_189:   ; [c64_ir] AltPop
00069Br 2  E8               inx
00069Cr 2  E8               inx
00069Dr 2  68               pla
00069Er 2  95 00            sta $00,x
0006A0r 2  68               pla
0006A1r 2  95 01            sta $01,x
0006A3r 2               
0006A3r 2               ; <inline>:0:0 in `main`
0006A3r 2               @OPCODE_190:   ; [c64_ir] Drop
0006A3r 2  CA               dex
0006A4r 2  CA               dex
0006A5r 2               
0006A5r 2               ; <inline>:0:0 in `main`
0006A5r 2               @OPCODE_191:   ; [c64_ir] PushLiteral(7777)
0006A5r 2  E8               inx
0006A6r 2  E8               inx
0006A7r 2  A9 61            lda #97
0006A9r 2  95 00            sta $00,x
0006ABr 2  A9 1E            lda #30
0006ADr 2  95 01            sta $01,x
0006AFr 2               
0006AFr 2               ; <inline>:0:0 in `main`
0006AFr 2               @OPCODE_192:   ; [c64_ir] AltPush
0006AFr 2  CA               dex
0006B0r 2  CA               dex
0006B1r 2  B5 03            lda $03,x
0006B3r 2  48               pha
0006B4r 2  B5 02            lda $02,x
0006B6r 2  48               pha
0006B7r 2               
0006B7r 2               ; <inline>:0:0 in `main`
0006B7r 2               @OPCODE_193:   ; [c64_ir] PushLiteral(7777)
0006B7r 2  E8               inx
0006B8r 2  E8               inx
0006B9r 2  A9 61            lda #97
0006BBr 2  95 00            sta $00,x
0006BDr 2  A9 1E            lda #30
0006BFr 2  95 01            sta $01,x
0006C1r 2               
0006C1r 2               ; <inline>:0:0 in `main`
0006C1r 2               @OPCODE_194:   ; [c64_ir] AltPush
0006C1r 2  CA               dex
0006C2r 2  CA               dex
0006C3r 2  B5 03            lda $03,x
0006C5r 2  48               pha
0006C6r 2  B5 02            lda $02,x
0006C8r 2  48               pha
0006C9r 2               
0006C9r 2               ; src/prelude.fth:4:10 in `over`
0006C9r 2               @OPCODE_195:   ; [c64_ir] AltPush
0006C9r 2  CA               dex
0006CAr 2  CA               dex
0006CBr 2  B5 03            lda $03,x
0006CDr 2  48               pha
0006CEr 2  B5 02            lda $02,x
0006D0r 2  48               pha
0006D1r 2               
0006D1r 2               ; src/prelude.fth:4:13 in `over`
0006D1r 2               @OPCODE_196:   ; [c64_ir] TempStore
0006D1r 2  CA               dex
0006D2r 2  CA               dex
0006D3r 2  B5 03            lda $03,x
0006D5r 2  85 96            sta TEMP_PAX2
0006D7r 2  B5 02            lda $02,x
0006D9r 2  85 95            sta TEMP_PAX1
0006DBr 2               
0006DBr 2               ; src/prelude.fth:4:19 in `over`
0006DBr 2               @OPCODE_197:   ; [c64_ir] TempLoad
0006DBr 2  E8               inx
0006DCr 2  E8               inx
0006DDr 2  A5 95            lda TEMP_PAX1
0006DFr 2  95 00            sta $00,x
0006E1r 2  A5 96            lda TEMP_PAX2
0006E3r 2  95 01            sta $01,x
0006E5r 2               
0006E5r 2               ; src/prelude.fth:4:25 in `over`
0006E5r 2               @OPCODE_198:   ; [c64_ir] AltPop
0006E5r 2  E8               inx
0006E6r 2  E8               inx
0006E7r 2  68               pla
0006E8r 2  95 00            sta $00,x
0006EAr 2  68               pla
0006EBr 2  95 01            sta $01,x
0006EDr 2               
0006EDr 2               ; src/prelude.fth:4:28 in `over`
0006EDr 2               @OPCODE_199:   ; [c64_ir] TempLoad
0006EDr 2  E8               inx
0006EEr 2  E8               inx
0006EFr 2  A5 95            lda TEMP_PAX1
0006F1r 2  95 00            sta $00,x
0006F3r 2  A5 96            lda TEMP_PAX2
0006F5r 2  95 01            sta $01,x
0006F7r 2               
0006F7r 2               ; <inline>:0:0 in `main`
0006F7r 2               @OPCODE_200:   ; [c64_ir] AltPop
0006F7r 2  E8               inx
0006F8r 2  E8               inx
0006F9r 2  68               pla
0006FAr 2  95 00            sta $00,x
0006FCr 2  68               pla
0006FDr 2  95 01            sta $01,x
0006FFr 2               
0006FFr 2               ; <inline>:0:0 in `main`
0006FFr 2               @OPCODE_201:   ; [c64_ir] Drop
0006FFr 2  CA               dex
000700r 2  CA               dex
000701r 2               
000701r 2               ; <inline>:0:0 in `main`
000701r 2               @OPCODE_202:   ; [c64_ir] PushLiteral(7777)
000701r 2  E8               inx
000702r 2  E8               inx
000703r 2  A9 61            lda #97
000705r 2  95 00            sta $00,x
000707r 2  A9 1E            lda #30
000709r 2  95 01            sta $01,x
00070Br 2               
00070Br 2               ; <inline>:0:0 in `main`
00070Br 2               @OPCODE_203:   ; [c64_ir] AltPush
00070Br 2  CA               dex
00070Cr 2  CA               dex
00070Dr 2  B5 03            lda $03,x
00070Fr 2  48               pha
000710r 2  B5 02            lda $02,x
000712r 2  48               pha
000713r 2               
000713r 2               ; src/prelude.fth:4:10 in `over`
000713r 2               @OPCODE_204:   ; [c64_ir] AltPush
000713r 2  CA               dex
000714r 2  CA               dex
000715r 2  B5 03            lda $03,x
000717r 2  48               pha
000718r 2  B5 02            lda $02,x
00071Ar 2  48               pha
00071Br 2               
00071Br 2               ; src/prelude.fth:4:13 in `over`
00071Br 2               @OPCODE_205:   ; [c64_ir] TempStore
00071Br 2  CA               dex
00071Cr 2  CA               dex
00071Dr 2  B5 03            lda $03,x
00071Fr 2  85 96            sta TEMP_PAX2
000721r 2  B5 02            lda $02,x
000723r 2  85 95            sta TEMP_PAX1
000725r 2               
000725r 2               ; src/prelude.fth:4:19 in `over`
000725r 2               @OPCODE_206:   ; [c64_ir] TempLoad
000725r 2  E8               inx
000726r 2  E8               inx
000727r 2  A5 95            lda TEMP_PAX1
000729r 2  95 00            sta $00,x
00072Br 2  A5 96            lda TEMP_PAX2
00072Dr 2  95 01            sta $01,x
00072Fr 2               
00072Fr 2               ; src/prelude.fth:4:25 in `over`
00072Fr 2               @OPCODE_207:   ; [c64_ir] AltPop
00072Fr 2  E8               inx
000730r 2  E8               inx
000731r 2  68               pla
000732r 2  95 00            sta $00,x
000734r 2  68               pla
000735r 2  95 01            sta $01,x
000737r 2               
000737r 2               ; src/prelude.fth:4:28 in `over`
000737r 2               @OPCODE_208:   ; [c64_ir] TempLoad
000737r 2  E8               inx
000738r 2  E8               inx
000739r 2  A5 95            lda TEMP_PAX1
00073Br 2  95 00            sta $00,x
00073Dr 2  A5 96            lda TEMP_PAX2
00073Fr 2  95 01            sta $01,x
000741r 2               
000741r 2               ; <inline>:0:0 in `main`
000741r 2               @OPCODE_209:   ; [c64_ir] AltPop
000741r 2  E8               inx
000742r 2  E8               inx
000743r 2  68               pla
000744r 2  95 00            sta $00,x
000746r 2  68               pla
000747r 2  95 01            sta $01,x
000749r 2               
000749r 2               ; <inline>:0:0 in `main`
000749r 2               @OPCODE_210:   ; [c64_ir] Drop
000749r 2  CA               dex
00074Ar 2  CA               dex
00074Br 2               
00074Br 2               ; <inline>:0:0 in `main`
00074Br 2               @OPCODE_211:   ; [c64_ir] AltPop
00074Br 2  E8               inx
00074Cr 2  E8               inx
00074Dr 2  68               pla
00074Er 2  95 00            sta $00,x
000750r 2  68               pla
000751r 2  95 01            sta $01,x
000753r 2               
000753r 2               ; <inline>:0:0 in `main`
000753r 2               @OPCODE_212:   ; [c64_ir] Drop
000753r 2  CA               dex
000754r 2  CA               dex
000755r 2               
000755r 2               ; src/prelude.fth:33:29 in `loopimpl`
000755r 2               @OPCODE_213:   ; [c64_ir] AltPush
000755r 2  CA               dex
000756r 2  CA               dex
000757r 2  B5 03            lda $03,x
000759r 2  48               pha
00075Ar 2  B5 02            lda $02,x
00075Cr 2  48               pha
00075Dr 2               
00075Dr 2               ; src/prelude.fth:33:32 in `loopimpl`
00075Dr 2               @OPCODE_214:   ; [c64_ir] AltPush
00075Dr 2  CA               dex
00075Er 2  CA               dex
00075Fr 2  B5 03            lda $03,x
000761r 2  48               pha
000762r 2  B5 02            lda $02,x
000764r 2  48               pha
000765r 2               
000765r 2               ; <inline>:0:0 in `main`
000765r 2               @OPCODE_215:   ; [c64_ir] PushLiteral(7777)
000765r 2  E8               inx
000766r 2  E8               inx
000767r 2  A9 61            lda #97
000769r 2  95 00            sta $00,x
00076Br 2  A9 1E            lda #30
00076Dr 2  95 01            sta $01,x
00076Fr 2               
00076Fr 2               ; <inline>:0:0 in `main`
00076Fr 2               @OPCODE_216:   ; [c64_ir] AltPush
00076Fr 2  CA               dex
000770r 2  CA               dex
000771r 2  B5 03            lda $03,x
000773r 2  48               pha
000774r 2  B5 02            lda $02,x
000776r 2  48               pha
000777r 2               
000777r 2               ; <inline>:0:0 in `main`
000777r 2               @OPCODE_217:   ; [c64_ir] PushLiteral(7777)
000777r 2  E8               inx
000778r 2  E8               inx
000779r 2  A9 61            lda #97
00077Br 2  95 00            sta $00,x
00077Dr 2  A9 1E            lda #30
00077Fr 2  95 01            sta $01,x
000781r 2               
000781r 2               ; <inline>:0:0 in `main`
000781r 2               @OPCODE_218:   ; [c64_ir] AltPush
000781r 2  CA               dex
000782r 2  CA               dex
000783r 2  B5 03            lda $03,x
000785r 2  48               pha
000786r 2  B5 02            lda $02,x
000788r 2  48               pha
000789r 2               
000789r 2               ; <inline>:0:0 in `main`
000789r 2               @OPCODE_219:   ; [c64_ir] PushLiteral(7777)
000789r 2  E8               inx
00078Ar 2  E8               inx
00078Br 2  A9 61            lda #97
00078Dr 2  95 00            sta $00,x
00078Fr 2  A9 1E            lda #30
000791r 2  95 01            sta $01,x
000793r 2               
000793r 2               ; <inline>:0:0 in `main`
000793r 2               @OPCODE_220:   ; [c64_ir] AltPush
000793r 2  CA               dex
000794r 2  CA               dex
000795r 2  B5 03            lda $03,x
000797r 2  48               pha
000798r 2  B5 02            lda $02,x
00079Ar 2  48               pha
00079Br 2               
00079Br 2               ; <inline>:0:0 in `main`
00079Br 2               @OPCODE_221:   ; [c64_ir] PushLiteral(7777)
00079Br 2  E8               inx
00079Cr 2  E8               inx
00079Dr 2  A9 61            lda #97
00079Fr 2  95 00            sta $00,x
0007A1r 2  A9 1E            lda #30
0007A3r 2  95 01            sta $01,x
0007A5r 2               
0007A5r 2               ; <inline>:0:0 in `main`
0007A5r 2               @OPCODE_222:   ; [c64_ir] AltPush
0007A5r 2  CA               dex
0007A6r 2  CA               dex
0007A7r 2  B5 03            lda $03,x
0007A9r 2  48               pha
0007AAr 2  B5 02            lda $02,x
0007ACr 2  48               pha
0007ADr 2               
0007ADr 2               ; src/prelude.fth:14:12 in `invert`
0007ADr 2               @OPCODE_223:   ; [c64_ir] PushLiteral(-1)
0007ADr 2  E8               inx
0007AEr 2  E8               inx
0007AFr 2  A9 FF            lda #255
0007B1r 2  95 00            sta $00,x
0007B3r 2  A9 FF            lda #255
0007B5r 2  95 01            sta $01,x
0007B7r 2               
0007B7r 2               ; src/prelude.fth:14:15 in `invert`
0007B7r 2               @OPCODE_224:   ; [c64_ir] Nand
0007B7r 2                   ; 26
0007B7r 2  CA               dex
0007B8r 2  CA               dex
0007B9r 2  B5 00            lda $00,x
0007BBr 2  35 02            and $02,x
0007BDr 2  49 FF            eor #$ff
0007BFr 2  95 00            sta $00,x
0007C1r 2  B5 01            lda $01,x
0007C3r 2  35 03            and $03,x
0007C5r 2  49 FF            eor #$ff
0007C7r 2  95 01            sta $01,x
0007C9r 2               
0007C9r 2               ; <inline>:0:0 in `main`
0007C9r 2               @OPCODE_225:   ; [c64_ir] AltPop
0007C9r 2  E8               inx
0007CAr 2  E8               inx
0007CBr 2  68               pla
0007CCr 2  95 00            sta $00,x
0007CEr 2  68               pla
0007CFr 2  95 01            sta $01,x
0007D1r 2               
0007D1r 2               ; <inline>:0:0 in `main`
0007D1r 2               @OPCODE_226:   ; [c64_ir] Drop
0007D1r 2  CA               dex
0007D2r 2  CA               dex
0007D3r 2               
0007D3r 2               ; src/prelude.fth:15:19 in `negate`
0007D3r 2               @OPCODE_227:   ; [c64_ir] PushLiteral(1)
0007D3r 2  E8               inx
0007D4r 2  E8               inx
0007D5r 2  A9 01            lda #1
0007D7r 2  95 00            sta $00,x
0007D9r 2  A9 00            lda #0
0007DBr 2  95 01            sta $01,x
0007DDr 2               
0007DDr 2               ; src/prelude.fth:15:21 in `negate`
0007DDr 2               @OPCODE_228:   ; [c64_ir] Add
0007DDr 2                   ; 21
0007DDr 2  CA               dex
0007DEr 2  CA               dex
0007DFr 2  18               clc
0007E0r 2  B5 00            lda $00,x
0007E2r 2  75 02            adc $02,x
0007E4r 2  95 00            sta $00,x
0007E6r 2  B5 01            lda $01,x
0007E8r 2  75 03            adc $03,x
0007EAr 2  95 01            sta $01,x
0007ECr 2               
0007ECr 2               ; <inline>:0:0 in `main`
0007ECr 2               @OPCODE_229:   ; [c64_ir] AltPop
0007ECr 2  E8               inx
0007EDr 2  E8               inx
0007EEr 2  68               pla
0007EFr 2  95 00            sta $00,x
0007F1r 2  68               pla
0007F2r 2  95 01            sta $01,x
0007F4r 2               
0007F4r 2               ; <inline>:0:0 in `main`
0007F4r 2               @OPCODE_230:   ; [c64_ir] Drop
0007F4r 2  CA               dex
0007F5r 2  CA               dex
0007F6r 2               
0007F6r 2               ; src/prelude.fth:16:19 in `-`
0007F6r 2               @OPCODE_231:   ; [c64_ir] Add
0007F6r 2                   ; 21
0007F6r 2  CA               dex
0007F7r 2  CA               dex
0007F8r 2  18               clc
0007F9r 2  B5 00            lda $00,x
0007FBr 2  75 02            adc $02,x
0007FDr 2  95 00            sta $00,x
0007FFr 2  B5 01            lda $01,x
000801r 2  75 03            adc $03,x
000803r 2  95 01            sta $01,x
000805r 2               
000805r 2               ; <inline>:0:0 in `main`
000805r 2               @OPCODE_232:   ; [c64_ir] AltPop
000805r 2  E8               inx
000806r 2  E8               inx
000807r 2  68               pla
000808r 2  95 00            sta $00,x
00080Ar 2  68               pla
00080Br 2  95 01            sta $01,x
00080Dr 2               
00080Dr 2               ; <inline>:0:0 in `main`
00080Dr 2               @OPCODE_233:   ; [c64_ir] Drop
00080Dr 2  CA               dex
00080Er 2  CA               dex
00080Fr 2               
00080Fr 2               ; <inline>:0:0 in `main`
00080Fr 2               @OPCODE_234:   ; [c64_ir] PushLiteral(7777)
00080Fr 2  E8               inx
000810r 2  E8               inx
000811r 2  A9 61            lda #97
000813r 2  95 00            sta $00,x
000815r 2  A9 1E            lda #30
000817r 2  95 01            sta $01,x
000819r 2               
000819r 2               ; <inline>:0:0 in `main`
000819r 2               @OPCODE_235:   ; [c64_ir] AltPush
000819r 2  CA               dex
00081Ar 2  CA               dex
00081Br 2  B5 03            lda $03,x
00081Dr 2  48               pha
00081Er 2  B5 02            lda $02,x
000820r 2  48               pha
000821r 2               
000821r 2               ; src/prelude.fth:21:8 in `0=`
000821r 2               @OPCODE_236:   ; [c64_ir] JumpIf0(12)
000821r 2  CA               dex
000822r 2  CA               dex
000823r 2  B5 02            lda $02,x
000825r 2  15 03            ora $03,x
000827r 2  D0 03            bne *+5
000829r 2  4C rr rr         jmp @target_12
00082Cr 2               
00082Cr 2               @target_11:
00082Cr 2               
00082Cr 2               ; src/prelude.fth:21:11 in `0=`
00082Cr 2               @OPCODE_238:   ; [c64_ir] PushLiteral(0)
00082Cr 2  E8               inx
00082Dr 2  E8               inx
00082Er 2  A9 00            lda #0
000830r 2  95 00            sta $00,x
000832r 2  A9 00            lda #0
000834r 2  95 01            sta $01,x
000836r 2               
000836r 2               ; src/prelude.fth:21:13 in `0=`
000836r 2               @OPCODE_239:   ; [c64_ir] JumpElse(13)
000836r 2  4C rr rr         jmp @target_13
000839r 2               
000839r 2               @target_12:
000839r 2               
000839r 2               ; src/prelude.fth:21:18 in `0=`
000839r 2               @OPCODE_241:   ; [c64_ir] PushLiteral(-1)
000839r 2  E8               inx
00083Ar 2  E8               inx
00083Br 2  A9 FF            lda #255
00083Dr 2  95 00            sta $00,x
00083Fr 2  A9 FF            lda #255
000841r 2  95 01            sta $01,x
000843r 2               
000843r 2               ; src/prelude.fth:21:21 in `0=`
000843r 2               @OPCODE_242:   ; [c64_ir] JumpTarget(12)
000843r 2               
000843r 2               @target_13:
000843r 2               
000843r 2               ; <inline>:0:0 in `main`
000843r 2               @OPCODE_244:   ; [c64_ir] AltPop
000843r 2  E8               inx
000844r 2  E8               inx
000845r 2  68               pla
000846r 2  95 00            sta $00,x
000848r 2  68               pla
000849r 2  95 01            sta $01,x
00084Br 2               
00084Br 2               ; <inline>:0:0 in `main`
00084Br 2               @OPCODE_245:   ; [c64_ir] Drop
00084Br 2  CA               dex
00084Cr 2  CA               dex
00084Dr 2               
00084Dr 2               ; <inline>:0:0 in `main`
00084Dr 2               @OPCODE_246:   ; [c64_ir] AltPop
00084Dr 2  E8               inx
00084Er 2  E8               inx
00084Fr 2  68               pla
000850r 2  95 00            sta $00,x
000852r 2  68               pla
000853r 2  95 01            sta $01,x
000855r 2               
000855r 2               ; <inline>:0:0 in `main`
000855r 2               @OPCODE_247:   ; [c64_ir] Drop
000855r 2  CA               dex
000856r 2  CA               dex
000857r 2               
000857r 2               ; <inline>:0:0 in `main`
000857r 2               @OPCODE_248:   ; [c64_ir] PushLiteral(7777)
000857r 2  E8               inx
000858r 2  E8               inx
000859r 2  A9 61            lda #97
00085Br 2  95 00            sta $00,x
00085Dr 2  A9 1E            lda #30
00085Fr 2  95 01            sta $01,x
000861r 2               
000861r 2               ; <inline>:0:0 in `main`
000861r 2               @OPCODE_249:   ; [c64_ir] AltPush
000861r 2  CA               dex
000862r 2  CA               dex
000863r 2  B5 03            lda $03,x
000865r 2  48               pha
000866r 2  B5 02            lda $02,x
000868r 2  48               pha
000869r 2               
000869r 2               ; src/prelude.fth:3:10 in `swap`
000869r 2               @OPCODE_250:   ; [c64_ir] AltPush
000869r 2  CA               dex
00086Ar 2  CA               dex
00086Br 2  B5 03            lda $03,x
00086Dr 2  48               pha
00086Er 2  B5 02            lda $02,x
000870r 2  48               pha
000871r 2               
000871r 2               ; src/prelude.fth:3:13 in `swap`
000871r 2               @OPCODE_251:   ; [c64_ir] TempStore
000871r 2  CA               dex
000872r 2  CA               dex
000873r 2  B5 03            lda $03,x
000875r 2  85 96            sta TEMP_PAX2
000877r 2  B5 02            lda $02,x
000879r 2  85 95            sta TEMP_PAX1
00087Br 2               
00087Br 2               ; src/prelude.fth:3:19 in `swap`
00087Br 2               @OPCODE_252:   ; [c64_ir] AltPop
00087Br 2  E8               inx
00087Cr 2  E8               inx
00087Dr 2  68               pla
00087Er 2  95 00            sta $00,x
000880r 2  68               pla
000881r 2  95 01            sta $01,x
000883r 2               
000883r 2               ; src/prelude.fth:3:22 in `swap`
000883r 2               @OPCODE_253:   ; [c64_ir] TempLoad
000883r 2  E8               inx
000884r 2  E8               inx
000885r 2  A5 95            lda TEMP_PAX1
000887r 2  95 00            sta $00,x
000889r 2  A5 96            lda TEMP_PAX2
00088Br 2  95 01            sta $01,x
00088Dr 2               
00088Dr 2               ; <inline>:0:0 in `main`
00088Dr 2               @OPCODE_254:   ; [c64_ir] AltPop
00088Dr 2  E8               inx
00088Er 2  E8               inx
00088Fr 2  68               pla
000890r 2  95 00            sta $00,x
000892r 2  68               pla
000893r 2  95 01            sta $01,x
000895r 2               
000895r 2               ; <inline>:0:0 in `main`
000895r 2               @OPCODE_255:   ; [c64_ir] Drop
000895r 2  CA               dex
000896r 2  CA               dex
000897r 2               
000897r 2               ; src/prelude.fth:33:42 in `loopimpl`
000897r 2               @OPCODE_256:   ; [c64_ir] AltPush
000897r 2  CA               dex
000898r 2  CA               dex
000899r 2  B5 03            lda $03,x
00089Br 2  48               pha
00089Cr 2  B5 02            lda $02,x
00089Er 2  48               pha
00089Fr 2               
00089Fr 2               ; <inline>:0:0 in `main`
00089Fr 2               @OPCODE_257:   ; [c64_ir] AltPop
00089Fr 2  E8               inx
0008A0r 2  E8               inx
0008A1r 2  68               pla
0008A2r 2  95 00            sta $00,x
0008A4r 2  68               pla
0008A5r 2  95 01            sta $01,x
0008A7r 2               
0008A7r 2               ; <inline>:0:0 in `main`
0008A7r 2               @OPCODE_258:   ; [c64_ir] Drop
0008A7r 2  CA               dex
0008A8r 2  CA               dex
0008A9r 2               
0008A9r 2               ; snake.fth:63:4 in `draw-background`
0008A9r 2               @OPCODE_259:   ; [c64_ir] LoopIf0(5)
0008A9r 2  CA               dex
0008AAr 2  CA               dex
0008ABr 2  B5 02            lda $02,x
0008ADr 2  15 03            ora $03,x
0008AFr 2  D0 03            bne *+5
0008B1r 2  4C rr rr         jmp @target_5
0008B4r 2               
0008B4r 2               @target_14:
0008B4r 2               
0008B4r 2               ; snake.fth:63:4 in `draw-background`
0008B4r 2               @OPCODE_261:   ; [c64_ir] AltPop
0008B4r 2  E8               inx
0008B5r 2  E8               inx
0008B6r 2  68               pla
0008B7r 2  95 00            sta $00,x
0008B9r 2  68               pla
0008BAr 2  95 01            sta $01,x
0008BCr 2               
0008BCr 2               ; snake.fth:63:4 in `draw-background`
0008BCr 2               @OPCODE_262:   ; [c64_ir] Drop
0008BCr 2  CA               dex
0008BDr 2  CA               dex
0008BEr 2               
0008BEr 2               ; snake.fth:63:4 in `draw-background`
0008BEr 2               @OPCODE_263:   ; [c64_ir] AltPop
0008BEr 2  E8               inx
0008BFr 2  E8               inx
0008C0r 2  68               pla
0008C1r 2  95 00            sta $00,x
0008C3r 2  68               pla
0008C4r 2  95 01            sta $01,x
0008C6r 2               
0008C6r 2               ; snake.fth:63:4 in `draw-background`
0008C6r 2               @OPCODE_264:   ; [c64_ir] Drop
0008C6r 2  CA               dex
0008C7r 2  CA               dex
0008C8r 2               
0008C8r 2               ; snake.fth:64:4 in `draw-background`
0008C8r 2               @OPCODE_265:   ; [c64_ir] Drop
0008C8r 2  CA               dex
0008C9r 2  CA               dex
0008CAr 2               
0008CAr 2               ; <inline>:0:0 in `main`
0008CAr 2               @OPCODE_266:   ; [c64_ir] AltPop
0008CAr 2  E8               inx
0008CBr 2  E8               inx
0008CCr 2  68               pla
0008CDr 2  95 00            sta $00,x
0008CFr 2  68               pla
0008D0r 2  95 01            sta $01,x
0008D2r 2               
0008D2r 2               ; <inline>:0:0 in `main`
0008D2r 2               @OPCODE_267:   ; [c64_ir] Drop
0008D2r 2  CA               dex
0008D3r 2  CA               dex
0008D4r 2               
0008D4r 2               ; <inline>:0:0 in `main`
0008D4r 2               @OPCODE_268:   ; [c64_ir] PushLiteral(7777)
0008D4r 2  E8               inx
0008D5r 2  E8               inx
0008D6r 2  A9 61            lda #97
0008D8r 2  95 00            sta $00,x
0008DAr 2  A9 1E            lda #30
0008DCr 2  95 01            sta $01,x
0008DEr 2               
0008DEr 2               ; <inline>:0:0 in `main`
0008DEr 2               @OPCODE_269:   ; [c64_ir] AltPush
0008DEr 2  CA               dex
0008DFr 2  CA               dex
0008E0r 2  B5 03            lda $03,x
0008E2r 2  48               pha
0008E3r 2  B5 02            lda $02,x
0008E5r 2  48               pha
0008E6r 2               
0008E6r 2               ; snake.fth:69:5 in `draw-walls`
0008E6r 2               @OPCODE_270:   ; [c64_ir] PushLiteral(40)
0008E6r 2  E8               inx
0008E7r 2  E8               inx
0008E8r 2  A9 28            lda #40
0008EAr 2  95 00            sta $00,x
0008ECr 2  A9 00            lda #0
0008EEr 2  95 01            sta $01,x
0008F0r 2               
0008F0r 2               ; snake.fth:69:11 in `draw-walls`
0008F0r 2               @OPCODE_271:   ; [c64_ir] PushLiteral(25)
0008F0r 2  E8               inx
0008F1r 2  E8               inx
0008F2r 2  A9 19            lda #25
0008F4r 2  95 00            sta $00,x
0008F6r 2  A9 00            lda #0
0008F8r 2  95 01            sta $01,x
0008FAr 2               
0008FAr 2               ; snake.fth:69:18 in `draw-walls`
0008FAr 2               @OPCODE_272:   ; [c64_ir] PushLiteral(1)
0008FAr 2  E8               inx
0008FBr 2  E8               inx
0008FCr 2  A9 01            lda #1
0008FEr 2  95 00            sta $00,x
000900r 2  A9 00            lda #0
000902r 2  95 01            sta $01,x
000904r 2               
000904r 2               ; <inline>:0:0 in `main`
000904r 2               @OPCODE_273:   ; [c64_ir] PushLiteral(7777)
000904r 2  E8               inx
000905r 2  E8               inx
000906r 2  A9 61            lda #97
000908r 2  95 00            sta $00,x
00090Ar 2  A9 1E            lda #30
00090Cr 2  95 01            sta $01,x
00090Er 2               
00090Er 2               ; <inline>:0:0 in `main`
00090Er 2               @OPCODE_274:   ; [c64_ir] AltPush
00090Er 2  CA               dex
00090Fr 2  CA               dex
000910r 2  B5 03            lda $03,x
000912r 2  48               pha
000913r 2  B5 02            lda $02,x
000915r 2  48               pha
000916r 2               
000916r 2               ; <inline>:0:0 in `main`
000916r 2               @OPCODE_275:   ; [c64_ir] PushLiteral(7777)
000916r 2  E8               inx
000917r 2  E8               inx
000918r 2  A9 61            lda #97
00091Ar 2  95 00            sta $00,x
00091Cr 2  A9 1E            lda #30
00091Er 2  95 01            sta $01,x
000920r 2               
000920r 2               ; <inline>:0:0 in `main`
000920r 2               @OPCODE_276:   ; [c64_ir] AltPush
000920r 2  CA               dex
000921r 2  CA               dex
000922r 2  B5 03            lda $03,x
000924r 2  48               pha
000925r 2  B5 02            lda $02,x
000927r 2  48               pha
000928r 2               
000928r 2               ; <inline>:0:0 in `main`
000928r 2               @OPCODE_277:   ; [c64_ir] PushLiteral(7777)
000928r 2  E8               inx
000929r 2  E8               inx
00092Ar 2  A9 61            lda #97
00092Cr 2  95 00            sta $00,x
00092Er 2  A9 1E            lda #30
000930r 2  95 01            sta $01,x
000932r 2               
000932r 2               ; <inline>:0:0 in `main`
000932r 2               @OPCODE_278:   ; [c64_ir] AltPush
000932r 2  CA               dex
000933r 2  CA               dex
000934r 2  B5 03            lda $03,x
000936r 2  48               pha
000937r 2  B5 02            lda $02,x
000939r 2  48               pha
00093Ar 2               
00093Ar 2               ; src/prelude.fth:14:12 in `invert`
00093Ar 2               @OPCODE_279:   ; [c64_ir] PushLiteral(-1)
00093Ar 2  E8               inx
00093Br 2  E8               inx
00093Cr 2  A9 FF            lda #255
00093Er 2  95 00            sta $00,x
000940r 2  A9 FF            lda #255
000942r 2  95 01            sta $01,x
000944r 2               
000944r 2               ; src/prelude.fth:14:15 in `invert`
000944r 2               @OPCODE_280:   ; [c64_ir] Nand
000944r 2                   ; 26
000944r 2  CA               dex
000945r 2  CA               dex
000946r 2  B5 00            lda $00,x
000948r 2  35 02            and $02,x
00094Ar 2  49 FF            eor #$ff
00094Cr 2  95 00            sta $00,x
00094Er 2  B5 01            lda $01,x
000950r 2  35 03            and $03,x
000952r 2  49 FF            eor #$ff
000954r 2  95 01            sta $01,x
000956r 2               
000956r 2               ; <inline>:0:0 in `main`
000956r 2               @OPCODE_281:   ; [c64_ir] AltPop
000956r 2  E8               inx
000957r 2  E8               inx
000958r 2  68               pla
000959r 2  95 00            sta $00,x
00095Br 2  68               pla
00095Cr 2  95 01            sta $01,x
00095Er 2               
00095Er 2               ; <inline>:0:0 in `main`
00095Er 2               @OPCODE_282:   ; [c64_ir] Drop
00095Er 2  CA               dex
00095Fr 2  CA               dex
000960r 2               
000960r 2               ; src/prelude.fth:15:19 in `negate`
000960r 2               @OPCODE_283:   ; [c64_ir] PushLiteral(1)
000960r 2  E8               inx
000961r 2  E8               inx
000962r 2  A9 01            lda #1
000964r 2  95 00            sta $00,x
000966r 2  A9 00            lda #0
000968r 2  95 01            sta $01,x
00096Ar 2               
00096Ar 2               ; src/prelude.fth:15:21 in `negate`
00096Ar 2               @OPCODE_284:   ; [c64_ir] Add
00096Ar 2                   ; 21
00096Ar 2  CA               dex
00096Br 2  CA               dex
00096Cr 2  18               clc
00096Dr 2  B5 00            lda $00,x
00096Fr 2  75 02            adc $02,x
000971r 2  95 00            sta $00,x
000973r 2  B5 01            lda $01,x
000975r 2  75 03            adc $03,x
000977r 2  95 01            sta $01,x
000979r 2               
000979r 2               ; <inline>:0:0 in `main`
000979r 2               @OPCODE_285:   ; [c64_ir] AltPop
000979r 2  E8               inx
00097Ar 2  E8               inx
00097Br 2  68               pla
00097Cr 2  95 00            sta $00,x
00097Er 2  68               pla
00097Fr 2  95 01            sta $01,x
000981r 2               
000981r 2               ; <inline>:0:0 in `main`
000981r 2               @OPCODE_286:   ; [c64_ir] Drop
000981r 2  CA               dex
000982r 2  CA               dex
000983r 2               
000983r 2               ; src/prelude.fth:16:19 in `-`
000983r 2               @OPCODE_287:   ; [c64_ir] Add
000983r 2                   ; 21
000983r 2  CA               dex
000984r 2  CA               dex
000985r 2  18               clc
000986r 2  B5 00            lda $00,x
000988r 2  75 02            adc $02,x
00098Ar 2  95 00            sta $00,x
00098Cr 2  B5 01            lda $01,x
00098Er 2  75 03            adc $03,x
000990r 2  95 01            sta $01,x
000992r 2               
000992r 2               ; <inline>:0:0 in `main`
000992r 2               @OPCODE_288:   ; [c64_ir] AltPop
000992r 2  E8               inx
000993r 2  E8               inx
000994r 2  68               pla
000995r 2  95 00            sta $00,x
000997r 2  68               pla
000998r 2  95 01            sta $01,x
00099Ar 2               
00099Ar 2               ; <inline>:0:0 in `main`
00099Ar 2               @OPCODE_289:   ; [c64_ir] Drop
00099Ar 2  CA               dex
00099Br 2  CA               dex
00099Cr 2               
00099Cr 2               ; <inline>:0:0 in `main`
00099Cr 2               @OPCODE_290:   ; [c64_ir] PushLiteral(7777)
00099Cr 2  E8               inx
00099Dr 2  E8               inx
00099Er 2  A9 61            lda #97
0009A0r 2  95 00            sta $00,x
0009A2r 2  A9 1E            lda #30
0009A4r 2  95 01            sta $01,x
0009A6r 2               
0009A6r 2               ; <inline>:0:0 in `main`
0009A6r 2               @OPCODE_291:   ; [c64_ir] AltPush
0009A6r 2  CA               dex
0009A7r 2  CA               dex
0009A8r 2  B5 03            lda $03,x
0009AAr 2  48               pha
0009ABr 2  B5 02            lda $02,x
0009ADr 2  48               pha
0009AEr 2               
0009AEr 2               ; src/prelude.fth:44:5 in `*`
0009AEr 2               @OPCODE_292:   ; [c64_ir] AltPush
0009AEr 2  CA               dex
0009AFr 2  CA               dex
0009B0r 2  B5 03            lda $03,x
0009B2r 2  48               pha
0009B3r 2  B5 02            lda $02,x
0009B5r 2  48               pha
0009B6r 2               
0009B6r 2               ; src/prelude.fth:44:8 in `*`
0009B6r 2               @OPCODE_293:   ; [c64_ir] PushLiteral(0)
0009B6r 2  E8               inx
0009B7r 2  E8               inx
0009B8r 2  A9 00            lda #0
0009BAr 2  95 00            sta $00,x
0009BCr 2  A9 00            lda #0
0009BEr 2  95 01            sta $01,x
0009C0r 2               
0009C0r 2               ; src/prelude.fth:44:10 in `*`
0009C0r 2               @OPCODE_294:   ; [c64_ir] AltPop
0009C0r 2  E8               inx
0009C1r 2  E8               inx
0009C2r 2  68               pla
0009C3r 2  95 00            sta $00,x
0009C5r 2  68               pla
0009C6r 2  95 01            sta $01,x
0009C8r 2               
0009C8r 2               ; src/prelude.fth:44:13 in `*`
0009C8r 2               @OPCODE_295:   ; [c64_ir] PushLiteral(0)
0009C8r 2  E8               inx
0009C9r 2  E8               inx
0009CAr 2  A9 00            lda #0
0009CCr 2  95 00            sta $00,x
0009CEr 2  A9 00            lda #0
0009D0r 2  95 01            sta $01,x
0009D2r 2               
0009D2r 2               ; src/prelude.fth:44:15 in `*`
0009D2r 2               @OPCODE_296:   ; [c64_ir] AltPush
0009D2r 2  CA               dex
0009D3r 2  CA               dex
0009D4r 2  B5 03            lda $03,x
0009D6r 2  48               pha
0009D7r 2  B5 02            lda $02,x
0009D9r 2  48               pha
0009DAr 2               
0009DAr 2               ; src/prelude.fth:44:15 in `*`
0009DAr 2               @OPCODE_297:   ; [c64_ir] AltPush
0009DAr 2  CA               dex
0009DBr 2  CA               dex
0009DCr 2  B5 03            lda $03,x
0009DEr 2  48               pha
0009DFr 2  B5 02            lda $02,x
0009E1r 2  48               pha
0009E2r 2               
0009E2r 2               ; src/prelude.fth:44:15 in `*`
0009E2r 2               @OPCODE_298:   ; [c64_ir] LoopTarget(14)
0009E2r 2               
0009E2r 2               @target_15:
0009E2r 2               
0009E2r 2               ; <inline>:0:0 in `main`
0009E2r 2               @OPCODE_300:   ; [c64_ir] PushLiteral(7777)
0009E2r 2  E8               inx
0009E3r 2  E8               inx
0009E4r 2  A9 61            lda #97
0009E6r 2  95 00            sta $00,x
0009E8r 2  A9 1E            lda #30
0009EAr 2  95 01            sta $01,x
0009ECr 2               
0009ECr 2               ; <inline>:0:0 in `main`
0009ECr 2               @OPCODE_301:   ; [c64_ir] AltPush
0009ECr 2  CA               dex
0009EDr 2  CA               dex
0009EEr 2  B5 03            lda $03,x
0009F0r 2  48               pha
0009F1r 2  B5 02            lda $02,x
0009F3r 2  48               pha
0009F4r 2               
0009F4r 2               ; src/prelude.fth:4:10 in `over`
0009F4r 2               @OPCODE_302:   ; [c64_ir] AltPush
0009F4r 2  CA               dex
0009F5r 2  CA               dex
0009F6r 2  B5 03            lda $03,x
0009F8r 2  48               pha
0009F9r 2  B5 02            lda $02,x
0009FBr 2  48               pha
0009FCr 2               
0009FCr 2               ; src/prelude.fth:4:13 in `over`
0009FCr 2               @OPCODE_303:   ; [c64_ir] TempStore
0009FCr 2  CA               dex
0009FDr 2  CA               dex
0009FEr 2  B5 03            lda $03,x
000A00r 2  85 96            sta TEMP_PAX2
000A02r 2  B5 02            lda $02,x
000A04r 2  85 95            sta TEMP_PAX1
000A06r 2               
000A06r 2               ; src/prelude.fth:4:19 in `over`
000A06r 2               @OPCODE_304:   ; [c64_ir] TempLoad
000A06r 2  E8               inx
000A07r 2  E8               inx
000A08r 2  A5 95            lda TEMP_PAX1
000A0Ar 2  95 00            sta $00,x
000A0Cr 2  A5 96            lda TEMP_PAX2
000A0Er 2  95 01            sta $01,x
000A10r 2               
000A10r 2               ; src/prelude.fth:4:25 in `over`
000A10r 2               @OPCODE_305:   ; [c64_ir] AltPop
000A10r 2  E8               inx
000A11r 2  E8               inx
000A12r 2  68               pla
000A13r 2  95 00            sta $00,x
000A15r 2  68               pla
000A16r 2  95 01            sta $01,x
000A18r 2               
000A18r 2               ; src/prelude.fth:4:28 in `over`
000A18r 2               @OPCODE_306:   ; [c64_ir] TempLoad
000A18r 2  E8               inx
000A19r 2  E8               inx
000A1Ar 2  A5 95            lda TEMP_PAX1
000A1Cr 2  95 00            sta $00,x
000A1Er 2  A5 96            lda TEMP_PAX2
000A20r 2  95 01            sta $01,x
000A22r 2               
000A22r 2               ; <inline>:0:0 in `main`
000A22r 2               @OPCODE_307:   ; [c64_ir] AltPop
000A22r 2  E8               inx
000A23r 2  E8               inx
000A24r 2  68               pla
000A25r 2  95 00            sta $00,x
000A27r 2  68               pla
000A28r 2  95 01            sta $01,x
000A2Ar 2               
000A2Ar 2               ; <inline>:0:0 in `main`
000A2Ar 2               @OPCODE_308:   ; [c64_ir] Drop
000A2Ar 2  CA               dex
000A2Br 2  CA               dex
000A2Cr 2               
000A2Cr 2               ; src/prelude.fth:44:23 in `*`
000A2Cr 2               @OPCODE_309:   ; [c64_ir] Add
000A2Cr 2                   ; 21
000A2Cr 2  CA               dex
000A2Dr 2  CA               dex
000A2Er 2  18               clc
000A2Fr 2  B5 00            lda $00,x
000A31r 2  75 02            adc $02,x
000A33r 2  95 00            sta $00,x
000A35r 2  B5 01            lda $01,x
000A37r 2  75 03            adc $03,x
000A39r 2  95 01            sta $01,x
000A3Br 2               
000A3Br 2               ; <inline>:0:0 in `main`
000A3Br 2               @OPCODE_310:   ; [c64_ir] PushLiteral(7777)
000A3Br 2  E8               inx
000A3Cr 2  E8               inx
000A3Dr 2  A9 61            lda #97
000A3Fr 2  95 00            sta $00,x
000A41r 2  A9 1E            lda #30
000A43r 2  95 01            sta $01,x
000A45r 2               
000A45r 2               ; <inline>:0:0 in `main`
000A45r 2               @OPCODE_311:   ; [c64_ir] AltPush
000A45r 2  CA               dex
000A46r 2  CA               dex
000A47r 2  B5 03            lda $03,x
000A49r 2  48               pha
000A4Ar 2  B5 02            lda $02,x
000A4Cr 2  48               pha
000A4Dr 2               
000A4Dr 2               ; src/prelude.fth:33:12 in `loopimpl`
000A4Dr 2               @OPCODE_312:   ; [c64_ir] AltPop
000A4Dr 2  E8               inx
000A4Er 2  E8               inx
000A4Fr 2  68               pla
000A50r 2  95 00            sta $00,x
000A52r 2  68               pla
000A53r 2  95 01            sta $01,x
000A55r 2               
000A55r 2               ; src/prelude.fth:33:15 in `loopimpl`
000A55r 2               @OPCODE_313:   ; [c64_ir] AltPop
000A55r 2  E8               inx
000A56r 2  E8               inx
000A57r 2  68               pla
000A58r 2  95 00            sta $00,x
000A5Ar 2  68               pla
000A5Br 2  95 01            sta $01,x
000A5Dr 2               
000A5Dr 2               ; src/prelude.fth:33:18 in `loopimpl`
000A5Dr 2               @OPCODE_314:   ; [c64_ir] AltPop
000A5Dr 2  E8               inx
000A5Er 2  E8               inx
000A5Fr 2  68               pla
000A60r 2  95 00            sta $00,x
000A62r 2  68               pla
000A63r 2  95 01            sta $01,x
000A65r 2               
000A65r 2               ; <inline>:0:0 in `main`
000A65r 2               @OPCODE_315:   ; [c64_ir] PushLiteral(7777)
000A65r 2  E8               inx
000A66r 2  E8               inx
000A67r 2  A9 61            lda #97
000A69r 2  95 00            sta $00,x
000A6Br 2  A9 1E            lda #30
000A6Dr 2  95 01            sta $01,x
000A6Fr 2               
000A6Fr 2               ; <inline>:0:0 in `main`
000A6Fr 2               @OPCODE_316:   ; [c64_ir] AltPush
000A6Fr 2  CA               dex
000A70r 2  CA               dex
000A71r 2  B5 03            lda $03,x
000A73r 2  48               pha
000A74r 2  B5 02            lda $02,x
000A76r 2  48               pha
000A77r 2               
000A77r 2               ; src/prelude.fth:18:8 in `1+`
000A77r 2               @OPCODE_317:   ; [c64_ir] PushLiteral(1)
000A77r 2  E8               inx
000A78r 2  E8               inx
000A79r 2  A9 01            lda #1
000A7Br 2  95 00            sta $00,x
000A7Dr 2  A9 00            lda #0
000A7Fr 2  95 01            sta $01,x
000A81r 2               
000A81r 2               ; src/prelude.fth:18:10 in `1+`
000A81r 2               @OPCODE_318:   ; [c64_ir] Add
000A81r 2                   ; 21
000A81r 2  CA               dex
000A82r 2  CA               dex
000A83r 2  18               clc
000A84r 2  B5 00            lda $00,x
000A86r 2  75 02            adc $02,x
000A88r 2  95 00            sta $00,x
000A8Ar 2  B5 01            lda $01,x
000A8Cr 2  75 03            adc $03,x
000A8Er 2  95 01            sta $01,x
000A90r 2               
000A90r 2               ; <inline>:0:0 in `main`
000A90r 2               @OPCODE_319:   ; [c64_ir] AltPop
000A90r 2  E8               inx
000A91r 2  E8               inx
000A92r 2  68               pla
000A93r 2  95 00            sta $00,x
000A95r 2  68               pla
000A96r 2  95 01            sta $01,x
000A98r 2               
000A98r 2               ; <inline>:0:0 in `main`
000A98r 2               @OPCODE_320:   ; [c64_ir] Drop
000A98r 2  CA               dex
000A99r 2  CA               dex
000A9Ar 2               
000A9Ar 2               ; <inline>:0:0 in `main`
000A9Ar 2               @OPCODE_321:   ; [c64_ir] PushLiteral(7777)
000A9Ar 2  E8               inx
000A9Br 2  E8               inx
000A9Cr 2  A9 61            lda #97
000A9Er 2  95 00            sta $00,x
000AA0r 2  A9 1E            lda #30
000AA2r 2  95 01            sta $01,x
000AA4r 2               
000AA4r 2               ; <inline>:0:0 in `main`
000AA4r 2               @OPCODE_322:   ; [c64_ir] AltPush
000AA4r 2  CA               dex
000AA5r 2  CA               dex
000AA6r 2  B5 03            lda $03,x
000AA8r 2  48               pha
000AA9r 2  B5 02            lda $02,x
000AABr 2  48               pha
000AACr 2               
000AACr 2               ; <inline>:0:0 in `main`
000AACr 2               @OPCODE_323:   ; [c64_ir] PushLiteral(7777)
000AACr 2  E8               inx
000AADr 2  E8               inx
000AAEr 2  A9 61            lda #97
000AB0r 2  95 00            sta $00,x
000AB2r 2  A9 1E            lda #30
000AB4r 2  95 01            sta $01,x
000AB6r 2               
000AB6r 2               ; <inline>:0:0 in `main`
000AB6r 2               @OPCODE_324:   ; [c64_ir] AltPush
000AB6r 2  CA               dex
000AB7r 2  CA               dex
000AB8r 2  B5 03            lda $03,x
000ABAr 2  48               pha
000ABBr 2  B5 02            lda $02,x
000ABDr 2  48               pha
000ABEr 2               
000ABEr 2               ; src/prelude.fth:4:10 in `over`
000ABEr 2               @OPCODE_325:   ; [c64_ir] AltPush
000ABEr 2  CA               dex
000ABFr 2  CA               dex
000AC0r 2  B5 03            lda $03,x
000AC2r 2  48               pha
000AC3r 2  B5 02            lda $02,x
000AC5r 2  48               pha
000AC6r 2               
000AC6r 2               ; src/prelude.fth:4:13 in `over`
000AC6r 2               @OPCODE_326:   ; [c64_ir] TempStore
000AC6r 2  CA               dex
000AC7r 2  CA               dex
000AC8r 2  B5 03            lda $03,x
000ACAr 2  85 96            sta TEMP_PAX2
000ACCr 2  B5 02            lda $02,x
000ACEr 2  85 95            sta TEMP_PAX1
000AD0r 2               
000AD0r 2               ; src/prelude.fth:4:19 in `over`
000AD0r 2               @OPCODE_327:   ; [c64_ir] TempLoad
000AD0r 2  E8               inx
000AD1r 2  E8               inx
000AD2r 2  A5 95            lda TEMP_PAX1
000AD4r 2  95 00            sta $00,x
000AD6r 2  A5 96            lda TEMP_PAX2
000AD8r 2  95 01            sta $01,x
000ADAr 2               
000ADAr 2               ; src/prelude.fth:4:25 in `over`
000ADAr 2               @OPCODE_328:   ; [c64_ir] AltPop
000ADAr 2  E8               inx
000ADBr 2  E8               inx
000ADCr 2  68               pla
000ADDr 2  95 00            sta $00,x
000ADFr 2  68               pla
000AE0r 2  95 01            sta $01,x
000AE2r 2               
000AE2r 2               ; src/prelude.fth:4:28 in `over`
000AE2r 2               @OPCODE_329:   ; [c64_ir] TempLoad
000AE2r 2  E8               inx
000AE3r 2  E8               inx
000AE4r 2  A5 95            lda TEMP_PAX1
000AE6r 2  95 00            sta $00,x
000AE8r 2  A5 96            lda TEMP_PAX2
000AEAr 2  95 01            sta $01,x
000AECr 2               
000AECr 2               ; <inline>:0:0 in `main`
000AECr 2               @OPCODE_330:   ; [c64_ir] AltPop
000AECr 2  E8               inx
000AEDr 2  E8               inx
000AEEr 2  68               pla
000AEFr 2  95 00            sta $00,x
000AF1r 2  68               pla
000AF2r 2  95 01            sta $01,x
000AF4r 2               
000AF4r 2               ; <inline>:0:0 in `main`
000AF4r 2               @OPCODE_331:   ; [c64_ir] Drop
000AF4r 2  CA               dex
000AF5r 2  CA               dex
000AF6r 2               
000AF6r 2               ; <inline>:0:0 in `main`
000AF6r 2               @OPCODE_332:   ; [c64_ir] PushLiteral(7777)
000AF6r 2  E8               inx
000AF7r 2  E8               inx
000AF8r 2  A9 61            lda #97
000AFAr 2  95 00            sta $00,x
000AFCr 2  A9 1E            lda #30
000AFEr 2  95 01            sta $01,x
000B00r 2               
000B00r 2               ; <inline>:0:0 in `main`
000B00r 2               @OPCODE_333:   ; [c64_ir] AltPush
000B00r 2  CA               dex
000B01r 2  CA               dex
000B02r 2  B5 03            lda $03,x
000B04r 2  48               pha
000B05r 2  B5 02            lda $02,x
000B07r 2  48               pha
000B08r 2               
000B08r 2               ; src/prelude.fth:4:10 in `over`
000B08r 2               @OPCODE_334:   ; [c64_ir] AltPush
000B08r 2  CA               dex
000B09r 2  CA               dex
000B0Ar 2  B5 03            lda $03,x
000B0Cr 2  48               pha
000B0Dr 2  B5 02            lda $02,x
000B0Fr 2  48               pha
000B10r 2               
000B10r 2               ; src/prelude.fth:4:13 in `over`
000B10r 2               @OPCODE_335:   ; [c64_ir] TempStore
000B10r 2  CA               dex
000B11r 2  CA               dex
000B12r 2  B5 03            lda $03,x
000B14r 2  85 96            sta TEMP_PAX2
000B16r 2  B5 02            lda $02,x
000B18r 2  85 95            sta TEMP_PAX1
000B1Ar 2               
000B1Ar 2               ; src/prelude.fth:4:19 in `over`
000B1Ar 2               @OPCODE_336:   ; [c64_ir] TempLoad
000B1Ar 2  E8               inx
000B1Br 2  E8               inx
000B1Cr 2  A5 95            lda TEMP_PAX1
000B1Er 2  95 00            sta $00,x
000B20r 2  A5 96            lda TEMP_PAX2
000B22r 2  95 01            sta $01,x
000B24r 2               
000B24r 2               ; src/prelude.fth:4:25 in `over`
000B24r 2               @OPCODE_337:   ; [c64_ir] AltPop
000B24r 2  E8               inx
000B25r 2  E8               inx
000B26r 2  68               pla
000B27r 2  95 00            sta $00,x
000B29r 2  68               pla
000B2Ar 2  95 01            sta $01,x
000B2Cr 2               
000B2Cr 2               ; src/prelude.fth:4:28 in `over`
000B2Cr 2               @OPCODE_338:   ; [c64_ir] TempLoad
000B2Cr 2  E8               inx
000B2Dr 2  E8               inx
000B2Er 2  A5 95            lda TEMP_PAX1
000B30r 2  95 00            sta $00,x
000B32r 2  A5 96            lda TEMP_PAX2
000B34r 2  95 01            sta $01,x
000B36r 2               
000B36r 2               ; <inline>:0:0 in `main`
000B36r 2               @OPCODE_339:   ; [c64_ir] AltPop
000B36r 2  E8               inx
000B37r 2  E8               inx
000B38r 2  68               pla
000B39r 2  95 00            sta $00,x
000B3Br 2  68               pla
000B3Cr 2  95 01            sta $01,x
000B3Er 2               
000B3Er 2               ; <inline>:0:0 in `main`
000B3Er 2               @OPCODE_340:   ; [c64_ir] Drop
000B3Er 2  CA               dex
000B3Fr 2  CA               dex
000B40r 2               
000B40r 2               ; <inline>:0:0 in `main`
000B40r 2               @OPCODE_341:   ; [c64_ir] AltPop
000B40r 2  E8               inx
000B41r 2  E8               inx
000B42r 2  68               pla
000B43r 2  95 00            sta $00,x
000B45r 2  68               pla
000B46r 2  95 01            sta $01,x
000B48r 2               
000B48r 2               ; <inline>:0:0 in `main`
000B48r 2               @OPCODE_342:   ; [c64_ir] Drop
000B48r 2  CA               dex
000B49r 2  CA               dex
000B4Ar 2               
000B4Ar 2               ; src/prelude.fth:33:29 in `loopimpl`
000B4Ar 2               @OPCODE_343:   ; [c64_ir] AltPush
000B4Ar 2  CA               dex
000B4Br 2  CA               dex
000B4Cr 2  B5 03            lda $03,x
000B4Er 2  48               pha
000B4Fr 2  B5 02            lda $02,x
000B51r 2  48               pha
000B52r 2               
000B52r 2               ; src/prelude.fth:33:32 in `loopimpl`
000B52r 2               @OPCODE_344:   ; [c64_ir] AltPush
000B52r 2  CA               dex
000B53r 2  CA               dex
000B54r 2  B5 03            lda $03,x
000B56r 2  48               pha
000B57r 2  B5 02            lda $02,x
000B59r 2  48               pha
000B5Ar 2               
000B5Ar 2               ; <inline>:0:0 in `main`
000B5Ar 2               @OPCODE_345:   ; [c64_ir] PushLiteral(7777)
000B5Ar 2  E8               inx
000B5Br 2  E8               inx
000B5Cr 2  A9 61            lda #97
000B5Er 2  95 00            sta $00,x
000B60r 2  A9 1E            lda #30
000B62r 2  95 01            sta $01,x
000B64r 2               
000B64r 2               ; <inline>:0:0 in `main`
000B64r 2               @OPCODE_346:   ; [c64_ir] AltPush
000B64r 2  CA               dex
000B65r 2  CA               dex
000B66r 2  B5 03            lda $03,x
000B68r 2  48               pha
000B69r 2  B5 02            lda $02,x
000B6Br 2  48               pha
000B6Cr 2               
000B6Cr 2               ; <inline>:0:0 in `main`
000B6Cr 2               @OPCODE_347:   ; [c64_ir] PushLiteral(7777)
000B6Cr 2  E8               inx
000B6Dr 2  E8               inx
000B6Er 2  A9 61            lda #97
000B70r 2  95 00            sta $00,x
000B72r 2  A9 1E            lda #30
000B74r 2  95 01            sta $01,x
000B76r 2               
000B76r 2               ; <inline>:0:0 in `main`
000B76r 2               @OPCODE_348:   ; [c64_ir] AltPush
000B76r 2  CA               dex
000B77r 2  CA               dex
000B78r 2  B5 03            lda $03,x
000B7Ar 2  48               pha
000B7Br 2  B5 02            lda $02,x
000B7Dr 2  48               pha
000B7Er 2               
000B7Er 2               ; <inline>:0:0 in `main`
000B7Er 2               @OPCODE_349:   ; [c64_ir] PushLiteral(7777)
000B7Er 2  E8               inx
000B7Fr 2  E8               inx
000B80r 2  A9 61            lda #97
000B82r 2  95 00            sta $00,x
000B84r 2  A9 1E            lda #30
000B86r 2  95 01            sta $01,x
000B88r 2               
000B88r 2               ; <inline>:0:0 in `main`
000B88r 2               @OPCODE_350:   ; [c64_ir] AltPush
000B88r 2  CA               dex
000B89r 2  CA               dex
000B8Ar 2  B5 03            lda $03,x
000B8Cr 2  48               pha
000B8Dr 2  B5 02            lda $02,x
000B8Fr 2  48               pha
000B90r 2               
000B90r 2               ; <inline>:0:0 in `main`
000B90r 2               @OPCODE_351:   ; [c64_ir] PushLiteral(7777)
000B90r 2  E8               inx
000B91r 2  E8               inx
000B92r 2  A9 61            lda #97
000B94r 2  95 00            sta $00,x
000B96r 2  A9 1E            lda #30
000B98r 2  95 01            sta $01,x
000B9Ar 2               
000B9Ar 2               ; <inline>:0:0 in `main`
000B9Ar 2               @OPCODE_352:   ; [c64_ir] AltPush
000B9Ar 2  CA               dex
000B9Br 2  CA               dex
000B9Cr 2  B5 03            lda $03,x
000B9Er 2  48               pha
000B9Fr 2  B5 02            lda $02,x
000BA1r 2  48               pha
000BA2r 2               
000BA2r 2               ; src/prelude.fth:14:12 in `invert`
000BA2r 2               @OPCODE_353:   ; [c64_ir] PushLiteral(-1)
000BA2r 2  E8               inx
000BA3r 2  E8               inx
000BA4r 2  A9 FF            lda #255
000BA6r 2  95 00            sta $00,x
000BA8r 2  A9 FF            lda #255
000BAAr 2  95 01            sta $01,x
000BACr 2               
000BACr 2               ; src/prelude.fth:14:15 in `invert`
000BACr 2               @OPCODE_354:   ; [c64_ir] Nand
000BACr 2                   ; 26
000BACr 2  CA               dex
000BADr 2  CA               dex
000BAEr 2  B5 00            lda $00,x
000BB0r 2  35 02            and $02,x
000BB2r 2  49 FF            eor #$ff
000BB4r 2  95 00            sta $00,x
000BB6r 2  B5 01            lda $01,x
000BB8r 2  35 03            and $03,x
000BBAr 2  49 FF            eor #$ff
000BBCr 2  95 01            sta $01,x
000BBEr 2               
000BBEr 2               ; <inline>:0:0 in `main`
000BBEr 2               @OPCODE_355:   ; [c64_ir] AltPop
000BBEr 2  E8               inx
000BBFr 2  E8               inx
000BC0r 2  68               pla
000BC1r 2  95 00            sta $00,x
000BC3r 2  68               pla
000BC4r 2  95 01            sta $01,x
000BC6r 2               
000BC6r 2               ; <inline>:0:0 in `main`
000BC6r 2               @OPCODE_356:   ; [c64_ir] Drop
000BC6r 2  CA               dex
000BC7r 2  CA               dex
000BC8r 2               
000BC8r 2               ; src/prelude.fth:15:19 in `negate`
000BC8r 2               @OPCODE_357:   ; [c64_ir] PushLiteral(1)
000BC8r 2  E8               inx
000BC9r 2  E8               inx
000BCAr 2  A9 01            lda #1
000BCCr 2  95 00            sta $00,x
000BCEr 2  A9 00            lda #0
000BD0r 2  95 01            sta $01,x
000BD2r 2               
000BD2r 2               ; src/prelude.fth:15:21 in `negate`
000BD2r 2               @OPCODE_358:   ; [c64_ir] Add
000BD2r 2                   ; 21
000BD2r 2  CA               dex
000BD3r 2  CA               dex
000BD4r 2  18               clc
000BD5r 2  B5 00            lda $00,x
000BD7r 2  75 02            adc $02,x
000BD9r 2  95 00            sta $00,x
000BDBr 2  B5 01            lda $01,x
000BDDr 2  75 03            adc $03,x
000BDFr 2  95 01            sta $01,x
000BE1r 2               
000BE1r 2               ; <inline>:0:0 in `main`
000BE1r 2               @OPCODE_359:   ; [c64_ir] AltPop
000BE1r 2  E8               inx
000BE2r 2  E8               inx
000BE3r 2  68               pla
000BE4r 2  95 00            sta $00,x
000BE6r 2  68               pla
000BE7r 2  95 01            sta $01,x
000BE9r 2               
000BE9r 2               ; <inline>:0:0 in `main`
000BE9r 2               @OPCODE_360:   ; [c64_ir] Drop
000BE9r 2  CA               dex
000BEAr 2  CA               dex
000BEBr 2               
000BEBr 2               ; src/prelude.fth:16:19 in `-`
000BEBr 2               @OPCODE_361:   ; [c64_ir] Add
000BEBr 2                   ; 21
000BEBr 2  CA               dex
000BECr 2  CA               dex
000BEDr 2  18               clc
000BEEr 2  B5 00            lda $00,x
000BF0r 2  75 02            adc $02,x
000BF2r 2  95 00            sta $00,x
000BF4r 2  B5 01            lda $01,x
000BF6r 2  75 03            adc $03,x
000BF8r 2  95 01            sta $01,x
000BFAr 2               
000BFAr 2               ; <inline>:0:0 in `main`
000BFAr 2               @OPCODE_362:   ; [c64_ir] AltPop
000BFAr 2  E8               inx
000BFBr 2  E8               inx
000BFCr 2  68               pla
000BFDr 2  95 00            sta $00,x
000BFFr 2  68               pla
000C00r 2  95 01            sta $01,x
000C02r 2               
000C02r 2               ; <inline>:0:0 in `main`
000C02r 2               @OPCODE_363:   ; [c64_ir] Drop
000C02r 2  CA               dex
000C03r 2  CA               dex
000C04r 2               
000C04r 2               ; <inline>:0:0 in `main`
000C04r 2               @OPCODE_364:   ; [c64_ir] PushLiteral(7777)
000C04r 2  E8               inx
000C05r 2  E8               inx
000C06r 2  A9 61            lda #97
000C08r 2  95 00            sta $00,x
000C0Ar 2  A9 1E            lda #30
000C0Cr 2  95 01            sta $01,x
000C0Er 2               
000C0Er 2               ; <inline>:0:0 in `main`
000C0Er 2               @OPCODE_365:   ; [c64_ir] AltPush
000C0Er 2  CA               dex
000C0Fr 2  CA               dex
000C10r 2  B5 03            lda $03,x
000C12r 2  48               pha
000C13r 2  B5 02            lda $02,x
000C15r 2  48               pha
000C16r 2               
000C16r 2               ; src/prelude.fth:21:8 in `0=`
000C16r 2               @OPCODE_366:   ; [c64_ir] JumpIf0(17)
000C16r 2  CA               dex
000C17r 2  CA               dex
000C18r 2  B5 02            lda $02,x
000C1Ar 2  15 03            ora $03,x
000C1Cr 2  D0 03            bne *+5
000C1Er 2  4C rr rr         jmp @target_17
000C21r 2               
000C21r 2               @target_16:
000C21r 2               
000C21r 2               ; src/prelude.fth:21:11 in `0=`
000C21r 2               @OPCODE_368:   ; [c64_ir] PushLiteral(0)
000C21r 2  E8               inx
000C22r 2  E8               inx
000C23r 2  A9 00            lda #0
000C25r 2  95 00            sta $00,x
000C27r 2  A9 00            lda #0
000C29r 2  95 01            sta $01,x
000C2Br 2               
000C2Br 2               ; src/prelude.fth:21:13 in `0=`
000C2Br 2               @OPCODE_369:   ; [c64_ir] JumpElse(18)
000C2Br 2  4C rr rr         jmp @target_18
000C2Er 2               
000C2Er 2               @target_17:
000C2Er 2               
000C2Er 2               ; src/prelude.fth:21:18 in `0=`
000C2Er 2               @OPCODE_371:   ; [c64_ir] PushLiteral(-1)
000C2Er 2  E8               inx
000C2Fr 2  E8               inx
000C30r 2  A9 FF            lda #255
000C32r 2  95 00            sta $00,x
000C34r 2  A9 FF            lda #255
000C36r 2  95 01            sta $01,x
000C38r 2               
000C38r 2               ; src/prelude.fth:21:21 in `0=`
000C38r 2               @OPCODE_372:   ; [c64_ir] JumpTarget(17)
000C38r 2               
000C38r 2               @target_18:
000C38r 2               
000C38r 2               ; <inline>:0:0 in `main`
000C38r 2               @OPCODE_374:   ; [c64_ir] AltPop
000C38r 2  E8               inx
000C39r 2  E8               inx
000C3Ar 2  68               pla
000C3Br 2  95 00            sta $00,x
000C3Dr 2  68               pla
000C3Er 2  95 01            sta $01,x
000C40r 2               
000C40r 2               ; <inline>:0:0 in `main`
000C40r 2               @OPCODE_375:   ; [c64_ir] Drop
000C40r 2  CA               dex
000C41r 2  CA               dex
000C42r 2               
000C42r 2               ; <inline>:0:0 in `main`
000C42r 2               @OPCODE_376:   ; [c64_ir] AltPop
000C42r 2  E8               inx
000C43r 2  E8               inx
000C44r 2  68               pla
000C45r 2  95 00            sta $00,x
000C47r 2  68               pla
000C48r 2  95 01            sta $01,x
000C4Ar 2               
000C4Ar 2               ; <inline>:0:0 in `main`
000C4Ar 2               @OPCODE_377:   ; [c64_ir] Drop
000C4Ar 2  CA               dex
000C4Br 2  CA               dex
000C4Cr 2               
000C4Cr 2               ; <inline>:0:0 in `main`
000C4Cr 2               @OPCODE_378:   ; [c64_ir] PushLiteral(7777)
000C4Cr 2  E8               inx
000C4Dr 2  E8               inx
000C4Er 2  A9 61            lda #97
000C50r 2  95 00            sta $00,x
000C52r 2  A9 1E            lda #30
000C54r 2  95 01            sta $01,x
000C56r 2               
000C56r 2               ; <inline>:0:0 in `main`
000C56r 2               @OPCODE_379:   ; [c64_ir] AltPush
000C56r 2  CA               dex
000C57r 2  CA               dex
000C58r 2  B5 03            lda $03,x
000C5Ar 2  48               pha
000C5Br 2  B5 02            lda $02,x
000C5Dr 2  48               pha
000C5Er 2               
000C5Er 2               ; src/prelude.fth:3:10 in `swap`
000C5Er 2               @OPCODE_380:   ; [c64_ir] AltPush
000C5Er 2  CA               dex
000C5Fr 2  CA               dex
000C60r 2  B5 03            lda $03,x
000C62r 2  48               pha
000C63r 2  B5 02            lda $02,x
000C65r 2  48               pha
000C66r 2               
000C66r 2               ; src/prelude.fth:3:13 in `swap`
000C66r 2               @OPCODE_381:   ; [c64_ir] TempStore
000C66r 2  CA               dex
000C67r 2  CA               dex
000C68r 2  B5 03            lda $03,x
000C6Ar 2  85 96            sta TEMP_PAX2
000C6Cr 2  B5 02            lda $02,x
000C6Er 2  85 95            sta TEMP_PAX1
000C70r 2               
000C70r 2               ; src/prelude.fth:3:19 in `swap`
000C70r 2               @OPCODE_382:   ; [c64_ir] AltPop
000C70r 2  E8               inx
000C71r 2  E8               inx
000C72r 2  68               pla
000C73r 2  95 00            sta $00,x
000C75r 2  68               pla
000C76r 2  95 01            sta $01,x
000C78r 2               
000C78r 2               ; src/prelude.fth:3:22 in `swap`
000C78r 2               @OPCODE_383:   ; [c64_ir] TempLoad
000C78r 2  E8               inx
000C79r 2  E8               inx
000C7Ar 2  A5 95            lda TEMP_PAX1
000C7Cr 2  95 00            sta $00,x
000C7Er 2  A5 96            lda TEMP_PAX2
000C80r 2  95 01            sta $01,x
000C82r 2               
000C82r 2               ; <inline>:0:0 in `main`
000C82r 2               @OPCODE_384:   ; [c64_ir] AltPop
000C82r 2  E8               inx
000C83r 2  E8               inx
000C84r 2  68               pla
000C85r 2  95 00            sta $00,x
000C87r 2  68               pla
000C88r 2  95 01            sta $01,x
000C8Ar 2               
000C8Ar 2               ; <inline>:0:0 in `main`
000C8Ar 2               @OPCODE_385:   ; [c64_ir] Drop
000C8Ar 2  CA               dex
000C8Br 2  CA               dex
000C8Cr 2               
000C8Cr 2               ; src/prelude.fth:33:42 in `loopimpl`
000C8Cr 2               @OPCODE_386:   ; [c64_ir] AltPush
000C8Cr 2  CA               dex
000C8Dr 2  CA               dex
000C8Er 2  B5 03            lda $03,x
000C90r 2  48               pha
000C91r 2  B5 02            lda $02,x
000C93r 2  48               pha
000C94r 2               
000C94r 2               ; <inline>:0:0 in `main`
000C94r 2               @OPCODE_387:   ; [c64_ir] AltPop
000C94r 2  E8               inx
000C95r 2  E8               inx
000C96r 2  68               pla
000C97r 2  95 00            sta $00,x
000C99r 2  68               pla
000C9Ar 2  95 01            sta $01,x
000C9Cr 2               
000C9Cr 2               ; <inline>:0:0 in `main`
000C9Cr 2               @OPCODE_388:   ; [c64_ir] Drop
000C9Cr 2  CA               dex
000C9Dr 2  CA               dex
000C9Er 2               
000C9Er 2               ; src/prelude.fth:44:25 in `*`
000C9Er 2               @OPCODE_389:   ; [c64_ir] LoopIf0(15)
000C9Er 2  CA               dex
000C9Fr 2  CA               dex
000CA0r 2  B5 02            lda $02,x
000CA2r 2  15 03            ora $03,x
000CA4r 2  D0 03            bne *+5
000CA6r 2  4C rr rr         jmp @target_15
000CA9r 2               
000CA9r 2               @target_19:
000CA9r 2               
000CA9r 2               ; src/prelude.fth:44:25 in `*`
000CA9r 2               @OPCODE_391:   ; [c64_ir] AltPop
000CA9r 2  E8               inx
000CAAr 2  E8               inx
000CABr 2  68               pla
000CACr 2  95 00            sta $00,x
000CAEr 2  68               pla
000CAFr 2  95 01            sta $01,x
000CB1r 2               
000CB1r 2               ; src/prelude.fth:44:25 in `*`
000CB1r 2               @OPCODE_392:   ; [c64_ir] Drop
000CB1r 2  CA               dex
000CB2r 2  CA               dex
000CB3r 2               
000CB3r 2               ; src/prelude.fth:44:25 in `*`
000CB3r 2               @OPCODE_393:   ; [c64_ir] AltPop
000CB3r 2  E8               inx
000CB4r 2  E8               inx
000CB5r 2  68               pla
000CB6r 2  95 00            sta $00,x
000CB8r 2  68               pla
000CB9r 2  95 01            sta $01,x
000CBBr 2               
000CBBr 2               ; src/prelude.fth:44:25 in `*`
000CBBr 2               @OPCODE_394:   ; [c64_ir] Drop
000CBBr 2  CA               dex
000CBCr 2  CA               dex
000CBDr 2               
000CBDr 2               ; <inline>:0:0 in `main`
000CBDr 2               @OPCODE_395:   ; [c64_ir] PushLiteral(7777)
000CBDr 2  E8               inx
000CBEr 2  E8               inx
000CBFr 2  A9 61            lda #97
000CC1r 2  95 00            sta $00,x
000CC3r 2  A9 1E            lda #30
000CC5r 2  95 01            sta $01,x
000CC7r 2               
000CC7r 2               ; <inline>:0:0 in `main`
000CC7r 2               @OPCODE_396:   ; [c64_ir] AltPush
000CC7r 2  CA               dex
000CC8r 2  CA               dex
000CC9r 2  B5 03            lda $03,x
000CCBr 2  48               pha
000CCCr 2  B5 02            lda $02,x
000CCEr 2  48               pha
000CCFr 2               
000CCFr 2               ; src/prelude.fth:3:10 in `swap`
000CCFr 2               @OPCODE_397:   ; [c64_ir] AltPush
000CCFr 2  CA               dex
000CD0r 2  CA               dex
000CD1r 2  B5 03            lda $03,x
000CD3r 2  48               pha
000CD4r 2  B5 02            lda $02,x
000CD6r 2  48               pha
000CD7r 2               
000CD7r 2               ; src/prelude.fth:3:13 in `swap`
000CD7r 2               @OPCODE_398:   ; [c64_ir] TempStore
000CD7r 2  CA               dex
000CD8r 2  CA               dex
000CD9r 2  B5 03            lda $03,x
000CDBr 2  85 96            sta TEMP_PAX2
000CDDr 2  B5 02            lda $02,x
000CDFr 2  85 95            sta TEMP_PAX1
000CE1r 2               
000CE1r 2               ; src/prelude.fth:3:19 in `swap`
000CE1r 2               @OPCODE_399:   ; [c64_ir] AltPop
000CE1r 2  E8               inx
000CE2r 2  E8               inx
000CE3r 2  68               pla
000CE4r 2  95 00            sta $00,x
000CE6r 2  68               pla
000CE7r 2  95 01            sta $01,x
000CE9r 2               
000CE9r 2               ; src/prelude.fth:3:22 in `swap`
000CE9r 2               @OPCODE_400:   ; [c64_ir] TempLoad
000CE9r 2  E8               inx
000CEAr 2  E8               inx
000CEBr 2  A5 95            lda TEMP_PAX1
000CEDr 2  95 00            sta $00,x
000CEFr 2  A5 96            lda TEMP_PAX2
000CF1r 2  95 01            sta $01,x
000CF3r 2               
000CF3r 2               ; <inline>:0:0 in `main`
000CF3r 2               @OPCODE_401:   ; [c64_ir] AltPop
000CF3r 2  E8               inx
000CF4r 2  E8               inx
000CF5r 2  68               pla
000CF6r 2  95 00            sta $00,x
000CF8r 2  68               pla
000CF9r 2  95 01            sta $01,x
000CFBr 2               
000CFBr 2               ; <inline>:0:0 in `main`
000CFBr 2               @OPCODE_402:   ; [c64_ir] Drop
000CFBr 2  CA               dex
000CFCr 2  CA               dex
000CFDr 2               
000CFDr 2               ; src/prelude.fth:44:35 in `*`
000CFDr 2               @OPCODE_403:   ; [c64_ir] Drop
000CFDr 2  CA               dex
000CFEr 2  CA               dex
000CFFr 2               
000CFFr 2               ; <inline>:0:0 in `main`
000CFFr 2               @OPCODE_404:   ; [c64_ir] AltPop
000CFFr 2  E8               inx
000D00r 2  E8               inx
000D01r 2  68               pla
000D02r 2  95 00            sta $00,x
000D04r 2  68               pla
000D05r 2  95 01            sta $01,x
000D07r 2               
000D07r 2               ; <inline>:0:0 in `main`
000D07r 2               @OPCODE_405:   ; [c64_ir] Drop
000D07r 2  CA               dex
000D08r 2  CA               dex
000D09r 2               
000D09r 2               ; snake.fth:70:5 in `draw-walls`
000D09r 2               @OPCODE_406:   ; [c64_ir] PushLiteral(40)
000D09r 2  E8               inx
000D0Ar 2  E8               inx
000D0Br 2  A9 28            lda #40
000D0Dr 2  95 00            sta $00,x
000D0Fr 2  A9 00            lda #0
000D11r 2  95 01            sta $01,x
000D13r 2               
000D13r 2               ; snake.fth:70:11 in `draw-walls`
000D13r 2               @OPCODE_407:   ; [c64_ir] PushLiteral(0)
000D13r 2  E8               inx
000D14r 2  E8               inx
000D15r 2  A9 00            lda #0
000D17r 2  95 00            sta $00,x
000D19r 2  A9 00            lda #0
000D1Br 2  95 01            sta $01,x
000D1Dr 2               
000D1Dr 2               ; snake.fth:70:13 in `draw-walls`
000D1Dr 2               @OPCODE_408:   ; [c64_ir] AltPush
000D1Dr 2  CA               dex
000D1Er 2  CA               dex
000D1Fr 2  B5 03            lda $03,x
000D21r 2  48               pha
000D22r 2  B5 02            lda $02,x
000D24r 2  48               pha
000D25r 2               
000D25r 2               ; snake.fth:70:13 in `draw-walls`
000D25r 2               @OPCODE_409:   ; [c64_ir] AltPush
000D25r 2  CA               dex
000D26r 2  CA               dex
000D27r 2  B5 03            lda $03,x
000D29r 2  48               pha
000D2Ar 2  B5 02            lda $02,x
000D2Cr 2  48               pha
000D2Dr 2               
000D2Dr 2               ; snake.fth:70:13 in `draw-walls`
000D2Dr 2               @OPCODE_410:   ; [c64_ir] LoopTarget(19)
000D2Dr 2               
000D2Dr 2               @target_20:
000D2Dr 2               
000D2Dr 2               ; snake.fth:71:9 in `draw-walls`
000D2Dr 2               @OPCODE_412:   ; [c64_ir] PushLiteral(230)
000D2Dr 2  E8               inx
000D2Er 2  E8               inx
000D2Fr 2  A9 E6            lda #230
000D31r 2  95 00            sta $00,x
000D33r 2  A9 00            lda #0
000D35r 2  95 01            sta $01,x
000D37r 2               
000D37r 2               ; <inline>:0:0 in `main`
000D37r 2               @OPCODE_413:   ; [c64_ir] PushLiteral(7777)
000D37r 2  E8               inx
000D38r 2  E8               inx
000D39r 2  A9 61            lda #97
000D3Br 2  95 00            sta $00,x
000D3Dr 2  A9 1E            lda #30
000D3Fr 2  95 01            sta $01,x
000D41r 2               
000D41r 2               ; <inline>:0:0 in `main`
000D41r 2               @OPCODE_414:   ; [c64_ir] AltPush
000D41r 2  CA               dex
000D42r 2  CA               dex
000D43r 2  B5 03            lda $03,x
000D45r 2  48               pha
000D46r 2  B5 02            lda $02,x
000D48r 2  48               pha
000D49r 2               
000D49r 2               ; src/prelude.fth:4:10 in `over`
000D49r 2               @OPCODE_415:   ; [c64_ir] AltPush
000D49r 2  CA               dex
000D4Ar 2  CA               dex
000D4Br 2  B5 03            lda $03,x
000D4Dr 2  48               pha
000D4Er 2  B5 02            lda $02,x
000D50r 2  48               pha
000D51r 2               
000D51r 2               ; src/prelude.fth:4:13 in `over`
000D51r 2               @OPCODE_416:   ; [c64_ir] TempStore
000D51r 2  CA               dex
000D52r 2  CA               dex
000D53r 2  B5 03            lda $03,x
000D55r 2  85 96            sta TEMP_PAX2
000D57r 2  B5 02            lda $02,x
000D59r 2  85 95            sta TEMP_PAX1
000D5Br 2               
000D5Br 2               ; src/prelude.fth:4:19 in `over`
000D5Br 2               @OPCODE_417:   ; [c64_ir] TempLoad
000D5Br 2  E8               inx
000D5Cr 2  E8               inx
000D5Dr 2  A5 95            lda TEMP_PAX1
000D5Fr 2  95 00            sta $00,x
000D61r 2  A5 96            lda TEMP_PAX2
000D63r 2  95 01            sta $01,x
000D65r 2               
000D65r 2               ; src/prelude.fth:4:25 in `over`
000D65r 2               @OPCODE_418:   ; [c64_ir] AltPop
000D65r 2  E8               inx
000D66r 2  E8               inx
000D67r 2  68               pla
000D68r 2  95 00            sta $00,x
000D6Ar 2  68               pla
000D6Br 2  95 01            sta $01,x
000D6Dr 2               
000D6Dr 2               ; src/prelude.fth:4:28 in `over`
000D6Dr 2               @OPCODE_419:   ; [c64_ir] TempLoad
000D6Dr 2  E8               inx
000D6Er 2  E8               inx
000D6Fr 2  A5 95            lda TEMP_PAX1
000D71r 2  95 00            sta $00,x
000D73r 2  A5 96            lda TEMP_PAX2
000D75r 2  95 01            sta $01,x
000D77r 2               
000D77r 2               ; <inline>:0:0 in `main`
000D77r 2               @OPCODE_420:   ; [c64_ir] AltPop
000D77r 2  E8               inx
000D78r 2  E8               inx
000D79r 2  68               pla
000D7Ar 2  95 00            sta $00,x
000D7Cr 2  68               pla
000D7Dr 2  95 01            sta $01,x
000D7Fr 2               
000D7Fr 2               ; <inline>:0:0 in `main`
000D7Fr 2               @OPCODE_421:   ; [c64_ir] Drop
000D7Fr 2  CA               dex
000D80r 2  CA               dex
000D81r 2               
000D81r 2               ; <inline>:0:0 in `main`
000D81r 2               @OPCODE_422:   ; [c64_ir] PushLiteral(7777)
000D81r 2  E8               inx
000D82r 2  E8               inx
000D83r 2  A9 61            lda #97
000D85r 2  95 00            sta $00,x
000D87r 2  A9 1E            lda #30
000D89r 2  95 01            sta $01,x
000D8Br 2               
000D8Br 2               ; <inline>:0:0 in `main`
000D8Br 2               @OPCODE_423:   ; [c64_ir] AltPush
000D8Br 2  CA               dex
000D8Cr 2  CA               dex
000D8Dr 2  B5 03            lda $03,x
000D8Fr 2  48               pha
000D90r 2  B5 02            lda $02,x
000D92r 2  48               pha
000D93r 2               
000D93r 2               ; src/prelude.fth:38:5 in `i`
000D93r 2               @OPCODE_424:   ; [c64_ir] AltPop
000D93r 2  E8               inx
000D94r 2  E8               inx
000D95r 2  68               pla
000D96r 2  95 00            sta $00,x
000D98r 2  68               pla
000D99r 2  95 01            sta $01,x
000D9Br 2               
000D9Br 2               ; src/prelude.fth:38:8 in `i`
000D9Br 2               @OPCODE_425:   ; [c64_ir] AltPop
000D9Br 2  E8               inx
000D9Cr 2  E8               inx
000D9Dr 2  68               pla
000D9Er 2  95 00            sta $00,x
000DA0r 2  68               pla
000DA1r 2  95 01            sta $01,x
000DA3r 2               
000DA3r 2               ; src/prelude.fth:38:11 in `i`
000DA3r 2               @OPCODE_426:   ; [c64_ir] AltPop
000DA3r 2  E8               inx
000DA4r 2  E8               inx
000DA5r 2  68               pla
000DA6r 2  95 00            sta $00,x
000DA8r 2  68               pla
000DA9r 2  95 01            sta $01,x
000DABr 2               
000DABr 2               ; src/prelude.fth:38:14 in `i`
000DABr 2               @OPCODE_427:   ; [c64_ir] TempStore
000DABr 2  CA               dex
000DACr 2  CA               dex
000DADr 2  B5 03            lda $03,x
000DAFr 2  85 96            sta TEMP_PAX2
000DB1r 2  B5 02            lda $02,x
000DB3r 2  85 95            sta TEMP_PAX1
000DB5r 2               
000DB5r 2               ; src/prelude.fth:38:20 in `i`
000DB5r 2               @OPCODE_428:   ; [c64_ir] TempLoad
000DB5r 2  E8               inx
000DB6r 2  E8               inx
000DB7r 2  A5 95            lda TEMP_PAX1
000DB9r 2  95 00            sta $00,x
000DBBr 2  A5 96            lda TEMP_PAX2
000DBDr 2  95 01            sta $01,x
000DBFr 2               
000DBFr 2               ; src/prelude.fth:38:26 in `i`
000DBFr 2               @OPCODE_429:   ; [c64_ir] AltPush
000DBFr 2  CA               dex
000DC0r 2  CA               dex
000DC1r 2  B5 03            lda $03,x
000DC3r 2  48               pha
000DC4r 2  B5 02            lda $02,x
000DC6r 2  48               pha
000DC7r 2               
000DC7r 2               ; src/prelude.fth:38:29 in `i`
000DC7r 2               @OPCODE_430:   ; [c64_ir] AltPush
000DC7r 2  CA               dex
000DC8r 2  CA               dex
000DC9r 2  B5 03            lda $03,x
000DCBr 2  48               pha
000DCCr 2  B5 02            lda $02,x
000DCEr 2  48               pha
000DCFr 2               
000DCFr 2               ; src/prelude.fth:38:32 in `i`
000DCFr 2               @OPCODE_431:   ; [c64_ir] AltPush
000DCFr 2  CA               dex
000DD0r 2  CA               dex
000DD1r 2  B5 03            lda $03,x
000DD3r 2  48               pha
000DD4r 2  B5 02            lda $02,x
000DD6r 2  48               pha
000DD7r 2               
000DD7r 2               ; src/prelude.fth:38:35 in `i`
000DD7r 2               @OPCODE_432:   ; [c64_ir] TempLoad
000DD7r 2  E8               inx
000DD8r 2  E8               inx
000DD9r 2  A5 95            lda TEMP_PAX1
000DDBr 2  95 00            sta $00,x
000DDDr 2  A5 96            lda TEMP_PAX2
000DDFr 2  95 01            sta $01,x
000DE1r 2               
000DE1r 2               ; <inline>:0:0 in `main`
000DE1r 2               @OPCODE_433:   ; [c64_ir] AltPop
000DE1r 2  E8               inx
000DE2r 2  E8               inx
000DE3r 2  68               pla
000DE4r 2  95 00            sta $00,x
000DE6r 2  68               pla
000DE7r 2  95 01            sta $01,x
000DE9r 2               
000DE9r 2               ; <inline>:0:0 in `main`
000DE9r 2               @OPCODE_434:   ; [c64_ir] Drop
000DE9r 2  CA               dex
000DEAr 2  CA               dex
000DEBr 2               
000DEBr 2               ; snake.fth:71:21 in `draw-walls`
000DEBr 2               @OPCODE_435:   ; [c64_ir] Add
000DEBr 2                   ; 21
000DEBr 2  CA               dex
000DECr 2  CA               dex
000DEDr 2  18               clc
000DEEr 2  B5 00            lda $00,x
000DF0r 2  75 02            adc $02,x
000DF2r 2  95 00            sta $00,x
000DF4r 2  B5 01            lda $01,x
000DF6r 2  75 03            adc $03,x
000DF8r 2  95 01            sta $01,x
000DFAr 2               
000DFAr 2               ; <inline>:0:0 in `main`
000DFAr 2               @OPCODE_436:   ; [c64_ir] PushLiteral(7777)
000DFAr 2  E8               inx
000DFBr 2  E8               inx
000DFCr 2  A9 61            lda #97
000DFEr 2  95 00            sta $00,x
000E00r 2  A9 1E            lda #30
000E02r 2  95 01            sta $01,x
000E04r 2               
000E04r 2               ; <inline>:0:0 in `main`
000E04r 2               @OPCODE_437:   ; [c64_ir] AltPush
000E04r 2  CA               dex
000E05r 2  CA               dex
000E06r 2  B5 03            lda $03,x
000E08r 2  48               pha
000E09r 2  B5 02            lda $02,x
000E0Br 2  48               pha
000E0Cr 2               
000E0Cr 2               ; snake.fth:49:34 in `draw-index`
000E0Cr 2               @OPCODE_438:   ; [c64_ir] PushLiteral(1024)
000E0Cr 2  E8               inx
000E0Dr 2  E8               inx
000E0Er 2  A9 00            lda #0
000E10r 2  95 00            sta $00,x
000E12r 2  A9 04            lda #4
000E14r 2  95 01            sta $01,x
000E16r 2               
000E16r 2               ; snake.fth:49:43 in `draw-index`
000E16r 2               @OPCODE_439:   ; [c64_ir] Add
000E16r 2                   ; 21
000E16r 2  CA               dex
000E17r 2  CA               dex
000E18r 2  18               clc
000E19r 2  B5 00            lda $00,x
000E1Br 2  75 02            adc $02,x
000E1Dr 2  95 00            sta $00,x
000E1Fr 2  B5 01            lda $01,x
000E21r 2  75 03            adc $03,x
000E23r 2  95 01            sta $01,x
000E25r 2               
000E25r 2               ; snake.fth:49:45 in `draw-index`
000E25r 2               @OPCODE_440:   ; [c64_ir] Store8
000E25r 2  CA               dex
000E26r 2  CA               dex
000E27r 2  CA               dex
000E28r 2  CA               dex
000E29r 2  B5 02            lda $02,x
000E2Br 2  81 04            sta ($04,x)
000E2Dr 2                   ; TODO high byte
000E2Dr 2               
000E2Dr 2               ; <inline>:0:0 in `main`
000E2Dr 2               @OPCODE_441:   ; [c64_ir] AltPop
000E2Dr 2  E8               inx
000E2Er 2  E8               inx
000E2Fr 2  68               pla
000E30r 2  95 00            sta $00,x
000E32r 2  68               pla
000E33r 2  95 01            sta $01,x
000E35r 2               
000E35r 2               ; <inline>:0:0 in `main`
000E35r 2               @OPCODE_442:   ; [c64_ir] Drop
000E35r 2  CA               dex
000E36r 2  CA               dex
000E37r 2               
000E37r 2               ; <inline>:0:0 in `main`
000E37r 2               @OPCODE_443:   ; [c64_ir] PushLiteral(7777)
000E37r 2  E8               inx
000E38r 2  E8               inx
000E39r 2  A9 61            lda #97
000E3Br 2  95 00            sta $00,x
000E3Dr 2  A9 1E            lda #30
000E3Fr 2  95 01            sta $01,x
000E41r 2               
000E41r 2               ; <inline>:0:0 in `main`
000E41r 2               @OPCODE_444:   ; [c64_ir] AltPush
000E41r 2  CA               dex
000E42r 2  CA               dex
000E43r 2  B5 03            lda $03,x
000E45r 2  48               pha
000E46r 2  B5 02            lda $02,x
000E48r 2  48               pha
000E49r 2               
000E49r 2               ; src/prelude.fth:33:12 in `loopimpl`
000E49r 2               @OPCODE_445:   ; [c64_ir] AltPop
000E49r 2  E8               inx
000E4Ar 2  E8               inx
000E4Br 2  68               pla
000E4Cr 2  95 00            sta $00,x
000E4Er 2  68               pla
000E4Fr 2  95 01            sta $01,x
000E51r 2               
000E51r 2               ; src/prelude.fth:33:15 in `loopimpl`
000E51r 2               @OPCODE_446:   ; [c64_ir] AltPop
000E51r 2  E8               inx
000E52r 2  E8               inx
000E53r 2  68               pla
000E54r 2  95 00            sta $00,x
000E56r 2  68               pla
000E57r 2  95 01            sta $01,x
000E59r 2               
000E59r 2               ; src/prelude.fth:33:18 in `loopimpl`
000E59r 2               @OPCODE_447:   ; [c64_ir] AltPop
000E59r 2  E8               inx
000E5Ar 2  E8               inx
000E5Br 2  68               pla
000E5Cr 2  95 00            sta $00,x
000E5Er 2  68               pla
000E5Fr 2  95 01            sta $01,x
000E61r 2               
000E61r 2               ; <inline>:0:0 in `main`
000E61r 2               @OPCODE_448:   ; [c64_ir] PushLiteral(7777)
000E61r 2  E8               inx
000E62r 2  E8               inx
000E63r 2  A9 61            lda #97
000E65r 2  95 00            sta $00,x
000E67r 2  A9 1E            lda #30
000E69r 2  95 01            sta $01,x
000E6Br 2               
000E6Br 2               ; <inline>:0:0 in `main`
000E6Br 2               @OPCODE_449:   ; [c64_ir] AltPush
000E6Br 2  CA               dex
000E6Cr 2  CA               dex
000E6Dr 2  B5 03            lda $03,x
000E6Fr 2  48               pha
000E70r 2  B5 02            lda $02,x
000E72r 2  48               pha
000E73r 2               
000E73r 2               ; src/prelude.fth:18:8 in `1+`
000E73r 2               @OPCODE_450:   ; [c64_ir] PushLiteral(1)
000E73r 2  E8               inx
000E74r 2  E8               inx
000E75r 2  A9 01            lda #1
000E77r 2  95 00            sta $00,x
000E79r 2  A9 00            lda #0
000E7Br 2  95 01            sta $01,x
000E7Dr 2               
000E7Dr 2               ; src/prelude.fth:18:10 in `1+`
000E7Dr 2               @OPCODE_451:   ; [c64_ir] Add
000E7Dr 2                   ; 21
000E7Dr 2  CA               dex
000E7Er 2  CA               dex
000E7Fr 2  18               clc
000E80r 2  B5 00            lda $00,x
000E82r 2  75 02            adc $02,x
000E84r 2  95 00            sta $00,x
000E86r 2  B5 01            lda $01,x
000E88r 2  75 03            adc $03,x
000E8Ar 2  95 01            sta $01,x
000E8Cr 2               
000E8Cr 2               ; <inline>:0:0 in `main`
000E8Cr 2               @OPCODE_452:   ; [c64_ir] AltPop
000E8Cr 2  E8               inx
000E8Dr 2  E8               inx
000E8Er 2  68               pla
000E8Fr 2  95 00            sta $00,x
000E91r 2  68               pla
000E92r 2  95 01            sta $01,x
000E94r 2               
000E94r 2               ; <inline>:0:0 in `main`
000E94r 2               @OPCODE_453:   ; [c64_ir] Drop
000E94r 2  CA               dex
000E95r 2  CA               dex
000E96r 2               
000E96r 2               ; <inline>:0:0 in `main`
000E96r 2               @OPCODE_454:   ; [c64_ir] PushLiteral(7777)
000E96r 2  E8               inx
000E97r 2  E8               inx
000E98r 2  A9 61            lda #97
000E9Ar 2  95 00            sta $00,x
000E9Cr 2  A9 1E            lda #30
000E9Er 2  95 01            sta $01,x
000EA0r 2               
000EA0r 2               ; <inline>:0:0 in `main`
000EA0r 2               @OPCODE_455:   ; [c64_ir] AltPush
000EA0r 2  CA               dex
000EA1r 2  CA               dex
000EA2r 2  B5 03            lda $03,x
000EA4r 2  48               pha
000EA5r 2  B5 02            lda $02,x
000EA7r 2  48               pha
000EA8r 2               
000EA8r 2               ; <inline>:0:0 in `main`
000EA8r 2               @OPCODE_456:   ; [c64_ir] PushLiteral(7777)
000EA8r 2  E8               inx
000EA9r 2  E8               inx
000EAAr 2  A9 61            lda #97
000EACr 2  95 00            sta $00,x
000EAEr 2  A9 1E            lda #30
000EB0r 2  95 01            sta $01,x
000EB2r 2               
000EB2r 2               ; <inline>:0:0 in `main`
000EB2r 2               @OPCODE_457:   ; [c64_ir] AltPush
000EB2r 2  CA               dex
000EB3r 2  CA               dex
000EB4r 2  B5 03            lda $03,x
000EB6r 2  48               pha
000EB7r 2  B5 02            lda $02,x
000EB9r 2  48               pha
000EBAr 2               
000EBAr 2               ; src/prelude.fth:4:10 in `over`
000EBAr 2               @OPCODE_458:   ; [c64_ir] AltPush
000EBAr 2  CA               dex
000EBBr 2  CA               dex
000EBCr 2  B5 03            lda $03,x
000EBEr 2  48               pha
000EBFr 2  B5 02            lda $02,x
000EC1r 2  48               pha
000EC2r 2               
000EC2r 2               ; src/prelude.fth:4:13 in `over`
000EC2r 2               @OPCODE_459:   ; [c64_ir] TempStore
000EC2r 2  CA               dex
000EC3r 2  CA               dex
000EC4r 2  B5 03            lda $03,x
000EC6r 2  85 96            sta TEMP_PAX2
000EC8r 2  B5 02            lda $02,x
000ECAr 2  85 95            sta TEMP_PAX1
000ECCr 2               
000ECCr 2               ; src/prelude.fth:4:19 in `over`
000ECCr 2               @OPCODE_460:   ; [c64_ir] TempLoad
000ECCr 2  E8               inx
000ECDr 2  E8               inx
000ECEr 2  A5 95            lda TEMP_PAX1
000ED0r 2  95 00            sta $00,x
000ED2r 2  A5 96            lda TEMP_PAX2
000ED4r 2  95 01            sta $01,x
000ED6r 2               
000ED6r 2               ; src/prelude.fth:4:25 in `over`
000ED6r 2               @OPCODE_461:   ; [c64_ir] AltPop
000ED6r 2  E8               inx
000ED7r 2  E8               inx
000ED8r 2  68               pla
000ED9r 2  95 00            sta $00,x
000EDBr 2  68               pla
000EDCr 2  95 01            sta $01,x
000EDEr 2               
000EDEr 2               ; src/prelude.fth:4:28 in `over`
000EDEr 2               @OPCODE_462:   ; [c64_ir] TempLoad
000EDEr 2  E8               inx
000EDFr 2  E8               inx
000EE0r 2  A5 95            lda TEMP_PAX1
000EE2r 2  95 00            sta $00,x
000EE4r 2  A5 96            lda TEMP_PAX2
000EE6r 2  95 01            sta $01,x
000EE8r 2               
000EE8r 2               ; <inline>:0:0 in `main`
000EE8r 2               @OPCODE_463:   ; [c64_ir] AltPop
000EE8r 2  E8               inx
000EE9r 2  E8               inx
000EEAr 2  68               pla
000EEBr 2  95 00            sta $00,x
000EEDr 2  68               pla
000EEEr 2  95 01            sta $01,x
000EF0r 2               
000EF0r 2               ; <inline>:0:0 in `main`
000EF0r 2               @OPCODE_464:   ; [c64_ir] Drop
000EF0r 2  CA               dex
000EF1r 2  CA               dex
000EF2r 2               
000EF2r 2               ; <inline>:0:0 in `main`
000EF2r 2               @OPCODE_465:   ; [c64_ir] PushLiteral(7777)
000EF2r 2  E8               inx
000EF3r 2  E8               inx
000EF4r 2  A9 61            lda #97
000EF6r 2  95 00            sta $00,x
000EF8r 2  A9 1E            lda #30
000EFAr 2  95 01            sta $01,x
000EFCr 2               
000EFCr 2               ; <inline>:0:0 in `main`
000EFCr 2               @OPCODE_466:   ; [c64_ir] AltPush
000EFCr 2  CA               dex
000EFDr 2  CA               dex
000EFEr 2  B5 03            lda $03,x
000F00r 2  48               pha
000F01r 2  B5 02            lda $02,x
000F03r 2  48               pha
000F04r 2               
000F04r 2               ; src/prelude.fth:4:10 in `over`
000F04r 2               @OPCODE_467:   ; [c64_ir] AltPush
000F04r 2  CA               dex
000F05r 2  CA               dex
000F06r 2  B5 03            lda $03,x
000F08r 2  48               pha
000F09r 2  B5 02            lda $02,x
000F0Br 2  48               pha
000F0Cr 2               
000F0Cr 2               ; src/prelude.fth:4:13 in `over`
000F0Cr 2               @OPCODE_468:   ; [c64_ir] TempStore
000F0Cr 2  CA               dex
000F0Dr 2  CA               dex
000F0Er 2  B5 03            lda $03,x
000F10r 2  85 96            sta TEMP_PAX2
000F12r 2  B5 02            lda $02,x
000F14r 2  85 95            sta TEMP_PAX1
000F16r 2               
000F16r 2               ; src/prelude.fth:4:19 in `over`
000F16r 2               @OPCODE_469:   ; [c64_ir] TempLoad
000F16r 2  E8               inx
000F17r 2  E8               inx
000F18r 2  A5 95            lda TEMP_PAX1
000F1Ar 2  95 00            sta $00,x
000F1Cr 2  A5 96            lda TEMP_PAX2
000F1Er 2  95 01            sta $01,x
000F20r 2               
000F20r 2               ; src/prelude.fth:4:25 in `over`
000F20r 2               @OPCODE_470:   ; [c64_ir] AltPop
000F20r 2  E8               inx
000F21r 2  E8               inx
000F22r 2  68               pla
000F23r 2  95 00            sta $00,x
000F25r 2  68               pla
000F26r 2  95 01            sta $01,x
000F28r 2               
000F28r 2               ; src/prelude.fth:4:28 in `over`
000F28r 2               @OPCODE_471:   ; [c64_ir] TempLoad
000F28r 2  E8               inx
000F29r 2  E8               inx
000F2Ar 2  A5 95            lda TEMP_PAX1
000F2Cr 2  95 00            sta $00,x
000F2Er 2  A5 96            lda TEMP_PAX2
000F30r 2  95 01            sta $01,x
000F32r 2               
000F32r 2               ; <inline>:0:0 in `main`
000F32r 2               @OPCODE_472:   ; [c64_ir] AltPop
000F32r 2  E8               inx
000F33r 2  E8               inx
000F34r 2  68               pla
000F35r 2  95 00            sta $00,x
000F37r 2  68               pla
000F38r 2  95 01            sta $01,x
000F3Ar 2               
000F3Ar 2               ; <inline>:0:0 in `main`
000F3Ar 2               @OPCODE_473:   ; [c64_ir] Drop
000F3Ar 2  CA               dex
000F3Br 2  CA               dex
000F3Cr 2               
000F3Cr 2               ; <inline>:0:0 in `main`
000F3Cr 2               @OPCODE_474:   ; [c64_ir] AltPop
000F3Cr 2  E8               inx
000F3Dr 2  E8               inx
000F3Er 2  68               pla
000F3Fr 2  95 00            sta $00,x
000F41r 2  68               pla
000F42r 2  95 01            sta $01,x
000F44r 2               
000F44r 2               ; <inline>:0:0 in `main`
000F44r 2               @OPCODE_475:   ; [c64_ir] Drop
000F44r 2  CA               dex
000F45r 2  CA               dex
000F46r 2               
000F46r 2               ; src/prelude.fth:33:29 in `loopimpl`
000F46r 2               @OPCODE_476:   ; [c64_ir] AltPush
000F46r 2  CA               dex
000F47r 2  CA               dex
000F48r 2  B5 03            lda $03,x
000F4Ar 2  48               pha
000F4Br 2  B5 02            lda $02,x
000F4Dr 2  48               pha
000F4Er 2               
000F4Er 2               ; src/prelude.fth:33:32 in `loopimpl`
000F4Er 2               @OPCODE_477:   ; [c64_ir] AltPush
000F4Er 2  CA               dex
000F4Fr 2  CA               dex
000F50r 2  B5 03            lda $03,x
000F52r 2  48               pha
000F53r 2  B5 02            lda $02,x
000F55r 2  48               pha
000F56r 2               
000F56r 2               ; <inline>:0:0 in `main`
000F56r 2               @OPCODE_478:   ; [c64_ir] PushLiteral(7777)
000F56r 2  E8               inx
000F57r 2  E8               inx
000F58r 2  A9 61            lda #97
000F5Ar 2  95 00            sta $00,x
000F5Cr 2  A9 1E            lda #30
000F5Er 2  95 01            sta $01,x
000F60r 2               
000F60r 2               ; <inline>:0:0 in `main`
000F60r 2               @OPCODE_479:   ; [c64_ir] AltPush
000F60r 2  CA               dex
000F61r 2  CA               dex
000F62r 2  B5 03            lda $03,x
000F64r 2  48               pha
000F65r 2  B5 02            lda $02,x
000F67r 2  48               pha
000F68r 2               
000F68r 2               ; <inline>:0:0 in `main`
000F68r 2               @OPCODE_480:   ; [c64_ir] PushLiteral(7777)
000F68r 2  E8               inx
000F69r 2  E8               inx
000F6Ar 2  A9 61            lda #97
000F6Cr 2  95 00            sta $00,x
000F6Er 2  A9 1E            lda #30
000F70r 2  95 01            sta $01,x
000F72r 2               
000F72r 2               ; <inline>:0:0 in `main`
000F72r 2               @OPCODE_481:   ; [c64_ir] AltPush
000F72r 2  CA               dex
000F73r 2  CA               dex
000F74r 2  B5 03            lda $03,x
000F76r 2  48               pha
000F77r 2  B5 02            lda $02,x
000F79r 2  48               pha
000F7Ar 2               
000F7Ar 2               ; <inline>:0:0 in `main`
000F7Ar 2               @OPCODE_482:   ; [c64_ir] PushLiteral(7777)
000F7Ar 2  E8               inx
000F7Br 2  E8               inx
000F7Cr 2  A9 61            lda #97
000F7Er 2  95 00            sta $00,x
000F80r 2  A9 1E            lda #30
000F82r 2  95 01            sta $01,x
000F84r 2               
000F84r 2               ; <inline>:0:0 in `main`
000F84r 2               @OPCODE_483:   ; [c64_ir] AltPush
000F84r 2  CA               dex
000F85r 2  CA               dex
000F86r 2  B5 03            lda $03,x
000F88r 2  48               pha
000F89r 2  B5 02            lda $02,x
000F8Br 2  48               pha
000F8Cr 2               
000F8Cr 2               ; <inline>:0:0 in `main`
000F8Cr 2               @OPCODE_484:   ; [c64_ir] PushLiteral(7777)
000F8Cr 2  E8               inx
000F8Dr 2  E8               inx
000F8Er 2  A9 61            lda #97
000F90r 2  95 00            sta $00,x
000F92r 2  A9 1E            lda #30
000F94r 2  95 01            sta $01,x
000F96r 2               
000F96r 2               ; <inline>:0:0 in `main`
000F96r 2               @OPCODE_485:   ; [c64_ir] AltPush
000F96r 2  CA               dex
000F97r 2  CA               dex
000F98r 2  B5 03            lda $03,x
000F9Ar 2  48               pha
000F9Br 2  B5 02            lda $02,x
000F9Dr 2  48               pha
000F9Er 2               
000F9Er 2               ; src/prelude.fth:14:12 in `invert`
000F9Er 2               @OPCODE_486:   ; [c64_ir] PushLiteral(-1)
000F9Er 2  E8               inx
000F9Fr 2  E8               inx
000FA0r 2  A9 FF            lda #255
000FA2r 2  95 00            sta $00,x
000FA4r 2  A9 FF            lda #255
000FA6r 2  95 01            sta $01,x
000FA8r 2               
000FA8r 2               ; src/prelude.fth:14:15 in `invert`
000FA8r 2               @OPCODE_487:   ; [c64_ir] Nand
000FA8r 2                   ; 26
000FA8r 2  CA               dex
000FA9r 2  CA               dex
000FAAr 2  B5 00            lda $00,x
000FACr 2  35 02            and $02,x
000FAEr 2  49 FF            eor #$ff
000FB0r 2  95 00            sta $00,x
000FB2r 2  B5 01            lda $01,x
000FB4r 2  35 03            and $03,x
000FB6r 2  49 FF            eor #$ff
000FB8r 2  95 01            sta $01,x
000FBAr 2               
000FBAr 2               ; <inline>:0:0 in `main`
000FBAr 2               @OPCODE_488:   ; [c64_ir] AltPop
000FBAr 2  E8               inx
000FBBr 2  E8               inx
000FBCr 2  68               pla
000FBDr 2  95 00            sta $00,x
000FBFr 2  68               pla
000FC0r 2  95 01            sta $01,x
000FC2r 2               
000FC2r 2               ; <inline>:0:0 in `main`
000FC2r 2               @OPCODE_489:   ; [c64_ir] Drop
000FC2r 2  CA               dex
000FC3r 2  CA               dex
000FC4r 2               
000FC4r 2               ; src/prelude.fth:15:19 in `negate`
000FC4r 2               @OPCODE_490:   ; [c64_ir] PushLiteral(1)
000FC4r 2  E8               inx
000FC5r 2  E8               inx
000FC6r 2  A9 01            lda #1
000FC8r 2  95 00            sta $00,x
000FCAr 2  A9 00            lda #0
000FCCr 2  95 01            sta $01,x
000FCEr 2               
000FCEr 2               ; src/prelude.fth:15:21 in `negate`
000FCEr 2               @OPCODE_491:   ; [c64_ir] Add
000FCEr 2                   ; 21
000FCEr 2  CA               dex
000FCFr 2  CA               dex
000FD0r 2  18               clc
000FD1r 2  B5 00            lda $00,x
000FD3r 2  75 02            adc $02,x
000FD5r 2  95 00            sta $00,x
000FD7r 2  B5 01            lda $01,x
000FD9r 2  75 03            adc $03,x
000FDBr 2  95 01            sta $01,x
000FDDr 2               
000FDDr 2               ; <inline>:0:0 in `main`
000FDDr 2               @OPCODE_492:   ; [c64_ir] AltPop
000FDDr 2  E8               inx
000FDEr 2  E8               inx
000FDFr 2  68               pla
000FE0r 2  95 00            sta $00,x
000FE2r 2  68               pla
000FE3r 2  95 01            sta $01,x
000FE5r 2               
000FE5r 2               ; <inline>:0:0 in `main`
000FE5r 2               @OPCODE_493:   ; [c64_ir] Drop
000FE5r 2  CA               dex
000FE6r 2  CA               dex
000FE7r 2               
000FE7r 2               ; src/prelude.fth:16:19 in `-`
000FE7r 2               @OPCODE_494:   ; [c64_ir] Add
000FE7r 2                   ; 21
000FE7r 2  CA               dex
000FE8r 2  CA               dex
000FE9r 2  18               clc
000FEAr 2  B5 00            lda $00,x
000FECr 2  75 02            adc $02,x
000FEEr 2  95 00            sta $00,x
000FF0r 2  B5 01            lda $01,x
000FF2r 2  75 03            adc $03,x
000FF4r 2  95 01            sta $01,x
000FF6r 2               
000FF6r 2               ; <inline>:0:0 in `main`
000FF6r 2               @OPCODE_495:   ; [c64_ir] AltPop
000FF6r 2  E8               inx
000FF7r 2  E8               inx
000FF8r 2  68               pla
000FF9r 2  95 00            sta $00,x
000FFBr 2  68               pla
000FFCr 2  95 01            sta $01,x
000FFEr 2               
000FFEr 2               ; <inline>:0:0 in `main`
000FFEr 2               @OPCODE_496:   ; [c64_ir] Drop
000FFEr 2  CA               dex
000FFFr 2  CA               dex
001000r 2               
001000r 2               ; <inline>:0:0 in `main`
001000r 2               @OPCODE_497:   ; [c64_ir] PushLiteral(7777)
001000r 2  E8               inx
001001r 2  E8               inx
001002r 2  A9 61            lda #97
001004r 2  95 00            sta $00,x
001006r 2  A9 1E            lda #30
001008r 2  95 01            sta $01,x
00100Ar 2               
00100Ar 2               ; <inline>:0:0 in `main`
00100Ar 2               @OPCODE_498:   ; [c64_ir] AltPush
00100Ar 2  CA               dex
00100Br 2  CA               dex
00100Cr 2  B5 03            lda $03,x
00100Er 2  48               pha
00100Fr 2  B5 02            lda $02,x
001011r 2  48               pha
001012r 2               
001012r 2               ; src/prelude.fth:21:8 in `0=`
001012r 2               @OPCODE_499:   ; [c64_ir] JumpIf0(22)
001012r 2  CA               dex
001013r 2  CA               dex
001014r 2  B5 02            lda $02,x
001016r 2  15 03            ora $03,x
001018r 2  D0 03            bne *+5
00101Ar 2  4C rr rr         jmp @target_22
00101Dr 2               
00101Dr 2               @target_21:
00101Dr 2               
00101Dr 2               ; src/prelude.fth:21:11 in `0=`
00101Dr 2               @OPCODE_501:   ; [c64_ir] PushLiteral(0)
00101Dr 2  E8               inx
00101Er 2  E8               inx
00101Fr 2  A9 00            lda #0
001021r 2  95 00            sta $00,x
001023r 2  A9 00            lda #0
001025r 2  95 01            sta $01,x
001027r 2               
001027r 2               ; src/prelude.fth:21:13 in `0=`
001027r 2               @OPCODE_502:   ; [c64_ir] JumpElse(23)
001027r 2  4C rr rr         jmp @target_23
00102Ar 2               
00102Ar 2               @target_22:
00102Ar 2               
00102Ar 2               ; src/prelude.fth:21:18 in `0=`
00102Ar 2               @OPCODE_504:   ; [c64_ir] PushLiteral(-1)
00102Ar 2  E8               inx
00102Br 2  E8               inx
00102Cr 2  A9 FF            lda #255
00102Er 2  95 00            sta $00,x
001030r 2  A9 FF            lda #255
001032r 2  95 01            sta $01,x
001034r 2               
001034r 2               ; src/prelude.fth:21:21 in `0=`
001034r 2               @OPCODE_505:   ; [c64_ir] JumpTarget(22)
001034r 2               
001034r 2               @target_23:
001034r 2               
001034r 2               ; <inline>:0:0 in `main`
001034r 2               @OPCODE_507:   ; [c64_ir] AltPop
001034r 2  E8               inx
001035r 2  E8               inx
001036r 2  68               pla
001037r 2  95 00            sta $00,x
001039r 2  68               pla
00103Ar 2  95 01            sta $01,x
00103Cr 2               
00103Cr 2               ; <inline>:0:0 in `main`
00103Cr 2               @OPCODE_508:   ; [c64_ir] Drop
00103Cr 2  CA               dex
00103Dr 2  CA               dex
00103Er 2               
00103Er 2               ; <inline>:0:0 in `main`
00103Er 2               @OPCODE_509:   ; [c64_ir] AltPop
00103Er 2  E8               inx
00103Fr 2  E8               inx
001040r 2  68               pla
001041r 2  95 00            sta $00,x
001043r 2  68               pla
001044r 2  95 01            sta $01,x
001046r 2               
001046r 2               ; <inline>:0:0 in `main`
001046r 2               @OPCODE_510:   ; [c64_ir] Drop
001046r 2  CA               dex
001047r 2  CA               dex
001048r 2               
001048r 2               ; <inline>:0:0 in `main`
001048r 2               @OPCODE_511:   ; [c64_ir] PushLiteral(7777)
001048r 2  E8               inx
001049r 2  E8               inx
00104Ar 2  A9 61            lda #97
00104Cr 2  95 00            sta $00,x
00104Er 2  A9 1E            lda #30
001050r 2  95 01            sta $01,x
001052r 2               
001052r 2               ; <inline>:0:0 in `main`
001052r 2               @OPCODE_512:   ; [c64_ir] AltPush
001052r 2  CA               dex
001053r 2  CA               dex
001054r 2  B5 03            lda $03,x
001056r 2  48               pha
001057r 2  B5 02            lda $02,x
001059r 2  48               pha
00105Ar 2               
00105Ar 2               ; src/prelude.fth:3:10 in `swap`
00105Ar 2               @OPCODE_513:   ; [c64_ir] AltPush
00105Ar 2  CA               dex
00105Br 2  CA               dex
00105Cr 2  B5 03            lda $03,x
00105Er 2  48               pha
00105Fr 2  B5 02            lda $02,x
001061r 2  48               pha
001062r 2               
001062r 2               ; src/prelude.fth:3:13 in `swap`
001062r 2               @OPCODE_514:   ; [c64_ir] TempStore
001062r 2  CA               dex
001063r 2  CA               dex
001064r 2  B5 03            lda $03,x
001066r 2  85 96            sta TEMP_PAX2
001068r 2  B5 02            lda $02,x
00106Ar 2  85 95            sta TEMP_PAX1
00106Cr 2               
00106Cr 2               ; src/prelude.fth:3:19 in `swap`
00106Cr 2               @OPCODE_515:   ; [c64_ir] AltPop
00106Cr 2  E8               inx
00106Dr 2  E8               inx
00106Er 2  68               pla
00106Fr 2  95 00            sta $00,x
001071r 2  68               pla
001072r 2  95 01            sta $01,x
001074r 2               
001074r 2               ; src/prelude.fth:3:22 in `swap`
001074r 2               @OPCODE_516:   ; [c64_ir] TempLoad
001074r 2  E8               inx
001075r 2  E8               inx
001076r 2  A5 95            lda TEMP_PAX1
001078r 2  95 00            sta $00,x
00107Ar 2  A5 96            lda TEMP_PAX2
00107Cr 2  95 01            sta $01,x
00107Er 2               
00107Er 2               ; <inline>:0:0 in `main`
00107Er 2               @OPCODE_517:   ; [c64_ir] AltPop
00107Er 2  E8               inx
00107Fr 2  E8               inx
001080r 2  68               pla
001081r 2  95 00            sta $00,x
001083r 2  68               pla
001084r 2  95 01            sta $01,x
001086r 2               
001086r 2               ; <inline>:0:0 in `main`
001086r 2               @OPCODE_518:   ; [c64_ir] Drop
001086r 2  CA               dex
001087r 2  CA               dex
001088r 2               
001088r 2               ; src/prelude.fth:33:42 in `loopimpl`
001088r 2               @OPCODE_519:   ; [c64_ir] AltPush
001088r 2  CA               dex
001089r 2  CA               dex
00108Ar 2  B5 03            lda $03,x
00108Cr 2  48               pha
00108Dr 2  B5 02            lda $02,x
00108Fr 2  48               pha
001090r 2               
001090r 2               ; <inline>:0:0 in `main`
001090r 2               @OPCODE_520:   ; [c64_ir] AltPop
001090r 2  E8               inx
001091r 2  E8               inx
001092r 2  68               pla
001093r 2  95 00            sta $00,x
001095r 2  68               pla
001096r 2  95 01            sta $01,x
001098r 2               
001098r 2               ; <inline>:0:0 in `main`
001098r 2               @OPCODE_521:   ; [c64_ir] Drop
001098r 2  CA               dex
001099r 2  CA               dex
00109Ar 2               
00109Ar 2               ; snake.fth:72:5 in `draw-walls`
00109Ar 2               @OPCODE_522:   ; [c64_ir] LoopIf0(20)
00109Ar 2  CA               dex
00109Br 2  CA               dex
00109Cr 2  B5 02            lda $02,x
00109Er 2  15 03            ora $03,x
0010A0r 2  D0 03            bne *+5
0010A2r 2  4C rr rr         jmp @target_20
0010A5r 2               
0010A5r 2               @target_24:
0010A5r 2               
0010A5r 2               ; snake.fth:72:5 in `draw-walls`
0010A5r 2               @OPCODE_524:   ; [c64_ir] AltPop
0010A5r 2  E8               inx
0010A6r 2  E8               inx
0010A7r 2  68               pla
0010A8r 2  95 00            sta $00,x
0010AAr 2  68               pla
0010ABr 2  95 01            sta $01,x
0010ADr 2               
0010ADr 2               ; snake.fth:72:5 in `draw-walls`
0010ADr 2               @OPCODE_525:   ; [c64_ir] Drop
0010ADr 2  CA               dex
0010AEr 2  CA               dex
0010AFr 2               
0010AFr 2               ; snake.fth:72:5 in `draw-walls`
0010AFr 2               @OPCODE_526:   ; [c64_ir] AltPop
0010AFr 2  E8               inx
0010B0r 2  E8               inx
0010B1r 2  68               pla
0010B2r 2  95 00            sta $00,x
0010B4r 2  68               pla
0010B5r 2  95 01            sta $01,x
0010B7r 2               
0010B7r 2               ; snake.fth:72:5 in `draw-walls`
0010B7r 2               @OPCODE_527:   ; [c64_ir] Drop
0010B7r 2  CA               dex
0010B8r 2  CA               dex
0010B9r 2               
0010B9r 2               ; snake.fth:73:5 in `draw-walls`
0010B9r 2               @OPCODE_528:   ; [c64_ir] Drop
0010B9r 2  CA               dex
0010BAr 2  CA               dex
0010BBr 2               
0010BBr 2               ; snake.fth:76:5 in `draw-walls`
0010BBr 2               @OPCODE_529:   ; [c64_ir] PushLiteral(40)
0010BBr 2  E8               inx
0010BCr 2  E8               inx
0010BDr 2  A9 28            lda #40
0010BFr 2  95 00            sta $00,x
0010C1r 2  A9 00            lda #0
0010C3r 2  95 01            sta $01,x
0010C5r 2               
0010C5r 2               ; snake.fth:76:11 in `draw-walls`
0010C5r 2               @OPCODE_530:   ; [c64_ir] PushLiteral(0)
0010C5r 2  E8               inx
0010C6r 2  E8               inx
0010C7r 2  A9 00            lda #0
0010C9r 2  95 00            sta $00,x
0010CBr 2  A9 00            lda #0
0010CDr 2  95 01            sta $01,x
0010CFr 2               
0010CFr 2               ; snake.fth:76:13 in `draw-walls`
0010CFr 2               @OPCODE_531:   ; [c64_ir] AltPush
0010CFr 2  CA               dex
0010D0r 2  CA               dex
0010D1r 2  B5 03            lda $03,x
0010D3r 2  48               pha
0010D4r 2  B5 02            lda $02,x
0010D6r 2  48               pha
0010D7r 2               
0010D7r 2               ; snake.fth:76:13 in `draw-walls`
0010D7r 2               @OPCODE_532:   ; [c64_ir] AltPush
0010D7r 2  CA               dex
0010D8r 2  CA               dex
0010D9r 2  B5 03            lda $03,x
0010DBr 2  48               pha
0010DCr 2  B5 02            lda $02,x
0010DEr 2  48               pha
0010DFr 2               
0010DFr 2               ; snake.fth:76:13 in `draw-walls`
0010DFr 2               @OPCODE_533:   ; [c64_ir] LoopTarget(24)
0010DFr 2               
0010DFr 2               @target_25:
0010DFr 2               
0010DFr 2               ; snake.fth:77:9 in `draw-walls`
0010DFr 2               @OPCODE_535:   ; [c64_ir] PushLiteral(230)
0010DFr 2  E8               inx
0010E0r 2  E8               inx
0010E1r 2  A9 E6            lda #230
0010E3r 2  95 00            sta $00,x
0010E5r 2  A9 00            lda #0
0010E7r 2  95 01            sta $01,x
0010E9r 2               
0010E9r 2               ; <inline>:0:0 in `main`
0010E9r 2               @OPCODE_536:   ; [c64_ir] PushLiteral(7777)
0010E9r 2  E8               inx
0010EAr 2  E8               inx
0010EBr 2  A9 61            lda #97
0010EDr 2  95 00            sta $00,x
0010EFr 2  A9 1E            lda #30
0010F1r 2  95 01            sta $01,x
0010F3r 2               
0010F3r 2               ; <inline>:0:0 in `main`
0010F3r 2               @OPCODE_537:   ; [c64_ir] AltPush
0010F3r 2  CA               dex
0010F4r 2  CA               dex
0010F5r 2  B5 03            lda $03,x
0010F7r 2  48               pha
0010F8r 2  B5 02            lda $02,x
0010FAr 2  48               pha
0010FBr 2               
0010FBr 2               ; src/prelude.fth:38:5 in `i`
0010FBr 2               @OPCODE_538:   ; [c64_ir] AltPop
0010FBr 2  E8               inx
0010FCr 2  E8               inx
0010FDr 2  68               pla
0010FEr 2  95 00            sta $00,x
001100r 2  68               pla
001101r 2  95 01            sta $01,x
001103r 2               
001103r 2               ; src/prelude.fth:38:8 in `i`
001103r 2               @OPCODE_539:   ; [c64_ir] AltPop
001103r 2  E8               inx
001104r 2  E8               inx
001105r 2  68               pla
001106r 2  95 00            sta $00,x
001108r 2  68               pla
001109r 2  95 01            sta $01,x
00110Br 2               
00110Br 2               ; src/prelude.fth:38:11 in `i`
00110Br 2               @OPCODE_540:   ; [c64_ir] AltPop
00110Br 2  E8               inx
00110Cr 2  E8               inx
00110Dr 2  68               pla
00110Er 2  95 00            sta $00,x
001110r 2  68               pla
001111r 2  95 01            sta $01,x
001113r 2               
001113r 2               ; src/prelude.fth:38:14 in `i`
001113r 2               @OPCODE_541:   ; [c64_ir] TempStore
001113r 2  CA               dex
001114r 2  CA               dex
001115r 2  B5 03            lda $03,x
001117r 2  85 96            sta TEMP_PAX2
001119r 2  B5 02            lda $02,x
00111Br 2  85 95            sta TEMP_PAX1
00111Dr 2               
00111Dr 2               ; src/prelude.fth:38:20 in `i`
00111Dr 2               @OPCODE_542:   ; [c64_ir] TempLoad
00111Dr 2  E8               inx
00111Er 2  E8               inx
00111Fr 2  A5 95            lda TEMP_PAX1
001121r 2  95 00            sta $00,x
001123r 2  A5 96            lda TEMP_PAX2
001125r 2  95 01            sta $01,x
001127r 2               
001127r 2               ; src/prelude.fth:38:26 in `i`
001127r 2               @OPCODE_543:   ; [c64_ir] AltPush
001127r 2  CA               dex
001128r 2  CA               dex
001129r 2  B5 03            lda $03,x
00112Br 2  48               pha
00112Cr 2  B5 02            lda $02,x
00112Er 2  48               pha
00112Fr 2               
00112Fr 2               ; src/prelude.fth:38:29 in `i`
00112Fr 2               @OPCODE_544:   ; [c64_ir] AltPush
00112Fr 2  CA               dex
001130r 2  CA               dex
001131r 2  B5 03            lda $03,x
001133r 2  48               pha
001134r 2  B5 02            lda $02,x
001136r 2  48               pha
001137r 2               
001137r 2               ; src/prelude.fth:38:32 in `i`
001137r 2               @OPCODE_545:   ; [c64_ir] AltPush
001137r 2  CA               dex
001138r 2  CA               dex
001139r 2  B5 03            lda $03,x
00113Br 2  48               pha
00113Cr 2  B5 02            lda $02,x
00113Er 2  48               pha
00113Fr 2               
00113Fr 2               ; src/prelude.fth:38:35 in `i`
00113Fr 2               @OPCODE_546:   ; [c64_ir] TempLoad
00113Fr 2  E8               inx
001140r 2  E8               inx
001141r 2  A5 95            lda TEMP_PAX1
001143r 2  95 00            sta $00,x
001145r 2  A5 96            lda TEMP_PAX2
001147r 2  95 01            sta $01,x
001149r 2               
001149r 2               ; <inline>:0:0 in `main`
001149r 2               @OPCODE_547:   ; [c64_ir] AltPop
001149r 2  E8               inx
00114Ar 2  E8               inx
00114Br 2  68               pla
00114Cr 2  95 00            sta $00,x
00114Er 2  68               pla
00114Fr 2  95 01            sta $01,x
001151r 2               
001151r 2               ; <inline>:0:0 in `main`
001151r 2               @OPCODE_548:   ; [c64_ir] Drop
001151r 2  CA               dex
001152r 2  CA               dex
001153r 2               
001153r 2               ; <inline>:0:0 in `main`
001153r 2               @OPCODE_549:   ; [c64_ir] PushLiteral(7777)
001153r 2  E8               inx
001154r 2  E8               inx
001155r 2  A9 61            lda #97
001157r 2  95 00            sta $00,x
001159r 2  A9 1E            lda #30
00115Br 2  95 01            sta $01,x
00115Dr 2               
00115Dr 2               ; <inline>:0:0 in `main`
00115Dr 2               @OPCODE_550:   ; [c64_ir] AltPush
00115Dr 2  CA               dex
00115Er 2  CA               dex
00115Fr 2  B5 03            lda $03,x
001161r 2  48               pha
001162r 2  B5 02            lda $02,x
001164r 2  48               pha
001165r 2               
001165r 2               ; snake.fth:49:34 in `draw-index`
001165r 2               @OPCODE_551:   ; [c64_ir] PushLiteral(1024)
001165r 2  E8               inx
001166r 2  E8               inx
001167r 2  A9 00            lda #0
001169r 2  95 00            sta $00,x
00116Br 2  A9 04            lda #4
00116Dr 2  95 01            sta $01,x
00116Fr 2               
00116Fr 2               ; snake.fth:49:43 in `draw-index`
00116Fr 2               @OPCODE_552:   ; [c64_ir] Add
00116Fr 2                   ; 21
00116Fr 2  CA               dex
001170r 2  CA               dex
001171r 2  18               clc
001172r 2  B5 00            lda $00,x
001174r 2  75 02            adc $02,x
001176r 2  95 00            sta $00,x
001178r 2  B5 01            lda $01,x
00117Ar 2  75 03            adc $03,x
00117Cr 2  95 01            sta $01,x
00117Er 2               
00117Er 2               ; snake.fth:49:45 in `draw-index`
00117Er 2               @OPCODE_553:   ; [c64_ir] Store8
00117Er 2  CA               dex
00117Fr 2  CA               dex
001180r 2  CA               dex
001181r 2  CA               dex
001182r 2  B5 02            lda $02,x
001184r 2  81 04            sta ($04,x)
001186r 2                   ; TODO high byte
001186r 2               
001186r 2               ; <inline>:0:0 in `main`
001186r 2               @OPCODE_554:   ; [c64_ir] AltPop
001186r 2  E8               inx
001187r 2  E8               inx
001188r 2  68               pla
001189r 2  95 00            sta $00,x
00118Br 2  68               pla
00118Cr 2  95 01            sta $01,x
00118Er 2               
00118Er 2               ; <inline>:0:0 in `main`
00118Er 2               @OPCODE_555:   ; [c64_ir] Drop
00118Er 2  CA               dex
00118Fr 2  CA               dex
001190r 2               
001190r 2               ; <inline>:0:0 in `main`
001190r 2               @OPCODE_556:   ; [c64_ir] PushLiteral(7777)
001190r 2  E8               inx
001191r 2  E8               inx
001192r 2  A9 61            lda #97
001194r 2  95 00            sta $00,x
001196r 2  A9 1E            lda #30
001198r 2  95 01            sta $01,x
00119Ar 2               
00119Ar 2               ; <inline>:0:0 in `main`
00119Ar 2               @OPCODE_557:   ; [c64_ir] AltPush
00119Ar 2  CA               dex
00119Br 2  CA               dex
00119Cr 2  B5 03            lda $03,x
00119Er 2  48               pha
00119Fr 2  B5 02            lda $02,x
0011A1r 2  48               pha
0011A2r 2               
0011A2r 2               ; src/prelude.fth:33:12 in `loopimpl`
0011A2r 2               @OPCODE_558:   ; [c64_ir] AltPop
0011A2r 2  E8               inx
0011A3r 2  E8               inx
0011A4r 2  68               pla
0011A5r 2  95 00            sta $00,x
0011A7r 2  68               pla
0011A8r 2  95 01            sta $01,x
0011AAr 2               
0011AAr 2               ; src/prelude.fth:33:15 in `loopimpl`
0011AAr 2               @OPCODE_559:   ; [c64_ir] AltPop
0011AAr 2  E8               inx
0011ABr 2  E8               inx
0011ACr 2  68               pla
0011ADr 2  95 00            sta $00,x
0011AFr 2  68               pla
0011B0r 2  95 01            sta $01,x
0011B2r 2               
0011B2r 2               ; src/prelude.fth:33:18 in `loopimpl`
0011B2r 2               @OPCODE_560:   ; [c64_ir] AltPop
0011B2r 2  E8               inx
0011B3r 2  E8               inx
0011B4r 2  68               pla
0011B5r 2  95 00            sta $00,x
0011B7r 2  68               pla
0011B8r 2  95 01            sta $01,x
0011BAr 2               
0011BAr 2               ; <inline>:0:0 in `main`
0011BAr 2               @OPCODE_561:   ; [c64_ir] PushLiteral(7777)
0011BAr 2  E8               inx
0011BBr 2  E8               inx
0011BCr 2  A9 61            lda #97
0011BEr 2  95 00            sta $00,x
0011C0r 2  A9 1E            lda #30
0011C2r 2  95 01            sta $01,x
0011C4r 2               
0011C4r 2               ; <inline>:0:0 in `main`
0011C4r 2               @OPCODE_562:   ; [c64_ir] AltPush
0011C4r 2  CA               dex
0011C5r 2  CA               dex
0011C6r 2  B5 03            lda $03,x
0011C8r 2  48               pha
0011C9r 2  B5 02            lda $02,x
0011CBr 2  48               pha
0011CCr 2               
0011CCr 2               ; src/prelude.fth:18:8 in `1+`
0011CCr 2               @OPCODE_563:   ; [c64_ir] PushLiteral(1)
0011CCr 2  E8               inx
0011CDr 2  E8               inx
0011CEr 2  A9 01            lda #1
0011D0r 2  95 00            sta $00,x
0011D2r 2  A9 00            lda #0
0011D4r 2  95 01            sta $01,x
0011D6r 2               
0011D6r 2               ; src/prelude.fth:18:10 in `1+`
0011D6r 2               @OPCODE_564:   ; [c64_ir] Add
0011D6r 2                   ; 21
0011D6r 2  CA               dex
0011D7r 2  CA               dex
0011D8r 2  18               clc
0011D9r 2  B5 00            lda $00,x
0011DBr 2  75 02            adc $02,x
0011DDr 2  95 00            sta $00,x
0011DFr 2  B5 01            lda $01,x
0011E1r 2  75 03            adc $03,x
0011E3r 2  95 01            sta $01,x
0011E5r 2               
0011E5r 2               ; <inline>:0:0 in `main`
0011E5r 2               @OPCODE_565:   ; [c64_ir] AltPop
0011E5r 2  E8               inx
0011E6r 2  E8               inx
0011E7r 2  68               pla
0011E8r 2  95 00            sta $00,x
0011EAr 2  68               pla
0011EBr 2  95 01            sta $01,x
0011EDr 2               
0011EDr 2               ; <inline>:0:0 in `main`
0011EDr 2               @OPCODE_566:   ; [c64_ir] Drop
0011EDr 2  CA               dex
0011EEr 2  CA               dex
0011EFr 2               
0011EFr 2               ; <inline>:0:0 in `main`
0011EFr 2               @OPCODE_567:   ; [c64_ir] PushLiteral(7777)
0011EFr 2  E8               inx
0011F0r 2  E8               inx
0011F1r 2  A9 61            lda #97
0011F3r 2  95 00            sta $00,x
0011F5r 2  A9 1E            lda #30
0011F7r 2  95 01            sta $01,x
0011F9r 2               
0011F9r 2               ; <inline>:0:0 in `main`
0011F9r 2               @OPCODE_568:   ; [c64_ir] AltPush
0011F9r 2  CA               dex
0011FAr 2  CA               dex
0011FBr 2  B5 03            lda $03,x
0011FDr 2  48               pha
0011FEr 2  B5 02            lda $02,x
001200r 2  48               pha
001201r 2               
001201r 2               ; <inline>:0:0 in `main`
001201r 2               @OPCODE_569:   ; [c64_ir] PushLiteral(7777)
001201r 2  E8               inx
001202r 2  E8               inx
001203r 2  A9 61            lda #97
001205r 2  95 00            sta $00,x
001207r 2  A9 1E            lda #30
001209r 2  95 01            sta $01,x
00120Br 2               
00120Br 2               ; <inline>:0:0 in `main`
00120Br 2               @OPCODE_570:   ; [c64_ir] AltPush
00120Br 2  CA               dex
00120Cr 2  CA               dex
00120Dr 2  B5 03            lda $03,x
00120Fr 2  48               pha
001210r 2  B5 02            lda $02,x
001212r 2  48               pha
001213r 2               
001213r 2               ; src/prelude.fth:4:10 in `over`
001213r 2               @OPCODE_571:   ; [c64_ir] AltPush
001213r 2  CA               dex
001214r 2  CA               dex
001215r 2  B5 03            lda $03,x
001217r 2  48               pha
001218r 2  B5 02            lda $02,x
00121Ar 2  48               pha
00121Br 2               
00121Br 2               ; src/prelude.fth:4:13 in `over`
00121Br 2               @OPCODE_572:   ; [c64_ir] TempStore
00121Br 2  CA               dex
00121Cr 2  CA               dex
00121Dr 2  B5 03            lda $03,x
00121Fr 2  85 96            sta TEMP_PAX2
001221r 2  B5 02            lda $02,x
001223r 2  85 95            sta TEMP_PAX1
001225r 2               
001225r 2               ; src/prelude.fth:4:19 in `over`
001225r 2               @OPCODE_573:   ; [c64_ir] TempLoad
001225r 2  E8               inx
001226r 2  E8               inx
001227r 2  A5 95            lda TEMP_PAX1
001229r 2  95 00            sta $00,x
00122Br 2  A5 96            lda TEMP_PAX2
00122Dr 2  95 01            sta $01,x
00122Fr 2               
00122Fr 2               ; src/prelude.fth:4:25 in `over`
00122Fr 2               @OPCODE_574:   ; [c64_ir] AltPop
00122Fr 2  E8               inx
001230r 2  E8               inx
001231r 2  68               pla
001232r 2  95 00            sta $00,x
001234r 2  68               pla
001235r 2  95 01            sta $01,x
001237r 2               
001237r 2               ; src/prelude.fth:4:28 in `over`
001237r 2               @OPCODE_575:   ; [c64_ir] TempLoad
001237r 2  E8               inx
001238r 2  E8               inx
001239r 2  A5 95            lda TEMP_PAX1
00123Br 2  95 00            sta $00,x
00123Dr 2  A5 96            lda TEMP_PAX2
00123Fr 2  95 01            sta $01,x
001241r 2               
001241r 2               ; <inline>:0:0 in `main`
001241r 2               @OPCODE_576:   ; [c64_ir] AltPop
001241r 2  E8               inx
001242r 2  E8               inx
001243r 2  68               pla
001244r 2  95 00            sta $00,x
001246r 2  68               pla
001247r 2  95 01            sta $01,x
001249r 2               
001249r 2               ; <inline>:0:0 in `main`
001249r 2               @OPCODE_577:   ; [c64_ir] Drop
001249r 2  CA               dex
00124Ar 2  CA               dex
00124Br 2               
00124Br 2               ; <inline>:0:0 in `main`
00124Br 2               @OPCODE_578:   ; [c64_ir] PushLiteral(7777)
00124Br 2  E8               inx
00124Cr 2  E8               inx
00124Dr 2  A9 61            lda #97
00124Fr 2  95 00            sta $00,x
001251r 2  A9 1E            lda #30
001253r 2  95 01            sta $01,x
001255r 2               
001255r 2               ; <inline>:0:0 in `main`
001255r 2               @OPCODE_579:   ; [c64_ir] AltPush
001255r 2  CA               dex
001256r 2  CA               dex
001257r 2  B5 03            lda $03,x
001259r 2  48               pha
00125Ar 2  B5 02            lda $02,x
00125Cr 2  48               pha
00125Dr 2               
00125Dr 2               ; src/prelude.fth:4:10 in `over`
00125Dr 2               @OPCODE_580:   ; [c64_ir] AltPush
00125Dr 2  CA               dex
00125Er 2  CA               dex
00125Fr 2  B5 03            lda $03,x
001261r 2  48               pha
001262r 2  B5 02            lda $02,x
001264r 2  48               pha
001265r 2               
001265r 2               ; src/prelude.fth:4:13 in `over`
001265r 2               @OPCODE_581:   ; [c64_ir] TempStore
001265r 2  CA               dex
001266r 2  CA               dex
001267r 2  B5 03            lda $03,x
001269r 2  85 96            sta TEMP_PAX2
00126Br 2  B5 02            lda $02,x
00126Dr 2  85 95            sta TEMP_PAX1
00126Fr 2               
00126Fr 2               ; src/prelude.fth:4:19 in `over`
00126Fr 2               @OPCODE_582:   ; [c64_ir] TempLoad
00126Fr 2  E8               inx
001270r 2  E8               inx
001271r 2  A5 95            lda TEMP_PAX1
001273r 2  95 00            sta $00,x
001275r 2  A5 96            lda TEMP_PAX2
001277r 2  95 01            sta $01,x
001279r 2               
001279r 2               ; src/prelude.fth:4:25 in `over`
001279r 2               @OPCODE_583:   ; [c64_ir] AltPop
001279r 2  E8               inx
00127Ar 2  E8               inx
00127Br 2  68               pla
00127Cr 2  95 00            sta $00,x
00127Er 2  68               pla
00127Fr 2  95 01            sta $01,x
001281r 2               
001281r 2               ; src/prelude.fth:4:28 in `over`
001281r 2               @OPCODE_584:   ; [c64_ir] TempLoad
001281r 2  E8               inx
001282r 2  E8               inx
001283r 2  A5 95            lda TEMP_PAX1
001285r 2  95 00            sta $00,x
001287r 2  A5 96            lda TEMP_PAX2
001289r 2  95 01            sta $01,x
00128Br 2               
00128Br 2               ; <inline>:0:0 in `main`
00128Br 2               @OPCODE_585:   ; [c64_ir] AltPop
00128Br 2  E8               inx
00128Cr 2  E8               inx
00128Dr 2  68               pla
00128Er 2  95 00            sta $00,x
001290r 2  68               pla
001291r 2  95 01            sta $01,x
001293r 2               
001293r 2               ; <inline>:0:0 in `main`
001293r 2               @OPCODE_586:   ; [c64_ir] Drop
001293r 2  CA               dex
001294r 2  CA               dex
001295r 2               
001295r 2               ; <inline>:0:0 in `main`
001295r 2               @OPCODE_587:   ; [c64_ir] AltPop
001295r 2  E8               inx
001296r 2  E8               inx
001297r 2  68               pla
001298r 2  95 00            sta $00,x
00129Ar 2  68               pla
00129Br 2  95 01            sta $01,x
00129Dr 2               
00129Dr 2               ; <inline>:0:0 in `main`
00129Dr 2               @OPCODE_588:   ; [c64_ir] Drop
00129Dr 2  CA               dex
00129Er 2  CA               dex
00129Fr 2               
00129Fr 2               ; src/prelude.fth:33:29 in `loopimpl`
00129Fr 2               @OPCODE_589:   ; [c64_ir] AltPush
00129Fr 2  CA               dex
0012A0r 2  CA               dex
0012A1r 2  B5 03            lda $03,x
0012A3r 2  48               pha
0012A4r 2  B5 02            lda $02,x
0012A6r 2  48               pha
0012A7r 2               
0012A7r 2               ; src/prelude.fth:33:32 in `loopimpl`
0012A7r 2               @OPCODE_590:   ; [c64_ir] AltPush
0012A7r 2  CA               dex
0012A8r 2  CA               dex
0012A9r 2  B5 03            lda $03,x
0012ABr 2  48               pha
0012ACr 2  B5 02            lda $02,x
0012AEr 2  48               pha
0012AFr 2               
0012AFr 2               ; <inline>:0:0 in `main`
0012AFr 2               @OPCODE_591:   ; [c64_ir] PushLiteral(7777)
0012AFr 2  E8               inx
0012B0r 2  E8               inx
0012B1r 2  A9 61            lda #97
0012B3r 2  95 00            sta $00,x
0012B5r 2  A9 1E            lda #30
0012B7r 2  95 01            sta $01,x
0012B9r 2               
0012B9r 2               ; <inline>:0:0 in `main`
0012B9r 2               @OPCODE_592:   ; [c64_ir] AltPush
0012B9r 2  CA               dex
0012BAr 2  CA               dex
0012BBr 2  B5 03            lda $03,x
0012BDr 2  48               pha
0012BEr 2  B5 02            lda $02,x
0012C0r 2  48               pha
0012C1r 2               
0012C1r 2               ; <inline>:0:0 in `main`
0012C1r 2               @OPCODE_593:   ; [c64_ir] PushLiteral(7777)
0012C1r 2  E8               inx
0012C2r 2  E8               inx
0012C3r 2  A9 61            lda #97
0012C5r 2  95 00            sta $00,x
0012C7r 2  A9 1E            lda #30
0012C9r 2  95 01            sta $01,x
0012CBr 2               
0012CBr 2               ; <inline>:0:0 in `main`
0012CBr 2               @OPCODE_594:   ; [c64_ir] AltPush
0012CBr 2  CA               dex
0012CCr 2  CA               dex
0012CDr 2  B5 03            lda $03,x
0012CFr 2  48               pha
0012D0r 2  B5 02            lda $02,x
0012D2r 2  48               pha
0012D3r 2               
0012D3r 2               ; <inline>:0:0 in `main`
0012D3r 2               @OPCODE_595:   ; [c64_ir] PushLiteral(7777)
0012D3r 2  E8               inx
0012D4r 2  E8               inx
0012D5r 2  A9 61            lda #97
0012D7r 2  95 00            sta $00,x
0012D9r 2  A9 1E            lda #30
0012DBr 2  95 01            sta $01,x
0012DDr 2               
0012DDr 2               ; <inline>:0:0 in `main`
0012DDr 2               @OPCODE_596:   ; [c64_ir] AltPush
0012DDr 2  CA               dex
0012DEr 2  CA               dex
0012DFr 2  B5 03            lda $03,x
0012E1r 2  48               pha
0012E2r 2  B5 02            lda $02,x
0012E4r 2  48               pha
0012E5r 2               
0012E5r 2               ; <inline>:0:0 in `main`
0012E5r 2               @OPCODE_597:   ; [c64_ir] PushLiteral(7777)
0012E5r 2  E8               inx
0012E6r 2  E8               inx
0012E7r 2  A9 61            lda #97
0012E9r 2  95 00            sta $00,x
0012EBr 2  A9 1E            lda #30
0012EDr 2  95 01            sta $01,x
0012EFr 2               
0012EFr 2               ; <inline>:0:0 in `main`
0012EFr 2               @OPCODE_598:   ; [c64_ir] AltPush
0012EFr 2  CA               dex
0012F0r 2  CA               dex
0012F1r 2  B5 03            lda $03,x
0012F3r 2  48               pha
0012F4r 2  B5 02            lda $02,x
0012F6r 2  48               pha
0012F7r 2               
0012F7r 2               ; src/prelude.fth:14:12 in `invert`
0012F7r 2               @OPCODE_599:   ; [c64_ir] PushLiteral(-1)
0012F7r 2  E8               inx
0012F8r 2  E8               inx
0012F9r 2  A9 FF            lda #255
0012FBr 2  95 00            sta $00,x
0012FDr 2  A9 FF            lda #255
0012FFr 2  95 01            sta $01,x
001301r 2               
001301r 2               ; src/prelude.fth:14:15 in `invert`
001301r 2               @OPCODE_600:   ; [c64_ir] Nand
001301r 2                   ; 26
001301r 2  CA               dex
001302r 2  CA               dex
001303r 2  B5 00            lda $00,x
001305r 2  35 02            and $02,x
001307r 2  49 FF            eor #$ff
001309r 2  95 00            sta $00,x
00130Br 2  B5 01            lda $01,x
00130Dr 2  35 03            and $03,x
00130Fr 2  49 FF            eor #$ff
001311r 2  95 01            sta $01,x
001313r 2               
001313r 2               ; <inline>:0:0 in `main`
001313r 2               @OPCODE_601:   ; [c64_ir] AltPop
001313r 2  E8               inx
001314r 2  E8               inx
001315r 2  68               pla
001316r 2  95 00            sta $00,x
001318r 2  68               pla
001319r 2  95 01            sta $01,x
00131Br 2               
00131Br 2               ; <inline>:0:0 in `main`
00131Br 2               @OPCODE_602:   ; [c64_ir] Drop
00131Br 2  CA               dex
00131Cr 2  CA               dex
00131Dr 2               
00131Dr 2               ; src/prelude.fth:15:19 in `negate`
00131Dr 2               @OPCODE_603:   ; [c64_ir] PushLiteral(1)
00131Dr 2  E8               inx
00131Er 2  E8               inx
00131Fr 2  A9 01            lda #1
001321r 2  95 00            sta $00,x
001323r 2  A9 00            lda #0
001325r 2  95 01            sta $01,x
001327r 2               
001327r 2               ; src/prelude.fth:15:21 in `negate`
001327r 2               @OPCODE_604:   ; [c64_ir] Add
001327r 2                   ; 21
001327r 2  CA               dex
001328r 2  CA               dex
001329r 2  18               clc
00132Ar 2  B5 00            lda $00,x
00132Cr 2  75 02            adc $02,x
00132Er 2  95 00            sta $00,x
001330r 2  B5 01            lda $01,x
001332r 2  75 03            adc $03,x
001334r 2  95 01            sta $01,x
001336r 2               
001336r 2               ; <inline>:0:0 in `main`
001336r 2               @OPCODE_605:   ; [c64_ir] AltPop
001336r 2  E8               inx
001337r 2  E8               inx
001338r 2  68               pla
001339r 2  95 00            sta $00,x
00133Br 2  68               pla
00133Cr 2  95 01            sta $01,x
00133Er 2               
00133Er 2               ; <inline>:0:0 in `main`
00133Er 2               @OPCODE_606:   ; [c64_ir] Drop
00133Er 2  CA               dex
00133Fr 2  CA               dex
001340r 2               
001340r 2               ; src/prelude.fth:16:19 in `-`
001340r 2               @OPCODE_607:   ; [c64_ir] Add
001340r 2                   ; 21
001340r 2  CA               dex
001341r 2  CA               dex
001342r 2  18               clc
001343r 2  B5 00            lda $00,x
001345r 2  75 02            adc $02,x
001347r 2  95 00            sta $00,x
001349r 2  B5 01            lda $01,x
00134Br 2  75 03            adc $03,x
00134Dr 2  95 01            sta $01,x
00134Fr 2               
00134Fr 2               ; <inline>:0:0 in `main`
00134Fr 2               @OPCODE_608:   ; [c64_ir] AltPop
00134Fr 2  E8               inx
001350r 2  E8               inx
001351r 2  68               pla
001352r 2  95 00            sta $00,x
001354r 2  68               pla
001355r 2  95 01            sta $01,x
001357r 2               
001357r 2               ; <inline>:0:0 in `main`
001357r 2               @OPCODE_609:   ; [c64_ir] Drop
001357r 2  CA               dex
001358r 2  CA               dex
001359r 2               
001359r 2               ; <inline>:0:0 in `main`
001359r 2               @OPCODE_610:   ; [c64_ir] PushLiteral(7777)
001359r 2  E8               inx
00135Ar 2  E8               inx
00135Br 2  A9 61            lda #97
00135Dr 2  95 00            sta $00,x
00135Fr 2  A9 1E            lda #30
001361r 2  95 01            sta $01,x
001363r 2               
001363r 2               ; <inline>:0:0 in `main`
001363r 2               @OPCODE_611:   ; [c64_ir] AltPush
001363r 2  CA               dex
001364r 2  CA               dex
001365r 2  B5 03            lda $03,x
001367r 2  48               pha
001368r 2  B5 02            lda $02,x
00136Ar 2  48               pha
00136Br 2               
00136Br 2               ; src/prelude.fth:21:8 in `0=`
00136Br 2               @OPCODE_612:   ; [c64_ir] JumpIf0(27)
00136Br 2  CA               dex
00136Cr 2  CA               dex
00136Dr 2  B5 02            lda $02,x
00136Fr 2  15 03            ora $03,x
001371r 2  D0 03            bne *+5
001373r 2  4C rr rr         jmp @target_27
001376r 2               
001376r 2               @target_26:
001376r 2               
001376r 2               ; src/prelude.fth:21:11 in `0=`
001376r 2               @OPCODE_614:   ; [c64_ir] PushLiteral(0)
001376r 2  E8               inx
001377r 2  E8               inx
001378r 2  A9 00            lda #0
00137Ar 2  95 00            sta $00,x
00137Cr 2  A9 00            lda #0
00137Er 2  95 01            sta $01,x
001380r 2               
001380r 2               ; src/prelude.fth:21:13 in `0=`
001380r 2               @OPCODE_615:   ; [c64_ir] JumpElse(28)
001380r 2  4C rr rr         jmp @target_28
001383r 2               
001383r 2               @target_27:
001383r 2               
001383r 2               ; src/prelude.fth:21:18 in `0=`
001383r 2               @OPCODE_617:   ; [c64_ir] PushLiteral(-1)
001383r 2  E8               inx
001384r 2  E8               inx
001385r 2  A9 FF            lda #255
001387r 2  95 00            sta $00,x
001389r 2  A9 FF            lda #255
00138Br 2  95 01            sta $01,x
00138Dr 2               
00138Dr 2               ; src/prelude.fth:21:21 in `0=`
00138Dr 2               @OPCODE_618:   ; [c64_ir] JumpTarget(27)
00138Dr 2               
00138Dr 2               @target_28:
00138Dr 2               
00138Dr 2               ; <inline>:0:0 in `main`
00138Dr 2               @OPCODE_620:   ; [c64_ir] AltPop
00138Dr 2  E8               inx
00138Er 2  E8               inx
00138Fr 2  68               pla
001390r 2  95 00            sta $00,x
001392r 2  68               pla
001393r 2  95 01            sta $01,x
001395r 2               
001395r 2               ; <inline>:0:0 in `main`
001395r 2               @OPCODE_621:   ; [c64_ir] Drop
001395r 2  CA               dex
001396r 2  CA               dex
001397r 2               
001397r 2               ; <inline>:0:0 in `main`
001397r 2               @OPCODE_622:   ; [c64_ir] AltPop
001397r 2  E8               inx
001398r 2  E8               inx
001399r 2  68               pla
00139Ar 2  95 00            sta $00,x
00139Cr 2  68               pla
00139Dr 2  95 01            sta $01,x
00139Fr 2               
00139Fr 2               ; <inline>:0:0 in `main`
00139Fr 2               @OPCODE_623:   ; [c64_ir] Drop
00139Fr 2  CA               dex
0013A0r 2  CA               dex
0013A1r 2               
0013A1r 2               ; <inline>:0:0 in `main`
0013A1r 2               @OPCODE_624:   ; [c64_ir] PushLiteral(7777)
0013A1r 2  E8               inx
0013A2r 2  E8               inx
0013A3r 2  A9 61            lda #97
0013A5r 2  95 00            sta $00,x
0013A7r 2  A9 1E            lda #30
0013A9r 2  95 01            sta $01,x
0013ABr 2               
0013ABr 2               ; <inline>:0:0 in `main`
0013ABr 2               @OPCODE_625:   ; [c64_ir] AltPush
0013ABr 2  CA               dex
0013ACr 2  CA               dex
0013ADr 2  B5 03            lda $03,x
0013AFr 2  48               pha
0013B0r 2  B5 02            lda $02,x
0013B2r 2  48               pha
0013B3r 2               
0013B3r 2               ; src/prelude.fth:3:10 in `swap`
0013B3r 2               @OPCODE_626:   ; [c64_ir] AltPush
0013B3r 2  CA               dex
0013B4r 2  CA               dex
0013B5r 2  B5 03            lda $03,x
0013B7r 2  48               pha
0013B8r 2  B5 02            lda $02,x
0013BAr 2  48               pha
0013BBr 2               
0013BBr 2               ; src/prelude.fth:3:13 in `swap`
0013BBr 2               @OPCODE_627:   ; [c64_ir] TempStore
0013BBr 2  CA               dex
0013BCr 2  CA               dex
0013BDr 2  B5 03            lda $03,x
0013BFr 2  85 96            sta TEMP_PAX2
0013C1r 2  B5 02            lda $02,x
0013C3r 2  85 95            sta TEMP_PAX1
0013C5r 2               
0013C5r 2               ; src/prelude.fth:3:19 in `swap`
0013C5r 2               @OPCODE_628:   ; [c64_ir] AltPop
0013C5r 2  E8               inx
0013C6r 2  E8               inx
0013C7r 2  68               pla
0013C8r 2  95 00            sta $00,x
0013CAr 2  68               pla
0013CBr 2  95 01            sta $01,x
0013CDr 2               
0013CDr 2               ; src/prelude.fth:3:22 in `swap`
0013CDr 2               @OPCODE_629:   ; [c64_ir] TempLoad
0013CDr 2  E8               inx
0013CEr 2  E8               inx
0013CFr 2  A5 95            lda TEMP_PAX1
0013D1r 2  95 00            sta $00,x
0013D3r 2  A5 96            lda TEMP_PAX2
0013D5r 2  95 01            sta $01,x
0013D7r 2               
0013D7r 2               ; <inline>:0:0 in `main`
0013D7r 2               @OPCODE_630:   ; [c64_ir] AltPop
0013D7r 2  E8               inx
0013D8r 2  E8               inx
0013D9r 2  68               pla
0013DAr 2  95 00            sta $00,x
0013DCr 2  68               pla
0013DDr 2  95 01            sta $01,x
0013DFr 2               
0013DFr 2               ; <inline>:0:0 in `main`
0013DFr 2               @OPCODE_631:   ; [c64_ir] Drop
0013DFr 2  CA               dex
0013E0r 2  CA               dex
0013E1r 2               
0013E1r 2               ; src/prelude.fth:33:42 in `loopimpl`
0013E1r 2               @OPCODE_632:   ; [c64_ir] AltPush
0013E1r 2  CA               dex
0013E2r 2  CA               dex
0013E3r 2  B5 03            lda $03,x
0013E5r 2  48               pha
0013E6r 2  B5 02            lda $02,x
0013E8r 2  48               pha
0013E9r 2               
0013E9r 2               ; <inline>:0:0 in `main`
0013E9r 2               @OPCODE_633:   ; [c64_ir] AltPop
0013E9r 2  E8               inx
0013EAr 2  E8               inx
0013EBr 2  68               pla
0013ECr 2  95 00            sta $00,x
0013EEr 2  68               pla
0013EFr 2  95 01            sta $01,x
0013F1r 2               
0013F1r 2               ; <inline>:0:0 in `main`
0013F1r 2               @OPCODE_634:   ; [c64_ir] Drop
0013F1r 2  CA               dex
0013F2r 2  CA               dex
0013F3r 2               
0013F3r 2               ; snake.fth:78:5 in `draw-walls`
0013F3r 2               @OPCODE_635:   ; [c64_ir] LoopIf0(25)
0013F3r 2  CA               dex
0013F4r 2  CA               dex
0013F5r 2  B5 02            lda $02,x
0013F7r 2  15 03            ora $03,x
0013F9r 2  D0 03            bne *+5
0013FBr 2  4C rr rr         jmp @target_25
0013FEr 2               
0013FEr 2               @target_29:
0013FEr 2               
0013FEr 2               ; snake.fth:78:5 in `draw-walls`
0013FEr 2               @OPCODE_637:   ; [c64_ir] AltPop
0013FEr 2  E8               inx
0013FFr 2  E8               inx
001400r 2  68               pla
001401r 2  95 00            sta $00,x
001403r 2  68               pla
001404r 2  95 01            sta $01,x
001406r 2               
001406r 2               ; snake.fth:78:5 in `draw-walls`
001406r 2               @OPCODE_638:   ; [c64_ir] Drop
001406r 2  CA               dex
001407r 2  CA               dex
001408r 2               
001408r 2               ; snake.fth:78:5 in `draw-walls`
001408r 2               @OPCODE_639:   ; [c64_ir] AltPop
001408r 2  E8               inx
001409r 2  E8               inx
00140Ar 2  68               pla
00140Br 2  95 00            sta $00,x
00140Dr 2  68               pla
00140Er 2  95 01            sta $01,x
001410r 2               
001410r 2               ; snake.fth:78:5 in `draw-walls`
001410r 2               @OPCODE_640:   ; [c64_ir] Drop
001410r 2  CA               dex
001411r 2  CA               dex
001412r 2               
001412r 2               ; snake.fth:81:5 in `draw-walls`
001412r 2               @OPCODE_641:   ; [c64_ir] PushLiteral(40)
001412r 2  E8               inx
001413r 2  E8               inx
001414r 2  A9 28            lda #40
001416r 2  95 00            sta $00,x
001418r 2  A9 00            lda #0
00141Ar 2  95 01            sta $01,x
00141Cr 2               
00141Cr 2               ; snake.fth:81:11 in `draw-walls`
00141Cr 2               @OPCODE_642:   ; [c64_ir] PushLiteral(1)
00141Cr 2  E8               inx
00141Dr 2  E8               inx
00141Er 2  A9 01            lda #1
001420r 2  95 00            sta $00,x
001422r 2  A9 00            lda #0
001424r 2  95 01            sta $01,x
001426r 2               
001426r 2               ; <inline>:0:0 in `main`
001426r 2               @OPCODE_643:   ; [c64_ir] PushLiteral(7777)
001426r 2  E8               inx
001427r 2  E8               inx
001428r 2  A9 61            lda #97
00142Ar 2  95 00            sta $00,x
00142Cr 2  A9 1E            lda #30
00142Er 2  95 01            sta $01,x
001430r 2               
001430r 2               ; <inline>:0:0 in `main`
001430r 2               @OPCODE_644:   ; [c64_ir] AltPush
001430r 2  CA               dex
001431r 2  CA               dex
001432r 2  B5 03            lda $03,x
001434r 2  48               pha
001435r 2  B5 02            lda $02,x
001437r 2  48               pha
001438r 2               
001438r 2               ; <inline>:0:0 in `main`
001438r 2               @OPCODE_645:   ; [c64_ir] PushLiteral(7777)
001438r 2  E8               inx
001439r 2  E8               inx
00143Ar 2  A9 61            lda #97
00143Cr 2  95 00            sta $00,x
00143Er 2  A9 1E            lda #30
001440r 2  95 01            sta $01,x
001442r 2               
001442r 2               ; <inline>:0:0 in `main`
001442r 2               @OPCODE_646:   ; [c64_ir] AltPush
001442r 2  CA               dex
001443r 2  CA               dex
001444r 2  B5 03            lda $03,x
001446r 2  48               pha
001447r 2  B5 02            lda $02,x
001449r 2  48               pha
00144Ar 2               
00144Ar 2               ; <inline>:0:0 in `main`
00144Ar 2               @OPCODE_647:   ; [c64_ir] PushLiteral(7777)
00144Ar 2  E8               inx
00144Br 2  E8               inx
00144Cr 2  A9 61            lda #97
00144Er 2  95 00            sta $00,x
001450r 2  A9 1E            lda #30
001452r 2  95 01            sta $01,x
001454r 2               
001454r 2               ; <inline>:0:0 in `main`
001454r 2               @OPCODE_648:   ; [c64_ir] AltPush
001454r 2  CA               dex
001455r 2  CA               dex
001456r 2  B5 03            lda $03,x
001458r 2  48               pha
001459r 2  B5 02            lda $02,x
00145Br 2  48               pha
00145Cr 2               
00145Cr 2               ; src/prelude.fth:14:12 in `invert`
00145Cr 2               @OPCODE_649:   ; [c64_ir] PushLiteral(-1)
00145Cr 2  E8               inx
00145Dr 2  E8               inx
00145Er 2  A9 FF            lda #255
001460r 2  95 00            sta $00,x
001462r 2  A9 FF            lda #255
001464r 2  95 01            sta $01,x
001466r 2               
001466r 2               ; src/prelude.fth:14:15 in `invert`
001466r 2               @OPCODE_650:   ; [c64_ir] Nand
001466r 2                   ; 26
001466r 2  CA               dex
001467r 2  CA               dex
001468r 2  B5 00            lda $00,x
00146Ar 2  35 02            and $02,x
00146Cr 2  49 FF            eor #$ff
00146Er 2  95 00            sta $00,x
001470r 2  B5 01            lda $01,x
001472r 2  35 03            and $03,x
001474r 2  49 FF            eor #$ff
001476r 2  95 01            sta $01,x
001478r 2               
001478r 2               ; <inline>:0:0 in `main`
001478r 2               @OPCODE_651:   ; [c64_ir] AltPop
001478r 2  E8               inx
001479r 2  E8               inx
00147Ar 2  68               pla
00147Br 2  95 00            sta $00,x
00147Dr 2  68               pla
00147Er 2  95 01            sta $01,x
001480r 2               
001480r 2               ; <inline>:0:0 in `main`
001480r 2               @OPCODE_652:   ; [c64_ir] Drop
001480r 2  CA               dex
001481r 2  CA               dex
001482r 2               
001482r 2               ; src/prelude.fth:15:19 in `negate`
001482r 2               @OPCODE_653:   ; [c64_ir] PushLiteral(1)
001482r 2  E8               inx
001483r 2  E8               inx
001484r 2  A9 01            lda #1
001486r 2  95 00            sta $00,x
001488r 2  A9 00            lda #0
00148Ar 2  95 01            sta $01,x
00148Cr 2               
00148Cr 2               ; src/prelude.fth:15:21 in `negate`
00148Cr 2               @OPCODE_654:   ; [c64_ir] Add
00148Cr 2                   ; 21
00148Cr 2  CA               dex
00148Dr 2  CA               dex
00148Er 2  18               clc
00148Fr 2  B5 00            lda $00,x
001491r 2  75 02            adc $02,x
001493r 2  95 00            sta $00,x
001495r 2  B5 01            lda $01,x
001497r 2  75 03            adc $03,x
001499r 2  95 01            sta $01,x
00149Br 2               
00149Br 2               ; <inline>:0:0 in `main`
00149Br 2               @OPCODE_655:   ; [c64_ir] AltPop
00149Br 2  E8               inx
00149Cr 2  E8               inx
00149Dr 2  68               pla
00149Er 2  95 00            sta $00,x
0014A0r 2  68               pla
0014A1r 2  95 01            sta $01,x
0014A3r 2               
0014A3r 2               ; <inline>:0:0 in `main`
0014A3r 2               @OPCODE_656:   ; [c64_ir] Drop
0014A3r 2  CA               dex
0014A4r 2  CA               dex
0014A5r 2               
0014A5r 2               ; src/prelude.fth:16:19 in `-`
0014A5r 2               @OPCODE_657:   ; [c64_ir] Add
0014A5r 2                   ; 21
0014A5r 2  CA               dex
0014A6r 2  CA               dex
0014A7r 2  18               clc
0014A8r 2  B5 00            lda $00,x
0014AAr 2  75 02            adc $02,x
0014ACr 2  95 00            sta $00,x
0014AEr 2  B5 01            lda $01,x
0014B0r 2  75 03            adc $03,x
0014B2r 2  95 01            sta $01,x
0014B4r 2               
0014B4r 2               ; <inline>:0:0 in `main`
0014B4r 2               @OPCODE_658:   ; [c64_ir] AltPop
0014B4r 2  E8               inx
0014B5r 2  E8               inx
0014B6r 2  68               pla
0014B7r 2  95 00            sta $00,x
0014B9r 2  68               pla
0014BAr 2  95 01            sta $01,x
0014BCr 2               
0014BCr 2               ; <inline>:0:0 in `main`
0014BCr 2               @OPCODE_659:   ; [c64_ir] Drop
0014BCr 2  CA               dex
0014BDr 2  CA               dex
0014BEr 2               
0014BEr 2               ; snake.fth:82:5 in `draw-walls`
0014BEr 2               @OPCODE_660:   ; [c64_ir] PushLiteral(25)
0014BEr 2  E8               inx
0014BFr 2  E8               inx
0014C0r 2  A9 19            lda #25
0014C2r 2  95 00            sta $00,x
0014C4r 2  A9 00            lda #0
0014C6r 2  95 01            sta $01,x
0014C8r 2               
0014C8r 2               ; snake.fth:82:12 in `draw-walls`
0014C8r 2               @OPCODE_661:   ; [c64_ir] PushLiteral(0)
0014C8r 2  E8               inx
0014C9r 2  E8               inx
0014CAr 2  A9 00            lda #0
0014CCr 2  95 00            sta $00,x
0014CEr 2  A9 00            lda #0
0014D0r 2  95 01            sta $01,x
0014D2r 2               
0014D2r 2               ; snake.fth:82:14 in `draw-walls`
0014D2r 2               @OPCODE_662:   ; [c64_ir] AltPush
0014D2r 2  CA               dex
0014D3r 2  CA               dex
0014D4r 2  B5 03            lda $03,x
0014D6r 2  48               pha
0014D7r 2  B5 02            lda $02,x
0014D9r 2  48               pha
0014DAr 2               
0014DAr 2               ; snake.fth:82:14 in `draw-walls`
0014DAr 2               @OPCODE_663:   ; [c64_ir] AltPush
0014DAr 2  CA               dex
0014DBr 2  CA               dex
0014DCr 2  B5 03            lda $03,x
0014DEr 2  48               pha
0014DFr 2  B5 02            lda $02,x
0014E1r 2  48               pha
0014E2r 2               
0014E2r 2               ; snake.fth:82:14 in `draw-walls`
0014E2r 2               @OPCODE_664:   ; [c64_ir] LoopTarget(29)
0014E2r 2               
0014E2r 2               @target_30:
0014E2r 2               
0014E2r 2               ; snake.fth:83:9 in `draw-walls`
0014E2r 2               @OPCODE_666:   ; [c64_ir] PushLiteral(230)
0014E2r 2  E8               inx
0014E3r 2  E8               inx
0014E4r 2  A9 E6            lda #230
0014E6r 2  95 00            sta $00,x
0014E8r 2  A9 00            lda #0
0014EAr 2  95 01            sta $01,x
0014ECr 2               
0014ECr 2               ; <inline>:0:0 in `main`
0014ECr 2               @OPCODE_667:   ; [c64_ir] PushLiteral(7777)
0014ECr 2  E8               inx
0014EDr 2  E8               inx
0014EEr 2  A9 61            lda #97
0014F0r 2  95 00            sta $00,x
0014F2r 2  A9 1E            lda #30
0014F4r 2  95 01            sta $01,x
0014F6r 2               
0014F6r 2               ; <inline>:0:0 in `main`
0014F6r 2               @OPCODE_668:   ; [c64_ir] AltPush
0014F6r 2  CA               dex
0014F7r 2  CA               dex
0014F8r 2  B5 03            lda $03,x
0014FAr 2  48               pha
0014FBr 2  B5 02            lda $02,x
0014FDr 2  48               pha
0014FEr 2               
0014FEr 2               ; src/prelude.fth:4:10 in `over`
0014FEr 2               @OPCODE_669:   ; [c64_ir] AltPush
0014FEr 2  CA               dex
0014FFr 2  CA               dex
001500r 2  B5 03            lda $03,x
001502r 2  48               pha
001503r 2  B5 02            lda $02,x
001505r 2  48               pha
001506r 2               
001506r 2               ; src/prelude.fth:4:13 in `over`
001506r 2               @OPCODE_670:   ; [c64_ir] TempStore
001506r 2  CA               dex
001507r 2  CA               dex
001508r 2  B5 03            lda $03,x
00150Ar 2  85 96            sta TEMP_PAX2
00150Cr 2  B5 02            lda $02,x
00150Er 2  85 95            sta TEMP_PAX1
001510r 2               
001510r 2               ; src/prelude.fth:4:19 in `over`
001510r 2               @OPCODE_671:   ; [c64_ir] TempLoad
001510r 2  E8               inx
001511r 2  E8               inx
001512r 2  A5 95            lda TEMP_PAX1
001514r 2  95 00            sta $00,x
001516r 2  A5 96            lda TEMP_PAX2
001518r 2  95 01            sta $01,x
00151Ar 2               
00151Ar 2               ; src/prelude.fth:4:25 in `over`
00151Ar 2               @OPCODE_672:   ; [c64_ir] AltPop
00151Ar 2  E8               inx
00151Br 2  E8               inx
00151Cr 2  68               pla
00151Dr 2  95 00            sta $00,x
00151Fr 2  68               pla
001520r 2  95 01            sta $01,x
001522r 2               
001522r 2               ; src/prelude.fth:4:28 in `over`
001522r 2               @OPCODE_673:   ; [c64_ir] TempLoad
001522r 2  E8               inx
001523r 2  E8               inx
001524r 2  A5 95            lda TEMP_PAX1
001526r 2  95 00            sta $00,x
001528r 2  A5 96            lda TEMP_PAX2
00152Ar 2  95 01            sta $01,x
00152Cr 2               
00152Cr 2               ; <inline>:0:0 in `main`
00152Cr 2               @OPCODE_674:   ; [c64_ir] AltPop
00152Cr 2  E8               inx
00152Dr 2  E8               inx
00152Er 2  68               pla
00152Fr 2  95 00            sta $00,x
001531r 2  68               pla
001532r 2  95 01            sta $01,x
001534r 2               
001534r 2               ; <inline>:0:0 in `main`
001534r 2               @OPCODE_675:   ; [c64_ir] Drop
001534r 2  CA               dex
001535r 2  CA               dex
001536r 2               
001536r 2               ; <inline>:0:0 in `main`
001536r 2               @OPCODE_676:   ; [c64_ir] PushLiteral(7777)
001536r 2  E8               inx
001537r 2  E8               inx
001538r 2  A9 61            lda #97
00153Ar 2  95 00            sta $00,x
00153Cr 2  A9 1E            lda #30
00153Er 2  95 01            sta $01,x
001540r 2               
001540r 2               ; <inline>:0:0 in `main`
001540r 2               @OPCODE_677:   ; [c64_ir] AltPush
001540r 2  CA               dex
001541r 2  CA               dex
001542r 2  B5 03            lda $03,x
001544r 2  48               pha
001545r 2  B5 02            lda $02,x
001547r 2  48               pha
001548r 2               
001548r 2               ; snake.fth:49:34 in `draw-index`
001548r 2               @OPCODE_678:   ; [c64_ir] PushLiteral(1024)
001548r 2  E8               inx
001549r 2  E8               inx
00154Ar 2  A9 00            lda #0
00154Cr 2  95 00            sta $00,x
00154Er 2  A9 04            lda #4
001550r 2  95 01            sta $01,x
001552r 2               
001552r 2               ; snake.fth:49:43 in `draw-index`
001552r 2               @OPCODE_679:   ; [c64_ir] Add
001552r 2                   ; 21
001552r 2  CA               dex
001553r 2  CA               dex
001554r 2  18               clc
001555r 2  B5 00            lda $00,x
001557r 2  75 02            adc $02,x
001559r 2  95 00            sta $00,x
00155Br 2  B5 01            lda $01,x
00155Dr 2  75 03            adc $03,x
00155Fr 2  95 01            sta $01,x
001561r 2               
001561r 2               ; snake.fth:49:45 in `draw-index`
001561r 2               @OPCODE_680:   ; [c64_ir] Store8
001561r 2  CA               dex
001562r 2  CA               dex
001563r 2  CA               dex
001564r 2  CA               dex
001565r 2  B5 02            lda $02,x
001567r 2  81 04            sta ($04,x)
001569r 2                   ; TODO high byte
001569r 2               
001569r 2               ; <inline>:0:0 in `main`
001569r 2               @OPCODE_681:   ; [c64_ir] AltPop
001569r 2  E8               inx
00156Ar 2  E8               inx
00156Br 2  68               pla
00156Cr 2  95 00            sta $00,x
00156Er 2  68               pla
00156Fr 2  95 01            sta $01,x
001571r 2               
001571r 2               ; <inline>:0:0 in `main`
001571r 2               @OPCODE_682:   ; [c64_ir] Drop
001571r 2  CA               dex
001572r 2  CA               dex
001573r 2               
001573r 2               ; snake.fth:84:9 in `draw-walls`
001573r 2               @OPCODE_683:   ; [c64_ir] PushLiteral(40)
001573r 2  E8               inx
001574r 2  E8               inx
001575r 2  A9 28            lda #40
001577r 2  95 00            sta $00,x
001579r 2  A9 00            lda #0
00157Br 2  95 01            sta $01,x
00157Dr 2               
00157Dr 2               ; snake.fth:84:15 in `draw-walls`
00157Dr 2               @OPCODE_684:   ; [c64_ir] Add
00157Dr 2                   ; 21
00157Dr 2  CA               dex
00157Er 2  CA               dex
00157Fr 2  18               clc
001580r 2  B5 00            lda $00,x
001582r 2  75 02            adc $02,x
001584r 2  95 00            sta $00,x
001586r 2  B5 01            lda $01,x
001588r 2  75 03            adc $03,x
00158Ar 2  95 01            sta $01,x
00158Cr 2               
00158Cr 2               ; <inline>:0:0 in `main`
00158Cr 2               @OPCODE_685:   ; [c64_ir] PushLiteral(7777)
00158Cr 2  E8               inx
00158Dr 2  E8               inx
00158Er 2  A9 61            lda #97
001590r 2  95 00            sta $00,x
001592r 2  A9 1E            lda #30
001594r 2  95 01            sta $01,x
001596r 2               
001596r 2               ; <inline>:0:0 in `main`
001596r 2               @OPCODE_686:   ; [c64_ir] AltPush
001596r 2  CA               dex
001597r 2  CA               dex
001598r 2  B5 03            lda $03,x
00159Ar 2  48               pha
00159Br 2  B5 02            lda $02,x
00159Dr 2  48               pha
00159Er 2               
00159Er 2               ; src/prelude.fth:33:12 in `loopimpl`
00159Er 2               @OPCODE_687:   ; [c64_ir] AltPop
00159Er 2  E8               inx
00159Fr 2  E8               inx
0015A0r 2  68               pla
0015A1r 2  95 00            sta $00,x
0015A3r 2  68               pla
0015A4r 2  95 01            sta $01,x
0015A6r 2               
0015A6r 2               ; src/prelude.fth:33:15 in `loopimpl`
0015A6r 2               @OPCODE_688:   ; [c64_ir] AltPop
0015A6r 2  E8               inx
0015A7r 2  E8               inx
0015A8r 2  68               pla
0015A9r 2  95 00            sta $00,x
0015ABr 2  68               pla
0015ACr 2  95 01            sta $01,x
0015AEr 2               
0015AEr 2               ; src/prelude.fth:33:18 in `loopimpl`
0015AEr 2               @OPCODE_689:   ; [c64_ir] AltPop
0015AEr 2  E8               inx
0015AFr 2  E8               inx
0015B0r 2  68               pla
0015B1r 2  95 00            sta $00,x
0015B3r 2  68               pla
0015B4r 2  95 01            sta $01,x
0015B6r 2               
0015B6r 2               ; <inline>:0:0 in `main`
0015B6r 2               @OPCODE_690:   ; [c64_ir] PushLiteral(7777)
0015B6r 2  E8               inx
0015B7r 2  E8               inx
0015B8r 2  A9 61            lda #97
0015BAr 2  95 00            sta $00,x
0015BCr 2  A9 1E            lda #30
0015BEr 2  95 01            sta $01,x
0015C0r 2               
0015C0r 2               ; <inline>:0:0 in `main`
0015C0r 2               @OPCODE_691:   ; [c64_ir] AltPush
0015C0r 2  CA               dex
0015C1r 2  CA               dex
0015C2r 2  B5 03            lda $03,x
0015C4r 2  48               pha
0015C5r 2  B5 02            lda $02,x
0015C7r 2  48               pha
0015C8r 2               
0015C8r 2               ; src/prelude.fth:18:8 in `1+`
0015C8r 2               @OPCODE_692:   ; [c64_ir] PushLiteral(1)
0015C8r 2  E8               inx
0015C9r 2  E8               inx
0015CAr 2  A9 01            lda #1
0015CCr 2  95 00            sta $00,x
0015CEr 2  A9 00            lda #0
0015D0r 2  95 01            sta $01,x
0015D2r 2               
0015D2r 2               ; src/prelude.fth:18:10 in `1+`
0015D2r 2               @OPCODE_693:   ; [c64_ir] Add
0015D2r 2                   ; 21
0015D2r 2  CA               dex
0015D3r 2  CA               dex
0015D4r 2  18               clc
0015D5r 2  B5 00            lda $00,x
0015D7r 2  75 02            adc $02,x
0015D9r 2  95 00            sta $00,x
0015DBr 2  B5 01            lda $01,x
0015DDr 2  75 03            adc $03,x
0015DFr 2  95 01            sta $01,x
0015E1r 2               
0015E1r 2               ; <inline>:0:0 in `main`
0015E1r 2               @OPCODE_694:   ; [c64_ir] AltPop
0015E1r 2  E8               inx
0015E2r 2  E8               inx
0015E3r 2  68               pla
0015E4r 2  95 00            sta $00,x
0015E6r 2  68               pla
0015E7r 2  95 01            sta $01,x
0015E9r 2               
0015E9r 2               ; <inline>:0:0 in `main`
0015E9r 2               @OPCODE_695:   ; [c64_ir] Drop
0015E9r 2  CA               dex
0015EAr 2  CA               dex
0015EBr 2               
0015EBr 2               ; <inline>:0:0 in `main`
0015EBr 2               @OPCODE_696:   ; [c64_ir] PushLiteral(7777)
0015EBr 2  E8               inx
0015ECr 2  E8               inx
0015EDr 2  A9 61            lda #97
0015EFr 2  95 00            sta $00,x
0015F1r 2  A9 1E            lda #30
0015F3r 2  95 01            sta $01,x
0015F5r 2               
0015F5r 2               ; <inline>:0:0 in `main`
0015F5r 2               @OPCODE_697:   ; [c64_ir] AltPush
0015F5r 2  CA               dex
0015F6r 2  CA               dex
0015F7r 2  B5 03            lda $03,x
0015F9r 2  48               pha
0015FAr 2  B5 02            lda $02,x
0015FCr 2  48               pha
0015FDr 2               
0015FDr 2               ; <inline>:0:0 in `main`
0015FDr 2               @OPCODE_698:   ; [c64_ir] PushLiteral(7777)
0015FDr 2  E8               inx
0015FEr 2  E8               inx
0015FFr 2  A9 61            lda #97
001601r 2  95 00            sta $00,x
001603r 2  A9 1E            lda #30
001605r 2  95 01            sta $01,x
001607r 2               
001607r 2               ; <inline>:0:0 in `main`
001607r 2               @OPCODE_699:   ; [c64_ir] AltPush
001607r 2  CA               dex
001608r 2  CA               dex
001609r 2  B5 03            lda $03,x
00160Br 2  48               pha
00160Cr 2  B5 02            lda $02,x
00160Er 2  48               pha
00160Fr 2               
00160Fr 2               ; src/prelude.fth:4:10 in `over`
00160Fr 2               @OPCODE_700:   ; [c64_ir] AltPush
00160Fr 2  CA               dex
001610r 2  CA               dex
001611r 2  B5 03            lda $03,x
001613r 2  48               pha
001614r 2  B5 02            lda $02,x
001616r 2  48               pha
001617r 2               
001617r 2               ; src/prelude.fth:4:13 in `over`
001617r 2               @OPCODE_701:   ; [c64_ir] TempStore
001617r 2  CA               dex
001618r 2  CA               dex
001619r 2  B5 03            lda $03,x
00161Br 2  85 96            sta TEMP_PAX2
00161Dr 2  B5 02            lda $02,x
00161Fr 2  85 95            sta TEMP_PAX1
001621r 2               
001621r 2               ; src/prelude.fth:4:19 in `over`
001621r 2               @OPCODE_702:   ; [c64_ir] TempLoad
001621r 2  E8               inx
001622r 2  E8               inx
001623r 2  A5 95            lda TEMP_PAX1
001625r 2  95 00            sta $00,x
001627r 2  A5 96            lda TEMP_PAX2
001629r 2  95 01            sta $01,x
00162Br 2               
00162Br 2               ; src/prelude.fth:4:25 in `over`
00162Br 2               @OPCODE_703:   ; [c64_ir] AltPop
00162Br 2  E8               inx
00162Cr 2  E8               inx
00162Dr 2  68               pla
00162Er 2  95 00            sta $00,x
001630r 2  68               pla
001631r 2  95 01            sta $01,x
001633r 2               
001633r 2               ; src/prelude.fth:4:28 in `over`
001633r 2               @OPCODE_704:   ; [c64_ir] TempLoad
001633r 2  E8               inx
001634r 2  E8               inx
001635r 2  A5 95            lda TEMP_PAX1
001637r 2  95 00            sta $00,x
001639r 2  A5 96            lda TEMP_PAX2
00163Br 2  95 01            sta $01,x
00163Dr 2               
00163Dr 2               ; <inline>:0:0 in `main`
00163Dr 2               @OPCODE_705:   ; [c64_ir] AltPop
00163Dr 2  E8               inx
00163Er 2  E8               inx
00163Fr 2  68               pla
001640r 2  95 00            sta $00,x
001642r 2  68               pla
001643r 2  95 01            sta $01,x
001645r 2               
001645r 2               ; <inline>:0:0 in `main`
001645r 2               @OPCODE_706:   ; [c64_ir] Drop
001645r 2  CA               dex
001646r 2  CA               dex
001647r 2               
001647r 2               ; <inline>:0:0 in `main`
001647r 2               @OPCODE_707:   ; [c64_ir] PushLiteral(7777)
001647r 2  E8               inx
001648r 2  E8               inx
001649r 2  A9 61            lda #97
00164Br 2  95 00            sta $00,x
00164Dr 2  A9 1E            lda #30
00164Fr 2  95 01            sta $01,x
001651r 2               
001651r 2               ; <inline>:0:0 in `main`
001651r 2               @OPCODE_708:   ; [c64_ir] AltPush
001651r 2  CA               dex
001652r 2  CA               dex
001653r 2  B5 03            lda $03,x
001655r 2  48               pha
001656r 2  B5 02            lda $02,x
001658r 2  48               pha
001659r 2               
001659r 2               ; src/prelude.fth:4:10 in `over`
001659r 2               @OPCODE_709:   ; [c64_ir] AltPush
001659r 2  CA               dex
00165Ar 2  CA               dex
00165Br 2  B5 03            lda $03,x
00165Dr 2  48               pha
00165Er 2  B5 02            lda $02,x
001660r 2  48               pha
001661r 2               
001661r 2               ; src/prelude.fth:4:13 in `over`
001661r 2               @OPCODE_710:   ; [c64_ir] TempStore
001661r 2  CA               dex
001662r 2  CA               dex
001663r 2  B5 03            lda $03,x
001665r 2  85 96            sta TEMP_PAX2
001667r 2  B5 02            lda $02,x
001669r 2  85 95            sta TEMP_PAX1
00166Br 2               
00166Br 2               ; src/prelude.fth:4:19 in `over`
00166Br 2               @OPCODE_711:   ; [c64_ir] TempLoad
00166Br 2  E8               inx
00166Cr 2  E8               inx
00166Dr 2  A5 95            lda TEMP_PAX1
00166Fr 2  95 00            sta $00,x
001671r 2  A5 96            lda TEMP_PAX2
001673r 2  95 01            sta $01,x
001675r 2               
001675r 2               ; src/prelude.fth:4:25 in `over`
001675r 2               @OPCODE_712:   ; [c64_ir] AltPop
001675r 2  E8               inx
001676r 2  E8               inx
001677r 2  68               pla
001678r 2  95 00            sta $00,x
00167Ar 2  68               pla
00167Br 2  95 01            sta $01,x
00167Dr 2               
00167Dr 2               ; src/prelude.fth:4:28 in `over`
00167Dr 2               @OPCODE_713:   ; [c64_ir] TempLoad
00167Dr 2  E8               inx
00167Er 2  E8               inx
00167Fr 2  A5 95            lda TEMP_PAX1
001681r 2  95 00            sta $00,x
001683r 2  A5 96            lda TEMP_PAX2
001685r 2  95 01            sta $01,x
001687r 2               
001687r 2               ; <inline>:0:0 in `main`
001687r 2               @OPCODE_714:   ; [c64_ir] AltPop
001687r 2  E8               inx
001688r 2  E8               inx
001689r 2  68               pla
00168Ar 2  95 00            sta $00,x
00168Cr 2  68               pla
00168Dr 2  95 01            sta $01,x
00168Fr 2               
00168Fr 2               ; <inline>:0:0 in `main`
00168Fr 2               @OPCODE_715:   ; [c64_ir] Drop
00168Fr 2  CA               dex
001690r 2  CA               dex
001691r 2               
001691r 2               ; <inline>:0:0 in `main`
001691r 2               @OPCODE_716:   ; [c64_ir] AltPop
001691r 2  E8               inx
001692r 2  E8               inx
001693r 2  68               pla
001694r 2  95 00            sta $00,x
001696r 2  68               pla
001697r 2  95 01            sta $01,x
001699r 2               
001699r 2               ; <inline>:0:0 in `main`
001699r 2               @OPCODE_717:   ; [c64_ir] Drop
001699r 2  CA               dex
00169Ar 2  CA               dex
00169Br 2               
00169Br 2               ; src/prelude.fth:33:29 in `loopimpl`
00169Br 2               @OPCODE_718:   ; [c64_ir] AltPush
00169Br 2  CA               dex
00169Cr 2  CA               dex
00169Dr 2  B5 03            lda $03,x
00169Fr 2  48               pha
0016A0r 2  B5 02            lda $02,x
0016A2r 2  48               pha
0016A3r 2               
0016A3r 2               ; src/prelude.fth:33:32 in `loopimpl`
0016A3r 2               @OPCODE_719:   ; [c64_ir] AltPush
0016A3r 2  CA               dex
0016A4r 2  CA               dex
0016A5r 2  B5 03            lda $03,x
0016A7r 2  48               pha
0016A8r 2  B5 02            lda $02,x
0016AAr 2  48               pha
0016ABr 2               
0016ABr 2               ; <inline>:0:0 in `main`
0016ABr 2               @OPCODE_720:   ; [c64_ir] PushLiteral(7777)
0016ABr 2  E8               inx
0016ACr 2  E8               inx
0016ADr 2  A9 61            lda #97
0016AFr 2  95 00            sta $00,x
0016B1r 2  A9 1E            lda #30
0016B3r 2  95 01            sta $01,x
0016B5r 2               
0016B5r 2               ; <inline>:0:0 in `main`
0016B5r 2               @OPCODE_721:   ; [c64_ir] AltPush
0016B5r 2  CA               dex
0016B6r 2  CA               dex
0016B7r 2  B5 03            lda $03,x
0016B9r 2  48               pha
0016BAr 2  B5 02            lda $02,x
0016BCr 2  48               pha
0016BDr 2               
0016BDr 2               ; <inline>:0:0 in `main`
0016BDr 2               @OPCODE_722:   ; [c64_ir] PushLiteral(7777)
0016BDr 2  E8               inx
0016BEr 2  E8               inx
0016BFr 2  A9 61            lda #97
0016C1r 2  95 00            sta $00,x
0016C3r 2  A9 1E            lda #30
0016C5r 2  95 01            sta $01,x
0016C7r 2               
0016C7r 2               ; <inline>:0:0 in `main`
0016C7r 2               @OPCODE_723:   ; [c64_ir] AltPush
0016C7r 2  CA               dex
0016C8r 2  CA               dex
0016C9r 2  B5 03            lda $03,x
0016CBr 2  48               pha
0016CCr 2  B5 02            lda $02,x
0016CEr 2  48               pha
0016CFr 2               
0016CFr 2               ; <inline>:0:0 in `main`
0016CFr 2               @OPCODE_724:   ; [c64_ir] PushLiteral(7777)
0016CFr 2  E8               inx
0016D0r 2  E8               inx
0016D1r 2  A9 61            lda #97
0016D3r 2  95 00            sta $00,x
0016D5r 2  A9 1E            lda #30
0016D7r 2  95 01            sta $01,x
0016D9r 2               
0016D9r 2               ; <inline>:0:0 in `main`
0016D9r 2               @OPCODE_725:   ; [c64_ir] AltPush
0016D9r 2  CA               dex
0016DAr 2  CA               dex
0016DBr 2  B5 03            lda $03,x
0016DDr 2  48               pha
0016DEr 2  B5 02            lda $02,x
0016E0r 2  48               pha
0016E1r 2               
0016E1r 2               ; <inline>:0:0 in `main`
0016E1r 2               @OPCODE_726:   ; [c64_ir] PushLiteral(7777)
0016E1r 2  E8               inx
0016E2r 2  E8               inx
0016E3r 2  A9 61            lda #97
0016E5r 2  95 00            sta $00,x
0016E7r 2  A9 1E            lda #30
0016E9r 2  95 01            sta $01,x
0016EBr 2               
0016EBr 2               ; <inline>:0:0 in `main`
0016EBr 2               @OPCODE_727:   ; [c64_ir] AltPush
0016EBr 2  CA               dex
0016ECr 2  CA               dex
0016EDr 2  B5 03            lda $03,x
0016EFr 2  48               pha
0016F0r 2  B5 02            lda $02,x
0016F2r 2  48               pha
0016F3r 2               
0016F3r 2               ; src/prelude.fth:14:12 in `invert`
0016F3r 2               @OPCODE_728:   ; [c64_ir] PushLiteral(-1)
0016F3r 2  E8               inx
0016F4r 2  E8               inx
0016F5r 2  A9 FF            lda #255
0016F7r 2  95 00            sta $00,x
0016F9r 2  A9 FF            lda #255
0016FBr 2  95 01            sta $01,x
0016FDr 2               
0016FDr 2               ; src/prelude.fth:14:15 in `invert`
0016FDr 2               @OPCODE_729:   ; [c64_ir] Nand
0016FDr 2                   ; 26
0016FDr 2  CA               dex
0016FEr 2  CA               dex
0016FFr 2  B5 00            lda $00,x
001701r 2  35 02            and $02,x
001703r 2  49 FF            eor #$ff
001705r 2  95 00            sta $00,x
001707r 2  B5 01            lda $01,x
001709r 2  35 03            and $03,x
00170Br 2  49 FF            eor #$ff
00170Dr 2  95 01            sta $01,x
00170Fr 2               
00170Fr 2               ; <inline>:0:0 in `main`
00170Fr 2               @OPCODE_730:   ; [c64_ir] AltPop
00170Fr 2  E8               inx
001710r 2  E8               inx
001711r 2  68               pla
001712r 2  95 00            sta $00,x
001714r 2  68               pla
001715r 2  95 01            sta $01,x
001717r 2               
001717r 2               ; <inline>:0:0 in `main`
001717r 2               @OPCODE_731:   ; [c64_ir] Drop
001717r 2  CA               dex
001718r 2  CA               dex
001719r 2               
001719r 2               ; src/prelude.fth:15:19 in `negate`
001719r 2               @OPCODE_732:   ; [c64_ir] PushLiteral(1)
001719r 2  E8               inx
00171Ar 2  E8               inx
00171Br 2  A9 01            lda #1
00171Dr 2  95 00            sta $00,x
00171Fr 2  A9 00            lda #0
001721r 2  95 01            sta $01,x
001723r 2               
001723r 2               ; src/prelude.fth:15:21 in `negate`
001723r 2               @OPCODE_733:   ; [c64_ir] Add
001723r 2                   ; 21
001723r 2  CA               dex
001724r 2  CA               dex
001725r 2  18               clc
001726r 2  B5 00            lda $00,x
001728r 2  75 02            adc $02,x
00172Ar 2  95 00            sta $00,x
00172Cr 2  B5 01            lda $01,x
00172Er 2  75 03            adc $03,x
001730r 2  95 01            sta $01,x
001732r 2               
001732r 2               ; <inline>:0:0 in `main`
001732r 2               @OPCODE_734:   ; [c64_ir] AltPop
001732r 2  E8               inx
001733r 2  E8               inx
001734r 2  68               pla
001735r 2  95 00            sta $00,x
001737r 2  68               pla
001738r 2  95 01            sta $01,x
00173Ar 2               
00173Ar 2               ; <inline>:0:0 in `main`
00173Ar 2               @OPCODE_735:   ; [c64_ir] Drop
00173Ar 2  CA               dex
00173Br 2  CA               dex
00173Cr 2               
00173Cr 2               ; src/prelude.fth:16:19 in `-`
00173Cr 2               @OPCODE_736:   ; [c64_ir] Add
00173Cr 2                   ; 21
00173Cr 2  CA               dex
00173Dr 2  CA               dex
00173Er 2  18               clc
00173Fr 2  B5 00            lda $00,x
001741r 2  75 02            adc $02,x
001743r 2  95 00            sta $00,x
001745r 2  B5 01            lda $01,x
001747r 2  75 03            adc $03,x
001749r 2  95 01            sta $01,x
00174Br 2               
00174Br 2               ; <inline>:0:0 in `main`
00174Br 2               @OPCODE_737:   ; [c64_ir] AltPop
00174Br 2  E8               inx
00174Cr 2  E8               inx
00174Dr 2  68               pla
00174Er 2  95 00            sta $00,x
001750r 2  68               pla
001751r 2  95 01            sta $01,x
001753r 2               
001753r 2               ; <inline>:0:0 in `main`
001753r 2               @OPCODE_738:   ; [c64_ir] Drop
001753r 2  CA               dex
001754r 2  CA               dex
001755r 2               
001755r 2               ; <inline>:0:0 in `main`
001755r 2               @OPCODE_739:   ; [c64_ir] PushLiteral(7777)
001755r 2  E8               inx
001756r 2  E8               inx
001757r 2  A9 61            lda #97
001759r 2  95 00            sta $00,x
00175Br 2  A9 1E            lda #30
00175Dr 2  95 01            sta $01,x
00175Fr 2               
00175Fr 2               ; <inline>:0:0 in `main`
00175Fr 2               @OPCODE_740:   ; [c64_ir] AltPush
00175Fr 2  CA               dex
001760r 2  CA               dex
001761r 2  B5 03            lda $03,x
001763r 2  48               pha
001764r 2  B5 02            lda $02,x
001766r 2  48               pha
001767r 2               
001767r 2               ; src/prelude.fth:21:8 in `0=`
001767r 2               @OPCODE_741:   ; [c64_ir] JumpIf0(32)
001767r 2  CA               dex
001768r 2  CA               dex
001769r 2  B5 02            lda $02,x
00176Br 2  15 03            ora $03,x
00176Dr 2  D0 03            bne *+5
00176Fr 2  4C rr rr         jmp @target_32
001772r 2               
001772r 2               @target_31:
001772r 2               
001772r 2               ; src/prelude.fth:21:11 in `0=`
001772r 2               @OPCODE_743:   ; [c64_ir] PushLiteral(0)
001772r 2  E8               inx
001773r 2  E8               inx
001774r 2  A9 00            lda #0
001776r 2  95 00            sta $00,x
001778r 2  A9 00            lda #0
00177Ar 2  95 01            sta $01,x
00177Cr 2               
00177Cr 2               ; src/prelude.fth:21:13 in `0=`
00177Cr 2               @OPCODE_744:   ; [c64_ir] JumpElse(33)
00177Cr 2  4C rr rr         jmp @target_33
00177Fr 2               
00177Fr 2               @target_32:
00177Fr 2               
00177Fr 2               ; src/prelude.fth:21:18 in `0=`
00177Fr 2               @OPCODE_746:   ; [c64_ir] PushLiteral(-1)
00177Fr 2  E8               inx
001780r 2  E8               inx
001781r 2  A9 FF            lda #255
001783r 2  95 00            sta $00,x
001785r 2  A9 FF            lda #255
001787r 2  95 01            sta $01,x
001789r 2               
001789r 2               ; src/prelude.fth:21:21 in `0=`
001789r 2               @OPCODE_747:   ; [c64_ir] JumpTarget(32)
001789r 2               
001789r 2               @target_33:
001789r 2               
001789r 2               ; <inline>:0:0 in `main`
001789r 2               @OPCODE_749:   ; [c64_ir] AltPop
001789r 2  E8               inx
00178Ar 2  E8               inx
00178Br 2  68               pla
00178Cr 2  95 00            sta $00,x
00178Er 2  68               pla
00178Fr 2  95 01            sta $01,x
001791r 2               
001791r 2               ; <inline>:0:0 in `main`
001791r 2               @OPCODE_750:   ; [c64_ir] Drop
001791r 2  CA               dex
001792r 2  CA               dex
001793r 2               
001793r 2               ; <inline>:0:0 in `main`
001793r 2               @OPCODE_751:   ; [c64_ir] AltPop
001793r 2  E8               inx
001794r 2  E8               inx
001795r 2  68               pla
001796r 2  95 00            sta $00,x
001798r 2  68               pla
001799r 2  95 01            sta $01,x
00179Br 2               
00179Br 2               ; <inline>:0:0 in `main`
00179Br 2               @OPCODE_752:   ; [c64_ir] Drop
00179Br 2  CA               dex
00179Cr 2  CA               dex
00179Dr 2               
00179Dr 2               ; <inline>:0:0 in `main`
00179Dr 2               @OPCODE_753:   ; [c64_ir] PushLiteral(7777)
00179Dr 2  E8               inx
00179Er 2  E8               inx
00179Fr 2  A9 61            lda #97
0017A1r 2  95 00            sta $00,x
0017A3r 2  A9 1E            lda #30
0017A5r 2  95 01            sta $01,x
0017A7r 2               
0017A7r 2               ; <inline>:0:0 in `main`
0017A7r 2               @OPCODE_754:   ; [c64_ir] AltPush
0017A7r 2  CA               dex
0017A8r 2  CA               dex
0017A9r 2  B5 03            lda $03,x
0017ABr 2  48               pha
0017ACr 2  B5 02            lda $02,x
0017AEr 2  48               pha
0017AFr 2               
0017AFr 2               ; src/prelude.fth:3:10 in `swap`
0017AFr 2               @OPCODE_755:   ; [c64_ir] AltPush
0017AFr 2  CA               dex
0017B0r 2  CA               dex
0017B1r 2  B5 03            lda $03,x
0017B3r 2  48               pha
0017B4r 2  B5 02            lda $02,x
0017B6r 2  48               pha
0017B7r 2               
0017B7r 2               ; src/prelude.fth:3:13 in `swap`
0017B7r 2               @OPCODE_756:   ; [c64_ir] TempStore
0017B7r 2  CA               dex
0017B8r 2  CA               dex
0017B9r 2  B5 03            lda $03,x
0017BBr 2  85 96            sta TEMP_PAX2
0017BDr 2  B5 02            lda $02,x
0017BFr 2  85 95            sta TEMP_PAX1
0017C1r 2               
0017C1r 2               ; src/prelude.fth:3:19 in `swap`
0017C1r 2               @OPCODE_757:   ; [c64_ir] AltPop
0017C1r 2  E8               inx
0017C2r 2  E8               inx
0017C3r 2  68               pla
0017C4r 2  95 00            sta $00,x
0017C6r 2  68               pla
0017C7r 2  95 01            sta $01,x
0017C9r 2               
0017C9r 2               ; src/prelude.fth:3:22 in `swap`
0017C9r 2               @OPCODE_758:   ; [c64_ir] TempLoad
0017C9r 2  E8               inx
0017CAr 2  E8               inx
0017CBr 2  A5 95            lda TEMP_PAX1
0017CDr 2  95 00            sta $00,x
0017CFr 2  A5 96            lda TEMP_PAX2
0017D1r 2  95 01            sta $01,x
0017D3r 2               
0017D3r 2               ; <inline>:0:0 in `main`
0017D3r 2               @OPCODE_759:   ; [c64_ir] AltPop
0017D3r 2  E8               inx
0017D4r 2  E8               inx
0017D5r 2  68               pla
0017D6r 2  95 00            sta $00,x
0017D8r 2  68               pla
0017D9r 2  95 01            sta $01,x
0017DBr 2               
0017DBr 2               ; <inline>:0:0 in `main`
0017DBr 2               @OPCODE_760:   ; [c64_ir] Drop
0017DBr 2  CA               dex
0017DCr 2  CA               dex
0017DDr 2               
0017DDr 2               ; src/prelude.fth:33:42 in `loopimpl`
0017DDr 2               @OPCODE_761:   ; [c64_ir] AltPush
0017DDr 2  CA               dex
0017DEr 2  CA               dex
0017DFr 2  B5 03            lda $03,x
0017E1r 2  48               pha
0017E2r 2  B5 02            lda $02,x
0017E4r 2  48               pha
0017E5r 2               
0017E5r 2               ; <inline>:0:0 in `main`
0017E5r 2               @OPCODE_762:   ; [c64_ir] AltPop
0017E5r 2  E8               inx
0017E6r 2  E8               inx
0017E7r 2  68               pla
0017E8r 2  95 00            sta $00,x
0017EAr 2  68               pla
0017EBr 2  95 01            sta $01,x
0017EDr 2               
0017EDr 2               ; <inline>:0:0 in `main`
0017EDr 2               @OPCODE_763:   ; [c64_ir] Drop
0017EDr 2  CA               dex
0017EEr 2  CA               dex
0017EFr 2               
0017EFr 2               ; snake.fth:85:5 in `draw-walls`
0017EFr 2               @OPCODE_764:   ; [c64_ir] LoopIf0(30)
0017EFr 2  CA               dex
0017F0r 2  CA               dex
0017F1r 2  B5 02            lda $02,x
0017F3r 2  15 03            ora $03,x
0017F5r 2  D0 03            bne *+5
0017F7r 2  4C rr rr         jmp @target_30
0017FAr 2               
0017FAr 2               @target_34:
0017FAr 2               
0017FAr 2               ; snake.fth:85:5 in `draw-walls`
0017FAr 2               @OPCODE_766:   ; [c64_ir] AltPop
0017FAr 2  E8               inx
0017FBr 2  E8               inx
0017FCr 2  68               pla
0017FDr 2  95 00            sta $00,x
0017FFr 2  68               pla
001800r 2  95 01            sta $01,x
001802r 2               
001802r 2               ; snake.fth:85:5 in `draw-walls`
001802r 2               @OPCODE_767:   ; [c64_ir] Drop
001802r 2  CA               dex
001803r 2  CA               dex
001804r 2               
001804r 2               ; snake.fth:85:5 in `draw-walls`
001804r 2               @OPCODE_768:   ; [c64_ir] AltPop
001804r 2  E8               inx
001805r 2  E8               inx
001806r 2  68               pla
001807r 2  95 00            sta $00,x
001809r 2  68               pla
00180Ar 2  95 01            sta $01,x
00180Cr 2               
00180Cr 2               ; snake.fth:85:5 in `draw-walls`
00180Cr 2               @OPCODE_769:   ; [c64_ir] Drop
00180Cr 2  CA               dex
00180Dr 2  CA               dex
00180Er 2               
00180Er 2               ; snake.fth:86:5 in `draw-walls`
00180Er 2               @OPCODE_770:   ; [c64_ir] Drop
00180Er 2  CA               dex
00180Fr 2  CA               dex
001810r 2               
001810r 2               ; snake.fth:89:5 in `draw-walls`
001810r 2               @OPCODE_771:   ; [c64_ir] PushLiteral(0)
001810r 2  E8               inx
001811r 2  E8               inx
001812r 2  A9 00            lda #0
001814r 2  95 00            sta $00,x
001816r 2  A9 00            lda #0
001818r 2  95 01            sta $01,x
00181Ar 2               
00181Ar 2               ; snake.fth:90:5 in `draw-walls`
00181Ar 2               @OPCODE_772:   ; [c64_ir] PushLiteral(25)
00181Ar 2  E8               inx
00181Br 2  E8               inx
00181Cr 2  A9 19            lda #25
00181Er 2  95 00            sta $00,x
001820r 2  A9 00            lda #0
001822r 2  95 01            sta $01,x
001824r 2               
001824r 2               ; snake.fth:90:12 in `draw-walls`
001824r 2               @OPCODE_773:   ; [c64_ir] PushLiteral(0)
001824r 2  E8               inx
001825r 2  E8               inx
001826r 2  A9 00            lda #0
001828r 2  95 00            sta $00,x
00182Ar 2  A9 00            lda #0
00182Cr 2  95 01            sta $01,x
00182Er 2               
00182Er 2               ; snake.fth:90:14 in `draw-walls`
00182Er 2               @OPCODE_774:   ; [c64_ir] AltPush
00182Er 2  CA               dex
00182Fr 2  CA               dex
001830r 2  B5 03            lda $03,x
001832r 2  48               pha
001833r 2  B5 02            lda $02,x
001835r 2  48               pha
001836r 2               
001836r 2               ; snake.fth:90:14 in `draw-walls`
001836r 2               @OPCODE_775:   ; [c64_ir] AltPush
001836r 2  CA               dex
001837r 2  CA               dex
001838r 2  B5 03            lda $03,x
00183Ar 2  48               pha
00183Br 2  B5 02            lda $02,x
00183Dr 2  48               pha
00183Er 2               
00183Er 2               ; snake.fth:90:14 in `draw-walls`
00183Er 2               @OPCODE_776:   ; [c64_ir] LoopTarget(34)
00183Er 2               
00183Er 2               @target_35:
00183Er 2               
00183Er 2               ; snake.fth:91:9 in `draw-walls`
00183Er 2               @OPCODE_778:   ; [c64_ir] PushLiteral(230)
00183Er 2  E8               inx
00183Fr 2  E8               inx
001840r 2  A9 E6            lda #230
001842r 2  95 00            sta $00,x
001844r 2  A9 00            lda #0
001846r 2  95 01            sta $01,x
001848r 2               
001848r 2               ; <inline>:0:0 in `main`
001848r 2               @OPCODE_779:   ; [c64_ir] PushLiteral(7777)
001848r 2  E8               inx
001849r 2  E8               inx
00184Ar 2  A9 61            lda #97
00184Cr 2  95 00            sta $00,x
00184Er 2  A9 1E            lda #30
001850r 2  95 01            sta $01,x
001852r 2               
001852r 2               ; <inline>:0:0 in `main`
001852r 2               @OPCODE_780:   ; [c64_ir] AltPush
001852r 2  CA               dex
001853r 2  CA               dex
001854r 2  B5 03            lda $03,x
001856r 2  48               pha
001857r 2  B5 02            lda $02,x
001859r 2  48               pha
00185Ar 2               
00185Ar 2               ; src/prelude.fth:4:10 in `over`
00185Ar 2               @OPCODE_781:   ; [c64_ir] AltPush
00185Ar 2  CA               dex
00185Br 2  CA               dex
00185Cr 2  B5 03            lda $03,x
00185Er 2  48               pha
00185Fr 2  B5 02            lda $02,x
001861r 2  48               pha
001862r 2               
001862r 2               ; src/prelude.fth:4:13 in `over`
001862r 2               @OPCODE_782:   ; [c64_ir] TempStore
001862r 2  CA               dex
001863r 2  CA               dex
001864r 2  B5 03            lda $03,x
001866r 2  85 96            sta TEMP_PAX2
001868r 2  B5 02            lda $02,x
00186Ar 2  85 95            sta TEMP_PAX1
00186Cr 2               
00186Cr 2               ; src/prelude.fth:4:19 in `over`
00186Cr 2               @OPCODE_783:   ; [c64_ir] TempLoad
00186Cr 2  E8               inx
00186Dr 2  E8               inx
00186Er 2  A5 95            lda TEMP_PAX1
001870r 2  95 00            sta $00,x
001872r 2  A5 96            lda TEMP_PAX2
001874r 2  95 01            sta $01,x
001876r 2               
001876r 2               ; src/prelude.fth:4:25 in `over`
001876r 2               @OPCODE_784:   ; [c64_ir] AltPop
001876r 2  E8               inx
001877r 2  E8               inx
001878r 2  68               pla
001879r 2  95 00            sta $00,x
00187Br 2  68               pla
00187Cr 2  95 01            sta $01,x
00187Er 2               
00187Er 2               ; src/prelude.fth:4:28 in `over`
00187Er 2               @OPCODE_785:   ; [c64_ir] TempLoad
00187Er 2  E8               inx
00187Fr 2  E8               inx
001880r 2  A5 95            lda TEMP_PAX1
001882r 2  95 00            sta $00,x
001884r 2  A5 96            lda TEMP_PAX2
001886r 2  95 01            sta $01,x
001888r 2               
001888r 2               ; <inline>:0:0 in `main`
001888r 2               @OPCODE_786:   ; [c64_ir] AltPop
001888r 2  E8               inx
001889r 2  E8               inx
00188Ar 2  68               pla
00188Br 2  95 00            sta $00,x
00188Dr 2  68               pla
00188Er 2  95 01            sta $01,x
001890r 2               
001890r 2               ; <inline>:0:0 in `main`
001890r 2               @OPCODE_787:   ; [c64_ir] Drop
001890r 2  CA               dex
001891r 2  CA               dex
001892r 2               
001892r 2               ; <inline>:0:0 in `main`
001892r 2               @OPCODE_788:   ; [c64_ir] PushLiteral(7777)
001892r 2  E8               inx
001893r 2  E8               inx
001894r 2  A9 61            lda #97
001896r 2  95 00            sta $00,x
001898r 2  A9 1E            lda #30
00189Ar 2  95 01            sta $01,x
00189Cr 2               
00189Cr 2               ; <inline>:0:0 in `main`
00189Cr 2               @OPCODE_789:   ; [c64_ir] AltPush
00189Cr 2  CA               dex
00189Dr 2  CA               dex
00189Er 2  B5 03            lda $03,x
0018A0r 2  48               pha
0018A1r 2  B5 02            lda $02,x
0018A3r 2  48               pha
0018A4r 2               
0018A4r 2               ; snake.fth:49:34 in `draw-index`
0018A4r 2               @OPCODE_790:   ; [c64_ir] PushLiteral(1024)
0018A4r 2  E8               inx
0018A5r 2  E8               inx
0018A6r 2  A9 00            lda #0
0018A8r 2  95 00            sta $00,x
0018AAr 2  A9 04            lda #4
0018ACr 2  95 01            sta $01,x
0018AEr 2               
0018AEr 2               ; snake.fth:49:43 in `draw-index`
0018AEr 2               @OPCODE_791:   ; [c64_ir] Add
0018AEr 2                   ; 21
0018AEr 2  CA               dex
0018AFr 2  CA               dex
0018B0r 2  18               clc
0018B1r 2  B5 00            lda $00,x
0018B3r 2  75 02            adc $02,x
0018B5r 2  95 00            sta $00,x
0018B7r 2  B5 01            lda $01,x
0018B9r 2  75 03            adc $03,x
0018BBr 2  95 01            sta $01,x
0018BDr 2               
0018BDr 2               ; snake.fth:49:45 in `draw-index`
0018BDr 2               @OPCODE_792:   ; [c64_ir] Store8
0018BDr 2  CA               dex
0018BEr 2  CA               dex
0018BFr 2  CA               dex
0018C0r 2  CA               dex
0018C1r 2  B5 02            lda $02,x
0018C3r 2  81 04            sta ($04,x)
0018C5r 2                   ; TODO high byte
0018C5r 2               
0018C5r 2               ; <inline>:0:0 in `main`
0018C5r 2               @OPCODE_793:   ; [c64_ir] AltPop
0018C5r 2  E8               inx
0018C6r 2  E8               inx
0018C7r 2  68               pla
0018C8r 2  95 00            sta $00,x
0018CAr 2  68               pla
0018CBr 2  95 01            sta $01,x
0018CDr 2               
0018CDr 2               ; <inline>:0:0 in `main`
0018CDr 2               @OPCODE_794:   ; [c64_ir] Drop
0018CDr 2  CA               dex
0018CEr 2  CA               dex
0018CFr 2               
0018CFr 2               ; snake.fth:92:9 in `draw-walls`
0018CFr 2               @OPCODE_795:   ; [c64_ir] PushLiteral(40)
0018CFr 2  E8               inx
0018D0r 2  E8               inx
0018D1r 2  A9 28            lda #40
0018D3r 2  95 00            sta $00,x
0018D5r 2  A9 00            lda #0
0018D7r 2  95 01            sta $01,x
0018D9r 2               
0018D9r 2               ; snake.fth:92:15 in `draw-walls`
0018D9r 2               @OPCODE_796:   ; [c64_ir] Add
0018D9r 2                   ; 21
0018D9r 2  CA               dex
0018DAr 2  CA               dex
0018DBr 2  18               clc
0018DCr 2  B5 00            lda $00,x
0018DEr 2  75 02            adc $02,x
0018E0r 2  95 00            sta $00,x
0018E2r 2  B5 01            lda $01,x
0018E4r 2  75 03            adc $03,x
0018E6r 2  95 01            sta $01,x
0018E8r 2               
0018E8r 2               ; <inline>:0:0 in `main`
0018E8r 2               @OPCODE_797:   ; [c64_ir] PushLiteral(7777)
0018E8r 2  E8               inx
0018E9r 2  E8               inx
0018EAr 2  A9 61            lda #97
0018ECr 2  95 00            sta $00,x
0018EEr 2  A9 1E            lda #30
0018F0r 2  95 01            sta $01,x
0018F2r 2               
0018F2r 2               ; <inline>:0:0 in `main`
0018F2r 2               @OPCODE_798:   ; [c64_ir] AltPush
0018F2r 2  CA               dex
0018F3r 2  CA               dex
0018F4r 2  B5 03            lda $03,x
0018F6r 2  48               pha
0018F7r 2  B5 02            lda $02,x
0018F9r 2  48               pha
0018FAr 2               
0018FAr 2               ; src/prelude.fth:33:12 in `loopimpl`
0018FAr 2               @OPCODE_799:   ; [c64_ir] AltPop
0018FAr 2  E8               inx
0018FBr 2  E8               inx
0018FCr 2  68               pla
0018FDr 2  95 00            sta $00,x
0018FFr 2  68               pla
001900r 2  95 01            sta $01,x
001902r 2               
001902r 2               ; src/prelude.fth:33:15 in `loopimpl`
001902r 2               @OPCODE_800:   ; [c64_ir] AltPop
001902r 2  E8               inx
001903r 2  E8               inx
001904r 2  68               pla
001905r 2  95 00            sta $00,x
001907r 2  68               pla
001908r 2  95 01            sta $01,x
00190Ar 2               
00190Ar 2               ; src/prelude.fth:33:18 in `loopimpl`
00190Ar 2               @OPCODE_801:   ; [c64_ir] AltPop
00190Ar 2  E8               inx
00190Br 2  E8               inx
00190Cr 2  68               pla
00190Dr 2  95 00            sta $00,x
00190Fr 2  68               pla
001910r 2  95 01            sta $01,x
001912r 2               
001912r 2               ; <inline>:0:0 in `main`
001912r 2               @OPCODE_802:   ; [c64_ir] PushLiteral(7777)
001912r 2  E8               inx
001913r 2  E8               inx
001914r 2  A9 61            lda #97
001916r 2  95 00            sta $00,x
001918r 2  A9 1E            lda #30
00191Ar 2  95 01            sta $01,x
00191Cr 2               
00191Cr 2               ; <inline>:0:0 in `main`
00191Cr 2               @OPCODE_803:   ; [c64_ir] AltPush
00191Cr 2  CA               dex
00191Dr 2  CA               dex
00191Er 2  B5 03            lda $03,x
001920r 2  48               pha
001921r 2  B5 02            lda $02,x
001923r 2  48               pha
001924r 2               
001924r 2               ; src/prelude.fth:18:8 in `1+`
001924r 2               @OPCODE_804:   ; [c64_ir] PushLiteral(1)
001924r 2  E8               inx
001925r 2  E8               inx
001926r 2  A9 01            lda #1
001928r 2  95 00            sta $00,x
00192Ar 2  A9 00            lda #0
00192Cr 2  95 01            sta $01,x
00192Er 2               
00192Er 2               ; src/prelude.fth:18:10 in `1+`
00192Er 2               @OPCODE_805:   ; [c64_ir] Add
00192Er 2                   ; 21
00192Er 2  CA               dex
00192Fr 2  CA               dex
001930r 2  18               clc
001931r 2  B5 00            lda $00,x
001933r 2  75 02            adc $02,x
001935r 2  95 00            sta $00,x
001937r 2  B5 01            lda $01,x
001939r 2  75 03            adc $03,x
00193Br 2  95 01            sta $01,x
00193Dr 2               
00193Dr 2               ; <inline>:0:0 in `main`
00193Dr 2               @OPCODE_806:   ; [c64_ir] AltPop
00193Dr 2  E8               inx
00193Er 2  E8               inx
00193Fr 2  68               pla
001940r 2  95 00            sta $00,x
001942r 2  68               pla
001943r 2  95 01            sta $01,x
001945r 2               
001945r 2               ; <inline>:0:0 in `main`
001945r 2               @OPCODE_807:   ; [c64_ir] Drop
001945r 2  CA               dex
001946r 2  CA               dex
001947r 2               
001947r 2               ; <inline>:0:0 in `main`
001947r 2               @OPCODE_808:   ; [c64_ir] PushLiteral(7777)
001947r 2  E8               inx
001948r 2  E8               inx
001949r 2  A9 61            lda #97
00194Br 2  95 00            sta $00,x
00194Dr 2  A9 1E            lda #30
00194Fr 2  95 01            sta $01,x
001951r 2               
001951r 2               ; <inline>:0:0 in `main`
001951r 2               @OPCODE_809:   ; [c64_ir] AltPush
001951r 2  CA               dex
001952r 2  CA               dex
001953r 2  B5 03            lda $03,x
001955r 2  48               pha
001956r 2  B5 02            lda $02,x
001958r 2  48               pha
001959r 2               
001959r 2               ; <inline>:0:0 in `main`
001959r 2               @OPCODE_810:   ; [c64_ir] PushLiteral(7777)
001959r 2  E8               inx
00195Ar 2  E8               inx
00195Br 2  A9 61            lda #97
00195Dr 2  95 00            sta $00,x
00195Fr 2  A9 1E            lda #30
001961r 2  95 01            sta $01,x
001963r 2               
001963r 2               ; <inline>:0:0 in `main`
001963r 2               @OPCODE_811:   ; [c64_ir] AltPush
001963r 2  CA               dex
001964r 2  CA               dex
001965r 2  B5 03            lda $03,x
001967r 2  48               pha
001968r 2  B5 02            lda $02,x
00196Ar 2  48               pha
00196Br 2               
00196Br 2               ; src/prelude.fth:4:10 in `over`
00196Br 2               @OPCODE_812:   ; [c64_ir] AltPush
00196Br 2  CA               dex
00196Cr 2  CA               dex
00196Dr 2  B5 03            lda $03,x
00196Fr 2  48               pha
001970r 2  B5 02            lda $02,x
001972r 2  48               pha
001973r 2               
001973r 2               ; src/prelude.fth:4:13 in `over`
001973r 2               @OPCODE_813:   ; [c64_ir] TempStore
001973r 2  CA               dex
001974r 2  CA               dex
001975r 2  B5 03            lda $03,x
001977r 2  85 96            sta TEMP_PAX2
001979r 2  B5 02            lda $02,x
00197Br 2  85 95            sta TEMP_PAX1
00197Dr 2               
00197Dr 2               ; src/prelude.fth:4:19 in `over`
00197Dr 2               @OPCODE_814:   ; [c64_ir] TempLoad
00197Dr 2  E8               inx
00197Er 2  E8               inx
00197Fr 2  A5 95            lda TEMP_PAX1
001981r 2  95 00            sta $00,x
001983r 2  A5 96            lda TEMP_PAX2
001985r 2  95 01            sta $01,x
001987r 2               
001987r 2               ; src/prelude.fth:4:25 in `over`
001987r 2               @OPCODE_815:   ; [c64_ir] AltPop
001987r 2  E8               inx
001988r 2  E8               inx
001989r 2  68               pla
00198Ar 2  95 00            sta $00,x
00198Cr 2  68               pla
00198Dr 2  95 01            sta $01,x
00198Fr 2               
00198Fr 2               ; src/prelude.fth:4:28 in `over`
00198Fr 2               @OPCODE_816:   ; [c64_ir] TempLoad
00198Fr 2  E8               inx
001990r 2  E8               inx
001991r 2  A5 95            lda TEMP_PAX1
001993r 2  95 00            sta $00,x
001995r 2  A5 96            lda TEMP_PAX2
001997r 2  95 01            sta $01,x
001999r 2               
001999r 2               ; <inline>:0:0 in `main`
001999r 2               @OPCODE_817:   ; [c64_ir] AltPop
001999r 2  E8               inx
00199Ar 2  E8               inx
00199Br 2  68               pla
00199Cr 2  95 00            sta $00,x
00199Er 2  68               pla
00199Fr 2  95 01            sta $01,x
0019A1r 2               
0019A1r 2               ; <inline>:0:0 in `main`
0019A1r 2               @OPCODE_818:   ; [c64_ir] Drop
0019A1r 2  CA               dex
0019A2r 2  CA               dex
0019A3r 2               
0019A3r 2               ; <inline>:0:0 in `main`
0019A3r 2               @OPCODE_819:   ; [c64_ir] PushLiteral(7777)
0019A3r 2  E8               inx
0019A4r 2  E8               inx
0019A5r 2  A9 61            lda #97
0019A7r 2  95 00            sta $00,x
0019A9r 2  A9 1E            lda #30
0019ABr 2  95 01            sta $01,x
0019ADr 2               
0019ADr 2               ; <inline>:0:0 in `main`
0019ADr 2               @OPCODE_820:   ; [c64_ir] AltPush
0019ADr 2  CA               dex
0019AEr 2  CA               dex
0019AFr 2  B5 03            lda $03,x
0019B1r 2  48               pha
0019B2r 2  B5 02            lda $02,x
0019B4r 2  48               pha
0019B5r 2               
0019B5r 2               ; src/prelude.fth:4:10 in `over`
0019B5r 2               @OPCODE_821:   ; [c64_ir] AltPush
0019B5r 2  CA               dex
0019B6r 2  CA               dex
0019B7r 2  B5 03            lda $03,x
0019B9r 2  48               pha
0019BAr 2  B5 02            lda $02,x
0019BCr 2  48               pha
0019BDr 2               
0019BDr 2               ; src/prelude.fth:4:13 in `over`
0019BDr 2               @OPCODE_822:   ; [c64_ir] TempStore
0019BDr 2  CA               dex
0019BEr 2  CA               dex
0019BFr 2  B5 03            lda $03,x
0019C1r 2  85 96            sta TEMP_PAX2
0019C3r 2  B5 02            lda $02,x
0019C5r 2  85 95            sta TEMP_PAX1
0019C7r 2               
0019C7r 2               ; src/prelude.fth:4:19 in `over`
0019C7r 2               @OPCODE_823:   ; [c64_ir] TempLoad
0019C7r 2  E8               inx
0019C8r 2  E8               inx
0019C9r 2  A5 95            lda TEMP_PAX1
0019CBr 2  95 00            sta $00,x
0019CDr 2  A5 96            lda TEMP_PAX2
0019CFr 2  95 01            sta $01,x
0019D1r 2               
0019D1r 2               ; src/prelude.fth:4:25 in `over`
0019D1r 2               @OPCODE_824:   ; [c64_ir] AltPop
0019D1r 2  E8               inx
0019D2r 2  E8               inx
0019D3r 2  68               pla
0019D4r 2  95 00            sta $00,x
0019D6r 2  68               pla
0019D7r 2  95 01            sta $01,x
0019D9r 2               
0019D9r 2               ; src/prelude.fth:4:28 in `over`
0019D9r 2               @OPCODE_825:   ; [c64_ir] TempLoad
0019D9r 2  E8               inx
0019DAr 2  E8               inx
0019DBr 2  A5 95            lda TEMP_PAX1
0019DDr 2  95 00            sta $00,x
0019DFr 2  A5 96            lda TEMP_PAX2
0019E1r 2  95 01            sta $01,x
0019E3r 2               
0019E3r 2               ; <inline>:0:0 in `main`
0019E3r 2               @OPCODE_826:   ; [c64_ir] AltPop
0019E3r 2  E8               inx
0019E4r 2  E8               inx
0019E5r 2  68               pla
0019E6r 2  95 00            sta $00,x
0019E8r 2  68               pla
0019E9r 2  95 01            sta $01,x
0019EBr 2               
0019EBr 2               ; <inline>:0:0 in `main`
0019EBr 2               @OPCODE_827:   ; [c64_ir] Drop
0019EBr 2  CA               dex
0019ECr 2  CA               dex
0019EDr 2               
0019EDr 2               ; <inline>:0:0 in `main`
0019EDr 2               @OPCODE_828:   ; [c64_ir] AltPop
0019EDr 2  E8               inx
0019EEr 2  E8               inx
0019EFr 2  68               pla
0019F0r 2  95 00            sta $00,x
0019F2r 2  68               pla
0019F3r 2  95 01            sta $01,x
0019F5r 2               
0019F5r 2               ; <inline>:0:0 in `main`
0019F5r 2               @OPCODE_829:   ; [c64_ir] Drop
0019F5r 2  CA               dex
0019F6r 2  CA               dex
0019F7r 2               
0019F7r 2               ; src/prelude.fth:33:29 in `loopimpl`
0019F7r 2               @OPCODE_830:   ; [c64_ir] AltPush
0019F7r 2  CA               dex
0019F8r 2  CA               dex
0019F9r 2  B5 03            lda $03,x
0019FBr 2  48               pha
0019FCr 2  B5 02            lda $02,x
0019FEr 2  48               pha
0019FFr 2               
0019FFr 2               ; src/prelude.fth:33:32 in `loopimpl`
0019FFr 2               @OPCODE_831:   ; [c64_ir] AltPush
0019FFr 2  CA               dex
001A00r 2  CA               dex
001A01r 2  B5 03            lda $03,x
001A03r 2  48               pha
001A04r 2  B5 02            lda $02,x
001A06r 2  48               pha
001A07r 2               
001A07r 2               ; <inline>:0:0 in `main`
001A07r 2               @OPCODE_832:   ; [c64_ir] PushLiteral(7777)
001A07r 2  E8               inx
001A08r 2  E8               inx
001A09r 2  A9 61            lda #97
001A0Br 2  95 00            sta $00,x
001A0Dr 2  A9 1E            lda #30
001A0Fr 2  95 01            sta $01,x
001A11r 2               
001A11r 2               ; <inline>:0:0 in `main`
001A11r 2               @OPCODE_833:   ; [c64_ir] AltPush
001A11r 2  CA               dex
001A12r 2  CA               dex
001A13r 2  B5 03            lda $03,x
001A15r 2  48               pha
001A16r 2  B5 02            lda $02,x
001A18r 2  48               pha
001A19r 2               
001A19r 2               ; <inline>:0:0 in `main`
001A19r 2               @OPCODE_834:   ; [c64_ir] PushLiteral(7777)
001A19r 2  E8               inx
001A1Ar 2  E8               inx
001A1Br 2  A9 61            lda #97
001A1Dr 2  95 00            sta $00,x
001A1Fr 2  A9 1E            lda #30
001A21r 2  95 01            sta $01,x
001A23r 2               
001A23r 2               ; <inline>:0:0 in `main`
001A23r 2               @OPCODE_835:   ; [c64_ir] AltPush
001A23r 2  CA               dex
001A24r 2  CA               dex
001A25r 2  B5 03            lda $03,x
001A27r 2  48               pha
001A28r 2  B5 02            lda $02,x
001A2Ar 2  48               pha
001A2Br 2               
001A2Br 2               ; <inline>:0:0 in `main`
001A2Br 2               @OPCODE_836:   ; [c64_ir] PushLiteral(7777)
001A2Br 2  E8               inx
001A2Cr 2  E8               inx
001A2Dr 2  A9 61            lda #97
001A2Fr 2  95 00            sta $00,x
001A31r 2  A9 1E            lda #30
001A33r 2  95 01            sta $01,x
001A35r 2               
001A35r 2               ; <inline>:0:0 in `main`
001A35r 2               @OPCODE_837:   ; [c64_ir] AltPush
001A35r 2  CA               dex
001A36r 2  CA               dex
001A37r 2  B5 03            lda $03,x
001A39r 2  48               pha
001A3Ar 2  B5 02            lda $02,x
001A3Cr 2  48               pha
001A3Dr 2               
001A3Dr 2               ; <inline>:0:0 in `main`
001A3Dr 2               @OPCODE_838:   ; [c64_ir] PushLiteral(7777)
001A3Dr 2  E8               inx
001A3Er 2  E8               inx
001A3Fr 2  A9 61            lda #97
001A41r 2  95 00            sta $00,x
001A43r 2  A9 1E            lda #30
001A45r 2  95 01            sta $01,x
001A47r 2               
001A47r 2               ; <inline>:0:0 in `main`
001A47r 2               @OPCODE_839:   ; [c64_ir] AltPush
001A47r 2  CA               dex
001A48r 2  CA               dex
001A49r 2  B5 03            lda $03,x
001A4Br 2  48               pha
001A4Cr 2  B5 02            lda $02,x
001A4Er 2  48               pha
001A4Fr 2               
001A4Fr 2               ; src/prelude.fth:14:12 in `invert`
001A4Fr 2               @OPCODE_840:   ; [c64_ir] PushLiteral(-1)
001A4Fr 2  E8               inx
001A50r 2  E8               inx
001A51r 2  A9 FF            lda #255
001A53r 2  95 00            sta $00,x
001A55r 2  A9 FF            lda #255
001A57r 2  95 01            sta $01,x
001A59r 2               
001A59r 2               ; src/prelude.fth:14:15 in `invert`
001A59r 2               @OPCODE_841:   ; [c64_ir] Nand
001A59r 2                   ; 26
001A59r 2  CA               dex
001A5Ar 2  CA               dex
001A5Br 2  B5 00            lda $00,x
001A5Dr 2  35 02            and $02,x
001A5Fr 2  49 FF            eor #$ff
001A61r 2  95 00            sta $00,x
001A63r 2  B5 01            lda $01,x
001A65r 2  35 03            and $03,x
001A67r 2  49 FF            eor #$ff
001A69r 2  95 01            sta $01,x
001A6Br 2               
001A6Br 2               ; <inline>:0:0 in `main`
001A6Br 2               @OPCODE_842:   ; [c64_ir] AltPop
001A6Br 2  E8               inx
001A6Cr 2  E8               inx
001A6Dr 2  68               pla
001A6Er 2  95 00            sta $00,x
001A70r 2  68               pla
001A71r 2  95 01            sta $01,x
001A73r 2               
001A73r 2               ; <inline>:0:0 in `main`
001A73r 2               @OPCODE_843:   ; [c64_ir] Drop
001A73r 2  CA               dex
001A74r 2  CA               dex
001A75r 2               
001A75r 2               ; src/prelude.fth:15:19 in `negate`
001A75r 2               @OPCODE_844:   ; [c64_ir] PushLiteral(1)
001A75r 2  E8               inx
001A76r 2  E8               inx
001A77r 2  A9 01            lda #1
001A79r 2  95 00            sta $00,x
001A7Br 2  A9 00            lda #0
001A7Dr 2  95 01            sta $01,x
001A7Fr 2               
001A7Fr 2               ; src/prelude.fth:15:21 in `negate`
001A7Fr 2               @OPCODE_845:   ; [c64_ir] Add
001A7Fr 2                   ; 21
001A7Fr 2  CA               dex
001A80r 2  CA               dex
001A81r 2  18               clc
001A82r 2  B5 00            lda $00,x
001A84r 2  75 02            adc $02,x
001A86r 2  95 00            sta $00,x
001A88r 2  B5 01            lda $01,x
001A8Ar 2  75 03            adc $03,x
001A8Cr 2  95 01            sta $01,x
001A8Er 2               
001A8Er 2               ; <inline>:0:0 in `main`
001A8Er 2               @OPCODE_846:   ; [c64_ir] AltPop
001A8Er 2  E8               inx
001A8Fr 2  E8               inx
001A90r 2  68               pla
001A91r 2  95 00            sta $00,x
001A93r 2  68               pla
001A94r 2  95 01            sta $01,x
001A96r 2               
001A96r 2               ; <inline>:0:0 in `main`
001A96r 2               @OPCODE_847:   ; [c64_ir] Drop
001A96r 2  CA               dex
001A97r 2  CA               dex
001A98r 2               
001A98r 2               ; src/prelude.fth:16:19 in `-`
001A98r 2               @OPCODE_848:   ; [c64_ir] Add
001A98r 2                   ; 21
001A98r 2  CA               dex
001A99r 2  CA               dex
001A9Ar 2  18               clc
001A9Br 2  B5 00            lda $00,x
001A9Dr 2  75 02            adc $02,x
001A9Fr 2  95 00            sta $00,x
001AA1r 2  B5 01            lda $01,x
001AA3r 2  75 03            adc $03,x
001AA5r 2  95 01            sta $01,x
001AA7r 2               
001AA7r 2               ; <inline>:0:0 in `main`
001AA7r 2               @OPCODE_849:   ; [c64_ir] AltPop
001AA7r 2  E8               inx
001AA8r 2  E8               inx
001AA9r 2  68               pla
001AAAr 2  95 00            sta $00,x
001AACr 2  68               pla
001AADr 2  95 01            sta $01,x
001AAFr 2               
001AAFr 2               ; <inline>:0:0 in `main`
001AAFr 2               @OPCODE_850:   ; [c64_ir] Drop
001AAFr 2  CA               dex
001AB0r 2  CA               dex
001AB1r 2               
001AB1r 2               ; <inline>:0:0 in `main`
001AB1r 2               @OPCODE_851:   ; [c64_ir] PushLiteral(7777)
001AB1r 2  E8               inx
001AB2r 2  E8               inx
001AB3r 2  A9 61            lda #97
001AB5r 2  95 00            sta $00,x
001AB7r 2  A9 1E            lda #30
001AB9r 2  95 01            sta $01,x
001ABBr 2               
001ABBr 2               ; <inline>:0:0 in `main`
001ABBr 2               @OPCODE_852:   ; [c64_ir] AltPush
001ABBr 2  CA               dex
001ABCr 2  CA               dex
001ABDr 2  B5 03            lda $03,x
001ABFr 2  48               pha
001AC0r 2  B5 02            lda $02,x
001AC2r 2  48               pha
001AC3r 2               
001AC3r 2               ; src/prelude.fth:21:8 in `0=`
001AC3r 2               @OPCODE_853:   ; [c64_ir] JumpIf0(37)
001AC3r 2  CA               dex
001AC4r 2  CA               dex
001AC5r 2  B5 02            lda $02,x
001AC7r 2  15 03            ora $03,x
001AC9r 2  D0 03            bne *+5
001ACBr 2  4C rr rr         jmp @target_37
001ACEr 2               
001ACEr 2               @target_36:
001ACEr 2               
001ACEr 2               ; src/prelude.fth:21:11 in `0=`
001ACEr 2               @OPCODE_855:   ; [c64_ir] PushLiteral(0)
001ACEr 2  E8               inx
001ACFr 2  E8               inx
001AD0r 2  A9 00            lda #0
001AD2r 2  95 00            sta $00,x
001AD4r 2  A9 00            lda #0
001AD6r 2  95 01            sta $01,x
001AD8r 2               
001AD8r 2               ; src/prelude.fth:21:13 in `0=`
001AD8r 2               @OPCODE_856:   ; [c64_ir] JumpElse(38)
001AD8r 2  4C rr rr         jmp @target_38
001ADBr 2               
001ADBr 2               @target_37:
001ADBr 2               
001ADBr 2               ; src/prelude.fth:21:18 in `0=`
001ADBr 2               @OPCODE_858:   ; [c64_ir] PushLiteral(-1)
001ADBr 2  E8               inx
001ADCr 2  E8               inx
001ADDr 2  A9 FF            lda #255
001ADFr 2  95 00            sta $00,x
001AE1r 2  A9 FF            lda #255
001AE3r 2  95 01            sta $01,x
001AE5r 2               
001AE5r 2               ; src/prelude.fth:21:21 in `0=`
001AE5r 2               @OPCODE_859:   ; [c64_ir] JumpTarget(37)
001AE5r 2               
001AE5r 2               @target_38:
001AE5r 2               
001AE5r 2               ; <inline>:0:0 in `main`
001AE5r 2               @OPCODE_861:   ; [c64_ir] AltPop
001AE5r 2  E8               inx
001AE6r 2  E8               inx
001AE7r 2  68               pla
001AE8r 2  95 00            sta $00,x
001AEAr 2  68               pla
001AEBr 2  95 01            sta $01,x
001AEDr 2               
001AEDr 2               ; <inline>:0:0 in `main`
001AEDr 2               @OPCODE_862:   ; [c64_ir] Drop
001AEDr 2  CA               dex
001AEEr 2  CA               dex
001AEFr 2               
001AEFr 2               ; <inline>:0:0 in `main`
001AEFr 2               @OPCODE_863:   ; [c64_ir] AltPop
001AEFr 2  E8               inx
001AF0r 2  E8               inx
001AF1r 2  68               pla
001AF2r 2  95 00            sta $00,x
001AF4r 2  68               pla
001AF5r 2  95 01            sta $01,x
001AF7r 2               
001AF7r 2               ; <inline>:0:0 in `main`
001AF7r 2               @OPCODE_864:   ; [c64_ir] Drop
001AF7r 2  CA               dex
001AF8r 2  CA               dex
001AF9r 2               
001AF9r 2               ; <inline>:0:0 in `main`
001AF9r 2               @OPCODE_865:   ; [c64_ir] PushLiteral(7777)
001AF9r 2  E8               inx
001AFAr 2  E8               inx
001AFBr 2  A9 61            lda #97
001AFDr 2  95 00            sta $00,x
001AFFr 2  A9 1E            lda #30
001B01r 2  95 01            sta $01,x
001B03r 2               
001B03r 2               ; <inline>:0:0 in `main`
001B03r 2               @OPCODE_866:   ; [c64_ir] AltPush
001B03r 2  CA               dex
001B04r 2  CA               dex
001B05r 2  B5 03            lda $03,x
001B07r 2  48               pha
001B08r 2  B5 02            lda $02,x
001B0Ar 2  48               pha
001B0Br 2               
001B0Br 2               ; src/prelude.fth:3:10 in `swap`
001B0Br 2               @OPCODE_867:   ; [c64_ir] AltPush
001B0Br 2  CA               dex
001B0Cr 2  CA               dex
001B0Dr 2  B5 03            lda $03,x
001B0Fr 2  48               pha
001B10r 2  B5 02            lda $02,x
001B12r 2  48               pha
001B13r 2               
001B13r 2               ; src/prelude.fth:3:13 in `swap`
001B13r 2               @OPCODE_868:   ; [c64_ir] TempStore
001B13r 2  CA               dex
001B14r 2  CA               dex
001B15r 2  B5 03            lda $03,x
001B17r 2  85 96            sta TEMP_PAX2
001B19r 2  B5 02            lda $02,x
001B1Br 2  85 95            sta TEMP_PAX1
001B1Dr 2               
001B1Dr 2               ; src/prelude.fth:3:19 in `swap`
001B1Dr 2               @OPCODE_869:   ; [c64_ir] AltPop
001B1Dr 2  E8               inx
001B1Er 2  E8               inx
001B1Fr 2  68               pla
001B20r 2  95 00            sta $00,x
001B22r 2  68               pla
001B23r 2  95 01            sta $01,x
001B25r 2               
001B25r 2               ; src/prelude.fth:3:22 in `swap`
001B25r 2               @OPCODE_870:   ; [c64_ir] TempLoad
001B25r 2  E8               inx
001B26r 2  E8               inx
001B27r 2  A5 95            lda TEMP_PAX1
001B29r 2  95 00            sta $00,x
001B2Br 2  A5 96            lda TEMP_PAX2
001B2Dr 2  95 01            sta $01,x
001B2Fr 2               
001B2Fr 2               ; <inline>:0:0 in `main`
001B2Fr 2               @OPCODE_871:   ; [c64_ir] AltPop
001B2Fr 2  E8               inx
001B30r 2  E8               inx
001B31r 2  68               pla
001B32r 2  95 00            sta $00,x
001B34r 2  68               pla
001B35r 2  95 01            sta $01,x
001B37r 2               
001B37r 2               ; <inline>:0:0 in `main`
001B37r 2               @OPCODE_872:   ; [c64_ir] Drop
001B37r 2  CA               dex
001B38r 2  CA               dex
001B39r 2               
001B39r 2               ; src/prelude.fth:33:42 in `loopimpl`
001B39r 2               @OPCODE_873:   ; [c64_ir] AltPush
001B39r 2  CA               dex
001B3Ar 2  CA               dex
001B3Br 2  B5 03            lda $03,x
001B3Dr 2  48               pha
001B3Er 2  B5 02            lda $02,x
001B40r 2  48               pha
001B41r 2               
001B41r 2               ; <inline>:0:0 in `main`
001B41r 2               @OPCODE_874:   ; [c64_ir] AltPop
001B41r 2  E8               inx
001B42r 2  E8               inx
001B43r 2  68               pla
001B44r 2  95 00            sta $00,x
001B46r 2  68               pla
001B47r 2  95 01            sta $01,x
001B49r 2               
001B49r 2               ; <inline>:0:0 in `main`
001B49r 2               @OPCODE_875:   ; [c64_ir] Drop
001B49r 2  CA               dex
001B4Ar 2  CA               dex
001B4Br 2               
001B4Br 2               ; snake.fth:93:5 in `draw-walls`
001B4Br 2               @OPCODE_876:   ; [c64_ir] LoopIf0(35)
001B4Br 2  CA               dex
001B4Cr 2  CA               dex
001B4Dr 2  B5 02            lda $02,x
001B4Fr 2  15 03            ora $03,x
001B51r 2  D0 03            bne *+5
001B53r 2  4C rr rr         jmp @target_35
001B56r 2               
001B56r 2               @target_39:
001B56r 2               
001B56r 2               ; snake.fth:93:5 in `draw-walls`
001B56r 2               @OPCODE_878:   ; [c64_ir] AltPop
001B56r 2  E8               inx
001B57r 2  E8               inx
001B58r 2  68               pla
001B59r 2  95 00            sta $00,x
001B5Br 2  68               pla
001B5Cr 2  95 01            sta $01,x
001B5Er 2               
001B5Er 2               ; snake.fth:93:5 in `draw-walls`
001B5Er 2               @OPCODE_879:   ; [c64_ir] Drop
001B5Er 2  CA               dex
001B5Fr 2  CA               dex
001B60r 2               
001B60r 2               ; snake.fth:93:5 in `draw-walls`
001B60r 2               @OPCODE_880:   ; [c64_ir] AltPop
001B60r 2  E8               inx
001B61r 2  E8               inx
001B62r 2  68               pla
001B63r 2  95 00            sta $00,x
001B65r 2  68               pla
001B66r 2  95 01            sta $01,x
001B68r 2               
001B68r 2               ; snake.fth:93:5 in `draw-walls`
001B68r 2               @OPCODE_881:   ; [c64_ir] Drop
001B68r 2  CA               dex
001B69r 2  CA               dex
001B6Ar 2               
001B6Ar 2               ; snake.fth:94:5 in `draw-walls`
001B6Ar 2               @OPCODE_882:   ; [c64_ir] Drop
001B6Ar 2  CA               dex
001B6Br 2  CA               dex
001B6Cr 2               
001B6Cr 2               ; <inline>:0:0 in `main`
001B6Cr 2               @OPCODE_883:   ; [c64_ir] AltPop
001B6Cr 2  E8               inx
001B6Dr 2  E8               inx
001B6Er 2  68               pla
001B6Fr 2  95 00            sta $00,x
001B71r 2  68               pla
001B72r 2  95 01            sta $01,x
001B74r 2               
001B74r 2               ; <inline>:0:0 in `main`
001B74r 2               @OPCODE_884:   ; [c64_ir] Drop
001B74r 2  CA               dex
001B75r 2  CA               dex
001B76r 2               
001B76r 2               ; <inline>:0:0 in `main`
001B76r 2               @OPCODE_885:   ; [c64_ir] PushLiteral(7777)
001B76r 2  E8               inx
001B77r 2  E8               inx
001B78r 2  A9 61            lda #97
001B7Ar 2  95 00            sta $00,x
001B7Cr 2  A9 1E            lda #30
001B7Er 2  95 01            sta $01,x
001B80r 2               
001B80r 2               ; <inline>:0:0 in `main`
001B80r 2               @OPCODE_886:   ; [c64_ir] AltPush
001B80r 2  CA               dex
001B81r 2  CA               dex
001B82r 2  B5 03            lda $03,x
001B84r 2  48               pha
001B85r 2  B5 02            lda $02,x
001B87r 2  48               pha
001B88r 2               
001B88r 2               ; snake.fth:98:3 in `initialize-snake`
001B88r 2               @OPCODE_887:   ; [c64_ir] PushLiteral(16)
001B88r 2  E8               inx
001B89r 2  E8               inx
001B8Ar 2  A9 10            lda #16
001B8Cr 2  95 00            sta $00,x
001B8Er 2  A9 00            lda #0
001B90r 2  95 01            sta $01,x
001B92r 2               
001B92r 2               ; snake.fth:98:6 in `initialize-snake`
001B92r 2               @OPCODE_888:   ; [c64_ir] PushLiteral(-26658)
001B92r 2  E8               inx
001B93r 2  E8               inx
001B94r 2  A9 DE            lda #222
001B96r 2  95 00            sta $00,x
001B98r 2  A9 97            lda #151
001B9Ar 2  95 01            sta $01,x
001B9Cr 2               
001B9Cr 2               ; snake.fth:98:13 in `initialize-snake`
001B9Cr 2               @OPCODE_889:   ; [c64_ir] Store
001B9Cr 2  CA               dex
001B9Dr 2  CA               dex
001B9Er 2  CA               dex
001B9Fr 2  CA               dex
001BA0r 2  B5 02            lda $02,x
001BA2r 2  81 04            sta ($04,x)
001BA4r 2                   ; TODO high byte
001BA4r 2               
001BA4r 2               ; snake.fth:99:3 in `initialize-snake`
001BA4r 2               @OPCODE_890:   ; [c64_ir] PushLiteral(-26658)
001BA4r 2  E8               inx
001BA5r 2  E8               inx
001BA6r 2  A9 DE            lda #222
001BA8r 2  95 00            sta $00,x
001BAAr 2  A9 97            lda #151
001BACr 2  95 01            sta $01,x
001BAEr 2               
001BAEr 2               ; snake.fth:99:10 in `initialize-snake`
001BAEr 2               @OPCODE_891:   ; [c64_ir] Load
001BAEr 2  A1 00            lda ($00,x)
001BB0r 2  95 00            sta $00,x
001BB2r 2  A9 00            lda #0
001BB4r 2  95 01            sta $01,x
001BB6r 2               
001BB6r 2               ; snake.fth:99:12 in `initialize-snake`
001BB6r 2               @OPCODE_892:   ; [c64_ir] PushLiteral(1)
001BB6r 2  E8               inx
001BB7r 2  E8               inx
001BB8r 2  A9 01            lda #1
001BBAr 2  95 00            sta $00,x
001BBCr 2  A9 00            lda #0
001BBEr 2  95 01            sta $01,x
001BC0r 2               
001BC0r 2               ; snake.fth:99:14 in `initialize-snake`
001BC0r 2               @OPCODE_893:   ; [c64_ir] Add
001BC0r 2                   ; 21
001BC0r 2  CA               dex
001BC1r 2  CA               dex
001BC2r 2  18               clc
001BC3r 2  B5 00            lda $00,x
001BC5r 2  75 02            adc $02,x
001BC7r 2  95 00            sta $00,x
001BC9r 2  B5 01            lda $01,x
001BCBr 2  75 03            adc $03,x
001BCDr 2  95 01            sta $01,x
001BCFr 2               
001BCFr 2               ; snake.fth:99:16 in `initialize-snake`
001BCFr 2               @OPCODE_894:   ; [c64_ir] PushLiteral(0)
001BCFr 2  E8               inx
001BD0r 2  E8               inx
001BD1r 2  A9 00            lda #0
001BD3r 2  95 00            sta $00,x
001BD5r 2  A9 00            lda #0
001BD7r 2  95 01            sta $01,x
001BD9r 2               
001BD9r 2               ; snake.fth:99:18 in `initialize-snake`
001BD9r 2               @OPCODE_895:   ; [c64_ir] AltPush
001BD9r 2  CA               dex
001BDAr 2  CA               dex
001BDBr 2  B5 03            lda $03,x
001BDDr 2  48               pha
001BDEr 2  B5 02            lda $02,x
001BE0r 2  48               pha
001BE1r 2               
001BE1r 2               ; snake.fth:99:18 in `initialize-snake`
001BE1r 2               @OPCODE_896:   ; [c64_ir] AltPush
001BE1r 2  CA               dex
001BE2r 2  CA               dex
001BE3r 2  B5 03            lda $03,x
001BE5r 2  48               pha
001BE6r 2  B5 02            lda $02,x
001BE8r 2  48               pha
001BE9r 2               
001BE9r 2               ; snake.fth:99:18 in `initialize-snake`
001BE9r 2               @OPCODE_897:   ; [c64_ir] LoopTarget(39)
001BE9r 2               
001BE9r 2               @target_40:
001BE9r 2               
001BE9r 2               ; snake.fth:100:5 in `initialize-snake`
001BE9r 2               @OPCODE_899:   ; [c64_ir] PushLiteral(8)
001BE9r 2  E8               inx
001BEAr 2  E8               inx
001BEBr 2  A9 08            lda #8
001BEDr 2  95 00            sta $00,x
001BEFr 2  A9 00            lda #0
001BF1r 2  95 01            sta $01,x
001BF3r 2               
001BF3r 2               ; <inline>:0:0 in `main`
001BF3r 2               @OPCODE_900:   ; [c64_ir] PushLiteral(7777)
001BF3r 2  E8               inx
001BF4r 2  E8               inx
001BF5r 2  A9 61            lda #97
001BF7r 2  95 00            sta $00,x
001BF9r 2  A9 1E            lda #30
001BFBr 2  95 01            sta $01,x
001BFDr 2               
001BFDr 2               ; <inline>:0:0 in `main`
001BFDr 2               @OPCODE_901:   ; [c64_ir] AltPush
001BFDr 2  CA               dex
001BFEr 2  CA               dex
001BFFr 2  B5 03            lda $03,x
001C01r 2  48               pha
001C02r 2  B5 02            lda $02,x
001C04r 2  48               pha
001C05r 2               
001C05r 2               ; src/prelude.fth:38:5 in `i`
001C05r 2               @OPCODE_902:   ; [c64_ir] AltPop
001C05r 2  E8               inx
001C06r 2  E8               inx
001C07r 2  68               pla
001C08r 2  95 00            sta $00,x
001C0Ar 2  68               pla
001C0Br 2  95 01            sta $01,x
001C0Dr 2               
001C0Dr 2               ; src/prelude.fth:38:8 in `i`
001C0Dr 2               @OPCODE_903:   ; [c64_ir] AltPop
001C0Dr 2  E8               inx
001C0Er 2  E8               inx
001C0Fr 2  68               pla
001C10r 2  95 00            sta $00,x
001C12r 2  68               pla
001C13r 2  95 01            sta $01,x
001C15r 2               
001C15r 2               ; src/prelude.fth:38:11 in `i`
001C15r 2               @OPCODE_904:   ; [c64_ir] AltPop
001C15r 2  E8               inx
001C16r 2  E8               inx
001C17r 2  68               pla
001C18r 2  95 00            sta $00,x
001C1Ar 2  68               pla
001C1Br 2  95 01            sta $01,x
001C1Dr 2               
001C1Dr 2               ; src/prelude.fth:38:14 in `i`
001C1Dr 2               @OPCODE_905:   ; [c64_ir] TempStore
001C1Dr 2  CA               dex
001C1Er 2  CA               dex
001C1Fr 2  B5 03            lda $03,x
001C21r 2  85 96            sta TEMP_PAX2
001C23r 2  B5 02            lda $02,x
001C25r 2  85 95            sta TEMP_PAX1
001C27r 2               
001C27r 2               ; src/prelude.fth:38:20 in `i`
001C27r 2               @OPCODE_906:   ; [c64_ir] TempLoad
001C27r 2  E8               inx
001C28r 2  E8               inx
001C29r 2  A5 95            lda TEMP_PAX1
001C2Br 2  95 00            sta $00,x
001C2Dr 2  A5 96            lda TEMP_PAX2
001C2Fr 2  95 01            sta $01,x
001C31r 2               
001C31r 2               ; src/prelude.fth:38:26 in `i`
001C31r 2               @OPCODE_907:   ; [c64_ir] AltPush
001C31r 2  CA               dex
001C32r 2  CA               dex
001C33r 2  B5 03            lda $03,x
001C35r 2  48               pha
001C36r 2  B5 02            lda $02,x
001C38r 2  48               pha
001C39r 2               
001C39r 2               ; src/prelude.fth:38:29 in `i`
001C39r 2               @OPCODE_908:   ; [c64_ir] AltPush
001C39r 2  CA               dex
001C3Ar 2  CA               dex
001C3Br 2  B5 03            lda $03,x
001C3Dr 2  48               pha
001C3Er 2  B5 02            lda $02,x
001C40r 2  48               pha
001C41r 2               
001C41r 2               ; src/prelude.fth:38:32 in `i`
001C41r 2               @OPCODE_909:   ; [c64_ir] AltPush
001C41r 2  CA               dex
001C42r 2  CA               dex
001C43r 2  B5 03            lda $03,x
001C45r 2  48               pha
001C46r 2  B5 02            lda $02,x
001C48r 2  48               pha
001C49r 2               
001C49r 2               ; src/prelude.fth:38:35 in `i`
001C49r 2               @OPCODE_910:   ; [c64_ir] TempLoad
001C49r 2  E8               inx
001C4Ar 2  E8               inx
001C4Br 2  A5 95            lda TEMP_PAX1
001C4Dr 2  95 00            sta $00,x
001C4Fr 2  A5 96            lda TEMP_PAX2
001C51r 2  95 01            sta $01,x
001C53r 2               
001C53r 2               ; <inline>:0:0 in `main`
001C53r 2               @OPCODE_911:   ; [c64_ir] AltPop
001C53r 2  E8               inx
001C54r 2  E8               inx
001C55r 2  68               pla
001C56r 2  95 00            sta $00,x
001C58r 2  68               pla
001C59r 2  95 01            sta $01,x
001C5Br 2               
001C5Br 2               ; <inline>:0:0 in `main`
001C5Br 2               @OPCODE_912:   ; [c64_ir] Drop
001C5Br 2  CA               dex
001C5Cr 2  CA               dex
001C5Dr 2               
001C5Dr 2               ; <inline>:0:0 in `main`
001C5Dr 2               @OPCODE_913:   ; [c64_ir] PushLiteral(7777)
001C5Dr 2  E8               inx
001C5Er 2  E8               inx
001C5Fr 2  A9 61            lda #97
001C61r 2  95 00            sta $00,x
001C63r 2  A9 1E            lda #30
001C65r 2  95 01            sta $01,x
001C67r 2               
001C67r 2               ; <inline>:0:0 in `main`
001C67r 2               @OPCODE_914:   ; [c64_ir] AltPush
001C67r 2  CA               dex
001C68r 2  CA               dex
001C69r 2  B5 03            lda $03,x
001C6Br 2  48               pha
001C6Cr 2  B5 02            lda $02,x
001C6Er 2  48               pha
001C6Fr 2               
001C6Fr 2               ; <inline>:0:0 in `main`
001C6Fr 2               @OPCODE_915:   ; [c64_ir] PushLiteral(7777)
001C6Fr 2  E8               inx
001C70r 2  E8               inx
001C71r 2  A9 61            lda #97
001C73r 2  95 00            sta $00,x
001C75r 2  A9 1E            lda #30
001C77r 2  95 01            sta $01,x
001C79r 2               
001C79r 2               ; <inline>:0:0 in `main`
001C79r 2               @OPCODE_916:   ; [c64_ir] AltPush
001C79r 2  CA               dex
001C7Ar 2  CA               dex
001C7Br 2  B5 03            lda $03,x
001C7Dr 2  48               pha
001C7Er 2  B5 02            lda $02,x
001C80r 2  48               pha
001C81r 2               
001C81r 2               ; <inline>:0:0 in `main`
001C81r 2               @OPCODE_917:   ; [c64_ir] PushLiteral(7777)
001C81r 2  E8               inx
001C82r 2  E8               inx
001C83r 2  A9 61            lda #97
001C85r 2  95 00            sta $00,x
001C87r 2  A9 1E            lda #30
001C89r 2  95 01            sta $01,x
001C8Br 2               
001C8Br 2               ; <inline>:0:0 in `main`
001C8Br 2               @OPCODE_918:   ; [c64_ir] AltPush
001C8Br 2  CA               dex
001C8Cr 2  CA               dex
001C8Dr 2  B5 03            lda $03,x
001C8Fr 2  48               pha
001C90r 2  B5 02            lda $02,x
001C92r 2  48               pha
001C93r 2               
001C93r 2               ; src/prelude.fth:14:12 in `invert`
001C93r 2               @OPCODE_919:   ; [c64_ir] PushLiteral(-1)
001C93r 2  E8               inx
001C94r 2  E8               inx
001C95r 2  A9 FF            lda #255
001C97r 2  95 00            sta $00,x
001C99r 2  A9 FF            lda #255
001C9Br 2  95 01            sta $01,x
001C9Dr 2               
001C9Dr 2               ; src/prelude.fth:14:15 in `invert`
001C9Dr 2               @OPCODE_920:   ; [c64_ir] Nand
001C9Dr 2                   ; 26
001C9Dr 2  CA               dex
001C9Er 2  CA               dex
001C9Fr 2  B5 00            lda $00,x
001CA1r 2  35 02            and $02,x
001CA3r 2  49 FF            eor #$ff
001CA5r 2  95 00            sta $00,x
001CA7r 2  B5 01            lda $01,x
001CA9r 2  35 03            and $03,x
001CABr 2  49 FF            eor #$ff
001CADr 2  95 01            sta $01,x
001CAFr 2               
001CAFr 2               ; <inline>:0:0 in `main`
001CAFr 2               @OPCODE_921:   ; [c64_ir] AltPop
001CAFr 2  E8               inx
001CB0r 2  E8               inx
001CB1r 2  68               pla
001CB2r 2  95 00            sta $00,x
001CB4r 2  68               pla
001CB5r 2  95 01            sta $01,x
001CB7r 2               
001CB7r 2               ; <inline>:0:0 in `main`
001CB7r 2               @OPCODE_922:   ; [c64_ir] Drop
001CB7r 2  CA               dex
001CB8r 2  CA               dex
001CB9r 2               
001CB9r 2               ; src/prelude.fth:15:19 in `negate`
001CB9r 2               @OPCODE_923:   ; [c64_ir] PushLiteral(1)
001CB9r 2  E8               inx
001CBAr 2  E8               inx
001CBBr 2  A9 01            lda #1
001CBDr 2  95 00            sta $00,x
001CBFr 2  A9 00            lda #0
001CC1r 2  95 01            sta $01,x
001CC3r 2               
001CC3r 2               ; src/prelude.fth:15:21 in `negate`
001CC3r 2               @OPCODE_924:   ; [c64_ir] Add
001CC3r 2                   ; 21
001CC3r 2  CA               dex
001CC4r 2  CA               dex
001CC5r 2  18               clc
001CC6r 2  B5 00            lda $00,x
001CC8r 2  75 02            adc $02,x
001CCAr 2  95 00            sta $00,x
001CCCr 2  B5 01            lda $01,x
001CCEr 2  75 03            adc $03,x
001CD0r 2  95 01            sta $01,x
001CD2r 2               
001CD2r 2               ; <inline>:0:0 in `main`
001CD2r 2               @OPCODE_925:   ; [c64_ir] AltPop
001CD2r 2  E8               inx
001CD3r 2  E8               inx
001CD4r 2  68               pla
001CD5r 2  95 00            sta $00,x
001CD7r 2  68               pla
001CD8r 2  95 01            sta $01,x
001CDAr 2               
001CDAr 2               ; <inline>:0:0 in `main`
001CDAr 2               @OPCODE_926:   ; [c64_ir] Drop
001CDAr 2  CA               dex
001CDBr 2  CA               dex
001CDCr 2               
001CDCr 2               ; src/prelude.fth:16:19 in `-`
001CDCr 2               @OPCODE_927:   ; [c64_ir] Add
001CDCr 2                   ; 21
001CDCr 2  CA               dex
001CDDr 2  CA               dex
001CDEr 2  18               clc
001CDFr 2  B5 00            lda $00,x
001CE1r 2  75 02            adc $02,x
001CE3r 2  95 00            sta $00,x
001CE5r 2  B5 01            lda $01,x
001CE7r 2  75 03            adc $03,x
001CE9r 2  95 01            sta $01,x
001CEBr 2               
001CEBr 2               ; <inline>:0:0 in `main`
001CEBr 2               @OPCODE_928:   ; [c64_ir] AltPop
001CEBr 2  E8               inx
001CECr 2  E8               inx
001CEDr 2  68               pla
001CEEr 2  95 00            sta $00,x
001CF0r 2  68               pla
001CF1r 2  95 01            sta $01,x
001CF3r 2               
001CF3r 2               ; <inline>:0:0 in `main`
001CF3r 2               @OPCODE_929:   ; [c64_ir] Drop
001CF3r 2  CA               dex
001CF4r 2  CA               dex
001CF5r 2               
001CF5r 2               ; <inline>:0:0 in `main`
001CF5r 2               @OPCODE_930:   ; [c64_ir] PushLiteral(7777)
001CF5r 2  E8               inx
001CF6r 2  E8               inx
001CF7r 2  A9 61            lda #97
001CF9r 2  95 00            sta $00,x
001CFBr 2  A9 1E            lda #30
001CFDr 2  95 01            sta $01,x
001CFFr 2               
001CFFr 2               ; <inline>:0:0 in `main`
001CFFr 2               @OPCODE_931:   ; [c64_ir] AltPush
001CFFr 2  CA               dex
001D00r 2  CA               dex
001D01r 2  B5 03            lda $03,x
001D03r 2  48               pha
001D04r 2  B5 02            lda $02,x
001D06r 2  48               pha
001D07r 2               
001D07r 2               ; src/prelude.fth:38:5 in `i`
001D07r 2               @OPCODE_932:   ; [c64_ir] AltPop
001D07r 2  E8               inx
001D08r 2  E8               inx
001D09r 2  68               pla
001D0Ar 2  95 00            sta $00,x
001D0Cr 2  68               pla
001D0Dr 2  95 01            sta $01,x
001D0Fr 2               
001D0Fr 2               ; src/prelude.fth:38:8 in `i`
001D0Fr 2               @OPCODE_933:   ; [c64_ir] AltPop
001D0Fr 2  E8               inx
001D10r 2  E8               inx
001D11r 2  68               pla
001D12r 2  95 00            sta $00,x
001D14r 2  68               pla
001D15r 2  95 01            sta $01,x
001D17r 2               
001D17r 2               ; src/prelude.fth:38:11 in `i`
001D17r 2               @OPCODE_934:   ; [c64_ir] AltPop
001D17r 2  E8               inx
001D18r 2  E8               inx
001D19r 2  68               pla
001D1Ar 2  95 00            sta $00,x
001D1Cr 2  68               pla
001D1Dr 2  95 01            sta $01,x
001D1Fr 2               
001D1Fr 2               ; src/prelude.fth:38:14 in `i`
001D1Fr 2               @OPCODE_935:   ; [c64_ir] TempStore
001D1Fr 2  CA               dex
001D20r 2  CA               dex
001D21r 2  B5 03            lda $03,x
001D23r 2  85 96            sta TEMP_PAX2
001D25r 2  B5 02            lda $02,x
001D27r 2  85 95            sta TEMP_PAX1
001D29r 2               
001D29r 2               ; src/prelude.fth:38:20 in `i`
001D29r 2               @OPCODE_936:   ; [c64_ir] TempLoad
001D29r 2  E8               inx
001D2Ar 2  E8               inx
001D2Br 2  A5 95            lda TEMP_PAX1
001D2Dr 2  95 00            sta $00,x
001D2Fr 2  A5 96            lda TEMP_PAX2
001D31r 2  95 01            sta $01,x
001D33r 2               
001D33r 2               ; src/prelude.fth:38:26 in `i`
001D33r 2               @OPCODE_937:   ; [c64_ir] AltPush
001D33r 2  CA               dex
001D34r 2  CA               dex
001D35r 2  B5 03            lda $03,x
001D37r 2  48               pha
001D38r 2  B5 02            lda $02,x
001D3Ar 2  48               pha
001D3Br 2               
001D3Br 2               ; src/prelude.fth:38:29 in `i`
001D3Br 2               @OPCODE_938:   ; [c64_ir] AltPush
001D3Br 2  CA               dex
001D3Cr 2  CA               dex
001D3Dr 2  B5 03            lda $03,x
001D3Fr 2  48               pha
001D40r 2  B5 02            lda $02,x
001D42r 2  48               pha
001D43r 2               
001D43r 2               ; src/prelude.fth:38:32 in `i`
001D43r 2               @OPCODE_939:   ; [c64_ir] AltPush
001D43r 2  CA               dex
001D44r 2  CA               dex
001D45r 2  B5 03            lda $03,x
001D47r 2  48               pha
001D48r 2  B5 02            lda $02,x
001D4Ar 2  48               pha
001D4Br 2               
001D4Br 2               ; src/prelude.fth:38:35 in `i`
001D4Br 2               @OPCODE_940:   ; [c64_ir] TempLoad
001D4Br 2  E8               inx
001D4Cr 2  E8               inx
001D4Dr 2  A5 95            lda TEMP_PAX1
001D4Fr 2  95 00            sta $00,x
001D51r 2  A5 96            lda TEMP_PAX2
001D53r 2  95 01            sta $01,x
001D55r 2               
001D55r 2               ; <inline>:0:0 in `main`
001D55r 2               @OPCODE_941:   ; [c64_ir] AltPop
001D55r 2  E8               inx
001D56r 2  E8               inx
001D57r 2  68               pla
001D58r 2  95 00            sta $00,x
001D5Ar 2  68               pla
001D5Br 2  95 01            sta $01,x
001D5Dr 2               
001D5Dr 2               ; <inline>:0:0 in `main`
001D5Dr 2               @OPCODE_942:   ; [c64_ir] Drop
001D5Dr 2  CA               dex
001D5Er 2  CA               dex
001D5Fr 2               
001D5Fr 2               ; <inline>:0:0 in `main`
001D5Fr 2               @OPCODE_943:   ; [c64_ir] PushLiteral(7777)
001D5Fr 2  E8               inx
001D60r 2  E8               inx
001D61r 2  A9 61            lda #97
001D63r 2  95 00            sta $00,x
001D65r 2  A9 1E            lda #30
001D67r 2  95 01            sta $01,x
001D69r 2               
001D69r 2               ; <inline>:0:0 in `main`
001D69r 2               @OPCODE_944:   ; [c64_ir] AltPush
001D69r 2  CA               dex
001D6Ar 2  CA               dex
001D6Br 2  B5 03            lda $03,x
001D6Dr 2  48               pha
001D6Er 2  B5 02            lda $02,x
001D70r 2  48               pha
001D71r 2               
001D71r 2               ; <inline>:0:0 in `main`
001D71r 2               @OPCODE_945:   ; [c64_ir] PushLiteral(7777)
001D71r 2  E8               inx
001D72r 2  E8               inx
001D73r 2  A9 61            lda #97
001D75r 2  95 00            sta $00,x
001D77r 2  A9 1E            lda #30
001D79r 2  95 01            sta $01,x
001D7Br 2               
001D7Br 2               ; <inline>:0:0 in `main`
001D7Br 2               @OPCODE_946:   ; [c64_ir] AltPush
001D7Br 2  CA               dex
001D7Cr 2  CA               dex
001D7Dr 2  B5 03            lda $03,x
001D7Fr 2  48               pha
001D80r 2  B5 02            lda $02,x
001D82r 2  48               pha
001D83r 2               
001D83r 2               ; <inline>:0:0 in `main`
001D83r 2               @OPCODE_947:   ; [c64_ir] PushLiteral(7777)
001D83r 2  E8               inx
001D84r 2  E8               inx
001D85r 2  A9 61            lda #97
001D87r 2  95 00            sta $00,x
001D89r 2  A9 1E            lda #30
001D8Br 2  95 01            sta $01,x
001D8Dr 2               
001D8Dr 2               ; <inline>:0:0 in `main`
001D8Dr 2               @OPCODE_948:   ; [c64_ir] AltPush
001D8Dr 2  CA               dex
001D8Er 2  CA               dex
001D8Fr 2  B5 03            lda $03,x
001D91r 2  48               pha
001D92r 2  B5 02            lda $02,x
001D94r 2  48               pha
001D95r 2               
001D95r 2               ; src/prelude.fth:6:10 in `dup`
001D95r 2               @OPCODE_949:   ; [c64_ir] TempStore
001D95r 2  CA               dex
001D96r 2  CA               dex
001D97r 2  B5 03            lda $03,x
001D99r 2  85 96            sta TEMP_PAX2
001D9Br 2  B5 02            lda $02,x
001D9Dr 2  85 95            sta TEMP_PAX1
001D9Fr 2               
001D9Fr 2               ; src/prelude.fth:6:16 in `dup`
001D9Fr 2               @OPCODE_950:   ; [c64_ir] TempLoad
001D9Fr 2  E8               inx
001DA0r 2  E8               inx
001DA1r 2  A5 95            lda TEMP_PAX1
001DA3r 2  95 00            sta $00,x
001DA5r 2  A5 96            lda TEMP_PAX2
001DA7r 2  95 01            sta $01,x
001DA9r 2               
001DA9r 2               ; src/prelude.fth:6:22 in `dup`
001DA9r 2               @OPCODE_951:   ; [c64_ir] TempLoad
001DA9r 2  E8               inx
001DAAr 2  E8               inx
001DABr 2  A5 95            lda TEMP_PAX1
001DADr 2  95 00            sta $00,x
001DAFr 2  A5 96            lda TEMP_PAX2
001DB1r 2  95 01            sta $01,x
001DB3r 2               
001DB3r 2               ; <inline>:0:0 in `main`
001DB3r 2               @OPCODE_952:   ; [c64_ir] AltPop
001DB3r 2  E8               inx
001DB4r 2  E8               inx
001DB5r 2  68               pla
001DB6r 2  95 00            sta $00,x
001DB8r 2  68               pla
001DB9r 2  95 01            sta $01,x
001DBBr 2               
001DBBr 2               ; <inline>:0:0 in `main`
001DBBr 2               @OPCODE_953:   ; [c64_ir] Drop
001DBBr 2  CA               dex
001DBCr 2  CA               dex
001DBDr 2               
001DBDr 2               ; src/prelude.fth:41:13 in `cells`
001DBDr 2               @OPCODE_954:   ; [c64_ir] Add
001DBDr 2                   ; 21
001DBDr 2  CA               dex
001DBEr 2  CA               dex
001DBFr 2  18               clc
001DC0r 2  B5 00            lda $00,x
001DC2r 2  75 02            adc $02,x
001DC4r 2  95 00            sta $00,x
001DC6r 2  B5 01            lda $01,x
001DC8r 2  75 03            adc $03,x
001DCAr 2  95 01            sta $01,x
001DCCr 2               
001DCCr 2               ; <inline>:0:0 in `main`
001DCCr 2               @OPCODE_955:   ; [c64_ir] AltPop
001DCCr 2  E8               inx
001DCDr 2  E8               inx
001DCEr 2  68               pla
001DCFr 2  95 00            sta $00,x
001DD1r 2  68               pla
001DD2r 2  95 01            sta $01,x
001DD4r 2               
001DD4r 2               ; <inline>:0:0 in `main`
001DD4r 2               @OPCODE_956:   ; [c64_ir] Drop
001DD4r 2  CA               dex
001DD5r 2  CA               dex
001DD6r 2               
001DD6r 2               ; snake.fth:42:9 in `snake-x`
001DD6r 2               @OPCODE_957:   ; [c64_ir] PushLiteral(-28668)
001DD6r 2  E8               inx
001DD7r 2  E8               inx
001DD8r 2  A9 04            lda #4
001DDAr 2  95 00            sta $00,x
001DDCr 2  A9 90            lda #144
001DDEr 2  95 01            sta $01,x
001DE0r 2               
001DE0r 2               ; snake.fth:42:22 in `snake-x`
001DE0r 2               @OPCODE_958:   ; [c64_ir] Add
001DE0r 2                   ; 21
001DE0r 2  CA               dex
001DE1r 2  CA               dex
001DE2r 2  18               clc
001DE3r 2  B5 00            lda $00,x
001DE5r 2  75 02            adc $02,x
001DE7r 2  95 00            sta $00,x
001DE9r 2  B5 01            lda $01,x
001DEBr 2  75 03            adc $03,x
001DEDr 2  95 01            sta $01,x
001DEFr 2               
001DEFr 2               ; <inline>:0:0 in `main`
001DEFr 2               @OPCODE_959:   ; [c64_ir] AltPop
001DEFr 2  E8               inx
001DF0r 2  E8               inx
001DF1r 2  68               pla
001DF2r 2  95 00            sta $00,x
001DF4r 2  68               pla
001DF5r 2  95 01            sta $01,x
001DF7r 2               
001DF7r 2               ; <inline>:0:0 in `main`
001DF7r 2               @OPCODE_960:   ; [c64_ir] Drop
001DF7r 2  CA               dex
001DF8r 2  CA               dex
001DF9r 2               
001DF9r 2               ; snake.fth:100:21 in `initialize-snake`
001DF9r 2               @OPCODE_961:   ; [c64_ir] Store
001DF9r 2  CA               dex
001DFAr 2  CA               dex
001DFBr 2  CA               dex
001DFCr 2  CA               dex
001DFDr 2  B5 02            lda $02,x
001DFFr 2  81 04            sta ($04,x)
001E01r 2                   ; TODO high byte
001E01r 2               
001E01r 2               ; snake.fth:101:5 in `initialize-snake`
001E01r 2               @OPCODE_962:   ; [c64_ir] PushLiteral(8)
001E01r 2  E8               inx
001E02r 2  E8               inx
001E03r 2  A9 08            lda #8
001E05r 2  95 00            sta $00,x
001E07r 2  A9 00            lda #0
001E09r 2  95 01            sta $01,x
001E0Br 2               
001E0Br 2               ; <inline>:0:0 in `main`
001E0Br 2               @OPCODE_963:   ; [c64_ir] PushLiteral(7777)
001E0Br 2  E8               inx
001E0Cr 2  E8               inx
001E0Dr 2  A9 61            lda #97
001E0Fr 2  95 00            sta $00,x
001E11r 2  A9 1E            lda #30
001E13r 2  95 01            sta $01,x
001E15r 2               
001E15r 2               ; <inline>:0:0 in `main`
001E15r 2               @OPCODE_964:   ; [c64_ir] AltPush
001E15r 2  CA               dex
001E16r 2  CA               dex
001E17r 2  B5 03            lda $03,x
001E19r 2  48               pha
001E1Ar 2  B5 02            lda $02,x
001E1Cr 2  48               pha
001E1Dr 2               
001E1Dr 2               ; src/prelude.fth:38:5 in `i`
001E1Dr 2               @OPCODE_965:   ; [c64_ir] AltPop
001E1Dr 2  E8               inx
001E1Er 2  E8               inx
001E1Fr 2  68               pla
001E20r 2  95 00            sta $00,x
001E22r 2  68               pla
001E23r 2  95 01            sta $01,x
001E25r 2               
001E25r 2               ; src/prelude.fth:38:8 in `i`
001E25r 2               @OPCODE_966:   ; [c64_ir] AltPop
001E25r 2  E8               inx
001E26r 2  E8               inx
001E27r 2  68               pla
001E28r 2  95 00            sta $00,x
001E2Ar 2  68               pla
001E2Br 2  95 01            sta $01,x
001E2Dr 2               
001E2Dr 2               ; src/prelude.fth:38:11 in `i`
001E2Dr 2               @OPCODE_967:   ; [c64_ir] AltPop
001E2Dr 2  E8               inx
001E2Er 2  E8               inx
001E2Fr 2  68               pla
001E30r 2  95 00            sta $00,x
001E32r 2  68               pla
001E33r 2  95 01            sta $01,x
001E35r 2               
001E35r 2               ; src/prelude.fth:38:14 in `i`
001E35r 2               @OPCODE_968:   ; [c64_ir] TempStore
001E35r 2  CA               dex
001E36r 2  CA               dex
001E37r 2  B5 03            lda $03,x
001E39r 2  85 96            sta TEMP_PAX2
001E3Br 2  B5 02            lda $02,x
001E3Dr 2  85 95            sta TEMP_PAX1
001E3Fr 2               
001E3Fr 2               ; src/prelude.fth:38:20 in `i`
001E3Fr 2               @OPCODE_969:   ; [c64_ir] TempLoad
001E3Fr 2  E8               inx
001E40r 2  E8               inx
001E41r 2  A5 95            lda TEMP_PAX1
001E43r 2  95 00            sta $00,x
001E45r 2  A5 96            lda TEMP_PAX2
001E47r 2  95 01            sta $01,x
001E49r 2               
001E49r 2               ; src/prelude.fth:38:26 in `i`
001E49r 2               @OPCODE_970:   ; [c64_ir] AltPush
001E49r 2  CA               dex
001E4Ar 2  CA               dex
001E4Br 2  B5 03            lda $03,x
001E4Dr 2  48               pha
001E4Er 2  B5 02            lda $02,x
001E50r 2  48               pha
001E51r 2               
001E51r 2               ; src/prelude.fth:38:29 in `i`
001E51r 2               @OPCODE_971:   ; [c64_ir] AltPush
001E51r 2  CA               dex
001E52r 2  CA               dex
001E53r 2  B5 03            lda $03,x
001E55r 2  48               pha
001E56r 2  B5 02            lda $02,x
001E58r 2  48               pha
001E59r 2               
001E59r 2               ; src/prelude.fth:38:32 in `i`
001E59r 2               @OPCODE_972:   ; [c64_ir] AltPush
001E59r 2  CA               dex
001E5Ar 2  CA               dex
001E5Br 2  B5 03            lda $03,x
001E5Dr 2  48               pha
001E5Er 2  B5 02            lda $02,x
001E60r 2  48               pha
001E61r 2               
001E61r 2               ; src/prelude.fth:38:35 in `i`
001E61r 2               @OPCODE_973:   ; [c64_ir] TempLoad
001E61r 2  E8               inx
001E62r 2  E8               inx
001E63r 2  A5 95            lda TEMP_PAX1
001E65r 2  95 00            sta $00,x
001E67r 2  A5 96            lda TEMP_PAX2
001E69r 2  95 01            sta $01,x
001E6Br 2               
001E6Br 2               ; <inline>:0:0 in `main`
001E6Br 2               @OPCODE_974:   ; [c64_ir] AltPop
001E6Br 2  E8               inx
001E6Cr 2  E8               inx
001E6Dr 2  68               pla
001E6Er 2  95 00            sta $00,x
001E70r 2  68               pla
001E71r 2  95 01            sta $01,x
001E73r 2               
001E73r 2               ; <inline>:0:0 in `main`
001E73r 2               @OPCODE_975:   ; [c64_ir] Drop
001E73r 2  CA               dex
001E74r 2  CA               dex
001E75r 2               
001E75r 2               ; <inline>:0:0 in `main`
001E75r 2               @OPCODE_976:   ; [c64_ir] PushLiteral(7777)
001E75r 2  E8               inx
001E76r 2  E8               inx
001E77r 2  A9 61            lda #97
001E79r 2  95 00            sta $00,x
001E7Br 2  A9 1E            lda #30
001E7Dr 2  95 01            sta $01,x
001E7Fr 2               
001E7Fr 2               ; <inline>:0:0 in `main`
001E7Fr 2               @OPCODE_977:   ; [c64_ir] AltPush
001E7Fr 2  CA               dex
001E80r 2  CA               dex
001E81r 2  B5 03            lda $03,x
001E83r 2  48               pha
001E84r 2  B5 02            lda $02,x
001E86r 2  48               pha
001E87r 2               
001E87r 2               ; <inline>:0:0 in `main`
001E87r 2               @OPCODE_978:   ; [c64_ir] PushLiteral(7777)
001E87r 2  E8               inx
001E88r 2  E8               inx
001E89r 2  A9 61            lda #97
001E8Br 2  95 00            sta $00,x
001E8Dr 2  A9 1E            lda #30
001E8Fr 2  95 01            sta $01,x
001E91r 2               
001E91r 2               ; <inline>:0:0 in `main`
001E91r 2               @OPCODE_979:   ; [c64_ir] AltPush
001E91r 2  CA               dex
001E92r 2  CA               dex
001E93r 2  B5 03            lda $03,x
001E95r 2  48               pha
001E96r 2  B5 02            lda $02,x
001E98r 2  48               pha
001E99r 2               
001E99r 2               ; <inline>:0:0 in `main`
001E99r 2               @OPCODE_980:   ; [c64_ir] PushLiteral(7777)
001E99r 2  E8               inx
001E9Ar 2  E8               inx
001E9Br 2  A9 61            lda #97
001E9Dr 2  95 00            sta $00,x
001E9Fr 2  A9 1E            lda #30
001EA1r 2  95 01            sta $01,x
001EA3r 2               
001EA3r 2               ; <inline>:0:0 in `main`
001EA3r 2               @OPCODE_981:   ; [c64_ir] AltPush
001EA3r 2  CA               dex
001EA4r 2  CA               dex
001EA5r 2  B5 03            lda $03,x
001EA7r 2  48               pha
001EA8r 2  B5 02            lda $02,x
001EAAr 2  48               pha
001EABr 2               
001EABr 2               ; src/prelude.fth:6:10 in `dup`
001EABr 2               @OPCODE_982:   ; [c64_ir] TempStore
001EABr 2  CA               dex
001EACr 2  CA               dex
001EADr 2  B5 03            lda $03,x
001EAFr 2  85 96            sta TEMP_PAX2
001EB1r 2  B5 02            lda $02,x
001EB3r 2  85 95            sta TEMP_PAX1
001EB5r 2               
001EB5r 2               ; src/prelude.fth:6:16 in `dup`
001EB5r 2               @OPCODE_983:   ; [c64_ir] TempLoad
001EB5r 2  E8               inx
001EB6r 2  E8               inx
001EB7r 2  A5 95            lda TEMP_PAX1
001EB9r 2  95 00            sta $00,x
001EBBr 2  A5 96            lda TEMP_PAX2
001EBDr 2  95 01            sta $01,x
001EBFr 2               
001EBFr 2               ; src/prelude.fth:6:22 in `dup`
001EBFr 2               @OPCODE_984:   ; [c64_ir] TempLoad
001EBFr 2  E8               inx
001EC0r 2  E8               inx
001EC1r 2  A5 95            lda TEMP_PAX1
001EC3r 2  95 00            sta $00,x
001EC5r 2  A5 96            lda TEMP_PAX2
001EC7r 2  95 01            sta $01,x
001EC9r 2               
001EC9r 2               ; <inline>:0:0 in `main`
001EC9r 2               @OPCODE_985:   ; [c64_ir] AltPop
001EC9r 2  E8               inx
001ECAr 2  E8               inx
001ECBr 2  68               pla
001ECCr 2  95 00            sta $00,x
001ECEr 2  68               pla
001ECFr 2  95 01            sta $01,x
001ED1r 2               
001ED1r 2               ; <inline>:0:0 in `main`
001ED1r 2               @OPCODE_986:   ; [c64_ir] Drop
001ED1r 2  CA               dex
001ED2r 2  CA               dex
001ED3r 2               
001ED3r 2               ; src/prelude.fth:41:13 in `cells`
001ED3r 2               @OPCODE_987:   ; [c64_ir] Add
001ED3r 2                   ; 21
001ED3r 2  CA               dex
001ED4r 2  CA               dex
001ED5r 2  18               clc
001ED6r 2  B5 00            lda $00,x
001ED8r 2  75 02            adc $02,x
001EDAr 2  95 00            sta $00,x
001EDCr 2  B5 01            lda $01,x
001EDEr 2  75 03            adc $03,x
001EE0r 2  95 01            sta $01,x
001EE2r 2               
001EE2r 2               ; <inline>:0:0 in `main`
001EE2r 2               @OPCODE_988:   ; [c64_ir] AltPop
001EE2r 2  E8               inx
001EE3r 2  E8               inx
001EE4r 2  68               pla
001EE5r 2  95 00            sta $00,x
001EE7r 2  68               pla
001EE8r 2  95 01            sta $01,x
001EEAr 2               
001EEAr 2               ; <inline>:0:0 in `main`
001EEAr 2               @OPCODE_989:   ; [c64_ir] Drop
001EEAr 2  CA               dex
001EEBr 2  CA               dex
001EECr 2               
001EECr 2               ; snake.fth:45:9 in `snake-y`
001EECr 2               @OPCODE_990:   ; [c64_ir] PushLiteral(-27666)
001EECr 2  E8               inx
001EEDr 2  E8               inx
001EEEr 2  A9 EE            lda #238
001EF0r 2  95 00            sta $00,x
001EF2r 2  A9 93            lda #147
001EF4r 2  95 01            sta $01,x
001EF6r 2               
001EF6r 2               ; snake.fth:45:22 in `snake-y`
001EF6r 2               @OPCODE_991:   ; [c64_ir] Add
001EF6r 2                   ; 21
001EF6r 2  CA               dex
001EF7r 2  CA               dex
001EF8r 2  18               clc
001EF9r 2  B5 00            lda $00,x
001EFBr 2  75 02            adc $02,x
001EFDr 2  95 00            sta $00,x
001EFFr 2  B5 01            lda $01,x
001F01r 2  75 03            adc $03,x
001F03r 2  95 01            sta $01,x
001F05r 2               
001F05r 2               ; <inline>:0:0 in `main`
001F05r 2               @OPCODE_992:   ; [c64_ir] AltPop
001F05r 2  E8               inx
001F06r 2  E8               inx
001F07r 2  68               pla
001F08r 2  95 00            sta $00,x
001F0Ar 2  68               pla
001F0Br 2  95 01            sta $01,x
001F0Dr 2               
001F0Dr 2               ; <inline>:0:0 in `main`
001F0Dr 2               @OPCODE_993:   ; [c64_ir] Drop
001F0Dr 2  CA               dex
001F0Er 2  CA               dex
001F0Fr 2               
001F0Fr 2               ; snake.fth:101:17 in `initialize-snake`
001F0Fr 2               @OPCODE_994:   ; [c64_ir] Store
001F0Fr 2  CA               dex
001F10r 2  CA               dex
001F11r 2  CA               dex
001F12r 2  CA               dex
001F13r 2  B5 02            lda $02,x
001F15r 2  81 04            sta ($04,x)
001F17r 2                   ; TODO high byte
001F17r 2               
001F17r 2               ; <inline>:0:0 in `main`
001F17r 2               @OPCODE_995:   ; [c64_ir] PushLiteral(7777)
001F17r 2  E8               inx
001F18r 2  E8               inx
001F19r 2  A9 61            lda #97
001F1Br 2  95 00            sta $00,x
001F1Dr 2  A9 1E            lda #30
001F1Fr 2  95 01            sta $01,x
001F21r 2               
001F21r 2               ; <inline>:0:0 in `main`
001F21r 2               @OPCODE_996:   ; [c64_ir] AltPush
001F21r 2  CA               dex
001F22r 2  CA               dex
001F23r 2  B5 03            lda $03,x
001F25r 2  48               pha
001F26r 2  B5 02            lda $02,x
001F28r 2  48               pha
001F29r 2               
001F29r 2               ; src/prelude.fth:33:12 in `loopimpl`
001F29r 2               @OPCODE_997:   ; [c64_ir] AltPop
001F29r 2  E8               inx
001F2Ar 2  E8               inx
001F2Br 2  68               pla
001F2Cr 2  95 00            sta $00,x
001F2Er 2  68               pla
001F2Fr 2  95 01            sta $01,x
001F31r 2               
001F31r 2               ; src/prelude.fth:33:15 in `loopimpl`
001F31r 2               @OPCODE_998:   ; [c64_ir] AltPop
001F31r 2  E8               inx
001F32r 2  E8               inx
001F33r 2  68               pla
001F34r 2  95 00            sta $00,x
001F36r 2  68               pla
001F37r 2  95 01            sta $01,x
001F39r 2               
001F39r 2               ; src/prelude.fth:33:18 in `loopimpl`
001F39r 2               @OPCODE_999:   ; [c64_ir] AltPop
001F39r 2  E8               inx
001F3Ar 2  E8               inx
001F3Br 2  68               pla
001F3Cr 2  95 00            sta $00,x
001F3Er 2  68               pla
001F3Fr 2  95 01            sta $01,x
001F41r 2               
001F41r 2               ; <inline>:0:0 in `main`
001F41r 2               @OPCODE_1000:   ; [c64_ir] PushLiteral(7777)
001F41r 2  E8               inx
001F42r 2  E8               inx
001F43r 2  A9 61            lda #97
001F45r 2  95 00            sta $00,x
001F47r 2  A9 1E            lda #30
001F49r 2  95 01            sta $01,x
001F4Br 2               
001F4Br 2               ; <inline>:0:0 in `main`
001F4Br 2               @OPCODE_1001:   ; [c64_ir] AltPush
001F4Br 2  CA               dex
001F4Cr 2  CA               dex
001F4Dr 2  B5 03            lda $03,x
001F4Fr 2  48               pha
001F50r 2  B5 02            lda $02,x
001F52r 2  48               pha
001F53r 2               
001F53r 2               ; src/prelude.fth:18:8 in `1+`
001F53r 2               @OPCODE_1002:   ; [c64_ir] PushLiteral(1)
001F53r 2  E8               inx
001F54r 2  E8               inx
001F55r 2  A9 01            lda #1
001F57r 2  95 00            sta $00,x
001F59r 2  A9 00            lda #0
001F5Br 2  95 01            sta $01,x
001F5Dr 2               
001F5Dr 2               ; src/prelude.fth:18:10 in `1+`
001F5Dr 2               @OPCODE_1003:   ; [c64_ir] Add
001F5Dr 2                   ; 21
001F5Dr 2  CA               dex
001F5Er 2  CA               dex
001F5Fr 2  18               clc
001F60r 2  B5 00            lda $00,x
001F62r 2  75 02            adc $02,x
001F64r 2  95 00            sta $00,x
001F66r 2  B5 01            lda $01,x
001F68r 2  75 03            adc $03,x
001F6Ar 2  95 01            sta $01,x
001F6Cr 2               
001F6Cr 2               ; <inline>:0:0 in `main`
001F6Cr 2               @OPCODE_1004:   ; [c64_ir] AltPop
001F6Cr 2  E8               inx
001F6Dr 2  E8               inx
001F6Er 2  68               pla
001F6Fr 2  95 00            sta $00,x
001F71r 2  68               pla
001F72r 2  95 01            sta $01,x
001F74r 2               
001F74r 2               ; <inline>:0:0 in `main`
001F74r 2               @OPCODE_1005:   ; [c64_ir] Drop
001F74r 2  CA               dex
001F75r 2  CA               dex
001F76r 2               
001F76r 2               ; <inline>:0:0 in `main`
001F76r 2               @OPCODE_1006:   ; [c64_ir] PushLiteral(7777)
001F76r 2  E8               inx
001F77r 2  E8               inx
001F78r 2  A9 61            lda #97
001F7Ar 2  95 00            sta $00,x
001F7Cr 2  A9 1E            lda #30
001F7Er 2  95 01            sta $01,x
001F80r 2               
001F80r 2               ; <inline>:0:0 in `main`
001F80r 2               @OPCODE_1007:   ; [c64_ir] AltPush
001F80r 2  CA               dex
001F81r 2  CA               dex
001F82r 2  B5 03            lda $03,x
001F84r 2  48               pha
001F85r 2  B5 02            lda $02,x
001F87r 2  48               pha
001F88r 2               
001F88r 2               ; <inline>:0:0 in `main`
001F88r 2               @OPCODE_1008:   ; [c64_ir] PushLiteral(7777)
001F88r 2  E8               inx
001F89r 2  E8               inx
001F8Ar 2  A9 61            lda #97
001F8Cr 2  95 00            sta $00,x
001F8Er 2  A9 1E            lda #30
001F90r 2  95 01            sta $01,x
001F92r 2               
001F92r 2               ; <inline>:0:0 in `main`
001F92r 2               @OPCODE_1009:   ; [c64_ir] AltPush
001F92r 2  CA               dex
001F93r 2  CA               dex
001F94r 2  B5 03            lda $03,x
001F96r 2  48               pha
001F97r 2  B5 02            lda $02,x
001F99r 2  48               pha
001F9Ar 2               
001F9Ar 2               ; src/prelude.fth:4:10 in `over`
001F9Ar 2               @OPCODE_1010:   ; [c64_ir] AltPush
001F9Ar 2  CA               dex
001F9Br 2  CA               dex
001F9Cr 2  B5 03            lda $03,x
001F9Er 2  48               pha
001F9Fr 2  B5 02            lda $02,x
001FA1r 2  48               pha
001FA2r 2               
001FA2r 2               ; src/prelude.fth:4:13 in `over`
001FA2r 2               @OPCODE_1011:   ; [c64_ir] TempStore
001FA2r 2  CA               dex
001FA3r 2  CA               dex
001FA4r 2  B5 03            lda $03,x
001FA6r 2  85 96            sta TEMP_PAX2
001FA8r 2  B5 02            lda $02,x
001FAAr 2  85 95            sta TEMP_PAX1
001FACr 2               
001FACr 2               ; src/prelude.fth:4:19 in `over`
001FACr 2               @OPCODE_1012:   ; [c64_ir] TempLoad
001FACr 2  E8               inx
001FADr 2  E8               inx
001FAEr 2  A5 95            lda TEMP_PAX1
001FB0r 2  95 00            sta $00,x
001FB2r 2  A5 96            lda TEMP_PAX2
001FB4r 2  95 01            sta $01,x
001FB6r 2               
001FB6r 2               ; src/prelude.fth:4:25 in `over`
001FB6r 2               @OPCODE_1013:   ; [c64_ir] AltPop
001FB6r 2  E8               inx
001FB7r 2  E8               inx
001FB8r 2  68               pla
001FB9r 2  95 00            sta $00,x
001FBBr 2  68               pla
001FBCr 2  95 01            sta $01,x
001FBEr 2               
001FBEr 2               ; src/prelude.fth:4:28 in `over`
001FBEr 2               @OPCODE_1014:   ; [c64_ir] TempLoad
001FBEr 2  E8               inx
001FBFr 2  E8               inx
001FC0r 2  A5 95            lda TEMP_PAX1
001FC2r 2  95 00            sta $00,x
001FC4r 2  A5 96            lda TEMP_PAX2
001FC6r 2  95 01            sta $01,x
001FC8r 2               
001FC8r 2               ; <inline>:0:0 in `main`
001FC8r 2               @OPCODE_1015:   ; [c64_ir] AltPop
001FC8r 2  E8               inx
001FC9r 2  E8               inx
001FCAr 2  68               pla
001FCBr 2  95 00            sta $00,x
001FCDr 2  68               pla
001FCEr 2  95 01            sta $01,x
001FD0r 2               
001FD0r 2               ; <inline>:0:0 in `main`
001FD0r 2               @OPCODE_1016:   ; [c64_ir] Drop
001FD0r 2  CA               dex
001FD1r 2  CA               dex
001FD2r 2               
001FD2r 2               ; <inline>:0:0 in `main`
001FD2r 2               @OPCODE_1017:   ; [c64_ir] PushLiteral(7777)
001FD2r 2  E8               inx
001FD3r 2  E8               inx
001FD4r 2  A9 61            lda #97
001FD6r 2  95 00            sta $00,x
001FD8r 2  A9 1E            lda #30
001FDAr 2  95 01            sta $01,x
001FDCr 2               
001FDCr 2               ; <inline>:0:0 in `main`
001FDCr 2               @OPCODE_1018:   ; [c64_ir] AltPush
001FDCr 2  CA               dex
001FDDr 2  CA               dex
001FDEr 2  B5 03            lda $03,x
001FE0r 2  48               pha
001FE1r 2  B5 02            lda $02,x
001FE3r 2  48               pha
001FE4r 2               
001FE4r 2               ; src/prelude.fth:4:10 in `over`
001FE4r 2               @OPCODE_1019:   ; [c64_ir] AltPush
001FE4r 2  CA               dex
001FE5r 2  CA               dex
001FE6r 2  B5 03            lda $03,x
001FE8r 2  48               pha
001FE9r 2  B5 02            lda $02,x
001FEBr 2  48               pha
001FECr 2               
001FECr 2               ; src/prelude.fth:4:13 in `over`
001FECr 2               @OPCODE_1020:   ; [c64_ir] TempStore
001FECr 2  CA               dex
001FEDr 2  CA               dex
001FEEr 2  B5 03            lda $03,x
001FF0r 2  85 96            sta TEMP_PAX2
001FF2r 2  B5 02            lda $02,x
001FF4r 2  85 95            sta TEMP_PAX1
001FF6r 2               
001FF6r 2               ; src/prelude.fth:4:19 in `over`
001FF6r 2               @OPCODE_1021:   ; [c64_ir] TempLoad
001FF6r 2  E8               inx
001FF7r 2  E8               inx
001FF8r 2  A5 95            lda TEMP_PAX1
001FFAr 2  95 00            sta $00,x
001FFCr 2  A5 96            lda TEMP_PAX2
001FFEr 2  95 01            sta $01,x
002000r 2               
002000r 2               ; src/prelude.fth:4:25 in `over`
002000r 2               @OPCODE_1022:   ; [c64_ir] AltPop
002000r 2  E8               inx
002001r 2  E8               inx
002002r 2  68               pla
002003r 2  95 00            sta $00,x
002005r 2  68               pla
002006r 2  95 01            sta $01,x
002008r 2               
002008r 2               ; src/prelude.fth:4:28 in `over`
002008r 2               @OPCODE_1023:   ; [c64_ir] TempLoad
002008r 2  E8               inx
002009r 2  E8               inx
00200Ar 2  A5 95            lda TEMP_PAX1
00200Cr 2  95 00            sta $00,x
00200Er 2  A5 96            lda TEMP_PAX2
002010r 2  95 01            sta $01,x
002012r 2               
002012r 2               ; <inline>:0:0 in `main`
002012r 2               @OPCODE_1024:   ; [c64_ir] AltPop
002012r 2  E8               inx
002013r 2  E8               inx
002014r 2  68               pla
002015r 2  95 00            sta $00,x
002017r 2  68               pla
002018r 2  95 01            sta $01,x
00201Ar 2               
00201Ar 2               ; <inline>:0:0 in `main`
00201Ar 2               @OPCODE_1025:   ; [c64_ir] Drop
00201Ar 2  CA               dex
00201Br 2  CA               dex
00201Cr 2               
00201Cr 2               ; <inline>:0:0 in `main`
00201Cr 2               @OPCODE_1026:   ; [c64_ir] AltPop
00201Cr 2  E8               inx
00201Dr 2  E8               inx
00201Er 2  68               pla
00201Fr 2  95 00            sta $00,x
002021r 2  68               pla
002022r 2  95 01            sta $01,x
002024r 2               
002024r 2               ; <inline>:0:0 in `main`
002024r 2               @OPCODE_1027:   ; [c64_ir] Drop
002024r 2  CA               dex
002025r 2  CA               dex
002026r 2               
002026r 2               ; src/prelude.fth:33:29 in `loopimpl`
002026r 2               @OPCODE_1028:   ; [c64_ir] AltPush
002026r 2  CA               dex
002027r 2  CA               dex
002028r 2  B5 03            lda $03,x
00202Ar 2  48               pha
00202Br 2  B5 02            lda $02,x
00202Dr 2  48               pha
00202Er 2               
00202Er 2               ; src/prelude.fth:33:32 in `loopimpl`
00202Er 2               @OPCODE_1029:   ; [c64_ir] AltPush
00202Er 2  CA               dex
00202Fr 2  CA               dex
002030r 2  B5 03            lda $03,x
002032r 2  48               pha
002033r 2  B5 02            lda $02,x
002035r 2  48               pha
002036r 2               
002036r 2               ; <inline>:0:0 in `main`
002036r 2               @OPCODE_1030:   ; [c64_ir] PushLiteral(7777)
002036r 2  E8               inx
002037r 2  E8               inx
002038r 2  A9 61            lda #97
00203Ar 2  95 00            sta $00,x
00203Cr 2  A9 1E            lda #30
00203Er 2  95 01            sta $01,x
002040r 2               
002040r 2               ; <inline>:0:0 in `main`
002040r 2               @OPCODE_1031:   ; [c64_ir] AltPush
002040r 2  CA               dex
002041r 2  CA               dex
002042r 2  B5 03            lda $03,x
002044r 2  48               pha
002045r 2  B5 02            lda $02,x
002047r 2  48               pha
002048r 2               
002048r 2               ; <inline>:0:0 in `main`
002048r 2               @OPCODE_1032:   ; [c64_ir] PushLiteral(7777)
002048r 2  E8               inx
002049r 2  E8               inx
00204Ar 2  A9 61            lda #97
00204Cr 2  95 00            sta $00,x
00204Er 2  A9 1E            lda #30
002050r 2  95 01            sta $01,x
002052r 2               
002052r 2               ; <inline>:0:0 in `main`
002052r 2               @OPCODE_1033:   ; [c64_ir] AltPush
002052r 2  CA               dex
002053r 2  CA               dex
002054r 2  B5 03            lda $03,x
002056r 2  48               pha
002057r 2  B5 02            lda $02,x
002059r 2  48               pha
00205Ar 2               
00205Ar 2               ; <inline>:0:0 in `main`
00205Ar 2               @OPCODE_1034:   ; [c64_ir] PushLiteral(7777)
00205Ar 2  E8               inx
00205Br 2  E8               inx
00205Cr 2  A9 61            lda #97
00205Er 2  95 00            sta $00,x
002060r 2  A9 1E            lda #30
002062r 2  95 01            sta $01,x
002064r 2               
002064r 2               ; <inline>:0:0 in `main`
002064r 2               @OPCODE_1035:   ; [c64_ir] AltPush
002064r 2  CA               dex
002065r 2  CA               dex
002066r 2  B5 03            lda $03,x
002068r 2  48               pha
002069r 2  B5 02            lda $02,x
00206Br 2  48               pha
00206Cr 2               
00206Cr 2               ; <inline>:0:0 in `main`
00206Cr 2               @OPCODE_1036:   ; [c64_ir] PushLiteral(7777)
00206Cr 2  E8               inx
00206Dr 2  E8               inx
00206Er 2  A9 61            lda #97
002070r 2  95 00            sta $00,x
002072r 2  A9 1E            lda #30
002074r 2  95 01            sta $01,x
002076r 2               
002076r 2               ; <inline>:0:0 in `main`
002076r 2               @OPCODE_1037:   ; [c64_ir] AltPush
002076r 2  CA               dex
002077r 2  CA               dex
002078r 2  B5 03            lda $03,x
00207Ar 2  48               pha
00207Br 2  B5 02            lda $02,x
00207Dr 2  48               pha
00207Er 2               
00207Er 2               ; src/prelude.fth:14:12 in `invert`
00207Er 2               @OPCODE_1038:   ; [c64_ir] PushLiteral(-1)
00207Er 2  E8               inx
00207Fr 2  E8               inx
002080r 2  A9 FF            lda #255
002082r 2  95 00            sta $00,x
002084r 2  A9 FF            lda #255
002086r 2  95 01            sta $01,x
002088r 2               
002088r 2               ; src/prelude.fth:14:15 in `invert`
002088r 2               @OPCODE_1039:   ; [c64_ir] Nand
002088r 2                   ; 26
002088r 2  CA               dex
002089r 2  CA               dex
00208Ar 2  B5 00            lda $00,x
00208Cr 2  35 02            and $02,x
00208Er 2  49 FF            eor #$ff
002090r 2  95 00            sta $00,x
002092r 2  B5 01            lda $01,x
002094r 2  35 03            and $03,x
002096r 2  49 FF            eor #$ff
002098r 2  95 01            sta $01,x
00209Ar 2               
00209Ar 2               ; <inline>:0:0 in `main`
00209Ar 2               @OPCODE_1040:   ; [c64_ir] AltPop
00209Ar 2  E8               inx
00209Br 2  E8               inx
00209Cr 2  68               pla
00209Dr 2  95 00            sta $00,x
00209Fr 2  68               pla
0020A0r 2  95 01            sta $01,x
0020A2r 2               
0020A2r 2               ; <inline>:0:0 in `main`
0020A2r 2               @OPCODE_1041:   ; [c64_ir] Drop
0020A2r 2  CA               dex
0020A3r 2  CA               dex
0020A4r 2               
0020A4r 2               ; src/prelude.fth:15:19 in `negate`
0020A4r 2               @OPCODE_1042:   ; [c64_ir] PushLiteral(1)
0020A4r 2  E8               inx
0020A5r 2  E8               inx
0020A6r 2  A9 01            lda #1
0020A8r 2  95 00            sta $00,x
0020AAr 2  A9 00            lda #0
0020ACr 2  95 01            sta $01,x
0020AEr 2               
0020AEr 2               ; src/prelude.fth:15:21 in `negate`
0020AEr 2               @OPCODE_1043:   ; [c64_ir] Add
0020AEr 2                   ; 21
0020AEr 2  CA               dex
0020AFr 2  CA               dex
0020B0r 2  18               clc
0020B1r 2  B5 00            lda $00,x
0020B3r 2  75 02            adc $02,x
0020B5r 2  95 00            sta $00,x
0020B7r 2  B5 01            lda $01,x
0020B9r 2  75 03            adc $03,x
0020BBr 2  95 01            sta $01,x
0020BDr 2               
0020BDr 2               ; <inline>:0:0 in `main`
0020BDr 2               @OPCODE_1044:   ; [c64_ir] AltPop
0020BDr 2  E8               inx
0020BEr 2  E8               inx
0020BFr 2  68               pla
0020C0r 2  95 00            sta $00,x
0020C2r 2  68               pla
0020C3r 2  95 01            sta $01,x
0020C5r 2               
0020C5r 2               ; <inline>:0:0 in `main`
0020C5r 2               @OPCODE_1045:   ; [c64_ir] Drop
0020C5r 2  CA               dex
0020C6r 2  CA               dex
0020C7r 2               
0020C7r 2               ; src/prelude.fth:16:19 in `-`
0020C7r 2               @OPCODE_1046:   ; [c64_ir] Add
0020C7r 2                   ; 21
0020C7r 2  CA               dex
0020C8r 2  CA               dex
0020C9r 2  18               clc
0020CAr 2  B5 00            lda $00,x
0020CCr 2  75 02            adc $02,x
0020CEr 2  95 00            sta $00,x
0020D0r 2  B5 01            lda $01,x
0020D2r 2  75 03            adc $03,x
0020D4r 2  95 01            sta $01,x
0020D6r 2               
0020D6r 2               ; <inline>:0:0 in `main`
0020D6r 2               @OPCODE_1047:   ; [c64_ir] AltPop
0020D6r 2  E8               inx
0020D7r 2  E8               inx
0020D8r 2  68               pla
0020D9r 2  95 00            sta $00,x
0020DBr 2  68               pla
0020DCr 2  95 01            sta $01,x
0020DEr 2               
0020DEr 2               ; <inline>:0:0 in `main`
0020DEr 2               @OPCODE_1048:   ; [c64_ir] Drop
0020DEr 2  CA               dex
0020DFr 2  CA               dex
0020E0r 2               
0020E0r 2               ; <inline>:0:0 in `main`
0020E0r 2               @OPCODE_1049:   ; [c64_ir] PushLiteral(7777)
0020E0r 2  E8               inx
0020E1r 2  E8               inx
0020E2r 2  A9 61            lda #97
0020E4r 2  95 00            sta $00,x
0020E6r 2  A9 1E            lda #30
0020E8r 2  95 01            sta $01,x
0020EAr 2               
0020EAr 2               ; <inline>:0:0 in `main`
0020EAr 2               @OPCODE_1050:   ; [c64_ir] AltPush
0020EAr 2  CA               dex
0020EBr 2  CA               dex
0020ECr 2  B5 03            lda $03,x
0020EEr 2  48               pha
0020EFr 2  B5 02            lda $02,x
0020F1r 2  48               pha
0020F2r 2               
0020F2r 2               ; src/prelude.fth:21:8 in `0=`
0020F2r 2               @OPCODE_1051:   ; [c64_ir] JumpIf0(42)
0020F2r 2  CA               dex
0020F3r 2  CA               dex
0020F4r 2  B5 02            lda $02,x
0020F6r 2  15 03            ora $03,x
0020F8r 2  D0 03            bne *+5
0020FAr 2  4C rr rr         jmp @target_42
0020FDr 2               
0020FDr 2               @target_41:
0020FDr 2               
0020FDr 2               ; src/prelude.fth:21:11 in `0=`
0020FDr 2               @OPCODE_1053:   ; [c64_ir] PushLiteral(0)
0020FDr 2  E8               inx
0020FEr 2  E8               inx
0020FFr 2  A9 00            lda #0
002101r 2  95 00            sta $00,x
002103r 2  A9 00            lda #0
002105r 2  95 01            sta $01,x
002107r 2               
002107r 2               ; src/prelude.fth:21:13 in `0=`
002107r 2               @OPCODE_1054:   ; [c64_ir] JumpElse(43)
002107r 2  4C rr rr         jmp @target_43
00210Ar 2               
00210Ar 2               @target_42:
00210Ar 2               
00210Ar 2               ; src/prelude.fth:21:18 in `0=`
00210Ar 2               @OPCODE_1056:   ; [c64_ir] PushLiteral(-1)
00210Ar 2  E8               inx
00210Br 2  E8               inx
00210Cr 2  A9 FF            lda #255
00210Er 2  95 00            sta $00,x
002110r 2  A9 FF            lda #255
002112r 2  95 01            sta $01,x
002114r 2               
002114r 2               ; src/prelude.fth:21:21 in `0=`
002114r 2               @OPCODE_1057:   ; [c64_ir] JumpTarget(42)
002114r 2               
002114r 2               @target_43:
002114r 2               
002114r 2               ; <inline>:0:0 in `main`
002114r 2               @OPCODE_1059:   ; [c64_ir] AltPop
002114r 2  E8               inx
002115r 2  E8               inx
002116r 2  68               pla
002117r 2  95 00            sta $00,x
002119r 2  68               pla
00211Ar 2  95 01            sta $01,x
00211Cr 2               
00211Cr 2               ; <inline>:0:0 in `main`
00211Cr 2               @OPCODE_1060:   ; [c64_ir] Drop
00211Cr 2  CA               dex
00211Dr 2  CA               dex
00211Er 2               
00211Er 2               ; <inline>:0:0 in `main`
00211Er 2               @OPCODE_1061:   ; [c64_ir] AltPop
00211Er 2  E8               inx
00211Fr 2  E8               inx
002120r 2  68               pla
002121r 2  95 00            sta $00,x
002123r 2  68               pla
002124r 2  95 01            sta $01,x
002126r 2               
002126r 2               ; <inline>:0:0 in `main`
002126r 2               @OPCODE_1062:   ; [c64_ir] Drop
002126r 2  CA               dex
002127r 2  CA               dex
002128r 2               
002128r 2               ; <inline>:0:0 in `main`
002128r 2               @OPCODE_1063:   ; [c64_ir] PushLiteral(7777)
002128r 2  E8               inx
002129r 2  E8               inx
00212Ar 2  A9 61            lda #97
00212Cr 2  95 00            sta $00,x
00212Er 2  A9 1E            lda #30
002130r 2  95 01            sta $01,x
002132r 2               
002132r 2               ; <inline>:0:0 in `main`
002132r 2               @OPCODE_1064:   ; [c64_ir] AltPush
002132r 2  CA               dex
002133r 2  CA               dex
002134r 2  B5 03            lda $03,x
002136r 2  48               pha
002137r 2  B5 02            lda $02,x
002139r 2  48               pha
00213Ar 2               
00213Ar 2               ; src/prelude.fth:3:10 in `swap`
00213Ar 2               @OPCODE_1065:   ; [c64_ir] AltPush
00213Ar 2  CA               dex
00213Br 2  CA               dex
00213Cr 2  B5 03            lda $03,x
00213Er 2  48               pha
00213Fr 2  B5 02            lda $02,x
002141r 2  48               pha
002142r 2               
002142r 2               ; src/prelude.fth:3:13 in `swap`
002142r 2               @OPCODE_1066:   ; [c64_ir] TempStore
002142r 2  CA               dex
002143r 2  CA               dex
002144r 2  B5 03            lda $03,x
002146r 2  85 96            sta TEMP_PAX2
002148r 2  B5 02            lda $02,x
00214Ar 2  85 95            sta TEMP_PAX1
00214Cr 2               
00214Cr 2               ; src/prelude.fth:3:19 in `swap`
00214Cr 2               @OPCODE_1067:   ; [c64_ir] AltPop
00214Cr 2  E8               inx
00214Dr 2  E8               inx
00214Er 2  68               pla
00214Fr 2  95 00            sta $00,x
002151r 2  68               pla
002152r 2  95 01            sta $01,x
002154r 2               
002154r 2               ; src/prelude.fth:3:22 in `swap`
002154r 2               @OPCODE_1068:   ; [c64_ir] TempLoad
002154r 2  E8               inx
002155r 2  E8               inx
002156r 2  A5 95            lda TEMP_PAX1
002158r 2  95 00            sta $00,x
00215Ar 2  A5 96            lda TEMP_PAX2
00215Cr 2  95 01            sta $01,x
00215Er 2               
00215Er 2               ; <inline>:0:0 in `main`
00215Er 2               @OPCODE_1069:   ; [c64_ir] AltPop
00215Er 2  E8               inx
00215Fr 2  E8               inx
002160r 2  68               pla
002161r 2  95 00            sta $00,x
002163r 2  68               pla
002164r 2  95 01            sta $01,x
002166r 2               
002166r 2               ; <inline>:0:0 in `main`
002166r 2               @OPCODE_1070:   ; [c64_ir] Drop
002166r 2  CA               dex
002167r 2  CA               dex
002168r 2               
002168r 2               ; src/prelude.fth:33:42 in `loopimpl`
002168r 2               @OPCODE_1071:   ; [c64_ir] AltPush
002168r 2  CA               dex
002169r 2  CA               dex
00216Ar 2  B5 03            lda $03,x
00216Cr 2  48               pha
00216Dr 2  B5 02            lda $02,x
00216Fr 2  48               pha
002170r 2               
002170r 2               ; <inline>:0:0 in `main`
002170r 2               @OPCODE_1072:   ; [c64_ir] AltPop
002170r 2  E8               inx
002171r 2  E8               inx
002172r 2  68               pla
002173r 2  95 00            sta $00,x
002175r 2  68               pla
002176r 2  95 01            sta $01,x
002178r 2               
002178r 2               ; <inline>:0:0 in `main`
002178r 2               @OPCODE_1073:   ; [c64_ir] Drop
002178r 2  CA               dex
002179r 2  CA               dex
00217Ar 2               
00217Ar 2               ; snake.fth:102:3 in `initialize-snake`
00217Ar 2               @OPCODE_1074:   ; [c64_ir] LoopIf0(40)
00217Ar 2  CA               dex
00217Br 2  CA               dex
00217Cr 2  B5 02            lda $02,x
00217Er 2  15 03            ora $03,x
002180r 2  D0 03            bne *+5
002182r 2  4C rr rr         jmp @target_40
002185r 2               
002185r 2               @target_44:
002185r 2               
002185r 2               ; snake.fth:102:3 in `initialize-snake`
002185r 2               @OPCODE_1076:   ; [c64_ir] AltPop
002185r 2  E8               inx
002186r 2  E8               inx
002187r 2  68               pla
002188r 2  95 00            sta $00,x
00218Ar 2  68               pla
00218Br 2  95 01            sta $01,x
00218Dr 2               
00218Dr 2               ; snake.fth:102:3 in `initialize-snake`
00218Dr 2               @OPCODE_1077:   ; [c64_ir] Drop
00218Dr 2  CA               dex
00218Er 2  CA               dex
00218Fr 2               
00218Fr 2               ; snake.fth:102:3 in `initialize-snake`
00218Fr 2               @OPCODE_1078:   ; [c64_ir] AltPop
00218Fr 2  E8               inx
002190r 2  E8               inx
002191r 2  68               pla
002192r 2  95 00            sta $00,x
002194r 2  68               pla
002195r 2  95 01            sta $01,x
002197r 2               
002197r 2               ; snake.fth:102:3 in `initialize-snake`
002197r 2               @OPCODE_1079:   ; [c64_ir] Drop
002197r 2  CA               dex
002198r 2  CA               dex
002199r 2               
002199r 2               ; snake.fth:103:3 in `initialize-snake`
002199r 2               @OPCODE_1080:   ; [c64_ir] PushLiteral(39)
002199r 2  E8               inx
00219Ar 2  E8               inx
00219Br 2  A9 27            lda #39
00219Dr 2  95 00            sta $00,x
00219Fr 2  A9 00            lda #0
0021A1r 2  95 01            sta $01,x
0021A3r 2               
0021A3r 2               ; snake.fth:103:9 in `initialize-snake`
0021A3r 2               @OPCODE_1081:   ; [c64_ir] PushLiteral(-26660)
0021A3r 2  E8               inx
0021A4r 2  E8               inx
0021A5r 2  A9 DC            lda #220
0021A7r 2  95 00            sta $00,x
0021A9r 2  A9 97            lda #151
0021ABr 2  95 01            sta $01,x
0021ADr 2               
0021ADr 2               ; snake.fth:103:19 in `initialize-snake`
0021ADr 2               @OPCODE_1082:   ; [c64_ir] Store
0021ADr 2  CA               dex
0021AEr 2  CA               dex
0021AFr 2  CA               dex
0021B0r 2  CA               dex
0021B1r 2  B5 02            lda $02,x
0021B3r 2  81 04            sta ($04,x)
0021B5r 2                   ; TODO high byte
0021B5r 2               
0021B5r 2               ; <inline>:0:0 in `main`
0021B5r 2               @OPCODE_1083:   ; [c64_ir] AltPop
0021B5r 2  E8               inx
0021B6r 2  E8               inx
0021B7r 2  68               pla
0021B8r 2  95 00            sta $00,x
0021BAr 2  68               pla
0021BBr 2  95 01            sta $01,x
0021BDr 2               
0021BDr 2               ; <inline>:0:0 in `main`
0021BDr 2               @OPCODE_1084:   ; [c64_ir] Drop
0021BDr 2  CA               dex
0021BEr 2  CA               dex
0021BFr 2               
0021BFr 2               ; <inline>:0:0 in `main`
0021BFr 2               @OPCODE_1085:   ; [c64_ir] PushLiteral(7777)
0021BFr 2  E8               inx
0021C0r 2  E8               inx
0021C1r 2  A9 61            lda #97
0021C3r 2  95 00            sta $00,x
0021C5r 2  A9 1E            lda #30
0021C7r 2  95 01            sta $01,x
0021C9r 2               
0021C9r 2               ; <inline>:0:0 in `main`
0021C9r 2               @OPCODE_1086:   ; [c64_ir] AltPush
0021C9r 2  CA               dex
0021CAr 2  CA               dex
0021CBr 2  B5 03            lda $03,x
0021CDr 2  48               pha
0021CEr 2  B5 02            lda $02,x
0021D0r 2  48               pha
0021D1r 2               
0021D1r 2               ; snake.fth:107:21 in `initialize-apple`
0021D1r 2               @OPCODE_1087:   ; [c64_ir] PushLiteral(8)
0021D1r 2  E8               inx
0021D2r 2  E8               inx
0021D3r 2  A9 08            lda #8
0021D5r 2  95 00            sta $00,x
0021D7r 2  A9 00            lda #0
0021D9r 2  95 01            sta $01,x
0021DBr 2               
0021DBr 2               ; snake.fth:107:23 in `initialize-apple`
0021DBr 2               @OPCODE_1088:   ; [c64_ir] PushLiteral(13)
0021DBr 2  E8               inx
0021DCr 2  E8               inx
0021DDr 2  A9 0D            lda #13
0021DFr 2  95 00            sta $00,x
0021E1r 2  A9 00            lda #0
0021E3r 2  95 01            sta $01,x
0021E5r 2               
0021E5r 2               ; <inline>:0:0 in `main`
0021E5r 2               @OPCODE_1089:   ; [c64_ir] PushLiteral(7777)
0021E5r 2  E8               inx
0021E6r 2  E8               inx
0021E7r 2  A9 61            lda #97
0021E9r 2  95 00            sta $00,x
0021EBr 2  A9 1E            lda #30
0021EDr 2  95 01            sta $01,x
0021EFr 2               
0021EFr 2               ; <inline>:0:0 in `main`
0021EFr 2               @OPCODE_1090:   ; [c64_ir] AltPush
0021EFr 2  CA               dex
0021F0r 2  CA               dex
0021F1r 2  B5 03            lda $03,x
0021F3r 2  48               pha
0021F4r 2  B5 02            lda $02,x
0021F6r 2  48               pha
0021F7r 2               
0021F7r 2               ; snake.fth:105:22 in `set-apple-position`
0021F7r 2               @OPCODE_1091:   ; [c64_ir] PushLiteral(-26664)
0021F7r 2  E8               inx
0021F8r 2  E8               inx
0021F9r 2  A9 D8            lda #216
0021FBr 2  95 00            sta $00,x
0021FDr 2  A9 97            lda #151
0021FFr 2  95 01            sta $01,x
002201r 2               
002201r 2               ; snake.fth:105:30 in `set-apple-position`
002201r 2               @OPCODE_1092:   ; [c64_ir] Store
002201r 2  CA               dex
002202r 2  CA               dex
002203r 2  CA               dex
002204r 2  CA               dex
002205r 2  B5 02            lda $02,x
002207r 2  81 04            sta ($04,x)
002209r 2                   ; TODO high byte
002209r 2               
002209r 2               ; snake.fth:105:32 in `set-apple-position`
002209r 2               @OPCODE_1093:   ; [c64_ir] PushLiteral(-26662)
002209r 2  E8               inx
00220Ar 2  E8               inx
00220Br 2  A9 DA            lda #218
00220Dr 2  95 00            sta $00,x
00220Fr 2  A9 97            lda #151
002211r 2  95 01            sta $01,x
002213r 2               
002213r 2               ; snake.fth:105:40 in `set-apple-position`
002213r 2               @OPCODE_1094:   ; [c64_ir] Store
002213r 2  CA               dex
002214r 2  CA               dex
002215r 2  CA               dex
002216r 2  CA               dex
002217r 2  B5 02            lda $02,x
002219r 2  81 04            sta ($04,x)
00221Br 2                   ; TODO high byte
00221Br 2               
00221Br 2               ; <inline>:0:0 in `main`
00221Br 2               @OPCODE_1095:   ; [c64_ir] AltPop
00221Br 2  E8               inx
00221Cr 2  E8               inx
00221Dr 2  68               pla
00221Er 2  95 00            sta $00,x
002220r 2  68               pla
002221r 2  95 01            sta $01,x
002223r 2               
002223r 2               ; <inline>:0:0 in `main`
002223r 2               @OPCODE_1096:   ; [c64_ir] Drop
002223r 2  CA               dex
002224r 2  CA               dex
002225r 2               
002225r 2               ; <inline>:0:0 in `main`
002225r 2               @OPCODE_1097:   ; [c64_ir] AltPop
002225r 2  E8               inx
002226r 2  E8               inx
002227r 2  68               pla
002228r 2  95 00            sta $00,x
00222Ar 2  68               pla
00222Br 2  95 01            sta $01,x
00222Dr 2               
00222Dr 2               ; <inline>:0:0 in `main`
00222Dr 2               @OPCODE_1098:   ; [c64_ir] Drop
00222Dr 2  CA               dex
00222Er 2  CA               dex
00222Fr 2               
00222Fr 2               ; <inline>:0:0 in `main`
00222Fr 2               @OPCODE_1099:   ; [c64_ir] PushLiteral(7777)
00222Fr 2  E8               inx
002230r 2  E8               inx
002231r 2  A9 61            lda #97
002233r 2  95 00            sta $00,x
002235r 2  A9 1E            lda #30
002237r 2  95 01            sta $01,x
002239r 2               
002239r 2               ; <inline>:0:0 in `main`
002239r 2               @OPCODE_1100:   ; [c64_ir] AltPush
002239r 2  CA               dex
00223Ar 2  CA               dex
00223Br 2  B5 03            lda $03,x
00223Dr 2  48               pha
00223Er 2  B5 02            lda $02,x
002240r 2  48               pha
002241r 2               
002241r 2               ; snake.fth:110:3 in `draw-full-snake`
002241r 2               @OPCODE_1101:   ; [c64_ir] PushLiteral(-26658)
002241r 2  E8               inx
002242r 2  E8               inx
002243r 2  A9 DE            lda #222
002245r 2  95 00            sta $00,x
002247r 2  A9 97            lda #151
002249r 2  95 01            sta $01,x
00224Br 2               
00224Br 2               ; snake.fth:110:10 in `draw-full-snake`
00224Br 2               @OPCODE_1102:   ; [c64_ir] Load
00224Br 2  A1 00            lda ($00,x)
00224Dr 2  95 00            sta $00,x
00224Fr 2  A9 00            lda #0
002251r 2  95 01            sta $01,x
002253r 2               
002253r 2               ; snake.fth:110:12 in `draw-full-snake`
002253r 2               @OPCODE_1103:   ; [c64_ir] PushLiteral(0)
002253r 2  E8               inx
002254r 2  E8               inx
002255r 2  A9 00            lda #0
002257r 2  95 00            sta $00,x
002259r 2  A9 00            lda #0
00225Br 2  95 01            sta $01,x
00225Dr 2               
00225Dr 2               ; snake.fth:110:14 in `draw-full-snake`
00225Dr 2               @OPCODE_1104:   ; [c64_ir] AltPush
00225Dr 2  CA               dex
00225Er 2  CA               dex
00225Fr 2  B5 03            lda $03,x
002261r 2  48               pha
002262r 2  B5 02            lda $02,x
002264r 2  48               pha
002265r 2               
002265r 2               ; snake.fth:110:14 in `draw-full-snake`
002265r 2               @OPCODE_1105:   ; [c64_ir] AltPush
002265r 2  CA               dex
002266r 2  CA               dex
002267r 2  B5 03            lda $03,x
002269r 2  48               pha
00226Ar 2  B5 02            lda $02,x
00226Cr 2  48               pha
00226Dr 2               
00226Dr 2               ; snake.fth:110:14 in `draw-full-snake`
00226Dr 2               @OPCODE_1106:   ; [c64_ir] LoopTarget(44)
00226Dr 2               
00226Dr 2               @target_45:
00226Dr 2               
00226Dr 2               ; <inline>:0:0 in `main`
00226Dr 2               @OPCODE_1108:   ; [c64_ir] PushLiteral(7777)
00226Dr 2  E8               inx
00226Er 2  E8               inx
00226Fr 2  A9 61            lda #97
002271r 2  95 00            sta $00,x
002273r 2  A9 1E            lda #30
002275r 2  95 01            sta $01,x
002277r 2               
002277r 2               ; <inline>:0:0 in `main`
002277r 2               @OPCODE_1109:   ; [c64_ir] AltPush
002277r 2  CA               dex
002278r 2  CA               dex
002279r 2  B5 03            lda $03,x
00227Br 2  48               pha
00227Cr 2  B5 02            lda $02,x
00227Er 2  48               pha
00227Fr 2               
00227Fr 2               ; src/prelude.fth:38:5 in `i`
00227Fr 2               @OPCODE_1110:   ; [c64_ir] AltPop
00227Fr 2  E8               inx
002280r 2  E8               inx
002281r 2  68               pla
002282r 2  95 00            sta $00,x
002284r 2  68               pla
002285r 2  95 01            sta $01,x
002287r 2               
002287r 2               ; src/prelude.fth:38:8 in `i`
002287r 2               @OPCODE_1111:   ; [c64_ir] AltPop
002287r 2  E8               inx
002288r 2  E8               inx
002289r 2  68               pla
00228Ar 2  95 00            sta $00,x
00228Cr 2  68               pla
00228Dr 2  95 01            sta $01,x
00228Fr 2               
00228Fr 2               ; src/prelude.fth:38:11 in `i`
00228Fr 2               @OPCODE_1112:   ; [c64_ir] AltPop
00228Fr 2  E8               inx
002290r 2  E8               inx
002291r 2  68               pla
002292r 2  95 00            sta $00,x
002294r 2  68               pla
002295r 2  95 01            sta $01,x
002297r 2               
002297r 2               ; src/prelude.fth:38:14 in `i`
002297r 2               @OPCODE_1113:   ; [c64_ir] TempStore
002297r 2  CA               dex
002298r 2  CA               dex
002299r 2  B5 03            lda $03,x
00229Br 2  85 96            sta TEMP_PAX2
00229Dr 2  B5 02            lda $02,x
00229Fr 2  85 95            sta TEMP_PAX1
0022A1r 2               
0022A1r 2               ; src/prelude.fth:38:20 in `i`
0022A1r 2               @OPCODE_1114:   ; [c64_ir] TempLoad
0022A1r 2  E8               inx
0022A2r 2  E8               inx
0022A3r 2  A5 95            lda TEMP_PAX1
0022A5r 2  95 00            sta $00,x
0022A7r 2  A5 96            lda TEMP_PAX2
0022A9r 2  95 01            sta $01,x
0022ABr 2               
0022ABr 2               ; src/prelude.fth:38:26 in `i`
0022ABr 2               @OPCODE_1115:   ; [c64_ir] AltPush
0022ABr 2  CA               dex
0022ACr 2  CA               dex
0022ADr 2  B5 03            lda $03,x
0022AFr 2  48               pha
0022B0r 2  B5 02            lda $02,x
0022B2r 2  48               pha
0022B3r 2               
0022B3r 2               ; src/prelude.fth:38:29 in `i`
0022B3r 2               @OPCODE_1116:   ; [c64_ir] AltPush
0022B3r 2  CA               dex
0022B4r 2  CA               dex
0022B5r 2  B5 03            lda $03,x
0022B7r 2  48               pha
0022B8r 2  B5 02            lda $02,x
0022BAr 2  48               pha
0022BBr 2               
0022BBr 2               ; src/prelude.fth:38:32 in `i`
0022BBr 2               @OPCODE_1117:   ; [c64_ir] AltPush
0022BBr 2  CA               dex
0022BCr 2  CA               dex
0022BDr 2  B5 03            lda $03,x
0022BFr 2  48               pha
0022C0r 2  B5 02            lda $02,x
0022C2r 2  48               pha
0022C3r 2               
0022C3r 2               ; src/prelude.fth:38:35 in `i`
0022C3r 2               @OPCODE_1118:   ; [c64_ir] TempLoad
0022C3r 2  E8               inx
0022C4r 2  E8               inx
0022C5r 2  A5 95            lda TEMP_PAX1
0022C7r 2  95 00            sta $00,x
0022C9r 2  A5 96            lda TEMP_PAX2
0022CBr 2  95 01            sta $01,x
0022CDr 2               
0022CDr 2               ; <inline>:0:0 in `main`
0022CDr 2               @OPCODE_1119:   ; [c64_ir] AltPop
0022CDr 2  E8               inx
0022CEr 2  E8               inx
0022CFr 2  68               pla
0022D0r 2  95 00            sta $00,x
0022D2r 2  68               pla
0022D3r 2  95 01            sta $01,x
0022D5r 2               
0022D5r 2               ; <inline>:0:0 in `main`
0022D5r 2               @OPCODE_1120:   ; [c64_ir] Drop
0022D5r 2  CA               dex
0022D6r 2  CA               dex
0022D7r 2               
0022D7r 2               ; <inline>:0:0 in `main`
0022D7r 2               @OPCODE_1121:   ; [c64_ir] PushLiteral(7777)
0022D7r 2  E8               inx
0022D8r 2  E8               inx
0022D9r 2  A9 61            lda #97
0022DBr 2  95 00            sta $00,x
0022DDr 2  A9 1E            lda #30
0022DFr 2  95 01            sta $01,x
0022E1r 2               
0022E1r 2               ; <inline>:0:0 in `main`
0022E1r 2               @OPCODE_1122:   ; [c64_ir] AltPush
0022E1r 2  CA               dex
0022E2r 2  CA               dex
0022E3r 2  B5 03            lda $03,x
0022E5r 2  48               pha
0022E6r 2  B5 02            lda $02,x
0022E8r 2  48               pha
0022E9r 2               
0022E9r 2               ; <inline>:0:0 in `main`
0022E9r 2               @OPCODE_1123:   ; [c64_ir] PushLiteral(7777)
0022E9r 2  E8               inx
0022EAr 2  E8               inx
0022EBr 2  A9 61            lda #97
0022EDr 2  95 00            sta $00,x
0022EFr 2  A9 1E            lda #30
0022F1r 2  95 01            sta $01,x
0022F3r 2               
0022F3r 2               ; <inline>:0:0 in `main`
0022F3r 2               @OPCODE_1124:   ; [c64_ir] AltPush
0022F3r 2  CA               dex
0022F4r 2  CA               dex
0022F5r 2  B5 03            lda $03,x
0022F7r 2  48               pha
0022F8r 2  B5 02            lda $02,x
0022FAr 2  48               pha
0022FBr 2               
0022FBr 2               ; <inline>:0:0 in `main`
0022FBr 2               @OPCODE_1125:   ; [c64_ir] PushLiteral(7777)
0022FBr 2  E8               inx
0022FCr 2  E8               inx
0022FDr 2  A9 61            lda #97
0022FFr 2  95 00            sta $00,x
002301r 2  A9 1E            lda #30
002303r 2  95 01            sta $01,x
002305r 2               
002305r 2               ; <inline>:0:0 in `main`
002305r 2               @OPCODE_1126:   ; [c64_ir] AltPush
002305r 2  CA               dex
002306r 2  CA               dex
002307r 2  B5 03            lda $03,x
002309r 2  48               pha
00230Ar 2  B5 02            lda $02,x
00230Cr 2  48               pha
00230Dr 2               
00230Dr 2               ; src/prelude.fth:6:10 in `dup`
00230Dr 2               @OPCODE_1127:   ; [c64_ir] TempStore
00230Dr 2  CA               dex
00230Er 2  CA               dex
00230Fr 2  B5 03            lda $03,x
002311r 2  85 96            sta TEMP_PAX2
002313r 2  B5 02            lda $02,x
002315r 2  85 95            sta TEMP_PAX1
002317r 2               
002317r 2               ; src/prelude.fth:6:16 in `dup`
002317r 2               @OPCODE_1128:   ; [c64_ir] TempLoad
002317r 2  E8               inx
002318r 2  E8               inx
002319r 2  A5 95            lda TEMP_PAX1
00231Br 2  95 00            sta $00,x
00231Dr 2  A5 96            lda TEMP_PAX2
00231Fr 2  95 01            sta $01,x
002321r 2               
002321r 2               ; src/prelude.fth:6:22 in `dup`
002321r 2               @OPCODE_1129:   ; [c64_ir] TempLoad
002321r 2  E8               inx
002322r 2  E8               inx
002323r 2  A5 95            lda TEMP_PAX1
002325r 2  95 00            sta $00,x
002327r 2  A5 96            lda TEMP_PAX2
002329r 2  95 01            sta $01,x
00232Br 2               
00232Br 2               ; <inline>:0:0 in `main`
00232Br 2               @OPCODE_1130:   ; [c64_ir] AltPop
00232Br 2  E8               inx
00232Cr 2  E8               inx
00232Dr 2  68               pla
00232Er 2  95 00            sta $00,x
002330r 2  68               pla
002331r 2  95 01            sta $01,x
002333r 2               
002333r 2               ; <inline>:0:0 in `main`
002333r 2               @OPCODE_1131:   ; [c64_ir] Drop
002333r 2  CA               dex
002334r 2  CA               dex
002335r 2               
002335r 2               ; src/prelude.fth:41:13 in `cells`
002335r 2               @OPCODE_1132:   ; [c64_ir] Add
002335r 2                   ; 21
002335r 2  CA               dex
002336r 2  CA               dex
002337r 2  18               clc
002338r 2  B5 00            lda $00,x
00233Ar 2  75 02            adc $02,x
00233Cr 2  95 00            sta $00,x
00233Er 2  B5 01            lda $01,x
002340r 2  75 03            adc $03,x
002342r 2  95 01            sta $01,x
002344r 2               
002344r 2               ; <inline>:0:0 in `main`
002344r 2               @OPCODE_1133:   ; [c64_ir] AltPop
002344r 2  E8               inx
002345r 2  E8               inx
002346r 2  68               pla
002347r 2  95 00            sta $00,x
002349r 2  68               pla
00234Ar 2  95 01            sta $01,x
00234Cr 2               
00234Cr 2               ; <inline>:0:0 in `main`
00234Cr 2               @OPCODE_1134:   ; [c64_ir] Drop
00234Cr 2  CA               dex
00234Dr 2  CA               dex
00234Er 2               
00234Er 2               ; snake.fth:42:9 in `snake-x`
00234Er 2               @OPCODE_1135:   ; [c64_ir] PushLiteral(-28668)
00234Er 2  E8               inx
00234Fr 2  E8               inx
002350r 2  A9 04            lda #4
002352r 2  95 00            sta $00,x
002354r 2  A9 90            lda #144
002356r 2  95 01            sta $01,x
002358r 2               
002358r 2               ; snake.fth:42:22 in `snake-x`
002358r 2               @OPCODE_1136:   ; [c64_ir] Add
002358r 2                   ; 21
002358r 2  CA               dex
002359r 2  CA               dex
00235Ar 2  18               clc
00235Br 2  B5 00            lda $00,x
00235Dr 2  75 02            adc $02,x
00235Fr 2  95 00            sta $00,x
002361r 2  B5 01            lda $01,x
002363r 2  75 03            adc $03,x
002365r 2  95 01            sta $01,x
002367r 2               
002367r 2               ; <inline>:0:0 in `main`
002367r 2               @OPCODE_1137:   ; [c64_ir] AltPop
002367r 2  E8               inx
002368r 2  E8               inx
002369r 2  68               pla
00236Ar 2  95 00            sta $00,x
00236Cr 2  68               pla
00236Dr 2  95 01            sta $01,x
00236Fr 2               
00236Fr 2               ; <inline>:0:0 in `main`
00236Fr 2               @OPCODE_1138:   ; [c64_ir] Drop
00236Fr 2  CA               dex
002370r 2  CA               dex
002371r 2               
002371r 2               ; snake.fth:111:15 in `draw-full-snake`
002371r 2               @OPCODE_1139:   ; [c64_ir] Load
002371r 2  A1 00            lda ($00,x)
002373r 2  95 00            sta $00,x
002375r 2  A9 00            lda #0
002377r 2  95 01            sta $01,x
002379r 2               
002379r 2               ; <inline>:0:0 in `main`
002379r 2               @OPCODE_1140:   ; [c64_ir] PushLiteral(7777)
002379r 2  E8               inx
00237Ar 2  E8               inx
00237Br 2  A9 61            lda #97
00237Dr 2  95 00            sta $00,x
00237Fr 2  A9 1E            lda #30
002381r 2  95 01            sta $01,x
002383r 2               
002383r 2               ; <inline>:0:0 in `main`
002383r 2               @OPCODE_1141:   ; [c64_ir] AltPush
002383r 2  CA               dex
002384r 2  CA               dex
002385r 2  B5 03            lda $03,x
002387r 2  48               pha
002388r 2  B5 02            lda $02,x
00238Ar 2  48               pha
00238Br 2               
00238Br 2               ; src/prelude.fth:38:5 in `i`
00238Br 2               @OPCODE_1142:   ; [c64_ir] AltPop
00238Br 2  E8               inx
00238Cr 2  E8               inx
00238Dr 2  68               pla
00238Er 2  95 00            sta $00,x
002390r 2  68               pla
002391r 2  95 01            sta $01,x
002393r 2               
002393r 2               ; src/prelude.fth:38:8 in `i`
002393r 2               @OPCODE_1143:   ; [c64_ir] AltPop
002393r 2  E8               inx
002394r 2  E8               inx
002395r 2  68               pla
002396r 2  95 00            sta $00,x
002398r 2  68               pla
002399r 2  95 01            sta $01,x
00239Br 2               
00239Br 2               ; src/prelude.fth:38:11 in `i`
00239Br 2               @OPCODE_1144:   ; [c64_ir] AltPop
00239Br 2  E8               inx
00239Cr 2  E8               inx
00239Dr 2  68               pla
00239Er 2  95 00            sta $00,x
0023A0r 2  68               pla
0023A1r 2  95 01            sta $01,x
0023A3r 2               
0023A3r 2               ; src/prelude.fth:38:14 in `i`
0023A3r 2               @OPCODE_1145:   ; [c64_ir] TempStore
0023A3r 2  CA               dex
0023A4r 2  CA               dex
0023A5r 2  B5 03            lda $03,x
0023A7r 2  85 96            sta TEMP_PAX2
0023A9r 2  B5 02            lda $02,x
0023ABr 2  85 95            sta TEMP_PAX1
0023ADr 2               
0023ADr 2               ; src/prelude.fth:38:20 in `i`
0023ADr 2               @OPCODE_1146:   ; [c64_ir] TempLoad
0023ADr 2  E8               inx
0023AEr 2  E8               inx
0023AFr 2  A5 95            lda TEMP_PAX1
0023B1r 2  95 00            sta $00,x
0023B3r 2  A5 96            lda TEMP_PAX2
0023B5r 2  95 01            sta $01,x
0023B7r 2               
0023B7r 2               ; src/prelude.fth:38:26 in `i`
0023B7r 2               @OPCODE_1147:   ; [c64_ir] AltPush
0023B7r 2  CA               dex
0023B8r 2  CA               dex
0023B9r 2  B5 03            lda $03,x
0023BBr 2  48               pha
0023BCr 2  B5 02            lda $02,x
0023BEr 2  48               pha
0023BFr 2               
0023BFr 2               ; src/prelude.fth:38:29 in `i`
0023BFr 2               @OPCODE_1148:   ; [c64_ir] AltPush
0023BFr 2  CA               dex
0023C0r 2  CA               dex
0023C1r 2  B5 03            lda $03,x
0023C3r 2  48               pha
0023C4r 2  B5 02            lda $02,x
0023C6r 2  48               pha
0023C7r 2               
0023C7r 2               ; src/prelude.fth:38:32 in `i`
0023C7r 2               @OPCODE_1149:   ; [c64_ir] AltPush
0023C7r 2  CA               dex
0023C8r 2  CA               dex
0023C9r 2  B5 03            lda $03,x
0023CBr 2  48               pha
0023CCr 2  B5 02            lda $02,x
0023CEr 2  48               pha
0023CFr 2               
0023CFr 2               ; src/prelude.fth:38:35 in `i`
0023CFr 2               @OPCODE_1150:   ; [c64_ir] TempLoad
0023CFr 2  E8               inx
0023D0r 2  E8               inx
0023D1r 2  A5 95            lda TEMP_PAX1
0023D3r 2  95 00            sta $00,x
0023D5r 2  A5 96            lda TEMP_PAX2
0023D7r 2  95 01            sta $01,x
0023D9r 2               
0023D9r 2               ; <inline>:0:0 in `main`
0023D9r 2               @OPCODE_1151:   ; [c64_ir] AltPop
0023D9r 2  E8               inx
0023DAr 2  E8               inx
0023DBr 2  68               pla
0023DCr 2  95 00            sta $00,x
0023DEr 2  68               pla
0023DFr 2  95 01            sta $01,x
0023E1r 2               
0023E1r 2               ; <inline>:0:0 in `main`
0023E1r 2               @OPCODE_1152:   ; [c64_ir] Drop
0023E1r 2  CA               dex
0023E2r 2  CA               dex
0023E3r 2               
0023E3r 2               ; <inline>:0:0 in `main`
0023E3r 2               @OPCODE_1153:   ; [c64_ir] PushLiteral(7777)
0023E3r 2  E8               inx
0023E4r 2  E8               inx
0023E5r 2  A9 61            lda #97
0023E7r 2  95 00            sta $00,x
0023E9r 2  A9 1E            lda #30
0023EBr 2  95 01            sta $01,x
0023EDr 2               
0023EDr 2               ; <inline>:0:0 in `main`
0023EDr 2               @OPCODE_1154:   ; [c64_ir] AltPush
0023EDr 2  CA               dex
0023EEr 2  CA               dex
0023EFr 2  B5 03            lda $03,x
0023F1r 2  48               pha
0023F2r 2  B5 02            lda $02,x
0023F4r 2  48               pha
0023F5r 2               
0023F5r 2               ; <inline>:0:0 in `main`
0023F5r 2               @OPCODE_1155:   ; [c64_ir] PushLiteral(7777)
0023F5r 2  E8               inx
0023F6r 2  E8               inx
0023F7r 2  A9 61            lda #97
0023F9r 2  95 00            sta $00,x
0023FBr 2  A9 1E            lda #30
0023FDr 2  95 01            sta $01,x
0023FFr 2               
0023FFr 2               ; <inline>:0:0 in `main`
0023FFr 2               @OPCODE_1156:   ; [c64_ir] AltPush
0023FFr 2  CA               dex
002400r 2  CA               dex
002401r 2  B5 03            lda $03,x
002403r 2  48               pha
002404r 2  B5 02            lda $02,x
002406r 2  48               pha
002407r 2               
002407r 2               ; <inline>:0:0 in `main`
002407r 2               @OPCODE_1157:   ; [c64_ir] PushLiteral(7777)
002407r 2  E8               inx
002408r 2  E8               inx
002409r 2  A9 61            lda #97
00240Br 2  95 00            sta $00,x
00240Dr 2  A9 1E            lda #30
00240Fr 2  95 01            sta $01,x
002411r 2               
002411r 2               ; <inline>:0:0 in `main`
002411r 2               @OPCODE_1158:   ; [c64_ir] AltPush
002411r 2  CA               dex
002412r 2  CA               dex
002413r 2  B5 03            lda $03,x
002415r 2  48               pha
002416r 2  B5 02            lda $02,x
002418r 2  48               pha
002419r 2               
002419r 2               ; src/prelude.fth:6:10 in `dup`
002419r 2               @OPCODE_1159:   ; [c64_ir] TempStore
002419r 2  CA               dex
00241Ar 2  CA               dex
00241Br 2  B5 03            lda $03,x
00241Dr 2  85 96            sta TEMP_PAX2
00241Fr 2  B5 02            lda $02,x
002421r 2  85 95            sta TEMP_PAX1
002423r 2               
002423r 2               ; src/prelude.fth:6:16 in `dup`
002423r 2               @OPCODE_1160:   ; [c64_ir] TempLoad
002423r 2  E8               inx
002424r 2  E8               inx
002425r 2  A5 95            lda TEMP_PAX1
002427r 2  95 00            sta $00,x
002429r 2  A5 96            lda TEMP_PAX2
00242Br 2  95 01            sta $01,x
00242Dr 2               
00242Dr 2               ; src/prelude.fth:6:22 in `dup`
00242Dr 2               @OPCODE_1161:   ; [c64_ir] TempLoad
00242Dr 2  E8               inx
00242Er 2  E8               inx
00242Fr 2  A5 95            lda TEMP_PAX1
002431r 2  95 00            sta $00,x
002433r 2  A5 96            lda TEMP_PAX2
002435r 2  95 01            sta $01,x
002437r 2               
002437r 2               ; <inline>:0:0 in `main`
002437r 2               @OPCODE_1162:   ; [c64_ir] AltPop
002437r 2  E8               inx
002438r 2  E8               inx
002439r 2  68               pla
00243Ar 2  95 00            sta $00,x
00243Cr 2  68               pla
00243Dr 2  95 01            sta $01,x
00243Fr 2               
00243Fr 2               ; <inline>:0:0 in `main`
00243Fr 2               @OPCODE_1163:   ; [c64_ir] Drop
00243Fr 2  CA               dex
002440r 2  CA               dex
002441r 2               
002441r 2               ; src/prelude.fth:41:13 in `cells`
002441r 2               @OPCODE_1164:   ; [c64_ir] Add
002441r 2                   ; 21
002441r 2  CA               dex
002442r 2  CA               dex
002443r 2  18               clc
002444r 2  B5 00            lda $00,x
002446r 2  75 02            adc $02,x
002448r 2  95 00            sta $00,x
00244Ar 2  B5 01            lda $01,x
00244Cr 2  75 03            adc $03,x
00244Er 2  95 01            sta $01,x
002450r 2               
002450r 2               ; <inline>:0:0 in `main`
002450r 2               @OPCODE_1165:   ; [c64_ir] AltPop
002450r 2  E8               inx
002451r 2  E8               inx
002452r 2  68               pla
002453r 2  95 00            sta $00,x
002455r 2  68               pla
002456r 2  95 01            sta $01,x
002458r 2               
002458r 2               ; <inline>:0:0 in `main`
002458r 2               @OPCODE_1166:   ; [c64_ir] Drop
002458r 2  CA               dex
002459r 2  CA               dex
00245Ar 2               
00245Ar 2               ; snake.fth:45:9 in `snake-y`
00245Ar 2               @OPCODE_1167:   ; [c64_ir] PushLiteral(-27666)
00245Ar 2  E8               inx
00245Br 2  E8               inx
00245Cr 2  A9 EE            lda #238
00245Er 2  95 00            sta $00,x
002460r 2  A9 93            lda #147
002462r 2  95 01            sta $01,x
002464r 2               
002464r 2               ; snake.fth:45:22 in `snake-y`
002464r 2               @OPCODE_1168:   ; [c64_ir] Add
002464r 2                   ; 21
002464r 2  CA               dex
002465r 2  CA               dex
002466r 2  18               clc
002467r 2  B5 00            lda $00,x
002469r 2  75 02            adc $02,x
00246Br 2  95 00            sta $00,x
00246Dr 2  B5 01            lda $01,x
00246Fr 2  75 03            adc $03,x
002471r 2  95 01            sta $01,x
002473r 2               
002473r 2               ; <inline>:0:0 in `main`
002473r 2               @OPCODE_1169:   ; [c64_ir] AltPop
002473r 2  E8               inx
002474r 2  E8               inx
002475r 2  68               pla
002476r 2  95 00            sta $00,x
002478r 2  68               pla
002479r 2  95 01            sta $01,x
00247Br 2               
00247Br 2               ; <inline>:0:0 in `main`
00247Br 2               @OPCODE_1170:   ; [c64_ir] Drop
00247Br 2  CA               dex
00247Cr 2  CA               dex
00247Dr 2               
00247Dr 2               ; snake.fth:111:27 in `draw-full-snake`
00247Dr 2               @OPCODE_1171:   ; [c64_ir] Load
00247Dr 2  A1 00            lda ($00,x)
00247Fr 2  95 00            sta $00,x
002481r 2  A9 00            lda #0
002483r 2  95 01            sta $01,x
002485r 2               
002485r 2               ; <inline>:0:0 in `main`
002485r 2               @OPCODE_1172:   ; [c64_ir] PushLiteral(7777)
002485r 2  E8               inx
002486r 2  E8               inx
002487r 2  A9 61            lda #97
002489r 2  95 00            sta $00,x
00248Br 2  A9 1E            lda #30
00248Dr 2  95 01            sta $01,x
00248Fr 2               
00248Fr 2               ; <inline>:0:0 in `main`
00248Fr 2               @OPCODE_1173:   ; [c64_ir] AltPush
00248Fr 2  CA               dex
002490r 2  CA               dex
002491r 2  B5 03            lda $03,x
002493r 2  48               pha
002494r 2  B5 02            lda $02,x
002496r 2  48               pha
002497r 2               
002497r 2               ; snake.fth:53:31 in `draw-snake-tile`
002497r 2               @OPCODE_1174:   ; [c64_ir] PushLiteral(232)
002497r 2  E8               inx
002498r 2  E8               inx
002499r 2  A9 E8            lda #232
00249Br 2  95 00            sta $00,x
00249Dr 2  A9 00            lda #0
00249Fr 2  95 01            sta $01,x
0024A1r 2               
0024A1r 2               ; <inline>:0:0 in `main`
0024A1r 2               @OPCODE_1175:   ; [c64_ir] PushLiteral(7777)
0024A1r 2  E8               inx
0024A2r 2  E8               inx
0024A3r 2  A9 61            lda #97
0024A5r 2  95 00            sta $00,x
0024A7r 2  A9 1E            lda #30
0024A9r 2  95 01            sta $01,x
0024ABr 2               
0024ABr 2               ; <inline>:0:0 in `main`
0024ABr 2               @OPCODE_1176:   ; [c64_ir] AltPush
0024ABr 2  CA               dex
0024ACr 2  CA               dex
0024ADr 2  B5 03            lda $03,x
0024AFr 2  48               pha
0024B0r 2  B5 02            lda $02,x
0024B2r 2  48               pha
0024B3r 2               
0024B3r 2               ; src/prelude.fth:5:10 in `rot`
0024B3r 2               @OPCODE_1177:   ; [c64_ir] AltPush
0024B3r 2  CA               dex
0024B4r 2  CA               dex
0024B5r 2  B5 03            lda $03,x
0024B7r 2  48               pha
0024B8r 2  B5 02            lda $02,x
0024BAr 2  48               pha
0024BBr 2               
0024BBr 2               ; <inline>:0:0 in `main`
0024BBr 2               @OPCODE_1178:   ; [c64_ir] PushLiteral(7777)
0024BBr 2  E8               inx
0024BCr 2  E8               inx
0024BDr 2  A9 61            lda #97
0024BFr 2  95 00            sta $00,x
0024C1r 2  A9 1E            lda #30
0024C3r 2  95 01            sta $01,x
0024C5r 2               
0024C5r 2               ; <inline>:0:0 in `main`
0024C5r 2               @OPCODE_1179:   ; [c64_ir] AltPush
0024C5r 2  CA               dex
0024C6r 2  CA               dex
0024C7r 2  B5 03            lda $03,x
0024C9r 2  48               pha
0024CAr 2  B5 02            lda $02,x
0024CCr 2  48               pha
0024CDr 2               
0024CDr 2               ; src/prelude.fth:3:10 in `swap`
0024CDr 2               @OPCODE_1180:   ; [c64_ir] AltPush
0024CDr 2  CA               dex
0024CEr 2  CA               dex
0024CFr 2  B5 03            lda $03,x
0024D1r 2  48               pha
0024D2r 2  B5 02            lda $02,x
0024D4r 2  48               pha
0024D5r 2               
0024D5r 2               ; src/prelude.fth:3:13 in `swap`
0024D5r 2               @OPCODE_1181:   ; [c64_ir] TempStore
0024D5r 2  CA               dex
0024D6r 2  CA               dex
0024D7r 2  B5 03            lda $03,x
0024D9r 2  85 96            sta TEMP_PAX2
0024DBr 2  B5 02            lda $02,x
0024DDr 2  85 95            sta TEMP_PAX1
0024DFr 2               
0024DFr 2               ; src/prelude.fth:3:19 in `swap`
0024DFr 2               @OPCODE_1182:   ; [c64_ir] AltPop
0024DFr 2  E8               inx
0024E0r 2  E8               inx
0024E1r 2  68               pla
0024E2r 2  95 00            sta $00,x
0024E4r 2  68               pla
0024E5r 2  95 01            sta $01,x
0024E7r 2               
0024E7r 2               ; src/prelude.fth:3:22 in `swap`
0024E7r 2               @OPCODE_1183:   ; [c64_ir] TempLoad
0024E7r 2  E8               inx
0024E8r 2  E8               inx
0024E9r 2  A5 95            lda TEMP_PAX1
0024EBr 2  95 00            sta $00,x
0024EDr 2  A5 96            lda TEMP_PAX2
0024EFr 2  95 01            sta $01,x
0024F1r 2               
0024F1r 2               ; <inline>:0:0 in `main`
0024F1r 2               @OPCODE_1184:   ; [c64_ir] AltPop
0024F1r 2  E8               inx
0024F2r 2  E8               inx
0024F3r 2  68               pla
0024F4r 2  95 00            sta $00,x
0024F6r 2  68               pla
0024F7r 2  95 01            sta $01,x
0024F9r 2               
0024F9r 2               ; <inline>:0:0 in `main`
0024F9r 2               @OPCODE_1185:   ; [c64_ir] Drop
0024F9r 2  CA               dex
0024FAr 2  CA               dex
0024FBr 2               
0024FBr 2               ; src/prelude.fth:5:18 in `rot`
0024FBr 2               @OPCODE_1186:   ; [c64_ir] AltPop
0024FBr 2  E8               inx
0024FCr 2  E8               inx
0024FDr 2  68               pla
0024FEr 2  95 00            sta $00,x
002500r 2  68               pla
002501r 2  95 01            sta $01,x
002503r 2               
002503r 2               ; <inline>:0:0 in `main`
002503r 2               @OPCODE_1187:   ; [c64_ir] PushLiteral(7777)
002503r 2  E8               inx
002504r 2  E8               inx
002505r 2  A9 61            lda #97
002507r 2  95 00            sta $00,x
002509r 2  A9 1E            lda #30
00250Br 2  95 01            sta $01,x
00250Dr 2               
00250Dr 2               ; <inline>:0:0 in `main`
00250Dr 2               @OPCODE_1188:   ; [c64_ir] AltPush
00250Dr 2  CA               dex
00250Er 2  CA               dex
00250Fr 2  B5 03            lda $03,x
002511r 2  48               pha
002512r 2  B5 02            lda $02,x
002514r 2  48               pha
002515r 2               
002515r 2               ; src/prelude.fth:3:10 in `swap`
002515r 2               @OPCODE_1189:   ; [c64_ir] AltPush
002515r 2  CA               dex
002516r 2  CA               dex
002517r 2  B5 03            lda $03,x
002519r 2  48               pha
00251Ar 2  B5 02            lda $02,x
00251Cr 2  48               pha
00251Dr 2               
00251Dr 2               ; src/prelude.fth:3:13 in `swap`
00251Dr 2               @OPCODE_1190:   ; [c64_ir] TempStore
00251Dr 2  CA               dex
00251Er 2  CA               dex
00251Fr 2  B5 03            lda $03,x
002521r 2  85 96            sta TEMP_PAX2
002523r 2  B5 02            lda $02,x
002525r 2  85 95            sta TEMP_PAX1
002527r 2               
002527r 2               ; src/prelude.fth:3:19 in `swap`
002527r 2               @OPCODE_1191:   ; [c64_ir] AltPop
002527r 2  E8               inx
002528r 2  E8               inx
002529r 2  68               pla
00252Ar 2  95 00            sta $00,x
00252Cr 2  68               pla
00252Dr 2  95 01            sta $01,x
00252Fr 2               
00252Fr 2               ; src/prelude.fth:3:22 in `swap`
00252Fr 2               @OPCODE_1192:   ; [c64_ir] TempLoad
00252Fr 2  E8               inx
002530r 2  E8               inx
002531r 2  A5 95            lda TEMP_PAX1
002533r 2  95 00            sta $00,x
002535r 2  A5 96            lda TEMP_PAX2
002537r 2  95 01            sta $01,x
002539r 2               
002539r 2               ; <inline>:0:0 in `main`
002539r 2               @OPCODE_1193:   ; [c64_ir] AltPop
002539r 2  E8               inx
00253Ar 2  E8               inx
00253Br 2  68               pla
00253Cr 2  95 00            sta $00,x
00253Er 2  68               pla
00253Fr 2  95 01            sta $01,x
002541r 2               
002541r 2               ; <inline>:0:0 in `main`
002541r 2               @OPCODE_1194:   ; [c64_ir] Drop
002541r 2  CA               dex
002542r 2  CA               dex
002543r 2               
002543r 2               ; <inline>:0:0 in `main`
002543r 2               @OPCODE_1195:   ; [c64_ir] AltPop
002543r 2  E8               inx
002544r 2  E8               inx
002545r 2  68               pla
002546r 2  95 00            sta $00,x
002548r 2  68               pla
002549r 2  95 01            sta $01,x
00254Br 2               
00254Br 2               ; <inline>:0:0 in `main`
00254Br 2               @OPCODE_1196:   ; [c64_ir] Drop
00254Br 2  CA               dex
00254Cr 2  CA               dex
00254Dr 2               
00254Dr 2               ; <inline>:0:0 in `main`
00254Dr 2               @OPCODE_1197:   ; [c64_ir] PushLiteral(7777)
00254Dr 2  E8               inx
00254Er 2  E8               inx
00254Fr 2  A9 61            lda #97
002551r 2  95 00            sta $00,x
002553r 2  A9 1E            lda #30
002555r 2  95 01            sta $01,x
002557r 2               
002557r 2               ; <inline>:0:0 in `main`
002557r 2               @OPCODE_1198:   ; [c64_ir] AltPush
002557r 2  CA               dex
002558r 2  CA               dex
002559r 2  B5 03            lda $03,x
00255Br 2  48               pha
00255Cr 2  B5 02            lda $02,x
00255Er 2  48               pha
00255Fr 2               
00255Fr 2               ; src/prelude.fth:5:10 in `rot`
00255Fr 2               @OPCODE_1199:   ; [c64_ir] AltPush
00255Fr 2  CA               dex
002560r 2  CA               dex
002561r 2  B5 03            lda $03,x
002563r 2  48               pha
002564r 2  B5 02            lda $02,x
002566r 2  48               pha
002567r 2               
002567r 2               ; <inline>:0:0 in `main`
002567r 2               @OPCODE_1200:   ; [c64_ir] PushLiteral(7777)
002567r 2  E8               inx
002568r 2  E8               inx
002569r 2  A9 61            lda #97
00256Br 2  95 00            sta $00,x
00256Dr 2  A9 1E            lda #30
00256Fr 2  95 01            sta $01,x
002571r 2               
002571r 2               ; <inline>:0:0 in `main`
002571r 2               @OPCODE_1201:   ; [c64_ir] AltPush
002571r 2  CA               dex
002572r 2  CA               dex
002573r 2  B5 03            lda $03,x
002575r 2  48               pha
002576r 2  B5 02            lda $02,x
002578r 2  48               pha
002579r 2               
002579r 2               ; src/prelude.fth:3:10 in `swap`
002579r 2               @OPCODE_1202:   ; [c64_ir] AltPush
002579r 2  CA               dex
00257Ar 2  CA               dex
00257Br 2  B5 03            lda $03,x
00257Dr 2  48               pha
00257Er 2  B5 02            lda $02,x
002580r 2  48               pha
002581r 2               
002581r 2               ; src/prelude.fth:3:13 in `swap`
002581r 2               @OPCODE_1203:   ; [c64_ir] TempStore
002581r 2  CA               dex
002582r 2  CA               dex
002583r 2  B5 03            lda $03,x
002585r 2  85 96            sta TEMP_PAX2
002587r 2  B5 02            lda $02,x
002589r 2  85 95            sta TEMP_PAX1
00258Br 2               
00258Br 2               ; src/prelude.fth:3:19 in `swap`
00258Br 2               @OPCODE_1204:   ; [c64_ir] AltPop
00258Br 2  E8               inx
00258Cr 2  E8               inx
00258Dr 2  68               pla
00258Er 2  95 00            sta $00,x
002590r 2  68               pla
002591r 2  95 01            sta $01,x
002593r 2               
002593r 2               ; src/prelude.fth:3:22 in `swap`
002593r 2               @OPCODE_1205:   ; [c64_ir] TempLoad
002593r 2  E8               inx
002594r 2  E8               inx
002595r 2  A5 95            lda TEMP_PAX1
002597r 2  95 00            sta $00,x
002599r 2  A5 96            lda TEMP_PAX2
00259Br 2  95 01            sta $01,x
00259Dr 2               
00259Dr 2               ; <inline>:0:0 in `main`
00259Dr 2               @OPCODE_1206:   ; [c64_ir] AltPop
00259Dr 2  E8               inx
00259Er 2  E8               inx
00259Fr 2  68               pla
0025A0r 2  95 00            sta $00,x
0025A2r 2  68               pla
0025A3r 2  95 01            sta $01,x
0025A5r 2               
0025A5r 2               ; <inline>:0:0 in `main`
0025A5r 2               @OPCODE_1207:   ; [c64_ir] Drop
0025A5r 2  CA               dex
0025A6r 2  CA               dex
0025A7r 2               
0025A7r 2               ; src/prelude.fth:5:18 in `rot`
0025A7r 2               @OPCODE_1208:   ; [c64_ir] AltPop
0025A7r 2  E8               inx
0025A8r 2  E8               inx
0025A9r 2  68               pla
0025AAr 2  95 00            sta $00,x
0025ACr 2  68               pla
0025ADr 2  95 01            sta $01,x
0025AFr 2               
0025AFr 2               ; <inline>:0:0 in `main`
0025AFr 2               @OPCODE_1209:   ; [c64_ir] PushLiteral(7777)
0025AFr 2  E8               inx
0025B0r 2  E8               inx
0025B1r 2  A9 61            lda #97
0025B3r 2  95 00            sta $00,x
0025B5r 2  A9 1E            lda #30
0025B7r 2  95 01            sta $01,x
0025B9r 2               
0025B9r 2               ; <inline>:0:0 in `main`
0025B9r 2               @OPCODE_1210:   ; [c64_ir] AltPush
0025B9r 2  CA               dex
0025BAr 2  CA               dex
0025BBr 2  B5 03            lda $03,x
0025BDr 2  48               pha
0025BEr 2  B5 02            lda $02,x
0025C0r 2  48               pha
0025C1r 2               
0025C1r 2               ; src/prelude.fth:3:10 in `swap`
0025C1r 2               @OPCODE_1211:   ; [c64_ir] AltPush
0025C1r 2  CA               dex
0025C2r 2  CA               dex
0025C3r 2  B5 03            lda $03,x
0025C5r 2  48               pha
0025C6r 2  B5 02            lda $02,x
0025C8r 2  48               pha
0025C9r 2               
0025C9r 2               ; src/prelude.fth:3:13 in `swap`
0025C9r 2               @OPCODE_1212:   ; [c64_ir] TempStore
0025C9r 2  CA               dex
0025CAr 2  CA               dex
0025CBr 2  B5 03            lda $03,x
0025CDr 2  85 96            sta TEMP_PAX2
0025CFr 2  B5 02            lda $02,x
0025D1r 2  85 95            sta TEMP_PAX1
0025D3r 2               
0025D3r 2               ; src/prelude.fth:3:19 in `swap`
0025D3r 2               @OPCODE_1213:   ; [c64_ir] AltPop
0025D3r 2  E8               inx
0025D4r 2  E8               inx
0025D5r 2  68               pla
0025D6r 2  95 00            sta $00,x
0025D8r 2  68               pla
0025D9r 2  95 01            sta $01,x
0025DBr 2               
0025DBr 2               ; src/prelude.fth:3:22 in `swap`
0025DBr 2               @OPCODE_1214:   ; [c64_ir] TempLoad
0025DBr 2  E8               inx
0025DCr 2  E8               inx
0025DDr 2  A5 95            lda TEMP_PAX1
0025DFr 2  95 00            sta $00,x
0025E1r 2  A5 96            lda TEMP_PAX2
0025E3r 2  95 01            sta $01,x
0025E5r 2               
0025E5r 2               ; <inline>:0:0 in `main`
0025E5r 2               @OPCODE_1215:   ; [c64_ir] AltPop
0025E5r 2  E8               inx
0025E6r 2  E8               inx
0025E7r 2  68               pla
0025E8r 2  95 00            sta $00,x
0025EAr 2  68               pla
0025EBr 2  95 01            sta $01,x
0025EDr 2               
0025EDr 2               ; <inline>:0:0 in `main`
0025EDr 2               @OPCODE_1216:   ; [c64_ir] Drop
0025EDr 2  CA               dex
0025EEr 2  CA               dex
0025EFr 2               
0025EFr 2               ; <inline>:0:0 in `main`
0025EFr 2               @OPCODE_1217:   ; [c64_ir] AltPop
0025EFr 2  E8               inx
0025F0r 2  E8               inx
0025F1r 2  68               pla
0025F2r 2  95 00            sta $00,x
0025F4r 2  68               pla
0025F5r 2  95 01            sta $01,x
0025F7r 2               
0025F7r 2               ; <inline>:0:0 in `main`
0025F7r 2               @OPCODE_1218:   ; [c64_ir] Drop
0025F7r 2  CA               dex
0025F8r 2  CA               dex
0025F9r 2               
0025F9r 2               ; <inline>:0:0 in `main`
0025F9r 2               @OPCODE_1219:   ; [c64_ir] PushLiteral(7777)
0025F9r 2  E8               inx
0025FAr 2  E8               inx
0025FBr 2  A9 61            lda #97
0025FDr 2  95 00            sta $00,x
0025FFr 2  A9 1E            lda #30
002601r 2  95 01            sta $01,x
002603r 2               
002603r 2               ; <inline>:0:0 in `main`
002603r 2               @OPCODE_1220:   ; [c64_ir] AltPush
002603r 2  CA               dex
002604r 2  CA               dex
002605r 2  B5 03            lda $03,x
002607r 2  48               pha
002608r 2  B5 02            lda $02,x
00260Ar 2  48               pha
00260Br 2               
00260Br 2               ; <inline>:0:0 in `main`
00260Br 2               @OPCODE_1221:   ; [c64_ir] PushLiteral(7777)
00260Br 2  E8               inx
00260Cr 2  E8               inx
00260Dr 2  A9 61            lda #97
00260Fr 2  95 00            sta $00,x
002611r 2  A9 1E            lda #30
002613r 2  95 01            sta $01,x
002615r 2               
002615r 2               ; <inline>:0:0 in `main`
002615r 2               @OPCODE_1222:   ; [c64_ir] AltPush
002615r 2  CA               dex
002616r 2  CA               dex
002617r 2  B5 03            lda $03,x
002619r 2  48               pha
00261Ar 2  B5 02            lda $02,x
00261Cr 2  48               pha
00261Dr 2               
00261Dr 2               ; snake.fth:48:34 in `convert-x-y`
00261Dr 2               @OPCODE_1223:   ; [c64_ir] PushLiteral(40)
00261Dr 2  E8               inx
00261Er 2  E8               inx
00261Fr 2  A9 28            lda #40
002621r 2  95 00            sta $00,x
002623r 2  A9 00            lda #0
002625r 2  95 01            sta $01,x
002627r 2               
002627r 2               ; <inline>:0:0 in `main`
002627r 2               @OPCODE_1224:   ; [c64_ir] PushLiteral(7777)
002627r 2  E8               inx
002628r 2  E8               inx
002629r 2  A9 61            lda #97
00262Br 2  95 00            sta $00,x
00262Dr 2  A9 1E            lda #30
00262Fr 2  95 01            sta $01,x
002631r 2               
002631r 2               ; <inline>:0:0 in `main`
002631r 2               @OPCODE_1225:   ; [c64_ir] AltPush
002631r 2  CA               dex
002632r 2  CA               dex
002633r 2  B5 03            lda $03,x
002635r 2  48               pha
002636r 2  B5 02            lda $02,x
002638r 2  48               pha
002639r 2               
002639r 2               ; src/prelude.fth:44:5 in `*`
002639r 2               @OPCODE_1226:   ; [c64_ir] AltPush
002639r 2  CA               dex
00263Ar 2  CA               dex
00263Br 2  B5 03            lda $03,x
00263Dr 2  48               pha
00263Er 2  B5 02            lda $02,x
002640r 2  48               pha
002641r 2               
002641r 2               ; src/prelude.fth:44:8 in `*`
002641r 2               @OPCODE_1227:   ; [c64_ir] PushLiteral(0)
002641r 2  E8               inx
002642r 2  E8               inx
002643r 2  A9 00            lda #0
002645r 2  95 00            sta $00,x
002647r 2  A9 00            lda #0
002649r 2  95 01            sta $01,x
00264Br 2               
00264Br 2               ; src/prelude.fth:44:10 in `*`
00264Br 2               @OPCODE_1228:   ; [c64_ir] AltPop
00264Br 2  E8               inx
00264Cr 2  E8               inx
00264Dr 2  68               pla
00264Er 2  95 00            sta $00,x
002650r 2  68               pla
002651r 2  95 01            sta $01,x
002653r 2               
002653r 2               ; src/prelude.fth:44:13 in `*`
002653r 2               @OPCODE_1229:   ; [c64_ir] PushLiteral(0)
002653r 2  E8               inx
002654r 2  E8               inx
002655r 2  A9 00            lda #0
002657r 2  95 00            sta $00,x
002659r 2  A9 00            lda #0
00265Br 2  95 01            sta $01,x
00265Dr 2               
00265Dr 2               ; src/prelude.fth:44:15 in `*`
00265Dr 2               @OPCODE_1230:   ; [c64_ir] AltPush
00265Dr 2  CA               dex
00265Er 2  CA               dex
00265Fr 2  B5 03            lda $03,x
002661r 2  48               pha
002662r 2  B5 02            lda $02,x
002664r 2  48               pha
002665r 2               
002665r 2               ; src/prelude.fth:44:15 in `*`
002665r 2               @OPCODE_1231:   ; [c64_ir] AltPush
002665r 2  CA               dex
002666r 2  CA               dex
002667r 2  B5 03            lda $03,x
002669r 2  48               pha
00266Ar 2  B5 02            lda $02,x
00266Cr 2  48               pha
00266Dr 2               
00266Dr 2               ; src/prelude.fth:44:15 in `*`
00266Dr 2               @OPCODE_1232:   ; [c64_ir] LoopTarget(45)
00266Dr 2               
00266Dr 2               @target_46:
00266Dr 2               
00266Dr 2               ; <inline>:0:0 in `main`
00266Dr 2               @OPCODE_1234:   ; [c64_ir] PushLiteral(7777)
00266Dr 2  E8               inx
00266Er 2  E8               inx
00266Fr 2  A9 61            lda #97
002671r 2  95 00            sta $00,x
002673r 2  A9 1E            lda #30
002675r 2  95 01            sta $01,x
002677r 2               
002677r 2               ; <inline>:0:0 in `main`
002677r 2               @OPCODE_1235:   ; [c64_ir] AltPush
002677r 2  CA               dex
002678r 2  CA               dex
002679r 2  B5 03            lda $03,x
00267Br 2  48               pha
00267Cr 2  B5 02            lda $02,x
00267Er 2  48               pha
00267Fr 2               
00267Fr 2               ; src/prelude.fth:4:10 in `over`
00267Fr 2               @OPCODE_1236:   ; [c64_ir] AltPush
00267Fr 2  CA               dex
002680r 2  CA               dex
002681r 2  B5 03            lda $03,x
002683r 2  48               pha
002684r 2  B5 02            lda $02,x
002686r 2  48               pha
002687r 2               
002687r 2               ; src/prelude.fth:4:13 in `over`
002687r 2               @OPCODE_1237:   ; [c64_ir] TempStore
002687r 2  CA               dex
002688r 2  CA               dex
002689r 2  B5 03            lda $03,x
00268Br 2  85 96            sta TEMP_PAX2
00268Dr 2  B5 02            lda $02,x
00268Fr 2  85 95            sta TEMP_PAX1
002691r 2               
002691r 2               ; src/prelude.fth:4:19 in `over`
002691r 2               @OPCODE_1238:   ; [c64_ir] TempLoad
002691r 2  E8               inx
002692r 2  E8               inx
002693r 2  A5 95            lda TEMP_PAX1
002695r 2  95 00            sta $00,x
002697r 2  A5 96            lda TEMP_PAX2
002699r 2  95 01            sta $01,x
00269Br 2               
00269Br 2               ; src/prelude.fth:4:25 in `over`
00269Br 2               @OPCODE_1239:   ; [c64_ir] AltPop
00269Br 2  E8               inx
00269Cr 2  E8               inx
00269Dr 2  68               pla
00269Er 2  95 00            sta $00,x
0026A0r 2  68               pla
0026A1r 2  95 01            sta $01,x
0026A3r 2               
0026A3r 2               ; src/prelude.fth:4:28 in `over`
0026A3r 2               @OPCODE_1240:   ; [c64_ir] TempLoad
0026A3r 2  E8               inx
0026A4r 2  E8               inx
0026A5r 2  A5 95            lda TEMP_PAX1
0026A7r 2  95 00            sta $00,x
0026A9r 2  A5 96            lda TEMP_PAX2
0026ABr 2  95 01            sta $01,x
0026ADr 2               
0026ADr 2               ; <inline>:0:0 in `main`
0026ADr 2               @OPCODE_1241:   ; [c64_ir] AltPop
0026ADr 2  E8               inx
0026AEr 2  E8               inx
0026AFr 2  68               pla
0026B0r 2  95 00            sta $00,x
0026B2r 2  68               pla
0026B3r 2  95 01            sta $01,x
0026B5r 2               
0026B5r 2               ; <inline>:0:0 in `main`
0026B5r 2               @OPCODE_1242:   ; [c64_ir] Drop
0026B5r 2  CA               dex
0026B6r 2  CA               dex
0026B7r 2               
0026B7r 2               ; src/prelude.fth:44:23 in `*`
0026B7r 2               @OPCODE_1243:   ; [c64_ir] Add
0026B7r 2                   ; 21
0026B7r 2  CA               dex
0026B8r 2  CA               dex
0026B9r 2  18               clc
0026BAr 2  B5 00            lda $00,x
0026BCr 2  75 02            adc $02,x
0026BEr 2  95 00            sta $00,x
0026C0r 2  B5 01            lda $01,x
0026C2r 2  75 03            adc $03,x
0026C4r 2  95 01            sta $01,x
0026C6r 2               
0026C6r 2               ; <inline>:0:0 in `main`
0026C6r 2               @OPCODE_1244:   ; [c64_ir] PushLiteral(7777)
0026C6r 2  E8               inx
0026C7r 2  E8               inx
0026C8r 2  A9 61            lda #97
0026CAr 2  95 00            sta $00,x
0026CCr 2  A9 1E            lda #30
0026CEr 2  95 01            sta $01,x
0026D0r 2               
0026D0r 2               ; <inline>:0:0 in `main`
0026D0r 2               @OPCODE_1245:   ; [c64_ir] AltPush
0026D0r 2  CA               dex
0026D1r 2  CA               dex
0026D2r 2  B5 03            lda $03,x
0026D4r 2  48               pha
0026D5r 2  B5 02            lda $02,x
0026D7r 2  48               pha
0026D8r 2               
0026D8r 2               ; src/prelude.fth:33:12 in `loopimpl`
0026D8r 2               @OPCODE_1246:   ; [c64_ir] AltPop
0026D8r 2  E8               inx
0026D9r 2  E8               inx
0026DAr 2  68               pla
0026DBr 2  95 00            sta $00,x
0026DDr 2  68               pla
0026DEr 2  95 01            sta $01,x
0026E0r 2               
0026E0r 2               ; src/prelude.fth:33:15 in `loopimpl`
0026E0r 2               @OPCODE_1247:   ; [c64_ir] AltPop
0026E0r 2  E8               inx
0026E1r 2  E8               inx
0026E2r 2  68               pla
0026E3r 2  95 00            sta $00,x
0026E5r 2  68               pla
0026E6r 2  95 01            sta $01,x
0026E8r 2               
0026E8r 2               ; src/prelude.fth:33:18 in `loopimpl`
0026E8r 2               @OPCODE_1248:   ; [c64_ir] AltPop
0026E8r 2  E8               inx
0026E9r 2  E8               inx
0026EAr 2  68               pla
0026EBr 2  95 00            sta $00,x
0026EDr 2  68               pla
0026EEr 2  95 01            sta $01,x
0026F0r 2               
0026F0r 2               ; <inline>:0:0 in `main`
0026F0r 2               @OPCODE_1249:   ; [c64_ir] PushLiteral(7777)
0026F0r 2  E8               inx
0026F1r 2  E8               inx
0026F2r 2  A9 61            lda #97
0026F4r 2  95 00            sta $00,x
0026F6r 2  A9 1E            lda #30
0026F8r 2  95 01            sta $01,x
0026FAr 2               
0026FAr 2               ; <inline>:0:0 in `main`
0026FAr 2               @OPCODE_1250:   ; [c64_ir] AltPush
0026FAr 2  CA               dex
0026FBr 2  CA               dex
0026FCr 2  B5 03            lda $03,x
0026FEr 2  48               pha
0026FFr 2  B5 02            lda $02,x
002701r 2  48               pha
002702r 2               
002702r 2               ; src/prelude.fth:18:8 in `1+`
002702r 2               @OPCODE_1251:   ; [c64_ir] PushLiteral(1)
002702r 2  E8               inx
002703r 2  E8               inx
002704r 2  A9 01            lda #1
002706r 2  95 00            sta $00,x
002708r 2  A9 00            lda #0
00270Ar 2  95 01            sta $01,x
00270Cr 2               
00270Cr 2               ; src/prelude.fth:18:10 in `1+`
00270Cr 2               @OPCODE_1252:   ; [c64_ir] Add
00270Cr 2                   ; 21
00270Cr 2  CA               dex
00270Dr 2  CA               dex
00270Er 2  18               clc
00270Fr 2  B5 00            lda $00,x
002711r 2  75 02            adc $02,x
002713r 2  95 00            sta $00,x
002715r 2  B5 01            lda $01,x
002717r 2  75 03            adc $03,x
002719r 2  95 01            sta $01,x
00271Br 2               
00271Br 2               ; <inline>:0:0 in `main`
00271Br 2               @OPCODE_1253:   ; [c64_ir] AltPop
00271Br 2  E8               inx
00271Cr 2  E8               inx
00271Dr 2  68               pla
00271Er 2  95 00            sta $00,x
002720r 2  68               pla
002721r 2  95 01            sta $01,x
002723r 2               
002723r 2               ; <inline>:0:0 in `main`
002723r 2               @OPCODE_1254:   ; [c64_ir] Drop
002723r 2  CA               dex
002724r 2  CA               dex
002725r 2               
002725r 2               ; <inline>:0:0 in `main`
002725r 2               @OPCODE_1255:   ; [c64_ir] PushLiteral(7777)
002725r 2  E8               inx
002726r 2  E8               inx
002727r 2  A9 61            lda #97
002729r 2  95 00            sta $00,x
00272Br 2  A9 1E            lda #30
00272Dr 2  95 01            sta $01,x
00272Fr 2               
00272Fr 2               ; <inline>:0:0 in `main`
00272Fr 2               @OPCODE_1256:   ; [c64_ir] AltPush
00272Fr 2  CA               dex
002730r 2  CA               dex
002731r 2  B5 03            lda $03,x
002733r 2  48               pha
002734r 2  B5 02            lda $02,x
002736r 2  48               pha
002737r 2               
002737r 2               ; <inline>:0:0 in `main`
002737r 2               @OPCODE_1257:   ; [c64_ir] PushLiteral(7777)
002737r 2  E8               inx
002738r 2  E8               inx
002739r 2  A9 61            lda #97
00273Br 2  95 00            sta $00,x
00273Dr 2  A9 1E            lda #30
00273Fr 2  95 01            sta $01,x
002741r 2               
002741r 2               ; <inline>:0:0 in `main`
002741r 2               @OPCODE_1258:   ; [c64_ir] AltPush
002741r 2  CA               dex
002742r 2  CA               dex
002743r 2  B5 03            lda $03,x
002745r 2  48               pha
002746r 2  B5 02            lda $02,x
002748r 2  48               pha
002749r 2               
002749r 2               ; src/prelude.fth:4:10 in `over`
002749r 2               @OPCODE_1259:   ; [c64_ir] AltPush
002749r 2  CA               dex
00274Ar 2  CA               dex
00274Br 2  B5 03            lda $03,x
00274Dr 2  48               pha
00274Er 2  B5 02            lda $02,x
002750r 2  48               pha
002751r 2               
002751r 2               ; src/prelude.fth:4:13 in `over`
002751r 2               @OPCODE_1260:   ; [c64_ir] TempStore
002751r 2  CA               dex
002752r 2  CA               dex
002753r 2  B5 03            lda $03,x
002755r 2  85 96            sta TEMP_PAX2
002757r 2  B5 02            lda $02,x
002759r 2  85 95            sta TEMP_PAX1
00275Br 2               
00275Br 2               ; src/prelude.fth:4:19 in `over`
00275Br 2               @OPCODE_1261:   ; [c64_ir] TempLoad
00275Br 2  E8               inx
00275Cr 2  E8               inx
00275Dr 2  A5 95            lda TEMP_PAX1
00275Fr 2  95 00            sta $00,x
002761r 2  A5 96            lda TEMP_PAX2
002763r 2  95 01            sta $01,x
002765r 2               
002765r 2               ; src/prelude.fth:4:25 in `over`
002765r 2               @OPCODE_1262:   ; [c64_ir] AltPop
002765r 2  E8               inx
002766r 2  E8               inx
002767r 2  68               pla
002768r 2  95 00            sta $00,x
00276Ar 2  68               pla
00276Br 2  95 01            sta $01,x
00276Dr 2               
00276Dr 2               ; src/prelude.fth:4:28 in `over`
00276Dr 2               @OPCODE_1263:   ; [c64_ir] TempLoad
00276Dr 2  E8               inx
00276Er 2  E8               inx
00276Fr 2  A5 95            lda TEMP_PAX1
002771r 2  95 00            sta $00,x
002773r 2  A5 96            lda TEMP_PAX2
002775r 2  95 01            sta $01,x
002777r 2               
002777r 2               ; <inline>:0:0 in `main`
002777r 2               @OPCODE_1264:   ; [c64_ir] AltPop
002777r 2  E8               inx
002778r 2  E8               inx
002779r 2  68               pla
00277Ar 2  95 00            sta $00,x
00277Cr 2  68               pla
00277Dr 2  95 01            sta $01,x
00277Fr 2               
00277Fr 2               ; <inline>:0:0 in `main`
00277Fr 2               @OPCODE_1265:   ; [c64_ir] Drop
00277Fr 2  CA               dex
002780r 2  CA               dex
002781r 2               
002781r 2               ; <inline>:0:0 in `main`
002781r 2               @OPCODE_1266:   ; [c64_ir] PushLiteral(7777)
002781r 2  E8               inx
002782r 2  E8               inx
002783r 2  A9 61            lda #97
002785r 2  95 00            sta $00,x
002787r 2  A9 1E            lda #30
002789r 2  95 01            sta $01,x
00278Br 2               
00278Br 2               ; <inline>:0:0 in `main`
00278Br 2               @OPCODE_1267:   ; [c64_ir] AltPush
00278Br 2  CA               dex
00278Cr 2  CA               dex
00278Dr 2  B5 03            lda $03,x
00278Fr 2  48               pha
002790r 2  B5 02            lda $02,x
002792r 2  48               pha
002793r 2               
002793r 2               ; src/prelude.fth:4:10 in `over`
002793r 2               @OPCODE_1268:   ; [c64_ir] AltPush
002793r 2  CA               dex
002794r 2  CA               dex
002795r 2  B5 03            lda $03,x
002797r 2  48               pha
002798r 2  B5 02            lda $02,x
00279Ar 2  48               pha
00279Br 2               
00279Br 2               ; src/prelude.fth:4:13 in `over`
00279Br 2               @OPCODE_1269:   ; [c64_ir] TempStore
00279Br 2  CA               dex
00279Cr 2  CA               dex
00279Dr 2  B5 03            lda $03,x
00279Fr 2  85 96            sta TEMP_PAX2
0027A1r 2  B5 02            lda $02,x
0027A3r 2  85 95            sta TEMP_PAX1
0027A5r 2               
0027A5r 2               ; src/prelude.fth:4:19 in `over`
0027A5r 2               @OPCODE_1270:   ; [c64_ir] TempLoad
0027A5r 2  E8               inx
0027A6r 2  E8               inx
0027A7r 2  A5 95            lda TEMP_PAX1
0027A9r 2  95 00            sta $00,x
0027ABr 2  A5 96            lda TEMP_PAX2
0027ADr 2  95 01            sta $01,x
0027AFr 2               
0027AFr 2               ; src/prelude.fth:4:25 in `over`
0027AFr 2               @OPCODE_1271:   ; [c64_ir] AltPop
0027AFr 2  E8               inx
0027B0r 2  E8               inx
0027B1r 2  68               pla
0027B2r 2  95 00            sta $00,x
0027B4r 2  68               pla
0027B5r 2  95 01            sta $01,x
0027B7r 2               
0027B7r 2               ; src/prelude.fth:4:28 in `over`
0027B7r 2               @OPCODE_1272:   ; [c64_ir] TempLoad
0027B7r 2  E8               inx
0027B8r 2  E8               inx
0027B9r 2  A5 95            lda TEMP_PAX1
0027BBr 2  95 00            sta $00,x
0027BDr 2  A5 96            lda TEMP_PAX2
0027BFr 2  95 01            sta $01,x
0027C1r 2               
0027C1r 2               ; <inline>:0:0 in `main`
0027C1r 2               @OPCODE_1273:   ; [c64_ir] AltPop
0027C1r 2  E8               inx
0027C2r 2  E8               inx
0027C3r 2  68               pla
0027C4r 2  95 00            sta $00,x
0027C6r 2  68               pla
0027C7r 2  95 01            sta $01,x
0027C9r 2               
0027C9r 2               ; <inline>:0:0 in `main`
0027C9r 2               @OPCODE_1274:   ; [c64_ir] Drop
0027C9r 2  CA               dex
0027CAr 2  CA               dex
0027CBr 2               
0027CBr 2               ; <inline>:0:0 in `main`
0027CBr 2               @OPCODE_1275:   ; [c64_ir] AltPop
0027CBr 2  E8               inx
0027CCr 2  E8               inx
0027CDr 2  68               pla
0027CEr 2  95 00            sta $00,x
0027D0r 2  68               pla
0027D1r 2  95 01            sta $01,x
0027D3r 2               
0027D3r 2               ; <inline>:0:0 in `main`
0027D3r 2               @OPCODE_1276:   ; [c64_ir] Drop
0027D3r 2  CA               dex
0027D4r 2  CA               dex
0027D5r 2               
0027D5r 2               ; src/prelude.fth:33:29 in `loopimpl`
0027D5r 2               @OPCODE_1277:   ; [c64_ir] AltPush
0027D5r 2  CA               dex
0027D6r 2  CA               dex
0027D7r 2  B5 03            lda $03,x
0027D9r 2  48               pha
0027DAr 2  B5 02            lda $02,x
0027DCr 2  48               pha
0027DDr 2               
0027DDr 2               ; src/prelude.fth:33:32 in `loopimpl`
0027DDr 2               @OPCODE_1278:   ; [c64_ir] AltPush
0027DDr 2  CA               dex
0027DEr 2  CA               dex
0027DFr 2  B5 03            lda $03,x
0027E1r 2  48               pha
0027E2r 2  B5 02            lda $02,x
0027E4r 2  48               pha
0027E5r 2               
0027E5r 2               ; <inline>:0:0 in `main`
0027E5r 2               @OPCODE_1279:   ; [c64_ir] PushLiteral(7777)
0027E5r 2  E8               inx
0027E6r 2  E8               inx
0027E7r 2  A9 61            lda #97
0027E9r 2  95 00            sta $00,x
0027EBr 2  A9 1E            lda #30
0027EDr 2  95 01            sta $01,x
0027EFr 2               
0027EFr 2               ; <inline>:0:0 in `main`
0027EFr 2               @OPCODE_1280:   ; [c64_ir] AltPush
0027EFr 2  CA               dex
0027F0r 2  CA               dex
0027F1r 2  B5 03            lda $03,x
0027F3r 2  48               pha
0027F4r 2  B5 02            lda $02,x
0027F6r 2  48               pha
0027F7r 2               
0027F7r 2               ; <inline>:0:0 in `main`
0027F7r 2               @OPCODE_1281:   ; [c64_ir] PushLiteral(7777)
0027F7r 2  E8               inx
0027F8r 2  E8               inx
0027F9r 2  A9 61            lda #97
0027FBr 2  95 00            sta $00,x
0027FDr 2  A9 1E            lda #30
0027FFr 2  95 01            sta $01,x
002801r 2               
002801r 2               ; <inline>:0:0 in `main`
002801r 2               @OPCODE_1282:   ; [c64_ir] AltPush
002801r 2  CA               dex
002802r 2  CA               dex
002803r 2  B5 03            lda $03,x
002805r 2  48               pha
002806r 2  B5 02            lda $02,x
002808r 2  48               pha
002809r 2               
002809r 2               ; <inline>:0:0 in `main`
002809r 2               @OPCODE_1283:   ; [c64_ir] PushLiteral(7777)
002809r 2  E8               inx
00280Ar 2  E8               inx
00280Br 2  A9 61            lda #97
00280Dr 2  95 00            sta $00,x
00280Fr 2  A9 1E            lda #30
002811r 2  95 01            sta $01,x
002813r 2               
002813r 2               ; <inline>:0:0 in `main`
002813r 2               @OPCODE_1284:   ; [c64_ir] AltPush
002813r 2  CA               dex
002814r 2  CA               dex
002815r 2  B5 03            lda $03,x
002817r 2  48               pha
002818r 2  B5 02            lda $02,x
00281Ar 2  48               pha
00281Br 2               
00281Br 2               ; <inline>:0:0 in `main`
00281Br 2               @OPCODE_1285:   ; [c64_ir] PushLiteral(7777)
00281Br 2  E8               inx
00281Cr 2  E8               inx
00281Dr 2  A9 61            lda #97
00281Fr 2  95 00            sta $00,x
002821r 2  A9 1E            lda #30
002823r 2  95 01            sta $01,x
002825r 2               
002825r 2               ; <inline>:0:0 in `main`
002825r 2               @OPCODE_1286:   ; [c64_ir] AltPush
002825r 2  CA               dex
002826r 2  CA               dex
002827r 2  B5 03            lda $03,x
002829r 2  48               pha
00282Ar 2  B5 02            lda $02,x
00282Cr 2  48               pha
00282Dr 2               
00282Dr 2               ; src/prelude.fth:14:12 in `invert`
00282Dr 2               @OPCODE_1287:   ; [c64_ir] PushLiteral(-1)
00282Dr 2  E8               inx
00282Er 2  E8               inx
00282Fr 2  A9 FF            lda #255
002831r 2  95 00            sta $00,x
002833r 2  A9 FF            lda #255
002835r 2  95 01            sta $01,x
002837r 2               
002837r 2               ; src/prelude.fth:14:15 in `invert`
002837r 2               @OPCODE_1288:   ; [c64_ir] Nand
002837r 2                   ; 26
002837r 2  CA               dex
002838r 2  CA               dex
002839r 2  B5 00            lda $00,x
00283Br 2  35 02            and $02,x
00283Dr 2  49 FF            eor #$ff
00283Fr 2  95 00            sta $00,x
002841r 2  B5 01            lda $01,x
002843r 2  35 03            and $03,x
002845r 2  49 FF            eor #$ff
002847r 2  95 01            sta $01,x
002849r 2               
002849r 2               ; <inline>:0:0 in `main`
002849r 2               @OPCODE_1289:   ; [c64_ir] AltPop
002849r 2  E8               inx
00284Ar 2  E8               inx
00284Br 2  68               pla
00284Cr 2  95 00            sta $00,x
00284Er 2  68               pla
00284Fr 2  95 01            sta $01,x
002851r 2               
002851r 2               ; <inline>:0:0 in `main`
002851r 2               @OPCODE_1290:   ; [c64_ir] Drop
002851r 2  CA               dex
002852r 2  CA               dex
002853r 2               
002853r 2               ; src/prelude.fth:15:19 in `negate`
002853r 2               @OPCODE_1291:   ; [c64_ir] PushLiteral(1)
002853r 2  E8               inx
002854r 2  E8               inx
002855r 2  A9 01            lda #1
002857r 2  95 00            sta $00,x
002859r 2  A9 00            lda #0
00285Br 2  95 01            sta $01,x
00285Dr 2               
00285Dr 2               ; src/prelude.fth:15:21 in `negate`
00285Dr 2               @OPCODE_1292:   ; [c64_ir] Add
00285Dr 2                   ; 21
00285Dr 2  CA               dex
00285Er 2  CA               dex
00285Fr 2  18               clc
002860r 2  B5 00            lda $00,x
002862r 2  75 02            adc $02,x
002864r 2  95 00            sta $00,x
002866r 2  B5 01            lda $01,x
002868r 2  75 03            adc $03,x
00286Ar 2  95 01            sta $01,x
00286Cr 2               
00286Cr 2               ; <inline>:0:0 in `main`
00286Cr 2               @OPCODE_1293:   ; [c64_ir] AltPop
00286Cr 2  E8               inx
00286Dr 2  E8               inx
00286Er 2  68               pla
00286Fr 2  95 00            sta $00,x
002871r 2  68               pla
002872r 2  95 01            sta $01,x
002874r 2               
002874r 2               ; <inline>:0:0 in `main`
002874r 2               @OPCODE_1294:   ; [c64_ir] Drop
002874r 2  CA               dex
002875r 2  CA               dex
002876r 2               
002876r 2               ; src/prelude.fth:16:19 in `-`
002876r 2               @OPCODE_1295:   ; [c64_ir] Add
002876r 2                   ; 21
002876r 2  CA               dex
002877r 2  CA               dex
002878r 2  18               clc
002879r 2  B5 00            lda $00,x
00287Br 2  75 02            adc $02,x
00287Dr 2  95 00            sta $00,x
00287Fr 2  B5 01            lda $01,x
002881r 2  75 03            adc $03,x
002883r 2  95 01            sta $01,x
002885r 2               
002885r 2               ; <inline>:0:0 in `main`
002885r 2               @OPCODE_1296:   ; [c64_ir] AltPop
002885r 2  E8               inx
002886r 2  E8               inx
002887r 2  68               pla
002888r 2  95 00            sta $00,x
00288Ar 2  68               pla
00288Br 2  95 01            sta $01,x
00288Dr 2               
00288Dr 2               ; <inline>:0:0 in `main`
00288Dr 2               @OPCODE_1297:   ; [c64_ir] Drop
00288Dr 2  CA               dex
00288Er 2  CA               dex
00288Fr 2               
00288Fr 2               ; <inline>:0:0 in `main`
00288Fr 2               @OPCODE_1298:   ; [c64_ir] PushLiteral(7777)
00288Fr 2  E8               inx
002890r 2  E8               inx
002891r 2  A9 61            lda #97
002893r 2  95 00            sta $00,x
002895r 2  A9 1E            lda #30
002897r 2  95 01            sta $01,x
002899r 2               
002899r 2               ; <inline>:0:0 in `main`
002899r 2               @OPCODE_1299:   ; [c64_ir] AltPush
002899r 2  CA               dex
00289Ar 2  CA               dex
00289Br 2  B5 03            lda $03,x
00289Dr 2  48               pha
00289Er 2  B5 02            lda $02,x
0028A0r 2  48               pha
0028A1r 2               
0028A1r 2               ; src/prelude.fth:21:8 in `0=`
0028A1r 2               @OPCODE_1300:   ; [c64_ir] JumpIf0(48)
0028A1r 2  CA               dex
0028A2r 2  CA               dex
0028A3r 2  B5 02            lda $02,x
0028A5r 2  15 03            ora $03,x
0028A7r 2  D0 03            bne *+5
0028A9r 2  4C rr rr         jmp @target_48
0028ACr 2               
0028ACr 2               @target_47:
0028ACr 2               
0028ACr 2               ; src/prelude.fth:21:11 in `0=`
0028ACr 2               @OPCODE_1302:   ; [c64_ir] PushLiteral(0)
0028ACr 2  E8               inx
0028ADr 2  E8               inx
0028AEr 2  A9 00            lda #0
0028B0r 2  95 00            sta $00,x
0028B2r 2  A9 00            lda #0
0028B4r 2  95 01            sta $01,x
0028B6r 2               
0028B6r 2               ; src/prelude.fth:21:13 in `0=`
0028B6r 2               @OPCODE_1303:   ; [c64_ir] JumpElse(49)
0028B6r 2  4C rr rr         jmp @target_49
0028B9r 2               
0028B9r 2               @target_48:
0028B9r 2               
0028B9r 2               ; src/prelude.fth:21:18 in `0=`
0028B9r 2               @OPCODE_1305:   ; [c64_ir] PushLiteral(-1)
0028B9r 2  E8               inx
0028BAr 2  E8               inx
0028BBr 2  A9 FF            lda #255
0028BDr 2  95 00            sta $00,x
0028BFr 2  A9 FF            lda #255
0028C1r 2  95 01            sta $01,x
0028C3r 2               
0028C3r 2               ; src/prelude.fth:21:21 in `0=`
0028C3r 2               @OPCODE_1306:   ; [c64_ir] JumpTarget(48)
0028C3r 2               
0028C3r 2               @target_49:
0028C3r 2               
0028C3r 2               ; <inline>:0:0 in `main`
0028C3r 2               @OPCODE_1308:   ; [c64_ir] AltPop
0028C3r 2  E8               inx
0028C4r 2  E8               inx
0028C5r 2  68               pla
0028C6r 2  95 00            sta $00,x
0028C8r 2  68               pla
0028C9r 2  95 01            sta $01,x
0028CBr 2               
0028CBr 2               ; <inline>:0:0 in `main`
0028CBr 2               @OPCODE_1309:   ; [c64_ir] Drop
0028CBr 2  CA               dex
0028CCr 2  CA               dex
0028CDr 2               
0028CDr 2               ; <inline>:0:0 in `main`
0028CDr 2               @OPCODE_1310:   ; [c64_ir] AltPop
0028CDr 2  E8               inx
0028CEr 2  E8               inx
0028CFr 2  68               pla
0028D0r 2  95 00            sta $00,x
0028D2r 2  68               pla
0028D3r 2  95 01            sta $01,x
0028D5r 2               
0028D5r 2               ; <inline>:0:0 in `main`
0028D5r 2               @OPCODE_1311:   ; [c64_ir] Drop
0028D5r 2  CA               dex
0028D6r 2  CA               dex
0028D7r 2               
0028D7r 2               ; <inline>:0:0 in `main`
0028D7r 2               @OPCODE_1312:   ; [c64_ir] PushLiteral(7777)
0028D7r 2  E8               inx
0028D8r 2  E8               inx
0028D9r 2  A9 61            lda #97
0028DBr 2  95 00            sta $00,x
0028DDr 2  A9 1E            lda #30
0028DFr 2  95 01            sta $01,x
0028E1r 2               
0028E1r 2               ; <inline>:0:0 in `main`
0028E1r 2               @OPCODE_1313:   ; [c64_ir] AltPush
0028E1r 2  CA               dex
0028E2r 2  CA               dex
0028E3r 2  B5 03            lda $03,x
0028E5r 2  48               pha
0028E6r 2  B5 02            lda $02,x
0028E8r 2  48               pha
0028E9r 2               
0028E9r 2               ; src/prelude.fth:3:10 in `swap`
0028E9r 2               @OPCODE_1314:   ; [c64_ir] AltPush
0028E9r 2  CA               dex
0028EAr 2  CA               dex
0028EBr 2  B5 03            lda $03,x
0028EDr 2  48               pha
0028EEr 2  B5 02            lda $02,x
0028F0r 2  48               pha
0028F1r 2               
0028F1r 2               ; src/prelude.fth:3:13 in `swap`
0028F1r 2               @OPCODE_1315:   ; [c64_ir] TempStore
0028F1r 2  CA               dex
0028F2r 2  CA               dex
0028F3r 2  B5 03            lda $03,x
0028F5r 2  85 96            sta TEMP_PAX2
0028F7r 2  B5 02            lda $02,x
0028F9r 2  85 95            sta TEMP_PAX1
0028FBr 2               
0028FBr 2               ; src/prelude.fth:3:19 in `swap`
0028FBr 2               @OPCODE_1316:   ; [c64_ir] AltPop
0028FBr 2  E8               inx
0028FCr 2  E8               inx
0028FDr 2  68               pla
0028FEr 2  95 00            sta $00,x
002900r 2  68               pla
002901r 2  95 01            sta $01,x
002903r 2               
002903r 2               ; src/prelude.fth:3:22 in `swap`
002903r 2               @OPCODE_1317:   ; [c64_ir] TempLoad
002903r 2  E8               inx
002904r 2  E8               inx
002905r 2  A5 95            lda TEMP_PAX1
002907r 2  95 00            sta $00,x
002909r 2  A5 96            lda TEMP_PAX2
00290Br 2  95 01            sta $01,x
00290Dr 2               
00290Dr 2               ; <inline>:0:0 in `main`
00290Dr 2               @OPCODE_1318:   ; [c64_ir] AltPop
00290Dr 2  E8               inx
00290Er 2  E8               inx
00290Fr 2  68               pla
002910r 2  95 00            sta $00,x
002912r 2  68               pla
002913r 2  95 01            sta $01,x
002915r 2               
002915r 2               ; <inline>:0:0 in `main`
002915r 2               @OPCODE_1319:   ; [c64_ir] Drop
002915r 2  CA               dex
002916r 2  CA               dex
002917r 2               
002917r 2               ; src/prelude.fth:33:42 in `loopimpl`
002917r 2               @OPCODE_1320:   ; [c64_ir] AltPush
002917r 2  CA               dex
002918r 2  CA               dex
002919r 2  B5 03            lda $03,x
00291Br 2  48               pha
00291Cr 2  B5 02            lda $02,x
00291Er 2  48               pha
00291Fr 2               
00291Fr 2               ; <inline>:0:0 in `main`
00291Fr 2               @OPCODE_1321:   ; [c64_ir] AltPop
00291Fr 2  E8               inx
002920r 2  E8               inx
002921r 2  68               pla
002922r 2  95 00            sta $00,x
002924r 2  68               pla
002925r 2  95 01            sta $01,x
002927r 2               
002927r 2               ; <inline>:0:0 in `main`
002927r 2               @OPCODE_1322:   ; [c64_ir] Drop
002927r 2  CA               dex
002928r 2  CA               dex
002929r 2               
002929r 2               ; src/prelude.fth:44:25 in `*`
002929r 2               @OPCODE_1323:   ; [c64_ir] LoopIf0(46)
002929r 2  CA               dex
00292Ar 2  CA               dex
00292Br 2  B5 02            lda $02,x
00292Dr 2  15 03            ora $03,x
00292Fr 2  D0 03            bne *+5
002931r 2  4C rr rr         jmp @target_46
002934r 2               
002934r 2               @target_50:
002934r 2               
002934r 2               ; src/prelude.fth:44:25 in `*`
002934r 2               @OPCODE_1325:   ; [c64_ir] AltPop
002934r 2  E8               inx
002935r 2  E8               inx
002936r 2  68               pla
002937r 2  95 00            sta $00,x
002939r 2  68               pla
00293Ar 2  95 01            sta $01,x
00293Cr 2               
00293Cr 2               ; src/prelude.fth:44:25 in `*`
00293Cr 2               @OPCODE_1326:   ; [c64_ir] Drop
00293Cr 2  CA               dex
00293Dr 2  CA               dex
00293Er 2               
00293Er 2               ; src/prelude.fth:44:25 in `*`
00293Er 2               @OPCODE_1327:   ; [c64_ir] AltPop
00293Er 2  E8               inx
00293Fr 2  E8               inx
002940r 2  68               pla
002941r 2  95 00            sta $00,x
002943r 2  68               pla
002944r 2  95 01            sta $01,x
002946r 2               
002946r 2               ; src/prelude.fth:44:25 in `*`
002946r 2               @OPCODE_1328:   ; [c64_ir] Drop
002946r 2  CA               dex
002947r 2  CA               dex
002948r 2               
002948r 2               ; <inline>:0:0 in `main`
002948r 2               @OPCODE_1329:   ; [c64_ir] PushLiteral(7777)
002948r 2  E8               inx
002949r 2  E8               inx
00294Ar 2  A9 61            lda #97
00294Cr 2  95 00            sta $00,x
00294Er 2  A9 1E            lda #30
002950r 2  95 01            sta $01,x
002952r 2               
002952r 2               ; <inline>:0:0 in `main`
002952r 2               @OPCODE_1330:   ; [c64_ir] AltPush
002952r 2  CA               dex
002953r 2  CA               dex
002954r 2  B5 03            lda $03,x
002956r 2  48               pha
002957r 2  B5 02            lda $02,x
002959r 2  48               pha
00295Ar 2               
00295Ar 2               ; src/prelude.fth:3:10 in `swap`
00295Ar 2               @OPCODE_1331:   ; [c64_ir] AltPush
00295Ar 2  CA               dex
00295Br 2  CA               dex
00295Cr 2  B5 03            lda $03,x
00295Er 2  48               pha
00295Fr 2  B5 02            lda $02,x
002961r 2  48               pha
002962r 2               
002962r 2               ; src/prelude.fth:3:13 in `swap`
002962r 2               @OPCODE_1332:   ; [c64_ir] TempStore
002962r 2  CA               dex
002963r 2  CA               dex
002964r 2  B5 03            lda $03,x
002966r 2  85 96            sta TEMP_PAX2
002968r 2  B5 02            lda $02,x
00296Ar 2  85 95            sta TEMP_PAX1
00296Cr 2               
00296Cr 2               ; src/prelude.fth:3:19 in `swap`
00296Cr 2               @OPCODE_1333:   ; [c64_ir] AltPop
00296Cr 2  E8               inx
00296Dr 2  E8               inx
00296Er 2  68               pla
00296Fr 2  95 00            sta $00,x
002971r 2  68               pla
002972r 2  95 01            sta $01,x
002974r 2               
002974r 2               ; src/prelude.fth:3:22 in `swap`
002974r 2               @OPCODE_1334:   ; [c64_ir] TempLoad
002974r 2  E8               inx
002975r 2  E8               inx
002976r 2  A5 95            lda TEMP_PAX1
002978r 2  95 00            sta $00,x
00297Ar 2  A5 96            lda TEMP_PAX2
00297Cr 2  95 01            sta $01,x
00297Er 2               
00297Er 2               ; <inline>:0:0 in `main`
00297Er 2               @OPCODE_1335:   ; [c64_ir] AltPop
00297Er 2  E8               inx
00297Fr 2  E8               inx
002980r 2  68               pla
002981r 2  95 00            sta $00,x
002983r 2  68               pla
002984r 2  95 01            sta $01,x
002986r 2               
002986r 2               ; <inline>:0:0 in `main`
002986r 2               @OPCODE_1336:   ; [c64_ir] Drop
002986r 2  CA               dex
002987r 2  CA               dex
002988r 2               
002988r 2               ; src/prelude.fth:44:35 in `*`
002988r 2               @OPCODE_1337:   ; [c64_ir] Drop
002988r 2  CA               dex
002989r 2  CA               dex
00298Ar 2               
00298Ar 2               ; <inline>:0:0 in `main`
00298Ar 2               @OPCODE_1338:   ; [c64_ir] AltPop
00298Ar 2  E8               inx
00298Br 2  E8               inx
00298Cr 2  68               pla
00298Dr 2  95 00            sta $00,x
00298Fr 2  68               pla
002990r 2  95 01            sta $01,x
002992r 2               
002992r 2               ; <inline>:0:0 in `main`
002992r 2               @OPCODE_1339:   ; [c64_ir] Drop
002992r 2  CA               dex
002993r 2  CA               dex
002994r 2               
002994r 2               ; snake.fth:48:39 in `convert-x-y`
002994r 2               @OPCODE_1340:   ; [c64_ir] Add
002994r 2                   ; 21
002994r 2  CA               dex
002995r 2  CA               dex
002996r 2  18               clc
002997r 2  B5 00            lda $00,x
002999r 2  75 02            adc $02,x
00299Br 2  95 00            sta $00,x
00299Dr 2  B5 01            lda $01,x
00299Fr 2  75 03            adc $03,x
0029A1r 2  95 01            sta $01,x
0029A3r 2               
0029A3r 2               ; <inline>:0:0 in `main`
0029A3r 2               @OPCODE_1341:   ; [c64_ir] AltPop
0029A3r 2  E8               inx
0029A4r 2  E8               inx
0029A5r 2  68               pla
0029A6r 2  95 00            sta $00,x
0029A8r 2  68               pla
0029A9r 2  95 01            sta $01,x
0029ABr 2               
0029ABr 2               ; <inline>:0:0 in `main`
0029ABr 2               @OPCODE_1342:   ; [c64_ir] Drop
0029ABr 2  CA               dex
0029ACr 2  CA               dex
0029ADr 2               
0029ADr 2               ; <inline>:0:0 in `main`
0029ADr 2               @OPCODE_1343:   ; [c64_ir] PushLiteral(7777)
0029ADr 2  E8               inx
0029AEr 2  E8               inx
0029AFr 2  A9 61            lda #97
0029B1r 2  95 00            sta $00,x
0029B3r 2  A9 1E            lda #30
0029B5r 2  95 01            sta $01,x
0029B7r 2               
0029B7r 2               ; <inline>:0:0 in `main`
0029B7r 2               @OPCODE_1344:   ; [c64_ir] AltPush
0029B7r 2  CA               dex
0029B8r 2  CA               dex
0029B9r 2  B5 03            lda $03,x
0029BBr 2  48               pha
0029BCr 2  B5 02            lda $02,x
0029BEr 2  48               pha
0029BFr 2               
0029BFr 2               ; snake.fth:49:34 in `draw-index`
0029BFr 2               @OPCODE_1345:   ; [c64_ir] PushLiteral(1024)
0029BFr 2  E8               inx
0029C0r 2  E8               inx
0029C1r 2  A9 00            lda #0
0029C3r 2  95 00            sta $00,x
0029C5r 2  A9 04            lda #4
0029C7r 2  95 01            sta $01,x
0029C9r 2               
0029C9r 2               ; snake.fth:49:43 in `draw-index`
0029C9r 2               @OPCODE_1346:   ; [c64_ir] Add
0029C9r 2                   ; 21
0029C9r 2  CA               dex
0029CAr 2  CA               dex
0029CBr 2  18               clc
0029CCr 2  B5 00            lda $00,x
0029CEr 2  75 02            adc $02,x
0029D0r 2  95 00            sta $00,x
0029D2r 2  B5 01            lda $01,x
0029D4r 2  75 03            adc $03,x
0029D6r 2  95 01            sta $01,x
0029D8r 2               
0029D8r 2               ; snake.fth:49:45 in `draw-index`
0029D8r 2               @OPCODE_1347:   ; [c64_ir] Store8
0029D8r 2  CA               dex
0029D9r 2  CA               dex
0029DAr 2  CA               dex
0029DBr 2  CA               dex
0029DCr 2  B5 02            lda $02,x
0029DEr 2  81 04            sta ($04,x)
0029E0r 2                   ; TODO high byte
0029E0r 2               
0029E0r 2               ; <inline>:0:0 in `main`
0029E0r 2               @OPCODE_1348:   ; [c64_ir] AltPop
0029E0r 2  E8               inx
0029E1r 2  E8               inx
0029E2r 2  68               pla
0029E3r 2  95 00            sta $00,x
0029E5r 2  68               pla
0029E6r 2  95 01            sta $01,x
0029E8r 2               
0029E8r 2               ; <inline>:0:0 in `main`
0029E8r 2               @OPCODE_1349:   ; [c64_ir] Drop
0029E8r 2  CA               dex
0029E9r 2  CA               dex
0029EAr 2               
0029EAr 2               ; <inline>:0:0 in `main`
0029EAr 2               @OPCODE_1350:   ; [c64_ir] AltPop
0029EAr 2  E8               inx
0029EBr 2  E8               inx
0029ECr 2  68               pla
0029EDr 2  95 00            sta $00,x
0029EFr 2  68               pla
0029F0r 2  95 01            sta $01,x
0029F2r 2               
0029F2r 2               ; <inline>:0:0 in `main`
0029F2r 2               @OPCODE_1351:   ; [c64_ir] Drop
0029F2r 2  CA               dex
0029F3r 2  CA               dex
0029F4r 2               
0029F4r 2               ; <inline>:0:0 in `main`
0029F4r 2               @OPCODE_1352:   ; [c64_ir] AltPop
0029F4r 2  E8               inx
0029F5r 2  E8               inx
0029F6r 2  68               pla
0029F7r 2  95 00            sta $00,x
0029F9r 2  68               pla
0029FAr 2  95 01            sta $01,x
0029FCr 2               
0029FCr 2               ; <inline>:0:0 in `main`
0029FCr 2               @OPCODE_1353:   ; [c64_ir] Drop
0029FCr 2  CA               dex
0029FDr 2  CA               dex
0029FEr 2               
0029FEr 2               ; <inline>:0:0 in `main`
0029FEr 2               @OPCODE_1354:   ; [c64_ir] PushLiteral(7777)
0029FEr 2  E8               inx
0029FFr 2  E8               inx
002A00r 2  A9 61            lda #97
002A02r 2  95 00            sta $00,x
002A04r 2  A9 1E            lda #30
002A06r 2  95 01            sta $01,x
002A08r 2               
002A08r 2               ; <inline>:0:0 in `main`
002A08r 2               @OPCODE_1355:   ; [c64_ir] AltPush
002A08r 2  CA               dex
002A09r 2  CA               dex
002A0Ar 2  B5 03            lda $03,x
002A0Cr 2  48               pha
002A0Dr 2  B5 02            lda $02,x
002A0Fr 2  48               pha
002A10r 2               
002A10r 2               ; src/prelude.fth:33:12 in `loopimpl`
002A10r 2               @OPCODE_1356:   ; [c64_ir] AltPop
002A10r 2  E8               inx
002A11r 2  E8               inx
002A12r 2  68               pla
002A13r 2  95 00            sta $00,x
002A15r 2  68               pla
002A16r 2  95 01            sta $01,x
002A18r 2               
002A18r 2               ; src/prelude.fth:33:15 in `loopimpl`
002A18r 2               @OPCODE_1357:   ; [c64_ir] AltPop
002A18r 2  E8               inx
002A19r 2  E8               inx
002A1Ar 2  68               pla
002A1Br 2  95 00            sta $00,x
002A1Dr 2  68               pla
002A1Er 2  95 01            sta $01,x
002A20r 2               
002A20r 2               ; src/prelude.fth:33:18 in `loopimpl`
002A20r 2               @OPCODE_1358:   ; [c64_ir] AltPop
002A20r 2  E8               inx
002A21r 2  E8               inx
002A22r 2  68               pla
002A23r 2  95 00            sta $00,x
002A25r 2  68               pla
002A26r 2  95 01            sta $01,x
002A28r 2               
002A28r 2               ; <inline>:0:0 in `main`
002A28r 2               @OPCODE_1359:   ; [c64_ir] PushLiteral(7777)
002A28r 2  E8               inx
002A29r 2  E8               inx
002A2Ar 2  A9 61            lda #97
002A2Cr 2  95 00            sta $00,x
002A2Er 2  A9 1E            lda #30
002A30r 2  95 01            sta $01,x
002A32r 2               
002A32r 2               ; <inline>:0:0 in `main`
002A32r 2               @OPCODE_1360:   ; [c64_ir] AltPush
002A32r 2  CA               dex
002A33r 2  CA               dex
002A34r 2  B5 03            lda $03,x
002A36r 2  48               pha
002A37r 2  B5 02            lda $02,x
002A39r 2  48               pha
002A3Ar 2               
002A3Ar 2               ; src/prelude.fth:18:8 in `1+`
002A3Ar 2               @OPCODE_1361:   ; [c64_ir] PushLiteral(1)
002A3Ar 2  E8               inx
002A3Br 2  E8               inx
002A3Cr 2  A9 01            lda #1
002A3Er 2  95 00            sta $00,x
002A40r 2  A9 00            lda #0
002A42r 2  95 01            sta $01,x
002A44r 2               
002A44r 2               ; src/prelude.fth:18:10 in `1+`
002A44r 2               @OPCODE_1362:   ; [c64_ir] Add
002A44r 2                   ; 21
002A44r 2  CA               dex
002A45r 2  CA               dex
002A46r 2  18               clc
002A47r 2  B5 00            lda $00,x
002A49r 2  75 02            adc $02,x
002A4Br 2  95 00            sta $00,x
002A4Dr 2  B5 01            lda $01,x
002A4Fr 2  75 03            adc $03,x
002A51r 2  95 01            sta $01,x
002A53r 2               
002A53r 2               ; <inline>:0:0 in `main`
002A53r 2               @OPCODE_1363:   ; [c64_ir] AltPop
002A53r 2  E8               inx
002A54r 2  E8               inx
002A55r 2  68               pla
002A56r 2  95 00            sta $00,x
002A58r 2  68               pla
002A59r 2  95 01            sta $01,x
002A5Br 2               
002A5Br 2               ; <inline>:0:0 in `main`
002A5Br 2               @OPCODE_1364:   ; [c64_ir] Drop
002A5Br 2  CA               dex
002A5Cr 2  CA               dex
002A5Dr 2               
002A5Dr 2               ; <inline>:0:0 in `main`
002A5Dr 2               @OPCODE_1365:   ; [c64_ir] PushLiteral(7777)
002A5Dr 2  E8               inx
002A5Er 2  E8               inx
002A5Fr 2  A9 61            lda #97
002A61r 2  95 00            sta $00,x
002A63r 2  A9 1E            lda #30
002A65r 2  95 01            sta $01,x
002A67r 2               
002A67r 2               ; <inline>:0:0 in `main`
002A67r 2               @OPCODE_1366:   ; [c64_ir] AltPush
002A67r 2  CA               dex
002A68r 2  CA               dex
002A69r 2  B5 03            lda $03,x
002A6Br 2  48               pha
002A6Cr 2  B5 02            lda $02,x
002A6Er 2  48               pha
002A6Fr 2               
002A6Fr 2               ; <inline>:0:0 in `main`
002A6Fr 2               @OPCODE_1367:   ; [c64_ir] PushLiteral(7777)
002A6Fr 2  E8               inx
002A70r 2  E8               inx
002A71r 2  A9 61            lda #97
002A73r 2  95 00            sta $00,x
002A75r 2  A9 1E            lda #30
002A77r 2  95 01            sta $01,x
002A79r 2               
002A79r 2               ; <inline>:0:0 in `main`
002A79r 2               @OPCODE_1368:   ; [c64_ir] AltPush
002A79r 2  CA               dex
002A7Ar 2  CA               dex
002A7Br 2  B5 03            lda $03,x
002A7Dr 2  48               pha
002A7Er 2  B5 02            lda $02,x
002A80r 2  48               pha
002A81r 2               
002A81r 2               ; src/prelude.fth:4:10 in `over`
002A81r 2               @OPCODE_1369:   ; [c64_ir] AltPush
002A81r 2  CA               dex
002A82r 2  CA               dex
002A83r 2  B5 03            lda $03,x
002A85r 2  48               pha
002A86r 2  B5 02            lda $02,x
002A88r 2  48               pha
002A89r 2               
002A89r 2               ; src/prelude.fth:4:13 in `over`
002A89r 2               @OPCODE_1370:   ; [c64_ir] TempStore
002A89r 2  CA               dex
002A8Ar 2  CA               dex
002A8Br 2  B5 03            lda $03,x
002A8Dr 2  85 96            sta TEMP_PAX2
002A8Fr 2  B5 02            lda $02,x
002A91r 2  85 95            sta TEMP_PAX1
002A93r 2               
002A93r 2               ; src/prelude.fth:4:19 in `over`
002A93r 2               @OPCODE_1371:   ; [c64_ir] TempLoad
002A93r 2  E8               inx
002A94r 2  E8               inx
002A95r 2  A5 95            lda TEMP_PAX1
002A97r 2  95 00            sta $00,x
002A99r 2  A5 96            lda TEMP_PAX2
002A9Br 2  95 01            sta $01,x
002A9Dr 2               
002A9Dr 2               ; src/prelude.fth:4:25 in `over`
002A9Dr 2               @OPCODE_1372:   ; [c64_ir] AltPop
002A9Dr 2  E8               inx
002A9Er 2  E8               inx
002A9Fr 2  68               pla
002AA0r 2  95 00            sta $00,x
002AA2r 2  68               pla
002AA3r 2  95 01            sta $01,x
002AA5r 2               
002AA5r 2               ; src/prelude.fth:4:28 in `over`
002AA5r 2               @OPCODE_1373:   ; [c64_ir] TempLoad
002AA5r 2  E8               inx
002AA6r 2  E8               inx
002AA7r 2  A5 95            lda TEMP_PAX1
002AA9r 2  95 00            sta $00,x
002AABr 2  A5 96            lda TEMP_PAX2
002AADr 2  95 01            sta $01,x
002AAFr 2               
002AAFr 2               ; <inline>:0:0 in `main`
002AAFr 2               @OPCODE_1374:   ; [c64_ir] AltPop
002AAFr 2  E8               inx
002AB0r 2  E8               inx
002AB1r 2  68               pla
002AB2r 2  95 00            sta $00,x
002AB4r 2  68               pla
002AB5r 2  95 01            sta $01,x
002AB7r 2               
002AB7r 2               ; <inline>:0:0 in `main`
002AB7r 2               @OPCODE_1375:   ; [c64_ir] Drop
002AB7r 2  CA               dex
002AB8r 2  CA               dex
002AB9r 2               
002AB9r 2               ; <inline>:0:0 in `main`
002AB9r 2               @OPCODE_1376:   ; [c64_ir] PushLiteral(7777)
002AB9r 2  E8               inx
002ABAr 2  E8               inx
002ABBr 2  A9 61            lda #97
002ABDr 2  95 00            sta $00,x
002ABFr 2  A9 1E            lda #30
002AC1r 2  95 01            sta $01,x
002AC3r 2               
002AC3r 2               ; <inline>:0:0 in `main`
002AC3r 2               @OPCODE_1377:   ; [c64_ir] AltPush
002AC3r 2  CA               dex
002AC4r 2  CA               dex
002AC5r 2  B5 03            lda $03,x
002AC7r 2  48               pha
002AC8r 2  B5 02            lda $02,x
002ACAr 2  48               pha
002ACBr 2               
002ACBr 2               ; src/prelude.fth:4:10 in `over`
002ACBr 2               @OPCODE_1378:   ; [c64_ir] AltPush
002ACBr 2  CA               dex
002ACCr 2  CA               dex
002ACDr 2  B5 03            lda $03,x
002ACFr 2  48               pha
002AD0r 2  B5 02            lda $02,x
002AD2r 2  48               pha
002AD3r 2               
002AD3r 2               ; src/prelude.fth:4:13 in `over`
002AD3r 2               @OPCODE_1379:   ; [c64_ir] TempStore
002AD3r 2  CA               dex
002AD4r 2  CA               dex
002AD5r 2  B5 03            lda $03,x
002AD7r 2  85 96            sta TEMP_PAX2
002AD9r 2  B5 02            lda $02,x
002ADBr 2  85 95            sta TEMP_PAX1
002ADDr 2               
002ADDr 2               ; src/prelude.fth:4:19 in `over`
002ADDr 2               @OPCODE_1380:   ; [c64_ir] TempLoad
002ADDr 2  E8               inx
002ADEr 2  E8               inx
002ADFr 2  A5 95            lda TEMP_PAX1
002AE1r 2  95 00            sta $00,x
002AE3r 2  A5 96            lda TEMP_PAX2
002AE5r 2  95 01            sta $01,x
002AE7r 2               
002AE7r 2               ; src/prelude.fth:4:25 in `over`
002AE7r 2               @OPCODE_1381:   ; [c64_ir] AltPop
002AE7r 2  E8               inx
002AE8r 2  E8               inx
002AE9r 2  68               pla
002AEAr 2  95 00            sta $00,x
002AECr 2  68               pla
002AEDr 2  95 01            sta $01,x
002AEFr 2               
002AEFr 2               ; src/prelude.fth:4:28 in `over`
002AEFr 2               @OPCODE_1382:   ; [c64_ir] TempLoad
002AEFr 2  E8               inx
002AF0r 2  E8               inx
002AF1r 2  A5 95            lda TEMP_PAX1
002AF3r 2  95 00            sta $00,x
002AF5r 2  A5 96            lda TEMP_PAX2
002AF7r 2  95 01            sta $01,x
002AF9r 2               
002AF9r 2               ; <inline>:0:0 in `main`
002AF9r 2               @OPCODE_1383:   ; [c64_ir] AltPop
002AF9r 2  E8               inx
002AFAr 2  E8               inx
002AFBr 2  68               pla
002AFCr 2  95 00            sta $00,x
002AFEr 2  68               pla
002AFFr 2  95 01            sta $01,x
002B01r 2               
002B01r 2               ; <inline>:0:0 in `main`
002B01r 2               @OPCODE_1384:   ; [c64_ir] Drop
002B01r 2  CA               dex
002B02r 2  CA               dex
002B03r 2               
002B03r 2               ; <inline>:0:0 in `main`
002B03r 2               @OPCODE_1385:   ; [c64_ir] AltPop
002B03r 2  E8               inx
002B04r 2  E8               inx
002B05r 2  68               pla
002B06r 2  95 00            sta $00,x
002B08r 2  68               pla
002B09r 2  95 01            sta $01,x
002B0Br 2               
002B0Br 2               ; <inline>:0:0 in `main`
002B0Br 2               @OPCODE_1386:   ; [c64_ir] Drop
002B0Br 2  CA               dex
002B0Cr 2  CA               dex
002B0Dr 2               
002B0Dr 2               ; src/prelude.fth:33:29 in `loopimpl`
002B0Dr 2               @OPCODE_1387:   ; [c64_ir] AltPush
002B0Dr 2  CA               dex
002B0Er 2  CA               dex
002B0Fr 2  B5 03            lda $03,x
002B11r 2  48               pha
002B12r 2  B5 02            lda $02,x
002B14r 2  48               pha
002B15r 2               
002B15r 2               ; src/prelude.fth:33:32 in `loopimpl`
002B15r 2               @OPCODE_1388:   ; [c64_ir] AltPush
002B15r 2  CA               dex
002B16r 2  CA               dex
002B17r 2  B5 03            lda $03,x
002B19r 2  48               pha
002B1Ar 2  B5 02            lda $02,x
002B1Cr 2  48               pha
002B1Dr 2               
002B1Dr 2               ; <inline>:0:0 in `main`
002B1Dr 2               @OPCODE_1389:   ; [c64_ir] PushLiteral(7777)
002B1Dr 2  E8               inx
002B1Er 2  E8               inx
002B1Fr 2  A9 61            lda #97
002B21r 2  95 00            sta $00,x
002B23r 2  A9 1E            lda #30
002B25r 2  95 01            sta $01,x
002B27r 2               
002B27r 2               ; <inline>:0:0 in `main`
002B27r 2               @OPCODE_1390:   ; [c64_ir] AltPush
002B27r 2  CA               dex
002B28r 2  CA               dex
002B29r 2  B5 03            lda $03,x
002B2Br 2  48               pha
002B2Cr 2  B5 02            lda $02,x
002B2Er 2  48               pha
002B2Fr 2               
002B2Fr 2               ; <inline>:0:0 in `main`
002B2Fr 2               @OPCODE_1391:   ; [c64_ir] PushLiteral(7777)
002B2Fr 2  E8               inx
002B30r 2  E8               inx
002B31r 2  A9 61            lda #97
002B33r 2  95 00            sta $00,x
002B35r 2  A9 1E            lda #30
002B37r 2  95 01            sta $01,x
002B39r 2               
002B39r 2               ; <inline>:0:0 in `main`
002B39r 2               @OPCODE_1392:   ; [c64_ir] AltPush
002B39r 2  CA               dex
002B3Ar 2  CA               dex
002B3Br 2  B5 03            lda $03,x
002B3Dr 2  48               pha
002B3Er 2  B5 02            lda $02,x
002B40r 2  48               pha
002B41r 2               
002B41r 2               ; <inline>:0:0 in `main`
002B41r 2               @OPCODE_1393:   ; [c64_ir] PushLiteral(7777)
002B41r 2  E8               inx
002B42r 2  E8               inx
002B43r 2  A9 61            lda #97
002B45r 2  95 00            sta $00,x
002B47r 2  A9 1E            lda #30
002B49r 2  95 01            sta $01,x
002B4Br 2               
002B4Br 2               ; <inline>:0:0 in `main`
002B4Br 2               @OPCODE_1394:   ; [c64_ir] AltPush
002B4Br 2  CA               dex
002B4Cr 2  CA               dex
002B4Dr 2  B5 03            lda $03,x
002B4Fr 2  48               pha
002B50r 2  B5 02            lda $02,x
002B52r 2  48               pha
002B53r 2               
002B53r 2               ; <inline>:0:0 in `main`
002B53r 2               @OPCODE_1395:   ; [c64_ir] PushLiteral(7777)
002B53r 2  E8               inx
002B54r 2  E8               inx
002B55r 2  A9 61            lda #97
002B57r 2  95 00            sta $00,x
002B59r 2  A9 1E            lda #30
002B5Br 2  95 01            sta $01,x
002B5Dr 2               
002B5Dr 2               ; <inline>:0:0 in `main`
002B5Dr 2               @OPCODE_1396:   ; [c64_ir] AltPush
002B5Dr 2  CA               dex
002B5Er 2  CA               dex
002B5Fr 2  B5 03            lda $03,x
002B61r 2  48               pha
002B62r 2  B5 02            lda $02,x
002B64r 2  48               pha
002B65r 2               
002B65r 2               ; src/prelude.fth:14:12 in `invert`
002B65r 2               @OPCODE_1397:   ; [c64_ir] PushLiteral(-1)
002B65r 2  E8               inx
002B66r 2  E8               inx
002B67r 2  A9 FF            lda #255
002B69r 2  95 00            sta $00,x
002B6Br 2  A9 FF            lda #255
002B6Dr 2  95 01            sta $01,x
002B6Fr 2               
002B6Fr 2               ; src/prelude.fth:14:15 in `invert`
002B6Fr 2               @OPCODE_1398:   ; [c64_ir] Nand
002B6Fr 2                   ; 26
002B6Fr 2  CA               dex
002B70r 2  CA               dex
002B71r 2  B5 00            lda $00,x
002B73r 2  35 02            and $02,x
002B75r 2  49 FF            eor #$ff
002B77r 2  95 00            sta $00,x
002B79r 2  B5 01            lda $01,x
002B7Br 2  35 03            and $03,x
002B7Dr 2  49 FF            eor #$ff
002B7Fr 2  95 01            sta $01,x
002B81r 2               
002B81r 2               ; <inline>:0:0 in `main`
002B81r 2               @OPCODE_1399:   ; [c64_ir] AltPop
002B81r 2  E8               inx
002B82r 2  E8               inx
002B83r 2  68               pla
002B84r 2  95 00            sta $00,x
002B86r 2  68               pla
002B87r 2  95 01            sta $01,x
002B89r 2               
002B89r 2               ; <inline>:0:0 in `main`
002B89r 2               @OPCODE_1400:   ; [c64_ir] Drop
002B89r 2  CA               dex
002B8Ar 2  CA               dex
002B8Br 2               
002B8Br 2               ; src/prelude.fth:15:19 in `negate`
002B8Br 2               @OPCODE_1401:   ; [c64_ir] PushLiteral(1)
002B8Br 2  E8               inx
002B8Cr 2  E8               inx
002B8Dr 2  A9 01            lda #1
002B8Fr 2  95 00            sta $00,x
002B91r 2  A9 00            lda #0
002B93r 2  95 01            sta $01,x
002B95r 2               
002B95r 2               ; src/prelude.fth:15:21 in `negate`
002B95r 2               @OPCODE_1402:   ; [c64_ir] Add
002B95r 2                   ; 21
002B95r 2  CA               dex
002B96r 2  CA               dex
002B97r 2  18               clc
002B98r 2  B5 00            lda $00,x
002B9Ar 2  75 02            adc $02,x
002B9Cr 2  95 00            sta $00,x
002B9Er 2  B5 01            lda $01,x
002BA0r 2  75 03            adc $03,x
002BA2r 2  95 01            sta $01,x
002BA4r 2               
002BA4r 2               ; <inline>:0:0 in `main`
002BA4r 2               @OPCODE_1403:   ; [c64_ir] AltPop
002BA4r 2  E8               inx
002BA5r 2  E8               inx
002BA6r 2  68               pla
002BA7r 2  95 00            sta $00,x
002BA9r 2  68               pla
002BAAr 2  95 01            sta $01,x
002BACr 2               
002BACr 2               ; <inline>:0:0 in `main`
002BACr 2               @OPCODE_1404:   ; [c64_ir] Drop
002BACr 2  CA               dex
002BADr 2  CA               dex
002BAEr 2               
002BAEr 2               ; src/prelude.fth:16:19 in `-`
002BAEr 2               @OPCODE_1405:   ; [c64_ir] Add
002BAEr 2                   ; 21
002BAEr 2  CA               dex
002BAFr 2  CA               dex
002BB0r 2  18               clc
002BB1r 2  B5 00            lda $00,x
002BB3r 2  75 02            adc $02,x
002BB5r 2  95 00            sta $00,x
002BB7r 2  B5 01            lda $01,x
002BB9r 2  75 03            adc $03,x
002BBBr 2  95 01            sta $01,x
002BBDr 2               
002BBDr 2               ; <inline>:0:0 in `main`
002BBDr 2               @OPCODE_1406:   ; [c64_ir] AltPop
002BBDr 2  E8               inx
002BBEr 2  E8               inx
002BBFr 2  68               pla
002BC0r 2  95 00            sta $00,x
002BC2r 2  68               pla
002BC3r 2  95 01            sta $01,x
002BC5r 2               
002BC5r 2               ; <inline>:0:0 in `main`
002BC5r 2               @OPCODE_1407:   ; [c64_ir] Drop
002BC5r 2  CA               dex
002BC6r 2  CA               dex
002BC7r 2               
002BC7r 2               ; <inline>:0:0 in `main`
002BC7r 2               @OPCODE_1408:   ; [c64_ir] PushLiteral(7777)
002BC7r 2  E8               inx
002BC8r 2  E8               inx
002BC9r 2  A9 61            lda #97
002BCBr 2  95 00            sta $00,x
002BCDr 2  A9 1E            lda #30
002BCFr 2  95 01            sta $01,x
002BD1r 2               
002BD1r 2               ; <inline>:0:0 in `main`
002BD1r 2               @OPCODE_1409:   ; [c64_ir] AltPush
002BD1r 2  CA               dex
002BD2r 2  CA               dex
002BD3r 2  B5 03            lda $03,x
002BD5r 2  48               pha
002BD6r 2  B5 02            lda $02,x
002BD8r 2  48               pha
002BD9r 2               
002BD9r 2               ; src/prelude.fth:21:8 in `0=`
002BD9r 2               @OPCODE_1410:   ; [c64_ir] JumpIf0(52)
002BD9r 2  CA               dex
002BDAr 2  CA               dex
002BDBr 2  B5 02            lda $02,x
002BDDr 2  15 03            ora $03,x
002BDFr 2  D0 03            bne *+5
002BE1r 2  4C rr rr         jmp @target_52
002BE4r 2               
002BE4r 2               @target_51:
002BE4r 2               
002BE4r 2               ; src/prelude.fth:21:11 in `0=`
002BE4r 2               @OPCODE_1412:   ; [c64_ir] PushLiteral(0)
002BE4r 2  E8               inx
002BE5r 2  E8               inx
002BE6r 2  A9 00            lda #0
002BE8r 2  95 00            sta $00,x
002BEAr 2  A9 00            lda #0
002BECr 2  95 01            sta $01,x
002BEEr 2               
002BEEr 2               ; src/prelude.fth:21:13 in `0=`
002BEEr 2               @OPCODE_1413:   ; [c64_ir] JumpElse(53)
002BEEr 2  4C rr rr         jmp @target_53
002BF1r 2               
002BF1r 2               @target_52:
002BF1r 2               
002BF1r 2               ; src/prelude.fth:21:18 in `0=`
002BF1r 2               @OPCODE_1415:   ; [c64_ir] PushLiteral(-1)
002BF1r 2  E8               inx
002BF2r 2  E8               inx
002BF3r 2  A9 FF            lda #255
002BF5r 2  95 00            sta $00,x
002BF7r 2  A9 FF            lda #255
002BF9r 2  95 01            sta $01,x
002BFBr 2               
002BFBr 2               ; src/prelude.fth:21:21 in `0=`
002BFBr 2               @OPCODE_1416:   ; [c64_ir] JumpTarget(52)
002BFBr 2               
002BFBr 2               @target_53:
002BFBr 2               
002BFBr 2               ; <inline>:0:0 in `main`
002BFBr 2               @OPCODE_1418:   ; [c64_ir] AltPop
002BFBr 2  E8               inx
002BFCr 2  E8               inx
002BFDr 2  68               pla
002BFEr 2  95 00            sta $00,x
002C00r 2  68               pla
002C01r 2  95 01            sta $01,x
002C03r 2               
002C03r 2               ; <inline>:0:0 in `main`
002C03r 2               @OPCODE_1419:   ; [c64_ir] Drop
002C03r 2  CA               dex
002C04r 2  CA               dex
002C05r 2               
002C05r 2               ; <inline>:0:0 in `main`
002C05r 2               @OPCODE_1420:   ; [c64_ir] AltPop
002C05r 2  E8               inx
002C06r 2  E8               inx
002C07r 2  68               pla
002C08r 2  95 00            sta $00,x
002C0Ar 2  68               pla
002C0Br 2  95 01            sta $01,x
002C0Dr 2               
002C0Dr 2               ; <inline>:0:0 in `main`
002C0Dr 2               @OPCODE_1421:   ; [c64_ir] Drop
002C0Dr 2  CA               dex
002C0Er 2  CA               dex
002C0Fr 2               
002C0Fr 2               ; <inline>:0:0 in `main`
002C0Fr 2               @OPCODE_1422:   ; [c64_ir] PushLiteral(7777)
002C0Fr 2  E8               inx
002C10r 2  E8               inx
002C11r 2  A9 61            lda #97
002C13r 2  95 00            sta $00,x
002C15r 2  A9 1E            lda #30
002C17r 2  95 01            sta $01,x
002C19r 2               
002C19r 2               ; <inline>:0:0 in `main`
002C19r 2               @OPCODE_1423:   ; [c64_ir] AltPush
002C19r 2  CA               dex
002C1Ar 2  CA               dex
002C1Br 2  B5 03            lda $03,x
002C1Dr 2  48               pha
002C1Er 2  B5 02            lda $02,x
002C20r 2  48               pha
002C21r 2               
002C21r 2               ; src/prelude.fth:3:10 in `swap`
002C21r 2               @OPCODE_1424:   ; [c64_ir] AltPush
002C21r 2  CA               dex
002C22r 2  CA               dex
002C23r 2  B5 03            lda $03,x
002C25r 2  48               pha
002C26r 2  B5 02            lda $02,x
002C28r 2  48               pha
002C29r 2               
002C29r 2               ; src/prelude.fth:3:13 in `swap`
002C29r 2               @OPCODE_1425:   ; [c64_ir] TempStore
002C29r 2  CA               dex
002C2Ar 2  CA               dex
002C2Br 2  B5 03            lda $03,x
002C2Dr 2  85 96            sta TEMP_PAX2
002C2Fr 2  B5 02            lda $02,x
002C31r 2  85 95            sta TEMP_PAX1
002C33r 2               
002C33r 2               ; src/prelude.fth:3:19 in `swap`
002C33r 2               @OPCODE_1426:   ; [c64_ir] AltPop
002C33r 2  E8               inx
002C34r 2  E8               inx
002C35r 2  68               pla
002C36r 2  95 00            sta $00,x
002C38r 2  68               pla
002C39r 2  95 01            sta $01,x
002C3Br 2               
002C3Br 2               ; src/prelude.fth:3:22 in `swap`
002C3Br 2               @OPCODE_1427:   ; [c64_ir] TempLoad
002C3Br 2  E8               inx
002C3Cr 2  E8               inx
002C3Dr 2  A5 95            lda TEMP_PAX1
002C3Fr 2  95 00            sta $00,x
002C41r 2  A5 96            lda TEMP_PAX2
002C43r 2  95 01            sta $01,x
002C45r 2               
002C45r 2               ; <inline>:0:0 in `main`
002C45r 2               @OPCODE_1428:   ; [c64_ir] AltPop
002C45r 2  E8               inx
002C46r 2  E8               inx
002C47r 2  68               pla
002C48r 2  95 00            sta $00,x
002C4Ar 2  68               pla
002C4Br 2  95 01            sta $01,x
002C4Dr 2               
002C4Dr 2               ; <inline>:0:0 in `main`
002C4Dr 2               @OPCODE_1429:   ; [c64_ir] Drop
002C4Dr 2  CA               dex
002C4Er 2  CA               dex
002C4Fr 2               
002C4Fr 2               ; src/prelude.fth:33:42 in `loopimpl`
002C4Fr 2               @OPCODE_1430:   ; [c64_ir] AltPush
002C4Fr 2  CA               dex
002C50r 2  CA               dex
002C51r 2  B5 03            lda $03,x
002C53r 2  48               pha
002C54r 2  B5 02            lda $02,x
002C56r 2  48               pha
002C57r 2               
002C57r 2               ; <inline>:0:0 in `main`
002C57r 2               @OPCODE_1431:   ; [c64_ir] AltPop
002C57r 2  E8               inx
002C58r 2  E8               inx
002C59r 2  68               pla
002C5Ar 2  95 00            sta $00,x
002C5Cr 2  68               pla
002C5Dr 2  95 01            sta $01,x
002C5Fr 2               
002C5Fr 2               ; <inline>:0:0 in `main`
002C5Fr 2               @OPCODE_1432:   ; [c64_ir] Drop
002C5Fr 2  CA               dex
002C60r 2  CA               dex
002C61r 2               
002C61r 2               ; snake.fth:112:3 in `draw-full-snake`
002C61r 2               @OPCODE_1433:   ; [c64_ir] LoopIf0(45)
002C61r 2  CA               dex
002C62r 2  CA               dex
002C63r 2  B5 02            lda $02,x
002C65r 2  15 03            ora $03,x
002C67r 2  D0 03            bne *+5
002C69r 2  4C rr rr         jmp @target_45
002C6Cr 2               
002C6Cr 2               @target_54:
002C6Cr 2               
002C6Cr 2               ; snake.fth:112:3 in `draw-full-snake`
002C6Cr 2               @OPCODE_1435:   ; [c64_ir] AltPop
002C6Cr 2  E8               inx
002C6Dr 2  E8               inx
002C6Er 2  68               pla
002C6Fr 2  95 00            sta $00,x
002C71r 2  68               pla
002C72r 2  95 01            sta $01,x
002C74r 2               
002C74r 2               ; snake.fth:112:3 in `draw-full-snake`
002C74r 2               @OPCODE_1436:   ; [c64_ir] Drop
002C74r 2  CA               dex
002C75r 2  CA               dex
002C76r 2               
002C76r 2               ; snake.fth:112:3 in `draw-full-snake`
002C76r 2               @OPCODE_1437:   ; [c64_ir] AltPop
002C76r 2  E8               inx
002C77r 2  E8               inx
002C78r 2  68               pla
002C79r 2  95 00            sta $00,x
002C7Br 2  68               pla
002C7Cr 2  95 01            sta $01,x
002C7Er 2               
002C7Er 2               ; snake.fth:112:3 in `draw-full-snake`
002C7Er 2               @OPCODE_1438:   ; [c64_ir] Drop
002C7Er 2  CA               dex
002C7Fr 2  CA               dex
002C80r 2               
002C80r 2               ; <inline>:0:0 in `main`
002C80r 2               @OPCODE_1439:   ; [c64_ir] AltPop
002C80r 2  E8               inx
002C81r 2  E8               inx
002C82r 2  68               pla
002C83r 2  95 00            sta $00,x
002C85r 2  68               pla
002C86r 2  95 01            sta $01,x
002C88r 2               
002C88r 2               ; <inline>:0:0 in `main`
002C88r 2               @OPCODE_1440:   ; [c64_ir] Drop
002C88r 2  CA               dex
002C89r 2  CA               dex
002C8Ar 2               
002C8Ar 2               ; <inline>:0:0 in `main`
002C8Ar 2               @OPCODE_1441:   ; [c64_ir] AltPop
002C8Ar 2  E8               inx
002C8Br 2  E8               inx
002C8Cr 2  68               pla
002C8Dr 2  95 00            sta $00,x
002C8Fr 2  68               pla
002C90r 2  95 01            sta $01,x
002C92r 2               
002C92r 2               ; <inline>:0:0 in `main`
002C92r 2               @OPCODE_1442:   ; [c64_ir] Drop
002C92r 2  CA               dex
002C93r 2  CA               dex
002C94r 2               
002C94r 2               ; snake.fth:212:32 in `main`
002C94r 2               @OPCODE_1443:   ; [c64_ir] JumpTarget(54)
002C94r 2               
002C94r 2               @target_55:
002C94r 2               
002C94r 2               ; snake.fth:213:1 in `main`
002C94r 2               @OPCODE_1445:   ; [c64_ir] PushLiteral(1)
002C94r 2  E8               inx
002C95r 2  E8               inx
002C96r 2  A9 01            lda #1
002C98r 2  95 00            sta $00,x
002C9Ar 2  A9 00            lda #0
002C9Cr 2  95 01            sta $01,x
002C9Er 2               
002C9Er 2               ; snake.fth:213:3 in `main`
002C9Er 2               @OPCODE_1446:   ; [c64_ir] PushLiteral(-28672)
002C9Er 2  E8               inx
002C9Fr 2  E8               inx
002CA0r 2  A9 00            lda #0
002CA2r 2  95 00            sta $00,x
002CA4r 2  A9 90            lda #144
002CA6r 2  95 01            sta $01,x
002CA8r 2               
002CA8r 2               ; snake.fth:213:15 in `main`
002CA8r 2               @OPCODE_1447:   ; [c64_ir] Store
002CA8r 2  CA               dex
002CA9r 2  CA               dex
002CAAr 2  CA               dex
002CABr 2  CA               dex
002CACr 2  B5 02            lda $02,x
002CAEr 2  81 04            sta ($04,x)
002CB0r 2                   ; TODO high byte
002CB0r 2               
002CB0r 2               ; <inline>:0:0 in `main`
002CB0r 2               @OPCODE_1448:   ; [c64_ir] PushLiteral(7777)
002CB0r 2  E8               inx
002CB1r 2  E8               inx
002CB2r 2  A9 61            lda #97
002CB4r 2  95 00            sta $00,x
002CB6r 2  A9 1E            lda #30
002CB8r 2  95 01            sta $01,x
002CBAr 2               
002CBAr 2               ; <inline>:0:0 in `main`
002CBAr 2               @OPCODE_1449:   ; [c64_ir] AltPush
002CBAr 2  CA               dex
002CBBr 2  CA               dex
002CBCr 2  B5 03            lda $03,x
002CBEr 2  48               pha
002CBFr 2  B5 02            lda $02,x
002CC1r 2  48               pha
002CC2r 2               
002CC2r 2               ; snake.fth:202:3 in `draw-snake-head-tail`
002CC2r 2               @OPCODE_1450:   ; [c64_ir] PushLiteral(0)
002CC2r 2  E8               inx
002CC3r 2  E8               inx
002CC4r 2  A9 00            lda #0
002CC6r 2  95 00            sta $00,x
002CC8r 2  A9 00            lda #0
002CCAr 2  95 01            sta $01,x
002CCCr 2               
002CCCr 2               ; <inline>:0:0 in `main`
002CCCr 2               @OPCODE_1451:   ; [c64_ir] PushLiteral(7777)
002CCCr 2  E8               inx
002CCDr 2  E8               inx
002CCEr 2  A9 61            lda #97
002CD0r 2  95 00            sta $00,x
002CD2r 2  A9 1E            lda #30
002CD4r 2  95 01            sta $01,x
002CD6r 2               
002CD6r 2               ; <inline>:0:0 in `main`
002CD6r 2               @OPCODE_1452:   ; [c64_ir] AltPush
002CD6r 2  CA               dex
002CD7r 2  CA               dex
002CD8r 2  B5 03            lda $03,x
002CDAr 2  48               pha
002CDBr 2  B5 02            lda $02,x
002CDDr 2  48               pha
002CDEr 2               
002CDEr 2               ; <inline>:0:0 in `main`
002CDEr 2               @OPCODE_1453:   ; [c64_ir] PushLiteral(7777)
002CDEr 2  E8               inx
002CDFr 2  E8               inx
002CE0r 2  A9 61            lda #97
002CE2r 2  95 00            sta $00,x
002CE4r 2  A9 1E            lda #30
002CE6r 2  95 01            sta $01,x
002CE8r 2               
002CE8r 2               ; <inline>:0:0 in `main`
002CE8r 2               @OPCODE_1454:   ; [c64_ir] AltPush
002CE8r 2  CA               dex
002CE9r 2  CA               dex
002CEAr 2  B5 03            lda $03,x
002CECr 2  48               pha
002CEDr 2  B5 02            lda $02,x
002CEFr 2  48               pha
002CF0r 2               
002CF0r 2               ; <inline>:0:0 in `main`
002CF0r 2               @OPCODE_1455:   ; [c64_ir] PushLiteral(7777)
002CF0r 2  E8               inx
002CF1r 2  E8               inx
002CF2r 2  A9 61            lda #97
002CF4r 2  95 00            sta $00,x
002CF6r 2  A9 1E            lda #30
002CF8r 2  95 01            sta $01,x
002CFAr 2               
002CFAr 2               ; <inline>:0:0 in `main`
002CFAr 2               @OPCODE_1456:   ; [c64_ir] AltPush
002CFAr 2  CA               dex
002CFBr 2  CA               dex
002CFCr 2  B5 03            lda $03,x
002CFEr 2  48               pha
002CFFr 2  B5 02            lda $02,x
002D01r 2  48               pha
002D02r 2               
002D02r 2               ; src/prelude.fth:6:10 in `dup`
002D02r 2               @OPCODE_1457:   ; [c64_ir] TempStore
002D02r 2  CA               dex
002D03r 2  CA               dex
002D04r 2  B5 03            lda $03,x
002D06r 2  85 96            sta TEMP_PAX2
002D08r 2  B5 02            lda $02,x
002D0Ar 2  85 95            sta TEMP_PAX1
002D0Cr 2               
002D0Cr 2               ; src/prelude.fth:6:16 in `dup`
002D0Cr 2               @OPCODE_1458:   ; [c64_ir] TempLoad
002D0Cr 2  E8               inx
002D0Dr 2  E8               inx
002D0Er 2  A5 95            lda TEMP_PAX1
002D10r 2  95 00            sta $00,x
002D12r 2  A5 96            lda TEMP_PAX2
002D14r 2  95 01            sta $01,x
002D16r 2               
002D16r 2               ; src/prelude.fth:6:22 in `dup`
002D16r 2               @OPCODE_1459:   ; [c64_ir] TempLoad
002D16r 2  E8               inx
002D17r 2  E8               inx
002D18r 2  A5 95            lda TEMP_PAX1
002D1Ar 2  95 00            sta $00,x
002D1Cr 2  A5 96            lda TEMP_PAX2
002D1Er 2  95 01            sta $01,x
002D20r 2               
002D20r 2               ; <inline>:0:0 in `main`
002D20r 2               @OPCODE_1460:   ; [c64_ir] AltPop
002D20r 2  E8               inx
002D21r 2  E8               inx
002D22r 2  68               pla
002D23r 2  95 00            sta $00,x
002D25r 2  68               pla
002D26r 2  95 01            sta $01,x
002D28r 2               
002D28r 2               ; <inline>:0:0 in `main`
002D28r 2               @OPCODE_1461:   ; [c64_ir] Drop
002D28r 2  CA               dex
002D29r 2  CA               dex
002D2Ar 2               
002D2Ar 2               ; src/prelude.fth:41:13 in `cells`
002D2Ar 2               @OPCODE_1462:   ; [c64_ir] Add
002D2Ar 2                   ; 21
002D2Ar 2  CA               dex
002D2Br 2  CA               dex
002D2Cr 2  18               clc
002D2Dr 2  B5 00            lda $00,x
002D2Fr 2  75 02            adc $02,x
002D31r 2  95 00            sta $00,x
002D33r 2  B5 01            lda $01,x
002D35r 2  75 03            adc $03,x
002D37r 2  95 01            sta $01,x
002D39r 2               
002D39r 2               ; <inline>:0:0 in `main`
002D39r 2               @OPCODE_1463:   ; [c64_ir] AltPop
002D39r 2  E8               inx
002D3Ar 2  E8               inx
002D3Br 2  68               pla
002D3Cr 2  95 00            sta $00,x
002D3Er 2  68               pla
002D3Fr 2  95 01            sta $01,x
002D41r 2               
002D41r 2               ; <inline>:0:0 in `main`
002D41r 2               @OPCODE_1464:   ; [c64_ir] Drop
002D41r 2  CA               dex
002D42r 2  CA               dex
002D43r 2               
002D43r 2               ; snake.fth:42:9 in `snake-x`
002D43r 2               @OPCODE_1465:   ; [c64_ir] PushLiteral(-28668)
002D43r 2  E8               inx
002D44r 2  E8               inx
002D45r 2  A9 04            lda #4
002D47r 2  95 00            sta $00,x
002D49r 2  A9 90            lda #144
002D4Br 2  95 01            sta $01,x
002D4Dr 2               
002D4Dr 2               ; snake.fth:42:22 in `snake-x`
002D4Dr 2               @OPCODE_1466:   ; [c64_ir] Add
002D4Dr 2                   ; 21
002D4Dr 2  CA               dex
002D4Er 2  CA               dex
002D4Fr 2  18               clc
002D50r 2  B5 00            lda $00,x
002D52r 2  75 02            adc $02,x
002D54r 2  95 00            sta $00,x
002D56r 2  B5 01            lda $01,x
002D58r 2  75 03            adc $03,x
002D5Ar 2  95 01            sta $01,x
002D5Cr 2               
002D5Cr 2               ; <inline>:0:0 in `main`
002D5Cr 2               @OPCODE_1467:   ; [c64_ir] AltPop
002D5Cr 2  E8               inx
002D5Dr 2  E8               inx
002D5Er 2  68               pla
002D5Fr 2  95 00            sta $00,x
002D61r 2  68               pla
002D62r 2  95 01            sta $01,x
002D64r 2               
002D64r 2               ; <inline>:0:0 in `main`
002D64r 2               @OPCODE_1468:   ; [c64_ir] Drop
002D64r 2  CA               dex
002D65r 2  CA               dex
002D66r 2               
002D66r 2               ; snake.fth:202:13 in `draw-snake-head-tail`
002D66r 2               @OPCODE_1469:   ; [c64_ir] Load
002D66r 2  A1 00            lda ($00,x)
002D68r 2  95 00            sta $00,x
002D6Ar 2  A9 00            lda #0
002D6Cr 2  95 01            sta $01,x
002D6Er 2               
002D6Er 2               ; snake.fth:202:15 in `draw-snake-head-tail`
002D6Er 2               @OPCODE_1470:   ; [c64_ir] PushLiteral(0)
002D6Er 2  E8               inx
002D6Fr 2  E8               inx
002D70r 2  A9 00            lda #0
002D72r 2  95 00            sta $00,x
002D74r 2  A9 00            lda #0
002D76r 2  95 01            sta $01,x
002D78r 2               
002D78r 2               ; <inline>:0:0 in `main`
002D78r 2               @OPCODE_1471:   ; [c64_ir] PushLiteral(7777)
002D78r 2  E8               inx
002D79r 2  E8               inx
002D7Ar 2  A9 61            lda #97
002D7Cr 2  95 00            sta $00,x
002D7Er 2  A9 1E            lda #30
002D80r 2  95 01            sta $01,x
002D82r 2               
002D82r 2               ; <inline>:0:0 in `main`
002D82r 2               @OPCODE_1472:   ; [c64_ir] AltPush
002D82r 2  CA               dex
002D83r 2  CA               dex
002D84r 2  B5 03            lda $03,x
002D86r 2  48               pha
002D87r 2  B5 02            lda $02,x
002D89r 2  48               pha
002D8Ar 2               
002D8Ar 2               ; <inline>:0:0 in `main`
002D8Ar 2               @OPCODE_1473:   ; [c64_ir] PushLiteral(7777)
002D8Ar 2  E8               inx
002D8Br 2  E8               inx
002D8Cr 2  A9 61            lda #97
002D8Er 2  95 00            sta $00,x
002D90r 2  A9 1E            lda #30
002D92r 2  95 01            sta $01,x
002D94r 2               
002D94r 2               ; <inline>:0:0 in `main`
002D94r 2               @OPCODE_1474:   ; [c64_ir] AltPush
002D94r 2  CA               dex
002D95r 2  CA               dex
002D96r 2  B5 03            lda $03,x
002D98r 2  48               pha
002D99r 2  B5 02            lda $02,x
002D9Br 2  48               pha
002D9Cr 2               
002D9Cr 2               ; <inline>:0:0 in `main`
002D9Cr 2               @OPCODE_1475:   ; [c64_ir] PushLiteral(7777)
002D9Cr 2  E8               inx
002D9Dr 2  E8               inx
002D9Er 2  A9 61            lda #97
002DA0r 2  95 00            sta $00,x
002DA2r 2  A9 1E            lda #30
002DA4r 2  95 01            sta $01,x
002DA6r 2               
002DA6r 2               ; <inline>:0:0 in `main`
002DA6r 2               @OPCODE_1476:   ; [c64_ir] AltPush
002DA6r 2  CA               dex
002DA7r 2  CA               dex
002DA8r 2  B5 03            lda $03,x
002DAAr 2  48               pha
002DABr 2  B5 02            lda $02,x
002DADr 2  48               pha
002DAEr 2               
002DAEr 2               ; src/prelude.fth:6:10 in `dup`
002DAEr 2               @OPCODE_1477:   ; [c64_ir] TempStore
002DAEr 2  CA               dex
002DAFr 2  CA               dex
002DB0r 2  B5 03            lda $03,x
002DB2r 2  85 96            sta TEMP_PAX2
002DB4r 2  B5 02            lda $02,x
002DB6r 2  85 95            sta TEMP_PAX1
002DB8r 2               
002DB8r 2               ; src/prelude.fth:6:16 in `dup`
002DB8r 2               @OPCODE_1478:   ; [c64_ir] TempLoad
002DB8r 2  E8               inx
002DB9r 2  E8               inx
002DBAr 2  A5 95            lda TEMP_PAX1
002DBCr 2  95 00            sta $00,x
002DBEr 2  A5 96            lda TEMP_PAX2
002DC0r 2  95 01            sta $01,x
002DC2r 2               
002DC2r 2               ; src/prelude.fth:6:22 in `dup`
002DC2r 2               @OPCODE_1479:   ; [c64_ir] TempLoad
002DC2r 2  E8               inx
002DC3r 2  E8               inx
002DC4r 2  A5 95            lda TEMP_PAX1
002DC6r 2  95 00            sta $00,x
002DC8r 2  A5 96            lda TEMP_PAX2
002DCAr 2  95 01            sta $01,x
002DCCr 2               
002DCCr 2               ; <inline>:0:0 in `main`
002DCCr 2               @OPCODE_1480:   ; [c64_ir] AltPop
002DCCr 2  E8               inx
002DCDr 2  E8               inx
002DCEr 2  68               pla
002DCFr 2  95 00            sta $00,x
002DD1r 2  68               pla
002DD2r 2  95 01            sta $01,x
002DD4r 2               
002DD4r 2               ; <inline>:0:0 in `main`
002DD4r 2               @OPCODE_1481:   ; [c64_ir] Drop
002DD4r 2  CA               dex
002DD5r 2  CA               dex
002DD6r 2               
002DD6r 2               ; src/prelude.fth:41:13 in `cells`
002DD6r 2               @OPCODE_1482:   ; [c64_ir] Add
002DD6r 2                   ; 21
002DD6r 2  CA               dex
002DD7r 2  CA               dex
002DD8r 2  18               clc
002DD9r 2  B5 00            lda $00,x
002DDBr 2  75 02            adc $02,x
002DDDr 2  95 00            sta $00,x
002DDFr 2  B5 01            lda $01,x
002DE1r 2  75 03            adc $03,x
002DE3r 2  95 01            sta $01,x
002DE5r 2               
002DE5r 2               ; <inline>:0:0 in `main`
002DE5r 2               @OPCODE_1483:   ; [c64_ir] AltPop
002DE5r 2  E8               inx
002DE6r 2  E8               inx
002DE7r 2  68               pla
002DE8r 2  95 00            sta $00,x
002DEAr 2  68               pla
002DEBr 2  95 01            sta $01,x
002DEDr 2               
002DEDr 2               ; <inline>:0:0 in `main`
002DEDr 2               @OPCODE_1484:   ; [c64_ir] Drop
002DEDr 2  CA               dex
002DEEr 2  CA               dex
002DEFr 2               
002DEFr 2               ; snake.fth:45:9 in `snake-y`
002DEFr 2               @OPCODE_1485:   ; [c64_ir] PushLiteral(-27666)
002DEFr 2  E8               inx
002DF0r 2  E8               inx
002DF1r 2  A9 EE            lda #238
002DF3r 2  95 00            sta $00,x
002DF5r 2  A9 93            lda #147
002DF7r 2  95 01            sta $01,x
002DF9r 2               
002DF9r 2               ; snake.fth:45:22 in `snake-y`
002DF9r 2               @OPCODE_1486:   ; [c64_ir] Add
002DF9r 2                   ; 21
002DF9r 2  CA               dex
002DFAr 2  CA               dex
002DFBr 2  18               clc
002DFCr 2  B5 00            lda $00,x
002DFEr 2  75 02            adc $02,x
002E00r 2  95 00            sta $00,x
002E02r 2  B5 01            lda $01,x
002E04r 2  75 03            adc $03,x
002E06r 2  95 01            sta $01,x
002E08r 2               
002E08r 2               ; <inline>:0:0 in `main`
002E08r 2               @OPCODE_1487:   ; [c64_ir] AltPop
002E08r 2  E8               inx
002E09r 2  E8               inx
002E0Ar 2  68               pla
002E0Br 2  95 00            sta $00,x
002E0Dr 2  68               pla
002E0Er 2  95 01            sta $01,x
002E10r 2               
002E10r 2               ; <inline>:0:0 in `main`
002E10r 2               @OPCODE_1488:   ; [c64_ir] Drop
002E10r 2  CA               dex
002E11r 2  CA               dex
002E12r 2               
002E12r 2               ; snake.fth:202:25 in `draw-snake-head-tail`
002E12r 2               @OPCODE_1489:   ; [c64_ir] Load
002E12r 2  A1 00            lda ($00,x)
002E14r 2  95 00            sta $00,x
002E16r 2  A9 00            lda #0
002E18r 2  95 01            sta $01,x
002E1Ar 2               
002E1Ar 2               ; <inline>:0:0 in `main`
002E1Ar 2               @OPCODE_1490:   ; [c64_ir] PushLiteral(7777)
002E1Ar 2  E8               inx
002E1Br 2  E8               inx
002E1Cr 2  A9 61            lda #97
002E1Er 2  95 00            sta $00,x
002E20r 2  A9 1E            lda #30
002E22r 2  95 01            sta $01,x
002E24r 2               
002E24r 2               ; <inline>:0:0 in `main`
002E24r 2               @OPCODE_1491:   ; [c64_ir] AltPush
002E24r 2  CA               dex
002E25r 2  CA               dex
002E26r 2  B5 03            lda $03,x
002E28r 2  48               pha
002E29r 2  B5 02            lda $02,x
002E2Br 2  48               pha
002E2Cr 2               
002E2Cr 2               ; snake.fth:53:31 in `draw-snake-tile`
002E2Cr 2               @OPCODE_1492:   ; [c64_ir] PushLiteral(232)
002E2Cr 2  E8               inx
002E2Dr 2  E8               inx
002E2Er 2  A9 E8            lda #232
002E30r 2  95 00            sta $00,x
002E32r 2  A9 00            lda #0
002E34r 2  95 01            sta $01,x
002E36r 2               
002E36r 2               ; <inline>:0:0 in `main`
002E36r 2               @OPCODE_1493:   ; [c64_ir] PushLiteral(7777)
002E36r 2  E8               inx
002E37r 2  E8               inx
002E38r 2  A9 61            lda #97
002E3Ar 2  95 00            sta $00,x
002E3Cr 2  A9 1E            lda #30
002E3Er 2  95 01            sta $01,x
002E40r 2               
002E40r 2               ; <inline>:0:0 in `main`
002E40r 2               @OPCODE_1494:   ; [c64_ir] AltPush
002E40r 2  CA               dex
002E41r 2  CA               dex
002E42r 2  B5 03            lda $03,x
002E44r 2  48               pha
002E45r 2  B5 02            lda $02,x
002E47r 2  48               pha
002E48r 2               
002E48r 2               ; src/prelude.fth:5:10 in `rot`
002E48r 2               @OPCODE_1495:   ; [c64_ir] AltPush
002E48r 2  CA               dex
002E49r 2  CA               dex
002E4Ar 2  B5 03            lda $03,x
002E4Cr 2  48               pha
002E4Dr 2  B5 02            lda $02,x
002E4Fr 2  48               pha
002E50r 2               
002E50r 2               ; <inline>:0:0 in `main`
002E50r 2               @OPCODE_1496:   ; [c64_ir] PushLiteral(7777)
002E50r 2  E8               inx
002E51r 2  E8               inx
002E52r 2  A9 61            lda #97
002E54r 2  95 00            sta $00,x
002E56r 2  A9 1E            lda #30
002E58r 2  95 01            sta $01,x
002E5Ar 2               
002E5Ar 2               ; <inline>:0:0 in `main`
002E5Ar 2               @OPCODE_1497:   ; [c64_ir] AltPush
002E5Ar 2  CA               dex
002E5Br 2  CA               dex
002E5Cr 2  B5 03            lda $03,x
002E5Er 2  48               pha
002E5Fr 2  B5 02            lda $02,x
002E61r 2  48               pha
002E62r 2               
002E62r 2               ; src/prelude.fth:3:10 in `swap`
002E62r 2               @OPCODE_1498:   ; [c64_ir] AltPush
002E62r 2  CA               dex
002E63r 2  CA               dex
002E64r 2  B5 03            lda $03,x
002E66r 2  48               pha
002E67r 2  B5 02            lda $02,x
002E69r 2  48               pha
002E6Ar 2               
002E6Ar 2               ; src/prelude.fth:3:13 in `swap`
002E6Ar 2               @OPCODE_1499:   ; [c64_ir] TempStore
002E6Ar 2  CA               dex
002E6Br 2  CA               dex
002E6Cr 2  B5 03            lda $03,x
002E6Er 2  85 96            sta TEMP_PAX2
002E70r 2  B5 02            lda $02,x
002E72r 2  85 95            sta TEMP_PAX1
002E74r 2               
002E74r 2               ; src/prelude.fth:3:19 in `swap`
002E74r 2               @OPCODE_1500:   ; [c64_ir] AltPop
002E74r 2  E8               inx
002E75r 2  E8               inx
002E76r 2  68               pla
002E77r 2  95 00            sta $00,x
002E79r 2  68               pla
002E7Ar 2  95 01            sta $01,x
002E7Cr 2               
002E7Cr 2               ; src/prelude.fth:3:22 in `swap`
002E7Cr 2               @OPCODE_1501:   ; [c64_ir] TempLoad
002E7Cr 2  E8               inx
002E7Dr 2  E8               inx
002E7Er 2  A5 95            lda TEMP_PAX1
002E80r 2  95 00            sta $00,x
002E82r 2  A5 96            lda TEMP_PAX2
002E84r 2  95 01            sta $01,x
002E86r 2               
002E86r 2               ; <inline>:0:0 in `main`
002E86r 2               @OPCODE_1502:   ; [c64_ir] AltPop
002E86r 2  E8               inx
002E87r 2  E8               inx
002E88r 2  68               pla
002E89r 2  95 00            sta $00,x
002E8Br 2  68               pla
002E8Cr 2  95 01            sta $01,x
002E8Er 2               
002E8Er 2               ; <inline>:0:0 in `main`
002E8Er 2               @OPCODE_1503:   ; [c64_ir] Drop
002E8Er 2  CA               dex
002E8Fr 2  CA               dex
002E90r 2               
002E90r 2               ; src/prelude.fth:5:18 in `rot`
002E90r 2               @OPCODE_1504:   ; [c64_ir] AltPop
002E90r 2  E8               inx
002E91r 2  E8               inx
002E92r 2  68               pla
002E93r 2  95 00            sta $00,x
002E95r 2  68               pla
002E96r 2  95 01            sta $01,x
002E98r 2               
002E98r 2               ; <inline>:0:0 in `main`
002E98r 2               @OPCODE_1505:   ; [c64_ir] PushLiteral(7777)
002E98r 2  E8               inx
002E99r 2  E8               inx
002E9Ar 2  A9 61            lda #97
002E9Cr 2  95 00            sta $00,x
002E9Er 2  A9 1E            lda #30
002EA0r 2  95 01            sta $01,x
002EA2r 2               
002EA2r 2               ; <inline>:0:0 in `main`
002EA2r 2               @OPCODE_1506:   ; [c64_ir] AltPush
002EA2r 2  CA               dex
002EA3r 2  CA               dex
002EA4r 2  B5 03            lda $03,x
002EA6r 2  48               pha
002EA7r 2  B5 02            lda $02,x
002EA9r 2  48               pha
002EAAr 2               
002EAAr 2               ; src/prelude.fth:3:10 in `swap`
002EAAr 2               @OPCODE_1507:   ; [c64_ir] AltPush
002EAAr 2  CA               dex
002EABr 2  CA               dex
002EACr 2  B5 03            lda $03,x
002EAEr 2  48               pha
002EAFr 2  B5 02            lda $02,x
002EB1r 2  48               pha
002EB2r 2               
002EB2r 2               ; src/prelude.fth:3:13 in `swap`
002EB2r 2               @OPCODE_1508:   ; [c64_ir] TempStore
002EB2r 2  CA               dex
002EB3r 2  CA               dex
002EB4r 2  B5 03            lda $03,x
002EB6r 2  85 96            sta TEMP_PAX2
002EB8r 2  B5 02            lda $02,x
002EBAr 2  85 95            sta TEMP_PAX1
002EBCr 2               
002EBCr 2               ; src/prelude.fth:3:19 in `swap`
002EBCr 2               @OPCODE_1509:   ; [c64_ir] AltPop
002EBCr 2  E8               inx
002EBDr 2  E8               inx
002EBEr 2  68               pla
002EBFr 2  95 00            sta $00,x
002EC1r 2  68               pla
002EC2r 2  95 01            sta $01,x
002EC4r 2               
002EC4r 2               ; src/prelude.fth:3:22 in `swap`
002EC4r 2               @OPCODE_1510:   ; [c64_ir] TempLoad
002EC4r 2  E8               inx
002EC5r 2  E8               inx
002EC6r 2  A5 95            lda TEMP_PAX1
002EC8r 2  95 00            sta $00,x
002ECAr 2  A5 96            lda TEMP_PAX2
002ECCr 2  95 01            sta $01,x
002ECEr 2               
002ECEr 2               ; <inline>:0:0 in `main`
002ECEr 2               @OPCODE_1511:   ; [c64_ir] AltPop
002ECEr 2  E8               inx
002ECFr 2  E8               inx
002ED0r 2  68               pla
002ED1r 2  95 00            sta $00,x
002ED3r 2  68               pla
002ED4r 2  95 01            sta $01,x
002ED6r 2               
002ED6r 2               ; <inline>:0:0 in `main`
002ED6r 2               @OPCODE_1512:   ; [c64_ir] Drop
002ED6r 2  CA               dex
002ED7r 2  CA               dex
002ED8r 2               
002ED8r 2               ; <inline>:0:0 in `main`
002ED8r 2               @OPCODE_1513:   ; [c64_ir] AltPop
002ED8r 2  E8               inx
002ED9r 2  E8               inx
002EDAr 2  68               pla
002EDBr 2  95 00            sta $00,x
002EDDr 2  68               pla
002EDEr 2  95 01            sta $01,x
002EE0r 2               
002EE0r 2               ; <inline>:0:0 in `main`
002EE0r 2               @OPCODE_1514:   ; [c64_ir] Drop
002EE0r 2  CA               dex
002EE1r 2  CA               dex
002EE2r 2               
002EE2r 2               ; <inline>:0:0 in `main`
002EE2r 2               @OPCODE_1515:   ; [c64_ir] PushLiteral(7777)
002EE2r 2  E8               inx
002EE3r 2  E8               inx
002EE4r 2  A9 61            lda #97
002EE6r 2  95 00            sta $00,x
002EE8r 2  A9 1E            lda #30
002EEAr 2  95 01            sta $01,x
002EECr 2               
002EECr 2               ; <inline>:0:0 in `main`
002EECr 2               @OPCODE_1516:   ; [c64_ir] AltPush
002EECr 2  CA               dex
002EEDr 2  CA               dex
002EEEr 2  B5 03            lda $03,x
002EF0r 2  48               pha
002EF1r 2  B5 02            lda $02,x
002EF3r 2  48               pha
002EF4r 2               
002EF4r 2               ; src/prelude.fth:5:10 in `rot`
002EF4r 2               @OPCODE_1517:   ; [c64_ir] AltPush
002EF4r 2  CA               dex
002EF5r 2  CA               dex
002EF6r 2  B5 03            lda $03,x
002EF8r 2  48               pha
002EF9r 2  B5 02            lda $02,x
002EFBr 2  48               pha
002EFCr 2               
002EFCr 2               ; <inline>:0:0 in `main`
002EFCr 2               @OPCODE_1518:   ; [c64_ir] PushLiteral(7777)
002EFCr 2  E8               inx
002EFDr 2  E8               inx
002EFEr 2  A9 61            lda #97
002F00r 2  95 00            sta $00,x
002F02r 2  A9 1E            lda #30
002F04r 2  95 01            sta $01,x
002F06r 2               
002F06r 2               ; <inline>:0:0 in `main`
002F06r 2               @OPCODE_1519:   ; [c64_ir] AltPush
002F06r 2  CA               dex
002F07r 2  CA               dex
002F08r 2  B5 03            lda $03,x
002F0Ar 2  48               pha
002F0Br 2  B5 02            lda $02,x
002F0Dr 2  48               pha
002F0Er 2               
002F0Er 2               ; src/prelude.fth:3:10 in `swap`
002F0Er 2               @OPCODE_1520:   ; [c64_ir] AltPush
002F0Er 2  CA               dex
002F0Fr 2  CA               dex
002F10r 2  B5 03            lda $03,x
002F12r 2  48               pha
002F13r 2  B5 02            lda $02,x
002F15r 2  48               pha
002F16r 2               
002F16r 2               ; src/prelude.fth:3:13 in `swap`
002F16r 2               @OPCODE_1521:   ; [c64_ir] TempStore
002F16r 2  CA               dex
002F17r 2  CA               dex
002F18r 2  B5 03            lda $03,x
002F1Ar 2  85 96            sta TEMP_PAX2
002F1Cr 2  B5 02            lda $02,x
002F1Er 2  85 95            sta TEMP_PAX1
002F20r 2               
002F20r 2               ; src/prelude.fth:3:19 in `swap`
002F20r 2               @OPCODE_1522:   ; [c64_ir] AltPop
002F20r 2  E8               inx
002F21r 2  E8               inx
002F22r 2  68               pla
002F23r 2  95 00            sta $00,x
002F25r 2  68               pla
002F26r 2  95 01            sta $01,x
002F28r 2               
002F28r 2               ; src/prelude.fth:3:22 in `swap`
002F28r 2               @OPCODE_1523:   ; [c64_ir] TempLoad
002F28r 2  E8               inx
002F29r 2  E8               inx
002F2Ar 2  A5 95            lda TEMP_PAX1
002F2Cr 2  95 00            sta $00,x
002F2Er 2  A5 96            lda TEMP_PAX2
002F30r 2  95 01            sta $01,x
002F32r 2               
002F32r 2               ; <inline>:0:0 in `main`
002F32r 2               @OPCODE_1524:   ; [c64_ir] AltPop
002F32r 2  E8               inx
002F33r 2  E8               inx
002F34r 2  68               pla
002F35r 2  95 00            sta $00,x
002F37r 2  68               pla
002F38r 2  95 01            sta $01,x
002F3Ar 2               
002F3Ar 2               ; <inline>:0:0 in `main`
002F3Ar 2               @OPCODE_1525:   ; [c64_ir] Drop
002F3Ar 2  CA               dex
002F3Br 2  CA               dex
002F3Cr 2               
002F3Cr 2               ; src/prelude.fth:5:18 in `rot`
002F3Cr 2               @OPCODE_1526:   ; [c64_ir] AltPop
002F3Cr 2  E8               inx
002F3Dr 2  E8               inx
002F3Er 2  68               pla
002F3Fr 2  95 00            sta $00,x
002F41r 2  68               pla
002F42r 2  95 01            sta $01,x
002F44r 2               
002F44r 2               ; <inline>:0:0 in `main`
002F44r 2               @OPCODE_1527:   ; [c64_ir] PushLiteral(7777)
002F44r 2  E8               inx
002F45r 2  E8               inx
002F46r 2  A9 61            lda #97
002F48r 2  95 00            sta $00,x
002F4Ar 2  A9 1E            lda #30
002F4Cr 2  95 01            sta $01,x
002F4Er 2               
002F4Er 2               ; <inline>:0:0 in `main`
002F4Er 2               @OPCODE_1528:   ; [c64_ir] AltPush
002F4Er 2  CA               dex
002F4Fr 2  CA               dex
002F50r 2  B5 03            lda $03,x
002F52r 2  48               pha
002F53r 2  B5 02            lda $02,x
002F55r 2  48               pha
002F56r 2               
002F56r 2               ; src/prelude.fth:3:10 in `swap`
002F56r 2               @OPCODE_1529:   ; [c64_ir] AltPush
002F56r 2  CA               dex
002F57r 2  CA               dex
002F58r 2  B5 03            lda $03,x
002F5Ar 2  48               pha
002F5Br 2  B5 02            lda $02,x
002F5Dr 2  48               pha
002F5Er 2               
002F5Er 2               ; src/prelude.fth:3:13 in `swap`
002F5Er 2               @OPCODE_1530:   ; [c64_ir] TempStore
002F5Er 2  CA               dex
002F5Fr 2  CA               dex
002F60r 2  B5 03            lda $03,x
002F62r 2  85 96            sta TEMP_PAX2
002F64r 2  B5 02            lda $02,x
002F66r 2  85 95            sta TEMP_PAX1
002F68r 2               
002F68r 2               ; src/prelude.fth:3:19 in `swap`
002F68r 2               @OPCODE_1531:   ; [c64_ir] AltPop
002F68r 2  E8               inx
002F69r 2  E8               inx
002F6Ar 2  68               pla
002F6Br 2  95 00            sta $00,x
002F6Dr 2  68               pla
002F6Er 2  95 01            sta $01,x
002F70r 2               
002F70r 2               ; src/prelude.fth:3:22 in `swap`
002F70r 2               @OPCODE_1532:   ; [c64_ir] TempLoad
002F70r 2  E8               inx
002F71r 2  E8               inx
002F72r 2  A5 95            lda TEMP_PAX1
002F74r 2  95 00            sta $00,x
002F76r 2  A5 96            lda TEMP_PAX2
002F78r 2  95 01            sta $01,x
002F7Ar 2               
002F7Ar 2               ; <inline>:0:0 in `main`
002F7Ar 2               @OPCODE_1533:   ; [c64_ir] AltPop
002F7Ar 2  E8               inx
002F7Br 2  E8               inx
002F7Cr 2  68               pla
002F7Dr 2  95 00            sta $00,x
002F7Fr 2  68               pla
002F80r 2  95 01            sta $01,x
002F82r 2               
002F82r 2               ; <inline>:0:0 in `main`
002F82r 2               @OPCODE_1534:   ; [c64_ir] Drop
002F82r 2  CA               dex
002F83r 2  CA               dex
002F84r 2               
002F84r 2               ; <inline>:0:0 in `main`
002F84r 2               @OPCODE_1535:   ; [c64_ir] AltPop
002F84r 2  E8               inx
002F85r 2  E8               inx
002F86r 2  68               pla
002F87r 2  95 00            sta $00,x
002F89r 2  68               pla
002F8Ar 2  95 01            sta $01,x
002F8Cr 2               
002F8Cr 2               ; <inline>:0:0 in `main`
002F8Cr 2               @OPCODE_1536:   ; [c64_ir] Drop
002F8Cr 2  CA               dex
002F8Dr 2  CA               dex
002F8Er 2               
002F8Er 2               ; <inline>:0:0 in `main`
002F8Er 2               @OPCODE_1537:   ; [c64_ir] PushLiteral(7777)
002F8Er 2  E8               inx
002F8Fr 2  E8               inx
002F90r 2  A9 61            lda #97
002F92r 2  95 00            sta $00,x
002F94r 2  A9 1E            lda #30
002F96r 2  95 01            sta $01,x
002F98r 2               
002F98r 2               ; <inline>:0:0 in `main`
002F98r 2               @OPCODE_1538:   ; [c64_ir] AltPush
002F98r 2  CA               dex
002F99r 2  CA               dex
002F9Ar 2  B5 03            lda $03,x
002F9Cr 2  48               pha
002F9Dr 2  B5 02            lda $02,x
002F9Fr 2  48               pha
002FA0r 2               
002FA0r 2               ; <inline>:0:0 in `main`
002FA0r 2               @OPCODE_1539:   ; [c64_ir] PushLiteral(7777)
002FA0r 2  E8               inx
002FA1r 2  E8               inx
002FA2r 2  A9 61            lda #97
002FA4r 2  95 00            sta $00,x
002FA6r 2  A9 1E            lda #30
002FA8r 2  95 01            sta $01,x
002FAAr 2               
002FAAr 2               ; <inline>:0:0 in `main`
002FAAr 2               @OPCODE_1540:   ; [c64_ir] AltPush
002FAAr 2  CA               dex
002FABr 2  CA               dex
002FACr 2  B5 03            lda $03,x
002FAEr 2  48               pha
002FAFr 2  B5 02            lda $02,x
002FB1r 2  48               pha
002FB2r 2               
002FB2r 2               ; snake.fth:48:34 in `convert-x-y`
002FB2r 2               @OPCODE_1541:   ; [c64_ir] PushLiteral(40)
002FB2r 2  E8               inx
002FB3r 2  E8               inx
002FB4r 2  A9 28            lda #40
002FB6r 2  95 00            sta $00,x
002FB8r 2  A9 00            lda #0
002FBAr 2  95 01            sta $01,x
002FBCr 2               
002FBCr 2               ; <inline>:0:0 in `main`
002FBCr 2               @OPCODE_1542:   ; [c64_ir] PushLiteral(7777)
002FBCr 2  E8               inx
002FBDr 2  E8               inx
002FBEr 2  A9 61            lda #97
002FC0r 2  95 00            sta $00,x
002FC2r 2  A9 1E            lda #30
002FC4r 2  95 01            sta $01,x
002FC6r 2               
002FC6r 2               ; <inline>:0:0 in `main`
002FC6r 2               @OPCODE_1543:   ; [c64_ir] AltPush
002FC6r 2  CA               dex
002FC7r 2  CA               dex
002FC8r 2  B5 03            lda $03,x
002FCAr 2  48               pha
002FCBr 2  B5 02            lda $02,x
002FCDr 2  48               pha
002FCEr 2               
002FCEr 2               ; src/prelude.fth:44:5 in `*`
002FCEr 2               @OPCODE_1544:   ; [c64_ir] AltPush
002FCEr 2  CA               dex
002FCFr 2  CA               dex
002FD0r 2  B5 03            lda $03,x
002FD2r 2  48               pha
002FD3r 2  B5 02            lda $02,x
002FD5r 2  48               pha
002FD6r 2               
002FD6r 2               ; src/prelude.fth:44:8 in `*`
002FD6r 2               @OPCODE_1545:   ; [c64_ir] PushLiteral(0)
002FD6r 2  E8               inx
002FD7r 2  E8               inx
002FD8r 2  A9 00            lda #0
002FDAr 2  95 00            sta $00,x
002FDCr 2  A9 00            lda #0
002FDEr 2  95 01            sta $01,x
002FE0r 2               
002FE0r 2               ; src/prelude.fth:44:10 in `*`
002FE0r 2               @OPCODE_1546:   ; [c64_ir] AltPop
002FE0r 2  E8               inx
002FE1r 2  E8               inx
002FE2r 2  68               pla
002FE3r 2  95 00            sta $00,x
002FE5r 2  68               pla
002FE6r 2  95 01            sta $01,x
002FE8r 2               
002FE8r 2               ; src/prelude.fth:44:13 in `*`
002FE8r 2               @OPCODE_1547:   ; [c64_ir] PushLiteral(0)
002FE8r 2  E8               inx
002FE9r 2  E8               inx
002FEAr 2  A9 00            lda #0
002FECr 2  95 00            sta $00,x
002FEEr 2  A9 00            lda #0
002FF0r 2  95 01            sta $01,x
002FF2r 2               
002FF2r 2               ; src/prelude.fth:44:15 in `*`
002FF2r 2               @OPCODE_1548:   ; [c64_ir] AltPush
002FF2r 2  CA               dex
002FF3r 2  CA               dex
002FF4r 2  B5 03            lda $03,x
002FF6r 2  48               pha
002FF7r 2  B5 02            lda $02,x
002FF9r 2  48               pha
002FFAr 2               
002FFAr 2               ; src/prelude.fth:44:15 in `*`
002FFAr 2               @OPCODE_1549:   ; [c64_ir] AltPush
002FFAr 2  CA               dex
002FFBr 2  CA               dex
002FFCr 2  B5 03            lda $03,x
002FFEr 2  48               pha
002FFFr 2  B5 02            lda $02,x
003001r 2  48               pha
003002r 2               
003002r 2               ; src/prelude.fth:44:15 in `*`
003002r 2               @OPCODE_1550:   ; [c64_ir] LoopTarget(55)
003002r 2               
003002r 2               @target_56:
003002r 2               
003002r 2               ; <inline>:0:0 in `main`
003002r 2               @OPCODE_1552:   ; [c64_ir] PushLiteral(7777)
003002r 2  E8               inx
003003r 2  E8               inx
003004r 2  A9 61            lda #97
003006r 2  95 00            sta $00,x
003008r 2  A9 1E            lda #30
00300Ar 2  95 01            sta $01,x
00300Cr 2               
00300Cr 2               ; <inline>:0:0 in `main`
00300Cr 2               @OPCODE_1553:   ; [c64_ir] AltPush
00300Cr 2  CA               dex
00300Dr 2  CA               dex
00300Er 2  B5 03            lda $03,x
003010r 2  48               pha
003011r 2  B5 02            lda $02,x
003013r 2  48               pha
003014r 2               
003014r 2               ; src/prelude.fth:4:10 in `over`
003014r 2               @OPCODE_1554:   ; [c64_ir] AltPush
003014r 2  CA               dex
003015r 2  CA               dex
003016r 2  B5 03            lda $03,x
003018r 2  48               pha
003019r 2  B5 02            lda $02,x
00301Br 2  48               pha
00301Cr 2               
00301Cr 2               ; src/prelude.fth:4:13 in `over`
00301Cr 2               @OPCODE_1555:   ; [c64_ir] TempStore
00301Cr 2  CA               dex
00301Dr 2  CA               dex
00301Er 2  B5 03            lda $03,x
003020r 2  85 96            sta TEMP_PAX2
003022r 2  B5 02            lda $02,x
003024r 2  85 95            sta TEMP_PAX1
003026r 2               
003026r 2               ; src/prelude.fth:4:19 in `over`
003026r 2               @OPCODE_1556:   ; [c64_ir] TempLoad
003026r 2  E8               inx
003027r 2  E8               inx
003028r 2  A5 95            lda TEMP_PAX1
00302Ar 2  95 00            sta $00,x
00302Cr 2  A5 96            lda TEMP_PAX2
00302Er 2  95 01            sta $01,x
003030r 2               
003030r 2               ; src/prelude.fth:4:25 in `over`
003030r 2               @OPCODE_1557:   ; [c64_ir] AltPop
003030r 2  E8               inx
003031r 2  E8               inx
003032r 2  68               pla
003033r 2  95 00            sta $00,x
003035r 2  68               pla
003036r 2  95 01            sta $01,x
003038r 2               
003038r 2               ; src/prelude.fth:4:28 in `over`
003038r 2               @OPCODE_1558:   ; [c64_ir] TempLoad
003038r 2  E8               inx
003039r 2  E8               inx
00303Ar 2  A5 95            lda TEMP_PAX1
00303Cr 2  95 00            sta $00,x
00303Er 2  A5 96            lda TEMP_PAX2
003040r 2  95 01            sta $01,x
003042r 2               
003042r 2               ; <inline>:0:0 in `main`
003042r 2               @OPCODE_1559:   ; [c64_ir] AltPop
003042r 2  E8               inx
003043r 2  E8               inx
003044r 2  68               pla
003045r 2  95 00            sta $00,x
003047r 2  68               pla
003048r 2  95 01            sta $01,x
00304Ar 2               
00304Ar 2               ; <inline>:0:0 in `main`
00304Ar 2               @OPCODE_1560:   ; [c64_ir] Drop
00304Ar 2  CA               dex
00304Br 2  CA               dex
00304Cr 2               
00304Cr 2               ; src/prelude.fth:44:23 in `*`
00304Cr 2               @OPCODE_1561:   ; [c64_ir] Add
00304Cr 2                   ; 21
00304Cr 2  CA               dex
00304Dr 2  CA               dex
00304Er 2  18               clc
00304Fr 2  B5 00            lda $00,x
003051r 2  75 02            adc $02,x
003053r 2  95 00            sta $00,x
003055r 2  B5 01            lda $01,x
003057r 2  75 03            adc $03,x
003059r 2  95 01            sta $01,x
00305Br 2               
00305Br 2               ; <inline>:0:0 in `main`
00305Br 2               @OPCODE_1562:   ; [c64_ir] PushLiteral(7777)
00305Br 2  E8               inx
00305Cr 2  E8               inx
00305Dr 2  A9 61            lda #97
00305Fr 2  95 00            sta $00,x
003061r 2  A9 1E            lda #30
003063r 2  95 01            sta $01,x
003065r 2               
003065r 2               ; <inline>:0:0 in `main`
003065r 2               @OPCODE_1563:   ; [c64_ir] AltPush
003065r 2  CA               dex
003066r 2  CA               dex
003067r 2  B5 03            lda $03,x
003069r 2  48               pha
00306Ar 2  B5 02            lda $02,x
00306Cr 2  48               pha
00306Dr 2               
00306Dr 2               ; src/prelude.fth:33:12 in `loopimpl`
00306Dr 2               @OPCODE_1564:   ; [c64_ir] AltPop
00306Dr 2  E8               inx
00306Er 2  E8               inx
00306Fr 2  68               pla
003070r 2  95 00            sta $00,x
003072r 2  68               pla
003073r 2  95 01            sta $01,x
003075r 2               
003075r 2               ; src/prelude.fth:33:15 in `loopimpl`
003075r 2               @OPCODE_1565:   ; [c64_ir] AltPop
003075r 2  E8               inx
003076r 2  E8               inx
003077r 2  68               pla
003078r 2  95 00            sta $00,x
00307Ar 2  68               pla
00307Br 2  95 01            sta $01,x
00307Dr 2               
00307Dr 2               ; src/prelude.fth:33:18 in `loopimpl`
00307Dr 2               @OPCODE_1566:   ; [c64_ir] AltPop
00307Dr 2  E8               inx
00307Er 2  E8               inx
00307Fr 2  68               pla
003080r 2  95 00            sta $00,x
003082r 2  68               pla
003083r 2  95 01            sta $01,x
003085r 2               
003085r 2               ; <inline>:0:0 in `main`
003085r 2               @OPCODE_1567:   ; [c64_ir] PushLiteral(7777)
003085r 2  E8               inx
003086r 2  E8               inx
003087r 2  A9 61            lda #97
003089r 2  95 00            sta $00,x
00308Br 2  A9 1E            lda #30
00308Dr 2  95 01            sta $01,x
00308Fr 2               
00308Fr 2               ; <inline>:0:0 in `main`
00308Fr 2               @OPCODE_1568:   ; [c64_ir] AltPush
00308Fr 2  CA               dex
003090r 2  CA               dex
003091r 2  B5 03            lda $03,x
003093r 2  48               pha
003094r 2  B5 02            lda $02,x
003096r 2  48               pha
003097r 2               
003097r 2               ; src/prelude.fth:18:8 in `1+`
003097r 2               @OPCODE_1569:   ; [c64_ir] PushLiteral(1)
003097r 2  E8               inx
003098r 2  E8               inx
003099r 2  A9 01            lda #1
00309Br 2  95 00            sta $00,x
00309Dr 2  A9 00            lda #0
00309Fr 2  95 01            sta $01,x
0030A1r 2               
0030A1r 2               ; src/prelude.fth:18:10 in `1+`
0030A1r 2               @OPCODE_1570:   ; [c64_ir] Add
0030A1r 2                   ; 21
0030A1r 2  CA               dex
0030A2r 2  CA               dex
0030A3r 2  18               clc
0030A4r 2  B5 00            lda $00,x
0030A6r 2  75 02            adc $02,x
0030A8r 2  95 00            sta $00,x
0030AAr 2  B5 01            lda $01,x
0030ACr 2  75 03            adc $03,x
0030AEr 2  95 01            sta $01,x
0030B0r 2               
0030B0r 2               ; <inline>:0:0 in `main`
0030B0r 2               @OPCODE_1571:   ; [c64_ir] AltPop
0030B0r 2  E8               inx
0030B1r 2  E8               inx
0030B2r 2  68               pla
0030B3r 2  95 00            sta $00,x
0030B5r 2  68               pla
0030B6r 2  95 01            sta $01,x
0030B8r 2               
0030B8r 2               ; <inline>:0:0 in `main`
0030B8r 2               @OPCODE_1572:   ; [c64_ir] Drop
0030B8r 2  CA               dex
0030B9r 2  CA               dex
0030BAr 2               
0030BAr 2               ; <inline>:0:0 in `main`
0030BAr 2               @OPCODE_1573:   ; [c64_ir] PushLiteral(7777)
0030BAr 2  E8               inx
0030BBr 2  E8               inx
0030BCr 2  A9 61            lda #97
0030BEr 2  95 00            sta $00,x
0030C0r 2  A9 1E            lda #30
0030C2r 2  95 01            sta $01,x
0030C4r 2               
0030C4r 2               ; <inline>:0:0 in `main`
0030C4r 2               @OPCODE_1574:   ; [c64_ir] AltPush
0030C4r 2  CA               dex
0030C5r 2  CA               dex
0030C6r 2  B5 03            lda $03,x
0030C8r 2  48               pha
0030C9r 2  B5 02            lda $02,x
0030CBr 2  48               pha
0030CCr 2               
0030CCr 2               ; <inline>:0:0 in `main`
0030CCr 2               @OPCODE_1575:   ; [c64_ir] PushLiteral(7777)
0030CCr 2  E8               inx
0030CDr 2  E8               inx
0030CEr 2  A9 61            lda #97
0030D0r 2  95 00            sta $00,x
0030D2r 2  A9 1E            lda #30
0030D4r 2  95 01            sta $01,x
0030D6r 2               
0030D6r 2               ; <inline>:0:0 in `main`
0030D6r 2               @OPCODE_1576:   ; [c64_ir] AltPush
0030D6r 2  CA               dex
0030D7r 2  CA               dex
0030D8r 2  B5 03            lda $03,x
0030DAr 2  48               pha
0030DBr 2  B5 02            lda $02,x
0030DDr 2  48               pha
0030DEr 2               
0030DEr 2               ; src/prelude.fth:4:10 in `over`
0030DEr 2               @OPCODE_1577:   ; [c64_ir] AltPush
0030DEr 2  CA               dex
0030DFr 2  CA               dex
0030E0r 2  B5 03            lda $03,x
0030E2r 2  48               pha
0030E3r 2  B5 02            lda $02,x
0030E5r 2  48               pha
0030E6r 2               
0030E6r 2               ; src/prelude.fth:4:13 in `over`
0030E6r 2               @OPCODE_1578:   ; [c64_ir] TempStore
0030E6r 2  CA               dex
0030E7r 2  CA               dex
0030E8r 2  B5 03            lda $03,x
0030EAr 2  85 96            sta TEMP_PAX2
0030ECr 2  B5 02            lda $02,x
0030EEr 2  85 95            sta TEMP_PAX1
0030F0r 2               
0030F0r 2               ; src/prelude.fth:4:19 in `over`
0030F0r 2               @OPCODE_1579:   ; [c64_ir] TempLoad
0030F0r 2  E8               inx
0030F1r 2  E8               inx
0030F2r 2  A5 95            lda TEMP_PAX1
0030F4r 2  95 00            sta $00,x
0030F6r 2  A5 96            lda TEMP_PAX2
0030F8r 2  95 01            sta $01,x
0030FAr 2               
0030FAr 2               ; src/prelude.fth:4:25 in `over`
0030FAr 2               @OPCODE_1580:   ; [c64_ir] AltPop
0030FAr 2  E8               inx
0030FBr 2  E8               inx
0030FCr 2  68               pla
0030FDr 2  95 00            sta $00,x
0030FFr 2  68               pla
003100r 2  95 01            sta $01,x
003102r 2               
003102r 2               ; src/prelude.fth:4:28 in `over`
003102r 2               @OPCODE_1581:   ; [c64_ir] TempLoad
003102r 2  E8               inx
003103r 2  E8               inx
003104r 2  A5 95            lda TEMP_PAX1
003106r 2  95 00            sta $00,x
003108r 2  A5 96            lda TEMP_PAX2
00310Ar 2  95 01            sta $01,x
00310Cr 2               
00310Cr 2               ; <inline>:0:0 in `main`
00310Cr 2               @OPCODE_1582:   ; [c64_ir] AltPop
00310Cr 2  E8               inx
00310Dr 2  E8               inx
00310Er 2  68               pla
00310Fr 2  95 00            sta $00,x
003111r 2  68               pla
003112r 2  95 01            sta $01,x
003114r 2               
003114r 2               ; <inline>:0:0 in `main`
003114r 2               @OPCODE_1583:   ; [c64_ir] Drop
003114r 2  CA               dex
003115r 2  CA               dex
003116r 2               
003116r 2               ; <inline>:0:0 in `main`
003116r 2               @OPCODE_1584:   ; [c64_ir] PushLiteral(7777)
003116r 2  E8               inx
003117r 2  E8               inx
003118r 2  A9 61            lda #97
00311Ar 2  95 00            sta $00,x
00311Cr 2  A9 1E            lda #30
00311Er 2  95 01            sta $01,x
003120r 2               
003120r 2               ; <inline>:0:0 in `main`
003120r 2               @OPCODE_1585:   ; [c64_ir] AltPush
003120r 2  CA               dex
003121r 2  CA               dex
003122r 2  B5 03            lda $03,x
003124r 2  48               pha
003125r 2  B5 02            lda $02,x
003127r 2  48               pha
003128r 2               
003128r 2               ; src/prelude.fth:4:10 in `over`
003128r 2               @OPCODE_1586:   ; [c64_ir] AltPush
003128r 2  CA               dex
003129r 2  CA               dex
00312Ar 2  B5 03            lda $03,x
00312Cr 2  48               pha
00312Dr 2  B5 02            lda $02,x
00312Fr 2  48               pha
003130r 2               
003130r 2               ; src/prelude.fth:4:13 in `over`
003130r 2               @OPCODE_1587:   ; [c64_ir] TempStore
003130r 2  CA               dex
003131r 2  CA               dex
003132r 2  B5 03            lda $03,x
003134r 2  85 96            sta TEMP_PAX2
003136r 2  B5 02            lda $02,x
003138r 2  85 95            sta TEMP_PAX1
00313Ar 2               
00313Ar 2               ; src/prelude.fth:4:19 in `over`
00313Ar 2               @OPCODE_1588:   ; [c64_ir] TempLoad
00313Ar 2  E8               inx
00313Br 2  E8               inx
00313Cr 2  A5 95            lda TEMP_PAX1
00313Er 2  95 00            sta $00,x
003140r 2  A5 96            lda TEMP_PAX2
003142r 2  95 01            sta $01,x
003144r 2               
003144r 2               ; src/prelude.fth:4:25 in `over`
003144r 2               @OPCODE_1589:   ; [c64_ir] AltPop
003144r 2  E8               inx
003145r 2  E8               inx
003146r 2  68               pla
003147r 2  95 00            sta $00,x
003149r 2  68               pla
00314Ar 2  95 01            sta $01,x
00314Cr 2               
00314Cr 2               ; src/prelude.fth:4:28 in `over`
00314Cr 2               @OPCODE_1590:   ; [c64_ir] TempLoad
00314Cr 2  E8               inx
00314Dr 2  E8               inx
00314Er 2  A5 95            lda TEMP_PAX1
003150r 2  95 00            sta $00,x
003152r 2  A5 96            lda TEMP_PAX2
003154r 2  95 01            sta $01,x
003156r 2               
003156r 2               ; <inline>:0:0 in `main`
003156r 2               @OPCODE_1591:   ; [c64_ir] AltPop
003156r 2  E8               inx
003157r 2  E8               inx
003158r 2  68               pla
003159r 2  95 00            sta $00,x
00315Br 2  68               pla
00315Cr 2  95 01            sta $01,x
00315Er 2               
00315Er 2               ; <inline>:0:0 in `main`
00315Er 2               @OPCODE_1592:   ; [c64_ir] Drop
00315Er 2  CA               dex
00315Fr 2  CA               dex
003160r 2               
003160r 2               ; <inline>:0:0 in `main`
003160r 2               @OPCODE_1593:   ; [c64_ir] AltPop
003160r 2  E8               inx
003161r 2  E8               inx
003162r 2  68               pla
003163r 2  95 00            sta $00,x
003165r 2  68               pla
003166r 2  95 01            sta $01,x
003168r 2               
003168r 2               ; <inline>:0:0 in `main`
003168r 2               @OPCODE_1594:   ; [c64_ir] Drop
003168r 2  CA               dex
003169r 2  CA               dex
00316Ar 2               
00316Ar 2               ; src/prelude.fth:33:29 in `loopimpl`
00316Ar 2               @OPCODE_1595:   ; [c64_ir] AltPush
00316Ar 2  CA               dex
00316Br 2  CA               dex
00316Cr 2  B5 03            lda $03,x
00316Er 2  48               pha
00316Fr 2  B5 02            lda $02,x
003171r 2  48               pha
003172r 2               
003172r 2               ; src/prelude.fth:33:32 in `loopimpl`
003172r 2               @OPCODE_1596:   ; [c64_ir] AltPush
003172r 2  CA               dex
003173r 2  CA               dex
003174r 2  B5 03            lda $03,x
003176r 2  48               pha
003177r 2  B5 02            lda $02,x
003179r 2  48               pha
00317Ar 2               
00317Ar 2               ; <inline>:0:0 in `main`
00317Ar 2               @OPCODE_1597:   ; [c64_ir] PushLiteral(7777)
00317Ar 2  E8               inx
00317Br 2  E8               inx
00317Cr 2  A9 61            lda #97
00317Er 2  95 00            sta $00,x
003180r 2  A9 1E            lda #30
003182r 2  95 01            sta $01,x
003184r 2               
003184r 2               ; <inline>:0:0 in `main`
003184r 2               @OPCODE_1598:   ; [c64_ir] AltPush
003184r 2  CA               dex
003185r 2  CA               dex
003186r 2  B5 03            lda $03,x
003188r 2  48               pha
003189r 2  B5 02            lda $02,x
00318Br 2  48               pha
00318Cr 2               
00318Cr 2               ; <inline>:0:0 in `main`
00318Cr 2               @OPCODE_1599:   ; [c64_ir] PushLiteral(7777)
00318Cr 2  E8               inx
00318Dr 2  E8               inx
00318Er 2  A9 61            lda #97
003190r 2  95 00            sta $00,x
003192r 2  A9 1E            lda #30
003194r 2  95 01            sta $01,x
003196r 2               
003196r 2               ; <inline>:0:0 in `main`
003196r 2               @OPCODE_1600:   ; [c64_ir] AltPush
003196r 2  CA               dex
003197r 2  CA               dex
003198r 2  B5 03            lda $03,x
00319Ar 2  48               pha
00319Br 2  B5 02            lda $02,x
00319Dr 2  48               pha
00319Er 2               
00319Er 2               ; <inline>:0:0 in `main`
00319Er 2               @OPCODE_1601:   ; [c64_ir] PushLiteral(7777)
00319Er 2  E8               inx
00319Fr 2  E8               inx
0031A0r 2  A9 61            lda #97
0031A2r 2  95 00            sta $00,x
0031A4r 2  A9 1E            lda #30
0031A6r 2  95 01            sta $01,x
0031A8r 2               
0031A8r 2               ; <inline>:0:0 in `main`
0031A8r 2               @OPCODE_1602:   ; [c64_ir] AltPush
0031A8r 2  CA               dex
0031A9r 2  CA               dex
0031AAr 2  B5 03            lda $03,x
0031ACr 2  48               pha
0031ADr 2  B5 02            lda $02,x
0031AFr 2  48               pha
0031B0r 2               
0031B0r 2               ; <inline>:0:0 in `main`
0031B0r 2               @OPCODE_1603:   ; [c64_ir] PushLiteral(7777)
0031B0r 2  E8               inx
0031B1r 2  E8               inx
0031B2r 2  A9 61            lda #97
0031B4r 2  95 00            sta $00,x
0031B6r 2  A9 1E            lda #30
0031B8r 2  95 01            sta $01,x
0031BAr 2               
0031BAr 2               ; <inline>:0:0 in `main`
0031BAr 2               @OPCODE_1604:   ; [c64_ir] AltPush
0031BAr 2  CA               dex
0031BBr 2  CA               dex
0031BCr 2  B5 03            lda $03,x
0031BEr 2  48               pha
0031BFr 2  B5 02            lda $02,x
0031C1r 2  48               pha
0031C2r 2               
0031C2r 2               ; src/prelude.fth:14:12 in `invert`
0031C2r 2               @OPCODE_1605:   ; [c64_ir] PushLiteral(-1)
0031C2r 2  E8               inx
0031C3r 2  E8               inx
0031C4r 2  A9 FF            lda #255
0031C6r 2  95 00            sta $00,x
0031C8r 2  A9 FF            lda #255
0031CAr 2  95 01            sta $01,x
0031CCr 2               
0031CCr 2               ; src/prelude.fth:14:15 in `invert`
0031CCr 2               @OPCODE_1606:   ; [c64_ir] Nand
0031CCr 2                   ; 26
0031CCr 2  CA               dex
0031CDr 2  CA               dex
0031CEr 2  B5 00            lda $00,x
0031D0r 2  35 02            and $02,x
0031D2r 2  49 FF            eor #$ff
0031D4r 2  95 00            sta $00,x
0031D6r 2  B5 01            lda $01,x
0031D8r 2  35 03            and $03,x
0031DAr 2  49 FF            eor #$ff
0031DCr 2  95 01            sta $01,x
0031DEr 2               
0031DEr 2               ; <inline>:0:0 in `main`
0031DEr 2               @OPCODE_1607:   ; [c64_ir] AltPop
0031DEr 2  E8               inx
0031DFr 2  E8               inx
0031E0r 2  68               pla
0031E1r 2  95 00            sta $00,x
0031E3r 2  68               pla
0031E4r 2  95 01            sta $01,x
0031E6r 2               
0031E6r 2               ; <inline>:0:0 in `main`
0031E6r 2               @OPCODE_1608:   ; [c64_ir] Drop
0031E6r 2  CA               dex
0031E7r 2  CA               dex
0031E8r 2               
0031E8r 2               ; src/prelude.fth:15:19 in `negate`
0031E8r 2               @OPCODE_1609:   ; [c64_ir] PushLiteral(1)
0031E8r 2  E8               inx
0031E9r 2  E8               inx
0031EAr 2  A9 01            lda #1
0031ECr 2  95 00            sta $00,x
0031EEr 2  A9 00            lda #0
0031F0r 2  95 01            sta $01,x
0031F2r 2               
0031F2r 2               ; src/prelude.fth:15:21 in `negate`
0031F2r 2               @OPCODE_1610:   ; [c64_ir] Add
0031F2r 2                   ; 21
0031F2r 2  CA               dex
0031F3r 2  CA               dex
0031F4r 2  18               clc
0031F5r 2  B5 00            lda $00,x
0031F7r 2  75 02            adc $02,x
0031F9r 2  95 00            sta $00,x
0031FBr 2  B5 01            lda $01,x
0031FDr 2  75 03            adc $03,x
0031FFr 2  95 01            sta $01,x
003201r 2               
003201r 2               ; <inline>:0:0 in `main`
003201r 2               @OPCODE_1611:   ; [c64_ir] AltPop
003201r 2  E8               inx
003202r 2  E8               inx
003203r 2  68               pla
003204r 2  95 00            sta $00,x
003206r 2  68               pla
003207r 2  95 01            sta $01,x
003209r 2               
003209r 2               ; <inline>:0:0 in `main`
003209r 2               @OPCODE_1612:   ; [c64_ir] Drop
003209r 2  CA               dex
00320Ar 2  CA               dex
00320Br 2               
00320Br 2               ; src/prelude.fth:16:19 in `-`
00320Br 2               @OPCODE_1613:   ; [c64_ir] Add
00320Br 2                   ; 21
00320Br 2  CA               dex
00320Cr 2  CA               dex
00320Dr 2  18               clc
00320Er 2  B5 00            lda $00,x
003210r 2  75 02            adc $02,x
003212r 2  95 00            sta $00,x
003214r 2  B5 01            lda $01,x
003216r 2  75 03            adc $03,x
003218r 2  95 01            sta $01,x
00321Ar 2               
00321Ar 2               ; <inline>:0:0 in `main`
00321Ar 2               @OPCODE_1614:   ; [c64_ir] AltPop
00321Ar 2  E8               inx
00321Br 2  E8               inx
00321Cr 2  68               pla
00321Dr 2  95 00            sta $00,x
00321Fr 2  68               pla
003220r 2  95 01            sta $01,x
003222r 2               
003222r 2               ; <inline>:0:0 in `main`
003222r 2               @OPCODE_1615:   ; [c64_ir] Drop
003222r 2  CA               dex
003223r 2  CA               dex
003224r 2               
003224r 2               ; <inline>:0:0 in `main`
003224r 2               @OPCODE_1616:   ; [c64_ir] PushLiteral(7777)
003224r 2  E8               inx
003225r 2  E8               inx
003226r 2  A9 61            lda #97
003228r 2  95 00            sta $00,x
00322Ar 2  A9 1E            lda #30
00322Cr 2  95 01            sta $01,x
00322Er 2               
00322Er 2               ; <inline>:0:0 in `main`
00322Er 2               @OPCODE_1617:   ; [c64_ir] AltPush
00322Er 2  CA               dex
00322Fr 2  CA               dex
003230r 2  B5 03            lda $03,x
003232r 2  48               pha
003233r 2  B5 02            lda $02,x
003235r 2  48               pha
003236r 2               
003236r 2               ; src/prelude.fth:21:8 in `0=`
003236r 2               @OPCODE_1618:   ; [c64_ir] JumpIf0(58)
003236r 2  CA               dex
003237r 2  CA               dex
003238r 2  B5 02            lda $02,x
00323Ar 2  15 03            ora $03,x
00323Cr 2  D0 03            bne *+5
00323Er 2  4C rr rr         jmp @target_58
003241r 2               
003241r 2               @target_57:
003241r 2               
003241r 2               ; src/prelude.fth:21:11 in `0=`
003241r 2               @OPCODE_1620:   ; [c64_ir] PushLiteral(0)
003241r 2  E8               inx
003242r 2  E8               inx
003243r 2  A9 00            lda #0
003245r 2  95 00            sta $00,x
003247r 2  A9 00            lda #0
003249r 2  95 01            sta $01,x
00324Br 2               
00324Br 2               ; src/prelude.fth:21:13 in `0=`
00324Br 2               @OPCODE_1621:   ; [c64_ir] JumpElse(59)
00324Br 2  4C rr rr         jmp @target_59
00324Er 2               
00324Er 2               @target_58:
00324Er 2               
00324Er 2               ; src/prelude.fth:21:18 in `0=`
00324Er 2               @OPCODE_1623:   ; [c64_ir] PushLiteral(-1)
00324Er 2  E8               inx
00324Fr 2  E8               inx
003250r 2  A9 FF            lda #255
003252r 2  95 00            sta $00,x
003254r 2  A9 FF            lda #255
003256r 2  95 01            sta $01,x
003258r 2               
003258r 2               ; src/prelude.fth:21:21 in `0=`
003258r 2               @OPCODE_1624:   ; [c64_ir] JumpTarget(58)
003258r 2               
003258r 2               @target_59:
003258r 2               
003258r 2               ; <inline>:0:0 in `main`
003258r 2               @OPCODE_1626:   ; [c64_ir] AltPop
003258r 2  E8               inx
003259r 2  E8               inx
00325Ar 2  68               pla
00325Br 2  95 00            sta $00,x
00325Dr 2  68               pla
00325Er 2  95 01            sta $01,x
003260r 2               
003260r 2               ; <inline>:0:0 in `main`
003260r 2               @OPCODE_1627:   ; [c64_ir] Drop
003260r 2  CA               dex
003261r 2  CA               dex
003262r 2               
003262r 2               ; <inline>:0:0 in `main`
003262r 2               @OPCODE_1628:   ; [c64_ir] AltPop
003262r 2  E8               inx
003263r 2  E8               inx
003264r 2  68               pla
003265r 2  95 00            sta $00,x
003267r 2  68               pla
003268r 2  95 01            sta $01,x
00326Ar 2               
00326Ar 2               ; <inline>:0:0 in `main`
00326Ar 2               @OPCODE_1629:   ; [c64_ir] Drop
00326Ar 2  CA               dex
00326Br 2  CA               dex
00326Cr 2               
00326Cr 2               ; <inline>:0:0 in `main`
00326Cr 2               @OPCODE_1630:   ; [c64_ir] PushLiteral(7777)
00326Cr 2  E8               inx
00326Dr 2  E8               inx
00326Er 2  A9 61            lda #97
003270r 2  95 00            sta $00,x
003272r 2  A9 1E            lda #30
003274r 2  95 01            sta $01,x
003276r 2               
003276r 2               ; <inline>:0:0 in `main`
003276r 2               @OPCODE_1631:   ; [c64_ir] AltPush
003276r 2  CA               dex
003277r 2  CA               dex
003278r 2  B5 03            lda $03,x
00327Ar 2  48               pha
00327Br 2  B5 02            lda $02,x
00327Dr 2  48               pha
00327Er 2               
00327Er 2               ; src/prelude.fth:3:10 in `swap`
00327Er 2               @OPCODE_1632:   ; [c64_ir] AltPush
00327Er 2  CA               dex
00327Fr 2  CA               dex
003280r 2  B5 03            lda $03,x
003282r 2  48               pha
003283r 2  B5 02            lda $02,x
003285r 2  48               pha
003286r 2               
003286r 2               ; src/prelude.fth:3:13 in `swap`
003286r 2               @OPCODE_1633:   ; [c64_ir] TempStore
003286r 2  CA               dex
003287r 2  CA               dex
003288r 2  B5 03            lda $03,x
00328Ar 2  85 96            sta TEMP_PAX2
00328Cr 2  B5 02            lda $02,x
00328Er 2  85 95            sta TEMP_PAX1
003290r 2               
003290r 2               ; src/prelude.fth:3:19 in `swap`
003290r 2               @OPCODE_1634:   ; [c64_ir] AltPop
003290r 2  E8               inx
003291r 2  E8               inx
003292r 2  68               pla
003293r 2  95 00            sta $00,x
003295r 2  68               pla
003296r 2  95 01            sta $01,x
003298r 2               
003298r 2               ; src/prelude.fth:3:22 in `swap`
003298r 2               @OPCODE_1635:   ; [c64_ir] TempLoad
003298r 2  E8               inx
003299r 2  E8               inx
00329Ar 2  A5 95            lda TEMP_PAX1
00329Cr 2  95 00            sta $00,x
00329Er 2  A5 96            lda TEMP_PAX2
0032A0r 2  95 01            sta $01,x
0032A2r 2               
0032A2r 2               ; <inline>:0:0 in `main`
0032A2r 2               @OPCODE_1636:   ; [c64_ir] AltPop
0032A2r 2  E8               inx
0032A3r 2  E8               inx
0032A4r 2  68               pla
0032A5r 2  95 00            sta $00,x
0032A7r 2  68               pla
0032A8r 2  95 01            sta $01,x
0032AAr 2               
0032AAr 2               ; <inline>:0:0 in `main`
0032AAr 2               @OPCODE_1637:   ; [c64_ir] Drop
0032AAr 2  CA               dex
0032ABr 2  CA               dex
0032ACr 2               
0032ACr 2               ; src/prelude.fth:33:42 in `loopimpl`
0032ACr 2               @OPCODE_1638:   ; [c64_ir] AltPush
0032ACr 2  CA               dex
0032ADr 2  CA               dex
0032AEr 2  B5 03            lda $03,x
0032B0r 2  48               pha
0032B1r 2  B5 02            lda $02,x
0032B3r 2  48               pha
0032B4r 2               
0032B4r 2               ; <inline>:0:0 in `main`
0032B4r 2               @OPCODE_1639:   ; [c64_ir] AltPop
0032B4r 2  E8               inx
0032B5r 2  E8               inx
0032B6r 2  68               pla
0032B7r 2  95 00            sta $00,x
0032B9r 2  68               pla
0032BAr 2  95 01            sta $01,x
0032BCr 2               
0032BCr 2               ; <inline>:0:0 in `main`
0032BCr 2               @OPCODE_1640:   ; [c64_ir] Drop
0032BCr 2  CA               dex
0032BDr 2  CA               dex
0032BEr 2               
0032BEr 2               ; src/prelude.fth:44:25 in `*`
0032BEr 2               @OPCODE_1641:   ; [c64_ir] LoopIf0(56)
0032BEr 2  CA               dex
0032BFr 2  CA               dex
0032C0r 2  B5 02            lda $02,x
0032C2r 2  15 03            ora $03,x
0032C4r 2  D0 03            bne *+5
0032C6r 2  4C rr rr         jmp @target_56
0032C9r 2               
0032C9r 2               @target_60:
0032C9r 2               
0032C9r 2               ; src/prelude.fth:44:25 in `*`
0032C9r 2               @OPCODE_1643:   ; [c64_ir] AltPop
0032C9r 2  E8               inx
0032CAr 2  E8               inx
0032CBr 2  68               pla
0032CCr 2  95 00            sta $00,x
0032CEr 2  68               pla
0032CFr 2  95 01            sta $01,x
0032D1r 2               
0032D1r 2               ; src/prelude.fth:44:25 in `*`
0032D1r 2               @OPCODE_1644:   ; [c64_ir] Drop
0032D1r 2  CA               dex
0032D2r 2  CA               dex
0032D3r 2               
0032D3r 2               ; src/prelude.fth:44:25 in `*`
0032D3r 2               @OPCODE_1645:   ; [c64_ir] AltPop
0032D3r 2  E8               inx
0032D4r 2  E8               inx
0032D5r 2  68               pla
0032D6r 2  95 00            sta $00,x
0032D8r 2  68               pla
0032D9r 2  95 01            sta $01,x
0032DBr 2               
0032DBr 2               ; src/prelude.fth:44:25 in `*`
0032DBr 2               @OPCODE_1646:   ; [c64_ir] Drop
0032DBr 2  CA               dex
0032DCr 2  CA               dex
0032DDr 2               
0032DDr 2               ; <inline>:0:0 in `main`
0032DDr 2               @OPCODE_1647:   ; [c64_ir] PushLiteral(7777)
0032DDr 2  E8               inx
0032DEr 2  E8               inx
0032DFr 2  A9 61            lda #97
0032E1r 2  95 00            sta $00,x
0032E3r 2  A9 1E            lda #30
0032E5r 2  95 01            sta $01,x
0032E7r 2               
0032E7r 2               ; <inline>:0:0 in `main`
0032E7r 2               @OPCODE_1648:   ; [c64_ir] AltPush
0032E7r 2  CA               dex
0032E8r 2  CA               dex
0032E9r 2  B5 03            lda $03,x
0032EBr 2  48               pha
0032ECr 2  B5 02            lda $02,x
0032EEr 2  48               pha
0032EFr 2               
0032EFr 2               ; src/prelude.fth:3:10 in `swap`
0032EFr 2               @OPCODE_1649:   ; [c64_ir] AltPush
0032EFr 2  CA               dex
0032F0r 2  CA               dex
0032F1r 2  B5 03            lda $03,x
0032F3r 2  48               pha
0032F4r 2  B5 02            lda $02,x
0032F6r 2  48               pha
0032F7r 2               
0032F7r 2               ; src/prelude.fth:3:13 in `swap`
0032F7r 2               @OPCODE_1650:   ; [c64_ir] TempStore
0032F7r 2  CA               dex
0032F8r 2  CA               dex
0032F9r 2  B5 03            lda $03,x
0032FBr 2  85 96            sta TEMP_PAX2
0032FDr 2  B5 02            lda $02,x
0032FFr 2  85 95            sta TEMP_PAX1
003301r 2               
003301r 2               ; src/prelude.fth:3:19 in `swap`
003301r 2               @OPCODE_1651:   ; [c64_ir] AltPop
003301r 2  E8               inx
003302r 2  E8               inx
003303r 2  68               pla
003304r 2  95 00            sta $00,x
003306r 2  68               pla
003307r 2  95 01            sta $01,x
003309r 2               
003309r 2               ; src/prelude.fth:3:22 in `swap`
003309r 2               @OPCODE_1652:   ; [c64_ir] TempLoad
003309r 2  E8               inx
00330Ar 2  E8               inx
00330Br 2  A5 95            lda TEMP_PAX1
00330Dr 2  95 00            sta $00,x
00330Fr 2  A5 96            lda TEMP_PAX2
003311r 2  95 01            sta $01,x
003313r 2               
003313r 2               ; <inline>:0:0 in `main`
003313r 2               @OPCODE_1653:   ; [c64_ir] AltPop
003313r 2  E8               inx
003314r 2  E8               inx
003315r 2  68               pla
003316r 2  95 00            sta $00,x
003318r 2  68               pla
003319r 2  95 01            sta $01,x
00331Br 2               
00331Br 2               ; <inline>:0:0 in `main`
00331Br 2               @OPCODE_1654:   ; [c64_ir] Drop
00331Br 2  CA               dex
00331Cr 2  CA               dex
00331Dr 2               
00331Dr 2               ; src/prelude.fth:44:35 in `*`
00331Dr 2               @OPCODE_1655:   ; [c64_ir] Drop
00331Dr 2  CA               dex
00331Er 2  CA               dex
00331Fr 2               
00331Fr 2               ; <inline>:0:0 in `main`
00331Fr 2               @OPCODE_1656:   ; [c64_ir] AltPop
00331Fr 2  E8               inx
003320r 2  E8               inx
003321r 2  68               pla
003322r 2  95 00            sta $00,x
003324r 2  68               pla
003325r 2  95 01            sta $01,x
003327r 2               
003327r 2               ; <inline>:0:0 in `main`
003327r 2               @OPCODE_1657:   ; [c64_ir] Drop
003327r 2  CA               dex
003328r 2  CA               dex
003329r 2               
003329r 2               ; snake.fth:48:39 in `convert-x-y`
003329r 2               @OPCODE_1658:   ; [c64_ir] Add
003329r 2                   ; 21
003329r 2  CA               dex
00332Ar 2  CA               dex
00332Br 2  18               clc
00332Cr 2  B5 00            lda $00,x
00332Er 2  75 02            adc $02,x
003330r 2  95 00            sta $00,x
003332r 2  B5 01            lda $01,x
003334r 2  75 03            adc $03,x
003336r 2  95 01            sta $01,x
003338r 2               
003338r 2               ; <inline>:0:0 in `main`
003338r 2               @OPCODE_1659:   ; [c64_ir] AltPop
003338r 2  E8               inx
003339r 2  E8               inx
00333Ar 2  68               pla
00333Br 2  95 00            sta $00,x
00333Dr 2  68               pla
00333Er 2  95 01            sta $01,x
003340r 2               
003340r 2               ; <inline>:0:0 in `main`
003340r 2               @OPCODE_1660:   ; [c64_ir] Drop
003340r 2  CA               dex
003341r 2  CA               dex
003342r 2               
003342r 2               ; <inline>:0:0 in `main`
003342r 2               @OPCODE_1661:   ; [c64_ir] PushLiteral(7777)
003342r 2  E8               inx
003343r 2  E8               inx
003344r 2  A9 61            lda #97
003346r 2  95 00            sta $00,x
003348r 2  A9 1E            lda #30
00334Ar 2  95 01            sta $01,x
00334Cr 2               
00334Cr 2               ; <inline>:0:0 in `main`
00334Cr 2               @OPCODE_1662:   ; [c64_ir] AltPush
00334Cr 2  CA               dex
00334Dr 2  CA               dex
00334Er 2  B5 03            lda $03,x
003350r 2  48               pha
003351r 2  B5 02            lda $02,x
003353r 2  48               pha
003354r 2               
003354r 2               ; snake.fth:49:34 in `draw-index`
003354r 2               @OPCODE_1663:   ; [c64_ir] PushLiteral(1024)
003354r 2  E8               inx
003355r 2  E8               inx
003356r 2  A9 00            lda #0
003358r 2  95 00            sta $00,x
00335Ar 2  A9 04            lda #4
00335Cr 2  95 01            sta $01,x
00335Er 2               
00335Er 2               ; snake.fth:49:43 in `draw-index`
00335Er 2               @OPCODE_1664:   ; [c64_ir] Add
00335Er 2                   ; 21
00335Er 2  CA               dex
00335Fr 2  CA               dex
003360r 2  18               clc
003361r 2  B5 00            lda $00,x
003363r 2  75 02            adc $02,x
003365r 2  95 00            sta $00,x
003367r 2  B5 01            lda $01,x
003369r 2  75 03            adc $03,x
00336Br 2  95 01            sta $01,x
00336Dr 2               
00336Dr 2               ; snake.fth:49:45 in `draw-index`
00336Dr 2               @OPCODE_1665:   ; [c64_ir] Store8
00336Dr 2  CA               dex
00336Er 2  CA               dex
00336Fr 2  CA               dex
003370r 2  CA               dex
003371r 2  B5 02            lda $02,x
003373r 2  81 04            sta ($04,x)
003375r 2                   ; TODO high byte
003375r 2               
003375r 2               ; <inline>:0:0 in `main`
003375r 2               @OPCODE_1666:   ; [c64_ir] AltPop
003375r 2  E8               inx
003376r 2  E8               inx
003377r 2  68               pla
003378r 2  95 00            sta $00,x
00337Ar 2  68               pla
00337Br 2  95 01            sta $01,x
00337Dr 2               
00337Dr 2               ; <inline>:0:0 in `main`
00337Dr 2               @OPCODE_1667:   ; [c64_ir] Drop
00337Dr 2  CA               dex
00337Er 2  CA               dex
00337Fr 2               
00337Fr 2               ; <inline>:0:0 in `main`
00337Fr 2               @OPCODE_1668:   ; [c64_ir] AltPop
00337Fr 2  E8               inx
003380r 2  E8               inx
003381r 2  68               pla
003382r 2  95 00            sta $00,x
003384r 2  68               pla
003385r 2  95 01            sta $01,x
003387r 2               
003387r 2               ; <inline>:0:0 in `main`
003387r 2               @OPCODE_1669:   ; [c64_ir] Drop
003387r 2  CA               dex
003388r 2  CA               dex
003389r 2               
003389r 2               ; <inline>:0:0 in `main`
003389r 2               @OPCODE_1670:   ; [c64_ir] AltPop
003389r 2  E8               inx
00338Ar 2  E8               inx
00338Br 2  68               pla
00338Cr 2  95 00            sta $00,x
00338Er 2  68               pla
00338Fr 2  95 01            sta $01,x
003391r 2               
003391r 2               ; <inline>:0:0 in `main`
003391r 2               @OPCODE_1671:   ; [c64_ir] Drop
003391r 2  CA               dex
003392r 2  CA               dex
003393r 2               
003393r 2               ; snake.fth:203:3 in `draw-snake-head-tail`
003393r 2               @OPCODE_1672:   ; [c64_ir] PushLiteral(-26658)
003393r 2  E8               inx
003394r 2  E8               inx
003395r 2  A9 DE            lda #222
003397r 2  95 00            sta $00,x
003399r 2  A9 97            lda #151
00339Br 2  95 01            sta $01,x
00339Dr 2               
00339Dr 2               ; snake.fth:203:10 in `draw-snake-head-tail`
00339Dr 2               @OPCODE_1673:   ; [c64_ir] Load
00339Dr 2  A1 00            lda ($00,x)
00339Fr 2  95 00            sta $00,x
0033A1r 2  A9 00            lda #0
0033A3r 2  95 01            sta $01,x
0033A5r 2               
0033A5r 2               ; <inline>:0:0 in `main`
0033A5r 2               @OPCODE_1674:   ; [c64_ir] PushLiteral(7777)
0033A5r 2  E8               inx
0033A6r 2  E8               inx
0033A7r 2  A9 61            lda #97
0033A9r 2  95 00            sta $00,x
0033ABr 2  A9 1E            lda #30
0033ADr 2  95 01            sta $01,x
0033AFr 2               
0033AFr 2               ; <inline>:0:0 in `main`
0033AFr 2               @OPCODE_1675:   ; [c64_ir] AltPush
0033AFr 2  CA               dex
0033B0r 2  CA               dex
0033B1r 2  B5 03            lda $03,x
0033B3r 2  48               pha
0033B4r 2  B5 02            lda $02,x
0033B6r 2  48               pha
0033B7r 2               
0033B7r 2               ; <inline>:0:0 in `main`
0033B7r 2               @OPCODE_1676:   ; [c64_ir] PushLiteral(7777)
0033B7r 2  E8               inx
0033B8r 2  E8               inx
0033B9r 2  A9 61            lda #97
0033BBr 2  95 00            sta $00,x
0033BDr 2  A9 1E            lda #30
0033BFr 2  95 01            sta $01,x
0033C1r 2               
0033C1r 2               ; <inline>:0:0 in `main`
0033C1r 2               @OPCODE_1677:   ; [c64_ir] AltPush
0033C1r 2  CA               dex
0033C2r 2  CA               dex
0033C3r 2  B5 03            lda $03,x
0033C5r 2  48               pha
0033C6r 2  B5 02            lda $02,x
0033C8r 2  48               pha
0033C9r 2               
0033C9r 2               ; <inline>:0:0 in `main`
0033C9r 2               @OPCODE_1678:   ; [c64_ir] PushLiteral(7777)
0033C9r 2  E8               inx
0033CAr 2  E8               inx
0033CBr 2  A9 61            lda #97
0033CDr 2  95 00            sta $00,x
0033CFr 2  A9 1E            lda #30
0033D1r 2  95 01            sta $01,x
0033D3r 2               
0033D3r 2               ; <inline>:0:0 in `main`
0033D3r 2               @OPCODE_1679:   ; [c64_ir] AltPush
0033D3r 2  CA               dex
0033D4r 2  CA               dex
0033D5r 2  B5 03            lda $03,x
0033D7r 2  48               pha
0033D8r 2  B5 02            lda $02,x
0033DAr 2  48               pha
0033DBr 2               
0033DBr 2               ; src/prelude.fth:6:10 in `dup`
0033DBr 2               @OPCODE_1680:   ; [c64_ir] TempStore
0033DBr 2  CA               dex
0033DCr 2  CA               dex
0033DDr 2  B5 03            lda $03,x
0033DFr 2  85 96            sta TEMP_PAX2
0033E1r 2  B5 02            lda $02,x
0033E3r 2  85 95            sta TEMP_PAX1
0033E5r 2               
0033E5r 2               ; src/prelude.fth:6:16 in `dup`
0033E5r 2               @OPCODE_1681:   ; [c64_ir] TempLoad
0033E5r 2  E8               inx
0033E6r 2  E8               inx
0033E7r 2  A5 95            lda TEMP_PAX1
0033E9r 2  95 00            sta $00,x
0033EBr 2  A5 96            lda TEMP_PAX2
0033EDr 2  95 01            sta $01,x
0033EFr 2               
0033EFr 2               ; src/prelude.fth:6:22 in `dup`
0033EFr 2               @OPCODE_1682:   ; [c64_ir] TempLoad
0033EFr 2  E8               inx
0033F0r 2  E8               inx
0033F1r 2  A5 95            lda TEMP_PAX1
0033F3r 2  95 00            sta $00,x
0033F5r 2  A5 96            lda TEMP_PAX2
0033F7r 2  95 01            sta $01,x
0033F9r 2               
0033F9r 2               ; <inline>:0:0 in `main`
0033F9r 2               @OPCODE_1683:   ; [c64_ir] AltPop
0033F9r 2  E8               inx
0033FAr 2  E8               inx
0033FBr 2  68               pla
0033FCr 2  95 00            sta $00,x
0033FEr 2  68               pla
0033FFr 2  95 01            sta $01,x
003401r 2               
003401r 2               ; <inline>:0:0 in `main`
003401r 2               @OPCODE_1684:   ; [c64_ir] Drop
003401r 2  CA               dex
003402r 2  CA               dex
003403r 2               
003403r 2               ; src/prelude.fth:41:13 in `cells`
003403r 2               @OPCODE_1685:   ; [c64_ir] Add
003403r 2                   ; 21
003403r 2  CA               dex
003404r 2  CA               dex
003405r 2  18               clc
003406r 2  B5 00            lda $00,x
003408r 2  75 02            adc $02,x
00340Ar 2  95 00            sta $00,x
00340Cr 2  B5 01            lda $01,x
00340Er 2  75 03            adc $03,x
003410r 2  95 01            sta $01,x
003412r 2               
003412r 2               ; <inline>:0:0 in `main`
003412r 2               @OPCODE_1686:   ; [c64_ir] AltPop
003412r 2  E8               inx
003413r 2  E8               inx
003414r 2  68               pla
003415r 2  95 00            sta $00,x
003417r 2  68               pla
003418r 2  95 01            sta $01,x
00341Ar 2               
00341Ar 2               ; <inline>:0:0 in `main`
00341Ar 2               @OPCODE_1687:   ; [c64_ir] Drop
00341Ar 2  CA               dex
00341Br 2  CA               dex
00341Cr 2               
00341Cr 2               ; snake.fth:42:9 in `snake-x`
00341Cr 2               @OPCODE_1688:   ; [c64_ir] PushLiteral(-28668)
00341Cr 2  E8               inx
00341Dr 2  E8               inx
00341Er 2  A9 04            lda #4
003420r 2  95 00            sta $00,x
003422r 2  A9 90            lda #144
003424r 2  95 01            sta $01,x
003426r 2               
003426r 2               ; snake.fth:42:22 in `snake-x`
003426r 2               @OPCODE_1689:   ; [c64_ir] Add
003426r 2                   ; 21
003426r 2  CA               dex
003427r 2  CA               dex
003428r 2  18               clc
003429r 2  B5 00            lda $00,x
00342Br 2  75 02            adc $02,x
00342Dr 2  95 00            sta $00,x
00342Fr 2  B5 01            lda $01,x
003431r 2  75 03            adc $03,x
003433r 2  95 01            sta $01,x
003435r 2               
003435r 2               ; <inline>:0:0 in `main`
003435r 2               @OPCODE_1690:   ; [c64_ir] AltPop
003435r 2  E8               inx
003436r 2  E8               inx
003437r 2  68               pla
003438r 2  95 00            sta $00,x
00343Ar 2  68               pla
00343Br 2  95 01            sta $01,x
00343Dr 2               
00343Dr 2               ; <inline>:0:0 in `main`
00343Dr 2               @OPCODE_1691:   ; [c64_ir] Drop
00343Dr 2  CA               dex
00343Er 2  CA               dex
00343Fr 2               
00343Fr 2               ; snake.fth:203:20 in `draw-snake-head-tail`
00343Fr 2               @OPCODE_1692:   ; [c64_ir] Load
00343Fr 2  A1 00            lda ($00,x)
003441r 2  95 00            sta $00,x
003443r 2  A9 00            lda #0
003445r 2  95 01            sta $01,x
003447r 2               
003447r 2               ; snake.fth:204:3 in `draw-snake-head-tail`
003447r 2               @OPCODE_1693:   ; [c64_ir] PushLiteral(-26658)
003447r 2  E8               inx
003448r 2  E8               inx
003449r 2  A9 DE            lda #222
00344Br 2  95 00            sta $00,x
00344Dr 2  A9 97            lda #151
00344Fr 2  95 01            sta $01,x
003451r 2               
003451r 2               ; snake.fth:204:10 in `draw-snake-head-tail`
003451r 2               @OPCODE_1694:   ; [c64_ir] Load
003451r 2  A1 00            lda ($00,x)
003453r 2  95 00            sta $00,x
003455r 2  A9 00            lda #0
003457r 2  95 01            sta $01,x
003459r 2               
003459r 2               ; <inline>:0:0 in `main`
003459r 2               @OPCODE_1695:   ; [c64_ir] PushLiteral(7777)
003459r 2  E8               inx
00345Ar 2  E8               inx
00345Br 2  A9 61            lda #97
00345Dr 2  95 00            sta $00,x
00345Fr 2  A9 1E            lda #30
003461r 2  95 01            sta $01,x
003463r 2               
003463r 2               ; <inline>:0:0 in `main`
003463r 2               @OPCODE_1696:   ; [c64_ir] AltPush
003463r 2  CA               dex
003464r 2  CA               dex
003465r 2  B5 03            lda $03,x
003467r 2  48               pha
003468r 2  B5 02            lda $02,x
00346Ar 2  48               pha
00346Br 2               
00346Br 2               ; <inline>:0:0 in `main`
00346Br 2               @OPCODE_1697:   ; [c64_ir] PushLiteral(7777)
00346Br 2  E8               inx
00346Cr 2  E8               inx
00346Dr 2  A9 61            lda #97
00346Fr 2  95 00            sta $00,x
003471r 2  A9 1E            lda #30
003473r 2  95 01            sta $01,x
003475r 2               
003475r 2               ; <inline>:0:0 in `main`
003475r 2               @OPCODE_1698:   ; [c64_ir] AltPush
003475r 2  CA               dex
003476r 2  CA               dex
003477r 2  B5 03            lda $03,x
003479r 2  48               pha
00347Ar 2  B5 02            lda $02,x
00347Cr 2  48               pha
00347Dr 2               
00347Dr 2               ; <inline>:0:0 in `main`
00347Dr 2               @OPCODE_1699:   ; [c64_ir] PushLiteral(7777)
00347Dr 2  E8               inx
00347Er 2  E8               inx
00347Fr 2  A9 61            lda #97
003481r 2  95 00            sta $00,x
003483r 2  A9 1E            lda #30
003485r 2  95 01            sta $01,x
003487r 2               
003487r 2               ; <inline>:0:0 in `main`
003487r 2               @OPCODE_1700:   ; [c64_ir] AltPush
003487r 2  CA               dex
003488r 2  CA               dex
003489r 2  B5 03            lda $03,x
00348Br 2  48               pha
00348Cr 2  B5 02            lda $02,x
00348Er 2  48               pha
00348Fr 2               
00348Fr 2               ; src/prelude.fth:6:10 in `dup`
00348Fr 2               @OPCODE_1701:   ; [c64_ir] TempStore
00348Fr 2  CA               dex
003490r 2  CA               dex
003491r 2  B5 03            lda $03,x
003493r 2  85 96            sta TEMP_PAX2
003495r 2  B5 02            lda $02,x
003497r 2  85 95            sta TEMP_PAX1
003499r 2               
003499r 2               ; src/prelude.fth:6:16 in `dup`
003499r 2               @OPCODE_1702:   ; [c64_ir] TempLoad
003499r 2  E8               inx
00349Ar 2  E8               inx
00349Br 2  A5 95            lda TEMP_PAX1
00349Dr 2  95 00            sta $00,x
00349Fr 2  A5 96            lda TEMP_PAX2
0034A1r 2  95 01            sta $01,x
0034A3r 2               
0034A3r 2               ; src/prelude.fth:6:22 in `dup`
0034A3r 2               @OPCODE_1703:   ; [c64_ir] TempLoad
0034A3r 2  E8               inx
0034A4r 2  E8               inx
0034A5r 2  A5 95            lda TEMP_PAX1
0034A7r 2  95 00            sta $00,x
0034A9r 2  A5 96            lda TEMP_PAX2
0034ABr 2  95 01            sta $01,x
0034ADr 2               
0034ADr 2               ; <inline>:0:0 in `main`
0034ADr 2               @OPCODE_1704:   ; [c64_ir] AltPop
0034ADr 2  E8               inx
0034AEr 2  E8               inx
0034AFr 2  68               pla
0034B0r 2  95 00            sta $00,x
0034B2r 2  68               pla
0034B3r 2  95 01            sta $01,x
0034B5r 2               
0034B5r 2               ; <inline>:0:0 in `main`
0034B5r 2               @OPCODE_1705:   ; [c64_ir] Drop
0034B5r 2  CA               dex
0034B6r 2  CA               dex
0034B7r 2               
0034B7r 2               ; src/prelude.fth:41:13 in `cells`
0034B7r 2               @OPCODE_1706:   ; [c64_ir] Add
0034B7r 2                   ; 21
0034B7r 2  CA               dex
0034B8r 2  CA               dex
0034B9r 2  18               clc
0034BAr 2  B5 00            lda $00,x
0034BCr 2  75 02            adc $02,x
0034BEr 2  95 00            sta $00,x
0034C0r 2  B5 01            lda $01,x
0034C2r 2  75 03            adc $03,x
0034C4r 2  95 01            sta $01,x
0034C6r 2               
0034C6r 2               ; <inline>:0:0 in `main`
0034C6r 2               @OPCODE_1707:   ; [c64_ir] AltPop
0034C6r 2  E8               inx
0034C7r 2  E8               inx
0034C8r 2  68               pla
0034C9r 2  95 00            sta $00,x
0034CBr 2  68               pla
0034CCr 2  95 01            sta $01,x
0034CEr 2               
0034CEr 2               ; <inline>:0:0 in `main`
0034CEr 2               @OPCODE_1708:   ; [c64_ir] Drop
0034CEr 2  CA               dex
0034CFr 2  CA               dex
0034D0r 2               
0034D0r 2               ; snake.fth:45:9 in `snake-y`
0034D0r 2               @OPCODE_1709:   ; [c64_ir] PushLiteral(-27666)
0034D0r 2  E8               inx
0034D1r 2  E8               inx
0034D2r 2  A9 EE            lda #238
0034D4r 2  95 00            sta $00,x
0034D6r 2  A9 93            lda #147
0034D8r 2  95 01            sta $01,x
0034DAr 2               
0034DAr 2               ; snake.fth:45:22 in `snake-y`
0034DAr 2               @OPCODE_1710:   ; [c64_ir] Add
0034DAr 2                   ; 21
0034DAr 2  CA               dex
0034DBr 2  CA               dex
0034DCr 2  18               clc
0034DDr 2  B5 00            lda $00,x
0034DFr 2  75 02            adc $02,x
0034E1r 2  95 00            sta $00,x
0034E3r 2  B5 01            lda $01,x
0034E5r 2  75 03            adc $03,x
0034E7r 2  95 01            sta $01,x
0034E9r 2               
0034E9r 2               ; <inline>:0:0 in `main`
0034E9r 2               @OPCODE_1711:   ; [c64_ir] AltPop
0034E9r 2  E8               inx
0034EAr 2  E8               inx
0034EBr 2  68               pla
0034ECr 2  95 00            sta $00,x
0034EEr 2  68               pla
0034EFr 2  95 01            sta $01,x
0034F1r 2               
0034F1r 2               ; <inline>:0:0 in `main`
0034F1r 2               @OPCODE_1712:   ; [c64_ir] Drop
0034F1r 2  CA               dex
0034F2r 2  CA               dex
0034F3r 2               
0034F3r 2               ; snake.fth:204:20 in `draw-snake-head-tail`
0034F3r 2               @OPCODE_1713:   ; [c64_ir] Load
0034F3r 2  A1 00            lda ($00,x)
0034F5r 2  95 00            sta $00,x
0034F7r 2  A9 00            lda #0
0034F9r 2  95 01            sta $01,x
0034FBr 2               
0034FBr 2               ; <inline>:0:0 in `main`
0034FBr 2               @OPCODE_1714:   ; [c64_ir] PushLiteral(7777)
0034FBr 2  E8               inx
0034FCr 2  E8               inx
0034FDr 2  A9 61            lda #97
0034FFr 2  95 00            sta $00,x
003501r 2  A9 1E            lda #30
003503r 2  95 01            sta $01,x
003505r 2               
003505r 2               ; <inline>:0:0 in `main`
003505r 2               @OPCODE_1715:   ; [c64_ir] AltPush
003505r 2  CA               dex
003506r 2  CA               dex
003507r 2  B5 03            lda $03,x
003509r 2  48               pha
00350Ar 2  B5 02            lda $02,x
00350Cr 2  48               pha
00350Dr 2               
00350Dr 2               ; snake.fth:51:26 in `draw-white`
00350Dr 2               @OPCODE_1716:   ; [c64_ir] PushLiteral(32)
00350Dr 2  E8               inx
00350Er 2  E8               inx
00350Fr 2  A9 20            lda #32
003511r 2  95 00            sta $00,x
003513r 2  A9 00            lda #0
003515r 2  95 01            sta $01,x
003517r 2               
003517r 2               ; <inline>:0:0 in `main`
003517r 2               @OPCODE_1717:   ; [c64_ir] PushLiteral(7777)
003517r 2  E8               inx
003518r 2  E8               inx
003519r 2  A9 61            lda #97
00351Br 2  95 00            sta $00,x
00351Dr 2  A9 1E            lda #30
00351Fr 2  95 01            sta $01,x
003521r 2               
003521r 2               ; <inline>:0:0 in `main`
003521r 2               @OPCODE_1718:   ; [c64_ir] AltPush
003521r 2  CA               dex
003522r 2  CA               dex
003523r 2  B5 03            lda $03,x
003525r 2  48               pha
003526r 2  B5 02            lda $02,x
003528r 2  48               pha
003529r 2               
003529r 2               ; src/prelude.fth:5:10 in `rot`
003529r 2               @OPCODE_1719:   ; [c64_ir] AltPush
003529r 2  CA               dex
00352Ar 2  CA               dex
00352Br 2  B5 03            lda $03,x
00352Dr 2  48               pha
00352Er 2  B5 02            lda $02,x
003530r 2  48               pha
003531r 2               
003531r 2               ; <inline>:0:0 in `main`
003531r 2               @OPCODE_1720:   ; [c64_ir] PushLiteral(7777)
003531r 2  E8               inx
003532r 2  E8               inx
003533r 2  A9 61            lda #97
003535r 2  95 00            sta $00,x
003537r 2  A9 1E            lda #30
003539r 2  95 01            sta $01,x
00353Br 2               
00353Br 2               ; <inline>:0:0 in `main`
00353Br 2               @OPCODE_1721:   ; [c64_ir] AltPush
00353Br 2  CA               dex
00353Cr 2  CA               dex
00353Dr 2  B5 03            lda $03,x
00353Fr 2  48               pha
003540r 2  B5 02            lda $02,x
003542r 2  48               pha
003543r 2               
003543r 2               ; src/prelude.fth:3:10 in `swap`
003543r 2               @OPCODE_1722:   ; [c64_ir] AltPush
003543r 2  CA               dex
003544r 2  CA               dex
003545r 2  B5 03            lda $03,x
003547r 2  48               pha
003548r 2  B5 02            lda $02,x
00354Ar 2  48               pha
00354Br 2               
00354Br 2               ; src/prelude.fth:3:13 in `swap`
00354Br 2               @OPCODE_1723:   ; [c64_ir] TempStore
00354Br 2  CA               dex
00354Cr 2  CA               dex
00354Dr 2  B5 03            lda $03,x
00354Fr 2  85 96            sta TEMP_PAX2
003551r 2  B5 02            lda $02,x
003553r 2  85 95            sta TEMP_PAX1
003555r 2               
003555r 2               ; src/prelude.fth:3:19 in `swap`
003555r 2               @OPCODE_1724:   ; [c64_ir] AltPop
003555r 2  E8               inx
003556r 2  E8               inx
003557r 2  68               pla
003558r 2  95 00            sta $00,x
00355Ar 2  68               pla
00355Br 2  95 01            sta $01,x
00355Dr 2               
00355Dr 2               ; src/prelude.fth:3:22 in `swap`
00355Dr 2               @OPCODE_1725:   ; [c64_ir] TempLoad
00355Dr 2  E8               inx
00355Er 2  E8               inx
00355Fr 2  A5 95            lda TEMP_PAX1
003561r 2  95 00            sta $00,x
003563r 2  A5 96            lda TEMP_PAX2
003565r 2  95 01            sta $01,x
003567r 2               
003567r 2               ; <inline>:0:0 in `main`
003567r 2               @OPCODE_1726:   ; [c64_ir] AltPop
003567r 2  E8               inx
003568r 2  E8               inx
003569r 2  68               pla
00356Ar 2  95 00            sta $00,x
00356Cr 2  68               pla
00356Dr 2  95 01            sta $01,x
00356Fr 2               
00356Fr 2               ; <inline>:0:0 in `main`
00356Fr 2               @OPCODE_1727:   ; [c64_ir] Drop
00356Fr 2  CA               dex
003570r 2  CA               dex
003571r 2               
003571r 2               ; src/prelude.fth:5:18 in `rot`
003571r 2               @OPCODE_1728:   ; [c64_ir] AltPop
003571r 2  E8               inx
003572r 2  E8               inx
003573r 2  68               pla
003574r 2  95 00            sta $00,x
003576r 2  68               pla
003577r 2  95 01            sta $01,x
003579r 2               
003579r 2               ; <inline>:0:0 in `main`
003579r 2               @OPCODE_1729:   ; [c64_ir] PushLiteral(7777)
003579r 2  E8               inx
00357Ar 2  E8               inx
00357Br 2  A9 61            lda #97
00357Dr 2  95 00            sta $00,x
00357Fr 2  A9 1E            lda #30
003581r 2  95 01            sta $01,x
003583r 2               
003583r 2               ; <inline>:0:0 in `main`
003583r 2               @OPCODE_1730:   ; [c64_ir] AltPush
003583r 2  CA               dex
003584r 2  CA               dex
003585r 2  B5 03            lda $03,x
003587r 2  48               pha
003588r 2  B5 02            lda $02,x
00358Ar 2  48               pha
00358Br 2               
00358Br 2               ; src/prelude.fth:3:10 in `swap`
00358Br 2               @OPCODE_1731:   ; [c64_ir] AltPush
00358Br 2  CA               dex
00358Cr 2  CA               dex
00358Dr 2  B5 03            lda $03,x
00358Fr 2  48               pha
003590r 2  B5 02            lda $02,x
003592r 2  48               pha
003593r 2               
003593r 2               ; src/prelude.fth:3:13 in `swap`
003593r 2               @OPCODE_1732:   ; [c64_ir] TempStore
003593r 2  CA               dex
003594r 2  CA               dex
003595r 2  B5 03            lda $03,x
003597r 2  85 96            sta TEMP_PAX2
003599r 2  B5 02            lda $02,x
00359Br 2  85 95            sta TEMP_PAX1
00359Dr 2               
00359Dr 2               ; src/prelude.fth:3:19 in `swap`
00359Dr 2               @OPCODE_1733:   ; [c64_ir] AltPop
00359Dr 2  E8               inx
00359Er 2  E8               inx
00359Fr 2  68               pla
0035A0r 2  95 00            sta $00,x
0035A2r 2  68               pla
0035A3r 2  95 01            sta $01,x
0035A5r 2               
0035A5r 2               ; src/prelude.fth:3:22 in `swap`
0035A5r 2               @OPCODE_1734:   ; [c64_ir] TempLoad
0035A5r 2  E8               inx
0035A6r 2  E8               inx
0035A7r 2  A5 95            lda TEMP_PAX1
0035A9r 2  95 00            sta $00,x
0035ABr 2  A5 96            lda TEMP_PAX2
0035ADr 2  95 01            sta $01,x
0035AFr 2               
0035AFr 2               ; <inline>:0:0 in `main`
0035AFr 2               @OPCODE_1735:   ; [c64_ir] AltPop
0035AFr 2  E8               inx
0035B0r 2  E8               inx
0035B1r 2  68               pla
0035B2r 2  95 00            sta $00,x
0035B4r 2  68               pla
0035B5r 2  95 01            sta $01,x
0035B7r 2               
0035B7r 2               ; <inline>:0:0 in `main`
0035B7r 2               @OPCODE_1736:   ; [c64_ir] Drop
0035B7r 2  CA               dex
0035B8r 2  CA               dex
0035B9r 2               
0035B9r 2               ; <inline>:0:0 in `main`
0035B9r 2               @OPCODE_1737:   ; [c64_ir] AltPop
0035B9r 2  E8               inx
0035BAr 2  E8               inx
0035BBr 2  68               pla
0035BCr 2  95 00            sta $00,x
0035BEr 2  68               pla
0035BFr 2  95 01            sta $01,x
0035C1r 2               
0035C1r 2               ; <inline>:0:0 in `main`
0035C1r 2               @OPCODE_1738:   ; [c64_ir] Drop
0035C1r 2  CA               dex
0035C2r 2  CA               dex
0035C3r 2               
0035C3r 2               ; <inline>:0:0 in `main`
0035C3r 2               @OPCODE_1739:   ; [c64_ir] PushLiteral(7777)
0035C3r 2  E8               inx
0035C4r 2  E8               inx
0035C5r 2  A9 61            lda #97
0035C7r 2  95 00            sta $00,x
0035C9r 2  A9 1E            lda #30
0035CBr 2  95 01            sta $01,x
0035CDr 2               
0035CDr 2               ; <inline>:0:0 in `main`
0035CDr 2               @OPCODE_1740:   ; [c64_ir] AltPush
0035CDr 2  CA               dex
0035CEr 2  CA               dex
0035CFr 2  B5 03            lda $03,x
0035D1r 2  48               pha
0035D2r 2  B5 02            lda $02,x
0035D4r 2  48               pha
0035D5r 2               
0035D5r 2               ; src/prelude.fth:5:10 in `rot`
0035D5r 2               @OPCODE_1741:   ; [c64_ir] AltPush
0035D5r 2  CA               dex
0035D6r 2  CA               dex
0035D7r 2  B5 03            lda $03,x
0035D9r 2  48               pha
0035DAr 2  B5 02            lda $02,x
0035DCr 2  48               pha
0035DDr 2               
0035DDr 2               ; <inline>:0:0 in `main`
0035DDr 2               @OPCODE_1742:   ; [c64_ir] PushLiteral(7777)
0035DDr 2  E8               inx
0035DEr 2  E8               inx
0035DFr 2  A9 61            lda #97
0035E1r 2  95 00            sta $00,x
0035E3r 2  A9 1E            lda #30
0035E5r 2  95 01            sta $01,x
0035E7r 2               
0035E7r 2               ; <inline>:0:0 in `main`
0035E7r 2               @OPCODE_1743:   ; [c64_ir] AltPush
0035E7r 2  CA               dex
0035E8r 2  CA               dex
0035E9r 2  B5 03            lda $03,x
0035EBr 2  48               pha
0035ECr 2  B5 02            lda $02,x
0035EEr 2  48               pha
0035EFr 2               
0035EFr 2               ; src/prelude.fth:3:10 in `swap`
0035EFr 2               @OPCODE_1744:   ; [c64_ir] AltPush
0035EFr 2  CA               dex
0035F0r 2  CA               dex
0035F1r 2  B5 03            lda $03,x
0035F3r 2  48               pha
0035F4r 2  B5 02            lda $02,x
0035F6r 2  48               pha
0035F7r 2               
0035F7r 2               ; src/prelude.fth:3:13 in `swap`
0035F7r 2               @OPCODE_1745:   ; [c64_ir] TempStore
0035F7r 2  CA               dex
0035F8r 2  CA               dex
0035F9r 2  B5 03            lda $03,x
0035FBr 2  85 96            sta TEMP_PAX2
0035FDr 2  B5 02            lda $02,x
0035FFr 2  85 95            sta TEMP_PAX1
003601r 2               
003601r 2               ; src/prelude.fth:3:19 in `swap`
003601r 2               @OPCODE_1746:   ; [c64_ir] AltPop
003601r 2  E8               inx
003602r 2  E8               inx
003603r 2  68               pla
003604r 2  95 00            sta $00,x
003606r 2  68               pla
003607r 2  95 01            sta $01,x
003609r 2               
003609r 2               ; src/prelude.fth:3:22 in `swap`
003609r 2               @OPCODE_1747:   ; [c64_ir] TempLoad
003609r 2  E8               inx
00360Ar 2  E8               inx
00360Br 2  A5 95            lda TEMP_PAX1
00360Dr 2  95 00            sta $00,x
00360Fr 2  A5 96            lda TEMP_PAX2
003611r 2  95 01            sta $01,x
003613r 2               
003613r 2               ; <inline>:0:0 in `main`
003613r 2               @OPCODE_1748:   ; [c64_ir] AltPop
003613r 2  E8               inx
003614r 2  E8               inx
003615r 2  68               pla
003616r 2  95 00            sta $00,x
003618r 2  68               pla
003619r 2  95 01            sta $01,x
00361Br 2               
00361Br 2               ; <inline>:0:0 in `main`
00361Br 2               @OPCODE_1749:   ; [c64_ir] Drop
00361Br 2  CA               dex
00361Cr 2  CA               dex
00361Dr 2               
00361Dr 2               ; src/prelude.fth:5:18 in `rot`
00361Dr 2               @OPCODE_1750:   ; [c64_ir] AltPop
00361Dr 2  E8               inx
00361Er 2  E8               inx
00361Fr 2  68               pla
003620r 2  95 00            sta $00,x
003622r 2  68               pla
003623r 2  95 01            sta $01,x
003625r 2               
003625r 2               ; <inline>:0:0 in `main`
003625r 2               @OPCODE_1751:   ; [c64_ir] PushLiteral(7777)
003625r 2  E8               inx
003626r 2  E8               inx
003627r 2  A9 61            lda #97
003629r 2  95 00            sta $00,x
00362Br 2  A9 1E            lda #30
00362Dr 2  95 01            sta $01,x
00362Fr 2               
00362Fr 2               ; <inline>:0:0 in `main`
00362Fr 2               @OPCODE_1752:   ; [c64_ir] AltPush
00362Fr 2  CA               dex
003630r 2  CA               dex
003631r 2  B5 03            lda $03,x
003633r 2  48               pha
003634r 2  B5 02            lda $02,x
003636r 2  48               pha
003637r 2               
003637r 2               ; src/prelude.fth:3:10 in `swap`
003637r 2               @OPCODE_1753:   ; [c64_ir] AltPush
003637r 2  CA               dex
003638r 2  CA               dex
003639r 2  B5 03            lda $03,x
00363Br 2  48               pha
00363Cr 2  B5 02            lda $02,x
00363Er 2  48               pha
00363Fr 2               
00363Fr 2               ; src/prelude.fth:3:13 in `swap`
00363Fr 2               @OPCODE_1754:   ; [c64_ir] TempStore
00363Fr 2  CA               dex
003640r 2  CA               dex
003641r 2  B5 03            lda $03,x
003643r 2  85 96            sta TEMP_PAX2
003645r 2  B5 02            lda $02,x
003647r 2  85 95            sta TEMP_PAX1
003649r 2               
003649r 2               ; src/prelude.fth:3:19 in `swap`
003649r 2               @OPCODE_1755:   ; [c64_ir] AltPop
003649r 2  E8               inx
00364Ar 2  E8               inx
00364Br 2  68               pla
00364Cr 2  95 00            sta $00,x
00364Er 2  68               pla
00364Fr 2  95 01            sta $01,x
003651r 2               
003651r 2               ; src/prelude.fth:3:22 in `swap`
003651r 2               @OPCODE_1756:   ; [c64_ir] TempLoad
003651r 2  E8               inx
003652r 2  E8               inx
003653r 2  A5 95            lda TEMP_PAX1
003655r 2  95 00            sta $00,x
003657r 2  A5 96            lda TEMP_PAX2
003659r 2  95 01            sta $01,x
00365Br 2               
00365Br 2               ; <inline>:0:0 in `main`
00365Br 2               @OPCODE_1757:   ; [c64_ir] AltPop
00365Br 2  E8               inx
00365Cr 2  E8               inx
00365Dr 2  68               pla
00365Er 2  95 00            sta $00,x
003660r 2  68               pla
003661r 2  95 01            sta $01,x
003663r 2               
003663r 2               ; <inline>:0:0 in `main`
003663r 2               @OPCODE_1758:   ; [c64_ir] Drop
003663r 2  CA               dex
003664r 2  CA               dex
003665r 2               
003665r 2               ; <inline>:0:0 in `main`
003665r 2               @OPCODE_1759:   ; [c64_ir] AltPop
003665r 2  E8               inx
003666r 2  E8               inx
003667r 2  68               pla
003668r 2  95 00            sta $00,x
00366Ar 2  68               pla
00366Br 2  95 01            sta $01,x
00366Dr 2               
00366Dr 2               ; <inline>:0:0 in `main`
00366Dr 2               @OPCODE_1760:   ; [c64_ir] Drop
00366Dr 2  CA               dex
00366Er 2  CA               dex
00366Fr 2               
00366Fr 2               ; <inline>:0:0 in `main`
00366Fr 2               @OPCODE_1761:   ; [c64_ir] PushLiteral(7777)
00366Fr 2  E8               inx
003670r 2  E8               inx
003671r 2  A9 61            lda #97
003673r 2  95 00            sta $00,x
003675r 2  A9 1E            lda #30
003677r 2  95 01            sta $01,x
003679r 2               
003679r 2               ; <inline>:0:0 in `main`
003679r 2               @OPCODE_1762:   ; [c64_ir] AltPush
003679r 2  CA               dex
00367Ar 2  CA               dex
00367Br 2  B5 03            lda $03,x
00367Dr 2  48               pha
00367Er 2  B5 02            lda $02,x
003680r 2  48               pha
003681r 2               
003681r 2               ; <inline>:0:0 in `main`
003681r 2               @OPCODE_1763:   ; [c64_ir] PushLiteral(7777)
003681r 2  E8               inx
003682r 2  E8               inx
003683r 2  A9 61            lda #97
003685r 2  95 00            sta $00,x
003687r 2  A9 1E            lda #30
003689r 2  95 01            sta $01,x
00368Br 2               
00368Br 2               ; <inline>:0:0 in `main`
00368Br 2               @OPCODE_1764:   ; [c64_ir] AltPush
00368Br 2  CA               dex
00368Cr 2  CA               dex
00368Dr 2  B5 03            lda $03,x
00368Fr 2  48               pha
003690r 2  B5 02            lda $02,x
003692r 2  48               pha
003693r 2               
003693r 2               ; snake.fth:48:34 in `convert-x-y`
003693r 2               @OPCODE_1765:   ; [c64_ir] PushLiteral(40)
003693r 2  E8               inx
003694r 2  E8               inx
003695r 2  A9 28            lda #40
003697r 2  95 00            sta $00,x
003699r 2  A9 00            lda #0
00369Br 2  95 01            sta $01,x
00369Dr 2               
00369Dr 2               ; <inline>:0:0 in `main`
00369Dr 2               @OPCODE_1766:   ; [c64_ir] PushLiteral(7777)
00369Dr 2  E8               inx
00369Er 2  E8               inx
00369Fr 2  A9 61            lda #97
0036A1r 2  95 00            sta $00,x
0036A3r 2  A9 1E            lda #30
0036A5r 2  95 01            sta $01,x
0036A7r 2               
0036A7r 2               ; <inline>:0:0 in `main`
0036A7r 2               @OPCODE_1767:   ; [c64_ir] AltPush
0036A7r 2  CA               dex
0036A8r 2  CA               dex
0036A9r 2  B5 03            lda $03,x
0036ABr 2  48               pha
0036ACr 2  B5 02            lda $02,x
0036AEr 2  48               pha
0036AFr 2               
0036AFr 2               ; src/prelude.fth:44:5 in `*`
0036AFr 2               @OPCODE_1768:   ; [c64_ir] AltPush
0036AFr 2  CA               dex
0036B0r 2  CA               dex
0036B1r 2  B5 03            lda $03,x
0036B3r 2  48               pha
0036B4r 2  B5 02            lda $02,x
0036B6r 2  48               pha
0036B7r 2               
0036B7r 2               ; src/prelude.fth:44:8 in `*`
0036B7r 2               @OPCODE_1769:   ; [c64_ir] PushLiteral(0)
0036B7r 2  E8               inx
0036B8r 2  E8               inx
0036B9r 2  A9 00            lda #0
0036BBr 2  95 00            sta $00,x
0036BDr 2  A9 00            lda #0
0036BFr 2  95 01            sta $01,x
0036C1r 2               
0036C1r 2               ; src/prelude.fth:44:10 in `*`
0036C1r 2               @OPCODE_1770:   ; [c64_ir] AltPop
0036C1r 2  E8               inx
0036C2r 2  E8               inx
0036C3r 2  68               pla
0036C4r 2  95 00            sta $00,x
0036C6r 2  68               pla
0036C7r 2  95 01            sta $01,x
0036C9r 2               
0036C9r 2               ; src/prelude.fth:44:13 in `*`
0036C9r 2               @OPCODE_1771:   ; [c64_ir] PushLiteral(0)
0036C9r 2  E8               inx
0036CAr 2  E8               inx
0036CBr 2  A9 00            lda #0
0036CDr 2  95 00            sta $00,x
0036CFr 2  A9 00            lda #0
0036D1r 2  95 01            sta $01,x
0036D3r 2               
0036D3r 2               ; src/prelude.fth:44:15 in `*`
0036D3r 2               @OPCODE_1772:   ; [c64_ir] AltPush
0036D3r 2  CA               dex
0036D4r 2  CA               dex
0036D5r 2  B5 03            lda $03,x
0036D7r 2  48               pha
0036D8r 2  B5 02            lda $02,x
0036DAr 2  48               pha
0036DBr 2               
0036DBr 2               ; src/prelude.fth:44:15 in `*`
0036DBr 2               @OPCODE_1773:   ; [c64_ir] AltPush
0036DBr 2  CA               dex
0036DCr 2  CA               dex
0036DDr 2  B5 03            lda $03,x
0036DFr 2  48               pha
0036E0r 2  B5 02            lda $02,x
0036E2r 2  48               pha
0036E3r 2               
0036E3r 2               ; src/prelude.fth:44:15 in `*`
0036E3r 2               @OPCODE_1774:   ; [c64_ir] LoopTarget(60)
0036E3r 2               
0036E3r 2               @target_61:
0036E3r 2               
0036E3r 2               ; <inline>:0:0 in `main`
0036E3r 2               @OPCODE_1776:   ; [c64_ir] PushLiteral(7777)
0036E3r 2  E8               inx
0036E4r 2  E8               inx
0036E5r 2  A9 61            lda #97
0036E7r 2  95 00            sta $00,x
0036E9r 2  A9 1E            lda #30
0036EBr 2  95 01            sta $01,x
0036EDr 2               
0036EDr 2               ; <inline>:0:0 in `main`
0036EDr 2               @OPCODE_1777:   ; [c64_ir] AltPush
0036EDr 2  CA               dex
0036EEr 2  CA               dex
0036EFr 2  B5 03            lda $03,x
0036F1r 2  48               pha
0036F2r 2  B5 02            lda $02,x
0036F4r 2  48               pha
0036F5r 2               
0036F5r 2               ; src/prelude.fth:4:10 in `over`
0036F5r 2               @OPCODE_1778:   ; [c64_ir] AltPush
0036F5r 2  CA               dex
0036F6r 2  CA               dex
0036F7r 2  B5 03            lda $03,x
0036F9r 2  48               pha
0036FAr 2  B5 02            lda $02,x
0036FCr 2  48               pha
0036FDr 2               
0036FDr 2               ; src/prelude.fth:4:13 in `over`
0036FDr 2               @OPCODE_1779:   ; [c64_ir] TempStore
0036FDr 2  CA               dex
0036FEr 2  CA               dex
0036FFr 2  B5 03            lda $03,x
003701r 2  85 96            sta TEMP_PAX2
003703r 2  B5 02            lda $02,x
003705r 2  85 95            sta TEMP_PAX1
003707r 2               
003707r 2               ; src/prelude.fth:4:19 in `over`
003707r 2               @OPCODE_1780:   ; [c64_ir] TempLoad
003707r 2  E8               inx
003708r 2  E8               inx
003709r 2  A5 95            lda TEMP_PAX1
00370Br 2  95 00            sta $00,x
00370Dr 2  A5 96            lda TEMP_PAX2
00370Fr 2  95 01            sta $01,x
003711r 2               
003711r 2               ; src/prelude.fth:4:25 in `over`
003711r 2               @OPCODE_1781:   ; [c64_ir] AltPop
003711r 2  E8               inx
003712r 2  E8               inx
003713r 2  68               pla
003714r 2  95 00            sta $00,x
003716r 2  68               pla
003717r 2  95 01            sta $01,x
003719r 2               
003719r 2               ; src/prelude.fth:4:28 in `over`
003719r 2               @OPCODE_1782:   ; [c64_ir] TempLoad
003719r 2  E8               inx
00371Ar 2  E8               inx
00371Br 2  A5 95            lda TEMP_PAX1
00371Dr 2  95 00            sta $00,x
00371Fr 2  A5 96            lda TEMP_PAX2
003721r 2  95 01            sta $01,x
003723r 2               
003723r 2               ; <inline>:0:0 in `main`
003723r 2               @OPCODE_1783:   ; [c64_ir] AltPop
003723r 2  E8               inx
003724r 2  E8               inx
003725r 2  68               pla
003726r 2  95 00            sta $00,x
003728r 2  68               pla
003729r 2  95 01            sta $01,x
00372Br 2               
00372Br 2               ; <inline>:0:0 in `main`
00372Br 2               @OPCODE_1784:   ; [c64_ir] Drop
00372Br 2  CA               dex
00372Cr 2  CA               dex
00372Dr 2               
00372Dr 2               ; src/prelude.fth:44:23 in `*`
00372Dr 2               @OPCODE_1785:   ; [c64_ir] Add
00372Dr 2                   ; 21
00372Dr 2  CA               dex
00372Er 2  CA               dex
00372Fr 2  18               clc
003730r 2  B5 00            lda $00,x
003732r 2  75 02            adc $02,x
003734r 2  95 00            sta $00,x
003736r 2  B5 01            lda $01,x
003738r 2  75 03            adc $03,x
00373Ar 2  95 01            sta $01,x
00373Cr 2               
00373Cr 2               ; <inline>:0:0 in `main`
00373Cr 2               @OPCODE_1786:   ; [c64_ir] PushLiteral(7777)
00373Cr 2  E8               inx
00373Dr 2  E8               inx
00373Er 2  A9 61            lda #97
003740r 2  95 00            sta $00,x
003742r 2  A9 1E            lda #30
003744r 2  95 01            sta $01,x
003746r 2               
003746r 2               ; <inline>:0:0 in `main`
003746r 2               @OPCODE_1787:   ; [c64_ir] AltPush
003746r 2  CA               dex
003747r 2  CA               dex
003748r 2  B5 03            lda $03,x
00374Ar 2  48               pha
00374Br 2  B5 02            lda $02,x
00374Dr 2  48               pha
00374Er 2               
00374Er 2               ; src/prelude.fth:33:12 in `loopimpl`
00374Er 2               @OPCODE_1788:   ; [c64_ir] AltPop
00374Er 2  E8               inx
00374Fr 2  E8               inx
003750r 2  68               pla
003751r 2  95 00            sta $00,x
003753r 2  68               pla
003754r 2  95 01            sta $01,x
003756r 2               
003756r 2               ; src/prelude.fth:33:15 in `loopimpl`
003756r 2               @OPCODE_1789:   ; [c64_ir] AltPop
003756r 2  E8               inx
003757r 2  E8               inx
003758r 2  68               pla
003759r 2  95 00            sta $00,x
00375Br 2  68               pla
00375Cr 2  95 01            sta $01,x
00375Er 2               
00375Er 2               ; src/prelude.fth:33:18 in `loopimpl`
00375Er 2               @OPCODE_1790:   ; [c64_ir] AltPop
00375Er 2  E8               inx
00375Fr 2  E8               inx
003760r 2  68               pla
003761r 2  95 00            sta $00,x
003763r 2  68               pla
003764r 2  95 01            sta $01,x
003766r 2               
003766r 2               ; <inline>:0:0 in `main`
003766r 2               @OPCODE_1791:   ; [c64_ir] PushLiteral(7777)
003766r 2  E8               inx
003767r 2  E8               inx
003768r 2  A9 61            lda #97
00376Ar 2  95 00            sta $00,x
00376Cr 2  A9 1E            lda #30
00376Er 2  95 01            sta $01,x
003770r 2               
003770r 2               ; <inline>:0:0 in `main`
003770r 2               @OPCODE_1792:   ; [c64_ir] AltPush
003770r 2  CA               dex
003771r 2  CA               dex
003772r 2  B5 03            lda $03,x
003774r 2  48               pha
003775r 2  B5 02            lda $02,x
003777r 2  48               pha
003778r 2               
003778r 2               ; src/prelude.fth:18:8 in `1+`
003778r 2               @OPCODE_1793:   ; [c64_ir] PushLiteral(1)
003778r 2  E8               inx
003779r 2  E8               inx
00377Ar 2  A9 01            lda #1
00377Cr 2  95 00            sta $00,x
00377Er 2  A9 00            lda #0
003780r 2  95 01            sta $01,x
003782r 2               
003782r 2               ; src/prelude.fth:18:10 in `1+`
003782r 2               @OPCODE_1794:   ; [c64_ir] Add
003782r 2                   ; 21
003782r 2  CA               dex
003783r 2  CA               dex
003784r 2  18               clc
003785r 2  B5 00            lda $00,x
003787r 2  75 02            adc $02,x
003789r 2  95 00            sta $00,x
00378Br 2  B5 01            lda $01,x
00378Dr 2  75 03            adc $03,x
00378Fr 2  95 01            sta $01,x
003791r 2               
003791r 2               ; <inline>:0:0 in `main`
003791r 2               @OPCODE_1795:   ; [c64_ir] AltPop
003791r 2  E8               inx
003792r 2  E8               inx
003793r 2  68               pla
003794r 2  95 00            sta $00,x
003796r 2  68               pla
003797r 2  95 01            sta $01,x
003799r 2               
003799r 2               ; <inline>:0:0 in `main`
003799r 2               @OPCODE_1796:   ; [c64_ir] Drop
003799r 2  CA               dex
00379Ar 2  CA               dex
00379Br 2               
00379Br 2               ; <inline>:0:0 in `main`
00379Br 2               @OPCODE_1797:   ; [c64_ir] PushLiteral(7777)
00379Br 2  E8               inx
00379Cr 2  E8               inx
00379Dr 2  A9 61            lda #97
00379Fr 2  95 00            sta $00,x
0037A1r 2  A9 1E            lda #30
0037A3r 2  95 01            sta $01,x
0037A5r 2               
0037A5r 2               ; <inline>:0:0 in `main`
0037A5r 2               @OPCODE_1798:   ; [c64_ir] AltPush
0037A5r 2  CA               dex
0037A6r 2  CA               dex
0037A7r 2  B5 03            lda $03,x
0037A9r 2  48               pha
0037AAr 2  B5 02            lda $02,x
0037ACr 2  48               pha
0037ADr 2               
0037ADr 2               ; <inline>:0:0 in `main`
0037ADr 2               @OPCODE_1799:   ; [c64_ir] PushLiteral(7777)
0037ADr 2  E8               inx
0037AEr 2  E8               inx
0037AFr 2  A9 61            lda #97
0037B1r 2  95 00            sta $00,x
0037B3r 2  A9 1E            lda #30
0037B5r 2  95 01            sta $01,x
0037B7r 2               
0037B7r 2               ; <inline>:0:0 in `main`
0037B7r 2               @OPCODE_1800:   ; [c64_ir] AltPush
0037B7r 2  CA               dex
0037B8r 2  CA               dex
0037B9r 2  B5 03            lda $03,x
0037BBr 2  48               pha
0037BCr 2  B5 02            lda $02,x
0037BEr 2  48               pha
0037BFr 2               
0037BFr 2               ; src/prelude.fth:4:10 in `over`
0037BFr 2               @OPCODE_1801:   ; [c64_ir] AltPush
0037BFr 2  CA               dex
0037C0r 2  CA               dex
0037C1r 2  B5 03            lda $03,x
0037C3r 2  48               pha
0037C4r 2  B5 02            lda $02,x
0037C6r 2  48               pha
0037C7r 2               
0037C7r 2               ; src/prelude.fth:4:13 in `over`
0037C7r 2               @OPCODE_1802:   ; [c64_ir] TempStore
0037C7r 2  CA               dex
0037C8r 2  CA               dex
0037C9r 2  B5 03            lda $03,x
0037CBr 2  85 96            sta TEMP_PAX2
0037CDr 2  B5 02            lda $02,x
0037CFr 2  85 95            sta TEMP_PAX1
0037D1r 2               
0037D1r 2               ; src/prelude.fth:4:19 in `over`
0037D1r 2               @OPCODE_1803:   ; [c64_ir] TempLoad
0037D1r 2  E8               inx
0037D2r 2  E8               inx
0037D3r 2  A5 95            lda TEMP_PAX1
0037D5r 2  95 00            sta $00,x
0037D7r 2  A5 96            lda TEMP_PAX2
0037D9r 2  95 01            sta $01,x
0037DBr 2               
0037DBr 2               ; src/prelude.fth:4:25 in `over`
0037DBr 2               @OPCODE_1804:   ; [c64_ir] AltPop
0037DBr 2  E8               inx
0037DCr 2  E8               inx
0037DDr 2  68               pla
0037DEr 2  95 00            sta $00,x
0037E0r 2  68               pla
0037E1r 2  95 01            sta $01,x
0037E3r 2               
0037E3r 2               ; src/prelude.fth:4:28 in `over`
0037E3r 2               @OPCODE_1805:   ; [c64_ir] TempLoad
0037E3r 2  E8               inx
0037E4r 2  E8               inx
0037E5r 2  A5 95            lda TEMP_PAX1
0037E7r 2  95 00            sta $00,x
0037E9r 2  A5 96            lda TEMP_PAX2
0037EBr 2  95 01            sta $01,x
0037EDr 2               
0037EDr 2               ; <inline>:0:0 in `main`
0037EDr 2               @OPCODE_1806:   ; [c64_ir] AltPop
0037EDr 2  E8               inx
0037EEr 2  E8               inx
0037EFr 2  68               pla
0037F0r 2  95 00            sta $00,x
0037F2r 2  68               pla
0037F3r 2  95 01            sta $01,x
0037F5r 2               
0037F5r 2               ; <inline>:0:0 in `main`
0037F5r 2               @OPCODE_1807:   ; [c64_ir] Drop
0037F5r 2  CA               dex
0037F6r 2  CA               dex
0037F7r 2               
0037F7r 2               ; <inline>:0:0 in `main`
0037F7r 2               @OPCODE_1808:   ; [c64_ir] PushLiteral(7777)
0037F7r 2  E8               inx
0037F8r 2  E8               inx
0037F9r 2  A9 61            lda #97
0037FBr 2  95 00            sta $00,x
0037FDr 2  A9 1E            lda #30
0037FFr 2  95 01            sta $01,x
003801r 2               
003801r 2               ; <inline>:0:0 in `main`
003801r 2               @OPCODE_1809:   ; [c64_ir] AltPush
003801r 2  CA               dex
003802r 2  CA               dex
003803r 2  B5 03            lda $03,x
003805r 2  48               pha
003806r 2  B5 02            lda $02,x
003808r 2  48               pha
003809r 2               
003809r 2               ; src/prelude.fth:4:10 in `over`
003809r 2               @OPCODE_1810:   ; [c64_ir] AltPush
003809r 2  CA               dex
00380Ar 2  CA               dex
00380Br 2  B5 03            lda $03,x
00380Dr 2  48               pha
00380Er 2  B5 02            lda $02,x
003810r 2  48               pha
003811r 2               
003811r 2               ; src/prelude.fth:4:13 in `over`
003811r 2               @OPCODE_1811:   ; [c64_ir] TempStore
003811r 2  CA               dex
003812r 2  CA               dex
003813r 2  B5 03            lda $03,x
003815r 2  85 96            sta TEMP_PAX2
003817r 2  B5 02            lda $02,x
003819r 2  85 95            sta TEMP_PAX1
00381Br 2               
00381Br 2               ; src/prelude.fth:4:19 in `over`
00381Br 2               @OPCODE_1812:   ; [c64_ir] TempLoad
00381Br 2  E8               inx
00381Cr 2  E8               inx
00381Dr 2  A5 95            lda TEMP_PAX1
00381Fr 2  95 00            sta $00,x
003821r 2  A5 96            lda TEMP_PAX2
003823r 2  95 01            sta $01,x
003825r 2               
003825r 2               ; src/prelude.fth:4:25 in `over`
003825r 2               @OPCODE_1813:   ; [c64_ir] AltPop
003825r 2  E8               inx
003826r 2  E8               inx
003827r 2  68               pla
003828r 2  95 00            sta $00,x
00382Ar 2  68               pla
00382Br 2  95 01            sta $01,x
00382Dr 2               
00382Dr 2               ; src/prelude.fth:4:28 in `over`
00382Dr 2               @OPCODE_1814:   ; [c64_ir] TempLoad
00382Dr 2  E8               inx
00382Er 2  E8               inx
00382Fr 2  A5 95            lda TEMP_PAX1
003831r 2  95 00            sta $00,x
003833r 2  A5 96            lda TEMP_PAX2
003835r 2  95 01            sta $01,x
003837r 2               
003837r 2               ; <inline>:0:0 in `main`
003837r 2               @OPCODE_1815:   ; [c64_ir] AltPop
003837r 2  E8               inx
003838r 2  E8               inx
003839r 2  68               pla
00383Ar 2  95 00            sta $00,x
00383Cr 2  68               pla
00383Dr 2  95 01            sta $01,x
00383Fr 2               
00383Fr 2               ; <inline>:0:0 in `main`
00383Fr 2               @OPCODE_1816:   ; [c64_ir] Drop
00383Fr 2  CA               dex
003840r 2  CA               dex
003841r 2               
003841r 2               ; <inline>:0:0 in `main`
003841r 2               @OPCODE_1817:   ; [c64_ir] AltPop
003841r 2  E8               inx
003842r 2  E8               inx
003843r 2  68               pla
003844r 2  95 00            sta $00,x
003846r 2  68               pla
003847r 2  95 01            sta $01,x
003849r 2               
003849r 2               ; <inline>:0:0 in `main`
003849r 2               @OPCODE_1818:   ; [c64_ir] Drop
003849r 2  CA               dex
00384Ar 2  CA               dex
00384Br 2               
00384Br 2               ; src/prelude.fth:33:29 in `loopimpl`
00384Br 2               @OPCODE_1819:   ; [c64_ir] AltPush
00384Br 2  CA               dex
00384Cr 2  CA               dex
00384Dr 2  B5 03            lda $03,x
00384Fr 2  48               pha
003850r 2  B5 02            lda $02,x
003852r 2  48               pha
003853r 2               
003853r 2               ; src/prelude.fth:33:32 in `loopimpl`
003853r 2               @OPCODE_1820:   ; [c64_ir] AltPush
003853r 2  CA               dex
003854r 2  CA               dex
003855r 2  B5 03            lda $03,x
003857r 2  48               pha
003858r 2  B5 02            lda $02,x
00385Ar 2  48               pha
00385Br 2               
00385Br 2               ; <inline>:0:0 in `main`
00385Br 2               @OPCODE_1821:   ; [c64_ir] PushLiteral(7777)
00385Br 2  E8               inx
00385Cr 2  E8               inx
00385Dr 2  A9 61            lda #97
00385Fr 2  95 00            sta $00,x
003861r 2  A9 1E            lda #30
003863r 2  95 01            sta $01,x
003865r 2               
003865r 2               ; <inline>:0:0 in `main`
003865r 2               @OPCODE_1822:   ; [c64_ir] AltPush
003865r 2  CA               dex
003866r 2  CA               dex
003867r 2  B5 03            lda $03,x
003869r 2  48               pha
00386Ar 2  B5 02            lda $02,x
00386Cr 2  48               pha
00386Dr 2               
00386Dr 2               ; <inline>:0:0 in `main`
00386Dr 2               @OPCODE_1823:   ; [c64_ir] PushLiteral(7777)
00386Dr 2  E8               inx
00386Er 2  E8               inx
00386Fr 2  A9 61            lda #97
003871r 2  95 00            sta $00,x
003873r 2  A9 1E            lda #30
003875r 2  95 01            sta $01,x
003877r 2               
003877r 2               ; <inline>:0:0 in `main`
003877r 2               @OPCODE_1824:   ; [c64_ir] AltPush
003877r 2  CA               dex
003878r 2  CA               dex
003879r 2  B5 03            lda $03,x
00387Br 2  48               pha
00387Cr 2  B5 02            lda $02,x
00387Er 2  48               pha
00387Fr 2               
00387Fr 2               ; <inline>:0:0 in `main`
00387Fr 2               @OPCODE_1825:   ; [c64_ir] PushLiteral(7777)
00387Fr 2  E8               inx
003880r 2  E8               inx
003881r 2  A9 61            lda #97
003883r 2  95 00            sta $00,x
003885r 2  A9 1E            lda #30
003887r 2  95 01            sta $01,x
003889r 2               
003889r 2               ; <inline>:0:0 in `main`
003889r 2               @OPCODE_1826:   ; [c64_ir] AltPush
003889r 2  CA               dex
00388Ar 2  CA               dex
00388Br 2  B5 03            lda $03,x
00388Dr 2  48               pha
00388Er 2  B5 02            lda $02,x
003890r 2  48               pha
003891r 2               
003891r 2               ; <inline>:0:0 in `main`
003891r 2               @OPCODE_1827:   ; [c64_ir] PushLiteral(7777)
003891r 2  E8               inx
003892r 2  E8               inx
003893r 2  A9 61            lda #97
003895r 2  95 00            sta $00,x
003897r 2  A9 1E            lda #30
003899r 2  95 01            sta $01,x
00389Br 2               
00389Br 2               ; <inline>:0:0 in `main`
00389Br 2               @OPCODE_1828:   ; [c64_ir] AltPush
00389Br 2  CA               dex
00389Cr 2  CA               dex
00389Dr 2  B5 03            lda $03,x
00389Fr 2  48               pha
0038A0r 2  B5 02            lda $02,x
0038A2r 2  48               pha
0038A3r 2               
0038A3r 2               ; src/prelude.fth:14:12 in `invert`
0038A3r 2               @OPCODE_1829:   ; [c64_ir] PushLiteral(-1)
0038A3r 2  E8               inx
0038A4r 2  E8               inx
0038A5r 2  A9 FF            lda #255
0038A7r 2  95 00            sta $00,x
0038A9r 2  A9 FF            lda #255
0038ABr 2  95 01            sta $01,x
0038ADr 2               
0038ADr 2               ; src/prelude.fth:14:15 in `invert`
0038ADr 2               @OPCODE_1830:   ; [c64_ir] Nand
0038ADr 2                   ; 26
0038ADr 2  CA               dex
0038AEr 2  CA               dex
0038AFr 2  B5 00            lda $00,x
0038B1r 2  35 02            and $02,x
0038B3r 2  49 FF            eor #$ff
0038B5r 2  95 00            sta $00,x
0038B7r 2  B5 01            lda $01,x
0038B9r 2  35 03            and $03,x
0038BBr 2  49 FF            eor #$ff
0038BDr 2  95 01            sta $01,x
0038BFr 2               
0038BFr 2               ; <inline>:0:0 in `main`
0038BFr 2               @OPCODE_1831:   ; [c64_ir] AltPop
0038BFr 2  E8               inx
0038C0r 2  E8               inx
0038C1r 2  68               pla
0038C2r 2  95 00            sta $00,x
0038C4r 2  68               pla
0038C5r 2  95 01            sta $01,x
0038C7r 2               
0038C7r 2               ; <inline>:0:0 in `main`
0038C7r 2               @OPCODE_1832:   ; [c64_ir] Drop
0038C7r 2  CA               dex
0038C8r 2  CA               dex
0038C9r 2               
0038C9r 2               ; src/prelude.fth:15:19 in `negate`
0038C9r 2               @OPCODE_1833:   ; [c64_ir] PushLiteral(1)
0038C9r 2  E8               inx
0038CAr 2  E8               inx
0038CBr 2  A9 01            lda #1
0038CDr 2  95 00            sta $00,x
0038CFr 2  A9 00            lda #0
0038D1r 2  95 01            sta $01,x
0038D3r 2               
0038D3r 2               ; src/prelude.fth:15:21 in `negate`
0038D3r 2               @OPCODE_1834:   ; [c64_ir] Add
0038D3r 2                   ; 21
0038D3r 2  CA               dex
0038D4r 2  CA               dex
0038D5r 2  18               clc
0038D6r 2  B5 00            lda $00,x
0038D8r 2  75 02            adc $02,x
0038DAr 2  95 00            sta $00,x
0038DCr 2  B5 01            lda $01,x
0038DEr 2  75 03            adc $03,x
0038E0r 2  95 01            sta $01,x
0038E2r 2               
0038E2r 2               ; <inline>:0:0 in `main`
0038E2r 2               @OPCODE_1835:   ; [c64_ir] AltPop
0038E2r 2  E8               inx
0038E3r 2  E8               inx
0038E4r 2  68               pla
0038E5r 2  95 00            sta $00,x
0038E7r 2  68               pla
0038E8r 2  95 01            sta $01,x
0038EAr 2               
0038EAr 2               ; <inline>:0:0 in `main`
0038EAr 2               @OPCODE_1836:   ; [c64_ir] Drop
0038EAr 2  CA               dex
0038EBr 2  CA               dex
0038ECr 2               
0038ECr 2               ; src/prelude.fth:16:19 in `-`
0038ECr 2               @OPCODE_1837:   ; [c64_ir] Add
0038ECr 2                   ; 21
0038ECr 2  CA               dex
0038EDr 2  CA               dex
0038EEr 2  18               clc
0038EFr 2  B5 00            lda $00,x
0038F1r 2  75 02            adc $02,x
0038F3r 2  95 00            sta $00,x
0038F5r 2  B5 01            lda $01,x
0038F7r 2  75 03            adc $03,x
0038F9r 2  95 01            sta $01,x
0038FBr 2               
0038FBr 2               ; <inline>:0:0 in `main`
0038FBr 2               @OPCODE_1838:   ; [c64_ir] AltPop
0038FBr 2  E8               inx
0038FCr 2  E8               inx
0038FDr 2  68               pla
0038FEr 2  95 00            sta $00,x
003900r 2  68               pla
003901r 2  95 01            sta $01,x
003903r 2               
003903r 2               ; <inline>:0:0 in `main`
003903r 2               @OPCODE_1839:   ; [c64_ir] Drop
003903r 2  CA               dex
003904r 2  CA               dex
003905r 2               
003905r 2               ; <inline>:0:0 in `main`
003905r 2               @OPCODE_1840:   ; [c64_ir] PushLiteral(7777)
003905r 2  E8               inx
003906r 2  E8               inx
003907r 2  A9 61            lda #97
003909r 2  95 00            sta $00,x
00390Br 2  A9 1E            lda #30
00390Dr 2  95 01            sta $01,x
00390Fr 2               
00390Fr 2               ; <inline>:0:0 in `main`
00390Fr 2               @OPCODE_1841:   ; [c64_ir] AltPush
00390Fr 2  CA               dex
003910r 2  CA               dex
003911r 2  B5 03            lda $03,x
003913r 2  48               pha
003914r 2  B5 02            lda $02,x
003916r 2  48               pha
003917r 2               
003917r 2               ; src/prelude.fth:21:8 in `0=`
003917r 2               @OPCODE_1842:   ; [c64_ir] JumpIf0(63)
003917r 2  CA               dex
003918r 2  CA               dex
003919r 2  B5 02            lda $02,x
00391Br 2  15 03            ora $03,x
00391Dr 2  D0 03            bne *+5
00391Fr 2  4C rr rr         jmp @target_63
003922r 2               
003922r 2               @target_62:
003922r 2               
003922r 2               ; src/prelude.fth:21:11 in `0=`
003922r 2               @OPCODE_1844:   ; [c64_ir] PushLiteral(0)
003922r 2  E8               inx
003923r 2  E8               inx
003924r 2  A9 00            lda #0
003926r 2  95 00            sta $00,x
003928r 2  A9 00            lda #0
00392Ar 2  95 01            sta $01,x
00392Cr 2               
00392Cr 2               ; src/prelude.fth:21:13 in `0=`
00392Cr 2               @OPCODE_1845:   ; [c64_ir] JumpElse(64)
00392Cr 2  4C rr rr         jmp @target_64
00392Fr 2               
00392Fr 2               @target_63:
00392Fr 2               
00392Fr 2               ; src/prelude.fth:21:18 in `0=`
00392Fr 2               @OPCODE_1847:   ; [c64_ir] PushLiteral(-1)
00392Fr 2  E8               inx
003930r 2  E8               inx
003931r 2  A9 FF            lda #255
003933r 2  95 00            sta $00,x
003935r 2  A9 FF            lda #255
003937r 2  95 01            sta $01,x
003939r 2               
003939r 2               ; src/prelude.fth:21:21 in `0=`
003939r 2               @OPCODE_1848:   ; [c64_ir] JumpTarget(63)
003939r 2               
003939r 2               @target_64:
003939r 2               
003939r 2               ; <inline>:0:0 in `main`
003939r 2               @OPCODE_1850:   ; [c64_ir] AltPop
003939r 2  E8               inx
00393Ar 2  E8               inx
00393Br 2  68               pla
00393Cr 2  95 00            sta $00,x
00393Er 2  68               pla
00393Fr 2  95 01            sta $01,x
003941r 2               
003941r 2               ; <inline>:0:0 in `main`
003941r 2               @OPCODE_1851:   ; [c64_ir] Drop
003941r 2  CA               dex
003942r 2  CA               dex
003943r 2               
003943r 2               ; <inline>:0:0 in `main`
003943r 2               @OPCODE_1852:   ; [c64_ir] AltPop
003943r 2  E8               inx
003944r 2  E8               inx
003945r 2  68               pla
003946r 2  95 00            sta $00,x
003948r 2  68               pla
003949r 2  95 01            sta $01,x
00394Br 2               
00394Br 2               ; <inline>:0:0 in `main`
00394Br 2               @OPCODE_1853:   ; [c64_ir] Drop
00394Br 2  CA               dex
00394Cr 2  CA               dex
00394Dr 2               
00394Dr 2               ; <inline>:0:0 in `main`
00394Dr 2               @OPCODE_1854:   ; [c64_ir] PushLiteral(7777)
00394Dr 2  E8               inx
00394Er 2  E8               inx
00394Fr 2  A9 61            lda #97
003951r 2  95 00            sta $00,x
003953r 2  A9 1E            lda #30
003955r 2  95 01            sta $01,x
003957r 2               
003957r 2               ; <inline>:0:0 in `main`
003957r 2               @OPCODE_1855:   ; [c64_ir] AltPush
003957r 2  CA               dex
003958r 2  CA               dex
003959r 2  B5 03            lda $03,x
00395Br 2  48               pha
00395Cr 2  B5 02            lda $02,x
00395Er 2  48               pha
00395Fr 2               
00395Fr 2               ; src/prelude.fth:3:10 in `swap`
00395Fr 2               @OPCODE_1856:   ; [c64_ir] AltPush
00395Fr 2  CA               dex
003960r 2  CA               dex
003961r 2  B5 03            lda $03,x
003963r 2  48               pha
003964r 2  B5 02            lda $02,x
003966r 2  48               pha
003967r 2               
003967r 2               ; src/prelude.fth:3:13 in `swap`
003967r 2               @OPCODE_1857:   ; [c64_ir] TempStore
003967r 2  CA               dex
003968r 2  CA               dex
003969r 2  B5 03            lda $03,x
00396Br 2  85 96            sta TEMP_PAX2
00396Dr 2  B5 02            lda $02,x
00396Fr 2  85 95            sta TEMP_PAX1
003971r 2               
003971r 2               ; src/prelude.fth:3:19 in `swap`
003971r 2               @OPCODE_1858:   ; [c64_ir] AltPop
003971r 2  E8               inx
003972r 2  E8               inx
003973r 2  68               pla
003974r 2  95 00            sta $00,x
003976r 2  68               pla
003977r 2  95 01            sta $01,x
003979r 2               
003979r 2               ; src/prelude.fth:3:22 in `swap`
003979r 2               @OPCODE_1859:   ; [c64_ir] TempLoad
003979r 2  E8               inx
00397Ar 2  E8               inx
00397Br 2  A5 95            lda TEMP_PAX1
00397Dr 2  95 00            sta $00,x
00397Fr 2  A5 96            lda TEMP_PAX2
003981r 2  95 01            sta $01,x
003983r 2               
003983r 2               ; <inline>:0:0 in `main`
003983r 2               @OPCODE_1860:   ; [c64_ir] AltPop
003983r 2  E8               inx
003984r 2  E8               inx
003985r 2  68               pla
003986r 2  95 00            sta $00,x
003988r 2  68               pla
003989r 2  95 01            sta $01,x
00398Br 2               
00398Br 2               ; <inline>:0:0 in `main`
00398Br 2               @OPCODE_1861:   ; [c64_ir] Drop
00398Br 2  CA               dex
00398Cr 2  CA               dex
00398Dr 2               
00398Dr 2               ; src/prelude.fth:33:42 in `loopimpl`
00398Dr 2               @OPCODE_1862:   ; [c64_ir] AltPush
00398Dr 2  CA               dex
00398Er 2  CA               dex
00398Fr 2  B5 03            lda $03,x
003991r 2  48               pha
003992r 2  B5 02            lda $02,x
003994r 2  48               pha
003995r 2               
003995r 2               ; <inline>:0:0 in `main`
003995r 2               @OPCODE_1863:   ; [c64_ir] AltPop
003995r 2  E8               inx
003996r 2  E8               inx
003997r 2  68               pla
003998r 2  95 00            sta $00,x
00399Ar 2  68               pla
00399Br 2  95 01            sta $01,x
00399Dr 2               
00399Dr 2               ; <inline>:0:0 in `main`
00399Dr 2               @OPCODE_1864:   ; [c64_ir] Drop
00399Dr 2  CA               dex
00399Er 2  CA               dex
00399Fr 2               
00399Fr 2               ; src/prelude.fth:44:25 in `*`
00399Fr 2               @OPCODE_1865:   ; [c64_ir] LoopIf0(61)
00399Fr 2  CA               dex
0039A0r 2  CA               dex
0039A1r 2  B5 02            lda $02,x
0039A3r 2  15 03            ora $03,x
0039A5r 2  D0 03            bne *+5
0039A7r 2  4C rr rr         jmp @target_61
0039AAr 2               
0039AAr 2               @target_65:
0039AAr 2               
0039AAr 2               ; src/prelude.fth:44:25 in `*`
0039AAr 2               @OPCODE_1867:   ; [c64_ir] AltPop
0039AAr 2  E8               inx
0039ABr 2  E8               inx
0039ACr 2  68               pla
0039ADr 2  95 00            sta $00,x
0039AFr 2  68               pla
0039B0r 2  95 01            sta $01,x
0039B2r 2               
0039B2r 2               ; src/prelude.fth:44:25 in `*`
0039B2r 2               @OPCODE_1868:   ; [c64_ir] Drop
0039B2r 2  CA               dex
0039B3r 2  CA               dex
0039B4r 2               
0039B4r 2               ; src/prelude.fth:44:25 in `*`
0039B4r 2               @OPCODE_1869:   ; [c64_ir] AltPop
0039B4r 2  E8               inx
0039B5r 2  E8               inx
0039B6r 2  68               pla
0039B7r 2  95 00            sta $00,x
0039B9r 2  68               pla
0039BAr 2  95 01            sta $01,x
0039BCr 2               
0039BCr 2               ; src/prelude.fth:44:25 in `*`
0039BCr 2               @OPCODE_1870:   ; [c64_ir] Drop
0039BCr 2  CA               dex
0039BDr 2  CA               dex
0039BEr 2               
0039BEr 2               ; <inline>:0:0 in `main`
0039BEr 2               @OPCODE_1871:   ; [c64_ir] PushLiteral(7777)
0039BEr 2  E8               inx
0039BFr 2  E8               inx
0039C0r 2  A9 61            lda #97
0039C2r 2  95 00            sta $00,x
0039C4r 2  A9 1E            lda #30
0039C6r 2  95 01            sta $01,x
0039C8r 2               
0039C8r 2               ; <inline>:0:0 in `main`
0039C8r 2               @OPCODE_1872:   ; [c64_ir] AltPush
0039C8r 2  CA               dex
0039C9r 2  CA               dex
0039CAr 2  B5 03            lda $03,x
0039CCr 2  48               pha
0039CDr 2  B5 02            lda $02,x
0039CFr 2  48               pha
0039D0r 2               
0039D0r 2               ; src/prelude.fth:3:10 in `swap`
0039D0r 2               @OPCODE_1873:   ; [c64_ir] AltPush
0039D0r 2  CA               dex
0039D1r 2  CA               dex
0039D2r 2  B5 03            lda $03,x
0039D4r 2  48               pha
0039D5r 2  B5 02            lda $02,x
0039D7r 2  48               pha
0039D8r 2               
0039D8r 2               ; src/prelude.fth:3:13 in `swap`
0039D8r 2               @OPCODE_1874:   ; [c64_ir] TempStore
0039D8r 2  CA               dex
0039D9r 2  CA               dex
0039DAr 2  B5 03            lda $03,x
0039DCr 2  85 96            sta TEMP_PAX2
0039DEr 2  B5 02            lda $02,x
0039E0r 2  85 95            sta TEMP_PAX1
0039E2r 2               
0039E2r 2               ; src/prelude.fth:3:19 in `swap`
0039E2r 2               @OPCODE_1875:   ; [c64_ir] AltPop
0039E2r 2  E8               inx
0039E3r 2  E8               inx
0039E4r 2  68               pla
0039E5r 2  95 00            sta $00,x
0039E7r 2  68               pla
0039E8r 2  95 01            sta $01,x
0039EAr 2               
0039EAr 2               ; src/prelude.fth:3:22 in `swap`
0039EAr 2               @OPCODE_1876:   ; [c64_ir] TempLoad
0039EAr 2  E8               inx
0039EBr 2  E8               inx
0039ECr 2  A5 95            lda TEMP_PAX1
0039EEr 2  95 00            sta $00,x
0039F0r 2  A5 96            lda TEMP_PAX2
0039F2r 2  95 01            sta $01,x
0039F4r 2               
0039F4r 2               ; <inline>:0:0 in `main`
0039F4r 2               @OPCODE_1877:   ; [c64_ir] AltPop
0039F4r 2  E8               inx
0039F5r 2  E8               inx
0039F6r 2  68               pla
0039F7r 2  95 00            sta $00,x
0039F9r 2  68               pla
0039FAr 2  95 01            sta $01,x
0039FCr 2               
0039FCr 2               ; <inline>:0:0 in `main`
0039FCr 2               @OPCODE_1878:   ; [c64_ir] Drop
0039FCr 2  CA               dex
0039FDr 2  CA               dex
0039FEr 2               
0039FEr 2               ; src/prelude.fth:44:35 in `*`
0039FEr 2               @OPCODE_1879:   ; [c64_ir] Drop
0039FEr 2  CA               dex
0039FFr 2  CA               dex
003A00r 2               
003A00r 2               ; <inline>:0:0 in `main`
003A00r 2               @OPCODE_1880:   ; [c64_ir] AltPop
003A00r 2  E8               inx
003A01r 2  E8               inx
003A02r 2  68               pla
003A03r 2  95 00            sta $00,x
003A05r 2  68               pla
003A06r 2  95 01            sta $01,x
003A08r 2               
003A08r 2               ; <inline>:0:0 in `main`
003A08r 2               @OPCODE_1881:   ; [c64_ir] Drop
003A08r 2  CA               dex
003A09r 2  CA               dex
003A0Ar 2               
003A0Ar 2               ; snake.fth:48:39 in `convert-x-y`
003A0Ar 2               @OPCODE_1882:   ; [c64_ir] Add
003A0Ar 2                   ; 21
003A0Ar 2  CA               dex
003A0Br 2  CA               dex
003A0Cr 2  18               clc
003A0Dr 2  B5 00            lda $00,x
003A0Fr 2  75 02            adc $02,x
003A11r 2  95 00            sta $00,x
003A13r 2  B5 01            lda $01,x
003A15r 2  75 03            adc $03,x
003A17r 2  95 01            sta $01,x
003A19r 2               
003A19r 2               ; <inline>:0:0 in `main`
003A19r 2               @OPCODE_1883:   ; [c64_ir] AltPop
003A19r 2  E8               inx
003A1Ar 2  E8               inx
003A1Br 2  68               pla
003A1Cr 2  95 00            sta $00,x
003A1Er 2  68               pla
003A1Fr 2  95 01            sta $01,x
003A21r 2               
003A21r 2               ; <inline>:0:0 in `main`
003A21r 2               @OPCODE_1884:   ; [c64_ir] Drop
003A21r 2  CA               dex
003A22r 2  CA               dex
003A23r 2               
003A23r 2               ; <inline>:0:0 in `main`
003A23r 2               @OPCODE_1885:   ; [c64_ir] PushLiteral(7777)
003A23r 2  E8               inx
003A24r 2  E8               inx
003A25r 2  A9 61            lda #97
003A27r 2  95 00            sta $00,x
003A29r 2  A9 1E            lda #30
003A2Br 2  95 01            sta $01,x
003A2Dr 2               
003A2Dr 2               ; <inline>:0:0 in `main`
003A2Dr 2               @OPCODE_1886:   ; [c64_ir] AltPush
003A2Dr 2  CA               dex
003A2Er 2  CA               dex
003A2Fr 2  B5 03            lda $03,x
003A31r 2  48               pha
003A32r 2  B5 02            lda $02,x
003A34r 2  48               pha
003A35r 2               
003A35r 2               ; snake.fth:49:34 in `draw-index`
003A35r 2               @OPCODE_1887:   ; [c64_ir] PushLiteral(1024)
003A35r 2  E8               inx
003A36r 2  E8               inx
003A37r 2  A9 00            lda #0
003A39r 2  95 00            sta $00,x
003A3Br 2  A9 04            lda #4
003A3Dr 2  95 01            sta $01,x
003A3Fr 2               
003A3Fr 2               ; snake.fth:49:43 in `draw-index`
003A3Fr 2               @OPCODE_1888:   ; [c64_ir] Add
003A3Fr 2                   ; 21
003A3Fr 2  CA               dex
003A40r 2  CA               dex
003A41r 2  18               clc
003A42r 2  B5 00            lda $00,x
003A44r 2  75 02            adc $02,x
003A46r 2  95 00            sta $00,x
003A48r 2  B5 01            lda $01,x
003A4Ar 2  75 03            adc $03,x
003A4Cr 2  95 01            sta $01,x
003A4Er 2               
003A4Er 2               ; snake.fth:49:45 in `draw-index`
003A4Er 2               @OPCODE_1889:   ; [c64_ir] Store8
003A4Er 2  CA               dex
003A4Fr 2  CA               dex
003A50r 2  CA               dex
003A51r 2  CA               dex
003A52r 2  B5 02            lda $02,x
003A54r 2  81 04            sta ($04,x)
003A56r 2                   ; TODO high byte
003A56r 2               
003A56r 2               ; <inline>:0:0 in `main`
003A56r 2               @OPCODE_1890:   ; [c64_ir] AltPop
003A56r 2  E8               inx
003A57r 2  E8               inx
003A58r 2  68               pla
003A59r 2  95 00            sta $00,x
003A5Br 2  68               pla
003A5Cr 2  95 01            sta $01,x
003A5Er 2               
003A5Er 2               ; <inline>:0:0 in `main`
003A5Er 2               @OPCODE_1891:   ; [c64_ir] Drop
003A5Er 2  CA               dex
003A5Fr 2  CA               dex
003A60r 2               
003A60r 2               ; <inline>:0:0 in `main`
003A60r 2               @OPCODE_1892:   ; [c64_ir] AltPop
003A60r 2  E8               inx
003A61r 2  E8               inx
003A62r 2  68               pla
003A63r 2  95 00            sta $00,x
003A65r 2  68               pla
003A66r 2  95 01            sta $01,x
003A68r 2               
003A68r 2               ; <inline>:0:0 in `main`
003A68r 2               @OPCODE_1893:   ; [c64_ir] Drop
003A68r 2  CA               dex
003A69r 2  CA               dex
003A6Ar 2               
003A6Ar 2               ; <inline>:0:0 in `main`
003A6Ar 2               @OPCODE_1894:   ; [c64_ir] AltPop
003A6Ar 2  E8               inx
003A6Br 2  E8               inx
003A6Cr 2  68               pla
003A6Dr 2  95 00            sta $00,x
003A6Fr 2  68               pla
003A70r 2  95 01            sta $01,x
003A72r 2               
003A72r 2               ; <inline>:0:0 in `main`
003A72r 2               @OPCODE_1895:   ; [c64_ir] Drop
003A72r 2  CA               dex
003A73r 2  CA               dex
003A74r 2               
003A74r 2               ; <inline>:0:0 in `main`
003A74r 2               @OPCODE_1896:   ; [c64_ir] AltPop
003A74r 2  E8               inx
003A75r 2  E8               inx
003A76r 2  68               pla
003A77r 2  95 00            sta $00,x
003A79r 2  68               pla
003A7Ar 2  95 01            sta $01,x
003A7Cr 2               
003A7Cr 2               ; <inline>:0:0 in `main`
003A7Cr 2               @OPCODE_1897:   ; [c64_ir] Drop
003A7Cr 2  CA               dex
003A7Dr 2  CA               dex
003A7Er 2               
003A7Er 2               ; <inline>:0:0 in `main`
003A7Er 2               @OPCODE_1898:   ; [c64_ir] PushLiteral(7777)
003A7Er 2  E8               inx
003A7Fr 2  E8               inx
003A80r 2  A9 61            lda #97
003A82r 2  95 00            sta $00,x
003A84r 2  A9 1E            lda #30
003A86r 2  95 01            sta $01,x
003A88r 2               
003A88r 2               ; <inline>:0:0 in `main`
003A88r 2               @OPCODE_1899:   ; [c64_ir] AltPush
003A88r 2  CA               dex
003A89r 2  CA               dex
003A8Ar 2  B5 03            lda $03,x
003A8Cr 2  48               pha
003A8Dr 2  B5 02            lda $02,x
003A8Fr 2  48               pha
003A90r 2               
003A90r 2               ; snake.fth:208:3 in `draw-apple`
003A90r 2               @OPCODE_1900:   ; [c64_ir] PushLiteral(-26664)
003A90r 2  E8               inx
003A91r 2  E8               inx
003A92r 2  A9 D8            lda #216
003A94r 2  95 00            sta $00,x
003A96r 2  A9 97            lda #151
003A98r 2  95 01            sta $01,x
003A9Ar 2               
003A9Ar 2               ; snake.fth:208:11 in `draw-apple`
003A9Ar 2               @OPCODE_1901:   ; [c64_ir] Load
003A9Ar 2  A1 00            lda ($00,x)
003A9Cr 2  95 00            sta $00,x
003A9Er 2  A9 00            lda #0
003AA0r 2  95 01            sta $01,x
003AA2r 2               
003AA2r 2               ; snake.fth:208:13 in `draw-apple`
003AA2r 2               @OPCODE_1902:   ; [c64_ir] PushLiteral(-26662)
003AA2r 2  E8               inx
003AA3r 2  E8               inx
003AA4r 2  A9 DA            lda #218
003AA6r 2  95 00            sta $00,x
003AA8r 2  A9 97            lda #151
003AAAr 2  95 01            sta $01,x
003AACr 2               
003AACr 2               ; snake.fth:208:21 in `draw-apple`
003AACr 2               @OPCODE_1903:   ; [c64_ir] Load
003AACr 2  A1 00            lda ($00,x)
003AAEr 2  95 00            sta $00,x
003AB0r 2  A9 00            lda #0
003AB2r 2  95 01            sta $01,x
003AB4r 2               
003AB4r 2               ; <inline>:0:0 in `main`
003AB4r 2               @OPCODE_1904:   ; [c64_ir] PushLiteral(7777)
003AB4r 2  E8               inx
003AB5r 2  E8               inx
003AB6r 2  A9 61            lda #97
003AB8r 2  95 00            sta $00,x
003ABAr 2  A9 1E            lda #30
003ABCr 2  95 01            sta $01,x
003ABEr 2               
003ABEr 2               ; <inline>:0:0 in `main`
003ABEr 2               @OPCODE_1905:   ; [c64_ir] AltPush
003ABEr 2  CA               dex
003ABFr 2  CA               dex
003AC0r 2  B5 03            lda $03,x
003AC2r 2  48               pha
003AC3r 2  B5 02            lda $02,x
003AC5r 2  48               pha
003AC6r 2               
003AC6r 2               ; snake.fth:54:31 in `draw-apple-tile`
003AC6r 2               @OPCODE_1906:   ; [c64_ir] PushLiteral(233)
003AC6r 2  E8               inx
003AC7r 2  E8               inx
003AC8r 2  A9 E9            lda #233
003ACAr 2  95 00            sta $00,x
003ACCr 2  A9 00            lda #0
003ACEr 2  95 01            sta $01,x
003AD0r 2               
003AD0r 2               ; <inline>:0:0 in `main`
003AD0r 2               @OPCODE_1907:   ; [c64_ir] PushLiteral(7777)
003AD0r 2  E8               inx
003AD1r 2  E8               inx
003AD2r 2  A9 61            lda #97
003AD4r 2  95 00            sta $00,x
003AD6r 2  A9 1E            lda #30
003AD8r 2  95 01            sta $01,x
003ADAr 2               
003ADAr 2               ; <inline>:0:0 in `main`
003ADAr 2               @OPCODE_1908:   ; [c64_ir] AltPush
003ADAr 2  CA               dex
003ADBr 2  CA               dex
003ADCr 2  B5 03            lda $03,x
003ADEr 2  48               pha
003ADFr 2  B5 02            lda $02,x
003AE1r 2  48               pha
003AE2r 2               
003AE2r 2               ; src/prelude.fth:5:10 in `rot`
003AE2r 2               @OPCODE_1909:   ; [c64_ir] AltPush
003AE2r 2  CA               dex
003AE3r 2  CA               dex
003AE4r 2  B5 03            lda $03,x
003AE6r 2  48               pha
003AE7r 2  B5 02            lda $02,x
003AE9r 2  48               pha
003AEAr 2               
003AEAr 2               ; <inline>:0:0 in `main`
003AEAr 2               @OPCODE_1910:   ; [c64_ir] PushLiteral(7777)
003AEAr 2  E8               inx
003AEBr 2  E8               inx
003AECr 2  A9 61            lda #97
003AEEr 2  95 00            sta $00,x
003AF0r 2  A9 1E            lda #30
003AF2r 2  95 01            sta $01,x
003AF4r 2               
003AF4r 2               ; <inline>:0:0 in `main`
003AF4r 2               @OPCODE_1911:   ; [c64_ir] AltPush
003AF4r 2  CA               dex
003AF5r 2  CA               dex
003AF6r 2  B5 03            lda $03,x
003AF8r 2  48               pha
003AF9r 2  B5 02            lda $02,x
003AFBr 2  48               pha
003AFCr 2               
003AFCr 2               ; src/prelude.fth:3:10 in `swap`
003AFCr 2               @OPCODE_1912:   ; [c64_ir] AltPush
003AFCr 2  CA               dex
003AFDr 2  CA               dex
003AFEr 2  B5 03            lda $03,x
003B00r 2  48               pha
003B01r 2  B5 02            lda $02,x
003B03r 2  48               pha
003B04r 2               
003B04r 2               ; src/prelude.fth:3:13 in `swap`
003B04r 2               @OPCODE_1913:   ; [c64_ir] TempStore
003B04r 2  CA               dex
003B05r 2  CA               dex
003B06r 2  B5 03            lda $03,x
003B08r 2  85 96            sta TEMP_PAX2
003B0Ar 2  B5 02            lda $02,x
003B0Cr 2  85 95            sta TEMP_PAX1
003B0Er 2               
003B0Er 2               ; src/prelude.fth:3:19 in `swap`
003B0Er 2               @OPCODE_1914:   ; [c64_ir] AltPop
003B0Er 2  E8               inx
003B0Fr 2  E8               inx
003B10r 2  68               pla
003B11r 2  95 00            sta $00,x
003B13r 2  68               pla
003B14r 2  95 01            sta $01,x
003B16r 2               
003B16r 2               ; src/prelude.fth:3:22 in `swap`
003B16r 2               @OPCODE_1915:   ; [c64_ir] TempLoad
003B16r 2  E8               inx
003B17r 2  E8               inx
003B18r 2  A5 95            lda TEMP_PAX1
003B1Ar 2  95 00            sta $00,x
003B1Cr 2  A5 96            lda TEMP_PAX2
003B1Er 2  95 01            sta $01,x
003B20r 2               
003B20r 2               ; <inline>:0:0 in `main`
003B20r 2               @OPCODE_1916:   ; [c64_ir] AltPop
003B20r 2  E8               inx
003B21r 2  E8               inx
003B22r 2  68               pla
003B23r 2  95 00            sta $00,x
003B25r 2  68               pla
003B26r 2  95 01            sta $01,x
003B28r 2               
003B28r 2               ; <inline>:0:0 in `main`
003B28r 2               @OPCODE_1917:   ; [c64_ir] Drop
003B28r 2  CA               dex
003B29r 2  CA               dex
003B2Ar 2               
003B2Ar 2               ; src/prelude.fth:5:18 in `rot`
003B2Ar 2               @OPCODE_1918:   ; [c64_ir] AltPop
003B2Ar 2  E8               inx
003B2Br 2  E8               inx
003B2Cr 2  68               pla
003B2Dr 2  95 00            sta $00,x
003B2Fr 2  68               pla
003B30r 2  95 01            sta $01,x
003B32r 2               
003B32r 2               ; <inline>:0:0 in `main`
003B32r 2               @OPCODE_1919:   ; [c64_ir] PushLiteral(7777)
003B32r 2  E8               inx
003B33r 2  E8               inx
003B34r 2  A9 61            lda #97
003B36r 2  95 00            sta $00,x
003B38r 2  A9 1E            lda #30
003B3Ar 2  95 01            sta $01,x
003B3Cr 2               
003B3Cr 2               ; <inline>:0:0 in `main`
003B3Cr 2               @OPCODE_1920:   ; [c64_ir] AltPush
003B3Cr 2  CA               dex
003B3Dr 2  CA               dex
003B3Er 2  B5 03            lda $03,x
003B40r 2  48               pha
003B41r 2  B5 02            lda $02,x
003B43r 2  48               pha
003B44r 2               
003B44r 2               ; src/prelude.fth:3:10 in `swap`
003B44r 2               @OPCODE_1921:   ; [c64_ir] AltPush
003B44r 2  CA               dex
003B45r 2  CA               dex
003B46r 2  B5 03            lda $03,x
003B48r 2  48               pha
003B49r 2  B5 02            lda $02,x
003B4Br 2  48               pha
003B4Cr 2               
003B4Cr 2               ; src/prelude.fth:3:13 in `swap`
003B4Cr 2               @OPCODE_1922:   ; [c64_ir] TempStore
003B4Cr 2  CA               dex
003B4Dr 2  CA               dex
003B4Er 2  B5 03            lda $03,x
003B50r 2  85 96            sta TEMP_PAX2
003B52r 2  B5 02            lda $02,x
003B54r 2  85 95            sta TEMP_PAX1
003B56r 2               
003B56r 2               ; src/prelude.fth:3:19 in `swap`
003B56r 2               @OPCODE_1923:   ; [c64_ir] AltPop
003B56r 2  E8               inx
003B57r 2  E8               inx
003B58r 2  68               pla
003B59r 2  95 00            sta $00,x
003B5Br 2  68               pla
003B5Cr 2  95 01            sta $01,x
003B5Er 2               
003B5Er 2               ; src/prelude.fth:3:22 in `swap`
003B5Er 2               @OPCODE_1924:   ; [c64_ir] TempLoad
003B5Er 2  E8               inx
003B5Fr 2  E8               inx
003B60r 2  A5 95            lda TEMP_PAX1
003B62r 2  95 00            sta $00,x
003B64r 2  A5 96            lda TEMP_PAX2
003B66r 2  95 01            sta $01,x
003B68r 2               
003B68r 2               ; <inline>:0:0 in `main`
003B68r 2               @OPCODE_1925:   ; [c64_ir] AltPop
003B68r 2  E8               inx
003B69r 2  E8               inx
003B6Ar 2  68               pla
003B6Br 2  95 00            sta $00,x
003B6Dr 2  68               pla
003B6Er 2  95 01            sta $01,x
003B70r 2               
003B70r 2               ; <inline>:0:0 in `main`
003B70r 2               @OPCODE_1926:   ; [c64_ir] Drop
003B70r 2  CA               dex
003B71r 2  CA               dex
003B72r 2               
003B72r 2               ; <inline>:0:0 in `main`
003B72r 2               @OPCODE_1927:   ; [c64_ir] AltPop
003B72r 2  E8               inx
003B73r 2  E8               inx
003B74r 2  68               pla
003B75r 2  95 00            sta $00,x
003B77r 2  68               pla
003B78r 2  95 01            sta $01,x
003B7Ar 2               
003B7Ar 2               ; <inline>:0:0 in `main`
003B7Ar 2               @OPCODE_1928:   ; [c64_ir] Drop
003B7Ar 2  CA               dex
003B7Br 2  CA               dex
003B7Cr 2               
003B7Cr 2               ; <inline>:0:0 in `main`
003B7Cr 2               @OPCODE_1929:   ; [c64_ir] PushLiteral(7777)
003B7Cr 2  E8               inx
003B7Dr 2  E8               inx
003B7Er 2  A9 61            lda #97
003B80r 2  95 00            sta $00,x
003B82r 2  A9 1E            lda #30
003B84r 2  95 01            sta $01,x
003B86r 2               
003B86r 2               ; <inline>:0:0 in `main`
003B86r 2               @OPCODE_1930:   ; [c64_ir] AltPush
003B86r 2  CA               dex
003B87r 2  CA               dex
003B88r 2  B5 03            lda $03,x
003B8Ar 2  48               pha
003B8Br 2  B5 02            lda $02,x
003B8Dr 2  48               pha
003B8Er 2               
003B8Er 2               ; src/prelude.fth:5:10 in `rot`
003B8Er 2               @OPCODE_1931:   ; [c64_ir] AltPush
003B8Er 2  CA               dex
003B8Fr 2  CA               dex
003B90r 2  B5 03            lda $03,x
003B92r 2  48               pha
003B93r 2  B5 02            lda $02,x
003B95r 2  48               pha
003B96r 2               
003B96r 2               ; <inline>:0:0 in `main`
003B96r 2               @OPCODE_1932:   ; [c64_ir] PushLiteral(7777)
003B96r 2  E8               inx
003B97r 2  E8               inx
003B98r 2  A9 61            lda #97
003B9Ar 2  95 00            sta $00,x
003B9Cr 2  A9 1E            lda #30
003B9Er 2  95 01            sta $01,x
003BA0r 2               
003BA0r 2               ; <inline>:0:0 in `main`
003BA0r 2               @OPCODE_1933:   ; [c64_ir] AltPush
003BA0r 2  CA               dex
003BA1r 2  CA               dex
003BA2r 2  B5 03            lda $03,x
003BA4r 2  48               pha
003BA5r 2  B5 02            lda $02,x
003BA7r 2  48               pha
003BA8r 2               
003BA8r 2               ; src/prelude.fth:3:10 in `swap`
003BA8r 2               @OPCODE_1934:   ; [c64_ir] AltPush
003BA8r 2  CA               dex
003BA9r 2  CA               dex
003BAAr 2  B5 03            lda $03,x
003BACr 2  48               pha
003BADr 2  B5 02            lda $02,x
003BAFr 2  48               pha
003BB0r 2               
003BB0r 2               ; src/prelude.fth:3:13 in `swap`
003BB0r 2               @OPCODE_1935:   ; [c64_ir] TempStore
003BB0r 2  CA               dex
003BB1r 2  CA               dex
003BB2r 2  B5 03            lda $03,x
003BB4r 2  85 96            sta TEMP_PAX2
003BB6r 2  B5 02            lda $02,x
003BB8r 2  85 95            sta TEMP_PAX1
003BBAr 2               
003BBAr 2               ; src/prelude.fth:3:19 in `swap`
003BBAr 2               @OPCODE_1936:   ; [c64_ir] AltPop
003BBAr 2  E8               inx
003BBBr 2  E8               inx
003BBCr 2  68               pla
003BBDr 2  95 00            sta $00,x
003BBFr 2  68               pla
003BC0r 2  95 01            sta $01,x
003BC2r 2               
003BC2r 2               ; src/prelude.fth:3:22 in `swap`
003BC2r 2               @OPCODE_1937:   ; [c64_ir] TempLoad
003BC2r 2  E8               inx
003BC3r 2  E8               inx
003BC4r 2  A5 95            lda TEMP_PAX1
003BC6r 2  95 00            sta $00,x
003BC8r 2  A5 96            lda TEMP_PAX2
003BCAr 2  95 01            sta $01,x
003BCCr 2               
003BCCr 2               ; <inline>:0:0 in `main`
003BCCr 2               @OPCODE_1938:   ; [c64_ir] AltPop
003BCCr 2  E8               inx
003BCDr 2  E8               inx
003BCEr 2  68               pla
003BCFr 2  95 00            sta $00,x
003BD1r 2  68               pla
003BD2r 2  95 01            sta $01,x
003BD4r 2               
003BD4r 2               ; <inline>:0:0 in `main`
003BD4r 2               @OPCODE_1939:   ; [c64_ir] Drop
003BD4r 2  CA               dex
003BD5r 2  CA               dex
003BD6r 2               
003BD6r 2               ; src/prelude.fth:5:18 in `rot`
003BD6r 2               @OPCODE_1940:   ; [c64_ir] AltPop
003BD6r 2  E8               inx
003BD7r 2  E8               inx
003BD8r 2  68               pla
003BD9r 2  95 00            sta $00,x
003BDBr 2  68               pla
003BDCr 2  95 01            sta $01,x
003BDEr 2               
003BDEr 2               ; <inline>:0:0 in `main`
003BDEr 2               @OPCODE_1941:   ; [c64_ir] PushLiteral(7777)
003BDEr 2  E8               inx
003BDFr 2  E8               inx
003BE0r 2  A9 61            lda #97
003BE2r 2  95 00            sta $00,x
003BE4r 2  A9 1E            lda #30
003BE6r 2  95 01            sta $01,x
003BE8r 2               
003BE8r 2               ; <inline>:0:0 in `main`
003BE8r 2               @OPCODE_1942:   ; [c64_ir] AltPush
003BE8r 2  CA               dex
003BE9r 2  CA               dex
003BEAr 2  B5 03            lda $03,x
003BECr 2  48               pha
003BEDr 2  B5 02            lda $02,x
003BEFr 2  48               pha
003BF0r 2               
003BF0r 2               ; src/prelude.fth:3:10 in `swap`
003BF0r 2               @OPCODE_1943:   ; [c64_ir] AltPush
003BF0r 2  CA               dex
003BF1r 2  CA               dex
003BF2r 2  B5 03            lda $03,x
003BF4r 2  48               pha
003BF5r 2  B5 02            lda $02,x
003BF7r 2  48               pha
003BF8r 2               
003BF8r 2               ; src/prelude.fth:3:13 in `swap`
003BF8r 2               @OPCODE_1944:   ; [c64_ir] TempStore
003BF8r 2  CA               dex
003BF9r 2  CA               dex
003BFAr 2  B5 03            lda $03,x
003BFCr 2  85 96            sta TEMP_PAX2
003BFEr 2  B5 02            lda $02,x
003C00r 2  85 95            sta TEMP_PAX1
003C02r 2               
003C02r 2               ; src/prelude.fth:3:19 in `swap`
003C02r 2               @OPCODE_1945:   ; [c64_ir] AltPop
003C02r 2  E8               inx
003C03r 2  E8               inx
003C04r 2  68               pla
003C05r 2  95 00            sta $00,x
003C07r 2  68               pla
003C08r 2  95 01            sta $01,x
003C0Ar 2               
003C0Ar 2               ; src/prelude.fth:3:22 in `swap`
003C0Ar 2               @OPCODE_1946:   ; [c64_ir] TempLoad
003C0Ar 2  E8               inx
003C0Br 2  E8               inx
003C0Cr 2  A5 95            lda TEMP_PAX1
003C0Er 2  95 00            sta $00,x
003C10r 2  A5 96            lda TEMP_PAX2
003C12r 2  95 01            sta $01,x
003C14r 2               
003C14r 2               ; <inline>:0:0 in `main`
003C14r 2               @OPCODE_1947:   ; [c64_ir] AltPop
003C14r 2  E8               inx
003C15r 2  E8               inx
003C16r 2  68               pla
003C17r 2  95 00            sta $00,x
003C19r 2  68               pla
003C1Ar 2  95 01            sta $01,x
003C1Cr 2               
003C1Cr 2               ; <inline>:0:0 in `main`
003C1Cr 2               @OPCODE_1948:   ; [c64_ir] Drop
003C1Cr 2  CA               dex
003C1Dr 2  CA               dex
003C1Er 2               
003C1Er 2               ; <inline>:0:0 in `main`
003C1Er 2               @OPCODE_1949:   ; [c64_ir] AltPop
003C1Er 2  E8               inx
003C1Fr 2  E8               inx
003C20r 2  68               pla
003C21r 2  95 00            sta $00,x
003C23r 2  68               pla
003C24r 2  95 01            sta $01,x
003C26r 2               
003C26r 2               ; <inline>:0:0 in `main`
003C26r 2               @OPCODE_1950:   ; [c64_ir] Drop
003C26r 2  CA               dex
003C27r 2  CA               dex
003C28r 2               
003C28r 2               ; <inline>:0:0 in `main`
003C28r 2               @OPCODE_1951:   ; [c64_ir] PushLiteral(7777)
003C28r 2  E8               inx
003C29r 2  E8               inx
003C2Ar 2  A9 61            lda #97
003C2Cr 2  95 00            sta $00,x
003C2Er 2  A9 1E            lda #30
003C30r 2  95 01            sta $01,x
003C32r 2               
003C32r 2               ; <inline>:0:0 in `main`
003C32r 2               @OPCODE_1952:   ; [c64_ir] AltPush
003C32r 2  CA               dex
003C33r 2  CA               dex
003C34r 2  B5 03            lda $03,x
003C36r 2  48               pha
003C37r 2  B5 02            lda $02,x
003C39r 2  48               pha
003C3Ar 2               
003C3Ar 2               ; <inline>:0:0 in `main`
003C3Ar 2               @OPCODE_1953:   ; [c64_ir] PushLiteral(7777)
003C3Ar 2  E8               inx
003C3Br 2  E8               inx
003C3Cr 2  A9 61            lda #97
003C3Er 2  95 00            sta $00,x
003C40r 2  A9 1E            lda #30
003C42r 2  95 01            sta $01,x
003C44r 2               
003C44r 2               ; <inline>:0:0 in `main`
003C44r 2               @OPCODE_1954:   ; [c64_ir] AltPush
003C44r 2  CA               dex
003C45r 2  CA               dex
003C46r 2  B5 03            lda $03,x
003C48r 2  48               pha
003C49r 2  B5 02            lda $02,x
003C4Br 2  48               pha
003C4Cr 2               
003C4Cr 2               ; snake.fth:48:34 in `convert-x-y`
003C4Cr 2               @OPCODE_1955:   ; [c64_ir] PushLiteral(40)
003C4Cr 2  E8               inx
003C4Dr 2  E8               inx
003C4Er 2  A9 28            lda #40
003C50r 2  95 00            sta $00,x
003C52r 2  A9 00            lda #0
003C54r 2  95 01            sta $01,x
003C56r 2               
003C56r 2               ; <inline>:0:0 in `main`
003C56r 2               @OPCODE_1956:   ; [c64_ir] PushLiteral(7777)
003C56r 2  E8               inx
003C57r 2  E8               inx
003C58r 2  A9 61            lda #97
003C5Ar 2  95 00            sta $00,x
003C5Cr 2  A9 1E            lda #30
003C5Er 2  95 01            sta $01,x
003C60r 2               
003C60r 2               ; <inline>:0:0 in `main`
003C60r 2               @OPCODE_1957:   ; [c64_ir] AltPush
003C60r 2  CA               dex
003C61r 2  CA               dex
003C62r 2  B5 03            lda $03,x
003C64r 2  48               pha
003C65r 2  B5 02            lda $02,x
003C67r 2  48               pha
003C68r 2               
003C68r 2               ; src/prelude.fth:44:5 in `*`
003C68r 2               @OPCODE_1958:   ; [c64_ir] AltPush
003C68r 2  CA               dex
003C69r 2  CA               dex
003C6Ar 2  B5 03            lda $03,x
003C6Cr 2  48               pha
003C6Dr 2  B5 02            lda $02,x
003C6Fr 2  48               pha
003C70r 2               
003C70r 2               ; src/prelude.fth:44:8 in `*`
003C70r 2               @OPCODE_1959:   ; [c64_ir] PushLiteral(0)
003C70r 2  E8               inx
003C71r 2  E8               inx
003C72r 2  A9 00            lda #0
003C74r 2  95 00            sta $00,x
003C76r 2  A9 00            lda #0
003C78r 2  95 01            sta $01,x
003C7Ar 2               
003C7Ar 2               ; src/prelude.fth:44:10 in `*`
003C7Ar 2               @OPCODE_1960:   ; [c64_ir] AltPop
003C7Ar 2  E8               inx
003C7Br 2  E8               inx
003C7Cr 2  68               pla
003C7Dr 2  95 00            sta $00,x
003C7Fr 2  68               pla
003C80r 2  95 01            sta $01,x
003C82r 2               
003C82r 2               ; src/prelude.fth:44:13 in `*`
003C82r 2               @OPCODE_1961:   ; [c64_ir] PushLiteral(0)
003C82r 2  E8               inx
003C83r 2  E8               inx
003C84r 2  A9 00            lda #0
003C86r 2  95 00            sta $00,x
003C88r 2  A9 00            lda #0
003C8Ar 2  95 01            sta $01,x
003C8Cr 2               
003C8Cr 2               ; src/prelude.fth:44:15 in `*`
003C8Cr 2               @OPCODE_1962:   ; [c64_ir] AltPush
003C8Cr 2  CA               dex
003C8Dr 2  CA               dex
003C8Er 2  B5 03            lda $03,x
003C90r 2  48               pha
003C91r 2  B5 02            lda $02,x
003C93r 2  48               pha
003C94r 2               
003C94r 2               ; src/prelude.fth:44:15 in `*`
003C94r 2               @OPCODE_1963:   ; [c64_ir] AltPush
003C94r 2  CA               dex
003C95r 2  CA               dex
003C96r 2  B5 03            lda $03,x
003C98r 2  48               pha
003C99r 2  B5 02            lda $02,x
003C9Br 2  48               pha
003C9Cr 2               
003C9Cr 2               ; src/prelude.fth:44:15 in `*`
003C9Cr 2               @OPCODE_1964:   ; [c64_ir] LoopTarget(65)
003C9Cr 2               
003C9Cr 2               @target_66:
003C9Cr 2               
003C9Cr 2               ; <inline>:0:0 in `main`
003C9Cr 2               @OPCODE_1966:   ; [c64_ir] PushLiteral(7777)
003C9Cr 2  E8               inx
003C9Dr 2  E8               inx
003C9Er 2  A9 61            lda #97
003CA0r 2  95 00            sta $00,x
003CA2r 2  A9 1E            lda #30
003CA4r 2  95 01            sta $01,x
003CA6r 2               
003CA6r 2               ; <inline>:0:0 in `main`
003CA6r 2               @OPCODE_1967:   ; [c64_ir] AltPush
003CA6r 2  CA               dex
003CA7r 2  CA               dex
003CA8r 2  B5 03            lda $03,x
003CAAr 2  48               pha
003CABr 2  B5 02            lda $02,x
003CADr 2  48               pha
003CAEr 2               
003CAEr 2               ; src/prelude.fth:4:10 in `over`
003CAEr 2               @OPCODE_1968:   ; [c64_ir] AltPush
003CAEr 2  CA               dex
003CAFr 2  CA               dex
003CB0r 2  B5 03            lda $03,x
003CB2r 2  48               pha
003CB3r 2  B5 02            lda $02,x
003CB5r 2  48               pha
003CB6r 2               
003CB6r 2               ; src/prelude.fth:4:13 in `over`
003CB6r 2               @OPCODE_1969:   ; [c64_ir] TempStore
003CB6r 2  CA               dex
003CB7r 2  CA               dex
003CB8r 2  B5 03            lda $03,x
003CBAr 2  85 96            sta TEMP_PAX2
003CBCr 2  B5 02            lda $02,x
003CBEr 2  85 95            sta TEMP_PAX1
003CC0r 2               
003CC0r 2               ; src/prelude.fth:4:19 in `over`
003CC0r 2               @OPCODE_1970:   ; [c64_ir] TempLoad
003CC0r 2  E8               inx
003CC1r 2  E8               inx
003CC2r 2  A5 95            lda TEMP_PAX1
003CC4r 2  95 00            sta $00,x
003CC6r 2  A5 96            lda TEMP_PAX2
003CC8r 2  95 01            sta $01,x
003CCAr 2               
003CCAr 2               ; src/prelude.fth:4:25 in `over`
003CCAr 2               @OPCODE_1971:   ; [c64_ir] AltPop
003CCAr 2  E8               inx
003CCBr 2  E8               inx
003CCCr 2  68               pla
003CCDr 2  95 00            sta $00,x
003CCFr 2  68               pla
003CD0r 2  95 01            sta $01,x
003CD2r 2               
003CD2r 2               ; src/prelude.fth:4:28 in `over`
003CD2r 2               @OPCODE_1972:   ; [c64_ir] TempLoad
003CD2r 2  E8               inx
003CD3r 2  E8               inx
003CD4r 2  A5 95            lda TEMP_PAX1
003CD6r 2  95 00            sta $00,x
003CD8r 2  A5 96            lda TEMP_PAX2
003CDAr 2  95 01            sta $01,x
003CDCr 2               
003CDCr 2               ; <inline>:0:0 in `main`
003CDCr 2               @OPCODE_1973:   ; [c64_ir] AltPop
003CDCr 2  E8               inx
003CDDr 2  E8               inx
003CDEr 2  68               pla
003CDFr 2  95 00            sta $00,x
003CE1r 2  68               pla
003CE2r 2  95 01            sta $01,x
003CE4r 2               
003CE4r 2               ; <inline>:0:0 in `main`
003CE4r 2               @OPCODE_1974:   ; [c64_ir] Drop
003CE4r 2  CA               dex
003CE5r 2  CA               dex
003CE6r 2               
003CE6r 2               ; src/prelude.fth:44:23 in `*`
003CE6r 2               @OPCODE_1975:   ; [c64_ir] Add
003CE6r 2                   ; 21
003CE6r 2  CA               dex
003CE7r 2  CA               dex
003CE8r 2  18               clc
003CE9r 2  B5 00            lda $00,x
003CEBr 2  75 02            adc $02,x
003CEDr 2  95 00            sta $00,x
003CEFr 2  B5 01            lda $01,x
003CF1r 2  75 03            adc $03,x
003CF3r 2  95 01            sta $01,x
003CF5r 2               
003CF5r 2               ; <inline>:0:0 in `main`
003CF5r 2               @OPCODE_1976:   ; [c64_ir] PushLiteral(7777)
003CF5r 2  E8               inx
003CF6r 2  E8               inx
003CF7r 2  A9 61            lda #97
003CF9r 2  95 00            sta $00,x
003CFBr 2  A9 1E            lda #30
003CFDr 2  95 01            sta $01,x
003CFFr 2               
003CFFr 2               ; <inline>:0:0 in `main`
003CFFr 2               @OPCODE_1977:   ; [c64_ir] AltPush
003CFFr 2  CA               dex
003D00r 2  CA               dex
003D01r 2  B5 03            lda $03,x
003D03r 2  48               pha
003D04r 2  B5 02            lda $02,x
003D06r 2  48               pha
003D07r 2               
003D07r 2               ; src/prelude.fth:33:12 in `loopimpl`
003D07r 2               @OPCODE_1978:   ; [c64_ir] AltPop
003D07r 2  E8               inx
003D08r 2  E8               inx
003D09r 2  68               pla
003D0Ar 2  95 00            sta $00,x
003D0Cr 2  68               pla
003D0Dr 2  95 01            sta $01,x
003D0Fr 2               
003D0Fr 2               ; src/prelude.fth:33:15 in `loopimpl`
003D0Fr 2               @OPCODE_1979:   ; [c64_ir] AltPop
003D0Fr 2  E8               inx
003D10r 2  E8               inx
003D11r 2  68               pla
003D12r 2  95 00            sta $00,x
003D14r 2  68               pla
003D15r 2  95 01            sta $01,x
003D17r 2               
003D17r 2               ; src/prelude.fth:33:18 in `loopimpl`
003D17r 2               @OPCODE_1980:   ; [c64_ir] AltPop
003D17r 2  E8               inx
003D18r 2  E8               inx
003D19r 2  68               pla
003D1Ar 2  95 00            sta $00,x
003D1Cr 2  68               pla
003D1Dr 2  95 01            sta $01,x
003D1Fr 2               
003D1Fr 2               ; <inline>:0:0 in `main`
003D1Fr 2               @OPCODE_1981:   ; [c64_ir] PushLiteral(7777)
003D1Fr 2  E8               inx
003D20r 2  E8               inx
003D21r 2  A9 61            lda #97
003D23r 2  95 00            sta $00,x
003D25r 2  A9 1E            lda #30
003D27r 2  95 01            sta $01,x
003D29r 2               
003D29r 2               ; <inline>:0:0 in `main`
003D29r 2               @OPCODE_1982:   ; [c64_ir] AltPush
003D29r 2  CA               dex
003D2Ar 2  CA               dex
003D2Br 2  B5 03            lda $03,x
003D2Dr 2  48               pha
003D2Er 2  B5 02            lda $02,x
003D30r 2  48               pha
003D31r 2               
003D31r 2               ; src/prelude.fth:18:8 in `1+`
003D31r 2               @OPCODE_1983:   ; [c64_ir] PushLiteral(1)
003D31r 2  E8               inx
003D32r 2  E8               inx
003D33r 2  A9 01            lda #1
003D35r 2  95 00            sta $00,x
003D37r 2  A9 00            lda #0
003D39r 2  95 01            sta $01,x
003D3Br 2               
003D3Br 2               ; src/prelude.fth:18:10 in `1+`
003D3Br 2               @OPCODE_1984:   ; [c64_ir] Add
003D3Br 2                   ; 21
003D3Br 2  CA               dex
003D3Cr 2  CA               dex
003D3Dr 2  18               clc
003D3Er 2  B5 00            lda $00,x
003D40r 2  75 02            adc $02,x
003D42r 2  95 00            sta $00,x
003D44r 2  B5 01            lda $01,x
003D46r 2  75 03            adc $03,x
003D48r 2  95 01            sta $01,x
003D4Ar 2               
003D4Ar 2               ; <inline>:0:0 in `main`
003D4Ar 2               @OPCODE_1985:   ; [c64_ir] AltPop
003D4Ar 2  E8               inx
003D4Br 2  E8               inx
003D4Cr 2  68               pla
003D4Dr 2  95 00            sta $00,x
003D4Fr 2  68               pla
003D50r 2  95 01            sta $01,x
003D52r 2               
003D52r 2               ; <inline>:0:0 in `main`
003D52r 2               @OPCODE_1986:   ; [c64_ir] Drop
003D52r 2  CA               dex
003D53r 2  CA               dex
003D54r 2               
003D54r 2               ; <inline>:0:0 in `main`
003D54r 2               @OPCODE_1987:   ; [c64_ir] PushLiteral(7777)
003D54r 2  E8               inx
003D55r 2  E8               inx
003D56r 2  A9 61            lda #97
003D58r 2  95 00            sta $00,x
003D5Ar 2  A9 1E            lda #30
003D5Cr 2  95 01            sta $01,x
003D5Er 2               
003D5Er 2               ; <inline>:0:0 in `main`
003D5Er 2               @OPCODE_1988:   ; [c64_ir] AltPush
003D5Er 2  CA               dex
003D5Fr 2  CA               dex
003D60r 2  B5 03            lda $03,x
003D62r 2  48               pha
003D63r 2  B5 02            lda $02,x
003D65r 2  48               pha
003D66r 2               
003D66r 2               ; <inline>:0:0 in `main`
003D66r 2               @OPCODE_1989:   ; [c64_ir] PushLiteral(7777)
003D66r 2  E8               inx
003D67r 2  E8               inx
003D68r 2  A9 61            lda #97
003D6Ar 2  95 00            sta $00,x
003D6Cr 2  A9 1E            lda #30
003D6Er 2  95 01            sta $01,x
003D70r 2               
003D70r 2               ; <inline>:0:0 in `main`
003D70r 2               @OPCODE_1990:   ; [c64_ir] AltPush
003D70r 2  CA               dex
003D71r 2  CA               dex
003D72r 2  B5 03            lda $03,x
003D74r 2  48               pha
003D75r 2  B5 02            lda $02,x
003D77r 2  48               pha
003D78r 2               
003D78r 2               ; src/prelude.fth:4:10 in `over`
003D78r 2               @OPCODE_1991:   ; [c64_ir] AltPush
003D78r 2  CA               dex
003D79r 2  CA               dex
003D7Ar 2  B5 03            lda $03,x
003D7Cr 2  48               pha
003D7Dr 2  B5 02            lda $02,x
003D7Fr 2  48               pha
003D80r 2               
003D80r 2               ; src/prelude.fth:4:13 in `over`
003D80r 2               @OPCODE_1992:   ; [c64_ir] TempStore
003D80r 2  CA               dex
003D81r 2  CA               dex
003D82r 2  B5 03            lda $03,x
003D84r 2  85 96            sta TEMP_PAX2
003D86r 2  B5 02            lda $02,x
003D88r 2  85 95            sta TEMP_PAX1
003D8Ar 2               
003D8Ar 2               ; src/prelude.fth:4:19 in `over`
003D8Ar 2               @OPCODE_1993:   ; [c64_ir] TempLoad
003D8Ar 2  E8               inx
003D8Br 2  E8               inx
003D8Cr 2  A5 95            lda TEMP_PAX1
003D8Er 2  95 00            sta $00,x
003D90r 2  A5 96            lda TEMP_PAX2
003D92r 2  95 01            sta $01,x
003D94r 2               
003D94r 2               ; src/prelude.fth:4:25 in `over`
003D94r 2               @OPCODE_1994:   ; [c64_ir] AltPop
003D94r 2  E8               inx
003D95r 2  E8               inx
003D96r 2  68               pla
003D97r 2  95 00            sta $00,x
003D99r 2  68               pla
003D9Ar 2  95 01            sta $01,x
003D9Cr 2               
003D9Cr 2               ; src/prelude.fth:4:28 in `over`
003D9Cr 2               @OPCODE_1995:   ; [c64_ir] TempLoad
003D9Cr 2  E8               inx
003D9Dr 2  E8               inx
003D9Er 2  A5 95            lda TEMP_PAX1
003DA0r 2  95 00            sta $00,x
003DA2r 2  A5 96            lda TEMP_PAX2
003DA4r 2  95 01            sta $01,x
003DA6r 2               
003DA6r 2               ; <inline>:0:0 in `main`
003DA6r 2               @OPCODE_1996:   ; [c64_ir] AltPop
003DA6r 2  E8               inx
003DA7r 2  E8               inx
003DA8r 2  68               pla
003DA9r 2  95 00            sta $00,x
003DABr 2  68               pla
003DACr 2  95 01            sta $01,x
003DAEr 2               
003DAEr 2               ; <inline>:0:0 in `main`
003DAEr 2               @OPCODE_1997:   ; [c64_ir] Drop
003DAEr 2  CA               dex
003DAFr 2  CA               dex
003DB0r 2               
003DB0r 2               ; <inline>:0:0 in `main`
003DB0r 2               @OPCODE_1998:   ; [c64_ir] PushLiteral(7777)
003DB0r 2  E8               inx
003DB1r 2  E8               inx
003DB2r 2  A9 61            lda #97
003DB4r 2  95 00            sta $00,x
003DB6r 2  A9 1E            lda #30
003DB8r 2  95 01            sta $01,x
003DBAr 2               
003DBAr 2               ; <inline>:0:0 in `main`
003DBAr 2               @OPCODE_1999:   ; [c64_ir] AltPush
003DBAr 2  CA               dex
003DBBr 2  CA               dex
003DBCr 2  B5 03            lda $03,x
003DBEr 2  48               pha
003DBFr 2  B5 02            lda $02,x
003DC1r 2  48               pha
003DC2r 2               
003DC2r 2               ; src/prelude.fth:4:10 in `over`
003DC2r 2               @OPCODE_2000:   ; [c64_ir] AltPush
003DC2r 2  CA               dex
003DC3r 2  CA               dex
003DC4r 2  B5 03            lda $03,x
003DC6r 2  48               pha
003DC7r 2  B5 02            lda $02,x
003DC9r 2  48               pha
003DCAr 2               
003DCAr 2               ; src/prelude.fth:4:13 in `over`
003DCAr 2               @OPCODE_2001:   ; [c64_ir] TempStore
003DCAr 2  CA               dex
003DCBr 2  CA               dex
003DCCr 2  B5 03            lda $03,x
003DCEr 2  85 96            sta TEMP_PAX2
003DD0r 2  B5 02            lda $02,x
003DD2r 2  85 95            sta TEMP_PAX1
003DD4r 2               
003DD4r 2               ; src/prelude.fth:4:19 in `over`
003DD4r 2               @OPCODE_2002:   ; [c64_ir] TempLoad
003DD4r 2  E8               inx
003DD5r 2  E8               inx
003DD6r 2  A5 95            lda TEMP_PAX1
003DD8r 2  95 00            sta $00,x
003DDAr 2  A5 96            lda TEMP_PAX2
003DDCr 2  95 01            sta $01,x
003DDEr 2               
003DDEr 2               ; src/prelude.fth:4:25 in `over`
003DDEr 2               @OPCODE_2003:   ; [c64_ir] AltPop
003DDEr 2  E8               inx
003DDFr 2  E8               inx
003DE0r 2  68               pla
003DE1r 2  95 00            sta $00,x
003DE3r 2  68               pla
003DE4r 2  95 01            sta $01,x
003DE6r 2               
003DE6r 2               ; src/prelude.fth:4:28 in `over`
003DE6r 2               @OPCODE_2004:   ; [c64_ir] TempLoad
003DE6r 2  E8               inx
003DE7r 2  E8               inx
003DE8r 2  A5 95            lda TEMP_PAX1
003DEAr 2  95 00            sta $00,x
003DECr 2  A5 96            lda TEMP_PAX2
003DEEr 2  95 01            sta $01,x
003DF0r 2               
003DF0r 2               ; <inline>:0:0 in `main`
003DF0r 2               @OPCODE_2005:   ; [c64_ir] AltPop
003DF0r 2  E8               inx
003DF1r 2  E8               inx
003DF2r 2  68               pla
003DF3r 2  95 00            sta $00,x
003DF5r 2  68               pla
003DF6r 2  95 01            sta $01,x
003DF8r 2               
003DF8r 2               ; <inline>:0:0 in `main`
003DF8r 2               @OPCODE_2006:   ; [c64_ir] Drop
003DF8r 2  CA               dex
003DF9r 2  CA               dex
003DFAr 2               
003DFAr 2               ; <inline>:0:0 in `main`
003DFAr 2               @OPCODE_2007:   ; [c64_ir] AltPop
003DFAr 2  E8               inx
003DFBr 2  E8               inx
003DFCr 2  68               pla
003DFDr 2  95 00            sta $00,x
003DFFr 2  68               pla
003E00r 2  95 01            sta $01,x
003E02r 2               
003E02r 2               ; <inline>:0:0 in `main`
003E02r 2               @OPCODE_2008:   ; [c64_ir] Drop
003E02r 2  CA               dex
003E03r 2  CA               dex
003E04r 2               
003E04r 2               ; src/prelude.fth:33:29 in `loopimpl`
003E04r 2               @OPCODE_2009:   ; [c64_ir] AltPush
003E04r 2  CA               dex
003E05r 2  CA               dex
003E06r 2  B5 03            lda $03,x
003E08r 2  48               pha
003E09r 2  B5 02            lda $02,x
003E0Br 2  48               pha
003E0Cr 2               
003E0Cr 2               ; src/prelude.fth:33:32 in `loopimpl`
003E0Cr 2               @OPCODE_2010:   ; [c64_ir] AltPush
003E0Cr 2  CA               dex
003E0Dr 2  CA               dex
003E0Er 2  B5 03            lda $03,x
003E10r 2  48               pha
003E11r 2  B5 02            lda $02,x
003E13r 2  48               pha
003E14r 2               
003E14r 2               ; <inline>:0:0 in `main`
003E14r 2               @OPCODE_2011:   ; [c64_ir] PushLiteral(7777)
003E14r 2  E8               inx
003E15r 2  E8               inx
003E16r 2  A9 61            lda #97
003E18r 2  95 00            sta $00,x
003E1Ar 2  A9 1E            lda #30
003E1Cr 2  95 01            sta $01,x
003E1Er 2               
003E1Er 2               ; <inline>:0:0 in `main`
003E1Er 2               @OPCODE_2012:   ; [c64_ir] AltPush
003E1Er 2  CA               dex
003E1Fr 2  CA               dex
003E20r 2  B5 03            lda $03,x
003E22r 2  48               pha
003E23r 2  B5 02            lda $02,x
003E25r 2  48               pha
003E26r 2               
003E26r 2               ; <inline>:0:0 in `main`
003E26r 2               @OPCODE_2013:   ; [c64_ir] PushLiteral(7777)
003E26r 2  E8               inx
003E27r 2  E8               inx
003E28r 2  A9 61            lda #97
003E2Ar 2  95 00            sta $00,x
003E2Cr 2  A9 1E            lda #30
003E2Er 2  95 01            sta $01,x
003E30r 2               
003E30r 2               ; <inline>:0:0 in `main`
003E30r 2               @OPCODE_2014:   ; [c64_ir] AltPush
003E30r 2  CA               dex
003E31r 2  CA               dex
003E32r 2  B5 03            lda $03,x
003E34r 2  48               pha
003E35r 2  B5 02            lda $02,x
003E37r 2  48               pha
003E38r 2               
003E38r 2               ; <inline>:0:0 in `main`
003E38r 2               @OPCODE_2015:   ; [c64_ir] PushLiteral(7777)
003E38r 2  E8               inx
003E39r 2  E8               inx
003E3Ar 2  A9 61            lda #97
003E3Cr 2  95 00            sta $00,x
003E3Er 2  A9 1E            lda #30
003E40r 2  95 01            sta $01,x
003E42r 2               
003E42r 2               ; <inline>:0:0 in `main`
003E42r 2               @OPCODE_2016:   ; [c64_ir] AltPush
003E42r 2  CA               dex
003E43r 2  CA               dex
003E44r 2  B5 03            lda $03,x
003E46r 2  48               pha
003E47r 2  B5 02            lda $02,x
003E49r 2  48               pha
003E4Ar 2               
003E4Ar 2               ; <inline>:0:0 in `main`
003E4Ar 2               @OPCODE_2017:   ; [c64_ir] PushLiteral(7777)
003E4Ar 2  E8               inx
003E4Br 2  E8               inx
003E4Cr 2  A9 61            lda #97
003E4Er 2  95 00            sta $00,x
003E50r 2  A9 1E            lda #30
003E52r 2  95 01            sta $01,x
003E54r 2               
003E54r 2               ; <inline>:0:0 in `main`
003E54r 2               @OPCODE_2018:   ; [c64_ir] AltPush
003E54r 2  CA               dex
003E55r 2  CA               dex
003E56r 2  B5 03            lda $03,x
003E58r 2  48               pha
003E59r 2  B5 02            lda $02,x
003E5Br 2  48               pha
003E5Cr 2               
003E5Cr 2               ; src/prelude.fth:14:12 in `invert`
003E5Cr 2               @OPCODE_2019:   ; [c64_ir] PushLiteral(-1)
003E5Cr 2  E8               inx
003E5Dr 2  E8               inx
003E5Er 2  A9 FF            lda #255
003E60r 2  95 00            sta $00,x
003E62r 2  A9 FF            lda #255
003E64r 2  95 01            sta $01,x
003E66r 2               
003E66r 2               ; src/prelude.fth:14:15 in `invert`
003E66r 2               @OPCODE_2020:   ; [c64_ir] Nand
003E66r 2                   ; 26
003E66r 2  CA               dex
003E67r 2  CA               dex
003E68r 2  B5 00            lda $00,x
003E6Ar 2  35 02            and $02,x
003E6Cr 2  49 FF            eor #$ff
003E6Er 2  95 00            sta $00,x
003E70r 2  B5 01            lda $01,x
003E72r 2  35 03            and $03,x
003E74r 2  49 FF            eor #$ff
003E76r 2  95 01            sta $01,x
003E78r 2               
003E78r 2               ; <inline>:0:0 in `main`
003E78r 2               @OPCODE_2021:   ; [c64_ir] AltPop
003E78r 2  E8               inx
003E79r 2  E8               inx
003E7Ar 2  68               pla
003E7Br 2  95 00            sta $00,x
003E7Dr 2  68               pla
003E7Er 2  95 01            sta $01,x
003E80r 2               
003E80r 2               ; <inline>:0:0 in `main`
003E80r 2               @OPCODE_2022:   ; [c64_ir] Drop
003E80r 2  CA               dex
003E81r 2  CA               dex
003E82r 2               
003E82r 2               ; src/prelude.fth:15:19 in `negate`
003E82r 2               @OPCODE_2023:   ; [c64_ir] PushLiteral(1)
003E82r 2  E8               inx
003E83r 2  E8               inx
003E84r 2  A9 01            lda #1
003E86r 2  95 00            sta $00,x
003E88r 2  A9 00            lda #0
003E8Ar 2  95 01            sta $01,x
003E8Cr 2               
003E8Cr 2               ; src/prelude.fth:15:21 in `negate`
003E8Cr 2               @OPCODE_2024:   ; [c64_ir] Add
003E8Cr 2                   ; 21
003E8Cr 2  CA               dex
003E8Dr 2  CA               dex
003E8Er 2  18               clc
003E8Fr 2  B5 00            lda $00,x
003E91r 2  75 02            adc $02,x
003E93r 2  95 00            sta $00,x
003E95r 2  B5 01            lda $01,x
003E97r 2  75 03            adc $03,x
003E99r 2  95 01            sta $01,x
003E9Br 2               
003E9Br 2               ; <inline>:0:0 in `main`
003E9Br 2               @OPCODE_2025:   ; [c64_ir] AltPop
003E9Br 2  E8               inx
003E9Cr 2  E8               inx
003E9Dr 2  68               pla
003E9Er 2  95 00            sta $00,x
003EA0r 2  68               pla
003EA1r 2  95 01            sta $01,x
003EA3r 2               
003EA3r 2               ; <inline>:0:0 in `main`
003EA3r 2               @OPCODE_2026:   ; [c64_ir] Drop
003EA3r 2  CA               dex
003EA4r 2  CA               dex
003EA5r 2               
003EA5r 2               ; src/prelude.fth:16:19 in `-`
003EA5r 2               @OPCODE_2027:   ; [c64_ir] Add
003EA5r 2                   ; 21
003EA5r 2  CA               dex
003EA6r 2  CA               dex
003EA7r 2  18               clc
003EA8r 2  B5 00            lda $00,x
003EAAr 2  75 02            adc $02,x
003EACr 2  95 00            sta $00,x
003EAEr 2  B5 01            lda $01,x
003EB0r 2  75 03            adc $03,x
003EB2r 2  95 01            sta $01,x
003EB4r 2               
003EB4r 2               ; <inline>:0:0 in `main`
003EB4r 2               @OPCODE_2028:   ; [c64_ir] AltPop
003EB4r 2  E8               inx
003EB5r 2  E8               inx
003EB6r 2  68               pla
003EB7r 2  95 00            sta $00,x
003EB9r 2  68               pla
003EBAr 2  95 01            sta $01,x
003EBCr 2               
003EBCr 2               ; <inline>:0:0 in `main`
003EBCr 2               @OPCODE_2029:   ; [c64_ir] Drop
003EBCr 2  CA               dex
003EBDr 2  CA               dex
003EBEr 2               
003EBEr 2               ; <inline>:0:0 in `main`
003EBEr 2               @OPCODE_2030:   ; [c64_ir] PushLiteral(7777)
003EBEr 2  E8               inx
003EBFr 2  E8               inx
003EC0r 2  A9 61            lda #97
003EC2r 2  95 00            sta $00,x
003EC4r 2  A9 1E            lda #30
003EC6r 2  95 01            sta $01,x
003EC8r 2               
003EC8r 2               ; <inline>:0:0 in `main`
003EC8r 2               @OPCODE_2031:   ; [c64_ir] AltPush
003EC8r 2  CA               dex
003EC9r 2  CA               dex
003ECAr 2  B5 03            lda $03,x
003ECCr 2  48               pha
003ECDr 2  B5 02            lda $02,x
003ECFr 2  48               pha
003ED0r 2               
003ED0r 2               ; src/prelude.fth:21:8 in `0=`
003ED0r 2               @OPCODE_2032:   ; [c64_ir] JumpIf0(68)
003ED0r 2  CA               dex
003ED1r 2  CA               dex
003ED2r 2  B5 02            lda $02,x
003ED4r 2  15 03            ora $03,x
003ED6r 2  D0 03            bne *+5
003ED8r 2  4C rr rr         jmp @target_68
003EDBr 2               
003EDBr 2               @target_67:
003EDBr 2               
003EDBr 2               ; src/prelude.fth:21:11 in `0=`
003EDBr 2               @OPCODE_2034:   ; [c64_ir] PushLiteral(0)
003EDBr 2  E8               inx
003EDCr 2  E8               inx
003EDDr 2  A9 00            lda #0
003EDFr 2  95 00            sta $00,x
003EE1r 2  A9 00            lda #0
003EE3r 2  95 01            sta $01,x
003EE5r 2               
003EE5r 2               ; src/prelude.fth:21:13 in `0=`
003EE5r 2               @OPCODE_2035:   ; [c64_ir] JumpElse(69)
003EE5r 2  4C rr rr         jmp @target_69
003EE8r 2               
003EE8r 2               @target_68:
003EE8r 2               
003EE8r 2               ; src/prelude.fth:21:18 in `0=`
003EE8r 2               @OPCODE_2037:   ; [c64_ir] PushLiteral(-1)
003EE8r 2  E8               inx
003EE9r 2  E8               inx
003EEAr 2  A9 FF            lda #255
003EECr 2  95 00            sta $00,x
003EEEr 2  A9 FF            lda #255
003EF0r 2  95 01            sta $01,x
003EF2r 2               
003EF2r 2               ; src/prelude.fth:21:21 in `0=`
003EF2r 2               @OPCODE_2038:   ; [c64_ir] JumpTarget(68)
003EF2r 2               
003EF2r 2               @target_69:
003EF2r 2               
003EF2r 2               ; <inline>:0:0 in `main`
003EF2r 2               @OPCODE_2040:   ; [c64_ir] AltPop
003EF2r 2  E8               inx
003EF3r 2  E8               inx
003EF4r 2  68               pla
003EF5r 2  95 00            sta $00,x
003EF7r 2  68               pla
003EF8r 2  95 01            sta $01,x
003EFAr 2               
003EFAr 2               ; <inline>:0:0 in `main`
003EFAr 2               @OPCODE_2041:   ; [c64_ir] Drop
003EFAr 2  CA               dex
003EFBr 2  CA               dex
003EFCr 2               
003EFCr 2               ; <inline>:0:0 in `main`
003EFCr 2               @OPCODE_2042:   ; [c64_ir] AltPop
003EFCr 2  E8               inx
003EFDr 2  E8               inx
003EFEr 2  68               pla
003EFFr 2  95 00            sta $00,x
003F01r 2  68               pla
003F02r 2  95 01            sta $01,x
003F04r 2               
003F04r 2               ; <inline>:0:0 in `main`
003F04r 2               @OPCODE_2043:   ; [c64_ir] Drop
003F04r 2  CA               dex
003F05r 2  CA               dex
003F06r 2               
003F06r 2               ; <inline>:0:0 in `main`
003F06r 2               @OPCODE_2044:   ; [c64_ir] PushLiteral(7777)
003F06r 2  E8               inx
003F07r 2  E8               inx
003F08r 2  A9 61            lda #97
003F0Ar 2  95 00            sta $00,x
003F0Cr 2  A9 1E            lda #30
003F0Er 2  95 01            sta $01,x
003F10r 2               
003F10r 2               ; <inline>:0:0 in `main`
003F10r 2               @OPCODE_2045:   ; [c64_ir] AltPush
003F10r 2  CA               dex
003F11r 2  CA               dex
003F12r 2  B5 03            lda $03,x
003F14r 2  48               pha
003F15r 2  B5 02            lda $02,x
003F17r 2  48               pha
003F18r 2               
003F18r 2               ; src/prelude.fth:3:10 in `swap`
003F18r 2               @OPCODE_2046:   ; [c64_ir] AltPush
003F18r 2  CA               dex
003F19r 2  CA               dex
003F1Ar 2  B5 03            lda $03,x
003F1Cr 2  48               pha
003F1Dr 2  B5 02            lda $02,x
003F1Fr 2  48               pha
003F20r 2               
003F20r 2               ; src/prelude.fth:3:13 in `swap`
003F20r 2               @OPCODE_2047:   ; [c64_ir] TempStore
003F20r 2  CA               dex
003F21r 2  CA               dex
003F22r 2  B5 03            lda $03,x
003F24r 2  85 96            sta TEMP_PAX2
003F26r 2  B5 02            lda $02,x
003F28r 2  85 95            sta TEMP_PAX1
003F2Ar 2               
003F2Ar 2               ; src/prelude.fth:3:19 in `swap`
003F2Ar 2               @OPCODE_2048:   ; [c64_ir] AltPop
003F2Ar 2  E8               inx
003F2Br 2  E8               inx
003F2Cr 2  68               pla
003F2Dr 2  95 00            sta $00,x
003F2Fr 2  68               pla
003F30r 2  95 01            sta $01,x
003F32r 2               
003F32r 2               ; src/prelude.fth:3:22 in `swap`
003F32r 2               @OPCODE_2049:   ; [c64_ir] TempLoad
003F32r 2  E8               inx
003F33r 2  E8               inx
003F34r 2  A5 95            lda TEMP_PAX1
003F36r 2  95 00            sta $00,x
003F38r 2  A5 96            lda TEMP_PAX2
003F3Ar 2  95 01            sta $01,x
003F3Cr 2               
003F3Cr 2               ; <inline>:0:0 in `main`
003F3Cr 2               @OPCODE_2050:   ; [c64_ir] AltPop
003F3Cr 2  E8               inx
003F3Dr 2  E8               inx
003F3Er 2  68               pla
003F3Fr 2  95 00            sta $00,x
003F41r 2  68               pla
003F42r 2  95 01            sta $01,x
003F44r 2               
003F44r 2               ; <inline>:0:0 in `main`
003F44r 2               @OPCODE_2051:   ; [c64_ir] Drop
003F44r 2  CA               dex
003F45r 2  CA               dex
003F46r 2               
003F46r 2               ; src/prelude.fth:33:42 in `loopimpl`
003F46r 2               @OPCODE_2052:   ; [c64_ir] AltPush
003F46r 2  CA               dex
003F47r 2  CA               dex
003F48r 2  B5 03            lda $03,x
003F4Ar 2  48               pha
003F4Br 2  B5 02            lda $02,x
003F4Dr 2  48               pha
003F4Er 2               
003F4Er 2               ; <inline>:0:0 in `main`
003F4Er 2               @OPCODE_2053:   ; [c64_ir] AltPop
003F4Er 2  E8               inx
003F4Fr 2  E8               inx
003F50r 2  68               pla
003F51r 2  95 00            sta $00,x
003F53r 2  68               pla
003F54r 2  95 01            sta $01,x
003F56r 2               
003F56r 2               ; <inline>:0:0 in `main`
003F56r 2               @OPCODE_2054:   ; [c64_ir] Drop
003F56r 2  CA               dex
003F57r 2  CA               dex
003F58r 2               
003F58r 2               ; src/prelude.fth:44:25 in `*`
003F58r 2               @OPCODE_2055:   ; [c64_ir] LoopIf0(66)
003F58r 2  CA               dex
003F59r 2  CA               dex
003F5Ar 2  B5 02            lda $02,x
003F5Cr 2  15 03            ora $03,x
003F5Er 2  D0 03            bne *+5
003F60r 2  4C rr rr         jmp @target_66
003F63r 2               
003F63r 2               @target_70:
003F63r 2               
003F63r 2               ; src/prelude.fth:44:25 in `*`
003F63r 2               @OPCODE_2057:   ; [c64_ir] AltPop
003F63r 2  E8               inx
003F64r 2  E8               inx
003F65r 2  68               pla
003F66r 2  95 00            sta $00,x
003F68r 2  68               pla
003F69r 2  95 01            sta $01,x
003F6Br 2               
003F6Br 2               ; src/prelude.fth:44:25 in `*`
003F6Br 2               @OPCODE_2058:   ; [c64_ir] Drop
003F6Br 2  CA               dex
003F6Cr 2  CA               dex
003F6Dr 2               
003F6Dr 2               ; src/prelude.fth:44:25 in `*`
003F6Dr 2               @OPCODE_2059:   ; [c64_ir] AltPop
003F6Dr 2  E8               inx
003F6Er 2  E8               inx
003F6Fr 2  68               pla
003F70r 2  95 00            sta $00,x
003F72r 2  68               pla
003F73r 2  95 01            sta $01,x
003F75r 2               
003F75r 2               ; src/prelude.fth:44:25 in `*`
003F75r 2               @OPCODE_2060:   ; [c64_ir] Drop
003F75r 2  CA               dex
003F76r 2  CA               dex
003F77r 2               
003F77r 2               ; <inline>:0:0 in `main`
003F77r 2               @OPCODE_2061:   ; [c64_ir] PushLiteral(7777)
003F77r 2  E8               inx
003F78r 2  E8               inx
003F79r 2  A9 61            lda #97
003F7Br 2  95 00            sta $00,x
003F7Dr 2  A9 1E            lda #30
003F7Fr 2  95 01            sta $01,x
003F81r 2               
003F81r 2               ; <inline>:0:0 in `main`
003F81r 2               @OPCODE_2062:   ; [c64_ir] AltPush
003F81r 2  CA               dex
003F82r 2  CA               dex
003F83r 2  B5 03            lda $03,x
003F85r 2  48               pha
003F86r 2  B5 02            lda $02,x
003F88r 2  48               pha
003F89r 2               
003F89r 2               ; src/prelude.fth:3:10 in `swap`
003F89r 2               @OPCODE_2063:   ; [c64_ir] AltPush
003F89r 2  CA               dex
003F8Ar 2  CA               dex
003F8Br 2  B5 03            lda $03,x
003F8Dr 2  48               pha
003F8Er 2  B5 02            lda $02,x
003F90r 2  48               pha
003F91r 2               
003F91r 2               ; src/prelude.fth:3:13 in `swap`
003F91r 2               @OPCODE_2064:   ; [c64_ir] TempStore
003F91r 2  CA               dex
003F92r 2  CA               dex
003F93r 2  B5 03            lda $03,x
003F95r 2  85 96            sta TEMP_PAX2
003F97r 2  B5 02            lda $02,x
003F99r 2  85 95            sta TEMP_PAX1
003F9Br 2               
003F9Br 2               ; src/prelude.fth:3:19 in `swap`
003F9Br 2               @OPCODE_2065:   ; [c64_ir] AltPop
003F9Br 2  E8               inx
003F9Cr 2  E8               inx
003F9Dr 2  68               pla
003F9Er 2  95 00            sta $00,x
003FA0r 2  68               pla
003FA1r 2  95 01            sta $01,x
003FA3r 2               
003FA3r 2               ; src/prelude.fth:3:22 in `swap`
003FA3r 2               @OPCODE_2066:   ; [c64_ir] TempLoad
003FA3r 2  E8               inx
003FA4r 2  E8               inx
003FA5r 2  A5 95            lda TEMP_PAX1
003FA7r 2  95 00            sta $00,x
003FA9r 2  A5 96            lda TEMP_PAX2
003FABr 2  95 01            sta $01,x
003FADr 2               
003FADr 2               ; <inline>:0:0 in `main`
003FADr 2               @OPCODE_2067:   ; [c64_ir] AltPop
003FADr 2  E8               inx
003FAEr 2  E8               inx
003FAFr 2  68               pla
003FB0r 2  95 00            sta $00,x
003FB2r 2  68               pla
003FB3r 2  95 01            sta $01,x
003FB5r 2               
003FB5r 2               ; <inline>:0:0 in `main`
003FB5r 2               @OPCODE_2068:   ; [c64_ir] Drop
003FB5r 2  CA               dex
003FB6r 2  CA               dex
003FB7r 2               
003FB7r 2               ; src/prelude.fth:44:35 in `*`
003FB7r 2               @OPCODE_2069:   ; [c64_ir] Drop
003FB7r 2  CA               dex
003FB8r 2  CA               dex
003FB9r 2               
003FB9r 2               ; <inline>:0:0 in `main`
003FB9r 2               @OPCODE_2070:   ; [c64_ir] AltPop
003FB9r 2  E8               inx
003FBAr 2  E8               inx
003FBBr 2  68               pla
003FBCr 2  95 00            sta $00,x
003FBEr 2  68               pla
003FBFr 2  95 01            sta $01,x
003FC1r 2               
003FC1r 2               ; <inline>:0:0 in `main`
003FC1r 2               @OPCODE_2071:   ; [c64_ir] Drop
003FC1r 2  CA               dex
003FC2r 2  CA               dex
003FC3r 2               
003FC3r 2               ; snake.fth:48:39 in `convert-x-y`
003FC3r 2               @OPCODE_2072:   ; [c64_ir] Add
003FC3r 2                   ; 21
003FC3r 2  CA               dex
003FC4r 2  CA               dex
003FC5r 2  18               clc
003FC6r 2  B5 00            lda $00,x
003FC8r 2  75 02            adc $02,x
003FCAr 2  95 00            sta $00,x
003FCCr 2  B5 01            lda $01,x
003FCEr 2  75 03            adc $03,x
003FD0r 2  95 01            sta $01,x
003FD2r 2               
003FD2r 2               ; <inline>:0:0 in `main`
003FD2r 2               @OPCODE_2073:   ; [c64_ir] AltPop
003FD2r 2  E8               inx
003FD3r 2  E8               inx
003FD4r 2  68               pla
003FD5r 2  95 00            sta $00,x
003FD7r 2  68               pla
003FD8r 2  95 01            sta $01,x
003FDAr 2               
003FDAr 2               ; <inline>:0:0 in `main`
003FDAr 2               @OPCODE_2074:   ; [c64_ir] Drop
003FDAr 2  CA               dex
003FDBr 2  CA               dex
003FDCr 2               
003FDCr 2               ; <inline>:0:0 in `main`
003FDCr 2               @OPCODE_2075:   ; [c64_ir] PushLiteral(7777)
003FDCr 2  E8               inx
003FDDr 2  E8               inx
003FDEr 2  A9 61            lda #97
003FE0r 2  95 00            sta $00,x
003FE2r 2  A9 1E            lda #30
003FE4r 2  95 01            sta $01,x
003FE6r 2               
003FE6r 2               ; <inline>:0:0 in `main`
003FE6r 2               @OPCODE_2076:   ; [c64_ir] AltPush
003FE6r 2  CA               dex
003FE7r 2  CA               dex
003FE8r 2  B5 03            lda $03,x
003FEAr 2  48               pha
003FEBr 2  B5 02            lda $02,x
003FEDr 2  48               pha
003FEEr 2               
003FEEr 2               ; snake.fth:49:34 in `draw-index`
003FEEr 2               @OPCODE_2077:   ; [c64_ir] PushLiteral(1024)
003FEEr 2  E8               inx
003FEFr 2  E8               inx
003FF0r 2  A9 00            lda #0
003FF2r 2  95 00            sta $00,x
003FF4r 2  A9 04            lda #4
003FF6r 2  95 01            sta $01,x
003FF8r 2               
003FF8r 2               ; snake.fth:49:43 in `draw-index`
003FF8r 2               @OPCODE_2078:   ; [c64_ir] Add
003FF8r 2                   ; 21
003FF8r 2  CA               dex
003FF9r 2  CA               dex
003FFAr 2  18               clc
003FFBr 2  B5 00            lda $00,x
003FFDr 2  75 02            adc $02,x
003FFFr 2  95 00            sta $00,x
004001r 2  B5 01            lda $01,x
004003r 2  75 03            adc $03,x
004005r 2  95 01            sta $01,x
004007r 2               
004007r 2               ; snake.fth:49:45 in `draw-index`
004007r 2               @OPCODE_2079:   ; [c64_ir] Store8
004007r 2  CA               dex
004008r 2  CA               dex
004009r 2  CA               dex
00400Ar 2  CA               dex
00400Br 2  B5 02            lda $02,x
00400Dr 2  81 04            sta ($04,x)
00400Fr 2                   ; TODO high byte
00400Fr 2               
00400Fr 2               ; <inline>:0:0 in `main`
00400Fr 2               @OPCODE_2080:   ; [c64_ir] AltPop
00400Fr 2  E8               inx
004010r 2  E8               inx
004011r 2  68               pla
004012r 2  95 00            sta $00,x
004014r 2  68               pla
004015r 2  95 01            sta $01,x
004017r 2               
004017r 2               ; <inline>:0:0 in `main`
004017r 2               @OPCODE_2081:   ; [c64_ir] Drop
004017r 2  CA               dex
004018r 2  CA               dex
004019r 2               
004019r 2               ; <inline>:0:0 in `main`
004019r 2               @OPCODE_2082:   ; [c64_ir] AltPop
004019r 2  E8               inx
00401Ar 2  E8               inx
00401Br 2  68               pla
00401Cr 2  95 00            sta $00,x
00401Er 2  68               pla
00401Fr 2  95 01            sta $01,x
004021r 2               
004021r 2               ; <inline>:0:0 in `main`
004021r 2               @OPCODE_2083:   ; [c64_ir] Drop
004021r 2  CA               dex
004022r 2  CA               dex
004023r 2               
004023r 2               ; <inline>:0:0 in `main`
004023r 2               @OPCODE_2084:   ; [c64_ir] AltPop
004023r 2  E8               inx
004024r 2  E8               inx
004025r 2  68               pla
004026r 2  95 00            sta $00,x
004028r 2  68               pla
004029r 2  95 01            sta $01,x
00402Br 2               
00402Br 2               ; <inline>:0:0 in `main`
00402Br 2               @OPCODE_2085:   ; [c64_ir] Drop
00402Br 2  CA               dex
00402Cr 2  CA               dex
00402Dr 2               
00402Dr 2               ; <inline>:0:0 in `main`
00402Dr 2               @OPCODE_2086:   ; [c64_ir] AltPop
00402Dr 2  E8               inx
00402Er 2  E8               inx
00402Fr 2  68               pla
004030r 2  95 00            sta $00,x
004032r 2  68               pla
004033r 2  95 01            sta $01,x
004035r 2               
004035r 2               ; <inline>:0:0 in `main`
004035r 2               @OPCODE_2087:   ; [c64_ir] Drop
004035r 2  CA               dex
004036r 2  CA               dex
004037r 2               
004037r 2               ; <inline>:0:0 in `main`
004037r 2               @OPCODE_2088:   ; [c64_ir] PushLiteral(7777)
004037r 2  E8               inx
004038r 2  E8               inx
004039r 2  A9 61            lda #97
00403Br 2  95 00            sta $00,x
00403Dr 2  A9 1E            lda #30
00403Fr 2  95 01            sta $01,x
004041r 2               
004041r 2               ; <inline>:0:0 in `main`
004041r 2               @OPCODE_2089:   ; [c64_ir] AltPush
004041r 2  CA               dex
004042r 2  CA               dex
004043r 2  B5 03            lda $03,x
004045r 2  48               pha
004046r 2  B5 02            lda $02,x
004048r 2  48               pha
004049r 2               
004049r 2               ; snake.fth:167:3 in `check-input`
004049r 2               @OPCODE_2090:   ; [c64_ir] PushLiteral(126)
004049r 2  E8               inx
00404Ar 2  E8               inx
00404Br 2  A9 7E            lda #126
00404Dr 2  95 00            sta $00,x
00404Fr 2  A9 00            lda #0
004051r 2  95 01            sta $01,x
004053r 2               
004053r 2               ; snake.fth:167:12 in `check-input`
004053r 2               @OPCODE_2091:   ; [c64_ir] Load
004053r 2  A1 00            lda ($00,x)
004055r 2  95 00            sta $00,x
004057r 2  A9 00            lda #0
004059r 2  95 01            sta $01,x
00405Br 2               
00405Br 2               ; <inline>:0:0 in `main`
00405Br 2               @OPCODE_2092:   ; [c64_ir] PushLiteral(7777)
00405Br 2  E8               inx
00405Cr 2  E8               inx
00405Dr 2  A9 61            lda #97
00405Fr 2  95 00            sta $00,x
004061r 2  A9 1E            lda #30
004063r 2  95 01            sta $01,x
004065r 2               
004065r 2               ; <inline>:0:0 in `main`
004065r 2               @OPCODE_2093:   ; [c64_ir] AltPush
004065r 2  CA               dex
004066r 2  CA               dex
004067r 2  B5 03            lda $03,x
004069r 2  48               pha
00406Ar 2  B5 02            lda $02,x
00406Cr 2  48               pha
00406Dr 2               
00406Dr 2               ; snake.fth:160:3 in `change-direction`
00406Dr 2               @OPCODE_2094:   ; [c64_ir] PushLiteral(37)
00406Dr 2  E8               inx
00406Er 2  E8               inx
00406Fr 2  A9 25            lda #37
004071r 2  95 00            sta $00,x
004073r 2  A9 00            lda #0
004075r 2  95 01            sta $01,x
004077r 2               
004077r 2               ; <inline>:0:0 in `main`
004077r 2               @OPCODE_2095:   ; [c64_ir] PushLiteral(7777)
004077r 2  E8               inx
004078r 2  E8               inx
004079r 2  A9 61            lda #97
00407Br 2  95 00            sta $00,x
00407Dr 2  A9 1E            lda #30
00407Fr 2  95 01            sta $01,x
004081r 2               
004081r 2               ; <inline>:0:0 in `main`
004081r 2               @OPCODE_2096:   ; [c64_ir] AltPush
004081r 2  CA               dex
004082r 2  CA               dex
004083r 2  B5 03            lda $03,x
004085r 2  48               pha
004086r 2  B5 02            lda $02,x
004088r 2  48               pha
004089r 2               
004089r 2               ; src/prelude.fth:4:10 in `over`
004089r 2               @OPCODE_2097:   ; [c64_ir] AltPush
004089r 2  CA               dex
00408Ar 2  CA               dex
00408Br 2  B5 03            lda $03,x
00408Dr 2  48               pha
00408Er 2  B5 02            lda $02,x
004090r 2  48               pha
004091r 2               
004091r 2               ; src/prelude.fth:4:13 in `over`
004091r 2               @OPCODE_2098:   ; [c64_ir] TempStore
004091r 2  CA               dex
004092r 2  CA               dex
004093r 2  B5 03            lda $03,x
004095r 2  85 96            sta TEMP_PAX2
004097r 2  B5 02            lda $02,x
004099r 2  85 95            sta TEMP_PAX1
00409Br 2               
00409Br 2               ; src/prelude.fth:4:19 in `over`
00409Br 2               @OPCODE_2099:   ; [c64_ir] TempLoad
00409Br 2  E8               inx
00409Cr 2  E8               inx
00409Dr 2  A5 95            lda TEMP_PAX1
00409Fr 2  95 00            sta $00,x
0040A1r 2  A5 96            lda TEMP_PAX2
0040A3r 2  95 01            sta $01,x
0040A5r 2               
0040A5r 2               ; src/prelude.fth:4:25 in `over`
0040A5r 2               @OPCODE_2100:   ; [c64_ir] AltPop
0040A5r 2  E8               inx
0040A6r 2  E8               inx
0040A7r 2  68               pla
0040A8r 2  95 00            sta $00,x
0040AAr 2  68               pla
0040ABr 2  95 01            sta $01,x
0040ADr 2               
0040ADr 2               ; src/prelude.fth:4:28 in `over`
0040ADr 2               @OPCODE_2101:   ; [c64_ir] TempLoad
0040ADr 2  E8               inx
0040AEr 2  E8               inx
0040AFr 2  A5 95            lda TEMP_PAX1
0040B1r 2  95 00            sta $00,x
0040B3r 2  A5 96            lda TEMP_PAX2
0040B5r 2  95 01            sta $01,x
0040B7r 2               
0040B7r 2               ; <inline>:0:0 in `main`
0040B7r 2               @OPCODE_2102:   ; [c64_ir] AltPop
0040B7r 2  E8               inx
0040B8r 2  E8               inx
0040B9r 2  68               pla
0040BAr 2  95 00            sta $00,x
0040BCr 2  68               pla
0040BDr 2  95 01            sta $01,x
0040BFr 2               
0040BFr 2               ; <inline>:0:0 in `main`
0040BFr 2               @OPCODE_2103:   ; [c64_ir] Drop
0040BFr 2  CA               dex
0040C0r 2  CA               dex
0040C1r 2               
0040C1r 2               ; <inline>:0:0 in `main`
0040C1r 2               @OPCODE_2104:   ; [c64_ir] PushLiteral(7777)
0040C1r 2  E8               inx
0040C2r 2  E8               inx
0040C3r 2  A9 61            lda #97
0040C5r 2  95 00            sta $00,x
0040C7r 2  A9 1E            lda #30
0040C9r 2  95 01            sta $01,x
0040CBr 2               
0040CBr 2               ; <inline>:0:0 in `main`
0040CBr 2               @OPCODE_2105:   ; [c64_ir] AltPush
0040CBr 2  CA               dex
0040CCr 2  CA               dex
0040CDr 2  B5 03            lda $03,x
0040CFr 2  48               pha
0040D0r 2  B5 02            lda $02,x
0040D2r 2  48               pha
0040D3r 2               
0040D3r 2               ; <inline>:0:0 in `main`
0040D3r 2               @OPCODE_2106:   ; [c64_ir] PushLiteral(7777)
0040D3r 2  E8               inx
0040D4r 2  E8               inx
0040D5r 2  A9 61            lda #97
0040D7r 2  95 00            sta $00,x
0040D9r 2  A9 1E            lda #30
0040DBr 2  95 01            sta $01,x
0040DDr 2               
0040DDr 2               ; <inline>:0:0 in `main`
0040DDr 2               @OPCODE_2107:   ; [c64_ir] AltPush
0040DDr 2  CA               dex
0040DEr 2  CA               dex
0040DFr 2  B5 03            lda $03,x
0040E1r 2  48               pha
0040E2r 2  B5 02            lda $02,x
0040E4r 2  48               pha
0040E5r 2               
0040E5r 2               ; <inline>:0:0 in `main`
0040E5r 2               @OPCODE_2108:   ; [c64_ir] PushLiteral(7777)
0040E5r 2  E8               inx
0040E6r 2  E8               inx
0040E7r 2  A9 61            lda #97
0040E9r 2  95 00            sta $00,x
0040EBr 2  A9 1E            lda #30
0040EDr 2  95 01            sta $01,x
0040EFr 2               
0040EFr 2               ; <inline>:0:0 in `main`
0040EFr 2               @OPCODE_2109:   ; [c64_ir] AltPush
0040EFr 2  CA               dex
0040F0r 2  CA               dex
0040F1r 2  B5 03            lda $03,x
0040F3r 2  48               pha
0040F4r 2  B5 02            lda $02,x
0040F6r 2  48               pha
0040F7r 2               
0040F7r 2               ; <inline>:0:0 in `main`
0040F7r 2               @OPCODE_2110:   ; [c64_ir] PushLiteral(7777)
0040F7r 2  E8               inx
0040F8r 2  E8               inx
0040F9r 2  A9 61            lda #97
0040FBr 2  95 00            sta $00,x
0040FDr 2  A9 1E            lda #30
0040FFr 2  95 01            sta $01,x
004101r 2               
004101r 2               ; <inline>:0:0 in `main`
004101r 2               @OPCODE_2111:   ; [c64_ir] AltPush
004101r 2  CA               dex
004102r 2  CA               dex
004103r 2  B5 03            lda $03,x
004105r 2  48               pha
004106r 2  B5 02            lda $02,x
004108r 2  48               pha
004109r 2               
004109r 2               ; src/prelude.fth:14:12 in `invert`
004109r 2               @OPCODE_2112:   ; [c64_ir] PushLiteral(-1)
004109r 2  E8               inx
00410Ar 2  E8               inx
00410Br 2  A9 FF            lda #255
00410Dr 2  95 00            sta $00,x
00410Fr 2  A9 FF            lda #255
004111r 2  95 01            sta $01,x
004113r 2               
004113r 2               ; src/prelude.fth:14:15 in `invert`
004113r 2               @OPCODE_2113:   ; [c64_ir] Nand
004113r 2                   ; 26
004113r 2  CA               dex
004114r 2  CA               dex
004115r 2  B5 00            lda $00,x
004117r 2  35 02            and $02,x
004119r 2  49 FF            eor #$ff
00411Br 2  95 00            sta $00,x
00411Dr 2  B5 01            lda $01,x
00411Fr 2  35 03            and $03,x
004121r 2  49 FF            eor #$ff
004123r 2  95 01            sta $01,x
004125r 2               
004125r 2               ; <inline>:0:0 in `main`
004125r 2               @OPCODE_2114:   ; [c64_ir] AltPop
004125r 2  E8               inx
004126r 2  E8               inx
004127r 2  68               pla
004128r 2  95 00            sta $00,x
00412Ar 2  68               pla
00412Br 2  95 01            sta $01,x
00412Dr 2               
00412Dr 2               ; <inline>:0:0 in `main`
00412Dr 2               @OPCODE_2115:   ; [c64_ir] Drop
00412Dr 2  CA               dex
00412Er 2  CA               dex
00412Fr 2               
00412Fr 2               ; src/prelude.fth:15:19 in `negate`
00412Fr 2               @OPCODE_2116:   ; [c64_ir] PushLiteral(1)
00412Fr 2  E8               inx
004130r 2  E8               inx
004131r 2  A9 01            lda #1
004133r 2  95 00            sta $00,x
004135r 2  A9 00            lda #0
004137r 2  95 01            sta $01,x
004139r 2               
004139r 2               ; src/prelude.fth:15:21 in `negate`
004139r 2               @OPCODE_2117:   ; [c64_ir] Add
004139r 2                   ; 21
004139r 2  CA               dex
00413Ar 2  CA               dex
00413Br 2  18               clc
00413Cr 2  B5 00            lda $00,x
00413Er 2  75 02            adc $02,x
004140r 2  95 00            sta $00,x
004142r 2  B5 01            lda $01,x
004144r 2  75 03            adc $03,x
004146r 2  95 01            sta $01,x
004148r 2               
004148r 2               ; <inline>:0:0 in `main`
004148r 2               @OPCODE_2118:   ; [c64_ir] AltPop
004148r 2  E8               inx
004149r 2  E8               inx
00414Ar 2  68               pla
00414Br 2  95 00            sta $00,x
00414Dr 2  68               pla
00414Er 2  95 01            sta $01,x
004150r 2               
004150r 2               ; <inline>:0:0 in `main`
004150r 2               @OPCODE_2119:   ; [c64_ir] Drop
004150r 2  CA               dex
004151r 2  CA               dex
004152r 2               
004152r 2               ; src/prelude.fth:16:19 in `-`
004152r 2               @OPCODE_2120:   ; [c64_ir] Add
004152r 2                   ; 21
004152r 2  CA               dex
004153r 2  CA               dex
004154r 2  18               clc
004155r 2  B5 00            lda $00,x
004157r 2  75 02            adc $02,x
004159r 2  95 00            sta $00,x
00415Br 2  B5 01            lda $01,x
00415Dr 2  75 03            adc $03,x
00415Fr 2  95 01            sta $01,x
004161r 2               
004161r 2               ; <inline>:0:0 in `main`
004161r 2               @OPCODE_2121:   ; [c64_ir] AltPop
004161r 2  E8               inx
004162r 2  E8               inx
004163r 2  68               pla
004164r 2  95 00            sta $00,x
004166r 2  68               pla
004167r 2  95 01            sta $01,x
004169r 2               
004169r 2               ; <inline>:0:0 in `main`
004169r 2               @OPCODE_2122:   ; [c64_ir] Drop
004169r 2  CA               dex
00416Ar 2  CA               dex
00416Br 2               
00416Br 2               ; <inline>:0:0 in `main`
00416Br 2               @OPCODE_2123:   ; [c64_ir] PushLiteral(7777)
00416Br 2  E8               inx
00416Cr 2  E8               inx
00416Dr 2  A9 61            lda #97
00416Fr 2  95 00            sta $00,x
004171r 2  A9 1E            lda #30
004173r 2  95 01            sta $01,x
004175r 2               
004175r 2               ; <inline>:0:0 in `main`
004175r 2               @OPCODE_2124:   ; [c64_ir] AltPush
004175r 2  CA               dex
004176r 2  CA               dex
004177r 2  B5 03            lda $03,x
004179r 2  48               pha
00417Ar 2  B5 02            lda $02,x
00417Cr 2  48               pha
00417Dr 2               
00417Dr 2               ; src/prelude.fth:21:8 in `0=`
00417Dr 2               @OPCODE_2125:   ; [c64_ir] JumpIf0(72)
00417Dr 2  CA               dex
00417Er 2  CA               dex
00417Fr 2  B5 02            lda $02,x
004181r 2  15 03            ora $03,x
004183r 2  D0 03            bne *+5
004185r 2  4C rr rr         jmp @target_72
004188r 2               
004188r 2               @target_71:
004188r 2               
004188r 2               ; src/prelude.fth:21:11 in `0=`
004188r 2               @OPCODE_2127:   ; [c64_ir] PushLiteral(0)
004188r 2  E8               inx
004189r 2  E8               inx
00418Ar 2  A9 00            lda #0
00418Cr 2  95 00            sta $00,x
00418Er 2  A9 00            lda #0
004190r 2  95 01            sta $01,x
004192r 2               
004192r 2               ; src/prelude.fth:21:13 in `0=`
004192r 2               @OPCODE_2128:   ; [c64_ir] JumpElse(73)
004192r 2  4C rr rr         jmp @target_73
004195r 2               
004195r 2               @target_72:
004195r 2               
004195r 2               ; src/prelude.fth:21:18 in `0=`
004195r 2               @OPCODE_2130:   ; [c64_ir] PushLiteral(-1)
004195r 2  E8               inx
004196r 2  E8               inx
004197r 2  A9 FF            lda #255
004199r 2  95 00            sta $00,x
00419Br 2  A9 FF            lda #255
00419Dr 2  95 01            sta $01,x
00419Fr 2               
00419Fr 2               ; src/prelude.fth:21:21 in `0=`
00419Fr 2               @OPCODE_2131:   ; [c64_ir] JumpTarget(72)
00419Fr 2               
00419Fr 2               @target_73:
00419Fr 2               
00419Fr 2               ; <inline>:0:0 in `main`
00419Fr 2               @OPCODE_2133:   ; [c64_ir] AltPop
00419Fr 2  E8               inx
0041A0r 2  E8               inx
0041A1r 2  68               pla
0041A2r 2  95 00            sta $00,x
0041A4r 2  68               pla
0041A5r 2  95 01            sta $01,x
0041A7r 2               
0041A7r 2               ; <inline>:0:0 in `main`
0041A7r 2               @OPCODE_2134:   ; [c64_ir] Drop
0041A7r 2  CA               dex
0041A8r 2  CA               dex
0041A9r 2               
0041A9r 2               ; <inline>:0:0 in `main`
0041A9r 2               @OPCODE_2135:   ; [c64_ir] AltPop
0041A9r 2  E8               inx
0041AAr 2  E8               inx
0041ABr 2  68               pla
0041ACr 2  95 00            sta $00,x
0041AEr 2  68               pla
0041AFr 2  95 01            sta $01,x
0041B1r 2               
0041B1r 2               ; <inline>:0:0 in `main`
0041B1r 2               @OPCODE_2136:   ; [c64_ir] Drop
0041B1r 2  CA               dex
0041B2r 2  CA               dex
0041B3r 2               
0041B3r 2               ; snake.fth:160:15 in `change-direction`
0041B3r 2               @OPCODE_2137:   ; [c64_ir] JumpIf0(83)
0041B3r 2  CA               dex
0041B4r 2  CA               dex
0041B5r 2  B5 02            lda $02,x
0041B7r 2  15 03            ora $03,x
0041B9r 2  D0 03            bne *+5
0041BBr 2  4C rr rr         jmp @target_83
0041BEr 2               
0041BEr 2               @target_74:
0041BEr 2               
0041BEr 2               ; <inline>:0:0 in `main`
0041BEr 2               @OPCODE_2139:   ; [c64_ir] PushLiteral(7777)
0041BEr 2  E8               inx
0041BFr 2  E8               inx
0041C0r 2  A9 61            lda #97
0041C2r 2  95 00            sta $00,x
0041C4r 2  A9 1E            lda #30
0041C6r 2  95 01            sta $01,x
0041C8r 2               
0041C8r 2               ; <inline>:0:0 in `main`
0041C8r 2               @OPCODE_2140:   ; [c64_ir] AltPush
0041C8r 2  CA               dex
0041C9r 2  CA               dex
0041CAr 2  B5 03            lda $03,x
0041CCr 2  48               pha
0041CDr 2  B5 02            lda $02,x
0041CFr 2  48               pha
0041D0r 2               
0041D0r 2               ; <inline>:0:0 in `main`
0041D0r 2               @OPCODE_2141:   ; [c64_ir] PushLiteral(7777)
0041D0r 2  E8               inx
0041D1r 2  E8               inx
0041D2r 2  A9 61            lda #97
0041D4r 2  95 00            sta $00,x
0041D6r 2  A9 1E            lda #30
0041D8r 2  95 01            sta $01,x
0041DAr 2               
0041DAr 2               ; <inline>:0:0 in `main`
0041DAr 2               @OPCODE_2142:   ; [c64_ir] AltPush
0041DAr 2  CA               dex
0041DBr 2  CA               dex
0041DCr 2  B5 03            lda $03,x
0041DEr 2  48               pha
0041DFr 2  B5 02            lda $02,x
0041E1r 2  48               pha
0041E2r 2               
0041E2r 2               ; snake.fth:150:16 in `is-vertical`
0041E2r 2               @OPCODE_2143:   ; [c64_ir] PushLiteral(-26660)
0041E2r 2  E8               inx
0041E3r 2  E8               inx
0041E4r 2  A9 DC            lda #220
0041E6r 2  95 00            sta $00,x
0041E8r 2  A9 97            lda #151
0041EAr 2  95 01            sta $01,x
0041ECr 2               
0041ECr 2               ; snake.fth:150:26 in `is-vertical`
0041ECr 2               @OPCODE_2144:   ; [c64_ir] Load
0041ECr 2  A1 00            lda ($00,x)
0041EEr 2  95 00            sta $00,x
0041F0r 2  A9 00            lda #0
0041F2r 2  95 01            sta $01,x
0041F4r 2               
0041F4r 2               ; <inline>:0:0 in `main`
0041F4r 2               @OPCODE_2145:   ; [c64_ir] PushLiteral(7777)
0041F4r 2  E8               inx
0041F5r 2  E8               inx
0041F6r 2  A9 61            lda #97
0041F8r 2  95 00            sta $00,x
0041FAr 2  A9 1E            lda #30
0041FCr 2  95 01            sta $01,x
0041FEr 2               
0041FEr 2               ; <inline>:0:0 in `main`
0041FEr 2               @OPCODE_2146:   ; [c64_ir] AltPush
0041FEr 2  CA               dex
0041FFr 2  CA               dex
004200r 2  B5 03            lda $03,x
004202r 2  48               pha
004203r 2  B5 02            lda $02,x
004205r 2  48               pha
004206r 2               
004206r 2               ; src/prelude.fth:6:10 in `dup`
004206r 2               @OPCODE_2147:   ; [c64_ir] TempStore
004206r 2  CA               dex
004207r 2  CA               dex
004208r 2  B5 03            lda $03,x
00420Ar 2  85 96            sta TEMP_PAX2
00420Cr 2  B5 02            lda $02,x
00420Er 2  85 95            sta TEMP_PAX1
004210r 2               
004210r 2               ; src/prelude.fth:6:16 in `dup`
004210r 2               @OPCODE_2148:   ; [c64_ir] TempLoad
004210r 2  E8               inx
004211r 2  E8               inx
004212r 2  A5 95            lda TEMP_PAX1
004214r 2  95 00            sta $00,x
004216r 2  A5 96            lda TEMP_PAX2
004218r 2  95 01            sta $01,x
00421Ar 2               
00421Ar 2               ; src/prelude.fth:6:22 in `dup`
00421Ar 2               @OPCODE_2149:   ; [c64_ir] TempLoad
00421Ar 2  E8               inx
00421Br 2  E8               inx
00421Cr 2  A5 95            lda TEMP_PAX1
00421Er 2  95 00            sta $00,x
004220r 2  A5 96            lda TEMP_PAX2
004222r 2  95 01            sta $01,x
004224r 2               
004224r 2               ; <inline>:0:0 in `main`
004224r 2               @OPCODE_2150:   ; [c64_ir] AltPop
004224r 2  E8               inx
004225r 2  E8               inx
004226r 2  68               pla
004227r 2  95 00            sta $00,x
004229r 2  68               pla
00422Ar 2  95 01            sta $01,x
00422Cr 2               
00422Cr 2               ; <inline>:0:0 in `main`
00422Cr 2               @OPCODE_2151:   ; [c64_ir] Drop
00422Cr 2  CA               dex
00422Dr 2  CA               dex
00422Er 2               
00422Er 2               ; snake.fth:151:3 in `is-vertical`
00422Er 2               @OPCODE_2152:   ; [c64_ir] PushLiteral(38)
00422Er 2  E8               inx
00422Fr 2  E8               inx
004230r 2  A9 26            lda #38
004232r 2  95 00            sta $00,x
004234r 2  A9 00            lda #0
004236r 2  95 01            sta $01,x
004238r 2               
004238r 2               ; <inline>:0:0 in `main`
004238r 2               @OPCODE_2153:   ; [c64_ir] PushLiteral(7777)
004238r 2  E8               inx
004239r 2  E8               inx
00423Ar 2  A9 61            lda #97
00423Cr 2  95 00            sta $00,x
00423Er 2  A9 1E            lda #30
004240r 2  95 01            sta $01,x
004242r 2               
004242r 2               ; <inline>:0:0 in `main`
004242r 2               @OPCODE_2154:   ; [c64_ir] AltPush
004242r 2  CA               dex
004243r 2  CA               dex
004244r 2  B5 03            lda $03,x
004246r 2  48               pha
004247r 2  B5 02            lda $02,x
004249r 2  48               pha
00424Ar 2               
00424Ar 2               ; <inline>:0:0 in `main`
00424Ar 2               @OPCODE_2155:   ; [c64_ir] PushLiteral(7777)
00424Ar 2  E8               inx
00424Br 2  E8               inx
00424Cr 2  A9 61            lda #97
00424Er 2  95 00            sta $00,x
004250r 2  A9 1E            lda #30
004252r 2  95 01            sta $01,x
004254r 2               
004254r 2               ; <inline>:0:0 in `main`
004254r 2               @OPCODE_2156:   ; [c64_ir] AltPush
004254r 2  CA               dex
004255r 2  CA               dex
004256r 2  B5 03            lda $03,x
004258r 2  48               pha
004259r 2  B5 02            lda $02,x
00425Br 2  48               pha
00425Cr 2               
00425Cr 2               ; <inline>:0:0 in `main`
00425Cr 2               @OPCODE_2157:   ; [c64_ir] PushLiteral(7777)
00425Cr 2  E8               inx
00425Dr 2  E8               inx
00425Er 2  A9 61            lda #97
004260r 2  95 00            sta $00,x
004262r 2  A9 1E            lda #30
004264r 2  95 01            sta $01,x
004266r 2               
004266r 2               ; <inline>:0:0 in `main`
004266r 2               @OPCODE_2158:   ; [c64_ir] AltPush
004266r 2  CA               dex
004267r 2  CA               dex
004268r 2  B5 03            lda $03,x
00426Ar 2  48               pha
00426Br 2  B5 02            lda $02,x
00426Dr 2  48               pha
00426Er 2               
00426Er 2               ; <inline>:0:0 in `main`
00426Er 2               @OPCODE_2159:   ; [c64_ir] PushLiteral(7777)
00426Er 2  E8               inx
00426Fr 2  E8               inx
004270r 2  A9 61            lda #97
004272r 2  95 00            sta $00,x
004274r 2  A9 1E            lda #30
004276r 2  95 01            sta $01,x
004278r 2               
004278r 2               ; <inline>:0:0 in `main`
004278r 2               @OPCODE_2160:   ; [c64_ir] AltPush
004278r 2  CA               dex
004279r 2  CA               dex
00427Ar 2  B5 03            lda $03,x
00427Cr 2  48               pha
00427Dr 2  B5 02            lda $02,x
00427Fr 2  48               pha
004280r 2               
004280r 2               ; src/prelude.fth:14:12 in `invert`
004280r 2               @OPCODE_2161:   ; [c64_ir] PushLiteral(-1)
004280r 2  E8               inx
004281r 2  E8               inx
004282r 2  A9 FF            lda #255
004284r 2  95 00            sta $00,x
004286r 2  A9 FF            lda #255
004288r 2  95 01            sta $01,x
00428Ar 2               
00428Ar 2               ; src/prelude.fth:14:15 in `invert`
00428Ar 2               @OPCODE_2162:   ; [c64_ir] Nand
00428Ar 2                   ; 26
00428Ar 2  CA               dex
00428Br 2  CA               dex
00428Cr 2  B5 00            lda $00,x
00428Er 2  35 02            and $02,x
004290r 2  49 FF            eor #$ff
004292r 2  95 00            sta $00,x
004294r 2  B5 01            lda $01,x
004296r 2  35 03            and $03,x
004298r 2  49 FF            eor #$ff
00429Ar 2  95 01            sta $01,x
00429Cr 2               
00429Cr 2               ; <inline>:0:0 in `main`
00429Cr 2               @OPCODE_2163:   ; [c64_ir] AltPop
00429Cr 2  E8               inx
00429Dr 2  E8               inx
00429Er 2  68               pla
00429Fr 2  95 00            sta $00,x
0042A1r 2  68               pla
0042A2r 2  95 01            sta $01,x
0042A4r 2               
0042A4r 2               ; <inline>:0:0 in `main`
0042A4r 2               @OPCODE_2164:   ; [c64_ir] Drop
0042A4r 2  CA               dex
0042A5r 2  CA               dex
0042A6r 2               
0042A6r 2               ; src/prelude.fth:15:19 in `negate`
0042A6r 2               @OPCODE_2165:   ; [c64_ir] PushLiteral(1)
0042A6r 2  E8               inx
0042A7r 2  E8               inx
0042A8r 2  A9 01            lda #1
0042AAr 2  95 00            sta $00,x
0042ACr 2  A9 00            lda #0
0042AEr 2  95 01            sta $01,x
0042B0r 2               
0042B0r 2               ; src/prelude.fth:15:21 in `negate`
0042B0r 2               @OPCODE_2166:   ; [c64_ir] Add
0042B0r 2                   ; 21
0042B0r 2  CA               dex
0042B1r 2  CA               dex
0042B2r 2  18               clc
0042B3r 2  B5 00            lda $00,x
0042B5r 2  75 02            adc $02,x
0042B7r 2  95 00            sta $00,x
0042B9r 2  B5 01            lda $01,x
0042BBr 2  75 03            adc $03,x
0042BDr 2  95 01            sta $01,x
0042BFr 2               
0042BFr 2               ; <inline>:0:0 in `main`
0042BFr 2               @OPCODE_2167:   ; [c64_ir] AltPop
0042BFr 2  E8               inx
0042C0r 2  E8               inx
0042C1r 2  68               pla
0042C2r 2  95 00            sta $00,x
0042C4r 2  68               pla
0042C5r 2  95 01            sta $01,x
0042C7r 2               
0042C7r 2               ; <inline>:0:0 in `main`
0042C7r 2               @OPCODE_2168:   ; [c64_ir] Drop
0042C7r 2  CA               dex
0042C8r 2  CA               dex
0042C9r 2               
0042C9r 2               ; src/prelude.fth:16:19 in `-`
0042C9r 2               @OPCODE_2169:   ; [c64_ir] Add
0042C9r 2                   ; 21
0042C9r 2  CA               dex
0042CAr 2  CA               dex
0042CBr 2  18               clc
0042CCr 2  B5 00            lda $00,x
0042CEr 2  75 02            adc $02,x
0042D0r 2  95 00            sta $00,x
0042D2r 2  B5 01            lda $01,x
0042D4r 2  75 03            adc $03,x
0042D6r 2  95 01            sta $01,x
0042D8r 2               
0042D8r 2               ; <inline>:0:0 in `main`
0042D8r 2               @OPCODE_2170:   ; [c64_ir] AltPop
0042D8r 2  E8               inx
0042D9r 2  E8               inx
0042DAr 2  68               pla
0042DBr 2  95 00            sta $00,x
0042DDr 2  68               pla
0042DEr 2  95 01            sta $01,x
0042E0r 2               
0042E0r 2               ; <inline>:0:0 in `main`
0042E0r 2               @OPCODE_2171:   ; [c64_ir] Drop
0042E0r 2  CA               dex
0042E1r 2  CA               dex
0042E2r 2               
0042E2r 2               ; <inline>:0:0 in `main`
0042E2r 2               @OPCODE_2172:   ; [c64_ir] PushLiteral(7777)
0042E2r 2  E8               inx
0042E3r 2  E8               inx
0042E4r 2  A9 61            lda #97
0042E6r 2  95 00            sta $00,x
0042E8r 2  A9 1E            lda #30
0042EAr 2  95 01            sta $01,x
0042ECr 2               
0042ECr 2               ; <inline>:0:0 in `main`
0042ECr 2               @OPCODE_2173:   ; [c64_ir] AltPush
0042ECr 2  CA               dex
0042EDr 2  CA               dex
0042EEr 2  B5 03            lda $03,x
0042F0r 2  48               pha
0042F1r 2  B5 02            lda $02,x
0042F3r 2  48               pha
0042F4r 2               
0042F4r 2               ; src/prelude.fth:21:8 in `0=`
0042F4r 2               @OPCODE_2174:   ; [c64_ir] JumpIf0(76)
0042F4r 2  CA               dex
0042F5r 2  CA               dex
0042F6r 2  B5 02            lda $02,x
0042F8r 2  15 03            ora $03,x
0042FAr 2  D0 03            bne *+5
0042FCr 2  4C rr rr         jmp @target_76
0042FFr 2               
0042FFr 2               @target_75:
0042FFr 2               
0042FFr 2               ; src/prelude.fth:21:11 in `0=`
0042FFr 2               @OPCODE_2176:   ; [c64_ir] PushLiteral(0)
0042FFr 2  E8               inx
004300r 2  E8               inx
004301r 2  A9 00            lda #0
004303r 2  95 00            sta $00,x
004305r 2  A9 00            lda #0
004307r 2  95 01            sta $01,x
004309r 2               
004309r 2               ; src/prelude.fth:21:13 in `0=`
004309r 2               @OPCODE_2177:   ; [c64_ir] JumpElse(77)
004309r 2  4C rr rr         jmp @target_77
00430Cr 2               
00430Cr 2               @target_76:
00430Cr 2               
00430Cr 2               ; src/prelude.fth:21:18 in `0=`
00430Cr 2               @OPCODE_2179:   ; [c64_ir] PushLiteral(-1)
00430Cr 2  E8               inx
00430Dr 2  E8               inx
00430Er 2  A9 FF            lda #255
004310r 2  95 00            sta $00,x
004312r 2  A9 FF            lda #255
004314r 2  95 01            sta $01,x
004316r 2               
004316r 2               ; src/prelude.fth:21:21 in `0=`
004316r 2               @OPCODE_2180:   ; [c64_ir] JumpTarget(76)
004316r 2               
004316r 2               @target_77:
004316r 2               
004316r 2               ; <inline>:0:0 in `main`
004316r 2               @OPCODE_2182:   ; [c64_ir] AltPop
004316r 2  E8               inx
004317r 2  E8               inx
004318r 2  68               pla
004319r 2  95 00            sta $00,x
00431Br 2  68               pla
00431Cr 2  95 01            sta $01,x
00431Er 2               
00431Er 2               ; <inline>:0:0 in `main`
00431Er 2               @OPCODE_2183:   ; [c64_ir] Drop
00431Er 2  CA               dex
00431Fr 2  CA               dex
004320r 2               
004320r 2               ; <inline>:0:0 in `main`
004320r 2               @OPCODE_2184:   ; [c64_ir] AltPop
004320r 2  E8               inx
004321r 2  E8               inx
004322r 2  68               pla
004323r 2  95 00            sta $00,x
004325r 2  68               pla
004326r 2  95 01            sta $01,x
004328r 2               
004328r 2               ; <inline>:0:0 in `main`
004328r 2               @OPCODE_2185:   ; [c64_ir] Drop
004328r 2  CA               dex
004329r 2  CA               dex
00432Ar 2               
00432Ar 2               ; <inline>:0:0 in `main`
00432Ar 2               @OPCODE_2186:   ; [c64_ir] PushLiteral(7777)
00432Ar 2  E8               inx
00432Br 2  E8               inx
00432Cr 2  A9 61            lda #97
00432Er 2  95 00            sta $00,x
004330r 2  A9 1E            lda #30
004332r 2  95 01            sta $01,x
004334r 2               
004334r 2               ; <inline>:0:0 in `main`
004334r 2               @OPCODE_2187:   ; [c64_ir] AltPush
004334r 2  CA               dex
004335r 2  CA               dex
004336r 2  B5 03            lda $03,x
004338r 2  48               pha
004339r 2  B5 02            lda $02,x
00433Br 2  48               pha
00433Cr 2               
00433Cr 2               ; src/prelude.fth:3:10 in `swap`
00433Cr 2               @OPCODE_2188:   ; [c64_ir] AltPush
00433Cr 2  CA               dex
00433Dr 2  CA               dex
00433Er 2  B5 03            lda $03,x
004340r 2  48               pha
004341r 2  B5 02            lda $02,x
004343r 2  48               pha
004344r 2               
004344r 2               ; src/prelude.fth:3:13 in `swap`
004344r 2               @OPCODE_2189:   ; [c64_ir] TempStore
004344r 2  CA               dex
004345r 2  CA               dex
004346r 2  B5 03            lda $03,x
004348r 2  85 96            sta TEMP_PAX2
00434Ar 2  B5 02            lda $02,x
00434Cr 2  85 95            sta TEMP_PAX1
00434Er 2               
00434Er 2               ; src/prelude.fth:3:19 in `swap`
00434Er 2               @OPCODE_2190:   ; [c64_ir] AltPop
00434Er 2  E8               inx
00434Fr 2  E8               inx
004350r 2  68               pla
004351r 2  95 00            sta $00,x
004353r 2  68               pla
004354r 2  95 01            sta $01,x
004356r 2               
004356r 2               ; src/prelude.fth:3:22 in `swap`
004356r 2               @OPCODE_2191:   ; [c64_ir] TempLoad
004356r 2  E8               inx
004357r 2  E8               inx
004358r 2  A5 95            lda TEMP_PAX1
00435Ar 2  95 00            sta $00,x
00435Cr 2  A5 96            lda TEMP_PAX2
00435Er 2  95 01            sta $01,x
004360r 2               
004360r 2               ; <inline>:0:0 in `main`
004360r 2               @OPCODE_2192:   ; [c64_ir] AltPop
004360r 2  E8               inx
004361r 2  E8               inx
004362r 2  68               pla
004363r 2  95 00            sta $00,x
004365r 2  68               pla
004366r 2  95 01            sta $01,x
004368r 2               
004368r 2               ; <inline>:0:0 in `main`
004368r 2               @OPCODE_2193:   ; [c64_ir] Drop
004368r 2  CA               dex
004369r 2  CA               dex
00436Ar 2               
00436Ar 2               ; snake.fth:152:3 in `is-vertical`
00436Ar 2               @OPCODE_2194:   ; [c64_ir] PushLiteral(40)
00436Ar 2  E8               inx
00436Br 2  E8               inx
00436Cr 2  A9 28            lda #40
00436Er 2  95 00            sta $00,x
004370r 2  A9 00            lda #0
004372r 2  95 01            sta $01,x
004374r 2               
004374r 2               ; <inline>:0:0 in `main`
004374r 2               @OPCODE_2195:   ; [c64_ir] PushLiteral(7777)
004374r 2  E8               inx
004375r 2  E8               inx
004376r 2  A9 61            lda #97
004378r 2  95 00            sta $00,x
00437Ar 2  A9 1E            lda #30
00437Cr 2  95 01            sta $01,x
00437Er 2               
00437Er 2               ; <inline>:0:0 in `main`
00437Er 2               @OPCODE_2196:   ; [c64_ir] AltPush
00437Er 2  CA               dex
00437Fr 2  CA               dex
004380r 2  B5 03            lda $03,x
004382r 2  48               pha
004383r 2  B5 02            lda $02,x
004385r 2  48               pha
004386r 2               
004386r 2               ; <inline>:0:0 in `main`
004386r 2               @OPCODE_2197:   ; [c64_ir] PushLiteral(7777)
004386r 2  E8               inx
004387r 2  E8               inx
004388r 2  A9 61            lda #97
00438Ar 2  95 00            sta $00,x
00438Cr 2  A9 1E            lda #30
00438Er 2  95 01            sta $01,x
004390r 2               
004390r 2               ; <inline>:0:0 in `main`
004390r 2               @OPCODE_2198:   ; [c64_ir] AltPush
004390r 2  CA               dex
004391r 2  CA               dex
004392r 2  B5 03            lda $03,x
004394r 2  48               pha
004395r 2  B5 02            lda $02,x
004397r 2  48               pha
004398r 2               
004398r 2               ; <inline>:0:0 in `main`
004398r 2               @OPCODE_2199:   ; [c64_ir] PushLiteral(7777)
004398r 2  E8               inx
004399r 2  E8               inx
00439Ar 2  A9 61            lda #97
00439Cr 2  95 00            sta $00,x
00439Er 2  A9 1E            lda #30
0043A0r 2  95 01            sta $01,x
0043A2r 2               
0043A2r 2               ; <inline>:0:0 in `main`
0043A2r 2               @OPCODE_2200:   ; [c64_ir] AltPush
0043A2r 2  CA               dex
0043A3r 2  CA               dex
0043A4r 2  B5 03            lda $03,x
0043A6r 2  48               pha
0043A7r 2  B5 02            lda $02,x
0043A9r 2  48               pha
0043AAr 2               
0043AAr 2               ; <inline>:0:0 in `main`
0043AAr 2               @OPCODE_2201:   ; [c64_ir] PushLiteral(7777)
0043AAr 2  E8               inx
0043ABr 2  E8               inx
0043ACr 2  A9 61            lda #97
0043AEr 2  95 00            sta $00,x
0043B0r 2  A9 1E            lda #30
0043B2r 2  95 01            sta $01,x
0043B4r 2               
0043B4r 2               ; <inline>:0:0 in `main`
0043B4r 2               @OPCODE_2202:   ; [c64_ir] AltPush
0043B4r 2  CA               dex
0043B5r 2  CA               dex
0043B6r 2  B5 03            lda $03,x
0043B8r 2  48               pha
0043B9r 2  B5 02            lda $02,x
0043BBr 2  48               pha
0043BCr 2               
0043BCr 2               ; src/prelude.fth:14:12 in `invert`
0043BCr 2               @OPCODE_2203:   ; [c64_ir] PushLiteral(-1)
0043BCr 2  E8               inx
0043BDr 2  E8               inx
0043BEr 2  A9 FF            lda #255
0043C0r 2  95 00            sta $00,x
0043C2r 2  A9 FF            lda #255
0043C4r 2  95 01            sta $01,x
0043C6r 2               
0043C6r 2               ; src/prelude.fth:14:15 in `invert`
0043C6r 2               @OPCODE_2204:   ; [c64_ir] Nand
0043C6r 2                   ; 26
0043C6r 2  CA               dex
0043C7r 2  CA               dex
0043C8r 2  B5 00            lda $00,x
0043CAr 2  35 02            and $02,x
0043CCr 2  49 FF            eor #$ff
0043CEr 2  95 00            sta $00,x
0043D0r 2  B5 01            lda $01,x
0043D2r 2  35 03            and $03,x
0043D4r 2  49 FF            eor #$ff
0043D6r 2  95 01            sta $01,x
0043D8r 2               
0043D8r 2               ; <inline>:0:0 in `main`
0043D8r 2               @OPCODE_2205:   ; [c64_ir] AltPop
0043D8r 2  E8               inx
0043D9r 2  E8               inx
0043DAr 2  68               pla
0043DBr 2  95 00            sta $00,x
0043DDr 2  68               pla
0043DEr 2  95 01            sta $01,x
0043E0r 2               
0043E0r 2               ; <inline>:0:0 in `main`
0043E0r 2               @OPCODE_2206:   ; [c64_ir] Drop
0043E0r 2  CA               dex
0043E1r 2  CA               dex
0043E2r 2               
0043E2r 2               ; src/prelude.fth:15:19 in `negate`
0043E2r 2               @OPCODE_2207:   ; [c64_ir] PushLiteral(1)
0043E2r 2  E8               inx
0043E3r 2  E8               inx
0043E4r 2  A9 01            lda #1
0043E6r 2  95 00            sta $00,x
0043E8r 2  A9 00            lda #0
0043EAr 2  95 01            sta $01,x
0043ECr 2               
0043ECr 2               ; src/prelude.fth:15:21 in `negate`
0043ECr 2               @OPCODE_2208:   ; [c64_ir] Add
0043ECr 2                   ; 21
0043ECr 2  CA               dex
0043EDr 2  CA               dex
0043EEr 2  18               clc
0043EFr 2  B5 00            lda $00,x
0043F1r 2  75 02            adc $02,x
0043F3r 2  95 00            sta $00,x
0043F5r 2  B5 01            lda $01,x
0043F7r 2  75 03            adc $03,x
0043F9r 2  95 01            sta $01,x
0043FBr 2               
0043FBr 2               ; <inline>:0:0 in `main`
0043FBr 2               @OPCODE_2209:   ; [c64_ir] AltPop
0043FBr 2  E8               inx
0043FCr 2  E8               inx
0043FDr 2  68               pla
0043FEr 2  95 00            sta $00,x
004400r 2  68               pla
004401r 2  95 01            sta $01,x
004403r 2               
004403r 2               ; <inline>:0:0 in `main`
004403r 2               @OPCODE_2210:   ; [c64_ir] Drop
004403r 2  CA               dex
004404r 2  CA               dex
004405r 2               
004405r 2               ; src/prelude.fth:16:19 in `-`
004405r 2               @OPCODE_2211:   ; [c64_ir] Add
004405r 2                   ; 21
004405r 2  CA               dex
004406r 2  CA               dex
004407r 2  18               clc
004408r 2  B5 00            lda $00,x
00440Ar 2  75 02            adc $02,x
00440Cr 2  95 00            sta $00,x
00440Er 2  B5 01            lda $01,x
004410r 2  75 03            adc $03,x
004412r 2  95 01            sta $01,x
004414r 2               
004414r 2               ; <inline>:0:0 in `main`
004414r 2               @OPCODE_2212:   ; [c64_ir] AltPop
004414r 2  E8               inx
004415r 2  E8               inx
004416r 2  68               pla
004417r 2  95 00            sta $00,x
004419r 2  68               pla
00441Ar 2  95 01            sta $01,x
00441Cr 2               
00441Cr 2               ; <inline>:0:0 in `main`
00441Cr 2               @OPCODE_2213:   ; [c64_ir] Drop
00441Cr 2  CA               dex
00441Dr 2  CA               dex
00441Er 2               
00441Er 2               ; <inline>:0:0 in `main`
00441Er 2               @OPCODE_2214:   ; [c64_ir] PushLiteral(7777)
00441Er 2  E8               inx
00441Fr 2  E8               inx
004420r 2  A9 61            lda #97
004422r 2  95 00            sta $00,x
004424r 2  A9 1E            lda #30
004426r 2  95 01            sta $01,x
004428r 2               
004428r 2               ; <inline>:0:0 in `main`
004428r 2               @OPCODE_2215:   ; [c64_ir] AltPush
004428r 2  CA               dex
004429r 2  CA               dex
00442Ar 2  B5 03            lda $03,x
00442Cr 2  48               pha
00442Dr 2  B5 02            lda $02,x
00442Fr 2  48               pha
004430r 2               
004430r 2               ; src/prelude.fth:21:8 in `0=`
004430r 2               @OPCODE_2216:   ; [c64_ir] JumpIf0(79)
004430r 2  CA               dex
004431r 2  CA               dex
004432r 2  B5 02            lda $02,x
004434r 2  15 03            ora $03,x
004436r 2  D0 03            bne *+5
004438r 2  4C rr rr         jmp @target_79
00443Br 2               
00443Br 2               @target_78:
00443Br 2               
00443Br 2               ; src/prelude.fth:21:11 in `0=`
00443Br 2               @OPCODE_2218:   ; [c64_ir] PushLiteral(0)
00443Br 2  E8               inx
00443Cr 2  E8               inx
00443Dr 2  A9 00            lda #0
00443Fr 2  95 00            sta $00,x
004441r 2  A9 00            lda #0
004443r 2  95 01            sta $01,x
004445r 2               
004445r 2               ; src/prelude.fth:21:13 in `0=`
004445r 2               @OPCODE_2219:   ; [c64_ir] JumpElse(80)
004445r 2  4C rr rr         jmp @target_80
004448r 2               
004448r 2               @target_79:
004448r 2               
004448r 2               ; src/prelude.fth:21:18 in `0=`
004448r 2               @OPCODE_2221:   ; [c64_ir] PushLiteral(-1)
004448r 2  E8               inx
004449r 2  E8               inx
00444Ar 2  A9 FF            lda #255
00444Cr 2  95 00            sta $00,x
00444Er 2  A9 FF            lda #255
004450r 2  95 01            sta $01,x
004452r 2               
004452r 2               ; src/prelude.fth:21:21 in `0=`
004452r 2               @OPCODE_2222:   ; [c64_ir] JumpTarget(79)
004452r 2               
004452r 2               @target_80:
004452r 2               
004452r 2               ; <inline>:0:0 in `main`
004452r 2               @OPCODE_2224:   ; [c64_ir] AltPop
004452r 2  E8               inx
004453r 2  E8               inx
004454r 2  68               pla
004455r 2  95 00            sta $00,x
004457r 2  68               pla
004458r 2  95 01            sta $01,x
00445Ar 2               
00445Ar 2               ; <inline>:0:0 in `main`
00445Ar 2               @OPCODE_2225:   ; [c64_ir] Drop
00445Ar 2  CA               dex
00445Br 2  CA               dex
00445Cr 2               
00445Cr 2               ; <inline>:0:0 in `main`
00445Cr 2               @OPCODE_2226:   ; [c64_ir] AltPop
00445Cr 2  E8               inx
00445Dr 2  E8               inx
00445Er 2  68               pla
00445Fr 2  95 00            sta $00,x
004461r 2  68               pla
004462r 2  95 01            sta $01,x
004464r 2               
004464r 2               ; <inline>:0:0 in `main`
004464r 2               @OPCODE_2227:   ; [c64_ir] Drop
004464r 2  CA               dex
004465r 2  CA               dex
004466r 2               
004466r 2               ; <inline>:0:0 in `main`
004466r 2               @OPCODE_2228:   ; [c64_ir] PushLiteral(7777)
004466r 2  E8               inx
004467r 2  E8               inx
004468r 2  A9 61            lda #97
00446Ar 2  95 00            sta $00,x
00446Cr 2  A9 1E            lda #30
00446Er 2  95 01            sta $01,x
004470r 2               
004470r 2               ; <inline>:0:0 in `main`
004470r 2               @OPCODE_2229:   ; [c64_ir] AltPush
004470r 2  CA               dex
004471r 2  CA               dex
004472r 2  B5 03            lda $03,x
004474r 2  48               pha
004475r 2  B5 02            lda $02,x
004477r 2  48               pha
004478r 2               
004478r 2               ; <inline>:0:0 in `main`
004478r 2               @OPCODE_2230:   ; [c64_ir] PushLiteral(7777)
004478r 2  E8               inx
004479r 2  E8               inx
00447Ar 2  A9 61            lda #97
00447Cr 2  95 00            sta $00,x
00447Er 2  A9 1E            lda #30
004480r 2  95 01            sta $01,x
004482r 2               
004482r 2               ; <inline>:0:0 in `main`
004482r 2               @OPCODE_2231:   ; [c64_ir] AltPush
004482r 2  CA               dex
004483r 2  CA               dex
004484r 2  B5 03            lda $03,x
004486r 2  48               pha
004487r 2  B5 02            lda $02,x
004489r 2  48               pha
00448Ar 2               
00448Ar 2               ; src/prelude.fth:14:12 in `invert`
00448Ar 2               @OPCODE_2232:   ; [c64_ir] PushLiteral(-1)
00448Ar 2  E8               inx
00448Br 2  E8               inx
00448Cr 2  A9 FF            lda #255
00448Er 2  95 00            sta $00,x
004490r 2  A9 FF            lda #255
004492r 2  95 01            sta $01,x
004494r 2               
004494r 2               ; src/prelude.fth:14:15 in `invert`
004494r 2               @OPCODE_2233:   ; [c64_ir] Nand
004494r 2                   ; 26
004494r 2  CA               dex
004495r 2  CA               dex
004496r 2  B5 00            lda $00,x
004498r 2  35 02            and $02,x
00449Ar 2  49 FF            eor #$ff
00449Cr 2  95 00            sta $00,x
00449Er 2  B5 01            lda $01,x
0044A0r 2  35 03            and $03,x
0044A2r 2  49 FF            eor #$ff
0044A4r 2  95 01            sta $01,x
0044A6r 2               
0044A6r 2               ; <inline>:0:0 in `main`
0044A6r 2               @OPCODE_2234:   ; [c64_ir] AltPop
0044A6r 2  E8               inx
0044A7r 2  E8               inx
0044A8r 2  68               pla
0044A9r 2  95 00            sta $00,x
0044ABr 2  68               pla
0044ACr 2  95 01            sta $01,x
0044AEr 2               
0044AEr 2               ; <inline>:0:0 in `main`
0044AEr 2               @OPCODE_2235:   ; [c64_ir] Drop
0044AEr 2  CA               dex
0044AFr 2  CA               dex
0044B0r 2               
0044B0r 2               ; <inline>:0:0 in `main`
0044B0r 2               @OPCODE_2236:   ; [c64_ir] PushLiteral(7777)
0044B0r 2  E8               inx
0044B1r 2  E8               inx
0044B2r 2  A9 61            lda #97
0044B4r 2  95 00            sta $00,x
0044B6r 2  A9 1E            lda #30
0044B8r 2  95 01            sta $01,x
0044BAr 2               
0044BAr 2               ; <inline>:0:0 in `main`
0044BAr 2               @OPCODE_2237:   ; [c64_ir] AltPush
0044BAr 2  CA               dex
0044BBr 2  CA               dex
0044BCr 2  B5 03            lda $03,x
0044BEr 2  48               pha
0044BFr 2  B5 02            lda $02,x
0044C1r 2  48               pha
0044C2r 2               
0044C2r 2               ; src/prelude.fth:3:10 in `swap`
0044C2r 2               @OPCODE_2238:   ; [c64_ir] AltPush
0044C2r 2  CA               dex
0044C3r 2  CA               dex
0044C4r 2  B5 03            lda $03,x
0044C6r 2  48               pha
0044C7r 2  B5 02            lda $02,x
0044C9r 2  48               pha
0044CAr 2               
0044CAr 2               ; src/prelude.fth:3:13 in `swap`
0044CAr 2               @OPCODE_2239:   ; [c64_ir] TempStore
0044CAr 2  CA               dex
0044CBr 2  CA               dex
0044CCr 2  B5 03            lda $03,x
0044CEr 2  85 96            sta TEMP_PAX2
0044D0r 2  B5 02            lda $02,x
0044D2r 2  85 95            sta TEMP_PAX1
0044D4r 2               
0044D4r 2               ; src/prelude.fth:3:19 in `swap`
0044D4r 2               @OPCODE_2240:   ; [c64_ir] AltPop
0044D4r 2  E8               inx
0044D5r 2  E8               inx
0044D6r 2  68               pla
0044D7r 2  95 00            sta $00,x
0044D9r 2  68               pla
0044DAr 2  95 01            sta $01,x
0044DCr 2               
0044DCr 2               ; src/prelude.fth:3:22 in `swap`
0044DCr 2               @OPCODE_2241:   ; [c64_ir] TempLoad
0044DCr 2  E8               inx
0044DDr 2  E8               inx
0044DEr 2  A5 95            lda TEMP_PAX1
0044E0r 2  95 00            sta $00,x
0044E2r 2  A5 96            lda TEMP_PAX2
0044E4r 2  95 01            sta $01,x
0044E6r 2               
0044E6r 2               ; <inline>:0:0 in `main`
0044E6r 2               @OPCODE_2242:   ; [c64_ir] AltPop
0044E6r 2  E8               inx
0044E7r 2  E8               inx
0044E8r 2  68               pla
0044E9r 2  95 00            sta $00,x
0044EBr 2  68               pla
0044ECr 2  95 01            sta $01,x
0044EEr 2               
0044EEr 2               ; <inline>:0:0 in `main`
0044EEr 2               @OPCODE_2243:   ; [c64_ir] Drop
0044EEr 2  CA               dex
0044EFr 2  CA               dex
0044F0r 2               
0044F0r 2               ; <inline>:0:0 in `main`
0044F0r 2               @OPCODE_2244:   ; [c64_ir] PushLiteral(7777)
0044F0r 2  E8               inx
0044F1r 2  E8               inx
0044F2r 2  A9 61            lda #97
0044F4r 2  95 00            sta $00,x
0044F6r 2  A9 1E            lda #30
0044F8r 2  95 01            sta $01,x
0044FAr 2               
0044FAr 2               ; <inline>:0:0 in `main`
0044FAr 2               @OPCODE_2245:   ; [c64_ir] AltPush
0044FAr 2  CA               dex
0044FBr 2  CA               dex
0044FCr 2  B5 03            lda $03,x
0044FEr 2  48               pha
0044FFr 2  B5 02            lda $02,x
004501r 2  48               pha
004502r 2               
004502r 2               ; src/prelude.fth:14:12 in `invert`
004502r 2               @OPCODE_2246:   ; [c64_ir] PushLiteral(-1)
004502r 2  E8               inx
004503r 2  E8               inx
004504r 2  A9 FF            lda #255
004506r 2  95 00            sta $00,x
004508r 2  A9 FF            lda #255
00450Ar 2  95 01            sta $01,x
00450Cr 2               
00450Cr 2               ; src/prelude.fth:14:15 in `invert`
00450Cr 2               @OPCODE_2247:   ; [c64_ir] Nand
00450Cr 2                   ; 26
00450Cr 2  CA               dex
00450Dr 2  CA               dex
00450Er 2  B5 00            lda $00,x
004510r 2  35 02            and $02,x
004512r 2  49 FF            eor #$ff
004514r 2  95 00            sta $00,x
004516r 2  B5 01            lda $01,x
004518r 2  35 03            and $03,x
00451Ar 2  49 FF            eor #$ff
00451Cr 2  95 01            sta $01,x
00451Er 2               
00451Er 2               ; <inline>:0:0 in `main`
00451Er 2               @OPCODE_2248:   ; [c64_ir] AltPop
00451Er 2  E8               inx
00451Fr 2  E8               inx
004520r 2  68               pla
004521r 2  95 00            sta $00,x
004523r 2  68               pla
004524r 2  95 01            sta $01,x
004526r 2               
004526r 2               ; <inline>:0:0 in `main`
004526r 2               @OPCODE_2249:   ; [c64_ir] Drop
004526r 2  CA               dex
004527r 2  CA               dex
004528r 2               
004528r 2               ; src/prelude.fth:26:27 in `or`
004528r 2               @OPCODE_2250:   ; [c64_ir] Nand
004528r 2                   ; 26
004528r 2  CA               dex
004529r 2  CA               dex
00452Ar 2  B5 00            lda $00,x
00452Cr 2  35 02            and $02,x
00452Er 2  49 FF            eor #$ff
004530r 2  95 00            sta $00,x
004532r 2  B5 01            lda $01,x
004534r 2  35 03            and $03,x
004536r 2  49 FF            eor #$ff
004538r 2  95 01            sta $01,x
00453Ar 2               
00453Ar 2               ; <inline>:0:0 in `main`
00453Ar 2               @OPCODE_2251:   ; [c64_ir] AltPop
00453Ar 2  E8               inx
00453Br 2  E8               inx
00453Cr 2  68               pla
00453Dr 2  95 00            sta $00,x
00453Fr 2  68               pla
004540r 2  95 01            sta $01,x
004542r 2               
004542r 2               ; <inline>:0:0 in `main`
004542r 2               @OPCODE_2252:   ; [c64_ir] Drop
004542r 2  CA               dex
004543r 2  CA               dex
004544r 2               
004544r 2               ; <inline>:0:0 in `main`
004544r 2               @OPCODE_2253:   ; [c64_ir] AltPop
004544r 2  E8               inx
004545r 2  E8               inx
004546r 2  68               pla
004547r 2  95 00            sta $00,x
004549r 2  68               pla
00454Ar 2  95 01            sta $01,x
00454Cr 2               
00454Cr 2               ; <inline>:0:0 in `main`
00454Cr 2               @OPCODE_2254:   ; [c64_ir] Drop
00454Cr 2  CA               dex
00454Dr 2  CA               dex
00454Er 2               
00454Er 2               ; snake.fth:155:27 in `turn-left`
00454Er 2               @OPCODE_2255:   ; [c64_ir] JumpIf0(82)
00454Er 2  CA               dex
00454Fr 2  CA               dex
004550r 2  B5 02            lda $02,x
004552r 2  15 03            ora $03,x
004554r 2  D0 03            bne *+5
004556r 2  4C rr rr         jmp @target_82
004559r 2               
004559r 2               @target_81:
004559r 2               
004559r 2               ; snake.fth:155:30 in `turn-left`
004559r 2               @OPCODE_2257:   ; [c64_ir] PushLiteral(37)
004559r 2  E8               inx
00455Ar 2  E8               inx
00455Br 2  A9 25            lda #37
00455Dr 2  95 00            sta $00,x
00455Fr 2  A9 00            lda #0
004561r 2  95 01            sta $01,x
004563r 2               
004563r 2               ; snake.fth:155:35 in `turn-left`
004563r 2               @OPCODE_2258:   ; [c64_ir] PushLiteral(-26660)
004563r 2  E8               inx
004564r 2  E8               inx
004565r 2  A9 DC            lda #220
004567r 2  95 00            sta $00,x
004569r 2  A9 97            lda #151
00456Br 2  95 01            sta $01,x
00456Dr 2               
00456Dr 2               ; snake.fth:155:45 in `turn-left`
00456Dr 2               @OPCODE_2259:   ; [c64_ir] Store
00456Dr 2  CA               dex
00456Er 2  CA               dex
00456Fr 2  CA               dex
004570r 2  CA               dex
004571r 2  B5 02            lda $02,x
004573r 2  81 04            sta ($04,x)
004575r 2                   ; TODO high byte
004575r 2               
004575r 2               ; snake.fth:155:47 in `turn-left`
004575r 2               @OPCODE_2260:   ; [c64_ir] JumpTarget(81)
004575r 2               
004575r 2               @target_82:
004575r 2               
004575r 2               ; <inline>:0:0 in `main`
004575r 2               @OPCODE_2262:   ; [c64_ir] AltPop
004575r 2  E8               inx
004576r 2  E8               inx
004577r 2  68               pla
004578r 2  95 00            sta $00,x
00457Ar 2  68               pla
00457Br 2  95 01            sta $01,x
00457Dr 2               
00457Dr 2               ; <inline>:0:0 in `main`
00457Dr 2               @OPCODE_2263:   ; [c64_ir] Drop
00457Dr 2  CA               dex
00457Er 2  CA               dex
00457Fr 2               
00457Fr 2               ; snake.fth:160:28 in `change-direction`
00457Fr 2               @OPCODE_2264:   ; [c64_ir] JumpElse(125)
00457Fr 2  4C rr rr         jmp @target_125
004582r 2               
004582r 2               @target_83:
004582r 2               
004582r 2               ; snake.fth:161:3 in `change-direction`
004582r 2               @OPCODE_2266:   ; [c64_ir] PushLiteral(38)
004582r 2  E8               inx
004583r 2  E8               inx
004584r 2  A9 26            lda #38
004586r 2  95 00            sta $00,x
004588r 2  A9 00            lda #0
00458Ar 2  95 01            sta $01,x
00458Cr 2               
00458Cr 2               ; <inline>:0:0 in `main`
00458Cr 2               @OPCODE_2267:   ; [c64_ir] PushLiteral(7777)
00458Cr 2  E8               inx
00458Dr 2  E8               inx
00458Er 2  A9 61            lda #97
004590r 2  95 00            sta $00,x
004592r 2  A9 1E            lda #30
004594r 2  95 01            sta $01,x
004596r 2               
004596r 2               ; <inline>:0:0 in `main`
004596r 2               @OPCODE_2268:   ; [c64_ir] AltPush
004596r 2  CA               dex
004597r 2  CA               dex
004598r 2  B5 03            lda $03,x
00459Ar 2  48               pha
00459Br 2  B5 02            lda $02,x
00459Dr 2  48               pha
00459Er 2               
00459Er 2               ; src/prelude.fth:4:10 in `over`
00459Er 2               @OPCODE_2269:   ; [c64_ir] AltPush
00459Er 2  CA               dex
00459Fr 2  CA               dex
0045A0r 2  B5 03            lda $03,x
0045A2r 2  48               pha
0045A3r 2  B5 02            lda $02,x
0045A5r 2  48               pha
0045A6r 2               
0045A6r 2               ; src/prelude.fth:4:13 in `over`
0045A6r 2               @OPCODE_2270:   ; [c64_ir] TempStore
0045A6r 2  CA               dex
0045A7r 2  CA               dex
0045A8r 2  B5 03            lda $03,x
0045AAr 2  85 96            sta TEMP_PAX2
0045ACr 2  B5 02            lda $02,x
0045AEr 2  85 95            sta TEMP_PAX1
0045B0r 2               
0045B0r 2               ; src/prelude.fth:4:19 in `over`
0045B0r 2               @OPCODE_2271:   ; [c64_ir] TempLoad
0045B0r 2  E8               inx
0045B1r 2  E8               inx
0045B2r 2  A5 95            lda TEMP_PAX1
0045B4r 2  95 00            sta $00,x
0045B6r 2  A5 96            lda TEMP_PAX2
0045B8r 2  95 01            sta $01,x
0045BAr 2               
0045BAr 2               ; src/prelude.fth:4:25 in `over`
0045BAr 2               @OPCODE_2272:   ; [c64_ir] AltPop
0045BAr 2  E8               inx
0045BBr 2  E8               inx
0045BCr 2  68               pla
0045BDr 2  95 00            sta $00,x
0045BFr 2  68               pla
0045C0r 2  95 01            sta $01,x
0045C2r 2               
0045C2r 2               ; src/prelude.fth:4:28 in `over`
0045C2r 2               @OPCODE_2273:   ; [c64_ir] TempLoad
0045C2r 2  E8               inx
0045C3r 2  E8               inx
0045C4r 2  A5 95            lda TEMP_PAX1
0045C6r 2  95 00            sta $00,x
0045C8r 2  A5 96            lda TEMP_PAX2
0045CAr 2  95 01            sta $01,x
0045CCr 2               
0045CCr 2               ; <inline>:0:0 in `main`
0045CCr 2               @OPCODE_2274:   ; [c64_ir] AltPop
0045CCr 2  E8               inx
0045CDr 2  E8               inx
0045CEr 2  68               pla
0045CFr 2  95 00            sta $00,x
0045D1r 2  68               pla
0045D2r 2  95 01            sta $01,x
0045D4r 2               
0045D4r 2               ; <inline>:0:0 in `main`
0045D4r 2               @OPCODE_2275:   ; [c64_ir] Drop
0045D4r 2  CA               dex
0045D5r 2  CA               dex
0045D6r 2               
0045D6r 2               ; <inline>:0:0 in `main`
0045D6r 2               @OPCODE_2276:   ; [c64_ir] PushLiteral(7777)
0045D6r 2  E8               inx
0045D7r 2  E8               inx
0045D8r 2  A9 61            lda #97
0045DAr 2  95 00            sta $00,x
0045DCr 2  A9 1E            lda #30
0045DEr 2  95 01            sta $01,x
0045E0r 2               
0045E0r 2               ; <inline>:0:0 in `main`
0045E0r 2               @OPCODE_2277:   ; [c64_ir] AltPush
0045E0r 2  CA               dex
0045E1r 2  CA               dex
0045E2r 2  B5 03            lda $03,x
0045E4r 2  48               pha
0045E5r 2  B5 02            lda $02,x
0045E7r 2  48               pha
0045E8r 2               
0045E8r 2               ; <inline>:0:0 in `main`
0045E8r 2               @OPCODE_2278:   ; [c64_ir] PushLiteral(7777)
0045E8r 2  E8               inx
0045E9r 2  E8               inx
0045EAr 2  A9 61            lda #97
0045ECr 2  95 00            sta $00,x
0045EEr 2  A9 1E            lda #30
0045F0r 2  95 01            sta $01,x
0045F2r 2               
0045F2r 2               ; <inline>:0:0 in `main`
0045F2r 2               @OPCODE_2279:   ; [c64_ir] AltPush
0045F2r 2  CA               dex
0045F3r 2  CA               dex
0045F4r 2  B5 03            lda $03,x
0045F6r 2  48               pha
0045F7r 2  B5 02            lda $02,x
0045F9r 2  48               pha
0045FAr 2               
0045FAr 2               ; <inline>:0:0 in `main`
0045FAr 2               @OPCODE_2280:   ; [c64_ir] PushLiteral(7777)
0045FAr 2  E8               inx
0045FBr 2  E8               inx
0045FCr 2  A9 61            lda #97
0045FEr 2  95 00            sta $00,x
004600r 2  A9 1E            lda #30
004602r 2  95 01            sta $01,x
004604r 2               
004604r 2               ; <inline>:0:0 in `main`
004604r 2               @OPCODE_2281:   ; [c64_ir] AltPush
004604r 2  CA               dex
004605r 2  CA               dex
004606r 2  B5 03            lda $03,x
004608r 2  48               pha
004609r 2  B5 02            lda $02,x
00460Br 2  48               pha
00460Cr 2               
00460Cr 2               ; <inline>:0:0 in `main`
00460Cr 2               @OPCODE_2282:   ; [c64_ir] PushLiteral(7777)
00460Cr 2  E8               inx
00460Dr 2  E8               inx
00460Er 2  A9 61            lda #97
004610r 2  95 00            sta $00,x
004612r 2  A9 1E            lda #30
004614r 2  95 01            sta $01,x
004616r 2               
004616r 2               ; <inline>:0:0 in `main`
004616r 2               @OPCODE_2283:   ; [c64_ir] AltPush
004616r 2  CA               dex
004617r 2  CA               dex
004618r 2  B5 03            lda $03,x
00461Ar 2  48               pha
00461Br 2  B5 02            lda $02,x
00461Dr 2  48               pha
00461Er 2               
00461Er 2               ; src/prelude.fth:14:12 in `invert`
00461Er 2               @OPCODE_2284:   ; [c64_ir] PushLiteral(-1)
00461Er 2  E8               inx
00461Fr 2  E8               inx
004620r 2  A9 FF            lda #255
004622r 2  95 00            sta $00,x
004624r 2  A9 FF            lda #255
004626r 2  95 01            sta $01,x
004628r 2               
004628r 2               ; src/prelude.fth:14:15 in `invert`
004628r 2               @OPCODE_2285:   ; [c64_ir] Nand
004628r 2                   ; 26
004628r 2  CA               dex
004629r 2  CA               dex
00462Ar 2  B5 00            lda $00,x
00462Cr 2  35 02            and $02,x
00462Er 2  49 FF            eor #$ff
004630r 2  95 00            sta $00,x
004632r 2  B5 01            lda $01,x
004634r 2  35 03            and $03,x
004636r 2  49 FF            eor #$ff
004638r 2  95 01            sta $01,x
00463Ar 2               
00463Ar 2               ; <inline>:0:0 in `main`
00463Ar 2               @OPCODE_2286:   ; [c64_ir] AltPop
00463Ar 2  E8               inx
00463Br 2  E8               inx
00463Cr 2  68               pla
00463Dr 2  95 00            sta $00,x
00463Fr 2  68               pla
004640r 2  95 01            sta $01,x
004642r 2               
004642r 2               ; <inline>:0:0 in `main`
004642r 2               @OPCODE_2287:   ; [c64_ir] Drop
004642r 2  CA               dex
004643r 2  CA               dex
004644r 2               
004644r 2               ; src/prelude.fth:15:19 in `negate`
004644r 2               @OPCODE_2288:   ; [c64_ir] PushLiteral(1)
004644r 2  E8               inx
004645r 2  E8               inx
004646r 2  A9 01            lda #1
004648r 2  95 00            sta $00,x
00464Ar 2  A9 00            lda #0
00464Cr 2  95 01            sta $01,x
00464Er 2               
00464Er 2               ; src/prelude.fth:15:21 in `negate`
00464Er 2               @OPCODE_2289:   ; [c64_ir] Add
00464Er 2                   ; 21
00464Er 2  CA               dex
00464Fr 2  CA               dex
004650r 2  18               clc
004651r 2  B5 00            lda $00,x
004653r 2  75 02            adc $02,x
004655r 2  95 00            sta $00,x
004657r 2  B5 01            lda $01,x
004659r 2  75 03            adc $03,x
00465Br 2  95 01            sta $01,x
00465Dr 2               
00465Dr 2               ; <inline>:0:0 in `main`
00465Dr 2               @OPCODE_2290:   ; [c64_ir] AltPop
00465Dr 2  E8               inx
00465Er 2  E8               inx
00465Fr 2  68               pla
004660r 2  95 00            sta $00,x
004662r 2  68               pla
004663r 2  95 01            sta $01,x
004665r 2               
004665r 2               ; <inline>:0:0 in `main`
004665r 2               @OPCODE_2291:   ; [c64_ir] Drop
004665r 2  CA               dex
004666r 2  CA               dex
004667r 2               
004667r 2               ; src/prelude.fth:16:19 in `-`
004667r 2               @OPCODE_2292:   ; [c64_ir] Add
004667r 2                   ; 21
004667r 2  CA               dex
004668r 2  CA               dex
004669r 2  18               clc
00466Ar 2  B5 00            lda $00,x
00466Cr 2  75 02            adc $02,x
00466Er 2  95 00            sta $00,x
004670r 2  B5 01            lda $01,x
004672r 2  75 03            adc $03,x
004674r 2  95 01            sta $01,x
004676r 2               
004676r 2               ; <inline>:0:0 in `main`
004676r 2               @OPCODE_2293:   ; [c64_ir] AltPop
004676r 2  E8               inx
004677r 2  E8               inx
004678r 2  68               pla
004679r 2  95 00            sta $00,x
00467Br 2  68               pla
00467Cr 2  95 01            sta $01,x
00467Er 2               
00467Er 2               ; <inline>:0:0 in `main`
00467Er 2               @OPCODE_2294:   ; [c64_ir] Drop
00467Er 2  CA               dex
00467Fr 2  CA               dex
004680r 2               
004680r 2               ; <inline>:0:0 in `main`
004680r 2               @OPCODE_2295:   ; [c64_ir] PushLiteral(7777)
004680r 2  E8               inx
004681r 2  E8               inx
004682r 2  A9 61            lda #97
004684r 2  95 00            sta $00,x
004686r 2  A9 1E            lda #30
004688r 2  95 01            sta $01,x
00468Ar 2               
00468Ar 2               ; <inline>:0:0 in `main`
00468Ar 2               @OPCODE_2296:   ; [c64_ir] AltPush
00468Ar 2  CA               dex
00468Br 2  CA               dex
00468Cr 2  B5 03            lda $03,x
00468Er 2  48               pha
00468Fr 2  B5 02            lda $02,x
004691r 2  48               pha
004692r 2               
004692r 2               ; src/prelude.fth:21:8 in `0=`
004692r 2               @OPCODE_2297:   ; [c64_ir] JumpIf0(85)
004692r 2  CA               dex
004693r 2  CA               dex
004694r 2  B5 02            lda $02,x
004696r 2  15 03            ora $03,x
004698r 2  D0 03            bne *+5
00469Ar 2  4C rr rr         jmp @target_85
00469Dr 2               
00469Dr 2               @target_84:
00469Dr 2               
00469Dr 2               ; src/prelude.fth:21:11 in `0=`
00469Dr 2               @OPCODE_2299:   ; [c64_ir] PushLiteral(0)
00469Dr 2  E8               inx
00469Er 2  E8               inx
00469Fr 2  A9 00            lda #0
0046A1r 2  95 00            sta $00,x
0046A3r 2  A9 00            lda #0
0046A5r 2  95 01            sta $01,x
0046A7r 2               
0046A7r 2               ; src/prelude.fth:21:13 in `0=`
0046A7r 2               @OPCODE_2300:   ; [c64_ir] JumpElse(86)
0046A7r 2  4C rr rr         jmp @target_86
0046AAr 2               
0046AAr 2               @target_85:
0046AAr 2               
0046AAr 2               ; src/prelude.fth:21:18 in `0=`
0046AAr 2               @OPCODE_2302:   ; [c64_ir] PushLiteral(-1)
0046AAr 2  E8               inx
0046ABr 2  E8               inx
0046ACr 2  A9 FF            lda #255
0046AEr 2  95 00            sta $00,x
0046B0r 2  A9 FF            lda #255
0046B2r 2  95 01            sta $01,x
0046B4r 2               
0046B4r 2               ; src/prelude.fth:21:21 in `0=`
0046B4r 2               @OPCODE_2303:   ; [c64_ir] JumpTarget(85)
0046B4r 2               
0046B4r 2               @target_86:
0046B4r 2               
0046B4r 2               ; <inline>:0:0 in `main`
0046B4r 2               @OPCODE_2305:   ; [c64_ir] AltPop
0046B4r 2  E8               inx
0046B5r 2  E8               inx
0046B6r 2  68               pla
0046B7r 2  95 00            sta $00,x
0046B9r 2  68               pla
0046BAr 2  95 01            sta $01,x
0046BCr 2               
0046BCr 2               ; <inline>:0:0 in `main`
0046BCr 2               @OPCODE_2306:   ; [c64_ir] Drop
0046BCr 2  CA               dex
0046BDr 2  CA               dex
0046BEr 2               
0046BEr 2               ; <inline>:0:0 in `main`
0046BEr 2               @OPCODE_2307:   ; [c64_ir] AltPop
0046BEr 2  E8               inx
0046BFr 2  E8               inx
0046C0r 2  68               pla
0046C1r 2  95 00            sta $00,x
0046C3r 2  68               pla
0046C4r 2  95 01            sta $01,x
0046C6r 2               
0046C6r 2               ; <inline>:0:0 in `main`
0046C6r 2               @OPCODE_2308:   ; [c64_ir] Drop
0046C6r 2  CA               dex
0046C7r 2  CA               dex
0046C8r 2               
0046C8r 2               ; snake.fth:161:13 in `change-direction`
0046C8r 2               @OPCODE_2309:   ; [c64_ir] JumpIf0(96)
0046C8r 2  CA               dex
0046C9r 2  CA               dex
0046CAr 2  B5 02            lda $02,x
0046CCr 2  15 03            ora $03,x
0046CEr 2  D0 03            bne *+5
0046D0r 2  4C rr rr         jmp @target_96
0046D3r 2               
0046D3r 2               @target_87:
0046D3r 2               
0046D3r 2               ; <inline>:0:0 in `main`
0046D3r 2               @OPCODE_2311:   ; [c64_ir] PushLiteral(7777)
0046D3r 2  E8               inx
0046D4r 2  E8               inx
0046D5r 2  A9 61            lda #97
0046D7r 2  95 00            sta $00,x
0046D9r 2  A9 1E            lda #30
0046DBr 2  95 01            sta $01,x
0046DDr 2               
0046DDr 2               ; <inline>:0:0 in `main`
0046DDr 2               @OPCODE_2312:   ; [c64_ir] AltPush
0046DDr 2  CA               dex
0046DEr 2  CA               dex
0046DFr 2  B5 03            lda $03,x
0046E1r 2  48               pha
0046E2r 2  B5 02            lda $02,x
0046E4r 2  48               pha
0046E5r 2               
0046E5r 2               ; <inline>:0:0 in `main`
0046E5r 2               @OPCODE_2313:   ; [c64_ir] PushLiteral(7777)
0046E5r 2  E8               inx
0046E6r 2  E8               inx
0046E7r 2  A9 61            lda #97
0046E9r 2  95 00            sta $00,x
0046EBr 2  A9 1E            lda #30
0046EDr 2  95 01            sta $01,x
0046EFr 2               
0046EFr 2               ; <inline>:0:0 in `main`
0046EFr 2               @OPCODE_2314:   ; [c64_ir] AltPush
0046EFr 2  CA               dex
0046F0r 2  CA               dex
0046F1r 2  B5 03            lda $03,x
0046F3r 2  48               pha
0046F4r 2  B5 02            lda $02,x
0046F6r 2  48               pha
0046F7r 2               
0046F7r 2               ; snake.fth:146:18 in `is-horizontal`
0046F7r 2               @OPCODE_2315:   ; [c64_ir] PushLiteral(-26660)
0046F7r 2  E8               inx
0046F8r 2  E8               inx
0046F9r 2  A9 DC            lda #220
0046FBr 2  95 00            sta $00,x
0046FDr 2  A9 97            lda #151
0046FFr 2  95 01            sta $01,x
004701r 2               
004701r 2               ; snake.fth:146:28 in `is-horizontal`
004701r 2               @OPCODE_2316:   ; [c64_ir] Load
004701r 2  A1 00            lda ($00,x)
004703r 2  95 00            sta $00,x
004705r 2  A9 00            lda #0
004707r 2  95 01            sta $01,x
004709r 2               
004709r 2               ; <inline>:0:0 in `main`
004709r 2               @OPCODE_2317:   ; [c64_ir] PushLiteral(7777)
004709r 2  E8               inx
00470Ar 2  E8               inx
00470Br 2  A9 61            lda #97
00470Dr 2  95 00            sta $00,x
00470Fr 2  A9 1E            lda #30
004711r 2  95 01            sta $01,x
004713r 2               
004713r 2               ; <inline>:0:0 in `main`
004713r 2               @OPCODE_2318:   ; [c64_ir] AltPush
004713r 2  CA               dex
004714r 2  CA               dex
004715r 2  B5 03            lda $03,x
004717r 2  48               pha
004718r 2  B5 02            lda $02,x
00471Ar 2  48               pha
00471Br 2               
00471Br 2               ; src/prelude.fth:6:10 in `dup`
00471Br 2               @OPCODE_2319:   ; [c64_ir] TempStore
00471Br 2  CA               dex
00471Cr 2  CA               dex
00471Dr 2  B5 03            lda $03,x
00471Fr 2  85 96            sta TEMP_PAX2
004721r 2  B5 02            lda $02,x
004723r 2  85 95            sta TEMP_PAX1
004725r 2               
004725r 2               ; src/prelude.fth:6:16 in `dup`
004725r 2               @OPCODE_2320:   ; [c64_ir] TempLoad
004725r 2  E8               inx
004726r 2  E8               inx
004727r 2  A5 95            lda TEMP_PAX1
004729r 2  95 00            sta $00,x
00472Br 2  A5 96            lda TEMP_PAX2
00472Dr 2  95 01            sta $01,x
00472Fr 2               
00472Fr 2               ; src/prelude.fth:6:22 in `dup`
00472Fr 2               @OPCODE_2321:   ; [c64_ir] TempLoad
00472Fr 2  E8               inx
004730r 2  E8               inx
004731r 2  A5 95            lda TEMP_PAX1
004733r 2  95 00            sta $00,x
004735r 2  A5 96            lda TEMP_PAX2
004737r 2  95 01            sta $01,x
004739r 2               
004739r 2               ; <inline>:0:0 in `main`
004739r 2               @OPCODE_2322:   ; [c64_ir] AltPop
004739r 2  E8               inx
00473Ar 2  E8               inx
00473Br 2  68               pla
00473Cr 2  95 00            sta $00,x
00473Er 2  68               pla
00473Fr 2  95 01            sta $01,x
004741r 2               
004741r 2               ; <inline>:0:0 in `main`
004741r 2               @OPCODE_2323:   ; [c64_ir] Drop
004741r 2  CA               dex
004742r 2  CA               dex
004743r 2               
004743r 2               ; snake.fth:147:3 in `is-horizontal`
004743r 2               @OPCODE_2324:   ; [c64_ir] PushLiteral(37)
004743r 2  E8               inx
004744r 2  E8               inx
004745r 2  A9 25            lda #37
004747r 2  95 00            sta $00,x
004749r 2  A9 00            lda #0
00474Br 2  95 01            sta $01,x
00474Dr 2               
00474Dr 2               ; <inline>:0:0 in `main`
00474Dr 2               @OPCODE_2325:   ; [c64_ir] PushLiteral(7777)
00474Dr 2  E8               inx
00474Er 2  E8               inx
00474Fr 2  A9 61            lda #97
004751r 2  95 00            sta $00,x
004753r 2  A9 1E            lda #30
004755r 2  95 01            sta $01,x
004757r 2               
004757r 2               ; <inline>:0:0 in `main`
004757r 2               @OPCODE_2326:   ; [c64_ir] AltPush
004757r 2  CA               dex
004758r 2  CA               dex
004759r 2  B5 03            lda $03,x
00475Br 2  48               pha
00475Cr 2  B5 02            lda $02,x
00475Er 2  48               pha
00475Fr 2               
00475Fr 2               ; <inline>:0:0 in `main`
00475Fr 2               @OPCODE_2327:   ; [c64_ir] PushLiteral(7777)
00475Fr 2  E8               inx
004760r 2  E8               inx
004761r 2  A9 61            lda #97
004763r 2  95 00            sta $00,x
004765r 2  A9 1E            lda #30
004767r 2  95 01            sta $01,x
004769r 2               
004769r 2               ; <inline>:0:0 in `main`
004769r 2               @OPCODE_2328:   ; [c64_ir] AltPush
004769r 2  CA               dex
00476Ar 2  CA               dex
00476Br 2  B5 03            lda $03,x
00476Dr 2  48               pha
00476Er 2  B5 02            lda $02,x
004770r 2  48               pha
004771r 2               
004771r 2               ; <inline>:0:0 in `main`
004771r 2               @OPCODE_2329:   ; [c64_ir] PushLiteral(7777)
004771r 2  E8               inx
004772r 2  E8               inx
004773r 2  A9 61            lda #97
004775r 2  95 00            sta $00,x
004777r 2  A9 1E            lda #30
004779r 2  95 01            sta $01,x
00477Br 2               
00477Br 2               ; <inline>:0:0 in `main`
00477Br 2               @OPCODE_2330:   ; [c64_ir] AltPush
00477Br 2  CA               dex
00477Cr 2  CA               dex
00477Dr 2  B5 03            lda $03,x
00477Fr 2  48               pha
004780r 2  B5 02            lda $02,x
004782r 2  48               pha
004783r 2               
004783r 2               ; <inline>:0:0 in `main`
004783r 2               @OPCODE_2331:   ; [c64_ir] PushLiteral(7777)
004783r 2  E8               inx
004784r 2  E8               inx
004785r 2  A9 61            lda #97
004787r 2  95 00            sta $00,x
004789r 2  A9 1E            lda #30
00478Br 2  95 01            sta $01,x
00478Dr 2               
00478Dr 2               ; <inline>:0:0 in `main`
00478Dr 2               @OPCODE_2332:   ; [c64_ir] AltPush
00478Dr 2  CA               dex
00478Er 2  CA               dex
00478Fr 2  B5 03            lda $03,x
004791r 2  48               pha
004792r 2  B5 02            lda $02,x
004794r 2  48               pha
004795r 2               
004795r 2               ; src/prelude.fth:14:12 in `invert`
004795r 2               @OPCODE_2333:   ; [c64_ir] PushLiteral(-1)
004795r 2  E8               inx
004796r 2  E8               inx
004797r 2  A9 FF            lda #255
004799r 2  95 00            sta $00,x
00479Br 2  A9 FF            lda #255
00479Dr 2  95 01            sta $01,x
00479Fr 2               
00479Fr 2               ; src/prelude.fth:14:15 in `invert`
00479Fr 2               @OPCODE_2334:   ; [c64_ir] Nand
00479Fr 2                   ; 26
00479Fr 2  CA               dex
0047A0r 2  CA               dex
0047A1r 2  B5 00            lda $00,x
0047A3r 2  35 02            and $02,x
0047A5r 2  49 FF            eor #$ff
0047A7r 2  95 00            sta $00,x
0047A9r 2  B5 01            lda $01,x
0047ABr 2  35 03            and $03,x
0047ADr 2  49 FF            eor #$ff
0047AFr 2  95 01            sta $01,x
0047B1r 2               
0047B1r 2               ; <inline>:0:0 in `main`
0047B1r 2               @OPCODE_2335:   ; [c64_ir] AltPop
0047B1r 2  E8               inx
0047B2r 2  E8               inx
0047B3r 2  68               pla
0047B4r 2  95 00            sta $00,x
0047B6r 2  68               pla
0047B7r 2  95 01            sta $01,x
0047B9r 2               
0047B9r 2               ; <inline>:0:0 in `main`
0047B9r 2               @OPCODE_2336:   ; [c64_ir] Drop
0047B9r 2  CA               dex
0047BAr 2  CA               dex
0047BBr 2               
0047BBr 2               ; src/prelude.fth:15:19 in `negate`
0047BBr 2               @OPCODE_2337:   ; [c64_ir] PushLiteral(1)
0047BBr 2  E8               inx
0047BCr 2  E8               inx
0047BDr 2  A9 01            lda #1
0047BFr 2  95 00            sta $00,x
0047C1r 2  A9 00            lda #0
0047C3r 2  95 01            sta $01,x
0047C5r 2               
0047C5r 2               ; src/prelude.fth:15:21 in `negate`
0047C5r 2               @OPCODE_2338:   ; [c64_ir] Add
0047C5r 2                   ; 21
0047C5r 2  CA               dex
0047C6r 2  CA               dex
0047C7r 2  18               clc
0047C8r 2  B5 00            lda $00,x
0047CAr 2  75 02            adc $02,x
0047CCr 2  95 00            sta $00,x
0047CEr 2  B5 01            lda $01,x
0047D0r 2  75 03            adc $03,x
0047D2r 2  95 01            sta $01,x
0047D4r 2               
0047D4r 2               ; <inline>:0:0 in `main`
0047D4r 2               @OPCODE_2339:   ; [c64_ir] AltPop
0047D4r 2  E8               inx
0047D5r 2  E8               inx
0047D6r 2  68               pla
0047D7r 2  95 00            sta $00,x
0047D9r 2  68               pla
0047DAr 2  95 01            sta $01,x
0047DCr 2               
0047DCr 2               ; <inline>:0:0 in `main`
0047DCr 2               @OPCODE_2340:   ; [c64_ir] Drop
0047DCr 2  CA               dex
0047DDr 2  CA               dex
0047DEr 2               
0047DEr 2               ; src/prelude.fth:16:19 in `-`
0047DEr 2               @OPCODE_2341:   ; [c64_ir] Add
0047DEr 2                   ; 21
0047DEr 2  CA               dex
0047DFr 2  CA               dex
0047E0r 2  18               clc
0047E1r 2  B5 00            lda $00,x
0047E3r 2  75 02            adc $02,x
0047E5r 2  95 00            sta $00,x
0047E7r 2  B5 01            lda $01,x
0047E9r 2  75 03            adc $03,x
0047EBr 2  95 01            sta $01,x
0047EDr 2               
0047EDr 2               ; <inline>:0:0 in `main`
0047EDr 2               @OPCODE_2342:   ; [c64_ir] AltPop
0047EDr 2  E8               inx
0047EEr 2  E8               inx
0047EFr 2  68               pla
0047F0r 2  95 00            sta $00,x
0047F2r 2  68               pla
0047F3r 2  95 01            sta $01,x
0047F5r 2               
0047F5r 2               ; <inline>:0:0 in `main`
0047F5r 2               @OPCODE_2343:   ; [c64_ir] Drop
0047F5r 2  CA               dex
0047F6r 2  CA               dex
0047F7r 2               
0047F7r 2               ; <inline>:0:0 in `main`
0047F7r 2               @OPCODE_2344:   ; [c64_ir] PushLiteral(7777)
0047F7r 2  E8               inx
0047F8r 2  E8               inx
0047F9r 2  A9 61            lda #97
0047FBr 2  95 00            sta $00,x
0047FDr 2  A9 1E            lda #30
0047FFr 2  95 01            sta $01,x
004801r 2               
004801r 2               ; <inline>:0:0 in `main`
004801r 2               @OPCODE_2345:   ; [c64_ir] AltPush
004801r 2  CA               dex
004802r 2  CA               dex
004803r 2  B5 03            lda $03,x
004805r 2  48               pha
004806r 2  B5 02            lda $02,x
004808r 2  48               pha
004809r 2               
004809r 2               ; src/prelude.fth:21:8 in `0=`
004809r 2               @OPCODE_2346:   ; [c64_ir] JumpIf0(89)
004809r 2  CA               dex
00480Ar 2  CA               dex
00480Br 2  B5 02            lda $02,x
00480Dr 2  15 03            ora $03,x
00480Fr 2  D0 03            bne *+5
004811r 2  4C rr rr         jmp @target_89
004814r 2               
004814r 2               @target_88:
004814r 2               
004814r 2               ; src/prelude.fth:21:11 in `0=`
004814r 2               @OPCODE_2348:   ; [c64_ir] PushLiteral(0)
004814r 2  E8               inx
004815r 2  E8               inx
004816r 2  A9 00            lda #0
004818r 2  95 00            sta $00,x
00481Ar 2  A9 00            lda #0
00481Cr 2  95 01            sta $01,x
00481Er 2               
00481Er 2               ; src/prelude.fth:21:13 in `0=`
00481Er 2               @OPCODE_2349:   ; [c64_ir] JumpElse(90)
00481Er 2  4C rr rr         jmp @target_90
004821r 2               
004821r 2               @target_89:
004821r 2               
004821r 2               ; src/prelude.fth:21:18 in `0=`
004821r 2               @OPCODE_2351:   ; [c64_ir] PushLiteral(-1)
004821r 2  E8               inx
004822r 2  E8               inx
004823r 2  A9 FF            lda #255
004825r 2  95 00            sta $00,x
004827r 2  A9 FF            lda #255
004829r 2  95 01            sta $01,x
00482Br 2               
00482Br 2               ; src/prelude.fth:21:21 in `0=`
00482Br 2               @OPCODE_2352:   ; [c64_ir] JumpTarget(89)
00482Br 2               
00482Br 2               @target_90:
00482Br 2               
00482Br 2               ; <inline>:0:0 in `main`
00482Br 2               @OPCODE_2354:   ; [c64_ir] AltPop
00482Br 2  E8               inx
00482Cr 2  E8               inx
00482Dr 2  68               pla
00482Er 2  95 00            sta $00,x
004830r 2  68               pla
004831r 2  95 01            sta $01,x
004833r 2               
004833r 2               ; <inline>:0:0 in `main`
004833r 2               @OPCODE_2355:   ; [c64_ir] Drop
004833r 2  CA               dex
004834r 2  CA               dex
004835r 2               
004835r 2               ; <inline>:0:0 in `main`
004835r 2               @OPCODE_2356:   ; [c64_ir] AltPop
004835r 2  E8               inx
004836r 2  E8               inx
004837r 2  68               pla
004838r 2  95 00            sta $00,x
00483Ar 2  68               pla
00483Br 2  95 01            sta $01,x
00483Dr 2               
00483Dr 2               ; <inline>:0:0 in `main`
00483Dr 2               @OPCODE_2357:   ; [c64_ir] Drop
00483Dr 2  CA               dex
00483Er 2  CA               dex
00483Fr 2               
00483Fr 2               ; <inline>:0:0 in `main`
00483Fr 2               @OPCODE_2358:   ; [c64_ir] PushLiteral(7777)
00483Fr 2  E8               inx
004840r 2  E8               inx
004841r 2  A9 61            lda #97
004843r 2  95 00            sta $00,x
004845r 2  A9 1E            lda #30
004847r 2  95 01            sta $01,x
004849r 2               
004849r 2               ; <inline>:0:0 in `main`
004849r 2               @OPCODE_2359:   ; [c64_ir] AltPush
004849r 2  CA               dex
00484Ar 2  CA               dex
00484Br 2  B5 03            lda $03,x
00484Dr 2  48               pha
00484Er 2  B5 02            lda $02,x
004850r 2  48               pha
004851r 2               
004851r 2               ; src/prelude.fth:3:10 in `swap`
004851r 2               @OPCODE_2360:   ; [c64_ir] AltPush
004851r 2  CA               dex
004852r 2  CA               dex
004853r 2  B5 03            lda $03,x
004855r 2  48               pha
004856r 2  B5 02            lda $02,x
004858r 2  48               pha
004859r 2               
004859r 2               ; src/prelude.fth:3:13 in `swap`
004859r 2               @OPCODE_2361:   ; [c64_ir] TempStore
004859r 2  CA               dex
00485Ar 2  CA               dex
00485Br 2  B5 03            lda $03,x
00485Dr 2  85 96            sta TEMP_PAX2
00485Fr 2  B5 02            lda $02,x
004861r 2  85 95            sta TEMP_PAX1
004863r 2               
004863r 2               ; src/prelude.fth:3:19 in `swap`
004863r 2               @OPCODE_2362:   ; [c64_ir] AltPop
004863r 2  E8               inx
004864r 2  E8               inx
004865r 2  68               pla
004866r 2  95 00            sta $00,x
004868r 2  68               pla
004869r 2  95 01            sta $01,x
00486Br 2               
00486Br 2               ; src/prelude.fth:3:22 in `swap`
00486Br 2               @OPCODE_2363:   ; [c64_ir] TempLoad
00486Br 2  E8               inx
00486Cr 2  E8               inx
00486Dr 2  A5 95            lda TEMP_PAX1
00486Fr 2  95 00            sta $00,x
004871r 2  A5 96            lda TEMP_PAX2
004873r 2  95 01            sta $01,x
004875r 2               
004875r 2               ; <inline>:0:0 in `main`
004875r 2               @OPCODE_2364:   ; [c64_ir] AltPop
004875r 2  E8               inx
004876r 2  E8               inx
004877r 2  68               pla
004878r 2  95 00            sta $00,x
00487Ar 2  68               pla
00487Br 2  95 01            sta $01,x
00487Dr 2               
00487Dr 2               ; <inline>:0:0 in `main`
00487Dr 2               @OPCODE_2365:   ; [c64_ir] Drop
00487Dr 2  CA               dex
00487Er 2  CA               dex
00487Fr 2               
00487Fr 2               ; snake.fth:148:3 in `is-horizontal`
00487Fr 2               @OPCODE_2366:   ; [c64_ir] PushLiteral(39)
00487Fr 2  E8               inx
004880r 2  E8               inx
004881r 2  A9 27            lda #39
004883r 2  95 00            sta $00,x
004885r 2  A9 00            lda #0
004887r 2  95 01            sta $01,x
004889r 2               
004889r 2               ; <inline>:0:0 in `main`
004889r 2               @OPCODE_2367:   ; [c64_ir] PushLiteral(7777)
004889r 2  E8               inx
00488Ar 2  E8               inx
00488Br 2  A9 61            lda #97
00488Dr 2  95 00            sta $00,x
00488Fr 2  A9 1E            lda #30
004891r 2  95 01            sta $01,x
004893r 2               
004893r 2               ; <inline>:0:0 in `main`
004893r 2               @OPCODE_2368:   ; [c64_ir] AltPush
004893r 2  CA               dex
004894r 2  CA               dex
004895r 2  B5 03            lda $03,x
004897r 2  48               pha
004898r 2  B5 02            lda $02,x
00489Ar 2  48               pha
00489Br 2               
00489Br 2               ; <inline>:0:0 in `main`
00489Br 2               @OPCODE_2369:   ; [c64_ir] PushLiteral(7777)
00489Br 2  E8               inx
00489Cr 2  E8               inx
00489Dr 2  A9 61            lda #97
00489Fr 2  95 00            sta $00,x
0048A1r 2  A9 1E            lda #30
0048A3r 2  95 01            sta $01,x
0048A5r 2               
0048A5r 2               ; <inline>:0:0 in `main`
0048A5r 2               @OPCODE_2370:   ; [c64_ir] AltPush
0048A5r 2  CA               dex
0048A6r 2  CA               dex
0048A7r 2  B5 03            lda $03,x
0048A9r 2  48               pha
0048AAr 2  B5 02            lda $02,x
0048ACr 2  48               pha
0048ADr 2               
0048ADr 2               ; <inline>:0:0 in `main`
0048ADr 2               @OPCODE_2371:   ; [c64_ir] PushLiteral(7777)
0048ADr 2  E8               inx
0048AEr 2  E8               inx
0048AFr 2  A9 61            lda #97
0048B1r 2  95 00            sta $00,x
0048B3r 2  A9 1E            lda #30
0048B5r 2  95 01            sta $01,x
0048B7r 2               
0048B7r 2               ; <inline>:0:0 in `main`
0048B7r 2               @OPCODE_2372:   ; [c64_ir] AltPush
0048B7r 2  CA               dex
0048B8r 2  CA               dex
0048B9r 2  B5 03            lda $03,x
0048BBr 2  48               pha
0048BCr 2  B5 02            lda $02,x
0048BEr 2  48               pha
0048BFr 2               
0048BFr 2               ; <inline>:0:0 in `main`
0048BFr 2               @OPCODE_2373:   ; [c64_ir] PushLiteral(7777)
0048BFr 2  E8               inx
0048C0r 2  E8               inx
0048C1r 2  A9 61            lda #97
0048C3r 2  95 00            sta $00,x
0048C5r 2  A9 1E            lda #30
0048C7r 2  95 01            sta $01,x
0048C9r 2               
0048C9r 2               ; <inline>:0:0 in `main`
0048C9r 2               @OPCODE_2374:   ; [c64_ir] AltPush
0048C9r 2  CA               dex
0048CAr 2  CA               dex
0048CBr 2  B5 03            lda $03,x
0048CDr 2  48               pha
0048CEr 2  B5 02            lda $02,x
0048D0r 2  48               pha
0048D1r 2               
0048D1r 2               ; src/prelude.fth:14:12 in `invert`
0048D1r 2               @OPCODE_2375:   ; [c64_ir] PushLiteral(-1)
0048D1r 2  E8               inx
0048D2r 2  E8               inx
0048D3r 2  A9 FF            lda #255
0048D5r 2  95 00            sta $00,x
0048D7r 2  A9 FF            lda #255
0048D9r 2  95 01            sta $01,x
0048DBr 2               
0048DBr 2               ; src/prelude.fth:14:15 in `invert`
0048DBr 2               @OPCODE_2376:   ; [c64_ir] Nand
0048DBr 2                   ; 26
0048DBr 2  CA               dex
0048DCr 2  CA               dex
0048DDr 2  B5 00            lda $00,x
0048DFr 2  35 02            and $02,x
0048E1r 2  49 FF            eor #$ff
0048E3r 2  95 00            sta $00,x
0048E5r 2  B5 01            lda $01,x
0048E7r 2  35 03            and $03,x
0048E9r 2  49 FF            eor #$ff
0048EBr 2  95 01            sta $01,x
0048EDr 2               
0048EDr 2               ; <inline>:0:0 in `main`
0048EDr 2               @OPCODE_2377:   ; [c64_ir] AltPop
0048EDr 2  E8               inx
0048EEr 2  E8               inx
0048EFr 2  68               pla
0048F0r 2  95 00            sta $00,x
0048F2r 2  68               pla
0048F3r 2  95 01            sta $01,x
0048F5r 2               
0048F5r 2               ; <inline>:0:0 in `main`
0048F5r 2               @OPCODE_2378:   ; [c64_ir] Drop
0048F5r 2  CA               dex
0048F6r 2  CA               dex
0048F7r 2               
0048F7r 2               ; src/prelude.fth:15:19 in `negate`
0048F7r 2               @OPCODE_2379:   ; [c64_ir] PushLiteral(1)
0048F7r 2  E8               inx
0048F8r 2  E8               inx
0048F9r 2  A9 01            lda #1
0048FBr 2  95 00            sta $00,x
0048FDr 2  A9 00            lda #0
0048FFr 2  95 01            sta $01,x
004901r 2               
004901r 2               ; src/prelude.fth:15:21 in `negate`
004901r 2               @OPCODE_2380:   ; [c64_ir] Add
004901r 2                   ; 21
004901r 2  CA               dex
004902r 2  CA               dex
004903r 2  18               clc
004904r 2  B5 00            lda $00,x
004906r 2  75 02            adc $02,x
004908r 2  95 00            sta $00,x
00490Ar 2  B5 01            lda $01,x
00490Cr 2  75 03            adc $03,x
00490Er 2  95 01            sta $01,x
004910r 2               
004910r 2               ; <inline>:0:0 in `main`
004910r 2               @OPCODE_2381:   ; [c64_ir] AltPop
004910r 2  E8               inx
004911r 2  E8               inx
004912r 2  68               pla
004913r 2  95 00            sta $00,x
004915r 2  68               pla
004916r 2  95 01            sta $01,x
004918r 2               
004918r 2               ; <inline>:0:0 in `main`
004918r 2               @OPCODE_2382:   ; [c64_ir] Drop
004918r 2  CA               dex
004919r 2  CA               dex
00491Ar 2               
00491Ar 2               ; src/prelude.fth:16:19 in `-`
00491Ar 2               @OPCODE_2383:   ; [c64_ir] Add
00491Ar 2                   ; 21
00491Ar 2  CA               dex
00491Br 2  CA               dex
00491Cr 2  18               clc
00491Dr 2  B5 00            lda $00,x
00491Fr 2  75 02            adc $02,x
004921r 2  95 00            sta $00,x
004923r 2  B5 01            lda $01,x
004925r 2  75 03            adc $03,x
004927r 2  95 01            sta $01,x
004929r 2               
004929r 2               ; <inline>:0:0 in `main`
004929r 2               @OPCODE_2384:   ; [c64_ir] AltPop
004929r 2  E8               inx
00492Ar 2  E8               inx
00492Br 2  68               pla
00492Cr 2  95 00            sta $00,x
00492Er 2  68               pla
00492Fr 2  95 01            sta $01,x
004931r 2               
004931r 2               ; <inline>:0:0 in `main`
004931r 2               @OPCODE_2385:   ; [c64_ir] Drop
004931r 2  CA               dex
004932r 2  CA               dex
004933r 2               
004933r 2               ; <inline>:0:0 in `main`
004933r 2               @OPCODE_2386:   ; [c64_ir] PushLiteral(7777)
004933r 2  E8               inx
004934r 2  E8               inx
004935r 2  A9 61            lda #97
004937r 2  95 00            sta $00,x
004939r 2  A9 1E            lda #30
00493Br 2  95 01            sta $01,x
00493Dr 2               
00493Dr 2               ; <inline>:0:0 in `main`
00493Dr 2               @OPCODE_2387:   ; [c64_ir] AltPush
00493Dr 2  CA               dex
00493Er 2  CA               dex
00493Fr 2  B5 03            lda $03,x
004941r 2  48               pha
004942r 2  B5 02            lda $02,x
004944r 2  48               pha
004945r 2               
004945r 2               ; src/prelude.fth:21:8 in `0=`
004945r 2               @OPCODE_2388:   ; [c64_ir] JumpIf0(92)
004945r 2  CA               dex
004946r 2  CA               dex
004947r 2  B5 02            lda $02,x
004949r 2  15 03            ora $03,x
00494Br 2  D0 03            bne *+5
00494Dr 2  4C rr rr         jmp @target_92
004950r 2               
004950r 2               @target_91:
004950r 2               
004950r 2               ; src/prelude.fth:21:11 in `0=`
004950r 2               @OPCODE_2390:   ; [c64_ir] PushLiteral(0)
004950r 2  E8               inx
004951r 2  E8               inx
004952r 2  A9 00            lda #0
004954r 2  95 00            sta $00,x
004956r 2  A9 00            lda #0
004958r 2  95 01            sta $01,x
00495Ar 2               
00495Ar 2               ; src/prelude.fth:21:13 in `0=`
00495Ar 2               @OPCODE_2391:   ; [c64_ir] JumpElse(93)
00495Ar 2  4C rr rr         jmp @target_93
00495Dr 2               
00495Dr 2               @target_92:
00495Dr 2               
00495Dr 2               ; src/prelude.fth:21:18 in `0=`
00495Dr 2               @OPCODE_2393:   ; [c64_ir] PushLiteral(-1)
00495Dr 2  E8               inx
00495Er 2  E8               inx
00495Fr 2  A9 FF            lda #255
004961r 2  95 00            sta $00,x
004963r 2  A9 FF            lda #255
004965r 2  95 01            sta $01,x
004967r 2               
004967r 2               ; src/prelude.fth:21:21 in `0=`
004967r 2               @OPCODE_2394:   ; [c64_ir] JumpTarget(92)
004967r 2               
004967r 2               @target_93:
004967r 2               
004967r 2               ; <inline>:0:0 in `main`
004967r 2               @OPCODE_2396:   ; [c64_ir] AltPop
004967r 2  E8               inx
004968r 2  E8               inx
004969r 2  68               pla
00496Ar 2  95 00            sta $00,x
00496Cr 2  68               pla
00496Dr 2  95 01            sta $01,x
00496Fr 2               
00496Fr 2               ; <inline>:0:0 in `main`
00496Fr 2               @OPCODE_2397:   ; [c64_ir] Drop
00496Fr 2  CA               dex
004970r 2  CA               dex
004971r 2               
004971r 2               ; <inline>:0:0 in `main`
004971r 2               @OPCODE_2398:   ; [c64_ir] AltPop
004971r 2  E8               inx
004972r 2  E8               inx
004973r 2  68               pla
004974r 2  95 00            sta $00,x
004976r 2  68               pla
004977r 2  95 01            sta $01,x
004979r 2               
004979r 2               ; <inline>:0:0 in `main`
004979r 2               @OPCODE_2399:   ; [c64_ir] Drop
004979r 2  CA               dex
00497Ar 2  CA               dex
00497Br 2               
00497Br 2               ; <inline>:0:0 in `main`
00497Br 2               @OPCODE_2400:   ; [c64_ir] PushLiteral(7777)
00497Br 2  E8               inx
00497Cr 2  E8               inx
00497Dr 2  A9 61            lda #97
00497Fr 2  95 00            sta $00,x
004981r 2  A9 1E            lda #30
004983r 2  95 01            sta $01,x
004985r 2               
004985r 2               ; <inline>:0:0 in `main`
004985r 2               @OPCODE_2401:   ; [c64_ir] AltPush
004985r 2  CA               dex
004986r 2  CA               dex
004987r 2  B5 03            lda $03,x
004989r 2  48               pha
00498Ar 2  B5 02            lda $02,x
00498Cr 2  48               pha
00498Dr 2               
00498Dr 2               ; <inline>:0:0 in `main`
00498Dr 2               @OPCODE_2402:   ; [c64_ir] PushLiteral(7777)
00498Dr 2  E8               inx
00498Er 2  E8               inx
00498Fr 2  A9 61            lda #97
004991r 2  95 00            sta $00,x
004993r 2  A9 1E            lda #30
004995r 2  95 01            sta $01,x
004997r 2               
004997r 2               ; <inline>:0:0 in `main`
004997r 2               @OPCODE_2403:   ; [c64_ir] AltPush
004997r 2  CA               dex
004998r 2  CA               dex
004999r 2  B5 03            lda $03,x
00499Br 2  48               pha
00499Cr 2  B5 02            lda $02,x
00499Er 2  48               pha
00499Fr 2               
00499Fr 2               ; src/prelude.fth:14:12 in `invert`
00499Fr 2               @OPCODE_2404:   ; [c64_ir] PushLiteral(-1)
00499Fr 2  E8               inx
0049A0r 2  E8               inx
0049A1r 2  A9 FF            lda #255
0049A3r 2  95 00            sta $00,x
0049A5r 2  A9 FF            lda #255
0049A7r 2  95 01            sta $01,x
0049A9r 2               
0049A9r 2               ; src/prelude.fth:14:15 in `invert`
0049A9r 2               @OPCODE_2405:   ; [c64_ir] Nand
0049A9r 2                   ; 26
0049A9r 2  CA               dex
0049AAr 2  CA               dex
0049ABr 2  B5 00            lda $00,x
0049ADr 2  35 02            and $02,x
0049AFr 2  49 FF            eor #$ff
0049B1r 2  95 00            sta $00,x
0049B3r 2  B5 01            lda $01,x
0049B5r 2  35 03            and $03,x
0049B7r 2  49 FF            eor #$ff
0049B9r 2  95 01            sta $01,x
0049BBr 2               
0049BBr 2               ; <inline>:0:0 in `main`
0049BBr 2               @OPCODE_2406:   ; [c64_ir] AltPop
0049BBr 2  E8               inx
0049BCr 2  E8               inx
0049BDr 2  68               pla
0049BEr 2  95 00            sta $00,x
0049C0r 2  68               pla
0049C1r 2  95 01            sta $01,x
0049C3r 2               
0049C3r 2               ; <inline>:0:0 in `main`
0049C3r 2               @OPCODE_2407:   ; [c64_ir] Drop
0049C3r 2  CA               dex
0049C4r 2  CA               dex
0049C5r 2               
0049C5r 2               ; <inline>:0:0 in `main`
0049C5r 2               @OPCODE_2408:   ; [c64_ir] PushLiteral(7777)
0049C5r 2  E8               inx
0049C6r 2  E8               inx
0049C7r 2  A9 61            lda #97
0049C9r 2  95 00            sta $00,x
0049CBr 2  A9 1E            lda #30
0049CDr 2  95 01            sta $01,x
0049CFr 2               
0049CFr 2               ; <inline>:0:0 in `main`
0049CFr 2               @OPCODE_2409:   ; [c64_ir] AltPush
0049CFr 2  CA               dex
0049D0r 2  CA               dex
0049D1r 2  B5 03            lda $03,x
0049D3r 2  48               pha
0049D4r 2  B5 02            lda $02,x
0049D6r 2  48               pha
0049D7r 2               
0049D7r 2               ; src/prelude.fth:3:10 in `swap`
0049D7r 2               @OPCODE_2410:   ; [c64_ir] AltPush
0049D7r 2  CA               dex
0049D8r 2  CA               dex
0049D9r 2  B5 03            lda $03,x
0049DBr 2  48               pha
0049DCr 2  B5 02            lda $02,x
0049DEr 2  48               pha
0049DFr 2               
0049DFr 2               ; src/prelude.fth:3:13 in `swap`
0049DFr 2               @OPCODE_2411:   ; [c64_ir] TempStore
0049DFr 2  CA               dex
0049E0r 2  CA               dex
0049E1r 2  B5 03            lda $03,x
0049E3r 2  85 96            sta TEMP_PAX2
0049E5r 2  B5 02            lda $02,x
0049E7r 2  85 95            sta TEMP_PAX1
0049E9r 2               
0049E9r 2               ; src/prelude.fth:3:19 in `swap`
0049E9r 2               @OPCODE_2412:   ; [c64_ir] AltPop
0049E9r 2  E8               inx
0049EAr 2  E8               inx
0049EBr 2  68               pla
0049ECr 2  95 00            sta $00,x
0049EEr 2  68               pla
0049EFr 2  95 01            sta $01,x
0049F1r 2               
0049F1r 2               ; src/prelude.fth:3:22 in `swap`
0049F1r 2               @OPCODE_2413:   ; [c64_ir] TempLoad
0049F1r 2  E8               inx
0049F2r 2  E8               inx
0049F3r 2  A5 95            lda TEMP_PAX1
0049F5r 2  95 00            sta $00,x
0049F7r 2  A5 96            lda TEMP_PAX2
0049F9r 2  95 01            sta $01,x
0049FBr 2               
0049FBr 2               ; <inline>:0:0 in `main`
0049FBr 2               @OPCODE_2414:   ; [c64_ir] AltPop
0049FBr 2  E8               inx
0049FCr 2  E8               inx
0049FDr 2  68               pla
0049FEr 2  95 00            sta $00,x
004A00r 2  68               pla
004A01r 2  95 01            sta $01,x
004A03r 2               
004A03r 2               ; <inline>:0:0 in `main`
004A03r 2               @OPCODE_2415:   ; [c64_ir] Drop
004A03r 2  CA               dex
004A04r 2  CA               dex
004A05r 2               
004A05r 2               ; <inline>:0:0 in `main`
004A05r 2               @OPCODE_2416:   ; [c64_ir] PushLiteral(7777)
004A05r 2  E8               inx
004A06r 2  E8               inx
004A07r 2  A9 61            lda #97
004A09r 2  95 00            sta $00,x
004A0Br 2  A9 1E            lda #30
004A0Dr 2  95 01            sta $01,x
004A0Fr 2               
004A0Fr 2               ; <inline>:0:0 in `main`
004A0Fr 2               @OPCODE_2417:   ; [c64_ir] AltPush
004A0Fr 2  CA               dex
004A10r 2  CA               dex
004A11r 2  B5 03            lda $03,x
004A13r 2  48               pha
004A14r 2  B5 02            lda $02,x
004A16r 2  48               pha
004A17r 2               
004A17r 2               ; src/prelude.fth:14:12 in `invert`
004A17r 2               @OPCODE_2418:   ; [c64_ir] PushLiteral(-1)
004A17r 2  E8               inx
004A18r 2  E8               inx
004A19r 2  A9 FF            lda #255
004A1Br 2  95 00            sta $00,x
004A1Dr 2  A9 FF            lda #255
004A1Fr 2  95 01            sta $01,x
004A21r 2               
004A21r 2               ; src/prelude.fth:14:15 in `invert`
004A21r 2               @OPCODE_2419:   ; [c64_ir] Nand
004A21r 2                   ; 26
004A21r 2  CA               dex
004A22r 2  CA               dex
004A23r 2  B5 00            lda $00,x
004A25r 2  35 02            and $02,x
004A27r 2  49 FF            eor #$ff
004A29r 2  95 00            sta $00,x
004A2Br 2  B5 01            lda $01,x
004A2Dr 2  35 03            and $03,x
004A2Fr 2  49 FF            eor #$ff
004A31r 2  95 01            sta $01,x
004A33r 2               
004A33r 2               ; <inline>:0:0 in `main`
004A33r 2               @OPCODE_2420:   ; [c64_ir] AltPop
004A33r 2  E8               inx
004A34r 2  E8               inx
004A35r 2  68               pla
004A36r 2  95 00            sta $00,x
004A38r 2  68               pla
004A39r 2  95 01            sta $01,x
004A3Br 2               
004A3Br 2               ; <inline>:0:0 in `main`
004A3Br 2               @OPCODE_2421:   ; [c64_ir] Drop
004A3Br 2  CA               dex
004A3Cr 2  CA               dex
004A3Dr 2               
004A3Dr 2               ; src/prelude.fth:26:27 in `or`
004A3Dr 2               @OPCODE_2422:   ; [c64_ir] Nand
004A3Dr 2                   ; 26
004A3Dr 2  CA               dex
004A3Er 2  CA               dex
004A3Fr 2  B5 00            lda $00,x
004A41r 2  35 02            and $02,x
004A43r 2  49 FF            eor #$ff
004A45r 2  95 00            sta $00,x
004A47r 2  B5 01            lda $01,x
004A49r 2  35 03            and $03,x
004A4Br 2  49 FF            eor #$ff
004A4Dr 2  95 01            sta $01,x
004A4Fr 2               
004A4Fr 2               ; <inline>:0:0 in `main`
004A4Fr 2               @OPCODE_2423:   ; [c64_ir] AltPop
004A4Fr 2  E8               inx
004A50r 2  E8               inx
004A51r 2  68               pla
004A52r 2  95 00            sta $00,x
004A54r 2  68               pla
004A55r 2  95 01            sta $01,x
004A57r 2               
004A57r 2               ; <inline>:0:0 in `main`
004A57r 2               @OPCODE_2424:   ; [c64_ir] Drop
004A57r 2  CA               dex
004A58r 2  CA               dex
004A59r 2               
004A59r 2               ; <inline>:0:0 in `main`
004A59r 2               @OPCODE_2425:   ; [c64_ir] AltPop
004A59r 2  E8               inx
004A5Ar 2  E8               inx
004A5Br 2  68               pla
004A5Cr 2  95 00            sta $00,x
004A5Er 2  68               pla
004A5Fr 2  95 01            sta $01,x
004A61r 2               
004A61r 2               ; <inline>:0:0 in `main`
004A61r 2               @OPCODE_2426:   ; [c64_ir] Drop
004A61r 2  CA               dex
004A62r 2  CA               dex
004A63r 2               
004A63r 2               ; snake.fth:154:29 in `turn-up`
004A63r 2               @OPCODE_2427:   ; [c64_ir] JumpIf0(95)
004A63r 2  CA               dex
004A64r 2  CA               dex
004A65r 2  B5 02            lda $02,x
004A67r 2  15 03            ora $03,x
004A69r 2  D0 03            bne *+5
004A6Br 2  4C rr rr         jmp @target_95
004A6Er 2               
004A6Er 2               @target_94:
004A6Er 2               
004A6Er 2               ; snake.fth:154:32 in `turn-up`
004A6Er 2               @OPCODE_2429:   ; [c64_ir] PushLiteral(38)
004A6Er 2  E8               inx
004A6Fr 2  E8               inx
004A70r 2  A9 26            lda #38
004A72r 2  95 00            sta $00,x
004A74r 2  A9 00            lda #0
004A76r 2  95 01            sta $01,x
004A78r 2               
004A78r 2               ; snake.fth:154:35 in `turn-up`
004A78r 2               @OPCODE_2430:   ; [c64_ir] PushLiteral(-26660)
004A78r 2  E8               inx
004A79r 2  E8               inx
004A7Ar 2  A9 DC            lda #220
004A7Cr 2  95 00            sta $00,x
004A7Er 2  A9 97            lda #151
004A80r 2  95 01            sta $01,x
004A82r 2               
004A82r 2               ; snake.fth:154:45 in `turn-up`
004A82r 2               @OPCODE_2431:   ; [c64_ir] Store
004A82r 2  CA               dex
004A83r 2  CA               dex
004A84r 2  CA               dex
004A85r 2  CA               dex
004A86r 2  B5 02            lda $02,x
004A88r 2  81 04            sta ($04,x)
004A8Ar 2                   ; TODO high byte
004A8Ar 2               
004A8Ar 2               ; snake.fth:154:47 in `turn-up`
004A8Ar 2               @OPCODE_2432:   ; [c64_ir] JumpTarget(94)
004A8Ar 2               
004A8Ar 2               @target_95:
004A8Ar 2               
004A8Ar 2               ; <inline>:0:0 in `main`
004A8Ar 2               @OPCODE_2434:   ; [c64_ir] AltPop
004A8Ar 2  E8               inx
004A8Br 2  E8               inx
004A8Cr 2  68               pla
004A8Dr 2  95 00            sta $00,x
004A8Fr 2  68               pla
004A90r 2  95 01            sta $01,x
004A92r 2               
004A92r 2               ; <inline>:0:0 in `main`
004A92r 2               @OPCODE_2435:   ; [c64_ir] Drop
004A92r 2  CA               dex
004A93r 2  CA               dex
004A94r 2               
004A94r 2               ; snake.fth:161:24 in `change-direction`
004A94r 2               @OPCODE_2436:   ; [c64_ir] JumpElse(124)
004A94r 2  4C rr rr         jmp @target_124
004A97r 2               
004A97r 2               @target_96:
004A97r 2               
004A97r 2               ; snake.fth:162:3 in `change-direction`
004A97r 2               @OPCODE_2438:   ; [c64_ir] PushLiteral(39)
004A97r 2  E8               inx
004A98r 2  E8               inx
004A99r 2  A9 27            lda #39
004A9Br 2  95 00            sta $00,x
004A9Dr 2  A9 00            lda #0
004A9Fr 2  95 01            sta $01,x
004AA1r 2               
004AA1r 2               ; <inline>:0:0 in `main`
004AA1r 2               @OPCODE_2439:   ; [c64_ir] PushLiteral(7777)
004AA1r 2  E8               inx
004AA2r 2  E8               inx
004AA3r 2  A9 61            lda #97
004AA5r 2  95 00            sta $00,x
004AA7r 2  A9 1E            lda #30
004AA9r 2  95 01            sta $01,x
004AABr 2               
004AABr 2               ; <inline>:0:0 in `main`
004AABr 2               @OPCODE_2440:   ; [c64_ir] AltPush
004AABr 2  CA               dex
004AACr 2  CA               dex
004AADr 2  B5 03            lda $03,x
004AAFr 2  48               pha
004AB0r 2  B5 02            lda $02,x
004AB2r 2  48               pha
004AB3r 2               
004AB3r 2               ; src/prelude.fth:4:10 in `over`
004AB3r 2               @OPCODE_2441:   ; [c64_ir] AltPush
004AB3r 2  CA               dex
004AB4r 2  CA               dex
004AB5r 2  B5 03            lda $03,x
004AB7r 2  48               pha
004AB8r 2  B5 02            lda $02,x
004ABAr 2  48               pha
004ABBr 2               
004ABBr 2               ; src/prelude.fth:4:13 in `over`
004ABBr 2               @OPCODE_2442:   ; [c64_ir] TempStore
004ABBr 2  CA               dex
004ABCr 2  CA               dex
004ABDr 2  B5 03            lda $03,x
004ABFr 2  85 96            sta TEMP_PAX2
004AC1r 2  B5 02            lda $02,x
004AC3r 2  85 95            sta TEMP_PAX1
004AC5r 2               
004AC5r 2               ; src/prelude.fth:4:19 in `over`
004AC5r 2               @OPCODE_2443:   ; [c64_ir] TempLoad
004AC5r 2  E8               inx
004AC6r 2  E8               inx
004AC7r 2  A5 95            lda TEMP_PAX1
004AC9r 2  95 00            sta $00,x
004ACBr 2  A5 96            lda TEMP_PAX2
004ACDr 2  95 01            sta $01,x
004ACFr 2               
004ACFr 2               ; src/prelude.fth:4:25 in `over`
004ACFr 2               @OPCODE_2444:   ; [c64_ir] AltPop
004ACFr 2  E8               inx
004AD0r 2  E8               inx
004AD1r 2  68               pla
004AD2r 2  95 00            sta $00,x
004AD4r 2  68               pla
004AD5r 2  95 01            sta $01,x
004AD7r 2               
004AD7r 2               ; src/prelude.fth:4:28 in `over`
004AD7r 2               @OPCODE_2445:   ; [c64_ir] TempLoad
004AD7r 2  E8               inx
004AD8r 2  E8               inx
004AD9r 2  A5 95            lda TEMP_PAX1
004ADBr 2  95 00            sta $00,x
004ADDr 2  A5 96            lda TEMP_PAX2
004ADFr 2  95 01            sta $01,x
004AE1r 2               
004AE1r 2               ; <inline>:0:0 in `main`
004AE1r 2               @OPCODE_2446:   ; [c64_ir] AltPop
004AE1r 2  E8               inx
004AE2r 2  E8               inx
004AE3r 2  68               pla
004AE4r 2  95 00            sta $00,x
004AE6r 2  68               pla
004AE7r 2  95 01            sta $01,x
004AE9r 2               
004AE9r 2               ; <inline>:0:0 in `main`
004AE9r 2               @OPCODE_2447:   ; [c64_ir] Drop
004AE9r 2  CA               dex
004AEAr 2  CA               dex
004AEBr 2               
004AEBr 2               ; <inline>:0:0 in `main`
004AEBr 2               @OPCODE_2448:   ; [c64_ir] PushLiteral(7777)
004AEBr 2  E8               inx
004AECr 2  E8               inx
004AEDr 2  A9 61            lda #97
004AEFr 2  95 00            sta $00,x
004AF1r 2  A9 1E            lda #30
004AF3r 2  95 01            sta $01,x
004AF5r 2               
004AF5r 2               ; <inline>:0:0 in `main`
004AF5r 2               @OPCODE_2449:   ; [c64_ir] AltPush
004AF5r 2  CA               dex
004AF6r 2  CA               dex
004AF7r 2  B5 03            lda $03,x
004AF9r 2  48               pha
004AFAr 2  B5 02            lda $02,x
004AFCr 2  48               pha
004AFDr 2               
004AFDr 2               ; <inline>:0:0 in `main`
004AFDr 2               @OPCODE_2450:   ; [c64_ir] PushLiteral(7777)
004AFDr 2  E8               inx
004AFEr 2  E8               inx
004AFFr 2  A9 61            lda #97
004B01r 2  95 00            sta $00,x
004B03r 2  A9 1E            lda #30
004B05r 2  95 01            sta $01,x
004B07r 2               
004B07r 2               ; <inline>:0:0 in `main`
004B07r 2               @OPCODE_2451:   ; [c64_ir] AltPush
004B07r 2  CA               dex
004B08r 2  CA               dex
004B09r 2  B5 03            lda $03,x
004B0Br 2  48               pha
004B0Cr 2  B5 02            lda $02,x
004B0Er 2  48               pha
004B0Fr 2               
004B0Fr 2               ; <inline>:0:0 in `main`
004B0Fr 2               @OPCODE_2452:   ; [c64_ir] PushLiteral(7777)
004B0Fr 2  E8               inx
004B10r 2  E8               inx
004B11r 2  A9 61            lda #97
004B13r 2  95 00            sta $00,x
004B15r 2  A9 1E            lda #30
004B17r 2  95 01            sta $01,x
004B19r 2               
004B19r 2               ; <inline>:0:0 in `main`
004B19r 2               @OPCODE_2453:   ; [c64_ir] AltPush
004B19r 2  CA               dex
004B1Ar 2  CA               dex
004B1Br 2  B5 03            lda $03,x
004B1Dr 2  48               pha
004B1Er 2  B5 02            lda $02,x
004B20r 2  48               pha
004B21r 2               
004B21r 2               ; <inline>:0:0 in `main`
004B21r 2               @OPCODE_2454:   ; [c64_ir] PushLiteral(7777)
004B21r 2  E8               inx
004B22r 2  E8               inx
004B23r 2  A9 61            lda #97
004B25r 2  95 00            sta $00,x
004B27r 2  A9 1E            lda #30
004B29r 2  95 01            sta $01,x
004B2Br 2               
004B2Br 2               ; <inline>:0:0 in `main`
004B2Br 2               @OPCODE_2455:   ; [c64_ir] AltPush
004B2Br 2  CA               dex
004B2Cr 2  CA               dex
004B2Dr 2  B5 03            lda $03,x
004B2Fr 2  48               pha
004B30r 2  B5 02            lda $02,x
004B32r 2  48               pha
004B33r 2               
004B33r 2               ; src/prelude.fth:14:12 in `invert`
004B33r 2               @OPCODE_2456:   ; [c64_ir] PushLiteral(-1)
004B33r 2  E8               inx
004B34r 2  E8               inx
004B35r 2  A9 FF            lda #255
004B37r 2  95 00            sta $00,x
004B39r 2  A9 FF            lda #255
004B3Br 2  95 01            sta $01,x
004B3Dr 2               
004B3Dr 2               ; src/prelude.fth:14:15 in `invert`
004B3Dr 2               @OPCODE_2457:   ; [c64_ir] Nand
004B3Dr 2                   ; 26
004B3Dr 2  CA               dex
004B3Er 2  CA               dex
004B3Fr 2  B5 00            lda $00,x
004B41r 2  35 02            and $02,x
004B43r 2  49 FF            eor #$ff
004B45r 2  95 00            sta $00,x
004B47r 2  B5 01            lda $01,x
004B49r 2  35 03            and $03,x
004B4Br 2  49 FF            eor #$ff
004B4Dr 2  95 01            sta $01,x
004B4Fr 2               
004B4Fr 2               ; <inline>:0:0 in `main`
004B4Fr 2               @OPCODE_2458:   ; [c64_ir] AltPop
004B4Fr 2  E8               inx
004B50r 2  E8               inx
004B51r 2  68               pla
004B52r 2  95 00            sta $00,x
004B54r 2  68               pla
004B55r 2  95 01            sta $01,x
004B57r 2               
004B57r 2               ; <inline>:0:0 in `main`
004B57r 2               @OPCODE_2459:   ; [c64_ir] Drop
004B57r 2  CA               dex
004B58r 2  CA               dex
004B59r 2               
004B59r 2               ; src/prelude.fth:15:19 in `negate`
004B59r 2               @OPCODE_2460:   ; [c64_ir] PushLiteral(1)
004B59r 2  E8               inx
004B5Ar 2  E8               inx
004B5Br 2  A9 01            lda #1
004B5Dr 2  95 00            sta $00,x
004B5Fr 2  A9 00            lda #0
004B61r 2  95 01            sta $01,x
004B63r 2               
004B63r 2               ; src/prelude.fth:15:21 in `negate`
004B63r 2               @OPCODE_2461:   ; [c64_ir] Add
004B63r 2                   ; 21
004B63r 2  CA               dex
004B64r 2  CA               dex
004B65r 2  18               clc
004B66r 2  B5 00            lda $00,x
004B68r 2  75 02            adc $02,x
004B6Ar 2  95 00            sta $00,x
004B6Cr 2  B5 01            lda $01,x
004B6Er 2  75 03            adc $03,x
004B70r 2  95 01            sta $01,x
004B72r 2               
004B72r 2               ; <inline>:0:0 in `main`
004B72r 2               @OPCODE_2462:   ; [c64_ir] AltPop
004B72r 2  E8               inx
004B73r 2  E8               inx
004B74r 2  68               pla
004B75r 2  95 00            sta $00,x
004B77r 2  68               pla
004B78r 2  95 01            sta $01,x
004B7Ar 2               
004B7Ar 2               ; <inline>:0:0 in `main`
004B7Ar 2               @OPCODE_2463:   ; [c64_ir] Drop
004B7Ar 2  CA               dex
004B7Br 2  CA               dex
004B7Cr 2               
004B7Cr 2               ; src/prelude.fth:16:19 in `-`
004B7Cr 2               @OPCODE_2464:   ; [c64_ir] Add
004B7Cr 2                   ; 21
004B7Cr 2  CA               dex
004B7Dr 2  CA               dex
004B7Er 2  18               clc
004B7Fr 2  B5 00            lda $00,x
004B81r 2  75 02            adc $02,x
004B83r 2  95 00            sta $00,x
004B85r 2  B5 01            lda $01,x
004B87r 2  75 03            adc $03,x
004B89r 2  95 01            sta $01,x
004B8Br 2               
004B8Br 2               ; <inline>:0:0 in `main`
004B8Br 2               @OPCODE_2465:   ; [c64_ir] AltPop
004B8Br 2  E8               inx
004B8Cr 2  E8               inx
004B8Dr 2  68               pla
004B8Er 2  95 00            sta $00,x
004B90r 2  68               pla
004B91r 2  95 01            sta $01,x
004B93r 2               
004B93r 2               ; <inline>:0:0 in `main`
004B93r 2               @OPCODE_2466:   ; [c64_ir] Drop
004B93r 2  CA               dex
004B94r 2  CA               dex
004B95r 2               
004B95r 2               ; <inline>:0:0 in `main`
004B95r 2               @OPCODE_2467:   ; [c64_ir] PushLiteral(7777)
004B95r 2  E8               inx
004B96r 2  E8               inx
004B97r 2  A9 61            lda #97
004B99r 2  95 00            sta $00,x
004B9Br 2  A9 1E            lda #30
004B9Dr 2  95 01            sta $01,x
004B9Fr 2               
004B9Fr 2               ; <inline>:0:0 in `main`
004B9Fr 2               @OPCODE_2468:   ; [c64_ir] AltPush
004B9Fr 2  CA               dex
004BA0r 2  CA               dex
004BA1r 2  B5 03            lda $03,x
004BA3r 2  48               pha
004BA4r 2  B5 02            lda $02,x
004BA6r 2  48               pha
004BA7r 2               
004BA7r 2               ; src/prelude.fth:21:8 in `0=`
004BA7r 2               @OPCODE_2469:   ; [c64_ir] JumpIf0(98)
004BA7r 2  CA               dex
004BA8r 2  CA               dex
004BA9r 2  B5 02            lda $02,x
004BABr 2  15 03            ora $03,x
004BADr 2  D0 03            bne *+5
004BAFr 2  4C rr rr         jmp @target_98
004BB2r 2               
004BB2r 2               @target_97:
004BB2r 2               
004BB2r 2               ; src/prelude.fth:21:11 in `0=`
004BB2r 2               @OPCODE_2471:   ; [c64_ir] PushLiteral(0)
004BB2r 2  E8               inx
004BB3r 2  E8               inx
004BB4r 2  A9 00            lda #0
004BB6r 2  95 00            sta $00,x
004BB8r 2  A9 00            lda #0
004BBAr 2  95 01            sta $01,x
004BBCr 2               
004BBCr 2               ; src/prelude.fth:21:13 in `0=`
004BBCr 2               @OPCODE_2472:   ; [c64_ir] JumpElse(99)
004BBCr 2  4C rr rr         jmp @target_99
004BBFr 2               
004BBFr 2               @target_98:
004BBFr 2               
004BBFr 2               ; src/prelude.fth:21:18 in `0=`
004BBFr 2               @OPCODE_2474:   ; [c64_ir] PushLiteral(-1)
004BBFr 2  E8               inx
004BC0r 2  E8               inx
004BC1r 2  A9 FF            lda #255
004BC3r 2  95 00            sta $00,x
004BC5r 2  A9 FF            lda #255
004BC7r 2  95 01            sta $01,x
004BC9r 2               
004BC9r 2               ; src/prelude.fth:21:21 in `0=`
004BC9r 2               @OPCODE_2475:   ; [c64_ir] JumpTarget(98)
004BC9r 2               
004BC9r 2               @target_99:
004BC9r 2               
004BC9r 2               ; <inline>:0:0 in `main`
004BC9r 2               @OPCODE_2477:   ; [c64_ir] AltPop
004BC9r 2  E8               inx
004BCAr 2  E8               inx
004BCBr 2  68               pla
004BCCr 2  95 00            sta $00,x
004BCEr 2  68               pla
004BCFr 2  95 01            sta $01,x
004BD1r 2               
004BD1r 2               ; <inline>:0:0 in `main`
004BD1r 2               @OPCODE_2478:   ; [c64_ir] Drop
004BD1r 2  CA               dex
004BD2r 2  CA               dex
004BD3r 2               
004BD3r 2               ; <inline>:0:0 in `main`
004BD3r 2               @OPCODE_2479:   ; [c64_ir] AltPop
004BD3r 2  E8               inx
004BD4r 2  E8               inx
004BD5r 2  68               pla
004BD6r 2  95 00            sta $00,x
004BD8r 2  68               pla
004BD9r 2  95 01            sta $01,x
004BDBr 2               
004BDBr 2               ; <inline>:0:0 in `main`
004BDBr 2               @OPCODE_2480:   ; [c64_ir] Drop
004BDBr 2  CA               dex
004BDCr 2  CA               dex
004BDDr 2               
004BDDr 2               ; snake.fth:162:16 in `change-direction`
004BDDr 2               @OPCODE_2481:   ; [c64_ir] JumpIf0(109)
004BDDr 2  CA               dex
004BDEr 2  CA               dex
004BDFr 2  B5 02            lda $02,x
004BE1r 2  15 03            ora $03,x
004BE3r 2  D0 03            bne *+5
004BE5r 2  4C rr rr         jmp @target_109
004BE8r 2               
004BE8r 2               @target_100:
004BE8r 2               
004BE8r 2               ; <inline>:0:0 in `main`
004BE8r 2               @OPCODE_2483:   ; [c64_ir] PushLiteral(7777)
004BE8r 2  E8               inx
004BE9r 2  E8               inx
004BEAr 2  A9 61            lda #97
004BECr 2  95 00            sta $00,x
004BEEr 2  A9 1E            lda #30
004BF0r 2  95 01            sta $01,x
004BF2r 2               
004BF2r 2               ; <inline>:0:0 in `main`
004BF2r 2               @OPCODE_2484:   ; [c64_ir] AltPush
004BF2r 2  CA               dex
004BF3r 2  CA               dex
004BF4r 2  B5 03            lda $03,x
004BF6r 2  48               pha
004BF7r 2  B5 02            lda $02,x
004BF9r 2  48               pha
004BFAr 2               
004BFAr 2               ; <inline>:0:0 in `main`
004BFAr 2               @OPCODE_2485:   ; [c64_ir] PushLiteral(7777)
004BFAr 2  E8               inx
004BFBr 2  E8               inx
004BFCr 2  A9 61            lda #97
004BFEr 2  95 00            sta $00,x
004C00r 2  A9 1E            lda #30
004C02r 2  95 01            sta $01,x
004C04r 2               
004C04r 2               ; <inline>:0:0 in `main`
004C04r 2               @OPCODE_2486:   ; [c64_ir] AltPush
004C04r 2  CA               dex
004C05r 2  CA               dex
004C06r 2  B5 03            lda $03,x
004C08r 2  48               pha
004C09r 2  B5 02            lda $02,x
004C0Br 2  48               pha
004C0Cr 2               
004C0Cr 2               ; snake.fth:150:16 in `is-vertical`
004C0Cr 2               @OPCODE_2487:   ; [c64_ir] PushLiteral(-26660)
004C0Cr 2  E8               inx
004C0Dr 2  E8               inx
004C0Er 2  A9 DC            lda #220
004C10r 2  95 00            sta $00,x
004C12r 2  A9 97            lda #151
004C14r 2  95 01            sta $01,x
004C16r 2               
004C16r 2               ; snake.fth:150:26 in `is-vertical`
004C16r 2               @OPCODE_2488:   ; [c64_ir] Load
004C16r 2  A1 00            lda ($00,x)
004C18r 2  95 00            sta $00,x
004C1Ar 2  A9 00            lda #0
004C1Cr 2  95 01            sta $01,x
004C1Er 2               
004C1Er 2               ; <inline>:0:0 in `main`
004C1Er 2               @OPCODE_2489:   ; [c64_ir] PushLiteral(7777)
004C1Er 2  E8               inx
004C1Fr 2  E8               inx
004C20r 2  A9 61            lda #97
004C22r 2  95 00            sta $00,x
004C24r 2  A9 1E            lda #30
004C26r 2  95 01            sta $01,x
004C28r 2               
004C28r 2               ; <inline>:0:0 in `main`
004C28r 2               @OPCODE_2490:   ; [c64_ir] AltPush
004C28r 2  CA               dex
004C29r 2  CA               dex
004C2Ar 2  B5 03            lda $03,x
004C2Cr 2  48               pha
004C2Dr 2  B5 02            lda $02,x
004C2Fr 2  48               pha
004C30r 2               
004C30r 2               ; src/prelude.fth:6:10 in `dup`
004C30r 2               @OPCODE_2491:   ; [c64_ir] TempStore
004C30r 2  CA               dex
004C31r 2  CA               dex
004C32r 2  B5 03            lda $03,x
004C34r 2  85 96            sta TEMP_PAX2
004C36r 2  B5 02            lda $02,x
004C38r 2  85 95            sta TEMP_PAX1
004C3Ar 2               
004C3Ar 2               ; src/prelude.fth:6:16 in `dup`
004C3Ar 2               @OPCODE_2492:   ; [c64_ir] TempLoad
004C3Ar 2  E8               inx
004C3Br 2  E8               inx
004C3Cr 2  A5 95            lda TEMP_PAX1
004C3Er 2  95 00            sta $00,x
004C40r 2  A5 96            lda TEMP_PAX2
004C42r 2  95 01            sta $01,x
004C44r 2               
004C44r 2               ; src/prelude.fth:6:22 in `dup`
004C44r 2               @OPCODE_2493:   ; [c64_ir] TempLoad
004C44r 2  E8               inx
004C45r 2  E8               inx
004C46r 2  A5 95            lda TEMP_PAX1
004C48r 2  95 00            sta $00,x
004C4Ar 2  A5 96            lda TEMP_PAX2
004C4Cr 2  95 01            sta $01,x
004C4Er 2               
004C4Er 2               ; <inline>:0:0 in `main`
004C4Er 2               @OPCODE_2494:   ; [c64_ir] AltPop
004C4Er 2  E8               inx
004C4Fr 2  E8               inx
004C50r 2  68               pla
004C51r 2  95 00            sta $00,x
004C53r 2  68               pla
004C54r 2  95 01            sta $01,x
004C56r 2               
004C56r 2               ; <inline>:0:0 in `main`
004C56r 2               @OPCODE_2495:   ; [c64_ir] Drop
004C56r 2  CA               dex
004C57r 2  CA               dex
004C58r 2               
004C58r 2               ; snake.fth:151:3 in `is-vertical`
004C58r 2               @OPCODE_2496:   ; [c64_ir] PushLiteral(38)
004C58r 2  E8               inx
004C59r 2  E8               inx
004C5Ar 2  A9 26            lda #38
004C5Cr 2  95 00            sta $00,x
004C5Er 2  A9 00            lda #0
004C60r 2  95 01            sta $01,x
004C62r 2               
004C62r 2               ; <inline>:0:0 in `main`
004C62r 2               @OPCODE_2497:   ; [c64_ir] PushLiteral(7777)
004C62r 2  E8               inx
004C63r 2  E8               inx
004C64r 2  A9 61            lda #97
004C66r 2  95 00            sta $00,x
004C68r 2  A9 1E            lda #30
004C6Ar 2  95 01            sta $01,x
004C6Cr 2               
004C6Cr 2               ; <inline>:0:0 in `main`
004C6Cr 2               @OPCODE_2498:   ; [c64_ir] AltPush
004C6Cr 2  CA               dex
004C6Dr 2  CA               dex
004C6Er 2  B5 03            lda $03,x
004C70r 2  48               pha
004C71r 2  B5 02            lda $02,x
004C73r 2  48               pha
004C74r 2               
004C74r 2               ; <inline>:0:0 in `main`
004C74r 2               @OPCODE_2499:   ; [c64_ir] PushLiteral(7777)
004C74r 2  E8               inx
004C75r 2  E8               inx
004C76r 2  A9 61            lda #97
004C78r 2  95 00            sta $00,x
004C7Ar 2  A9 1E            lda #30
004C7Cr 2  95 01            sta $01,x
004C7Er 2               
004C7Er 2               ; <inline>:0:0 in `main`
004C7Er 2               @OPCODE_2500:   ; [c64_ir] AltPush
004C7Er 2  CA               dex
004C7Fr 2  CA               dex
004C80r 2  B5 03            lda $03,x
004C82r 2  48               pha
004C83r 2  B5 02            lda $02,x
004C85r 2  48               pha
004C86r 2               
004C86r 2               ; <inline>:0:0 in `main`
004C86r 2               @OPCODE_2501:   ; [c64_ir] PushLiteral(7777)
004C86r 2  E8               inx
004C87r 2  E8               inx
004C88r 2  A9 61            lda #97
004C8Ar 2  95 00            sta $00,x
004C8Cr 2  A9 1E            lda #30
004C8Er 2  95 01            sta $01,x
004C90r 2               
004C90r 2               ; <inline>:0:0 in `main`
004C90r 2               @OPCODE_2502:   ; [c64_ir] AltPush
004C90r 2  CA               dex
004C91r 2  CA               dex
004C92r 2  B5 03            lda $03,x
004C94r 2  48               pha
004C95r 2  B5 02            lda $02,x
004C97r 2  48               pha
004C98r 2               
004C98r 2               ; <inline>:0:0 in `main`
004C98r 2               @OPCODE_2503:   ; [c64_ir] PushLiteral(7777)
004C98r 2  E8               inx
004C99r 2  E8               inx
004C9Ar 2  A9 61            lda #97
004C9Cr 2  95 00            sta $00,x
004C9Er 2  A9 1E            lda #30
004CA0r 2  95 01            sta $01,x
004CA2r 2               
004CA2r 2               ; <inline>:0:0 in `main`
004CA2r 2               @OPCODE_2504:   ; [c64_ir] AltPush
004CA2r 2  CA               dex
004CA3r 2  CA               dex
004CA4r 2  B5 03            lda $03,x
004CA6r 2  48               pha
004CA7r 2  B5 02            lda $02,x
004CA9r 2  48               pha
004CAAr 2               
004CAAr 2               ; src/prelude.fth:14:12 in `invert`
004CAAr 2               @OPCODE_2505:   ; [c64_ir] PushLiteral(-1)
004CAAr 2  E8               inx
004CABr 2  E8               inx
004CACr 2  A9 FF            lda #255
004CAEr 2  95 00            sta $00,x
004CB0r 2  A9 FF            lda #255
004CB2r 2  95 01            sta $01,x
004CB4r 2               
004CB4r 2               ; src/prelude.fth:14:15 in `invert`
004CB4r 2               @OPCODE_2506:   ; [c64_ir] Nand
004CB4r 2                   ; 26
004CB4r 2  CA               dex
004CB5r 2  CA               dex
004CB6r 2  B5 00            lda $00,x
004CB8r 2  35 02            and $02,x
004CBAr 2  49 FF            eor #$ff
004CBCr 2  95 00            sta $00,x
004CBEr 2  B5 01            lda $01,x
004CC0r 2  35 03            and $03,x
004CC2r 2  49 FF            eor #$ff
004CC4r 2  95 01            sta $01,x
004CC6r 2               
004CC6r 2               ; <inline>:0:0 in `main`
004CC6r 2               @OPCODE_2507:   ; [c64_ir] AltPop
004CC6r 2  E8               inx
004CC7r 2  E8               inx
004CC8r 2  68               pla
004CC9r 2  95 00            sta $00,x
004CCBr 2  68               pla
004CCCr 2  95 01            sta $01,x
004CCEr 2               
004CCEr 2               ; <inline>:0:0 in `main`
004CCEr 2               @OPCODE_2508:   ; [c64_ir] Drop
004CCEr 2  CA               dex
004CCFr 2  CA               dex
004CD0r 2               
004CD0r 2               ; src/prelude.fth:15:19 in `negate`
004CD0r 2               @OPCODE_2509:   ; [c64_ir] PushLiteral(1)
004CD0r 2  E8               inx
004CD1r 2  E8               inx
004CD2r 2  A9 01            lda #1
004CD4r 2  95 00            sta $00,x
004CD6r 2  A9 00            lda #0
004CD8r 2  95 01            sta $01,x
004CDAr 2               
004CDAr 2               ; src/prelude.fth:15:21 in `negate`
004CDAr 2               @OPCODE_2510:   ; [c64_ir] Add
004CDAr 2                   ; 21
004CDAr 2  CA               dex
004CDBr 2  CA               dex
004CDCr 2  18               clc
004CDDr 2  B5 00            lda $00,x
004CDFr 2  75 02            adc $02,x
004CE1r 2  95 00            sta $00,x
004CE3r 2  B5 01            lda $01,x
004CE5r 2  75 03            adc $03,x
004CE7r 2  95 01            sta $01,x
004CE9r 2               
004CE9r 2               ; <inline>:0:0 in `main`
004CE9r 2               @OPCODE_2511:   ; [c64_ir] AltPop
004CE9r 2  E8               inx
004CEAr 2  E8               inx
004CEBr 2  68               pla
004CECr 2  95 00            sta $00,x
004CEEr 2  68               pla
004CEFr 2  95 01            sta $01,x
004CF1r 2               
004CF1r 2               ; <inline>:0:0 in `main`
004CF1r 2               @OPCODE_2512:   ; [c64_ir] Drop
004CF1r 2  CA               dex
004CF2r 2  CA               dex
004CF3r 2               
004CF3r 2               ; src/prelude.fth:16:19 in `-`
004CF3r 2               @OPCODE_2513:   ; [c64_ir] Add
004CF3r 2                   ; 21
004CF3r 2  CA               dex
004CF4r 2  CA               dex
004CF5r 2  18               clc
004CF6r 2  B5 00            lda $00,x
004CF8r 2  75 02            adc $02,x
004CFAr 2  95 00            sta $00,x
004CFCr 2  B5 01            lda $01,x
004CFEr 2  75 03            adc $03,x
004D00r 2  95 01            sta $01,x
004D02r 2               
004D02r 2               ; <inline>:0:0 in `main`
004D02r 2               @OPCODE_2514:   ; [c64_ir] AltPop
004D02r 2  E8               inx
004D03r 2  E8               inx
004D04r 2  68               pla
004D05r 2  95 00            sta $00,x
004D07r 2  68               pla
004D08r 2  95 01            sta $01,x
004D0Ar 2               
004D0Ar 2               ; <inline>:0:0 in `main`
004D0Ar 2               @OPCODE_2515:   ; [c64_ir] Drop
004D0Ar 2  CA               dex
004D0Br 2  CA               dex
004D0Cr 2               
004D0Cr 2               ; <inline>:0:0 in `main`
004D0Cr 2               @OPCODE_2516:   ; [c64_ir] PushLiteral(7777)
004D0Cr 2  E8               inx
004D0Dr 2  E8               inx
004D0Er 2  A9 61            lda #97
004D10r 2  95 00            sta $00,x
004D12r 2  A9 1E            lda #30
004D14r 2  95 01            sta $01,x
004D16r 2               
004D16r 2               ; <inline>:0:0 in `main`
004D16r 2               @OPCODE_2517:   ; [c64_ir] AltPush
004D16r 2  CA               dex
004D17r 2  CA               dex
004D18r 2  B5 03            lda $03,x
004D1Ar 2  48               pha
004D1Br 2  B5 02            lda $02,x
004D1Dr 2  48               pha
004D1Er 2               
004D1Er 2               ; src/prelude.fth:21:8 in `0=`
004D1Er 2               @OPCODE_2518:   ; [c64_ir] JumpIf0(102)
004D1Er 2  CA               dex
004D1Fr 2  CA               dex
004D20r 2  B5 02            lda $02,x
004D22r 2  15 03            ora $03,x
004D24r 2  D0 03            bne *+5
004D26r 2  4C rr rr         jmp @target_102
004D29r 2               
004D29r 2               @target_101:
004D29r 2               
004D29r 2               ; src/prelude.fth:21:11 in `0=`
004D29r 2               @OPCODE_2520:   ; [c64_ir] PushLiteral(0)
004D29r 2  E8               inx
004D2Ar 2  E8               inx
004D2Br 2  A9 00            lda #0
004D2Dr 2  95 00            sta $00,x
004D2Fr 2  A9 00            lda #0
004D31r 2  95 01            sta $01,x
004D33r 2               
004D33r 2               ; src/prelude.fth:21:13 in `0=`
004D33r 2               @OPCODE_2521:   ; [c64_ir] JumpElse(103)
004D33r 2  4C rr rr         jmp @target_103
004D36r 2               
004D36r 2               @target_102:
004D36r 2               
004D36r 2               ; src/prelude.fth:21:18 in `0=`
004D36r 2               @OPCODE_2523:   ; [c64_ir] PushLiteral(-1)
004D36r 2  E8               inx
004D37r 2  E8               inx
004D38r 2  A9 FF            lda #255
004D3Ar 2  95 00            sta $00,x
004D3Cr 2  A9 FF            lda #255
004D3Er 2  95 01            sta $01,x
004D40r 2               
004D40r 2               ; src/prelude.fth:21:21 in `0=`
004D40r 2               @OPCODE_2524:   ; [c64_ir] JumpTarget(102)
004D40r 2               
004D40r 2               @target_103:
004D40r 2               
004D40r 2               ; <inline>:0:0 in `main`
004D40r 2               @OPCODE_2526:   ; [c64_ir] AltPop
004D40r 2  E8               inx
004D41r 2  E8               inx
004D42r 2  68               pla
004D43r 2  95 00            sta $00,x
004D45r 2  68               pla
004D46r 2  95 01            sta $01,x
004D48r 2               
004D48r 2               ; <inline>:0:0 in `main`
004D48r 2               @OPCODE_2527:   ; [c64_ir] Drop
004D48r 2  CA               dex
004D49r 2  CA               dex
004D4Ar 2               
004D4Ar 2               ; <inline>:0:0 in `main`
004D4Ar 2               @OPCODE_2528:   ; [c64_ir] AltPop
004D4Ar 2  E8               inx
004D4Br 2  E8               inx
004D4Cr 2  68               pla
004D4Dr 2  95 00            sta $00,x
004D4Fr 2  68               pla
004D50r 2  95 01            sta $01,x
004D52r 2               
004D52r 2               ; <inline>:0:0 in `main`
004D52r 2               @OPCODE_2529:   ; [c64_ir] Drop
004D52r 2  CA               dex
004D53r 2  CA               dex
004D54r 2               
004D54r 2               ; <inline>:0:0 in `main`
004D54r 2               @OPCODE_2530:   ; [c64_ir] PushLiteral(7777)
004D54r 2  E8               inx
004D55r 2  E8               inx
004D56r 2  A9 61            lda #97
004D58r 2  95 00            sta $00,x
004D5Ar 2  A9 1E            lda #30
004D5Cr 2  95 01            sta $01,x
004D5Er 2               
004D5Er 2               ; <inline>:0:0 in `main`
004D5Er 2               @OPCODE_2531:   ; [c64_ir] AltPush
004D5Er 2  CA               dex
004D5Fr 2  CA               dex
004D60r 2  B5 03            lda $03,x
004D62r 2  48               pha
004D63r 2  B5 02            lda $02,x
004D65r 2  48               pha
004D66r 2               
004D66r 2               ; src/prelude.fth:3:10 in `swap`
004D66r 2               @OPCODE_2532:   ; [c64_ir] AltPush
004D66r 2  CA               dex
004D67r 2  CA               dex
004D68r 2  B5 03            lda $03,x
004D6Ar 2  48               pha
004D6Br 2  B5 02            lda $02,x
004D6Dr 2  48               pha
004D6Er 2               
004D6Er 2               ; src/prelude.fth:3:13 in `swap`
004D6Er 2               @OPCODE_2533:   ; [c64_ir] TempStore
004D6Er 2  CA               dex
004D6Fr 2  CA               dex
004D70r 2  B5 03            lda $03,x
004D72r 2  85 96            sta TEMP_PAX2
004D74r 2  B5 02            lda $02,x
004D76r 2  85 95            sta TEMP_PAX1
004D78r 2               
004D78r 2               ; src/prelude.fth:3:19 in `swap`
004D78r 2               @OPCODE_2534:   ; [c64_ir] AltPop
004D78r 2  E8               inx
004D79r 2  E8               inx
004D7Ar 2  68               pla
004D7Br 2  95 00            sta $00,x
004D7Dr 2  68               pla
004D7Er 2  95 01            sta $01,x
004D80r 2               
004D80r 2               ; src/prelude.fth:3:22 in `swap`
004D80r 2               @OPCODE_2535:   ; [c64_ir] TempLoad
004D80r 2  E8               inx
004D81r 2  E8               inx
004D82r 2  A5 95            lda TEMP_PAX1
004D84r 2  95 00            sta $00,x
004D86r 2  A5 96            lda TEMP_PAX2
004D88r 2  95 01            sta $01,x
004D8Ar 2               
004D8Ar 2               ; <inline>:0:0 in `main`
004D8Ar 2               @OPCODE_2536:   ; [c64_ir] AltPop
004D8Ar 2  E8               inx
004D8Br 2  E8               inx
004D8Cr 2  68               pla
004D8Dr 2  95 00            sta $00,x
004D8Fr 2  68               pla
004D90r 2  95 01            sta $01,x
004D92r 2               
004D92r 2               ; <inline>:0:0 in `main`
004D92r 2               @OPCODE_2537:   ; [c64_ir] Drop
004D92r 2  CA               dex
004D93r 2  CA               dex
004D94r 2               
004D94r 2               ; snake.fth:152:3 in `is-vertical`
004D94r 2               @OPCODE_2538:   ; [c64_ir] PushLiteral(40)
004D94r 2  E8               inx
004D95r 2  E8               inx
004D96r 2  A9 28            lda #40
004D98r 2  95 00            sta $00,x
004D9Ar 2  A9 00            lda #0
004D9Cr 2  95 01            sta $01,x
004D9Er 2               
004D9Er 2               ; <inline>:0:0 in `main`
004D9Er 2               @OPCODE_2539:   ; [c64_ir] PushLiteral(7777)
004D9Er 2  E8               inx
004D9Fr 2  E8               inx
004DA0r 2  A9 61            lda #97
004DA2r 2  95 00            sta $00,x
004DA4r 2  A9 1E            lda #30
004DA6r 2  95 01            sta $01,x
004DA8r 2               
004DA8r 2               ; <inline>:0:0 in `main`
004DA8r 2               @OPCODE_2540:   ; [c64_ir] AltPush
004DA8r 2  CA               dex
004DA9r 2  CA               dex
004DAAr 2  B5 03            lda $03,x
004DACr 2  48               pha
004DADr 2  B5 02            lda $02,x
004DAFr 2  48               pha
004DB0r 2               
004DB0r 2               ; <inline>:0:0 in `main`
004DB0r 2               @OPCODE_2541:   ; [c64_ir] PushLiteral(7777)
004DB0r 2  E8               inx
004DB1r 2  E8               inx
004DB2r 2  A9 61            lda #97
004DB4r 2  95 00            sta $00,x
004DB6r 2  A9 1E            lda #30
004DB8r 2  95 01            sta $01,x
004DBAr 2               
004DBAr 2               ; <inline>:0:0 in `main`
004DBAr 2               @OPCODE_2542:   ; [c64_ir] AltPush
004DBAr 2  CA               dex
004DBBr 2  CA               dex
004DBCr 2  B5 03            lda $03,x
004DBEr 2  48               pha
004DBFr 2  B5 02            lda $02,x
004DC1r 2  48               pha
004DC2r 2               
004DC2r 2               ; <inline>:0:0 in `main`
004DC2r 2               @OPCODE_2543:   ; [c64_ir] PushLiteral(7777)
004DC2r 2  E8               inx
004DC3r 2  E8               inx
004DC4r 2  A9 61            lda #97
004DC6r 2  95 00            sta $00,x
004DC8r 2  A9 1E            lda #30
004DCAr 2  95 01            sta $01,x
004DCCr 2               
004DCCr 2               ; <inline>:0:0 in `main`
004DCCr 2               @OPCODE_2544:   ; [c64_ir] AltPush
004DCCr 2  CA               dex
004DCDr 2  CA               dex
004DCEr 2  B5 03            lda $03,x
004DD0r 2  48               pha
004DD1r 2  B5 02            lda $02,x
004DD3r 2  48               pha
004DD4r 2               
004DD4r 2               ; <inline>:0:0 in `main`
004DD4r 2               @OPCODE_2545:   ; [c64_ir] PushLiteral(7777)
004DD4r 2  E8               inx
004DD5r 2  E8               inx
004DD6r 2  A9 61            lda #97
004DD8r 2  95 00            sta $00,x
004DDAr 2  A9 1E            lda #30
004DDCr 2  95 01            sta $01,x
004DDEr 2               
004DDEr 2               ; <inline>:0:0 in `main`
004DDEr 2               @OPCODE_2546:   ; [c64_ir] AltPush
004DDEr 2  CA               dex
004DDFr 2  CA               dex
004DE0r 2  B5 03            lda $03,x
004DE2r 2  48               pha
004DE3r 2  B5 02            lda $02,x
004DE5r 2  48               pha
004DE6r 2               
004DE6r 2               ; src/prelude.fth:14:12 in `invert`
004DE6r 2               @OPCODE_2547:   ; [c64_ir] PushLiteral(-1)
004DE6r 2  E8               inx
004DE7r 2  E8               inx
004DE8r 2  A9 FF            lda #255
004DEAr 2  95 00            sta $00,x
004DECr 2  A9 FF            lda #255
004DEEr 2  95 01            sta $01,x
004DF0r 2               
004DF0r 2               ; src/prelude.fth:14:15 in `invert`
004DF0r 2               @OPCODE_2548:   ; [c64_ir] Nand
004DF0r 2                   ; 26
004DF0r 2  CA               dex
004DF1r 2  CA               dex
004DF2r 2  B5 00            lda $00,x
004DF4r 2  35 02            and $02,x
004DF6r 2  49 FF            eor #$ff
004DF8r 2  95 00            sta $00,x
004DFAr 2  B5 01            lda $01,x
004DFCr 2  35 03            and $03,x
004DFEr 2  49 FF            eor #$ff
004E00r 2  95 01            sta $01,x
004E02r 2               
004E02r 2               ; <inline>:0:0 in `main`
004E02r 2               @OPCODE_2549:   ; [c64_ir] AltPop
004E02r 2  E8               inx
004E03r 2  E8               inx
004E04r 2  68               pla
004E05r 2  95 00            sta $00,x
004E07r 2  68               pla
004E08r 2  95 01            sta $01,x
004E0Ar 2               
004E0Ar 2               ; <inline>:0:0 in `main`
004E0Ar 2               @OPCODE_2550:   ; [c64_ir] Drop
004E0Ar 2  CA               dex
004E0Br 2  CA               dex
004E0Cr 2               
004E0Cr 2               ; src/prelude.fth:15:19 in `negate`
004E0Cr 2               @OPCODE_2551:   ; [c64_ir] PushLiteral(1)
004E0Cr 2  E8               inx
004E0Dr 2  E8               inx
004E0Er 2  A9 01            lda #1
004E10r 2  95 00            sta $00,x
004E12r 2  A9 00            lda #0
004E14r 2  95 01            sta $01,x
004E16r 2               
004E16r 2               ; src/prelude.fth:15:21 in `negate`
004E16r 2               @OPCODE_2552:   ; [c64_ir] Add
004E16r 2                   ; 21
004E16r 2  CA               dex
004E17r 2  CA               dex
004E18r 2  18               clc
004E19r 2  B5 00            lda $00,x
004E1Br 2  75 02            adc $02,x
004E1Dr 2  95 00            sta $00,x
004E1Fr 2  B5 01            lda $01,x
004E21r 2  75 03            adc $03,x
004E23r 2  95 01            sta $01,x
004E25r 2               
004E25r 2               ; <inline>:0:0 in `main`
004E25r 2               @OPCODE_2553:   ; [c64_ir] AltPop
004E25r 2  E8               inx
004E26r 2  E8               inx
004E27r 2  68               pla
004E28r 2  95 00            sta $00,x
004E2Ar 2  68               pla
004E2Br 2  95 01            sta $01,x
004E2Dr 2               
004E2Dr 2               ; <inline>:0:0 in `main`
004E2Dr 2               @OPCODE_2554:   ; [c64_ir] Drop
004E2Dr 2  CA               dex
004E2Er 2  CA               dex
004E2Fr 2               
004E2Fr 2               ; src/prelude.fth:16:19 in `-`
004E2Fr 2               @OPCODE_2555:   ; [c64_ir] Add
004E2Fr 2                   ; 21
004E2Fr 2  CA               dex
004E30r 2  CA               dex
004E31r 2  18               clc
004E32r 2  B5 00            lda $00,x
004E34r 2  75 02            adc $02,x
004E36r 2  95 00            sta $00,x
004E38r 2  B5 01            lda $01,x
004E3Ar 2  75 03            adc $03,x
004E3Cr 2  95 01            sta $01,x
004E3Er 2               
004E3Er 2               ; <inline>:0:0 in `main`
004E3Er 2               @OPCODE_2556:   ; [c64_ir] AltPop
004E3Er 2  E8               inx
004E3Fr 2  E8               inx
004E40r 2  68               pla
004E41r 2  95 00            sta $00,x
004E43r 2  68               pla
004E44r 2  95 01            sta $01,x
004E46r 2               
004E46r 2               ; <inline>:0:0 in `main`
004E46r 2               @OPCODE_2557:   ; [c64_ir] Drop
004E46r 2  CA               dex
004E47r 2  CA               dex
004E48r 2               
004E48r 2               ; <inline>:0:0 in `main`
004E48r 2               @OPCODE_2558:   ; [c64_ir] PushLiteral(7777)
004E48r 2  E8               inx
004E49r 2  E8               inx
004E4Ar 2  A9 61            lda #97
004E4Cr 2  95 00            sta $00,x
004E4Er 2  A9 1E            lda #30
004E50r 2  95 01            sta $01,x
004E52r 2               
004E52r 2               ; <inline>:0:0 in `main`
004E52r 2               @OPCODE_2559:   ; [c64_ir] AltPush
004E52r 2  CA               dex
004E53r 2  CA               dex
004E54r 2  B5 03            lda $03,x
004E56r 2  48               pha
004E57r 2  B5 02            lda $02,x
004E59r 2  48               pha
004E5Ar 2               
004E5Ar 2               ; src/prelude.fth:21:8 in `0=`
004E5Ar 2               @OPCODE_2560:   ; [c64_ir] JumpIf0(105)
004E5Ar 2  CA               dex
004E5Br 2  CA               dex
004E5Cr 2  B5 02            lda $02,x
004E5Er 2  15 03            ora $03,x
004E60r 2  D0 03            bne *+5
004E62r 2  4C rr rr         jmp @target_105
004E65r 2               
004E65r 2               @target_104:
004E65r 2               
004E65r 2               ; src/prelude.fth:21:11 in `0=`
004E65r 2               @OPCODE_2562:   ; [c64_ir] PushLiteral(0)
004E65r 2  E8               inx
004E66r 2  E8               inx
004E67r 2  A9 00            lda #0
004E69r 2  95 00            sta $00,x
004E6Br 2  A9 00            lda #0
004E6Dr 2  95 01            sta $01,x
004E6Fr 2               
004E6Fr 2               ; src/prelude.fth:21:13 in `0=`
004E6Fr 2               @OPCODE_2563:   ; [c64_ir] JumpElse(106)
004E6Fr 2  4C rr rr         jmp @target_106
004E72r 2               
004E72r 2               @target_105:
004E72r 2               
004E72r 2               ; src/prelude.fth:21:18 in `0=`
004E72r 2               @OPCODE_2565:   ; [c64_ir] PushLiteral(-1)
004E72r 2  E8               inx
004E73r 2  E8               inx
004E74r 2  A9 FF            lda #255
004E76r 2  95 00            sta $00,x
004E78r 2  A9 FF            lda #255
004E7Ar 2  95 01            sta $01,x
004E7Cr 2               
004E7Cr 2               ; src/prelude.fth:21:21 in `0=`
004E7Cr 2               @OPCODE_2566:   ; [c64_ir] JumpTarget(105)
004E7Cr 2               
004E7Cr 2               @target_106:
004E7Cr 2               
004E7Cr 2               ; <inline>:0:0 in `main`
004E7Cr 2               @OPCODE_2568:   ; [c64_ir] AltPop
004E7Cr 2  E8               inx
004E7Dr 2  E8               inx
004E7Er 2  68               pla
004E7Fr 2  95 00            sta $00,x
004E81r 2  68               pla
004E82r 2  95 01            sta $01,x
004E84r 2               
004E84r 2               ; <inline>:0:0 in `main`
004E84r 2               @OPCODE_2569:   ; [c64_ir] Drop
004E84r 2  CA               dex
004E85r 2  CA               dex
004E86r 2               
004E86r 2               ; <inline>:0:0 in `main`
004E86r 2               @OPCODE_2570:   ; [c64_ir] AltPop
004E86r 2  E8               inx
004E87r 2  E8               inx
004E88r 2  68               pla
004E89r 2  95 00            sta $00,x
004E8Br 2  68               pla
004E8Cr 2  95 01            sta $01,x
004E8Er 2               
004E8Er 2               ; <inline>:0:0 in `main`
004E8Er 2               @OPCODE_2571:   ; [c64_ir] Drop
004E8Er 2  CA               dex
004E8Fr 2  CA               dex
004E90r 2               
004E90r 2               ; <inline>:0:0 in `main`
004E90r 2               @OPCODE_2572:   ; [c64_ir] PushLiteral(7777)
004E90r 2  E8               inx
004E91r 2  E8               inx
004E92r 2  A9 61            lda #97
004E94r 2  95 00            sta $00,x
004E96r 2  A9 1E            lda #30
004E98r 2  95 01            sta $01,x
004E9Ar 2               
004E9Ar 2               ; <inline>:0:0 in `main`
004E9Ar 2               @OPCODE_2573:   ; [c64_ir] AltPush
004E9Ar 2  CA               dex
004E9Br 2  CA               dex
004E9Cr 2  B5 03            lda $03,x
004E9Er 2  48               pha
004E9Fr 2  B5 02            lda $02,x
004EA1r 2  48               pha
004EA2r 2               
004EA2r 2               ; <inline>:0:0 in `main`
004EA2r 2               @OPCODE_2574:   ; [c64_ir] PushLiteral(7777)
004EA2r 2  E8               inx
004EA3r 2  E8               inx
004EA4r 2  A9 61            lda #97
004EA6r 2  95 00            sta $00,x
004EA8r 2  A9 1E            lda #30
004EAAr 2  95 01            sta $01,x
004EACr 2               
004EACr 2               ; <inline>:0:0 in `main`
004EACr 2               @OPCODE_2575:   ; [c64_ir] AltPush
004EACr 2  CA               dex
004EADr 2  CA               dex
004EAEr 2  B5 03            lda $03,x
004EB0r 2  48               pha
004EB1r 2  B5 02            lda $02,x
004EB3r 2  48               pha
004EB4r 2               
004EB4r 2               ; src/prelude.fth:14:12 in `invert`
004EB4r 2               @OPCODE_2576:   ; [c64_ir] PushLiteral(-1)
004EB4r 2  E8               inx
004EB5r 2  E8               inx
004EB6r 2  A9 FF            lda #255
004EB8r 2  95 00            sta $00,x
004EBAr 2  A9 FF            lda #255
004EBCr 2  95 01            sta $01,x
004EBEr 2               
004EBEr 2               ; src/prelude.fth:14:15 in `invert`
004EBEr 2               @OPCODE_2577:   ; [c64_ir] Nand
004EBEr 2                   ; 26
004EBEr 2  CA               dex
004EBFr 2  CA               dex
004EC0r 2  B5 00            lda $00,x
004EC2r 2  35 02            and $02,x
004EC4r 2  49 FF            eor #$ff
004EC6r 2  95 00            sta $00,x
004EC8r 2  B5 01            lda $01,x
004ECAr 2  35 03            and $03,x
004ECCr 2  49 FF            eor #$ff
004ECEr 2  95 01            sta $01,x
004ED0r 2               
004ED0r 2               ; <inline>:0:0 in `main`
004ED0r 2               @OPCODE_2578:   ; [c64_ir] AltPop
004ED0r 2  E8               inx
004ED1r 2  E8               inx
004ED2r 2  68               pla
004ED3r 2  95 00            sta $00,x
004ED5r 2  68               pla
004ED6r 2  95 01            sta $01,x
004ED8r 2               
004ED8r 2               ; <inline>:0:0 in `main`
004ED8r 2               @OPCODE_2579:   ; [c64_ir] Drop
004ED8r 2  CA               dex
004ED9r 2  CA               dex
004EDAr 2               
004EDAr 2               ; <inline>:0:0 in `main`
004EDAr 2               @OPCODE_2580:   ; [c64_ir] PushLiteral(7777)
004EDAr 2  E8               inx
004EDBr 2  E8               inx
004EDCr 2  A9 61            lda #97
004EDEr 2  95 00            sta $00,x
004EE0r 2  A9 1E            lda #30
004EE2r 2  95 01            sta $01,x
004EE4r 2               
004EE4r 2               ; <inline>:0:0 in `main`
004EE4r 2               @OPCODE_2581:   ; [c64_ir] AltPush
004EE4r 2  CA               dex
004EE5r 2  CA               dex
004EE6r 2  B5 03            lda $03,x
004EE8r 2  48               pha
004EE9r 2  B5 02            lda $02,x
004EEBr 2  48               pha
004EECr 2               
004EECr 2               ; src/prelude.fth:3:10 in `swap`
004EECr 2               @OPCODE_2582:   ; [c64_ir] AltPush
004EECr 2  CA               dex
004EEDr 2  CA               dex
004EEEr 2  B5 03            lda $03,x
004EF0r 2  48               pha
004EF1r 2  B5 02            lda $02,x
004EF3r 2  48               pha
004EF4r 2               
004EF4r 2               ; src/prelude.fth:3:13 in `swap`
004EF4r 2               @OPCODE_2583:   ; [c64_ir] TempStore
004EF4r 2  CA               dex
004EF5r 2  CA               dex
004EF6r 2  B5 03            lda $03,x
004EF8r 2  85 96            sta TEMP_PAX2
004EFAr 2  B5 02            lda $02,x
004EFCr 2  85 95            sta TEMP_PAX1
004EFEr 2               
004EFEr 2               ; src/prelude.fth:3:19 in `swap`
004EFEr 2               @OPCODE_2584:   ; [c64_ir] AltPop
004EFEr 2  E8               inx
004EFFr 2  E8               inx
004F00r 2  68               pla
004F01r 2  95 00            sta $00,x
004F03r 2  68               pla
004F04r 2  95 01            sta $01,x
004F06r 2               
004F06r 2               ; src/prelude.fth:3:22 in `swap`
004F06r 2               @OPCODE_2585:   ; [c64_ir] TempLoad
004F06r 2  E8               inx
004F07r 2  E8               inx
004F08r 2  A5 95            lda TEMP_PAX1
004F0Ar 2  95 00            sta $00,x
004F0Cr 2  A5 96            lda TEMP_PAX2
004F0Er 2  95 01            sta $01,x
004F10r 2               
004F10r 2               ; <inline>:0:0 in `main`
004F10r 2               @OPCODE_2586:   ; [c64_ir] AltPop
004F10r 2  E8               inx
004F11r 2  E8               inx
004F12r 2  68               pla
004F13r 2  95 00            sta $00,x
004F15r 2  68               pla
004F16r 2  95 01            sta $01,x
004F18r 2               
004F18r 2               ; <inline>:0:0 in `main`
004F18r 2               @OPCODE_2587:   ; [c64_ir] Drop
004F18r 2  CA               dex
004F19r 2  CA               dex
004F1Ar 2               
004F1Ar 2               ; <inline>:0:0 in `main`
004F1Ar 2               @OPCODE_2588:   ; [c64_ir] PushLiteral(7777)
004F1Ar 2  E8               inx
004F1Br 2  E8               inx
004F1Cr 2  A9 61            lda #97
004F1Er 2  95 00            sta $00,x
004F20r 2  A9 1E            lda #30
004F22r 2  95 01            sta $01,x
004F24r 2               
004F24r 2               ; <inline>:0:0 in `main`
004F24r 2               @OPCODE_2589:   ; [c64_ir] AltPush
004F24r 2  CA               dex
004F25r 2  CA               dex
004F26r 2  B5 03            lda $03,x
004F28r 2  48               pha
004F29r 2  B5 02            lda $02,x
004F2Br 2  48               pha
004F2Cr 2               
004F2Cr 2               ; src/prelude.fth:14:12 in `invert`
004F2Cr 2               @OPCODE_2590:   ; [c64_ir] PushLiteral(-1)
004F2Cr 2  E8               inx
004F2Dr 2  E8               inx
004F2Er 2  A9 FF            lda #255
004F30r 2  95 00            sta $00,x
004F32r 2  A9 FF            lda #255
004F34r 2  95 01            sta $01,x
004F36r 2               
004F36r 2               ; src/prelude.fth:14:15 in `invert`
004F36r 2               @OPCODE_2591:   ; [c64_ir] Nand
004F36r 2                   ; 26
004F36r 2  CA               dex
004F37r 2  CA               dex
004F38r 2  B5 00            lda $00,x
004F3Ar 2  35 02            and $02,x
004F3Cr 2  49 FF            eor #$ff
004F3Er 2  95 00            sta $00,x
004F40r 2  B5 01            lda $01,x
004F42r 2  35 03            and $03,x
004F44r 2  49 FF            eor #$ff
004F46r 2  95 01            sta $01,x
004F48r 2               
004F48r 2               ; <inline>:0:0 in `main`
004F48r 2               @OPCODE_2592:   ; [c64_ir] AltPop
004F48r 2  E8               inx
004F49r 2  E8               inx
004F4Ar 2  68               pla
004F4Br 2  95 00            sta $00,x
004F4Dr 2  68               pla
004F4Er 2  95 01            sta $01,x
004F50r 2               
004F50r 2               ; <inline>:0:0 in `main`
004F50r 2               @OPCODE_2593:   ; [c64_ir] Drop
004F50r 2  CA               dex
004F51r 2  CA               dex
004F52r 2               
004F52r 2               ; src/prelude.fth:26:27 in `or`
004F52r 2               @OPCODE_2594:   ; [c64_ir] Nand
004F52r 2                   ; 26
004F52r 2  CA               dex
004F53r 2  CA               dex
004F54r 2  B5 00            lda $00,x
004F56r 2  35 02            and $02,x
004F58r 2  49 FF            eor #$ff
004F5Ar 2  95 00            sta $00,x
004F5Cr 2  B5 01            lda $01,x
004F5Er 2  35 03            and $03,x
004F60r 2  49 FF            eor #$ff
004F62r 2  95 01            sta $01,x
004F64r 2               
004F64r 2               ; <inline>:0:0 in `main`
004F64r 2               @OPCODE_2595:   ; [c64_ir] AltPop
004F64r 2  E8               inx
004F65r 2  E8               inx
004F66r 2  68               pla
004F67r 2  95 00            sta $00,x
004F69r 2  68               pla
004F6Ar 2  95 01            sta $01,x
004F6Cr 2               
004F6Cr 2               ; <inline>:0:0 in `main`
004F6Cr 2               @OPCODE_2596:   ; [c64_ir] Drop
004F6Cr 2  CA               dex
004F6Dr 2  CA               dex
004F6Er 2               
004F6Er 2               ; <inline>:0:0 in `main`
004F6Er 2               @OPCODE_2597:   ; [c64_ir] AltPop
004F6Er 2  E8               inx
004F6Fr 2  E8               inx
004F70r 2  68               pla
004F71r 2  95 00            sta $00,x
004F73r 2  68               pla
004F74r 2  95 01            sta $01,x
004F76r 2               
004F76r 2               ; <inline>:0:0 in `main`
004F76r 2               @OPCODE_2598:   ; [c64_ir] Drop
004F76r 2  CA               dex
004F77r 2  CA               dex
004F78r 2               
004F78r 2               ; snake.fth:157:27 in `turn-right`
004F78r 2               @OPCODE_2599:   ; [c64_ir] JumpIf0(108)
004F78r 2  CA               dex
004F79r 2  CA               dex
004F7Ar 2  B5 02            lda $02,x
004F7Cr 2  15 03            ora $03,x
004F7Er 2  D0 03            bne *+5
004F80r 2  4C rr rr         jmp @target_108
004F83r 2               
004F83r 2               @target_107:
004F83r 2               
004F83r 2               ; snake.fth:157:30 in `turn-right`
004F83r 2               @OPCODE_2601:   ; [c64_ir] PushLiteral(39)
004F83r 2  E8               inx
004F84r 2  E8               inx
004F85r 2  A9 27            lda #39
004F87r 2  95 00            sta $00,x
004F89r 2  A9 00            lda #0
004F8Br 2  95 01            sta $01,x
004F8Dr 2               
004F8Dr 2               ; snake.fth:157:36 in `turn-right`
004F8Dr 2               @OPCODE_2602:   ; [c64_ir] PushLiteral(-26660)
004F8Dr 2  E8               inx
004F8Er 2  E8               inx
004F8Fr 2  A9 DC            lda #220
004F91r 2  95 00            sta $00,x
004F93r 2  A9 97            lda #151
004F95r 2  95 01            sta $01,x
004F97r 2               
004F97r 2               ; snake.fth:157:46 in `turn-right`
004F97r 2               @OPCODE_2603:   ; [c64_ir] Store
004F97r 2  CA               dex
004F98r 2  CA               dex
004F99r 2  CA               dex
004F9Ar 2  CA               dex
004F9Br 2  B5 02            lda $02,x
004F9Dr 2  81 04            sta ($04,x)
004F9Fr 2                   ; TODO high byte
004F9Fr 2               
004F9Fr 2               ; snake.fth:157:48 in `turn-right`
004F9Fr 2               @OPCODE_2604:   ; [c64_ir] JumpTarget(107)
004F9Fr 2               
004F9Fr 2               @target_108:
004F9Fr 2               
004F9Fr 2               ; <inline>:0:0 in `main`
004F9Fr 2               @OPCODE_2606:   ; [c64_ir] AltPop
004F9Fr 2  E8               inx
004FA0r 2  E8               inx
004FA1r 2  68               pla
004FA2r 2  95 00            sta $00,x
004FA4r 2  68               pla
004FA5r 2  95 01            sta $01,x
004FA7r 2               
004FA7r 2               ; <inline>:0:0 in `main`
004FA7r 2               @OPCODE_2607:   ; [c64_ir] Drop
004FA7r 2  CA               dex
004FA8r 2  CA               dex
004FA9r 2               
004FA9r 2               ; snake.fth:162:30 in `change-direction`
004FA9r 2               @OPCODE_2608:   ; [c64_ir] JumpElse(123)
004FA9r 2  4C rr rr         jmp @target_123
004FACr 2               
004FACr 2               @target_109:
004FACr 2               
004FACr 2               ; snake.fth:163:3 in `change-direction`
004FACr 2               @OPCODE_2610:   ; [c64_ir] PushLiteral(40)
004FACr 2  E8               inx
004FADr 2  E8               inx
004FAEr 2  A9 28            lda #40
004FB0r 2  95 00            sta $00,x
004FB2r 2  A9 00            lda #0
004FB4r 2  95 01            sta $01,x
004FB6r 2               
004FB6r 2               ; <inline>:0:0 in `main`
004FB6r 2               @OPCODE_2611:   ; [c64_ir] PushLiteral(7777)
004FB6r 2  E8               inx
004FB7r 2  E8               inx
004FB8r 2  A9 61            lda #97
004FBAr 2  95 00            sta $00,x
004FBCr 2  A9 1E            lda #30
004FBEr 2  95 01            sta $01,x
004FC0r 2               
004FC0r 2               ; <inline>:0:0 in `main`
004FC0r 2               @OPCODE_2612:   ; [c64_ir] AltPush
004FC0r 2  CA               dex
004FC1r 2  CA               dex
004FC2r 2  B5 03            lda $03,x
004FC4r 2  48               pha
004FC5r 2  B5 02            lda $02,x
004FC7r 2  48               pha
004FC8r 2               
004FC8r 2               ; src/prelude.fth:4:10 in `over`
004FC8r 2               @OPCODE_2613:   ; [c64_ir] AltPush
004FC8r 2  CA               dex
004FC9r 2  CA               dex
004FCAr 2  B5 03            lda $03,x
004FCCr 2  48               pha
004FCDr 2  B5 02            lda $02,x
004FCFr 2  48               pha
004FD0r 2               
004FD0r 2               ; src/prelude.fth:4:13 in `over`
004FD0r 2               @OPCODE_2614:   ; [c64_ir] TempStore
004FD0r 2  CA               dex
004FD1r 2  CA               dex
004FD2r 2  B5 03            lda $03,x
004FD4r 2  85 96            sta TEMP_PAX2
004FD6r 2  B5 02            lda $02,x
004FD8r 2  85 95            sta TEMP_PAX1
004FDAr 2               
004FDAr 2               ; src/prelude.fth:4:19 in `over`
004FDAr 2               @OPCODE_2615:   ; [c64_ir] TempLoad
004FDAr 2  E8               inx
004FDBr 2  E8               inx
004FDCr 2  A5 95            lda TEMP_PAX1
004FDEr 2  95 00            sta $00,x
004FE0r 2  A5 96            lda TEMP_PAX2
004FE2r 2  95 01            sta $01,x
004FE4r 2               
004FE4r 2               ; src/prelude.fth:4:25 in `over`
004FE4r 2               @OPCODE_2616:   ; [c64_ir] AltPop
004FE4r 2  E8               inx
004FE5r 2  E8               inx
004FE6r 2  68               pla
004FE7r 2  95 00            sta $00,x
004FE9r 2  68               pla
004FEAr 2  95 01            sta $01,x
004FECr 2               
004FECr 2               ; src/prelude.fth:4:28 in `over`
004FECr 2               @OPCODE_2617:   ; [c64_ir] TempLoad
004FECr 2  E8               inx
004FEDr 2  E8               inx
004FEEr 2  A5 95            lda TEMP_PAX1
004FF0r 2  95 00            sta $00,x
004FF2r 2  A5 96            lda TEMP_PAX2
004FF4r 2  95 01            sta $01,x
004FF6r 2               
004FF6r 2               ; <inline>:0:0 in `main`
004FF6r 2               @OPCODE_2618:   ; [c64_ir] AltPop
004FF6r 2  E8               inx
004FF7r 2  E8               inx
004FF8r 2  68               pla
004FF9r 2  95 00            sta $00,x
004FFBr 2  68               pla
004FFCr 2  95 01            sta $01,x
004FFEr 2               
004FFEr 2               ; <inline>:0:0 in `main`
004FFEr 2               @OPCODE_2619:   ; [c64_ir] Drop
004FFEr 2  CA               dex
004FFFr 2  CA               dex
005000r 2               
005000r 2               ; <inline>:0:0 in `main`
005000r 2               @OPCODE_2620:   ; [c64_ir] PushLiteral(7777)
005000r 2  E8               inx
005001r 2  E8               inx
005002r 2  A9 61            lda #97
005004r 2  95 00            sta $00,x
005006r 2  A9 1E            lda #30
005008r 2  95 01            sta $01,x
00500Ar 2               
00500Ar 2               ; <inline>:0:0 in `main`
00500Ar 2               @OPCODE_2621:   ; [c64_ir] AltPush
00500Ar 2  CA               dex
00500Br 2  CA               dex
00500Cr 2  B5 03            lda $03,x
00500Er 2  48               pha
00500Fr 2  B5 02            lda $02,x
005011r 2  48               pha
005012r 2               
005012r 2               ; <inline>:0:0 in `main`
005012r 2               @OPCODE_2622:   ; [c64_ir] PushLiteral(7777)
005012r 2  E8               inx
005013r 2  E8               inx
005014r 2  A9 61            lda #97
005016r 2  95 00            sta $00,x
005018r 2  A9 1E            lda #30
00501Ar 2  95 01            sta $01,x
00501Cr 2               
00501Cr 2               ; <inline>:0:0 in `main`
00501Cr 2               @OPCODE_2623:   ; [c64_ir] AltPush
00501Cr 2  CA               dex
00501Dr 2  CA               dex
00501Er 2  B5 03            lda $03,x
005020r 2  48               pha
005021r 2  B5 02            lda $02,x
005023r 2  48               pha
005024r 2               
005024r 2               ; <inline>:0:0 in `main`
005024r 2               @OPCODE_2624:   ; [c64_ir] PushLiteral(7777)
005024r 2  E8               inx
005025r 2  E8               inx
005026r 2  A9 61            lda #97
005028r 2  95 00            sta $00,x
00502Ar 2  A9 1E            lda #30
00502Cr 2  95 01            sta $01,x
00502Er 2               
00502Er 2               ; <inline>:0:0 in `main`
00502Er 2               @OPCODE_2625:   ; [c64_ir] AltPush
00502Er 2  CA               dex
00502Fr 2  CA               dex
005030r 2  B5 03            lda $03,x
005032r 2  48               pha
005033r 2  B5 02            lda $02,x
005035r 2  48               pha
005036r 2               
005036r 2               ; <inline>:0:0 in `main`
005036r 2               @OPCODE_2626:   ; [c64_ir] PushLiteral(7777)
005036r 2  E8               inx
005037r 2  E8               inx
005038r 2  A9 61            lda #97
00503Ar 2  95 00            sta $00,x
00503Cr 2  A9 1E            lda #30
00503Er 2  95 01            sta $01,x
005040r 2               
005040r 2               ; <inline>:0:0 in `main`
005040r 2               @OPCODE_2627:   ; [c64_ir] AltPush
005040r 2  CA               dex
005041r 2  CA               dex
005042r 2  B5 03            lda $03,x
005044r 2  48               pha
005045r 2  B5 02            lda $02,x
005047r 2  48               pha
005048r 2               
005048r 2               ; src/prelude.fth:14:12 in `invert`
005048r 2               @OPCODE_2628:   ; [c64_ir] PushLiteral(-1)
005048r 2  E8               inx
005049r 2  E8               inx
00504Ar 2  A9 FF            lda #255
00504Cr 2  95 00            sta $00,x
00504Er 2  A9 FF            lda #255
005050r 2  95 01            sta $01,x
005052r 2               
005052r 2               ; src/prelude.fth:14:15 in `invert`
005052r 2               @OPCODE_2629:   ; [c64_ir] Nand
005052r 2                   ; 26
005052r 2  CA               dex
005053r 2  CA               dex
005054r 2  B5 00            lda $00,x
005056r 2  35 02            and $02,x
005058r 2  49 FF            eor #$ff
00505Ar 2  95 00            sta $00,x
00505Cr 2  B5 01            lda $01,x
00505Er 2  35 03            and $03,x
005060r 2  49 FF            eor #$ff
005062r 2  95 01            sta $01,x
005064r 2               
005064r 2               ; <inline>:0:0 in `main`
005064r 2               @OPCODE_2630:   ; [c64_ir] AltPop
005064r 2  E8               inx
005065r 2  E8               inx
005066r 2  68               pla
005067r 2  95 00            sta $00,x
005069r 2  68               pla
00506Ar 2  95 01            sta $01,x
00506Cr 2               
00506Cr 2               ; <inline>:0:0 in `main`
00506Cr 2               @OPCODE_2631:   ; [c64_ir] Drop
00506Cr 2  CA               dex
00506Dr 2  CA               dex
00506Er 2               
00506Er 2               ; src/prelude.fth:15:19 in `negate`
00506Er 2               @OPCODE_2632:   ; [c64_ir] PushLiteral(1)
00506Er 2  E8               inx
00506Fr 2  E8               inx
005070r 2  A9 01            lda #1
005072r 2  95 00            sta $00,x
005074r 2  A9 00            lda #0
005076r 2  95 01            sta $01,x
005078r 2               
005078r 2               ; src/prelude.fth:15:21 in `negate`
005078r 2               @OPCODE_2633:   ; [c64_ir] Add
005078r 2                   ; 21
005078r 2  CA               dex
005079r 2  CA               dex
00507Ar 2  18               clc
00507Br 2  B5 00            lda $00,x
00507Dr 2  75 02            adc $02,x
00507Fr 2  95 00            sta $00,x
005081r 2  B5 01            lda $01,x
005083r 2  75 03            adc $03,x
005085r 2  95 01            sta $01,x
005087r 2               
005087r 2               ; <inline>:0:0 in `main`
005087r 2               @OPCODE_2634:   ; [c64_ir] AltPop
005087r 2  E8               inx
005088r 2  E8               inx
005089r 2  68               pla
00508Ar 2  95 00            sta $00,x
00508Cr 2  68               pla
00508Dr 2  95 01            sta $01,x
00508Fr 2               
00508Fr 2               ; <inline>:0:0 in `main`
00508Fr 2               @OPCODE_2635:   ; [c64_ir] Drop
00508Fr 2  CA               dex
005090r 2  CA               dex
005091r 2               
005091r 2               ; src/prelude.fth:16:19 in `-`
005091r 2               @OPCODE_2636:   ; [c64_ir] Add
005091r 2                   ; 21
005091r 2  CA               dex
005092r 2  CA               dex
005093r 2  18               clc
005094r 2  B5 00            lda $00,x
005096r 2  75 02            adc $02,x
005098r 2  95 00            sta $00,x
00509Ar 2  B5 01            lda $01,x
00509Cr 2  75 03            adc $03,x
00509Er 2  95 01            sta $01,x
0050A0r 2               
0050A0r 2               ; <inline>:0:0 in `main`
0050A0r 2               @OPCODE_2637:   ; [c64_ir] AltPop
0050A0r 2  E8               inx
0050A1r 2  E8               inx
0050A2r 2  68               pla
0050A3r 2  95 00            sta $00,x
0050A5r 2  68               pla
0050A6r 2  95 01            sta $01,x
0050A8r 2               
0050A8r 2               ; <inline>:0:0 in `main`
0050A8r 2               @OPCODE_2638:   ; [c64_ir] Drop
0050A8r 2  CA               dex
0050A9r 2  CA               dex
0050AAr 2               
0050AAr 2               ; <inline>:0:0 in `main`
0050AAr 2               @OPCODE_2639:   ; [c64_ir] PushLiteral(7777)
0050AAr 2  E8               inx
0050ABr 2  E8               inx
0050ACr 2  A9 61            lda #97
0050AEr 2  95 00            sta $00,x
0050B0r 2  A9 1E            lda #30
0050B2r 2  95 01            sta $01,x
0050B4r 2               
0050B4r 2               ; <inline>:0:0 in `main`
0050B4r 2               @OPCODE_2640:   ; [c64_ir] AltPush
0050B4r 2  CA               dex
0050B5r 2  CA               dex
0050B6r 2  B5 03            lda $03,x
0050B8r 2  48               pha
0050B9r 2  B5 02            lda $02,x
0050BBr 2  48               pha
0050BCr 2               
0050BCr 2               ; src/prelude.fth:21:8 in `0=`
0050BCr 2               @OPCODE_2641:   ; [c64_ir] JumpIf0(111)
0050BCr 2  CA               dex
0050BDr 2  CA               dex
0050BEr 2  B5 02            lda $02,x
0050C0r 2  15 03            ora $03,x
0050C2r 2  D0 03            bne *+5
0050C4r 2  4C rr rr         jmp @target_111
0050C7r 2               
0050C7r 2               @target_110:
0050C7r 2               
0050C7r 2               ; src/prelude.fth:21:11 in `0=`
0050C7r 2               @OPCODE_2643:   ; [c64_ir] PushLiteral(0)
0050C7r 2  E8               inx
0050C8r 2  E8               inx
0050C9r 2  A9 00            lda #0
0050CBr 2  95 00            sta $00,x
0050CDr 2  A9 00            lda #0
0050CFr 2  95 01            sta $01,x
0050D1r 2               
0050D1r 2               ; src/prelude.fth:21:13 in `0=`
0050D1r 2               @OPCODE_2644:   ; [c64_ir] JumpElse(112)
0050D1r 2  4C rr rr         jmp @target_112
0050D4r 2               
0050D4r 2               @target_111:
0050D4r 2               
0050D4r 2               ; src/prelude.fth:21:18 in `0=`
0050D4r 2               @OPCODE_2646:   ; [c64_ir] PushLiteral(-1)
0050D4r 2  E8               inx
0050D5r 2  E8               inx
0050D6r 2  A9 FF            lda #255
0050D8r 2  95 00            sta $00,x
0050DAr 2  A9 FF            lda #255
0050DCr 2  95 01            sta $01,x
0050DEr 2               
0050DEr 2               ; src/prelude.fth:21:21 in `0=`
0050DEr 2               @OPCODE_2647:   ; [c64_ir] JumpTarget(111)
0050DEr 2               
0050DEr 2               @target_112:
0050DEr 2               
0050DEr 2               ; <inline>:0:0 in `main`
0050DEr 2               @OPCODE_2649:   ; [c64_ir] AltPop
0050DEr 2  E8               inx
0050DFr 2  E8               inx
0050E0r 2  68               pla
0050E1r 2  95 00            sta $00,x
0050E3r 2  68               pla
0050E4r 2  95 01            sta $01,x
0050E6r 2               
0050E6r 2               ; <inline>:0:0 in `main`
0050E6r 2               @OPCODE_2650:   ; [c64_ir] Drop
0050E6r 2  CA               dex
0050E7r 2  CA               dex
0050E8r 2               
0050E8r 2               ; <inline>:0:0 in `main`
0050E8r 2               @OPCODE_2651:   ; [c64_ir] AltPop
0050E8r 2  E8               inx
0050E9r 2  E8               inx
0050EAr 2  68               pla
0050EBr 2  95 00            sta $00,x
0050EDr 2  68               pla
0050EEr 2  95 01            sta $01,x
0050F0r 2               
0050F0r 2               ; <inline>:0:0 in `main`
0050F0r 2               @OPCODE_2652:   ; [c64_ir] Drop
0050F0r 2  CA               dex
0050F1r 2  CA               dex
0050F2r 2               
0050F2r 2               ; snake.fth:163:15 in `change-direction`
0050F2r 2               @OPCODE_2653:   ; [c64_ir] JumpIf0(122)
0050F2r 2  CA               dex
0050F3r 2  CA               dex
0050F4r 2  B5 02            lda $02,x
0050F6r 2  15 03            ora $03,x
0050F8r 2  D0 03            bne *+5
0050FAr 2  4C rr rr         jmp @target_122
0050FDr 2               
0050FDr 2               @target_113:
0050FDr 2               
0050FDr 2               ; <inline>:0:0 in `main`
0050FDr 2               @OPCODE_2655:   ; [c64_ir] PushLiteral(7777)
0050FDr 2  E8               inx
0050FEr 2  E8               inx
0050FFr 2  A9 61            lda #97
005101r 2  95 00            sta $00,x
005103r 2  A9 1E            lda #30
005105r 2  95 01            sta $01,x
005107r 2               
005107r 2               ; <inline>:0:0 in `main`
005107r 2               @OPCODE_2656:   ; [c64_ir] AltPush
005107r 2  CA               dex
005108r 2  CA               dex
005109r 2  B5 03            lda $03,x
00510Br 2  48               pha
00510Cr 2  B5 02            lda $02,x
00510Er 2  48               pha
00510Fr 2               
00510Fr 2               ; <inline>:0:0 in `main`
00510Fr 2               @OPCODE_2657:   ; [c64_ir] PushLiteral(7777)
00510Fr 2  E8               inx
005110r 2  E8               inx
005111r 2  A9 61            lda #97
005113r 2  95 00            sta $00,x
005115r 2  A9 1E            lda #30
005117r 2  95 01            sta $01,x
005119r 2               
005119r 2               ; <inline>:0:0 in `main`
005119r 2               @OPCODE_2658:   ; [c64_ir] AltPush
005119r 2  CA               dex
00511Ar 2  CA               dex
00511Br 2  B5 03            lda $03,x
00511Dr 2  48               pha
00511Er 2  B5 02            lda $02,x
005120r 2  48               pha
005121r 2               
005121r 2               ; snake.fth:146:18 in `is-horizontal`
005121r 2               @OPCODE_2659:   ; [c64_ir] PushLiteral(-26660)
005121r 2  E8               inx
005122r 2  E8               inx
005123r 2  A9 DC            lda #220
005125r 2  95 00            sta $00,x
005127r 2  A9 97            lda #151
005129r 2  95 01            sta $01,x
00512Br 2               
00512Br 2               ; snake.fth:146:28 in `is-horizontal`
00512Br 2               @OPCODE_2660:   ; [c64_ir] Load
00512Br 2  A1 00            lda ($00,x)
00512Dr 2  95 00            sta $00,x
00512Fr 2  A9 00            lda #0
005131r 2  95 01            sta $01,x
005133r 2               
005133r 2               ; <inline>:0:0 in `main`
005133r 2               @OPCODE_2661:   ; [c64_ir] PushLiteral(7777)
005133r 2  E8               inx
005134r 2  E8               inx
005135r 2  A9 61            lda #97
005137r 2  95 00            sta $00,x
005139r 2  A9 1E            lda #30
00513Br 2  95 01            sta $01,x
00513Dr 2               
00513Dr 2               ; <inline>:0:0 in `main`
00513Dr 2               @OPCODE_2662:   ; [c64_ir] AltPush
00513Dr 2  CA               dex
00513Er 2  CA               dex
00513Fr 2  B5 03            lda $03,x
005141r 2  48               pha
005142r 2  B5 02            lda $02,x
005144r 2  48               pha
005145r 2               
005145r 2               ; src/prelude.fth:6:10 in `dup`
005145r 2               @OPCODE_2663:   ; [c64_ir] TempStore
005145r 2  CA               dex
005146r 2  CA               dex
005147r 2  B5 03            lda $03,x
005149r 2  85 96            sta TEMP_PAX2
00514Br 2  B5 02            lda $02,x
00514Dr 2  85 95            sta TEMP_PAX1
00514Fr 2               
00514Fr 2               ; src/prelude.fth:6:16 in `dup`
00514Fr 2               @OPCODE_2664:   ; [c64_ir] TempLoad
00514Fr 2  E8               inx
005150r 2  E8               inx
005151r 2  A5 95            lda TEMP_PAX1
005153r 2  95 00            sta $00,x
005155r 2  A5 96            lda TEMP_PAX2
005157r 2  95 01            sta $01,x
005159r 2               
005159r 2               ; src/prelude.fth:6:22 in `dup`
005159r 2               @OPCODE_2665:   ; [c64_ir] TempLoad
005159r 2  E8               inx
00515Ar 2  E8               inx
00515Br 2  A5 95            lda TEMP_PAX1
00515Dr 2  95 00            sta $00,x
00515Fr 2  A5 96            lda TEMP_PAX2
005161r 2  95 01            sta $01,x
005163r 2               
005163r 2               ; <inline>:0:0 in `main`
005163r 2               @OPCODE_2666:   ; [c64_ir] AltPop
005163r 2  E8               inx
005164r 2  E8               inx
005165r 2  68               pla
005166r 2  95 00            sta $00,x
005168r 2  68               pla
005169r 2  95 01            sta $01,x
00516Br 2               
00516Br 2               ; <inline>:0:0 in `main`
00516Br 2               @OPCODE_2667:   ; [c64_ir] Drop
00516Br 2  CA               dex
00516Cr 2  CA               dex
00516Dr 2               
00516Dr 2               ; snake.fth:147:3 in `is-horizontal`
00516Dr 2               @OPCODE_2668:   ; [c64_ir] PushLiteral(37)
00516Dr 2  E8               inx
00516Er 2  E8               inx
00516Fr 2  A9 25            lda #37
005171r 2  95 00            sta $00,x
005173r 2  A9 00            lda #0
005175r 2  95 01            sta $01,x
005177r 2               
005177r 2               ; <inline>:0:0 in `main`
005177r 2               @OPCODE_2669:   ; [c64_ir] PushLiteral(7777)
005177r 2  E8               inx
005178r 2  E8               inx
005179r 2  A9 61            lda #97
00517Br 2  95 00            sta $00,x
00517Dr 2  A9 1E            lda #30
00517Fr 2  95 01            sta $01,x
005181r 2               
005181r 2               ; <inline>:0:0 in `main`
005181r 2               @OPCODE_2670:   ; [c64_ir] AltPush
005181r 2  CA               dex
005182r 2  CA               dex
005183r 2  B5 03            lda $03,x
005185r 2  48               pha
005186r 2  B5 02            lda $02,x
005188r 2  48               pha
005189r 2               
005189r 2               ; <inline>:0:0 in `main`
005189r 2               @OPCODE_2671:   ; [c64_ir] PushLiteral(7777)
005189r 2  E8               inx
00518Ar 2  E8               inx
00518Br 2  A9 61            lda #97
00518Dr 2  95 00            sta $00,x
00518Fr 2  A9 1E            lda #30
005191r 2  95 01            sta $01,x
005193r 2               
005193r 2               ; <inline>:0:0 in `main`
005193r 2               @OPCODE_2672:   ; [c64_ir] AltPush
005193r 2  CA               dex
005194r 2  CA               dex
005195r 2  B5 03            lda $03,x
005197r 2  48               pha
005198r 2  B5 02            lda $02,x
00519Ar 2  48               pha
00519Br 2               
00519Br 2               ; <inline>:0:0 in `main`
00519Br 2               @OPCODE_2673:   ; [c64_ir] PushLiteral(7777)
00519Br 2  E8               inx
00519Cr 2  E8               inx
00519Dr 2  A9 61            lda #97
00519Fr 2  95 00            sta $00,x
0051A1r 2  A9 1E            lda #30
0051A3r 2  95 01            sta $01,x
0051A5r 2               
0051A5r 2               ; <inline>:0:0 in `main`
0051A5r 2               @OPCODE_2674:   ; [c64_ir] AltPush
0051A5r 2  CA               dex
0051A6r 2  CA               dex
0051A7r 2  B5 03            lda $03,x
0051A9r 2  48               pha
0051AAr 2  B5 02            lda $02,x
0051ACr 2  48               pha
0051ADr 2               
0051ADr 2               ; <inline>:0:0 in `main`
0051ADr 2               @OPCODE_2675:   ; [c64_ir] PushLiteral(7777)
0051ADr 2  E8               inx
0051AEr 2  E8               inx
0051AFr 2  A9 61            lda #97
0051B1r 2  95 00            sta $00,x
0051B3r 2  A9 1E            lda #30
0051B5r 2  95 01            sta $01,x
0051B7r 2               
0051B7r 2               ; <inline>:0:0 in `main`
0051B7r 2               @OPCODE_2676:   ; [c64_ir] AltPush
0051B7r 2  CA               dex
0051B8r 2  CA               dex
0051B9r 2  B5 03            lda $03,x
0051BBr 2  48               pha
0051BCr 2  B5 02            lda $02,x
0051BEr 2  48               pha
0051BFr 2               
0051BFr 2               ; src/prelude.fth:14:12 in `invert`
0051BFr 2               @OPCODE_2677:   ; [c64_ir] PushLiteral(-1)
0051BFr 2  E8               inx
0051C0r 2  E8               inx
0051C1r 2  A9 FF            lda #255
0051C3r 2  95 00            sta $00,x
0051C5r 2  A9 FF            lda #255
0051C7r 2  95 01            sta $01,x
0051C9r 2               
0051C9r 2               ; src/prelude.fth:14:15 in `invert`
0051C9r 2               @OPCODE_2678:   ; [c64_ir] Nand
0051C9r 2                   ; 26
0051C9r 2  CA               dex
0051CAr 2  CA               dex
0051CBr 2  B5 00            lda $00,x
0051CDr 2  35 02            and $02,x
0051CFr 2  49 FF            eor #$ff
0051D1r 2  95 00            sta $00,x
0051D3r 2  B5 01            lda $01,x
0051D5r 2  35 03            and $03,x
0051D7r 2  49 FF            eor #$ff
0051D9r 2  95 01            sta $01,x
0051DBr 2               
0051DBr 2               ; <inline>:0:0 in `main`
0051DBr 2               @OPCODE_2679:   ; [c64_ir] AltPop
0051DBr 2  E8               inx
0051DCr 2  E8               inx
0051DDr 2  68               pla
0051DEr 2  95 00            sta $00,x
0051E0r 2  68               pla
0051E1r 2  95 01            sta $01,x
0051E3r 2               
0051E3r 2               ; <inline>:0:0 in `main`
0051E3r 2               @OPCODE_2680:   ; [c64_ir] Drop
0051E3r 2  CA               dex
0051E4r 2  CA               dex
0051E5r 2               
0051E5r 2               ; src/prelude.fth:15:19 in `negate`
0051E5r 2               @OPCODE_2681:   ; [c64_ir] PushLiteral(1)
0051E5r 2  E8               inx
0051E6r 2  E8               inx
0051E7r 2  A9 01            lda #1
0051E9r 2  95 00            sta $00,x
0051EBr 2  A9 00            lda #0
0051EDr 2  95 01            sta $01,x
0051EFr 2               
0051EFr 2               ; src/prelude.fth:15:21 in `negate`
0051EFr 2               @OPCODE_2682:   ; [c64_ir] Add
0051EFr 2                   ; 21
0051EFr 2  CA               dex
0051F0r 2  CA               dex
0051F1r 2  18               clc
0051F2r 2  B5 00            lda $00,x
0051F4r 2  75 02            adc $02,x
0051F6r 2  95 00            sta $00,x
0051F8r 2  B5 01            lda $01,x
0051FAr 2  75 03            adc $03,x
0051FCr 2  95 01            sta $01,x
0051FEr 2               
0051FEr 2               ; <inline>:0:0 in `main`
0051FEr 2               @OPCODE_2683:   ; [c64_ir] AltPop
0051FEr 2  E8               inx
0051FFr 2  E8               inx
005200r 2  68               pla
005201r 2  95 00            sta $00,x
005203r 2  68               pla
005204r 2  95 01            sta $01,x
005206r 2               
005206r 2               ; <inline>:0:0 in `main`
005206r 2               @OPCODE_2684:   ; [c64_ir] Drop
005206r 2  CA               dex
005207r 2  CA               dex
005208r 2               
005208r 2               ; src/prelude.fth:16:19 in `-`
005208r 2               @OPCODE_2685:   ; [c64_ir] Add
005208r 2                   ; 21
005208r 2  CA               dex
005209r 2  CA               dex
00520Ar 2  18               clc
00520Br 2  B5 00            lda $00,x
00520Dr 2  75 02            adc $02,x
00520Fr 2  95 00            sta $00,x
005211r 2  B5 01            lda $01,x
005213r 2  75 03            adc $03,x
005215r 2  95 01            sta $01,x
005217r 2               
005217r 2               ; <inline>:0:0 in `main`
005217r 2               @OPCODE_2686:   ; [c64_ir] AltPop
005217r 2  E8               inx
005218r 2  E8               inx
005219r 2  68               pla
00521Ar 2  95 00            sta $00,x
00521Cr 2  68               pla
00521Dr 2  95 01            sta $01,x
00521Fr 2               
00521Fr 2               ; <inline>:0:0 in `main`
00521Fr 2               @OPCODE_2687:   ; [c64_ir] Drop
00521Fr 2  CA               dex
005220r 2  CA               dex
005221r 2               
005221r 2               ; <inline>:0:0 in `main`
005221r 2               @OPCODE_2688:   ; [c64_ir] PushLiteral(7777)
005221r 2  E8               inx
005222r 2  E8               inx
005223r 2  A9 61            lda #97
005225r 2  95 00            sta $00,x
005227r 2  A9 1E            lda #30
005229r 2  95 01            sta $01,x
00522Br 2               
00522Br 2               ; <inline>:0:0 in `main`
00522Br 2               @OPCODE_2689:   ; [c64_ir] AltPush
00522Br 2  CA               dex
00522Cr 2  CA               dex
00522Dr 2  B5 03            lda $03,x
00522Fr 2  48               pha
005230r 2  B5 02            lda $02,x
005232r 2  48               pha
005233r 2               
005233r 2               ; src/prelude.fth:21:8 in `0=`
005233r 2               @OPCODE_2690:   ; [c64_ir] JumpIf0(115)
005233r 2  CA               dex
005234r 2  CA               dex
005235r 2  B5 02            lda $02,x
005237r 2  15 03            ora $03,x
005239r 2  D0 03            bne *+5
00523Br 2  4C rr rr         jmp @target_115
00523Er 2               
00523Er 2               @target_114:
00523Er 2               
00523Er 2               ; src/prelude.fth:21:11 in `0=`
00523Er 2               @OPCODE_2692:   ; [c64_ir] PushLiteral(0)
00523Er 2  E8               inx
00523Fr 2  E8               inx
005240r 2  A9 00            lda #0
005242r 2  95 00            sta $00,x
005244r 2  A9 00            lda #0
005246r 2  95 01            sta $01,x
005248r 2               
005248r 2               ; src/prelude.fth:21:13 in `0=`
005248r 2               @OPCODE_2693:   ; [c64_ir] JumpElse(116)
005248r 2  4C rr rr         jmp @target_116
00524Br 2               
00524Br 2               @target_115:
00524Br 2               
00524Br 2               ; src/prelude.fth:21:18 in `0=`
00524Br 2               @OPCODE_2695:   ; [c64_ir] PushLiteral(-1)
00524Br 2  E8               inx
00524Cr 2  E8               inx
00524Dr 2  A9 FF            lda #255
00524Fr 2  95 00            sta $00,x
005251r 2  A9 FF            lda #255
005253r 2  95 01            sta $01,x
005255r 2               
005255r 2               ; src/prelude.fth:21:21 in `0=`
005255r 2               @OPCODE_2696:   ; [c64_ir] JumpTarget(115)
005255r 2               
005255r 2               @target_116:
005255r 2               
005255r 2               ; <inline>:0:0 in `main`
005255r 2               @OPCODE_2698:   ; [c64_ir] AltPop
005255r 2  E8               inx
005256r 2  E8               inx
005257r 2  68               pla
005258r 2  95 00            sta $00,x
00525Ar 2  68               pla
00525Br 2  95 01            sta $01,x
00525Dr 2               
00525Dr 2               ; <inline>:0:0 in `main`
00525Dr 2               @OPCODE_2699:   ; [c64_ir] Drop
00525Dr 2  CA               dex
00525Er 2  CA               dex
00525Fr 2               
00525Fr 2               ; <inline>:0:0 in `main`
00525Fr 2               @OPCODE_2700:   ; [c64_ir] AltPop
00525Fr 2  E8               inx
005260r 2  E8               inx
005261r 2  68               pla
005262r 2  95 00            sta $00,x
005264r 2  68               pla
005265r 2  95 01            sta $01,x
005267r 2               
005267r 2               ; <inline>:0:0 in `main`
005267r 2               @OPCODE_2701:   ; [c64_ir] Drop
005267r 2  CA               dex
005268r 2  CA               dex
005269r 2               
005269r 2               ; <inline>:0:0 in `main`
005269r 2               @OPCODE_2702:   ; [c64_ir] PushLiteral(7777)
005269r 2  E8               inx
00526Ar 2  E8               inx
00526Br 2  A9 61            lda #97
00526Dr 2  95 00            sta $00,x
00526Fr 2  A9 1E            lda #30
005271r 2  95 01            sta $01,x
005273r 2               
005273r 2               ; <inline>:0:0 in `main`
005273r 2               @OPCODE_2703:   ; [c64_ir] AltPush
005273r 2  CA               dex
005274r 2  CA               dex
005275r 2  B5 03            lda $03,x
005277r 2  48               pha
005278r 2  B5 02            lda $02,x
00527Ar 2  48               pha
00527Br 2               
00527Br 2               ; src/prelude.fth:3:10 in `swap`
00527Br 2               @OPCODE_2704:   ; [c64_ir] AltPush
00527Br 2  CA               dex
00527Cr 2  CA               dex
00527Dr 2  B5 03            lda $03,x
00527Fr 2  48               pha
005280r 2  B5 02            lda $02,x
005282r 2  48               pha
005283r 2               
005283r 2               ; src/prelude.fth:3:13 in `swap`
005283r 2               @OPCODE_2705:   ; [c64_ir] TempStore
005283r 2  CA               dex
005284r 2  CA               dex
005285r 2  B5 03            lda $03,x
005287r 2  85 96            sta TEMP_PAX2
005289r 2  B5 02            lda $02,x
00528Br 2  85 95            sta TEMP_PAX1
00528Dr 2               
00528Dr 2               ; src/prelude.fth:3:19 in `swap`
00528Dr 2               @OPCODE_2706:   ; [c64_ir] AltPop
00528Dr 2  E8               inx
00528Er 2  E8               inx
00528Fr 2  68               pla
005290r 2  95 00            sta $00,x
005292r 2  68               pla
005293r 2  95 01            sta $01,x
005295r 2               
005295r 2               ; src/prelude.fth:3:22 in `swap`
005295r 2               @OPCODE_2707:   ; [c64_ir] TempLoad
005295r 2  E8               inx
005296r 2  E8               inx
005297r 2  A5 95            lda TEMP_PAX1
005299r 2  95 00            sta $00,x
00529Br 2  A5 96            lda TEMP_PAX2
00529Dr 2  95 01            sta $01,x
00529Fr 2               
00529Fr 2               ; <inline>:0:0 in `main`
00529Fr 2               @OPCODE_2708:   ; [c64_ir] AltPop
00529Fr 2  E8               inx
0052A0r 2  E8               inx
0052A1r 2  68               pla
0052A2r 2  95 00            sta $00,x
0052A4r 2  68               pla
0052A5r 2  95 01            sta $01,x
0052A7r 2               
0052A7r 2               ; <inline>:0:0 in `main`
0052A7r 2               @OPCODE_2709:   ; [c64_ir] Drop
0052A7r 2  CA               dex
0052A8r 2  CA               dex
0052A9r 2               
0052A9r 2               ; snake.fth:148:3 in `is-horizontal`
0052A9r 2               @OPCODE_2710:   ; [c64_ir] PushLiteral(39)
0052A9r 2  E8               inx
0052AAr 2  E8               inx
0052ABr 2  A9 27            lda #39
0052ADr 2  95 00            sta $00,x
0052AFr 2  A9 00            lda #0
0052B1r 2  95 01            sta $01,x
0052B3r 2               
0052B3r 2               ; <inline>:0:0 in `main`
0052B3r 2               @OPCODE_2711:   ; [c64_ir] PushLiteral(7777)
0052B3r 2  E8               inx
0052B4r 2  E8               inx
0052B5r 2  A9 61            lda #97
0052B7r 2  95 00            sta $00,x
0052B9r 2  A9 1E            lda #30
0052BBr 2  95 01            sta $01,x
0052BDr 2               
0052BDr 2               ; <inline>:0:0 in `main`
0052BDr 2               @OPCODE_2712:   ; [c64_ir] AltPush
0052BDr 2  CA               dex
0052BEr 2  CA               dex
0052BFr 2  B5 03            lda $03,x
0052C1r 2  48               pha
0052C2r 2  B5 02            lda $02,x
0052C4r 2  48               pha
0052C5r 2               
0052C5r 2               ; <inline>:0:0 in `main`
0052C5r 2               @OPCODE_2713:   ; [c64_ir] PushLiteral(7777)
0052C5r 2  E8               inx
0052C6r 2  E8               inx
0052C7r 2  A9 61            lda #97
0052C9r 2  95 00            sta $00,x
0052CBr 2  A9 1E            lda #30
0052CDr 2  95 01            sta $01,x
0052CFr 2               
0052CFr 2               ; <inline>:0:0 in `main`
0052CFr 2               @OPCODE_2714:   ; [c64_ir] AltPush
0052CFr 2  CA               dex
0052D0r 2  CA               dex
0052D1r 2  B5 03            lda $03,x
0052D3r 2  48               pha
0052D4r 2  B5 02            lda $02,x
0052D6r 2  48               pha
0052D7r 2               
0052D7r 2               ; <inline>:0:0 in `main`
0052D7r 2               @OPCODE_2715:   ; [c64_ir] PushLiteral(7777)
0052D7r 2  E8               inx
0052D8r 2  E8               inx
0052D9r 2  A9 61            lda #97
0052DBr 2  95 00            sta $00,x
0052DDr 2  A9 1E            lda #30
0052DFr 2  95 01            sta $01,x
0052E1r 2               
0052E1r 2               ; <inline>:0:0 in `main`
0052E1r 2               @OPCODE_2716:   ; [c64_ir] AltPush
0052E1r 2  CA               dex
0052E2r 2  CA               dex
0052E3r 2  B5 03            lda $03,x
0052E5r 2  48               pha
0052E6r 2  B5 02            lda $02,x
0052E8r 2  48               pha
0052E9r 2               
0052E9r 2               ; <inline>:0:0 in `main`
0052E9r 2               @OPCODE_2717:   ; [c64_ir] PushLiteral(7777)
0052E9r 2  E8               inx
0052EAr 2  E8               inx
0052EBr 2  A9 61            lda #97
0052EDr 2  95 00            sta $00,x
0052EFr 2  A9 1E            lda #30
0052F1r 2  95 01            sta $01,x
0052F3r 2               
0052F3r 2               ; <inline>:0:0 in `main`
0052F3r 2               @OPCODE_2718:   ; [c64_ir] AltPush
0052F3r 2  CA               dex
0052F4r 2  CA               dex
0052F5r 2  B5 03            lda $03,x
0052F7r 2  48               pha
0052F8r 2  B5 02            lda $02,x
0052FAr 2  48               pha
0052FBr 2               
0052FBr 2               ; src/prelude.fth:14:12 in `invert`
0052FBr 2               @OPCODE_2719:   ; [c64_ir] PushLiteral(-1)
0052FBr 2  E8               inx
0052FCr 2  E8               inx
0052FDr 2  A9 FF            lda #255
0052FFr 2  95 00            sta $00,x
005301r 2  A9 FF            lda #255
005303r 2  95 01            sta $01,x
005305r 2               
005305r 2               ; src/prelude.fth:14:15 in `invert`
005305r 2               @OPCODE_2720:   ; [c64_ir] Nand
005305r 2                   ; 26
005305r 2  CA               dex
005306r 2  CA               dex
005307r 2  B5 00            lda $00,x
005309r 2  35 02            and $02,x
00530Br 2  49 FF            eor #$ff
00530Dr 2  95 00            sta $00,x
00530Fr 2  B5 01            lda $01,x
005311r 2  35 03            and $03,x
005313r 2  49 FF            eor #$ff
005315r 2  95 01            sta $01,x
005317r 2               
005317r 2               ; <inline>:0:0 in `main`
005317r 2               @OPCODE_2721:   ; [c64_ir] AltPop
005317r 2  E8               inx
005318r 2  E8               inx
005319r 2  68               pla
00531Ar 2  95 00            sta $00,x
00531Cr 2  68               pla
00531Dr 2  95 01            sta $01,x
00531Fr 2               
00531Fr 2               ; <inline>:0:0 in `main`
00531Fr 2               @OPCODE_2722:   ; [c64_ir] Drop
00531Fr 2  CA               dex
005320r 2  CA               dex
005321r 2               
005321r 2               ; src/prelude.fth:15:19 in `negate`
005321r 2               @OPCODE_2723:   ; [c64_ir] PushLiteral(1)
005321r 2  E8               inx
005322r 2  E8               inx
005323r 2  A9 01            lda #1
005325r 2  95 00            sta $00,x
005327r 2  A9 00            lda #0
005329r 2  95 01            sta $01,x
00532Br 2               
00532Br 2               ; src/prelude.fth:15:21 in `negate`
00532Br 2               @OPCODE_2724:   ; [c64_ir] Add
00532Br 2                   ; 21
00532Br 2  CA               dex
00532Cr 2  CA               dex
00532Dr 2  18               clc
00532Er 2  B5 00            lda $00,x
005330r 2  75 02            adc $02,x
005332r 2  95 00            sta $00,x
005334r 2  B5 01            lda $01,x
005336r 2  75 03            adc $03,x
005338r 2  95 01            sta $01,x
00533Ar 2               
00533Ar 2               ; <inline>:0:0 in `main`
00533Ar 2               @OPCODE_2725:   ; [c64_ir] AltPop
00533Ar 2  E8               inx
00533Br 2  E8               inx
00533Cr 2  68               pla
00533Dr 2  95 00            sta $00,x
00533Fr 2  68               pla
005340r 2  95 01            sta $01,x
005342r 2               
005342r 2               ; <inline>:0:0 in `main`
005342r 2               @OPCODE_2726:   ; [c64_ir] Drop
005342r 2  CA               dex
005343r 2  CA               dex
005344r 2               
005344r 2               ; src/prelude.fth:16:19 in `-`
005344r 2               @OPCODE_2727:   ; [c64_ir] Add
005344r 2                   ; 21
005344r 2  CA               dex
005345r 2  CA               dex
005346r 2  18               clc
005347r 2  B5 00            lda $00,x
005349r 2  75 02            adc $02,x
00534Br 2  95 00            sta $00,x
00534Dr 2  B5 01            lda $01,x
00534Fr 2  75 03            adc $03,x
005351r 2  95 01            sta $01,x
005353r 2               
005353r 2               ; <inline>:0:0 in `main`
005353r 2               @OPCODE_2728:   ; [c64_ir] AltPop
005353r 2  E8               inx
005354r 2  E8               inx
005355r 2  68               pla
005356r 2  95 00            sta $00,x
005358r 2  68               pla
005359r 2  95 01            sta $01,x
00535Br 2               
00535Br 2               ; <inline>:0:0 in `main`
00535Br 2               @OPCODE_2729:   ; [c64_ir] Drop
00535Br 2  CA               dex
00535Cr 2  CA               dex
00535Dr 2               
00535Dr 2               ; <inline>:0:0 in `main`
00535Dr 2               @OPCODE_2730:   ; [c64_ir] PushLiteral(7777)
00535Dr 2  E8               inx
00535Er 2  E8               inx
00535Fr 2  A9 61            lda #97
005361r 2  95 00            sta $00,x
005363r 2  A9 1E            lda #30
005365r 2  95 01            sta $01,x
005367r 2               
005367r 2               ; <inline>:0:0 in `main`
005367r 2               @OPCODE_2731:   ; [c64_ir] AltPush
005367r 2  CA               dex
005368r 2  CA               dex
005369r 2  B5 03            lda $03,x
00536Br 2  48               pha
00536Cr 2  B5 02            lda $02,x
00536Er 2  48               pha
00536Fr 2               
00536Fr 2               ; src/prelude.fth:21:8 in `0=`
00536Fr 2               @OPCODE_2732:   ; [c64_ir] JumpIf0(118)
00536Fr 2  CA               dex
005370r 2  CA               dex
005371r 2  B5 02            lda $02,x
005373r 2  15 03            ora $03,x
005375r 2  D0 03            bne *+5
005377r 2  4C rr rr         jmp @target_118
00537Ar 2               
00537Ar 2               @target_117:
00537Ar 2               
00537Ar 2               ; src/prelude.fth:21:11 in `0=`
00537Ar 2               @OPCODE_2734:   ; [c64_ir] PushLiteral(0)
00537Ar 2  E8               inx
00537Br 2  E8               inx
00537Cr 2  A9 00            lda #0
00537Er 2  95 00            sta $00,x
005380r 2  A9 00            lda #0
005382r 2  95 01            sta $01,x
005384r 2               
005384r 2               ; src/prelude.fth:21:13 in `0=`
005384r 2               @OPCODE_2735:   ; [c64_ir] JumpElse(119)
005384r 2  4C rr rr         jmp @target_119
005387r 2               
005387r 2               @target_118:
005387r 2               
005387r 2               ; src/prelude.fth:21:18 in `0=`
005387r 2               @OPCODE_2737:   ; [c64_ir] PushLiteral(-1)
005387r 2  E8               inx
005388r 2  E8               inx
005389r 2  A9 FF            lda #255
00538Br 2  95 00            sta $00,x
00538Dr 2  A9 FF            lda #255
00538Fr 2  95 01            sta $01,x
005391r 2               
005391r 2               ; src/prelude.fth:21:21 in `0=`
005391r 2               @OPCODE_2738:   ; [c64_ir] JumpTarget(118)
005391r 2               
005391r 2               @target_119:
005391r 2               
005391r 2               ; <inline>:0:0 in `main`
005391r 2               @OPCODE_2740:   ; [c64_ir] AltPop
005391r 2  E8               inx
005392r 2  E8               inx
005393r 2  68               pla
005394r 2  95 00            sta $00,x
005396r 2  68               pla
005397r 2  95 01            sta $01,x
005399r 2               
005399r 2               ; <inline>:0:0 in `main`
005399r 2               @OPCODE_2741:   ; [c64_ir] Drop
005399r 2  CA               dex
00539Ar 2  CA               dex
00539Br 2               
00539Br 2               ; <inline>:0:0 in `main`
00539Br 2               @OPCODE_2742:   ; [c64_ir] AltPop
00539Br 2  E8               inx
00539Cr 2  E8               inx
00539Dr 2  68               pla
00539Er 2  95 00            sta $00,x
0053A0r 2  68               pla
0053A1r 2  95 01            sta $01,x
0053A3r 2               
0053A3r 2               ; <inline>:0:0 in `main`
0053A3r 2               @OPCODE_2743:   ; [c64_ir] Drop
0053A3r 2  CA               dex
0053A4r 2  CA               dex
0053A5r 2               
0053A5r 2               ; <inline>:0:0 in `main`
0053A5r 2               @OPCODE_2744:   ; [c64_ir] PushLiteral(7777)
0053A5r 2  E8               inx
0053A6r 2  E8               inx
0053A7r 2  A9 61            lda #97
0053A9r 2  95 00            sta $00,x
0053ABr 2  A9 1E            lda #30
0053ADr 2  95 01            sta $01,x
0053AFr 2               
0053AFr 2               ; <inline>:0:0 in `main`
0053AFr 2               @OPCODE_2745:   ; [c64_ir] AltPush
0053AFr 2  CA               dex
0053B0r 2  CA               dex
0053B1r 2  B5 03            lda $03,x
0053B3r 2  48               pha
0053B4r 2  B5 02            lda $02,x
0053B6r 2  48               pha
0053B7r 2               
0053B7r 2               ; <inline>:0:0 in `main`
0053B7r 2               @OPCODE_2746:   ; [c64_ir] PushLiteral(7777)
0053B7r 2  E8               inx
0053B8r 2  E8               inx
0053B9r 2  A9 61            lda #97
0053BBr 2  95 00            sta $00,x
0053BDr 2  A9 1E            lda #30
0053BFr 2  95 01            sta $01,x
0053C1r 2               
0053C1r 2               ; <inline>:0:0 in `main`
0053C1r 2               @OPCODE_2747:   ; [c64_ir] AltPush
0053C1r 2  CA               dex
0053C2r 2  CA               dex
0053C3r 2  B5 03            lda $03,x
0053C5r 2  48               pha
0053C6r 2  B5 02            lda $02,x
0053C8r 2  48               pha
0053C9r 2               
0053C9r 2               ; src/prelude.fth:14:12 in `invert`
0053C9r 2               @OPCODE_2748:   ; [c64_ir] PushLiteral(-1)
0053C9r 2  E8               inx
0053CAr 2  E8               inx
0053CBr 2  A9 FF            lda #255
0053CDr 2  95 00            sta $00,x
0053CFr 2  A9 FF            lda #255
0053D1r 2  95 01            sta $01,x
0053D3r 2               
0053D3r 2               ; src/prelude.fth:14:15 in `invert`
0053D3r 2               @OPCODE_2749:   ; [c64_ir] Nand
0053D3r 2                   ; 26
0053D3r 2  CA               dex
0053D4r 2  CA               dex
0053D5r 2  B5 00            lda $00,x
0053D7r 2  35 02            and $02,x
0053D9r 2  49 FF            eor #$ff
0053DBr 2  95 00            sta $00,x
0053DDr 2  B5 01            lda $01,x
0053DFr 2  35 03            and $03,x
0053E1r 2  49 FF            eor #$ff
0053E3r 2  95 01            sta $01,x
0053E5r 2               
0053E5r 2               ; <inline>:0:0 in `main`
0053E5r 2               @OPCODE_2750:   ; [c64_ir] AltPop
0053E5r 2  E8               inx
0053E6r 2  E8               inx
0053E7r 2  68               pla
0053E8r 2  95 00            sta $00,x
0053EAr 2  68               pla
0053EBr 2  95 01            sta $01,x
0053EDr 2               
0053EDr 2               ; <inline>:0:0 in `main`
0053EDr 2               @OPCODE_2751:   ; [c64_ir] Drop
0053EDr 2  CA               dex
0053EEr 2  CA               dex
0053EFr 2               
0053EFr 2               ; <inline>:0:0 in `main`
0053EFr 2               @OPCODE_2752:   ; [c64_ir] PushLiteral(7777)
0053EFr 2  E8               inx
0053F0r 2  E8               inx
0053F1r 2  A9 61            lda #97
0053F3r 2  95 00            sta $00,x
0053F5r 2  A9 1E            lda #30
0053F7r 2  95 01            sta $01,x
0053F9r 2               
0053F9r 2               ; <inline>:0:0 in `main`
0053F9r 2               @OPCODE_2753:   ; [c64_ir] AltPush
0053F9r 2  CA               dex
0053FAr 2  CA               dex
0053FBr 2  B5 03            lda $03,x
0053FDr 2  48               pha
0053FEr 2  B5 02            lda $02,x
005400r 2  48               pha
005401r 2               
005401r 2               ; src/prelude.fth:3:10 in `swap`
005401r 2               @OPCODE_2754:   ; [c64_ir] AltPush
005401r 2  CA               dex
005402r 2  CA               dex
005403r 2  B5 03            lda $03,x
005405r 2  48               pha
005406r 2  B5 02            lda $02,x
005408r 2  48               pha
005409r 2               
005409r 2               ; src/prelude.fth:3:13 in `swap`
005409r 2               @OPCODE_2755:   ; [c64_ir] TempStore
005409r 2  CA               dex
00540Ar 2  CA               dex
00540Br 2  B5 03            lda $03,x
00540Dr 2  85 96            sta TEMP_PAX2
00540Fr 2  B5 02            lda $02,x
005411r 2  85 95            sta TEMP_PAX1
005413r 2               
005413r 2               ; src/prelude.fth:3:19 in `swap`
005413r 2               @OPCODE_2756:   ; [c64_ir] AltPop
005413r 2  E8               inx
005414r 2  E8               inx
005415r 2  68               pla
005416r 2  95 00            sta $00,x
005418r 2  68               pla
005419r 2  95 01            sta $01,x
00541Br 2               
00541Br 2               ; src/prelude.fth:3:22 in `swap`
00541Br 2               @OPCODE_2757:   ; [c64_ir] TempLoad
00541Br 2  E8               inx
00541Cr 2  E8               inx
00541Dr 2  A5 95            lda TEMP_PAX1
00541Fr 2  95 00            sta $00,x
005421r 2  A5 96            lda TEMP_PAX2
005423r 2  95 01            sta $01,x
005425r 2               
005425r 2               ; <inline>:0:0 in `main`
005425r 2               @OPCODE_2758:   ; [c64_ir] AltPop
005425r 2  E8               inx
005426r 2  E8               inx
005427r 2  68               pla
005428r 2  95 00            sta $00,x
00542Ar 2  68               pla
00542Br 2  95 01            sta $01,x
00542Dr 2               
00542Dr 2               ; <inline>:0:0 in `main`
00542Dr 2               @OPCODE_2759:   ; [c64_ir] Drop
00542Dr 2  CA               dex
00542Er 2  CA               dex
00542Fr 2               
00542Fr 2               ; <inline>:0:0 in `main`
00542Fr 2               @OPCODE_2760:   ; [c64_ir] PushLiteral(7777)
00542Fr 2  E8               inx
005430r 2  E8               inx
005431r 2  A9 61            lda #97
005433r 2  95 00            sta $00,x
005435r 2  A9 1E            lda #30
005437r 2  95 01            sta $01,x
005439r 2               
005439r 2               ; <inline>:0:0 in `main`
005439r 2               @OPCODE_2761:   ; [c64_ir] AltPush
005439r 2  CA               dex
00543Ar 2  CA               dex
00543Br 2  B5 03            lda $03,x
00543Dr 2  48               pha
00543Er 2  B5 02            lda $02,x
005440r 2  48               pha
005441r 2               
005441r 2               ; src/prelude.fth:14:12 in `invert`
005441r 2               @OPCODE_2762:   ; [c64_ir] PushLiteral(-1)
005441r 2  E8               inx
005442r 2  E8               inx
005443r 2  A9 FF            lda #255
005445r 2  95 00            sta $00,x
005447r 2  A9 FF            lda #255
005449r 2  95 01            sta $01,x
00544Br 2               
00544Br 2               ; src/prelude.fth:14:15 in `invert`
00544Br 2               @OPCODE_2763:   ; [c64_ir] Nand
00544Br 2                   ; 26
00544Br 2  CA               dex
00544Cr 2  CA               dex
00544Dr 2  B5 00            lda $00,x
00544Fr 2  35 02            and $02,x
005451r 2  49 FF            eor #$ff
005453r 2  95 00            sta $00,x
005455r 2  B5 01            lda $01,x
005457r 2  35 03            and $03,x
005459r 2  49 FF            eor #$ff
00545Br 2  95 01            sta $01,x
00545Dr 2               
00545Dr 2               ; <inline>:0:0 in `main`
00545Dr 2               @OPCODE_2764:   ; [c64_ir] AltPop
00545Dr 2  E8               inx
00545Er 2  E8               inx
00545Fr 2  68               pla
005460r 2  95 00            sta $00,x
005462r 2  68               pla
005463r 2  95 01            sta $01,x
005465r 2               
005465r 2               ; <inline>:0:0 in `main`
005465r 2               @OPCODE_2765:   ; [c64_ir] Drop
005465r 2  CA               dex
005466r 2  CA               dex
005467r 2               
005467r 2               ; src/prelude.fth:26:27 in `or`
005467r 2               @OPCODE_2766:   ; [c64_ir] Nand
005467r 2                   ; 26
005467r 2  CA               dex
005468r 2  CA               dex
005469r 2  B5 00            lda $00,x
00546Br 2  35 02            and $02,x
00546Dr 2  49 FF            eor #$ff
00546Fr 2  95 00            sta $00,x
005471r 2  B5 01            lda $01,x
005473r 2  35 03            and $03,x
005475r 2  49 FF            eor #$ff
005477r 2  95 01            sta $01,x
005479r 2               
005479r 2               ; <inline>:0:0 in `main`
005479r 2               @OPCODE_2767:   ; [c64_ir] AltPop
005479r 2  E8               inx
00547Ar 2  E8               inx
00547Br 2  68               pla
00547Cr 2  95 00            sta $00,x
00547Er 2  68               pla
00547Fr 2  95 01            sta $01,x
005481r 2               
005481r 2               ; <inline>:0:0 in `main`
005481r 2               @OPCODE_2768:   ; [c64_ir] Drop
005481r 2  CA               dex
005482r 2  CA               dex
005483r 2               
005483r 2               ; <inline>:0:0 in `main`
005483r 2               @OPCODE_2769:   ; [c64_ir] AltPop
005483r 2  E8               inx
005484r 2  E8               inx
005485r 2  68               pla
005486r 2  95 00            sta $00,x
005488r 2  68               pla
005489r 2  95 01            sta $01,x
00548Br 2               
00548Br 2               ; <inline>:0:0 in `main`
00548Br 2               @OPCODE_2770:   ; [c64_ir] Drop
00548Br 2  CA               dex
00548Cr 2  CA               dex
00548Dr 2               
00548Dr 2               ; snake.fth:156:29 in `turn-down`
00548Dr 2               @OPCODE_2771:   ; [c64_ir] JumpIf0(121)
00548Dr 2  CA               dex
00548Er 2  CA               dex
00548Fr 2  B5 02            lda $02,x
005491r 2  15 03            ora $03,x
005493r 2  D0 03            bne *+5
005495r 2  4C rr rr         jmp @target_121
005498r 2               
005498r 2               @target_120:
005498r 2               
005498r 2               ; snake.fth:156:32 in `turn-down`
005498r 2               @OPCODE_2773:   ; [c64_ir] PushLiteral(40)
005498r 2  E8               inx
005499r 2  E8               inx
00549Ar 2  A9 28            lda #40
00549Cr 2  95 00            sta $00,x
00549Er 2  A9 00            lda #0
0054A0r 2  95 01            sta $01,x
0054A2r 2               
0054A2r 2               ; snake.fth:156:37 in `turn-down`
0054A2r 2               @OPCODE_2774:   ; [c64_ir] PushLiteral(-26660)
0054A2r 2  E8               inx
0054A3r 2  E8               inx
0054A4r 2  A9 DC            lda #220
0054A6r 2  95 00            sta $00,x
0054A8r 2  A9 97            lda #151
0054AAr 2  95 01            sta $01,x
0054ACr 2               
0054ACr 2               ; snake.fth:156:47 in `turn-down`
0054ACr 2               @OPCODE_2775:   ; [c64_ir] Store
0054ACr 2  CA               dex
0054ADr 2  CA               dex
0054AEr 2  CA               dex
0054AFr 2  CA               dex
0054B0r 2  B5 02            lda $02,x
0054B2r 2  81 04            sta ($04,x)
0054B4r 2                   ; TODO high byte
0054B4r 2               
0054B4r 2               ; snake.fth:156:49 in `turn-down`
0054B4r 2               @OPCODE_2776:   ; [c64_ir] JumpTarget(120)
0054B4r 2               
0054B4r 2               @target_121:
0054B4r 2               
0054B4r 2               ; <inline>:0:0 in `main`
0054B4r 2               @OPCODE_2778:   ; [c64_ir] AltPop
0054B4r 2  E8               inx
0054B5r 2  E8               inx
0054B6r 2  68               pla
0054B7r 2  95 00            sta $00,x
0054B9r 2  68               pla
0054BAr 2  95 01            sta $01,x
0054BCr 2               
0054BCr 2               ; <inline>:0:0 in `main`
0054BCr 2               @OPCODE_2779:   ; [c64_ir] Drop
0054BCr 2  CA               dex
0054BDr 2  CA               dex
0054BEr 2               
0054BEr 2               ; snake.fth:164:3 in `change-direction`
0054BEr 2               @OPCODE_2780:   ; [c64_ir] JumpTarget(121)
0054BEr 2               
0054BEr 2               @target_122:
0054BEr 2               
0054BEr 2               ; snake.fth:164:8 in `change-direction`
0054BEr 2               @OPCODE_2782:   ; [c64_ir] JumpTarget(122)
0054BEr 2               
0054BEr 2               @target_123:
0054BEr 2               
0054BEr 2               ; snake.fth:164:13 in `change-direction`
0054BEr 2               @OPCODE_2784:   ; [c64_ir] JumpTarget(123)
0054BEr 2               
0054BEr 2               @target_124:
0054BEr 2               
0054BEr 2               ; snake.fth:164:18 in `change-direction`
0054BEr 2               @OPCODE_2786:   ; [c64_ir] JumpTarget(124)
0054BEr 2               
0054BEr 2               @target_125:
0054BEr 2               
0054BEr 2               ; snake.fth:164:23 in `change-direction`
0054BEr 2               @OPCODE_2788:   ; [c64_ir] Drop
0054BEr 2  CA               dex
0054BFr 2  CA               dex
0054C0r 2               
0054C0r 2               ; <inline>:0:0 in `main`
0054C0r 2               @OPCODE_2789:   ; [c64_ir] AltPop
0054C0r 2  E8               inx
0054C1r 2  E8               inx
0054C2r 2  68               pla
0054C3r 2  95 00            sta $00,x
0054C5r 2  68               pla
0054C6r 2  95 01            sta $01,x
0054C8r 2               
0054C8r 2               ; <inline>:0:0 in `main`
0054C8r 2               @OPCODE_2790:   ; [c64_ir] Drop
0054C8r 2  CA               dex
0054C9r 2  CA               dex
0054CAr 2               
0054CAr 2               ; snake.fth:168:3 in `check-input`
0054CAr 2               @OPCODE_2791:   ; [c64_ir] PushLiteral(0)
0054CAr 2  E8               inx
0054CBr 2  E8               inx
0054CCr 2  A9 00            lda #0
0054CEr 2  95 00            sta $00,x
0054D0r 2  A9 00            lda #0
0054D2r 2  95 01            sta $01,x
0054D4r 2               
0054D4r 2               ; snake.fth:168:5 in `check-input`
0054D4r 2               @OPCODE_2792:   ; [c64_ir] PushLiteral(126)
0054D4r 2  E8               inx
0054D5r 2  E8               inx
0054D6r 2  A9 7E            lda #126
0054D8r 2  95 00            sta $00,x
0054DAr 2  A9 00            lda #0
0054DCr 2  95 01            sta $01,x
0054DEr 2               
0054DEr 2               ; snake.fth:168:14 in `check-input`
0054DEr 2               @OPCODE_2793:   ; [c64_ir] Store
0054DEr 2  CA               dex
0054DFr 2  CA               dex
0054E0r 2  CA               dex
0054E1r 2  CA               dex
0054E2r 2  B5 02            lda $02,x
0054E4r 2  81 04            sta ($04,x)
0054E6r 2                   ; TODO high byte
0054E6r 2               
0054E6r 2               ; <inline>:0:0 in `main`
0054E6r 2               @OPCODE_2794:   ; [c64_ir] AltPop
0054E6r 2  E8               inx
0054E7r 2  E8               inx
0054E8r 2  68               pla
0054E9r 2  95 00            sta $00,x
0054EBr 2  68               pla
0054ECr 2  95 01            sta $01,x
0054EEr 2               
0054EEr 2               ; <inline>:0:0 in `main`
0054EEr 2               @OPCODE_2795:   ; [c64_ir] Drop
0054EEr 2  CA               dex
0054EFr 2  CA               dex
0054F0r 2               
0054F0r 2               ; <inline>:0:0 in `main`
0054F0r 2               @OPCODE_2796:   ; [c64_ir] PushLiteral(7777)
0054F0r 2  E8               inx
0054F1r 2  E8               inx
0054F2r 2  A9 61            lda #97
0054F4r 2  95 00            sta $00,x
0054F6r 2  A9 1E            lda #30
0054F8r 2  95 01            sta $01,x
0054FAr 2               
0054FAr 2               ; <inline>:0:0 in `main`
0054FAr 2               @OPCODE_2797:   ; [c64_ir] AltPush
0054FAr 2  CA               dex
0054FBr 2  CA               dex
0054FCr 2  B5 03            lda $03,x
0054FEr 2  48               pha
0054FFr 2  B5 02            lda $02,x
005501r 2  48               pha
005502r 2               
005502r 2               ; snake.fth:140:3 in `move-snake-tail`
005502r 2               @OPCODE_2798:   ; [c64_ir] PushLiteral(-1)
005502r 2  E8               inx
005503r 2  E8               inx
005504r 2  A9 FF            lda #255
005506r 2  95 00            sta $00,x
005508r 2  A9 FF            lda #255
00550Ar 2  95 01            sta $01,x
00550Cr 2               
00550Cr 2               ; snake.fth:140:6 in `move-snake-tail`
00550Cr 2               @OPCODE_2799:   ; [c64_ir] PushLiteral(-26658)
00550Cr 2  E8               inx
00550Dr 2  E8               inx
00550Er 2  A9 DE            lda #222
005510r 2  95 00            sta $00,x
005512r 2  A9 97            lda #151
005514r 2  95 01            sta $01,x
005516r 2               
005516r 2               ; snake.fth:140:13 in `move-snake-tail`
005516r 2               @OPCODE_2800:   ; [c64_ir] Load
005516r 2  A1 00            lda ($00,x)
005518r 2  95 00            sta $00,x
00551Ar 2  A9 00            lda #0
00551Cr 2  95 01            sta $01,x
00551Er 2               
00551Er 2               ; snake.fth:140:15 in `move-snake-tail`
00551Er 2               @OPCODE_2801:   ; [c64_ir] AltPush
00551Er 2  CA               dex
00551Fr 2  CA               dex
005520r 2  B5 03            lda $03,x
005522r 2  48               pha
005523r 2  B5 02            lda $02,x
005525r 2  48               pha
005526r 2               
005526r 2               ; snake.fth:140:15 in `move-snake-tail`
005526r 2               @OPCODE_2802:   ; [c64_ir] AltPush
005526r 2  CA               dex
005527r 2  CA               dex
005528r 2  B5 03            lda $03,x
00552Ar 2  48               pha
00552Br 2  B5 02            lda $02,x
00552Dr 2  48               pha
00552Er 2               
00552Er 2               ; snake.fth:140:15 in `move-snake-tail`
00552Er 2               @OPCODE_2803:   ; [c64_ir] LoopTarget(125)
00552Er 2               
00552Er 2               @target_126:
00552Er 2               
00552Er 2               ; <inline>:0:0 in `main`
00552Er 2               @OPCODE_2805:   ; [c64_ir] PushLiteral(7777)
00552Er 2  E8               inx
00552Fr 2  E8               inx
005530r 2  A9 61            lda #97
005532r 2  95 00            sta $00,x
005534r 2  A9 1E            lda #30
005536r 2  95 01            sta $01,x
005538r 2               
005538r 2               ; <inline>:0:0 in `main`
005538r 2               @OPCODE_2806:   ; [c64_ir] AltPush
005538r 2  CA               dex
005539r 2  CA               dex
00553Ar 2  B5 03            lda $03,x
00553Cr 2  48               pha
00553Dr 2  B5 02            lda $02,x
00553Fr 2  48               pha
005540r 2               
005540r 2               ; src/prelude.fth:38:5 in `i`
005540r 2               @OPCODE_2807:   ; [c64_ir] AltPop
005540r 2  E8               inx
005541r 2  E8               inx
005542r 2  68               pla
005543r 2  95 00            sta $00,x
005545r 2  68               pla
005546r 2  95 01            sta $01,x
005548r 2               
005548r 2               ; src/prelude.fth:38:8 in `i`
005548r 2               @OPCODE_2808:   ; [c64_ir] AltPop
005548r 2  E8               inx
005549r 2  E8               inx
00554Ar 2  68               pla
00554Br 2  95 00            sta $00,x
00554Dr 2  68               pla
00554Er 2  95 01            sta $01,x
005550r 2               
005550r 2               ; src/prelude.fth:38:11 in `i`
005550r 2               @OPCODE_2809:   ; [c64_ir] AltPop
005550r 2  E8               inx
005551r 2  E8               inx
005552r 2  68               pla
005553r 2  95 00            sta $00,x
005555r 2  68               pla
005556r 2  95 01            sta $01,x
005558r 2               
005558r 2               ; src/prelude.fth:38:14 in `i`
005558r 2               @OPCODE_2810:   ; [c64_ir] TempStore
005558r 2  CA               dex
005559r 2  CA               dex
00555Ar 2  B5 03            lda $03,x
00555Cr 2  85 96            sta TEMP_PAX2
00555Er 2  B5 02            lda $02,x
005560r 2  85 95            sta TEMP_PAX1
005562r 2               
005562r 2               ; src/prelude.fth:38:20 in `i`
005562r 2               @OPCODE_2811:   ; [c64_ir] TempLoad
005562r 2  E8               inx
005563r 2  E8               inx
005564r 2  A5 95            lda TEMP_PAX1
005566r 2  95 00            sta $00,x
005568r 2  A5 96            lda TEMP_PAX2
00556Ar 2  95 01            sta $01,x
00556Cr 2               
00556Cr 2               ; src/prelude.fth:38:26 in `i`
00556Cr 2               @OPCODE_2812:   ; [c64_ir] AltPush
00556Cr 2  CA               dex
00556Dr 2  CA               dex
00556Er 2  B5 03            lda $03,x
005570r 2  48               pha
005571r 2  B5 02            lda $02,x
005573r 2  48               pha
005574r 2               
005574r 2               ; src/prelude.fth:38:29 in `i`
005574r 2               @OPCODE_2813:   ; [c64_ir] AltPush
005574r 2  CA               dex
005575r 2  CA               dex
005576r 2  B5 03            lda $03,x
005578r 2  48               pha
005579r 2  B5 02            lda $02,x
00557Br 2  48               pha
00557Cr 2               
00557Cr 2               ; src/prelude.fth:38:32 in `i`
00557Cr 2               @OPCODE_2814:   ; [c64_ir] AltPush
00557Cr 2  CA               dex
00557Dr 2  CA               dex
00557Er 2  B5 03            lda $03,x
005580r 2  48               pha
005581r 2  B5 02            lda $02,x
005583r 2  48               pha
005584r 2               
005584r 2               ; src/prelude.fth:38:35 in `i`
005584r 2               @OPCODE_2815:   ; [c64_ir] TempLoad
005584r 2  E8               inx
005585r 2  E8               inx
005586r 2  A5 95            lda TEMP_PAX1
005588r 2  95 00            sta $00,x
00558Ar 2  A5 96            lda TEMP_PAX2
00558Cr 2  95 01            sta $01,x
00558Er 2               
00558Er 2               ; <inline>:0:0 in `main`
00558Er 2               @OPCODE_2816:   ; [c64_ir] AltPop
00558Er 2  E8               inx
00558Fr 2  E8               inx
005590r 2  68               pla
005591r 2  95 00            sta $00,x
005593r 2  68               pla
005594r 2  95 01            sta $01,x
005596r 2               
005596r 2               ; <inline>:0:0 in `main`
005596r 2               @OPCODE_2817:   ; [c64_ir] Drop
005596r 2  CA               dex
005597r 2  CA               dex
005598r 2               
005598r 2               ; snake.fth:141:9 in `move-snake-tail`
005598r 2               @OPCODE_2818:   ; [c64_ir] Drop
005598r 2  CA               dex
005599r 2  CA               dex
00559Ar 2               
00559Ar 2               ; <inline>:0:0 in `main`
00559Ar 2               @OPCODE_2819:   ; [c64_ir] PushLiteral(7777)
00559Ar 2  E8               inx
00559Br 2  E8               inx
00559Cr 2  A9 61            lda #97
00559Er 2  95 00            sta $00,x
0055A0r 2  A9 1E            lda #30
0055A2r 2  95 01            sta $01,x
0055A4r 2               
0055A4r 2               ; <inline>:0:0 in `main`
0055A4r 2               @OPCODE_2820:   ; [c64_ir] AltPush
0055A4r 2  CA               dex
0055A5r 2  CA               dex
0055A6r 2  B5 03            lda $03,x
0055A8r 2  48               pha
0055A9r 2  B5 02            lda $02,x
0055ABr 2  48               pha
0055ACr 2               
0055ACr 2               ; src/prelude.fth:38:5 in `i`
0055ACr 2               @OPCODE_2821:   ; [c64_ir] AltPop
0055ACr 2  E8               inx
0055ADr 2  E8               inx
0055AEr 2  68               pla
0055AFr 2  95 00            sta $00,x
0055B1r 2  68               pla
0055B2r 2  95 01            sta $01,x
0055B4r 2               
0055B4r 2               ; src/prelude.fth:38:8 in `i`
0055B4r 2               @OPCODE_2822:   ; [c64_ir] AltPop
0055B4r 2  E8               inx
0055B5r 2  E8               inx
0055B6r 2  68               pla
0055B7r 2  95 00            sta $00,x
0055B9r 2  68               pla
0055BAr 2  95 01            sta $01,x
0055BCr 2               
0055BCr 2               ; src/prelude.fth:38:11 in `i`
0055BCr 2               @OPCODE_2823:   ; [c64_ir] AltPop
0055BCr 2  E8               inx
0055BDr 2  E8               inx
0055BEr 2  68               pla
0055BFr 2  95 00            sta $00,x
0055C1r 2  68               pla
0055C2r 2  95 01            sta $01,x
0055C4r 2               
0055C4r 2               ; src/prelude.fth:38:14 in `i`
0055C4r 2               @OPCODE_2824:   ; [c64_ir] TempStore
0055C4r 2  CA               dex
0055C5r 2  CA               dex
0055C6r 2  B5 03            lda $03,x
0055C8r 2  85 96            sta TEMP_PAX2
0055CAr 2  B5 02            lda $02,x
0055CCr 2  85 95            sta TEMP_PAX1
0055CEr 2               
0055CEr 2               ; src/prelude.fth:38:20 in `i`
0055CEr 2               @OPCODE_2825:   ; [c64_ir] TempLoad
0055CEr 2  E8               inx
0055CFr 2  E8               inx
0055D0r 2  A5 95            lda TEMP_PAX1
0055D2r 2  95 00            sta $00,x
0055D4r 2  A5 96            lda TEMP_PAX2
0055D6r 2  95 01            sta $01,x
0055D8r 2               
0055D8r 2               ; src/prelude.fth:38:26 in `i`
0055D8r 2               @OPCODE_2826:   ; [c64_ir] AltPush
0055D8r 2  CA               dex
0055D9r 2  CA               dex
0055DAr 2  B5 03            lda $03,x
0055DCr 2  48               pha
0055DDr 2  B5 02            lda $02,x
0055DFr 2  48               pha
0055E0r 2               
0055E0r 2               ; src/prelude.fth:38:29 in `i`
0055E0r 2               @OPCODE_2827:   ; [c64_ir] AltPush
0055E0r 2  CA               dex
0055E1r 2  CA               dex
0055E2r 2  B5 03            lda $03,x
0055E4r 2  48               pha
0055E5r 2  B5 02            lda $02,x
0055E7r 2  48               pha
0055E8r 2               
0055E8r 2               ; src/prelude.fth:38:32 in `i`
0055E8r 2               @OPCODE_2828:   ; [c64_ir] AltPush
0055E8r 2  CA               dex
0055E9r 2  CA               dex
0055EAr 2  B5 03            lda $03,x
0055ECr 2  48               pha
0055EDr 2  B5 02            lda $02,x
0055EFr 2  48               pha
0055F0r 2               
0055F0r 2               ; src/prelude.fth:38:35 in `i`
0055F0r 2               @OPCODE_2829:   ; [c64_ir] TempLoad
0055F0r 2  E8               inx
0055F1r 2  E8               inx
0055F2r 2  A5 95            lda TEMP_PAX1
0055F4r 2  95 00            sta $00,x
0055F6r 2  A5 96            lda TEMP_PAX2
0055F8r 2  95 01            sta $01,x
0055FAr 2               
0055FAr 2               ; <inline>:0:0 in `main`
0055FAr 2               @OPCODE_2830:   ; [c64_ir] AltPop
0055FAr 2  E8               inx
0055FBr 2  E8               inx
0055FCr 2  68               pla
0055FDr 2  95 00            sta $00,x
0055FFr 2  68               pla
005600r 2  95 01            sta $01,x
005602r 2               
005602r 2               ; <inline>:0:0 in `main`
005602r 2               @OPCODE_2831:   ; [c64_ir] Drop
005602r 2  CA               dex
005603r 2  CA               dex
005604r 2               
005604r 2               ; <inline>:0:0 in `main`
005604r 2               @OPCODE_2832:   ; [c64_ir] PushLiteral(7777)
005604r 2  E8               inx
005605r 2  E8               inx
005606r 2  A9 61            lda #97
005608r 2  95 00            sta $00,x
00560Ar 2  A9 1E            lda #30
00560Cr 2  95 01            sta $01,x
00560Er 2               
00560Er 2               ; <inline>:0:0 in `main`
00560Er 2               @OPCODE_2833:   ; [c64_ir] AltPush
00560Er 2  CA               dex
00560Fr 2  CA               dex
005610r 2  B5 03            lda $03,x
005612r 2  48               pha
005613r 2  B5 02            lda $02,x
005615r 2  48               pha
005616r 2               
005616r 2               ; <inline>:0:0 in `main`
005616r 2               @OPCODE_2834:   ; [c64_ir] PushLiteral(7777)
005616r 2  E8               inx
005617r 2  E8               inx
005618r 2  A9 61            lda #97
00561Ar 2  95 00            sta $00,x
00561Cr 2  A9 1E            lda #30
00561Er 2  95 01            sta $01,x
005620r 2               
005620r 2               ; <inline>:0:0 in `main`
005620r 2               @OPCODE_2835:   ; [c64_ir] AltPush
005620r 2  CA               dex
005621r 2  CA               dex
005622r 2  B5 03            lda $03,x
005624r 2  48               pha
005625r 2  B5 02            lda $02,x
005627r 2  48               pha
005628r 2               
005628r 2               ; <inline>:0:0 in `main`
005628r 2               @OPCODE_2836:   ; [c64_ir] PushLiteral(7777)
005628r 2  E8               inx
005629r 2  E8               inx
00562Ar 2  A9 61            lda #97
00562Cr 2  95 00            sta $00,x
00562Er 2  A9 1E            lda #30
005630r 2  95 01            sta $01,x
005632r 2               
005632r 2               ; <inline>:0:0 in `main`
005632r 2               @OPCODE_2837:   ; [c64_ir] AltPush
005632r 2  CA               dex
005633r 2  CA               dex
005634r 2  B5 03            lda $03,x
005636r 2  48               pha
005637r 2  B5 02            lda $02,x
005639r 2  48               pha
00563Ar 2               
00563Ar 2               ; src/prelude.fth:6:10 in `dup`
00563Ar 2               @OPCODE_2838:   ; [c64_ir] TempStore
00563Ar 2  CA               dex
00563Br 2  CA               dex
00563Cr 2  B5 03            lda $03,x
00563Er 2  85 96            sta TEMP_PAX2
005640r 2  B5 02            lda $02,x
005642r 2  85 95            sta TEMP_PAX1
005644r 2               
005644r 2               ; src/prelude.fth:6:16 in `dup`
005644r 2               @OPCODE_2839:   ; [c64_ir] TempLoad
005644r 2  E8               inx
005645r 2  E8               inx
005646r 2  A5 95            lda TEMP_PAX1
005648r 2  95 00            sta $00,x
00564Ar 2  A5 96            lda TEMP_PAX2
00564Cr 2  95 01            sta $01,x
00564Er 2               
00564Er 2               ; src/prelude.fth:6:22 in `dup`
00564Er 2               @OPCODE_2840:   ; [c64_ir] TempLoad
00564Er 2  E8               inx
00564Fr 2  E8               inx
005650r 2  A5 95            lda TEMP_PAX1
005652r 2  95 00            sta $00,x
005654r 2  A5 96            lda TEMP_PAX2
005656r 2  95 01            sta $01,x
005658r 2               
005658r 2               ; <inline>:0:0 in `main`
005658r 2               @OPCODE_2841:   ; [c64_ir] AltPop
005658r 2  E8               inx
005659r 2  E8               inx
00565Ar 2  68               pla
00565Br 2  95 00            sta $00,x
00565Dr 2  68               pla
00565Er 2  95 01            sta $01,x
005660r 2               
005660r 2               ; <inline>:0:0 in `main`
005660r 2               @OPCODE_2842:   ; [c64_ir] Drop
005660r 2  CA               dex
005661r 2  CA               dex
005662r 2               
005662r 2               ; src/prelude.fth:41:13 in `cells`
005662r 2               @OPCODE_2843:   ; [c64_ir] Add
005662r 2                   ; 21
005662r 2  CA               dex
005663r 2  CA               dex
005664r 2  18               clc
005665r 2  B5 00            lda $00,x
005667r 2  75 02            adc $02,x
005669r 2  95 00            sta $00,x
00566Br 2  B5 01            lda $01,x
00566Dr 2  75 03            adc $03,x
00566Fr 2  95 01            sta $01,x
005671r 2               
005671r 2               ; <inline>:0:0 in `main`
005671r 2               @OPCODE_2844:   ; [c64_ir] AltPop
005671r 2  E8               inx
005672r 2  E8               inx
005673r 2  68               pla
005674r 2  95 00            sta $00,x
005676r 2  68               pla
005677r 2  95 01            sta $01,x
005679r 2               
005679r 2               ; <inline>:0:0 in `main`
005679r 2               @OPCODE_2845:   ; [c64_ir] Drop
005679r 2  CA               dex
00567Ar 2  CA               dex
00567Br 2               
00567Br 2               ; snake.fth:42:9 in `snake-x`
00567Br 2               @OPCODE_2846:   ; [c64_ir] PushLiteral(-28668)
00567Br 2  E8               inx
00567Cr 2  E8               inx
00567Dr 2  A9 04            lda #4
00567Fr 2  95 00            sta $00,x
005681r 2  A9 90            lda #144
005683r 2  95 01            sta $01,x
005685r 2               
005685r 2               ; snake.fth:42:22 in `snake-x`
005685r 2               @OPCODE_2847:   ; [c64_ir] Add
005685r 2                   ; 21
005685r 2  CA               dex
005686r 2  CA               dex
005687r 2  18               clc
005688r 2  B5 00            lda $00,x
00568Ar 2  75 02            adc $02,x
00568Cr 2  95 00            sta $00,x
00568Er 2  B5 01            lda $01,x
005690r 2  75 03            adc $03,x
005692r 2  95 01            sta $01,x
005694r 2               
005694r 2               ; <inline>:0:0 in `main`
005694r 2               @OPCODE_2848:   ; [c64_ir] AltPop
005694r 2  E8               inx
005695r 2  E8               inx
005696r 2  68               pla
005697r 2  95 00            sta $00,x
005699r 2  68               pla
00569Ar 2  95 01            sta $01,x
00569Cr 2               
00569Cr 2               ; <inline>:0:0 in `main`
00569Cr 2               @OPCODE_2849:   ; [c64_ir] Drop
00569Cr 2  CA               dex
00569Dr 2  CA               dex
00569Er 2               
00569Er 2               ; snake.fth:141:24 in `move-snake-tail`
00569Er 2               @OPCODE_2850:   ; [c64_ir] Load
00569Er 2  A1 00            lda ($00,x)
0056A0r 2  95 00            sta $00,x
0056A2r 2  A9 00            lda #0
0056A4r 2  95 01            sta $01,x
0056A6r 2               
0056A6r 2               ; <inline>:0:0 in `main`
0056A6r 2               @OPCODE_2851:   ; [c64_ir] PushLiteral(7777)
0056A6r 2  E8               inx
0056A7r 2  E8               inx
0056A8r 2  A9 61            lda #97
0056AAr 2  95 00            sta $00,x
0056ACr 2  A9 1E            lda #30
0056AEr 2  95 01            sta $01,x
0056B0r 2               
0056B0r 2               ; <inline>:0:0 in `main`
0056B0r 2               @OPCODE_2852:   ; [c64_ir] AltPush
0056B0r 2  CA               dex
0056B1r 2  CA               dex
0056B2r 2  B5 03            lda $03,x
0056B4r 2  48               pha
0056B5r 2  B5 02            lda $02,x
0056B7r 2  48               pha
0056B8r 2               
0056B8r 2               ; src/prelude.fth:38:5 in `i`
0056B8r 2               @OPCODE_2853:   ; [c64_ir] AltPop
0056B8r 2  E8               inx
0056B9r 2  E8               inx
0056BAr 2  68               pla
0056BBr 2  95 00            sta $00,x
0056BDr 2  68               pla
0056BEr 2  95 01            sta $01,x
0056C0r 2               
0056C0r 2               ; src/prelude.fth:38:8 in `i`
0056C0r 2               @OPCODE_2854:   ; [c64_ir] AltPop
0056C0r 2  E8               inx
0056C1r 2  E8               inx
0056C2r 2  68               pla
0056C3r 2  95 00            sta $00,x
0056C5r 2  68               pla
0056C6r 2  95 01            sta $01,x
0056C8r 2               
0056C8r 2               ; src/prelude.fth:38:11 in `i`
0056C8r 2               @OPCODE_2855:   ; [c64_ir] AltPop
0056C8r 2  E8               inx
0056C9r 2  E8               inx
0056CAr 2  68               pla
0056CBr 2  95 00            sta $00,x
0056CDr 2  68               pla
0056CEr 2  95 01            sta $01,x
0056D0r 2               
0056D0r 2               ; src/prelude.fth:38:14 in `i`
0056D0r 2               @OPCODE_2856:   ; [c64_ir] TempStore
0056D0r 2  CA               dex
0056D1r 2  CA               dex
0056D2r 2  B5 03            lda $03,x
0056D4r 2  85 96            sta TEMP_PAX2
0056D6r 2  B5 02            lda $02,x
0056D8r 2  85 95            sta TEMP_PAX1
0056DAr 2               
0056DAr 2               ; src/prelude.fth:38:20 in `i`
0056DAr 2               @OPCODE_2857:   ; [c64_ir] TempLoad
0056DAr 2  E8               inx
0056DBr 2  E8               inx
0056DCr 2  A5 95            lda TEMP_PAX1
0056DEr 2  95 00            sta $00,x
0056E0r 2  A5 96            lda TEMP_PAX2
0056E2r 2  95 01            sta $01,x
0056E4r 2               
0056E4r 2               ; src/prelude.fth:38:26 in `i`
0056E4r 2               @OPCODE_2858:   ; [c64_ir] AltPush
0056E4r 2  CA               dex
0056E5r 2  CA               dex
0056E6r 2  B5 03            lda $03,x
0056E8r 2  48               pha
0056E9r 2  B5 02            lda $02,x
0056EBr 2  48               pha
0056ECr 2               
0056ECr 2               ; src/prelude.fth:38:29 in `i`
0056ECr 2               @OPCODE_2859:   ; [c64_ir] AltPush
0056ECr 2  CA               dex
0056EDr 2  CA               dex
0056EEr 2  B5 03            lda $03,x
0056F0r 2  48               pha
0056F1r 2  B5 02            lda $02,x
0056F3r 2  48               pha
0056F4r 2               
0056F4r 2               ; src/prelude.fth:38:32 in `i`
0056F4r 2               @OPCODE_2860:   ; [c64_ir] AltPush
0056F4r 2  CA               dex
0056F5r 2  CA               dex
0056F6r 2  B5 03            lda $03,x
0056F8r 2  48               pha
0056F9r 2  B5 02            lda $02,x
0056FBr 2  48               pha
0056FCr 2               
0056FCr 2               ; src/prelude.fth:38:35 in `i`
0056FCr 2               @OPCODE_2861:   ; [c64_ir] TempLoad
0056FCr 2  E8               inx
0056FDr 2  E8               inx
0056FEr 2  A5 95            lda TEMP_PAX1
005700r 2  95 00            sta $00,x
005702r 2  A5 96            lda TEMP_PAX2
005704r 2  95 01            sta $01,x
005706r 2               
005706r 2               ; <inline>:0:0 in `main`
005706r 2               @OPCODE_2862:   ; [c64_ir] AltPop
005706r 2  E8               inx
005707r 2  E8               inx
005708r 2  68               pla
005709r 2  95 00            sta $00,x
00570Br 2  68               pla
00570Cr 2  95 01            sta $01,x
00570Er 2               
00570Er 2               ; <inline>:0:0 in `main`
00570Er 2               @OPCODE_2863:   ; [c64_ir] Drop
00570Er 2  CA               dex
00570Fr 2  CA               dex
005710r 2               
005710r 2               ; snake.fth:141:28 in `move-snake-tail`
005710r 2               @OPCODE_2864:   ; [c64_ir] PushLiteral(1)
005710r 2  E8               inx
005711r 2  E8               inx
005712r 2  A9 01            lda #1
005714r 2  95 00            sta $00,x
005716r 2  A9 00            lda #0
005718r 2  95 01            sta $01,x
00571Ar 2               
00571Ar 2               ; snake.fth:141:30 in `move-snake-tail`
00571Ar 2               @OPCODE_2865:   ; [c64_ir] Add
00571Ar 2                   ; 21
00571Ar 2  CA               dex
00571Br 2  CA               dex
00571Cr 2  18               clc
00571Dr 2  B5 00            lda $00,x
00571Fr 2  75 02            adc $02,x
005721r 2  95 00            sta $00,x
005723r 2  B5 01            lda $01,x
005725r 2  75 03            adc $03,x
005727r 2  95 01            sta $01,x
005729r 2               
005729r 2               ; <inline>:0:0 in `main`
005729r 2               @OPCODE_2866:   ; [c64_ir] PushLiteral(7777)
005729r 2  E8               inx
00572Ar 2  E8               inx
00572Br 2  A9 61            lda #97
00572Dr 2  95 00            sta $00,x
00572Fr 2  A9 1E            lda #30
005731r 2  95 01            sta $01,x
005733r 2               
005733r 2               ; <inline>:0:0 in `main`
005733r 2               @OPCODE_2867:   ; [c64_ir] AltPush
005733r 2  CA               dex
005734r 2  CA               dex
005735r 2  B5 03            lda $03,x
005737r 2  48               pha
005738r 2  B5 02            lda $02,x
00573Ar 2  48               pha
00573Br 2               
00573Br 2               ; <inline>:0:0 in `main`
00573Br 2               @OPCODE_2868:   ; [c64_ir] PushLiteral(7777)
00573Br 2  E8               inx
00573Cr 2  E8               inx
00573Dr 2  A9 61            lda #97
00573Fr 2  95 00            sta $00,x
005741r 2  A9 1E            lda #30
005743r 2  95 01            sta $01,x
005745r 2               
005745r 2               ; <inline>:0:0 in `main`
005745r 2               @OPCODE_2869:   ; [c64_ir] AltPush
005745r 2  CA               dex
005746r 2  CA               dex
005747r 2  B5 03            lda $03,x
005749r 2  48               pha
00574Ar 2  B5 02            lda $02,x
00574Cr 2  48               pha
00574Dr 2               
00574Dr 2               ; <inline>:0:0 in `main`
00574Dr 2               @OPCODE_2870:   ; [c64_ir] PushLiteral(7777)
00574Dr 2  E8               inx
00574Er 2  E8               inx
00574Fr 2  A9 61            lda #97
005751r 2  95 00            sta $00,x
005753r 2  A9 1E            lda #30
005755r 2  95 01            sta $01,x
005757r 2               
005757r 2               ; <inline>:0:0 in `main`
005757r 2               @OPCODE_2871:   ; [c64_ir] AltPush
005757r 2  CA               dex
005758r 2  CA               dex
005759r 2  B5 03            lda $03,x
00575Br 2  48               pha
00575Cr 2  B5 02            lda $02,x
00575Er 2  48               pha
00575Fr 2               
00575Fr 2               ; src/prelude.fth:6:10 in `dup`
00575Fr 2               @OPCODE_2872:   ; [c64_ir] TempStore
00575Fr 2  CA               dex
005760r 2  CA               dex
005761r 2  B5 03            lda $03,x
005763r 2  85 96            sta TEMP_PAX2
005765r 2  B5 02            lda $02,x
005767r 2  85 95            sta TEMP_PAX1
005769r 2               
005769r 2               ; src/prelude.fth:6:16 in `dup`
005769r 2               @OPCODE_2873:   ; [c64_ir] TempLoad
005769r 2  E8               inx
00576Ar 2  E8               inx
00576Br 2  A5 95            lda TEMP_PAX1
00576Dr 2  95 00            sta $00,x
00576Fr 2  A5 96            lda TEMP_PAX2
005771r 2  95 01            sta $01,x
005773r 2               
005773r 2               ; src/prelude.fth:6:22 in `dup`
005773r 2               @OPCODE_2874:   ; [c64_ir] TempLoad
005773r 2  E8               inx
005774r 2  E8               inx
005775r 2  A5 95            lda TEMP_PAX1
005777r 2  95 00            sta $00,x
005779r 2  A5 96            lda TEMP_PAX2
00577Br 2  95 01            sta $01,x
00577Dr 2               
00577Dr 2               ; <inline>:0:0 in `main`
00577Dr 2               @OPCODE_2875:   ; [c64_ir] AltPop
00577Dr 2  E8               inx
00577Er 2  E8               inx
00577Fr 2  68               pla
005780r 2  95 00            sta $00,x
005782r 2  68               pla
005783r 2  95 01            sta $01,x
005785r 2               
005785r 2               ; <inline>:0:0 in `main`
005785r 2               @OPCODE_2876:   ; [c64_ir] Drop
005785r 2  CA               dex
005786r 2  CA               dex
005787r 2               
005787r 2               ; src/prelude.fth:41:13 in `cells`
005787r 2               @OPCODE_2877:   ; [c64_ir] Add
005787r 2                   ; 21
005787r 2  CA               dex
005788r 2  CA               dex
005789r 2  18               clc
00578Ar 2  B5 00            lda $00,x
00578Cr 2  75 02            adc $02,x
00578Er 2  95 00            sta $00,x
005790r 2  B5 01            lda $01,x
005792r 2  75 03            adc $03,x
005794r 2  95 01            sta $01,x
005796r 2               
005796r 2               ; <inline>:0:0 in `main`
005796r 2               @OPCODE_2878:   ; [c64_ir] AltPop
005796r 2  E8               inx
005797r 2  E8               inx
005798r 2  68               pla
005799r 2  95 00            sta $00,x
00579Br 2  68               pla
00579Cr 2  95 01            sta $01,x
00579Er 2               
00579Er 2               ; <inline>:0:0 in `main`
00579Er 2               @OPCODE_2879:   ; [c64_ir] Drop
00579Er 2  CA               dex
00579Fr 2  CA               dex
0057A0r 2               
0057A0r 2               ; snake.fth:42:9 in `snake-x`
0057A0r 2               @OPCODE_2880:   ; [c64_ir] PushLiteral(-28668)
0057A0r 2  E8               inx
0057A1r 2  E8               inx
0057A2r 2  A9 04            lda #4
0057A4r 2  95 00            sta $00,x
0057A6r 2  A9 90            lda #144
0057A8r 2  95 01            sta $01,x
0057AAr 2               
0057AAr 2               ; snake.fth:42:22 in `snake-x`
0057AAr 2               @OPCODE_2881:   ; [c64_ir] Add
0057AAr 2                   ; 21
0057AAr 2  CA               dex
0057ABr 2  CA               dex
0057ACr 2  18               clc
0057ADr 2  B5 00            lda $00,x
0057AFr 2  75 02            adc $02,x
0057B1r 2  95 00            sta $00,x
0057B3r 2  B5 01            lda $01,x
0057B5r 2  75 03            adc $03,x
0057B7r 2  95 01            sta $01,x
0057B9r 2               
0057B9r 2               ; <inline>:0:0 in `main`
0057B9r 2               @OPCODE_2882:   ; [c64_ir] AltPop
0057B9r 2  E8               inx
0057BAr 2  E8               inx
0057BBr 2  68               pla
0057BCr 2  95 00            sta $00,x
0057BEr 2  68               pla
0057BFr 2  95 01            sta $01,x
0057C1r 2               
0057C1r 2               ; <inline>:0:0 in `main`
0057C1r 2               @OPCODE_2883:   ; [c64_ir] Drop
0057C1r 2  CA               dex
0057C2r 2  CA               dex
0057C3r 2               
0057C3r 2               ; snake.fth:141:40 in `move-snake-tail`
0057C3r 2               @OPCODE_2884:   ; [c64_ir] Store
0057C3r 2  CA               dex
0057C4r 2  CA               dex
0057C5r 2  CA               dex
0057C6r 2  CA               dex
0057C7r 2  B5 02            lda $02,x
0057C9r 2  81 04            sta ($04,x)
0057CBr 2                   ; TODO high byte
0057CBr 2               
0057CBr 2               ; <inline>:0:0 in `main`
0057CBr 2               @OPCODE_2885:   ; [c64_ir] PushLiteral(7777)
0057CBr 2  E8               inx
0057CCr 2  E8               inx
0057CDr 2  A9 61            lda #97
0057CFr 2  95 00            sta $00,x
0057D1r 2  A9 1E            lda #30
0057D3r 2  95 01            sta $01,x
0057D5r 2               
0057D5r 2               ; <inline>:0:0 in `main`
0057D5r 2               @OPCODE_2886:   ; [c64_ir] AltPush
0057D5r 2  CA               dex
0057D6r 2  CA               dex
0057D7r 2  B5 03            lda $03,x
0057D9r 2  48               pha
0057DAr 2  B5 02            lda $02,x
0057DCr 2  48               pha
0057DDr 2               
0057DDr 2               ; src/prelude.fth:38:5 in `i`
0057DDr 2               @OPCODE_2887:   ; [c64_ir] AltPop
0057DDr 2  E8               inx
0057DEr 2  E8               inx
0057DFr 2  68               pla
0057E0r 2  95 00            sta $00,x
0057E2r 2  68               pla
0057E3r 2  95 01            sta $01,x
0057E5r 2               
0057E5r 2               ; src/prelude.fth:38:8 in `i`
0057E5r 2               @OPCODE_2888:   ; [c64_ir] AltPop
0057E5r 2  E8               inx
0057E6r 2  E8               inx
0057E7r 2  68               pla
0057E8r 2  95 00            sta $00,x
0057EAr 2  68               pla
0057EBr 2  95 01            sta $01,x
0057EDr 2               
0057EDr 2               ; src/prelude.fth:38:11 in `i`
0057EDr 2               @OPCODE_2889:   ; [c64_ir] AltPop
0057EDr 2  E8               inx
0057EEr 2  E8               inx
0057EFr 2  68               pla
0057F0r 2  95 00            sta $00,x
0057F2r 2  68               pla
0057F3r 2  95 01            sta $01,x
0057F5r 2               
0057F5r 2               ; src/prelude.fth:38:14 in `i`
0057F5r 2               @OPCODE_2890:   ; [c64_ir] TempStore
0057F5r 2  CA               dex
0057F6r 2  CA               dex
0057F7r 2  B5 03            lda $03,x
0057F9r 2  85 96            sta TEMP_PAX2
0057FBr 2  B5 02            lda $02,x
0057FDr 2  85 95            sta TEMP_PAX1
0057FFr 2               
0057FFr 2               ; src/prelude.fth:38:20 in `i`
0057FFr 2               @OPCODE_2891:   ; [c64_ir] TempLoad
0057FFr 2  E8               inx
005800r 2  E8               inx
005801r 2  A5 95            lda TEMP_PAX1
005803r 2  95 00            sta $00,x
005805r 2  A5 96            lda TEMP_PAX2
005807r 2  95 01            sta $01,x
005809r 2               
005809r 2               ; src/prelude.fth:38:26 in `i`
005809r 2               @OPCODE_2892:   ; [c64_ir] AltPush
005809r 2  CA               dex
00580Ar 2  CA               dex
00580Br 2  B5 03            lda $03,x
00580Dr 2  48               pha
00580Er 2  B5 02            lda $02,x
005810r 2  48               pha
005811r 2               
005811r 2               ; src/prelude.fth:38:29 in `i`
005811r 2               @OPCODE_2893:   ; [c64_ir] AltPush
005811r 2  CA               dex
005812r 2  CA               dex
005813r 2  B5 03            lda $03,x
005815r 2  48               pha
005816r 2  B5 02            lda $02,x
005818r 2  48               pha
005819r 2               
005819r 2               ; src/prelude.fth:38:32 in `i`
005819r 2               @OPCODE_2894:   ; [c64_ir] AltPush
005819r 2  CA               dex
00581Ar 2  CA               dex
00581Br 2  B5 03            lda $03,x
00581Dr 2  48               pha
00581Er 2  B5 02            lda $02,x
005820r 2  48               pha
005821r 2               
005821r 2               ; src/prelude.fth:38:35 in `i`
005821r 2               @OPCODE_2895:   ; [c64_ir] TempLoad
005821r 2  E8               inx
005822r 2  E8               inx
005823r 2  A5 95            lda TEMP_PAX1
005825r 2  95 00            sta $00,x
005827r 2  A5 96            lda TEMP_PAX2
005829r 2  95 01            sta $01,x
00582Br 2               
00582Br 2               ; <inline>:0:0 in `main`
00582Br 2               @OPCODE_2896:   ; [c64_ir] AltPop
00582Br 2  E8               inx
00582Cr 2  E8               inx
00582Dr 2  68               pla
00582Er 2  95 00            sta $00,x
005830r 2  68               pla
005831r 2  95 01            sta $01,x
005833r 2               
005833r 2               ; <inline>:0:0 in `main`
005833r 2               @OPCODE_2897:   ; [c64_ir] Drop
005833r 2  CA               dex
005834r 2  CA               dex
005835r 2               
005835r 2               ; <inline>:0:0 in `main`
005835r 2               @OPCODE_2898:   ; [c64_ir] PushLiteral(7777)
005835r 2  E8               inx
005836r 2  E8               inx
005837r 2  A9 61            lda #97
005839r 2  95 00            sta $00,x
00583Br 2  A9 1E            lda #30
00583Dr 2  95 01            sta $01,x
00583Fr 2               
00583Fr 2               ; <inline>:0:0 in `main`
00583Fr 2               @OPCODE_2899:   ; [c64_ir] AltPush
00583Fr 2  CA               dex
005840r 2  CA               dex
005841r 2  B5 03            lda $03,x
005843r 2  48               pha
005844r 2  B5 02            lda $02,x
005846r 2  48               pha
005847r 2               
005847r 2               ; <inline>:0:0 in `main`
005847r 2               @OPCODE_2900:   ; [c64_ir] PushLiteral(7777)
005847r 2  E8               inx
005848r 2  E8               inx
005849r 2  A9 61            lda #97
00584Br 2  95 00            sta $00,x
00584Dr 2  A9 1E            lda #30
00584Fr 2  95 01            sta $01,x
005851r 2               
005851r 2               ; <inline>:0:0 in `main`
005851r 2               @OPCODE_2901:   ; [c64_ir] AltPush
005851r 2  CA               dex
005852r 2  CA               dex
005853r 2  B5 03            lda $03,x
005855r 2  48               pha
005856r 2  B5 02            lda $02,x
005858r 2  48               pha
005859r 2               
005859r 2               ; <inline>:0:0 in `main`
005859r 2               @OPCODE_2902:   ; [c64_ir] PushLiteral(7777)
005859r 2  E8               inx
00585Ar 2  E8               inx
00585Br 2  A9 61            lda #97
00585Dr 2  95 00            sta $00,x
00585Fr 2  A9 1E            lda #30
005861r 2  95 01            sta $01,x
005863r 2               
005863r 2               ; <inline>:0:0 in `main`
005863r 2               @OPCODE_2903:   ; [c64_ir] AltPush
005863r 2  CA               dex
005864r 2  CA               dex
005865r 2  B5 03            lda $03,x
005867r 2  48               pha
005868r 2  B5 02            lda $02,x
00586Ar 2  48               pha
00586Br 2               
00586Br 2               ; src/prelude.fth:6:10 in `dup`
00586Br 2               @OPCODE_2904:   ; [c64_ir] TempStore
00586Br 2  CA               dex
00586Cr 2  CA               dex
00586Dr 2  B5 03            lda $03,x
00586Fr 2  85 96            sta TEMP_PAX2
005871r 2  B5 02            lda $02,x
005873r 2  85 95            sta TEMP_PAX1
005875r 2               
005875r 2               ; src/prelude.fth:6:16 in `dup`
005875r 2               @OPCODE_2905:   ; [c64_ir] TempLoad
005875r 2  E8               inx
005876r 2  E8               inx
005877r 2  A5 95            lda TEMP_PAX1
005879r 2  95 00            sta $00,x
00587Br 2  A5 96            lda TEMP_PAX2
00587Dr 2  95 01            sta $01,x
00587Fr 2               
00587Fr 2               ; src/prelude.fth:6:22 in `dup`
00587Fr 2               @OPCODE_2906:   ; [c64_ir] TempLoad
00587Fr 2  E8               inx
005880r 2  E8               inx
005881r 2  A5 95            lda TEMP_PAX1
005883r 2  95 00            sta $00,x
005885r 2  A5 96            lda TEMP_PAX2
005887r 2  95 01            sta $01,x
005889r 2               
005889r 2               ; <inline>:0:0 in `main`
005889r 2               @OPCODE_2907:   ; [c64_ir] AltPop
005889r 2  E8               inx
00588Ar 2  E8               inx
00588Br 2  68               pla
00588Cr 2  95 00            sta $00,x
00588Er 2  68               pla
00588Fr 2  95 01            sta $01,x
005891r 2               
005891r 2               ; <inline>:0:0 in `main`
005891r 2               @OPCODE_2908:   ; [c64_ir] Drop
005891r 2  CA               dex
005892r 2  CA               dex
005893r 2               
005893r 2               ; src/prelude.fth:41:13 in `cells`
005893r 2               @OPCODE_2909:   ; [c64_ir] Add
005893r 2                   ; 21
005893r 2  CA               dex
005894r 2  CA               dex
005895r 2  18               clc
005896r 2  B5 00            lda $00,x
005898r 2  75 02            adc $02,x
00589Ar 2  95 00            sta $00,x
00589Cr 2  B5 01            lda $01,x
00589Er 2  75 03            adc $03,x
0058A0r 2  95 01            sta $01,x
0058A2r 2               
0058A2r 2               ; <inline>:0:0 in `main`
0058A2r 2               @OPCODE_2910:   ; [c64_ir] AltPop
0058A2r 2  E8               inx
0058A3r 2  E8               inx
0058A4r 2  68               pla
0058A5r 2  95 00            sta $00,x
0058A7r 2  68               pla
0058A8r 2  95 01            sta $01,x
0058AAr 2               
0058AAr 2               ; <inline>:0:0 in `main`
0058AAr 2               @OPCODE_2911:   ; [c64_ir] Drop
0058AAr 2  CA               dex
0058ABr 2  CA               dex
0058ACr 2               
0058ACr 2               ; snake.fth:45:9 in `snake-y`
0058ACr 2               @OPCODE_2912:   ; [c64_ir] PushLiteral(-27666)
0058ACr 2  E8               inx
0058ADr 2  E8               inx
0058AEr 2  A9 EE            lda #238
0058B0r 2  95 00            sta $00,x
0058B2r 2  A9 93            lda #147
0058B4r 2  95 01            sta $01,x
0058B6r 2               
0058B6r 2               ; snake.fth:45:22 in `snake-y`
0058B6r 2               @OPCODE_2913:   ; [c64_ir] Add
0058B6r 2                   ; 21
0058B6r 2  CA               dex
0058B7r 2  CA               dex
0058B8r 2  18               clc
0058B9r 2  B5 00            lda $00,x
0058BBr 2  75 02            adc $02,x
0058BDr 2  95 00            sta $00,x
0058BFr 2  B5 01            lda $01,x
0058C1r 2  75 03            adc $03,x
0058C3r 2  95 01            sta $01,x
0058C5r 2               
0058C5r 2               ; <inline>:0:0 in `main`
0058C5r 2               @OPCODE_2914:   ; [c64_ir] AltPop
0058C5r 2  E8               inx
0058C6r 2  E8               inx
0058C7r 2  68               pla
0058C8r 2  95 00            sta $00,x
0058CAr 2  68               pla
0058CBr 2  95 01            sta $01,x
0058CDr 2               
0058CDr 2               ; <inline>:0:0 in `main`
0058CDr 2               @OPCODE_2915:   ; [c64_ir] Drop
0058CDr 2  CA               dex
0058CEr 2  CA               dex
0058CFr 2               
0058CFr 2               ; snake.fth:142:17 in `move-snake-tail`
0058CFr 2               @OPCODE_2916:   ; [c64_ir] Load
0058CFr 2  A1 00            lda ($00,x)
0058D1r 2  95 00            sta $00,x
0058D3r 2  A9 00            lda #0
0058D5r 2  95 01            sta $01,x
0058D7r 2               
0058D7r 2               ; <inline>:0:0 in `main`
0058D7r 2               @OPCODE_2917:   ; [c64_ir] PushLiteral(7777)
0058D7r 2  E8               inx
0058D8r 2  E8               inx
0058D9r 2  A9 61            lda #97
0058DBr 2  95 00            sta $00,x
0058DDr 2  A9 1E            lda #30
0058DFr 2  95 01            sta $01,x
0058E1r 2               
0058E1r 2               ; <inline>:0:0 in `main`
0058E1r 2               @OPCODE_2918:   ; [c64_ir] AltPush
0058E1r 2  CA               dex
0058E2r 2  CA               dex
0058E3r 2  B5 03            lda $03,x
0058E5r 2  48               pha
0058E6r 2  B5 02            lda $02,x
0058E8r 2  48               pha
0058E9r 2               
0058E9r 2               ; src/prelude.fth:38:5 in `i`
0058E9r 2               @OPCODE_2919:   ; [c64_ir] AltPop
0058E9r 2  E8               inx
0058EAr 2  E8               inx
0058EBr 2  68               pla
0058ECr 2  95 00            sta $00,x
0058EEr 2  68               pla
0058EFr 2  95 01            sta $01,x
0058F1r 2               
0058F1r 2               ; src/prelude.fth:38:8 in `i`
0058F1r 2               @OPCODE_2920:   ; [c64_ir] AltPop
0058F1r 2  E8               inx
0058F2r 2  E8               inx
0058F3r 2  68               pla
0058F4r 2  95 00            sta $00,x
0058F6r 2  68               pla
0058F7r 2  95 01            sta $01,x
0058F9r 2               
0058F9r 2               ; src/prelude.fth:38:11 in `i`
0058F9r 2               @OPCODE_2921:   ; [c64_ir] AltPop
0058F9r 2  E8               inx
0058FAr 2  E8               inx
0058FBr 2  68               pla
0058FCr 2  95 00            sta $00,x
0058FEr 2  68               pla
0058FFr 2  95 01            sta $01,x
005901r 2               
005901r 2               ; src/prelude.fth:38:14 in `i`
005901r 2               @OPCODE_2922:   ; [c64_ir] TempStore
005901r 2  CA               dex
005902r 2  CA               dex
005903r 2  B5 03            lda $03,x
005905r 2  85 96            sta TEMP_PAX2
005907r 2  B5 02            lda $02,x
005909r 2  85 95            sta TEMP_PAX1
00590Br 2               
00590Br 2               ; src/prelude.fth:38:20 in `i`
00590Br 2               @OPCODE_2923:   ; [c64_ir] TempLoad
00590Br 2  E8               inx
00590Cr 2  E8               inx
00590Dr 2  A5 95            lda TEMP_PAX1
00590Fr 2  95 00            sta $00,x
005911r 2  A5 96            lda TEMP_PAX2
005913r 2  95 01            sta $01,x
005915r 2               
005915r 2               ; src/prelude.fth:38:26 in `i`
005915r 2               @OPCODE_2924:   ; [c64_ir] AltPush
005915r 2  CA               dex
005916r 2  CA               dex
005917r 2  B5 03            lda $03,x
005919r 2  48               pha
00591Ar 2  B5 02            lda $02,x
00591Cr 2  48               pha
00591Dr 2               
00591Dr 2               ; src/prelude.fth:38:29 in `i`
00591Dr 2               @OPCODE_2925:   ; [c64_ir] AltPush
00591Dr 2  CA               dex
00591Er 2  CA               dex
00591Fr 2  B5 03            lda $03,x
005921r 2  48               pha
005922r 2  B5 02            lda $02,x
005924r 2  48               pha
005925r 2               
005925r 2               ; src/prelude.fth:38:32 in `i`
005925r 2               @OPCODE_2926:   ; [c64_ir] AltPush
005925r 2  CA               dex
005926r 2  CA               dex
005927r 2  B5 03            lda $03,x
005929r 2  48               pha
00592Ar 2  B5 02            lda $02,x
00592Cr 2  48               pha
00592Dr 2               
00592Dr 2               ; src/prelude.fth:38:35 in `i`
00592Dr 2               @OPCODE_2927:   ; [c64_ir] TempLoad
00592Dr 2  E8               inx
00592Er 2  E8               inx
00592Fr 2  A5 95            lda TEMP_PAX1
005931r 2  95 00            sta $00,x
005933r 2  A5 96            lda TEMP_PAX2
005935r 2  95 01            sta $01,x
005937r 2               
005937r 2               ; <inline>:0:0 in `main`
005937r 2               @OPCODE_2928:   ; [c64_ir] AltPop
005937r 2  E8               inx
005938r 2  E8               inx
005939r 2  68               pla
00593Ar 2  95 00            sta $00,x
00593Cr 2  68               pla
00593Dr 2  95 01            sta $01,x
00593Fr 2               
00593Fr 2               ; <inline>:0:0 in `main`
00593Fr 2               @OPCODE_2929:   ; [c64_ir] Drop
00593Fr 2  CA               dex
005940r 2  CA               dex
005941r 2               
005941r 2               ; snake.fth:142:21 in `move-snake-tail`
005941r 2               @OPCODE_2930:   ; [c64_ir] PushLiteral(1)
005941r 2  E8               inx
005942r 2  E8               inx
005943r 2  A9 01            lda #1
005945r 2  95 00            sta $00,x
005947r 2  A9 00            lda #0
005949r 2  95 01            sta $01,x
00594Br 2               
00594Br 2               ; snake.fth:142:23 in `move-snake-tail`
00594Br 2               @OPCODE_2931:   ; [c64_ir] Add
00594Br 2                   ; 21
00594Br 2  CA               dex
00594Cr 2  CA               dex
00594Dr 2  18               clc
00594Er 2  B5 00            lda $00,x
005950r 2  75 02            adc $02,x
005952r 2  95 00            sta $00,x
005954r 2  B5 01            lda $01,x
005956r 2  75 03            adc $03,x
005958r 2  95 01            sta $01,x
00595Ar 2               
00595Ar 2               ; <inline>:0:0 in `main`
00595Ar 2               @OPCODE_2932:   ; [c64_ir] PushLiteral(7777)
00595Ar 2  E8               inx
00595Br 2  E8               inx
00595Cr 2  A9 61            lda #97
00595Er 2  95 00            sta $00,x
005960r 2  A9 1E            lda #30
005962r 2  95 01            sta $01,x
005964r 2               
005964r 2               ; <inline>:0:0 in `main`
005964r 2               @OPCODE_2933:   ; [c64_ir] AltPush
005964r 2  CA               dex
005965r 2  CA               dex
005966r 2  B5 03            lda $03,x
005968r 2  48               pha
005969r 2  B5 02            lda $02,x
00596Br 2  48               pha
00596Cr 2               
00596Cr 2               ; <inline>:0:0 in `main`
00596Cr 2               @OPCODE_2934:   ; [c64_ir] PushLiteral(7777)
00596Cr 2  E8               inx
00596Dr 2  E8               inx
00596Er 2  A9 61            lda #97
005970r 2  95 00            sta $00,x
005972r 2  A9 1E            lda #30
005974r 2  95 01            sta $01,x
005976r 2               
005976r 2               ; <inline>:0:0 in `main`
005976r 2               @OPCODE_2935:   ; [c64_ir] AltPush
005976r 2  CA               dex
005977r 2  CA               dex
005978r 2  B5 03            lda $03,x
00597Ar 2  48               pha
00597Br 2  B5 02            lda $02,x
00597Dr 2  48               pha
00597Er 2               
00597Er 2               ; <inline>:0:0 in `main`
00597Er 2               @OPCODE_2936:   ; [c64_ir] PushLiteral(7777)
00597Er 2  E8               inx
00597Fr 2  E8               inx
005980r 2  A9 61            lda #97
005982r 2  95 00            sta $00,x
005984r 2  A9 1E            lda #30
005986r 2  95 01            sta $01,x
005988r 2               
005988r 2               ; <inline>:0:0 in `main`
005988r 2               @OPCODE_2937:   ; [c64_ir] AltPush
005988r 2  CA               dex
005989r 2  CA               dex
00598Ar 2  B5 03            lda $03,x
00598Cr 2  48               pha
00598Dr 2  B5 02            lda $02,x
00598Fr 2  48               pha
005990r 2               
005990r 2               ; src/prelude.fth:6:10 in `dup`
005990r 2               @OPCODE_2938:   ; [c64_ir] TempStore
005990r 2  CA               dex
005991r 2  CA               dex
005992r 2  B5 03            lda $03,x
005994r 2  85 96            sta TEMP_PAX2
005996r 2  B5 02            lda $02,x
005998r 2  85 95            sta TEMP_PAX1
00599Ar 2               
00599Ar 2               ; src/prelude.fth:6:16 in `dup`
00599Ar 2               @OPCODE_2939:   ; [c64_ir] TempLoad
00599Ar 2  E8               inx
00599Br 2  E8               inx
00599Cr 2  A5 95            lda TEMP_PAX1
00599Er 2  95 00            sta $00,x
0059A0r 2  A5 96            lda TEMP_PAX2
0059A2r 2  95 01            sta $01,x
0059A4r 2               
0059A4r 2               ; src/prelude.fth:6:22 in `dup`
0059A4r 2               @OPCODE_2940:   ; [c64_ir] TempLoad
0059A4r 2  E8               inx
0059A5r 2  E8               inx
0059A6r 2  A5 95            lda TEMP_PAX1
0059A8r 2  95 00            sta $00,x
0059AAr 2  A5 96            lda TEMP_PAX2
0059ACr 2  95 01            sta $01,x
0059AEr 2               
0059AEr 2               ; <inline>:0:0 in `main`
0059AEr 2               @OPCODE_2941:   ; [c64_ir] AltPop
0059AEr 2  E8               inx
0059AFr 2  E8               inx
0059B0r 2  68               pla
0059B1r 2  95 00            sta $00,x
0059B3r 2  68               pla
0059B4r 2  95 01            sta $01,x
0059B6r 2               
0059B6r 2               ; <inline>:0:0 in `main`
0059B6r 2               @OPCODE_2942:   ; [c64_ir] Drop
0059B6r 2  CA               dex
0059B7r 2  CA               dex
0059B8r 2               
0059B8r 2               ; src/prelude.fth:41:13 in `cells`
0059B8r 2               @OPCODE_2943:   ; [c64_ir] Add
0059B8r 2                   ; 21
0059B8r 2  CA               dex
0059B9r 2  CA               dex
0059BAr 2  18               clc
0059BBr 2  B5 00            lda $00,x
0059BDr 2  75 02            adc $02,x
0059BFr 2  95 00            sta $00,x
0059C1r 2  B5 01            lda $01,x
0059C3r 2  75 03            adc $03,x
0059C5r 2  95 01            sta $01,x
0059C7r 2               
0059C7r 2               ; <inline>:0:0 in `main`
0059C7r 2               @OPCODE_2944:   ; [c64_ir] AltPop
0059C7r 2  E8               inx
0059C8r 2  E8               inx
0059C9r 2  68               pla
0059CAr 2  95 00            sta $00,x
0059CCr 2  68               pla
0059CDr 2  95 01            sta $01,x
0059CFr 2               
0059CFr 2               ; <inline>:0:0 in `main`
0059CFr 2               @OPCODE_2945:   ; [c64_ir] Drop
0059CFr 2  CA               dex
0059D0r 2  CA               dex
0059D1r 2               
0059D1r 2               ; snake.fth:45:9 in `snake-y`
0059D1r 2               @OPCODE_2946:   ; [c64_ir] PushLiteral(-27666)
0059D1r 2  E8               inx
0059D2r 2  E8               inx
0059D3r 2  A9 EE            lda #238
0059D5r 2  95 00            sta $00,x
0059D7r 2  A9 93            lda #147
0059D9r 2  95 01            sta $01,x
0059DBr 2               
0059DBr 2               ; snake.fth:45:22 in `snake-y`
0059DBr 2               @OPCODE_2947:   ; [c64_ir] Add
0059DBr 2                   ; 21
0059DBr 2  CA               dex
0059DCr 2  CA               dex
0059DDr 2  18               clc
0059DEr 2  B5 00            lda $00,x
0059E0r 2  75 02            adc $02,x
0059E2r 2  95 00            sta $00,x
0059E4r 2  B5 01            lda $01,x
0059E6r 2  75 03            adc $03,x
0059E8r 2  95 01            sta $01,x
0059EAr 2               
0059EAr 2               ; <inline>:0:0 in `main`
0059EAr 2               @OPCODE_2948:   ; [c64_ir] AltPop
0059EAr 2  E8               inx
0059EBr 2  E8               inx
0059ECr 2  68               pla
0059EDr 2  95 00            sta $00,x
0059EFr 2  68               pla
0059F0r 2  95 01            sta $01,x
0059F2r 2               
0059F2r 2               ; <inline>:0:0 in `main`
0059F2r 2               @OPCODE_2949:   ; [c64_ir] Drop
0059F2r 2  CA               dex
0059F3r 2  CA               dex
0059F4r 2               
0059F4r 2               ; snake.fth:142:33 in `move-snake-tail`
0059F4r 2               @OPCODE_2950:   ; [c64_ir] Store
0059F4r 2  CA               dex
0059F5r 2  CA               dex
0059F6r 2  CA               dex
0059F7r 2  CA               dex
0059F8r 2  B5 02            lda $02,x
0059FAr 2  81 04            sta ($04,x)
0059FCr 2                   ; TODO high byte
0059FCr 2               
0059FCr 2               ; snake.fth:143:3 in `move-snake-tail`
0059FCr 2               @OPCODE_2951:   ; [c64_ir] PushLiteral(1)
0059FCr 2  E8               inx
0059FDr 2  E8               inx
0059FEr 2  A9 01            lda #1
005A00r 2  95 00            sta $00,x
005A02r 2  A9 00            lda #0
005A04r 2  95 01            sta $01,x
005A06r 2               
005A06r 2               ; <inline>:0:0 in `main`
005A06r 2               @OPCODE_2952:   ; [c64_ir] PushLiteral(7777)
005A06r 2  E8               inx
005A07r 2  E8               inx
005A08r 2  A9 61            lda #97
005A0Ar 2  95 00            sta $00,x
005A0Cr 2  A9 1E            lda #30
005A0Er 2  95 01            sta $01,x
005A10r 2               
005A10r 2               ; <inline>:0:0 in `main`
005A10r 2               @OPCODE_2953:   ; [c64_ir] AltPush
005A10r 2  CA               dex
005A11r 2  CA               dex
005A12r 2  B5 03            lda $03,x
005A14r 2  48               pha
005A15r 2  B5 02            lda $02,x
005A17r 2  48               pha
005A18r 2               
005A18r 2               ; src/prelude.fth:35:13 in `-loopimpl`
005A18r 2               @OPCODE_2954:   ; [c64_ir] AltPop
005A18r 2  E8               inx
005A19r 2  E8               inx
005A1Ar 2  68               pla
005A1Br 2  95 00            sta $00,x
005A1Dr 2  68               pla
005A1Er 2  95 01            sta $01,x
005A20r 2               
005A20r 2               ; <inline>:0:0 in `main`
005A20r 2               @OPCODE_2955:   ; [c64_ir] PushLiteral(7777)
005A20r 2  E8               inx
005A21r 2  E8               inx
005A22r 2  A9 61            lda #97
005A24r 2  95 00            sta $00,x
005A26r 2  A9 1E            lda #30
005A28r 2  95 01            sta $01,x
005A2Ar 2               
005A2Ar 2               ; <inline>:0:0 in `main`
005A2Ar 2               @OPCODE_2956:   ; [c64_ir] AltPush
005A2Ar 2  CA               dex
005A2Br 2  CA               dex
005A2Cr 2  B5 03            lda $03,x
005A2Er 2  48               pha
005A2Fr 2  B5 02            lda $02,x
005A31r 2  48               pha
005A32r 2               
005A32r 2               ; src/prelude.fth:3:10 in `swap`
005A32r 2               @OPCODE_2957:   ; [c64_ir] AltPush
005A32r 2  CA               dex
005A33r 2  CA               dex
005A34r 2  B5 03            lda $03,x
005A36r 2  48               pha
005A37r 2  B5 02            lda $02,x
005A39r 2  48               pha
005A3Ar 2               
005A3Ar 2               ; src/prelude.fth:3:13 in `swap`
005A3Ar 2               @OPCODE_2958:   ; [c64_ir] TempStore
005A3Ar 2  CA               dex
005A3Br 2  CA               dex
005A3Cr 2  B5 03            lda $03,x
005A3Er 2  85 96            sta TEMP_PAX2
005A40r 2  B5 02            lda $02,x
005A42r 2  85 95            sta TEMP_PAX1
005A44r 2               
005A44r 2               ; src/prelude.fth:3:19 in `swap`
005A44r 2               @OPCODE_2959:   ; [c64_ir] AltPop
005A44r 2  E8               inx
005A45r 2  E8               inx
005A46r 2  68               pla
005A47r 2  95 00            sta $00,x
005A49r 2  68               pla
005A4Ar 2  95 01            sta $01,x
005A4Cr 2               
005A4Cr 2               ; src/prelude.fth:3:22 in `swap`
005A4Cr 2               @OPCODE_2960:   ; [c64_ir] TempLoad
005A4Cr 2  E8               inx
005A4Dr 2  E8               inx
005A4Er 2  A5 95            lda TEMP_PAX1
005A50r 2  95 00            sta $00,x
005A52r 2  A5 96            lda TEMP_PAX2
005A54r 2  95 01            sta $01,x
005A56r 2               
005A56r 2               ; <inline>:0:0 in `main`
005A56r 2               @OPCODE_2961:   ; [c64_ir] AltPop
005A56r 2  E8               inx
005A57r 2  E8               inx
005A58r 2  68               pla
005A59r 2  95 00            sta $00,x
005A5Br 2  68               pla
005A5Cr 2  95 01            sta $01,x
005A5Er 2               
005A5Er 2               ; <inline>:0:0 in `main`
005A5Er 2               @OPCODE_2962:   ; [c64_ir] Drop
005A5Er 2  CA               dex
005A5Fr 2  CA               dex
005A60r 2               
005A60r 2               ; src/prelude.fth:35:21 in `-loopimpl`
005A60r 2               @OPCODE_2963:   ; [c64_ir] AltPop
005A60r 2  E8               inx
005A61r 2  E8               inx
005A62r 2  68               pla
005A63r 2  95 00            sta $00,x
005A65r 2  68               pla
005A66r 2  95 01            sta $01,x
005A68r 2               
005A68r 2               ; <inline>:0:0 in `main`
005A68r 2               @OPCODE_2964:   ; [c64_ir] PushLiteral(7777)
005A68r 2  E8               inx
005A69r 2  E8               inx
005A6Ar 2  A9 61            lda #97
005A6Cr 2  95 00            sta $00,x
005A6Er 2  A9 1E            lda #30
005A70r 2  95 01            sta $01,x
005A72r 2               
005A72r 2               ; <inline>:0:0 in `main`
005A72r 2               @OPCODE_2965:   ; [c64_ir] AltPush
005A72r 2  CA               dex
005A73r 2  CA               dex
005A74r 2  B5 03            lda $03,x
005A76r 2  48               pha
005A77r 2  B5 02            lda $02,x
005A79r 2  48               pha
005A7Ar 2               
005A7Ar 2               ; src/prelude.fth:3:10 in `swap`
005A7Ar 2               @OPCODE_2966:   ; [c64_ir] AltPush
005A7Ar 2  CA               dex
005A7Br 2  CA               dex
005A7Cr 2  B5 03            lda $03,x
005A7Er 2  48               pha
005A7Fr 2  B5 02            lda $02,x
005A81r 2  48               pha
005A82r 2               
005A82r 2               ; src/prelude.fth:3:13 in `swap`
005A82r 2               @OPCODE_2967:   ; [c64_ir] TempStore
005A82r 2  CA               dex
005A83r 2  CA               dex
005A84r 2  B5 03            lda $03,x
005A86r 2  85 96            sta TEMP_PAX2
005A88r 2  B5 02            lda $02,x
005A8Ar 2  85 95            sta TEMP_PAX1
005A8Cr 2               
005A8Cr 2               ; src/prelude.fth:3:19 in `swap`
005A8Cr 2               @OPCODE_2968:   ; [c64_ir] AltPop
005A8Cr 2  E8               inx
005A8Dr 2  E8               inx
005A8Er 2  68               pla
005A8Fr 2  95 00            sta $00,x
005A91r 2  68               pla
005A92r 2  95 01            sta $01,x
005A94r 2               
005A94r 2               ; src/prelude.fth:3:22 in `swap`
005A94r 2               @OPCODE_2969:   ; [c64_ir] TempLoad
005A94r 2  E8               inx
005A95r 2  E8               inx
005A96r 2  A5 95            lda TEMP_PAX1
005A98r 2  95 00            sta $00,x
005A9Ar 2  A5 96            lda TEMP_PAX2
005A9Cr 2  95 01            sta $01,x
005A9Er 2               
005A9Er 2               ; <inline>:0:0 in `main`
005A9Er 2               @OPCODE_2970:   ; [c64_ir] AltPop
005A9Er 2  E8               inx
005A9Fr 2  E8               inx
005AA0r 2  68               pla
005AA1r 2  95 00            sta $00,x
005AA3r 2  68               pla
005AA4r 2  95 01            sta $01,x
005AA6r 2               
005AA6r 2               ; <inline>:0:0 in `main`
005AA6r 2               @OPCODE_2971:   ; [c64_ir] Drop
005AA6r 2  CA               dex
005AA7r 2  CA               dex
005AA8r 2               
005AA8r 2               ; src/prelude.fth:35:29 in `-loopimpl`
005AA8r 2               @OPCODE_2972:   ; [c64_ir] AltPop
005AA8r 2  E8               inx
005AA9r 2  E8               inx
005AAAr 2  68               pla
005AABr 2  95 00            sta $00,x
005AADr 2  68               pla
005AAEr 2  95 01            sta $01,x
005AB0r 2               
005AB0r 2               ; <inline>:0:0 in `main`
005AB0r 2               @OPCODE_2973:   ; [c64_ir] PushLiteral(7777)
005AB0r 2  E8               inx
005AB1r 2  E8               inx
005AB2r 2  A9 61            lda #97
005AB4r 2  95 00            sta $00,x
005AB6r 2  A9 1E            lda #30
005AB8r 2  95 01            sta $01,x
005ABAr 2               
005ABAr 2               ; <inline>:0:0 in `main`
005ABAr 2               @OPCODE_2974:   ; [c64_ir] AltPush
005ABAr 2  CA               dex
005ABBr 2  CA               dex
005ABCr 2  B5 03            lda $03,x
005ABEr 2  48               pha
005ABFr 2  B5 02            lda $02,x
005AC1r 2  48               pha
005AC2r 2               
005AC2r 2               ; src/prelude.fth:3:10 in `swap`
005AC2r 2               @OPCODE_2975:   ; [c64_ir] AltPush
005AC2r 2  CA               dex
005AC3r 2  CA               dex
005AC4r 2  B5 03            lda $03,x
005AC6r 2  48               pha
005AC7r 2  B5 02            lda $02,x
005AC9r 2  48               pha
005ACAr 2               
005ACAr 2               ; src/prelude.fth:3:13 in `swap`
005ACAr 2               @OPCODE_2976:   ; [c64_ir] TempStore
005ACAr 2  CA               dex
005ACBr 2  CA               dex
005ACCr 2  B5 03            lda $03,x
005ACEr 2  85 96            sta TEMP_PAX2
005AD0r 2  B5 02            lda $02,x
005AD2r 2  85 95            sta TEMP_PAX1
005AD4r 2               
005AD4r 2               ; src/prelude.fth:3:19 in `swap`
005AD4r 2               @OPCODE_2977:   ; [c64_ir] AltPop
005AD4r 2  E8               inx
005AD5r 2  E8               inx
005AD6r 2  68               pla
005AD7r 2  95 00            sta $00,x
005AD9r 2  68               pla
005ADAr 2  95 01            sta $01,x
005ADCr 2               
005ADCr 2               ; src/prelude.fth:3:22 in `swap`
005ADCr 2               @OPCODE_2978:   ; [c64_ir] TempLoad
005ADCr 2  E8               inx
005ADDr 2  E8               inx
005ADEr 2  A5 95            lda TEMP_PAX1
005AE0r 2  95 00            sta $00,x
005AE2r 2  A5 96            lda TEMP_PAX2
005AE4r 2  95 01            sta $01,x
005AE6r 2               
005AE6r 2               ; <inline>:0:0 in `main`
005AE6r 2               @OPCODE_2979:   ; [c64_ir] AltPop
005AE6r 2  E8               inx
005AE7r 2  E8               inx
005AE8r 2  68               pla
005AE9r 2  95 00            sta $00,x
005AEBr 2  68               pla
005AECr 2  95 01            sta $01,x
005AEEr 2               
005AEEr 2               ; <inline>:0:0 in `main`
005AEEr 2               @OPCODE_2980:   ; [c64_ir] Drop
005AEEr 2  CA               dex
005AEFr 2  CA               dex
005AF0r 2               
005AF0r 2               ; <inline>:0:0 in `main`
005AF0r 2               @OPCODE_2981:   ; [c64_ir] PushLiteral(7777)
005AF0r 2  E8               inx
005AF1r 2  E8               inx
005AF2r 2  A9 61            lda #97
005AF4r 2  95 00            sta $00,x
005AF6r 2  A9 1E            lda #30
005AF8r 2  95 01            sta $01,x
005AFAr 2               
005AFAr 2               ; <inline>:0:0 in `main`
005AFAr 2               @OPCODE_2982:   ; [c64_ir] AltPush
005AFAr 2  CA               dex
005AFBr 2  CA               dex
005AFCr 2  B5 03            lda $03,x
005AFEr 2  48               pha
005AFFr 2  B5 02            lda $02,x
005B01r 2  48               pha
005B02r 2               
005B02r 2               ; <inline>:0:0 in `main`
005B02r 2               @OPCODE_2983:   ; [c64_ir] PushLiteral(7777)
005B02r 2  E8               inx
005B03r 2  E8               inx
005B04r 2  A9 61            lda #97
005B06r 2  95 00            sta $00,x
005B08r 2  A9 1E            lda #30
005B0Ar 2  95 01            sta $01,x
005B0Cr 2               
005B0Cr 2               ; <inline>:0:0 in `main`
005B0Cr 2               @OPCODE_2984:   ; [c64_ir] AltPush
005B0Cr 2  CA               dex
005B0Dr 2  CA               dex
005B0Er 2  B5 03            lda $03,x
005B10r 2  48               pha
005B11r 2  B5 02            lda $02,x
005B13r 2  48               pha
005B14r 2               
005B14r 2               ; <inline>:0:0 in `main`
005B14r 2               @OPCODE_2985:   ; [c64_ir] PushLiteral(7777)
005B14r 2  E8               inx
005B15r 2  E8               inx
005B16r 2  A9 61            lda #97
005B18r 2  95 00            sta $00,x
005B1Ar 2  A9 1E            lda #30
005B1Cr 2  95 01            sta $01,x
005B1Er 2               
005B1Er 2               ; <inline>:0:0 in `main`
005B1Er 2               @OPCODE_2986:   ; [c64_ir] AltPush
005B1Er 2  CA               dex
005B1Fr 2  CA               dex
005B20r 2  B5 03            lda $03,x
005B22r 2  48               pha
005B23r 2  B5 02            lda $02,x
005B25r 2  48               pha
005B26r 2               
005B26r 2               ; src/prelude.fth:14:12 in `invert`
005B26r 2               @OPCODE_2987:   ; [c64_ir] PushLiteral(-1)
005B26r 2  E8               inx
005B27r 2  E8               inx
005B28r 2  A9 FF            lda #255
005B2Ar 2  95 00            sta $00,x
005B2Cr 2  A9 FF            lda #255
005B2Er 2  95 01            sta $01,x
005B30r 2               
005B30r 2               ; src/prelude.fth:14:15 in `invert`
005B30r 2               @OPCODE_2988:   ; [c64_ir] Nand
005B30r 2                   ; 26
005B30r 2  CA               dex
005B31r 2  CA               dex
005B32r 2  B5 00            lda $00,x
005B34r 2  35 02            and $02,x
005B36r 2  49 FF            eor #$ff
005B38r 2  95 00            sta $00,x
005B3Ar 2  B5 01            lda $01,x
005B3Cr 2  35 03            and $03,x
005B3Er 2  49 FF            eor #$ff
005B40r 2  95 01            sta $01,x
005B42r 2               
005B42r 2               ; <inline>:0:0 in `main`
005B42r 2               @OPCODE_2989:   ; [c64_ir] AltPop
005B42r 2  E8               inx
005B43r 2  E8               inx
005B44r 2  68               pla
005B45r 2  95 00            sta $00,x
005B47r 2  68               pla
005B48r 2  95 01            sta $01,x
005B4Ar 2               
005B4Ar 2               ; <inline>:0:0 in `main`
005B4Ar 2               @OPCODE_2990:   ; [c64_ir] Drop
005B4Ar 2  CA               dex
005B4Br 2  CA               dex
005B4Cr 2               
005B4Cr 2               ; src/prelude.fth:15:19 in `negate`
005B4Cr 2               @OPCODE_2991:   ; [c64_ir] PushLiteral(1)
005B4Cr 2  E8               inx
005B4Dr 2  E8               inx
005B4Er 2  A9 01            lda #1
005B50r 2  95 00            sta $00,x
005B52r 2  A9 00            lda #0
005B54r 2  95 01            sta $01,x
005B56r 2               
005B56r 2               ; src/prelude.fth:15:21 in `negate`
005B56r 2               @OPCODE_2992:   ; [c64_ir] Add
005B56r 2                   ; 21
005B56r 2  CA               dex
005B57r 2  CA               dex
005B58r 2  18               clc
005B59r 2  B5 00            lda $00,x
005B5Br 2  75 02            adc $02,x
005B5Dr 2  95 00            sta $00,x
005B5Fr 2  B5 01            lda $01,x
005B61r 2  75 03            adc $03,x
005B63r 2  95 01            sta $01,x
005B65r 2               
005B65r 2               ; <inline>:0:0 in `main`
005B65r 2               @OPCODE_2993:   ; [c64_ir] AltPop
005B65r 2  E8               inx
005B66r 2  E8               inx
005B67r 2  68               pla
005B68r 2  95 00            sta $00,x
005B6Ar 2  68               pla
005B6Br 2  95 01            sta $01,x
005B6Dr 2               
005B6Dr 2               ; <inline>:0:0 in `main`
005B6Dr 2               @OPCODE_2994:   ; [c64_ir] Drop
005B6Dr 2  CA               dex
005B6Er 2  CA               dex
005B6Fr 2               
005B6Fr 2               ; src/prelude.fth:16:19 in `-`
005B6Fr 2               @OPCODE_2995:   ; [c64_ir] Add
005B6Fr 2                   ; 21
005B6Fr 2  CA               dex
005B70r 2  CA               dex
005B71r 2  18               clc
005B72r 2  B5 00            lda $00,x
005B74r 2  75 02            adc $02,x
005B76r 2  95 00            sta $00,x
005B78r 2  B5 01            lda $01,x
005B7Ar 2  75 03            adc $03,x
005B7Cr 2  95 01            sta $01,x
005B7Er 2               
005B7Er 2               ; <inline>:0:0 in `main`
005B7Er 2               @OPCODE_2996:   ; [c64_ir] AltPop
005B7Er 2  E8               inx
005B7Fr 2  E8               inx
005B80r 2  68               pla
005B81r 2  95 00            sta $00,x
005B83r 2  68               pla
005B84r 2  95 01            sta $01,x
005B86r 2               
005B86r 2               ; <inline>:0:0 in `main`
005B86r 2               @OPCODE_2997:   ; [c64_ir] Drop
005B86r 2  CA               dex
005B87r 2  CA               dex
005B88r 2               
005B88r 2               ; <inline>:0:0 in `main`
005B88r 2               @OPCODE_2998:   ; [c64_ir] PushLiteral(7777)
005B88r 2  E8               inx
005B89r 2  E8               inx
005B8Ar 2  A9 61            lda #97
005B8Cr 2  95 00            sta $00,x
005B8Er 2  A9 1E            lda #30
005B90r 2  95 01            sta $01,x
005B92r 2               
005B92r 2               ; <inline>:0:0 in `main`
005B92r 2               @OPCODE_2999:   ; [c64_ir] AltPush
005B92r 2  CA               dex
005B93r 2  CA               dex
005B94r 2  B5 03            lda $03,x
005B96r 2  48               pha
005B97r 2  B5 02            lda $02,x
005B99r 2  48               pha
005B9Ar 2               
005B9Ar 2               ; <inline>:0:0 in `main`
005B9Ar 2               @OPCODE_3000:   ; [c64_ir] PushLiteral(7777)
005B9Ar 2  E8               inx
005B9Br 2  E8               inx
005B9Cr 2  A9 61            lda #97
005B9Er 2  95 00            sta $00,x
005BA0r 2  A9 1E            lda #30
005BA2r 2  95 01            sta $01,x
005BA4r 2               
005BA4r 2               ; <inline>:0:0 in `main`
005BA4r 2               @OPCODE_3001:   ; [c64_ir] AltPush
005BA4r 2  CA               dex
005BA5r 2  CA               dex
005BA6r 2  B5 03            lda $03,x
005BA8r 2  48               pha
005BA9r 2  B5 02            lda $02,x
005BABr 2  48               pha
005BACr 2               
005BACr 2               ; src/prelude.fth:4:10 in `over`
005BACr 2               @OPCODE_3002:   ; [c64_ir] AltPush
005BACr 2  CA               dex
005BADr 2  CA               dex
005BAEr 2  B5 03            lda $03,x
005BB0r 2  48               pha
005BB1r 2  B5 02            lda $02,x
005BB3r 2  48               pha
005BB4r 2               
005BB4r 2               ; src/prelude.fth:4:13 in `over`
005BB4r 2               @OPCODE_3003:   ; [c64_ir] TempStore
005BB4r 2  CA               dex
005BB5r 2  CA               dex
005BB6r 2  B5 03            lda $03,x
005BB8r 2  85 96            sta TEMP_PAX2
005BBAr 2  B5 02            lda $02,x
005BBCr 2  85 95            sta TEMP_PAX1
005BBEr 2               
005BBEr 2               ; src/prelude.fth:4:19 in `over`
005BBEr 2               @OPCODE_3004:   ; [c64_ir] TempLoad
005BBEr 2  E8               inx
005BBFr 2  E8               inx
005BC0r 2  A5 95            lda TEMP_PAX1
005BC2r 2  95 00            sta $00,x
005BC4r 2  A5 96            lda TEMP_PAX2
005BC6r 2  95 01            sta $01,x
005BC8r 2               
005BC8r 2               ; src/prelude.fth:4:25 in `over`
005BC8r 2               @OPCODE_3005:   ; [c64_ir] AltPop
005BC8r 2  E8               inx
005BC9r 2  E8               inx
005BCAr 2  68               pla
005BCBr 2  95 00            sta $00,x
005BCDr 2  68               pla
005BCEr 2  95 01            sta $01,x
005BD0r 2               
005BD0r 2               ; src/prelude.fth:4:28 in `over`
005BD0r 2               @OPCODE_3006:   ; [c64_ir] TempLoad
005BD0r 2  E8               inx
005BD1r 2  E8               inx
005BD2r 2  A5 95            lda TEMP_PAX1
005BD4r 2  95 00            sta $00,x
005BD6r 2  A5 96            lda TEMP_PAX2
005BD8r 2  95 01            sta $01,x
005BDAr 2               
005BDAr 2               ; <inline>:0:0 in `main`
005BDAr 2               @OPCODE_3007:   ; [c64_ir] AltPop
005BDAr 2  E8               inx
005BDBr 2  E8               inx
005BDCr 2  68               pla
005BDDr 2  95 00            sta $00,x
005BDFr 2  68               pla
005BE0r 2  95 01            sta $01,x
005BE2r 2               
005BE2r 2               ; <inline>:0:0 in `main`
005BE2r 2               @OPCODE_3008:   ; [c64_ir] Drop
005BE2r 2  CA               dex
005BE3r 2  CA               dex
005BE4r 2               
005BE4r 2               ; <inline>:0:0 in `main`
005BE4r 2               @OPCODE_3009:   ; [c64_ir] PushLiteral(7777)
005BE4r 2  E8               inx
005BE5r 2  E8               inx
005BE6r 2  A9 61            lda #97
005BE8r 2  95 00            sta $00,x
005BEAr 2  A9 1E            lda #30
005BECr 2  95 01            sta $01,x
005BEEr 2               
005BEEr 2               ; <inline>:0:0 in `main`
005BEEr 2               @OPCODE_3010:   ; [c64_ir] AltPush
005BEEr 2  CA               dex
005BEFr 2  CA               dex
005BF0r 2  B5 03            lda $03,x
005BF2r 2  48               pha
005BF3r 2  B5 02            lda $02,x
005BF5r 2  48               pha
005BF6r 2               
005BF6r 2               ; src/prelude.fth:4:10 in `over`
005BF6r 2               @OPCODE_3011:   ; [c64_ir] AltPush
005BF6r 2  CA               dex
005BF7r 2  CA               dex
005BF8r 2  B5 03            lda $03,x
005BFAr 2  48               pha
005BFBr 2  B5 02            lda $02,x
005BFDr 2  48               pha
005BFEr 2               
005BFEr 2               ; src/prelude.fth:4:13 in `over`
005BFEr 2               @OPCODE_3012:   ; [c64_ir] TempStore
005BFEr 2  CA               dex
005BFFr 2  CA               dex
005C00r 2  B5 03            lda $03,x
005C02r 2  85 96            sta TEMP_PAX2
005C04r 2  B5 02            lda $02,x
005C06r 2  85 95            sta TEMP_PAX1
005C08r 2               
005C08r 2               ; src/prelude.fth:4:19 in `over`
005C08r 2               @OPCODE_3013:   ; [c64_ir] TempLoad
005C08r 2  E8               inx
005C09r 2  E8               inx
005C0Ar 2  A5 95            lda TEMP_PAX1
005C0Cr 2  95 00            sta $00,x
005C0Er 2  A5 96            lda TEMP_PAX2
005C10r 2  95 01            sta $01,x
005C12r 2               
005C12r 2               ; src/prelude.fth:4:25 in `over`
005C12r 2               @OPCODE_3014:   ; [c64_ir] AltPop
005C12r 2  E8               inx
005C13r 2  E8               inx
005C14r 2  68               pla
005C15r 2  95 00            sta $00,x
005C17r 2  68               pla
005C18r 2  95 01            sta $01,x
005C1Ar 2               
005C1Ar 2               ; src/prelude.fth:4:28 in `over`
005C1Ar 2               @OPCODE_3015:   ; [c64_ir] TempLoad
005C1Ar 2  E8               inx
005C1Br 2  E8               inx
005C1Cr 2  A5 95            lda TEMP_PAX1
005C1Er 2  95 00            sta $00,x
005C20r 2  A5 96            lda TEMP_PAX2
005C22r 2  95 01            sta $01,x
005C24r 2               
005C24r 2               ; <inline>:0:0 in `main`
005C24r 2               @OPCODE_3016:   ; [c64_ir] AltPop
005C24r 2  E8               inx
005C25r 2  E8               inx
005C26r 2  68               pla
005C27r 2  95 00            sta $00,x
005C29r 2  68               pla
005C2Ar 2  95 01            sta $01,x
005C2Cr 2               
005C2Cr 2               ; <inline>:0:0 in `main`
005C2Cr 2               @OPCODE_3017:   ; [c64_ir] Drop
005C2Cr 2  CA               dex
005C2Dr 2  CA               dex
005C2Er 2               
005C2Er 2               ; <inline>:0:0 in `main`
005C2Er 2               @OPCODE_3018:   ; [c64_ir] AltPop
005C2Er 2  E8               inx
005C2Fr 2  E8               inx
005C30r 2  68               pla
005C31r 2  95 00            sta $00,x
005C33r 2  68               pla
005C34r 2  95 01            sta $01,x
005C36r 2               
005C36r 2               ; <inline>:0:0 in `main`
005C36r 2               @OPCODE_3019:   ; [c64_ir] Drop
005C36r 2  CA               dex
005C37r 2  CA               dex
005C38r 2               
005C38r 2               ; src/prelude.fth:35:44 in `-loopimpl`
005C38r 2               @OPCODE_3020:   ; [c64_ir] AltPush
005C38r 2  CA               dex
005C39r 2  CA               dex
005C3Ar 2  B5 03            lda $03,x
005C3Cr 2  48               pha
005C3Dr 2  B5 02            lda $02,x
005C3Fr 2  48               pha
005C40r 2               
005C40r 2               ; src/prelude.fth:35:47 in `-loopimpl`
005C40r 2               @OPCODE_3021:   ; [c64_ir] AltPush
005C40r 2  CA               dex
005C41r 2  CA               dex
005C42r 2  B5 03            lda $03,x
005C44r 2  48               pha
005C45r 2  B5 02            lda $02,x
005C47r 2  48               pha
005C48r 2               
005C48r 2               ; <inline>:0:0 in `main`
005C48r 2               @OPCODE_3022:   ; [c64_ir] PushLiteral(7777)
005C48r 2  E8               inx
005C49r 2  E8               inx
005C4Ar 2  A9 61            lda #97
005C4Cr 2  95 00            sta $00,x
005C4Er 2  A9 1E            lda #30
005C50r 2  95 01            sta $01,x
005C52r 2               
005C52r 2               ; <inline>:0:0 in `main`
005C52r 2               @OPCODE_3023:   ; [c64_ir] AltPush
005C52r 2  CA               dex
005C53r 2  CA               dex
005C54r 2  B5 03            lda $03,x
005C56r 2  48               pha
005C57r 2  B5 02            lda $02,x
005C59r 2  48               pha
005C5Ar 2               
005C5Ar 2               ; <inline>:0:0 in `main`
005C5Ar 2               @OPCODE_3024:   ; [c64_ir] PushLiteral(7777)
005C5Ar 2  E8               inx
005C5Br 2  E8               inx
005C5Cr 2  A9 61            lda #97
005C5Er 2  95 00            sta $00,x
005C60r 2  A9 1E            lda #30
005C62r 2  95 01            sta $01,x
005C64r 2               
005C64r 2               ; <inline>:0:0 in `main`
005C64r 2               @OPCODE_3025:   ; [c64_ir] AltPush
005C64r 2  CA               dex
005C65r 2  CA               dex
005C66r 2  B5 03            lda $03,x
005C68r 2  48               pha
005C69r 2  B5 02            lda $02,x
005C6Br 2  48               pha
005C6Cr 2               
005C6Cr 2               ; <inline>:0:0 in `main`
005C6Cr 2               @OPCODE_3026:   ; [c64_ir] PushLiteral(7777)
005C6Cr 2  E8               inx
005C6Dr 2  E8               inx
005C6Er 2  A9 61            lda #97
005C70r 2  95 00            sta $00,x
005C72r 2  A9 1E            lda #30
005C74r 2  95 01            sta $01,x
005C76r 2               
005C76r 2               ; <inline>:0:0 in `main`
005C76r 2               @OPCODE_3027:   ; [c64_ir] AltPush
005C76r 2  CA               dex
005C77r 2  CA               dex
005C78r 2  B5 03            lda $03,x
005C7Ar 2  48               pha
005C7Br 2  B5 02            lda $02,x
005C7Dr 2  48               pha
005C7Er 2               
005C7Er 2               ; <inline>:0:0 in `main`
005C7Er 2               @OPCODE_3028:   ; [c64_ir] PushLiteral(7777)
005C7Er 2  E8               inx
005C7Fr 2  E8               inx
005C80r 2  A9 61            lda #97
005C82r 2  95 00            sta $00,x
005C84r 2  A9 1E            lda #30
005C86r 2  95 01            sta $01,x
005C88r 2               
005C88r 2               ; <inline>:0:0 in `main`
005C88r 2               @OPCODE_3029:   ; [c64_ir] AltPush
005C88r 2  CA               dex
005C89r 2  CA               dex
005C8Ar 2  B5 03            lda $03,x
005C8Cr 2  48               pha
005C8Dr 2  B5 02            lda $02,x
005C8Fr 2  48               pha
005C90r 2               
005C90r 2               ; src/prelude.fth:14:12 in `invert`
005C90r 2               @OPCODE_3030:   ; [c64_ir] PushLiteral(-1)
005C90r 2  E8               inx
005C91r 2  E8               inx
005C92r 2  A9 FF            lda #255
005C94r 2  95 00            sta $00,x
005C96r 2  A9 FF            lda #255
005C98r 2  95 01            sta $01,x
005C9Ar 2               
005C9Ar 2               ; src/prelude.fth:14:15 in `invert`
005C9Ar 2               @OPCODE_3031:   ; [c64_ir] Nand
005C9Ar 2                   ; 26
005C9Ar 2  CA               dex
005C9Br 2  CA               dex
005C9Cr 2  B5 00            lda $00,x
005C9Er 2  35 02            and $02,x
005CA0r 2  49 FF            eor #$ff
005CA2r 2  95 00            sta $00,x
005CA4r 2  B5 01            lda $01,x
005CA6r 2  35 03            and $03,x
005CA8r 2  49 FF            eor #$ff
005CAAr 2  95 01            sta $01,x
005CACr 2               
005CACr 2               ; <inline>:0:0 in `main`
005CACr 2               @OPCODE_3032:   ; [c64_ir] AltPop
005CACr 2  E8               inx
005CADr 2  E8               inx
005CAEr 2  68               pla
005CAFr 2  95 00            sta $00,x
005CB1r 2  68               pla
005CB2r 2  95 01            sta $01,x
005CB4r 2               
005CB4r 2               ; <inline>:0:0 in `main`
005CB4r 2               @OPCODE_3033:   ; [c64_ir] Drop
005CB4r 2  CA               dex
005CB5r 2  CA               dex
005CB6r 2               
005CB6r 2               ; src/prelude.fth:15:19 in `negate`
005CB6r 2               @OPCODE_3034:   ; [c64_ir] PushLiteral(1)
005CB6r 2  E8               inx
005CB7r 2  E8               inx
005CB8r 2  A9 01            lda #1
005CBAr 2  95 00            sta $00,x
005CBCr 2  A9 00            lda #0
005CBEr 2  95 01            sta $01,x
005CC0r 2               
005CC0r 2               ; src/prelude.fth:15:21 in `negate`
005CC0r 2               @OPCODE_3035:   ; [c64_ir] Add
005CC0r 2                   ; 21
005CC0r 2  CA               dex
005CC1r 2  CA               dex
005CC2r 2  18               clc
005CC3r 2  B5 00            lda $00,x
005CC5r 2  75 02            adc $02,x
005CC7r 2  95 00            sta $00,x
005CC9r 2  B5 01            lda $01,x
005CCBr 2  75 03            adc $03,x
005CCDr 2  95 01            sta $01,x
005CCFr 2               
005CCFr 2               ; <inline>:0:0 in `main`
005CCFr 2               @OPCODE_3036:   ; [c64_ir] AltPop
005CCFr 2  E8               inx
005CD0r 2  E8               inx
005CD1r 2  68               pla
005CD2r 2  95 00            sta $00,x
005CD4r 2  68               pla
005CD5r 2  95 01            sta $01,x
005CD7r 2               
005CD7r 2               ; <inline>:0:0 in `main`
005CD7r 2               @OPCODE_3037:   ; [c64_ir] Drop
005CD7r 2  CA               dex
005CD8r 2  CA               dex
005CD9r 2               
005CD9r 2               ; src/prelude.fth:16:19 in `-`
005CD9r 2               @OPCODE_3038:   ; [c64_ir] Add
005CD9r 2                   ; 21
005CD9r 2  CA               dex
005CDAr 2  CA               dex
005CDBr 2  18               clc
005CDCr 2  B5 00            lda $00,x
005CDEr 2  75 02            adc $02,x
005CE0r 2  95 00            sta $00,x
005CE2r 2  B5 01            lda $01,x
005CE4r 2  75 03            adc $03,x
005CE6r 2  95 01            sta $01,x
005CE8r 2               
005CE8r 2               ; <inline>:0:0 in `main`
005CE8r 2               @OPCODE_3039:   ; [c64_ir] AltPop
005CE8r 2  E8               inx
005CE9r 2  E8               inx
005CEAr 2  68               pla
005CEBr 2  95 00            sta $00,x
005CEDr 2  68               pla
005CEEr 2  95 01            sta $01,x
005CF0r 2               
005CF0r 2               ; <inline>:0:0 in `main`
005CF0r 2               @OPCODE_3040:   ; [c64_ir] Drop
005CF0r 2  CA               dex
005CF1r 2  CA               dex
005CF2r 2               
005CF2r 2               ; <inline>:0:0 in `main`
005CF2r 2               @OPCODE_3041:   ; [c64_ir] PushLiteral(7777)
005CF2r 2  E8               inx
005CF3r 2  E8               inx
005CF4r 2  A9 61            lda #97
005CF6r 2  95 00            sta $00,x
005CF8r 2  A9 1E            lda #30
005CFAr 2  95 01            sta $01,x
005CFCr 2               
005CFCr 2               ; <inline>:0:0 in `main`
005CFCr 2               @OPCODE_3042:   ; [c64_ir] AltPush
005CFCr 2  CA               dex
005CFDr 2  CA               dex
005CFEr 2  B5 03            lda $03,x
005D00r 2  48               pha
005D01r 2  B5 02            lda $02,x
005D03r 2  48               pha
005D04r 2               
005D04r 2               ; src/prelude.fth:21:8 in `0=`
005D04r 2               @OPCODE_3043:   ; [c64_ir] JumpIf0(128)
005D04r 2  CA               dex
005D05r 2  CA               dex
005D06r 2  B5 02            lda $02,x
005D08r 2  15 03            ora $03,x
005D0Ar 2  D0 03            bne *+5
005D0Cr 2  4C rr rr         jmp @target_128
005D0Fr 2               
005D0Fr 2               @target_127:
005D0Fr 2               
005D0Fr 2               ; src/prelude.fth:21:11 in `0=`
005D0Fr 2               @OPCODE_3045:   ; [c64_ir] PushLiteral(0)
005D0Fr 2  E8               inx
005D10r 2  E8               inx
005D11r 2  A9 00            lda #0
005D13r 2  95 00            sta $00,x
005D15r 2  A9 00            lda #0
005D17r 2  95 01            sta $01,x
005D19r 2               
005D19r 2               ; src/prelude.fth:21:13 in `0=`
005D19r 2               @OPCODE_3046:   ; [c64_ir] JumpElse(129)
005D19r 2  4C rr rr         jmp @target_129
005D1Cr 2               
005D1Cr 2               @target_128:
005D1Cr 2               
005D1Cr 2               ; src/prelude.fth:21:18 in `0=`
005D1Cr 2               @OPCODE_3048:   ; [c64_ir] PushLiteral(-1)
005D1Cr 2  E8               inx
005D1Dr 2  E8               inx
005D1Er 2  A9 FF            lda #255
005D20r 2  95 00            sta $00,x
005D22r 2  A9 FF            lda #255
005D24r 2  95 01            sta $01,x
005D26r 2               
005D26r 2               ; src/prelude.fth:21:21 in `0=`
005D26r 2               @OPCODE_3049:   ; [c64_ir] JumpTarget(128)
005D26r 2               
005D26r 2               @target_129:
005D26r 2               
005D26r 2               ; <inline>:0:0 in `main`
005D26r 2               @OPCODE_3051:   ; [c64_ir] AltPop
005D26r 2  E8               inx
005D27r 2  E8               inx
005D28r 2  68               pla
005D29r 2  95 00            sta $00,x
005D2Br 2  68               pla
005D2Cr 2  95 01            sta $01,x
005D2Er 2               
005D2Er 2               ; <inline>:0:0 in `main`
005D2Er 2               @OPCODE_3052:   ; [c64_ir] Drop
005D2Er 2  CA               dex
005D2Fr 2  CA               dex
005D30r 2               
005D30r 2               ; <inline>:0:0 in `main`
005D30r 2               @OPCODE_3053:   ; [c64_ir] AltPop
005D30r 2  E8               inx
005D31r 2  E8               inx
005D32r 2  68               pla
005D33r 2  95 00            sta $00,x
005D35r 2  68               pla
005D36r 2  95 01            sta $01,x
005D38r 2               
005D38r 2               ; <inline>:0:0 in `main`
005D38r 2               @OPCODE_3054:   ; [c64_ir] Drop
005D38r 2  CA               dex
005D39r 2  CA               dex
005D3Ar 2               
005D3Ar 2               ; <inline>:0:0 in `main`
005D3Ar 2               @OPCODE_3055:   ; [c64_ir] PushLiteral(7777)
005D3Ar 2  E8               inx
005D3Br 2  E8               inx
005D3Cr 2  A9 61            lda #97
005D3Er 2  95 00            sta $00,x
005D40r 2  A9 1E            lda #30
005D42r 2  95 01            sta $01,x
005D44r 2               
005D44r 2               ; <inline>:0:0 in `main`
005D44r 2               @OPCODE_3056:   ; [c64_ir] AltPush
005D44r 2  CA               dex
005D45r 2  CA               dex
005D46r 2  B5 03            lda $03,x
005D48r 2  48               pha
005D49r 2  B5 02            lda $02,x
005D4Br 2  48               pha
005D4Cr 2               
005D4Cr 2               ; src/prelude.fth:3:10 in `swap`
005D4Cr 2               @OPCODE_3057:   ; [c64_ir] AltPush
005D4Cr 2  CA               dex
005D4Dr 2  CA               dex
005D4Er 2  B5 03            lda $03,x
005D50r 2  48               pha
005D51r 2  B5 02            lda $02,x
005D53r 2  48               pha
005D54r 2               
005D54r 2               ; src/prelude.fth:3:13 in `swap`
005D54r 2               @OPCODE_3058:   ; [c64_ir] TempStore
005D54r 2  CA               dex
005D55r 2  CA               dex
005D56r 2  B5 03            lda $03,x
005D58r 2  85 96            sta TEMP_PAX2
005D5Ar 2  B5 02            lda $02,x
005D5Cr 2  85 95            sta TEMP_PAX1
005D5Er 2               
005D5Er 2               ; src/prelude.fth:3:19 in `swap`
005D5Er 2               @OPCODE_3059:   ; [c64_ir] AltPop
005D5Er 2  E8               inx
005D5Fr 2  E8               inx
005D60r 2  68               pla
005D61r 2  95 00            sta $00,x
005D63r 2  68               pla
005D64r 2  95 01            sta $01,x
005D66r 2               
005D66r 2               ; src/prelude.fth:3:22 in `swap`
005D66r 2               @OPCODE_3060:   ; [c64_ir] TempLoad
005D66r 2  E8               inx
005D67r 2  E8               inx
005D68r 2  A5 95            lda TEMP_PAX1
005D6Ar 2  95 00            sta $00,x
005D6Cr 2  A5 96            lda TEMP_PAX2
005D6Er 2  95 01            sta $01,x
005D70r 2               
005D70r 2               ; <inline>:0:0 in `main`
005D70r 2               @OPCODE_3061:   ; [c64_ir] AltPop
005D70r 2  E8               inx
005D71r 2  E8               inx
005D72r 2  68               pla
005D73r 2  95 00            sta $00,x
005D75r 2  68               pla
005D76r 2  95 01            sta $01,x
005D78r 2               
005D78r 2               ; <inline>:0:0 in `main`
005D78r 2               @OPCODE_3062:   ; [c64_ir] Drop
005D78r 2  CA               dex
005D79r 2  CA               dex
005D7Ar 2               
005D7Ar 2               ; src/prelude.fth:35:57 in `-loopimpl`
005D7Ar 2               @OPCODE_3063:   ; [c64_ir] AltPush
005D7Ar 2  CA               dex
005D7Br 2  CA               dex
005D7Cr 2  B5 03            lda $03,x
005D7Er 2  48               pha
005D7Fr 2  B5 02            lda $02,x
005D81r 2  48               pha
005D82r 2               
005D82r 2               ; <inline>:0:0 in `main`
005D82r 2               @OPCODE_3064:   ; [c64_ir] AltPop
005D82r 2  E8               inx
005D83r 2  E8               inx
005D84r 2  68               pla
005D85r 2  95 00            sta $00,x
005D87r 2  68               pla
005D88r 2  95 01            sta $01,x
005D8Ar 2               
005D8Ar 2               ; <inline>:0:0 in `main`
005D8Ar 2               @OPCODE_3065:   ; [c64_ir] Drop
005D8Ar 2  CA               dex
005D8Br 2  CA               dex
005D8Cr 2               
005D8Cr 2               ; snake.fth:143:5 in `move-snake-tail`
005D8Cr 2               @OPCODE_3066:   ; [c64_ir] LoopIf0(126)
005D8Cr 2  CA               dex
005D8Dr 2  CA               dex
005D8Er 2  B5 02            lda $02,x
005D90r 2  15 03            ora $03,x
005D92r 2  D0 03            bne *+5
005D94r 2  4C rr rr         jmp @target_126
005D97r 2               
005D97r 2               @target_130:
005D97r 2               
005D97r 2               ; snake.fth:143:5 in `move-snake-tail`
005D97r 2               @OPCODE_3068:   ; [c64_ir] AltPop
005D97r 2  E8               inx
005D98r 2  E8               inx
005D99r 2  68               pla
005D9Ar 2  95 00            sta $00,x
005D9Cr 2  68               pla
005D9Dr 2  95 01            sta $01,x
005D9Fr 2               
005D9Fr 2               ; snake.fth:143:5 in `move-snake-tail`
005D9Fr 2               @OPCODE_3069:   ; [c64_ir] Drop
005D9Fr 2  CA               dex
005DA0r 2  CA               dex
005DA1r 2               
005DA1r 2               ; snake.fth:143:5 in `move-snake-tail`
005DA1r 2               @OPCODE_3070:   ; [c64_ir] AltPop
005DA1r 2  E8               inx
005DA2r 2  E8               inx
005DA3r 2  68               pla
005DA4r 2  95 00            sta $00,x
005DA6r 2  68               pla
005DA7r 2  95 01            sta $01,x
005DA9r 2               
005DA9r 2               ; snake.fth:143:5 in `move-snake-tail`
005DA9r 2               @OPCODE_3071:   ; [c64_ir] Drop
005DA9r 2  CA               dex
005DAAr 2  CA               dex
005DABr 2               
005DABr 2               ; <inline>:0:0 in `main`
005DABr 2               @OPCODE_3072:   ; [c64_ir] AltPop
005DABr 2  E8               inx
005DACr 2  E8               inx
005DADr 2  68               pla
005DAEr 2  95 00            sta $00,x
005DB0r 2  68               pla
005DB1r 2  95 01            sta $01,x
005DB3r 2               
005DB3r 2               ; <inline>:0:0 in `main`
005DB3r 2               @OPCODE_3073:   ; [c64_ir] Drop
005DB3r 2  CA               dex
005DB4r 2  CA               dex
005DB5r 2               
005DB5r 2               ; <inline>:0:0 in `main`
005DB5r 2               @OPCODE_3074:   ; [c64_ir] PushLiteral(7777)
005DB5r 2  E8               inx
005DB6r 2  E8               inx
005DB7r 2  A9 61            lda #97
005DB9r 2  95 00            sta $00,x
005DBBr 2  A9 1E            lda #30
005DBDr 2  95 01            sta $01,x
005DBFr 2               
005DBFr 2               ; <inline>:0:0 in `main`
005DBFr 2               @OPCODE_3075:   ; [c64_ir] AltPush
005DBFr 2  CA               dex
005DC0r 2  CA               dex
005DC1r 2  B5 03            lda $03,x
005DC3r 2  48               pha
005DC4r 2  B5 02            lda $02,x
005DC6r 2  48               pha
005DC7r 2               
005DC7r 2               ; snake.fth:131:20 in `move-snake-head`
005DC7r 2               @OPCODE_3076:   ; [c64_ir] PushLiteral(-26660)
005DC7r 2  E8               inx
005DC8r 2  E8               inx
005DC9r 2  A9 DC            lda #220
005DCBr 2  95 00            sta $00,x
005DCDr 2  A9 97            lda #151
005DCFr 2  95 01            sta $01,x
005DD1r 2               
005DD1r 2               ; snake.fth:131:30 in `move-snake-head`
005DD1r 2               @OPCODE_3077:   ; [c64_ir] Load
005DD1r 2  A1 00            lda ($00,x)
005DD3r 2  95 00            sta $00,x
005DD5r 2  A9 00            lda #0
005DD7r 2  95 01            sta $01,x
005DD9r 2               
005DD9r 2               ; snake.fth:132:3 in `move-snake-head`
005DD9r 2               @OPCODE_3078:   ; [c64_ir] PushLiteral(37)
005DD9r 2  E8               inx
005DDAr 2  E8               inx
005DDBr 2  A9 25            lda #37
005DDDr 2  95 00            sta $00,x
005DDFr 2  A9 00            lda #0
005DE1r 2  95 01            sta $01,x
005DE3r 2               
005DE3r 2               ; <inline>:0:0 in `main`
005DE3r 2               @OPCODE_3079:   ; [c64_ir] PushLiteral(7777)
005DE3r 2  E8               inx
005DE4r 2  E8               inx
005DE5r 2  A9 61            lda #97
005DE7r 2  95 00            sta $00,x
005DE9r 2  A9 1E            lda #30
005DEBr 2  95 01            sta $01,x
005DEDr 2               
005DEDr 2               ; <inline>:0:0 in `main`
005DEDr 2               @OPCODE_3080:   ; [c64_ir] AltPush
005DEDr 2  CA               dex
005DEEr 2  CA               dex
005DEFr 2  B5 03            lda $03,x
005DF1r 2  48               pha
005DF2r 2  B5 02            lda $02,x
005DF4r 2  48               pha
005DF5r 2               
005DF5r 2               ; src/prelude.fth:4:10 in `over`
005DF5r 2               @OPCODE_3081:   ; [c64_ir] AltPush
005DF5r 2  CA               dex
005DF6r 2  CA               dex
005DF7r 2  B5 03            lda $03,x
005DF9r 2  48               pha
005DFAr 2  B5 02            lda $02,x
005DFCr 2  48               pha
005DFDr 2               
005DFDr 2               ; src/prelude.fth:4:13 in `over`
005DFDr 2               @OPCODE_3082:   ; [c64_ir] TempStore
005DFDr 2  CA               dex
005DFEr 2  CA               dex
005DFFr 2  B5 03            lda $03,x
005E01r 2  85 96            sta TEMP_PAX2
005E03r 2  B5 02            lda $02,x
005E05r 2  85 95            sta TEMP_PAX1
005E07r 2               
005E07r 2               ; src/prelude.fth:4:19 in `over`
005E07r 2               @OPCODE_3083:   ; [c64_ir] TempLoad
005E07r 2  E8               inx
005E08r 2  E8               inx
005E09r 2  A5 95            lda TEMP_PAX1
005E0Br 2  95 00            sta $00,x
005E0Dr 2  A5 96            lda TEMP_PAX2
005E0Fr 2  95 01            sta $01,x
005E11r 2               
005E11r 2               ; src/prelude.fth:4:25 in `over`
005E11r 2               @OPCODE_3084:   ; [c64_ir] AltPop
005E11r 2  E8               inx
005E12r 2  E8               inx
005E13r 2  68               pla
005E14r 2  95 00            sta $00,x
005E16r 2  68               pla
005E17r 2  95 01            sta $01,x
005E19r 2               
005E19r 2               ; src/prelude.fth:4:28 in `over`
005E19r 2               @OPCODE_3085:   ; [c64_ir] TempLoad
005E19r 2  E8               inx
005E1Ar 2  E8               inx
005E1Br 2  A5 95            lda TEMP_PAX1
005E1Dr 2  95 00            sta $00,x
005E1Fr 2  A5 96            lda TEMP_PAX2
005E21r 2  95 01            sta $01,x
005E23r 2               
005E23r 2               ; <inline>:0:0 in `main`
005E23r 2               @OPCODE_3086:   ; [c64_ir] AltPop
005E23r 2  E8               inx
005E24r 2  E8               inx
005E25r 2  68               pla
005E26r 2  95 00            sta $00,x
005E28r 2  68               pla
005E29r 2  95 01            sta $01,x
005E2Br 2               
005E2Br 2               ; <inline>:0:0 in `main`
005E2Br 2               @OPCODE_3087:   ; [c64_ir] Drop
005E2Br 2  CA               dex
005E2Cr 2  CA               dex
005E2Dr 2               
005E2Dr 2               ; <inline>:0:0 in `main`
005E2Dr 2               @OPCODE_3088:   ; [c64_ir] PushLiteral(7777)
005E2Dr 2  E8               inx
005E2Er 2  E8               inx
005E2Fr 2  A9 61            lda #97
005E31r 2  95 00            sta $00,x
005E33r 2  A9 1E            lda #30
005E35r 2  95 01            sta $01,x
005E37r 2               
005E37r 2               ; <inline>:0:0 in `main`
005E37r 2               @OPCODE_3089:   ; [c64_ir] AltPush
005E37r 2  CA               dex
005E38r 2  CA               dex
005E39r 2  B5 03            lda $03,x
005E3Br 2  48               pha
005E3Cr 2  B5 02            lda $02,x
005E3Er 2  48               pha
005E3Fr 2               
005E3Fr 2               ; <inline>:0:0 in `main`
005E3Fr 2               @OPCODE_3090:   ; [c64_ir] PushLiteral(7777)
005E3Fr 2  E8               inx
005E40r 2  E8               inx
005E41r 2  A9 61            lda #97
005E43r 2  95 00            sta $00,x
005E45r 2  A9 1E            lda #30
005E47r 2  95 01            sta $01,x
005E49r 2               
005E49r 2               ; <inline>:0:0 in `main`
005E49r 2               @OPCODE_3091:   ; [c64_ir] AltPush
005E49r 2  CA               dex
005E4Ar 2  CA               dex
005E4Br 2  B5 03            lda $03,x
005E4Dr 2  48               pha
005E4Er 2  B5 02            lda $02,x
005E50r 2  48               pha
005E51r 2               
005E51r 2               ; <inline>:0:0 in `main`
005E51r 2               @OPCODE_3092:   ; [c64_ir] PushLiteral(7777)
005E51r 2  E8               inx
005E52r 2  E8               inx
005E53r 2  A9 61            lda #97
005E55r 2  95 00            sta $00,x
005E57r 2  A9 1E            lda #30
005E59r 2  95 01            sta $01,x
005E5Br 2               
005E5Br 2               ; <inline>:0:0 in `main`
005E5Br 2               @OPCODE_3093:   ; [c64_ir] AltPush
005E5Br 2  CA               dex
005E5Cr 2  CA               dex
005E5Dr 2  B5 03            lda $03,x
005E5Fr 2  48               pha
005E60r 2  B5 02            lda $02,x
005E62r 2  48               pha
005E63r 2               
005E63r 2               ; <inline>:0:0 in `main`
005E63r 2               @OPCODE_3094:   ; [c64_ir] PushLiteral(7777)
005E63r 2  E8               inx
005E64r 2  E8               inx
005E65r 2  A9 61            lda #97
005E67r 2  95 00            sta $00,x
005E69r 2  A9 1E            lda #30
005E6Br 2  95 01            sta $01,x
005E6Dr 2               
005E6Dr 2               ; <inline>:0:0 in `main`
005E6Dr 2               @OPCODE_3095:   ; [c64_ir] AltPush
005E6Dr 2  CA               dex
005E6Er 2  CA               dex
005E6Fr 2  B5 03            lda $03,x
005E71r 2  48               pha
005E72r 2  B5 02            lda $02,x
005E74r 2  48               pha
005E75r 2               
005E75r 2               ; src/prelude.fth:14:12 in `invert`
005E75r 2               @OPCODE_3096:   ; [c64_ir] PushLiteral(-1)
005E75r 2  E8               inx
005E76r 2  E8               inx
005E77r 2  A9 FF            lda #255
005E79r 2  95 00            sta $00,x
005E7Br 2  A9 FF            lda #255
005E7Dr 2  95 01            sta $01,x
005E7Fr 2               
005E7Fr 2               ; src/prelude.fth:14:15 in `invert`
005E7Fr 2               @OPCODE_3097:   ; [c64_ir] Nand
005E7Fr 2                   ; 26
005E7Fr 2  CA               dex
005E80r 2  CA               dex
005E81r 2  B5 00            lda $00,x
005E83r 2  35 02            and $02,x
005E85r 2  49 FF            eor #$ff
005E87r 2  95 00            sta $00,x
005E89r 2  B5 01            lda $01,x
005E8Br 2  35 03            and $03,x
005E8Dr 2  49 FF            eor #$ff
005E8Fr 2  95 01            sta $01,x
005E91r 2               
005E91r 2               ; <inline>:0:0 in `main`
005E91r 2               @OPCODE_3098:   ; [c64_ir] AltPop
005E91r 2  E8               inx
005E92r 2  E8               inx
005E93r 2  68               pla
005E94r 2  95 00            sta $00,x
005E96r 2  68               pla
005E97r 2  95 01            sta $01,x
005E99r 2               
005E99r 2               ; <inline>:0:0 in `main`
005E99r 2               @OPCODE_3099:   ; [c64_ir] Drop
005E99r 2  CA               dex
005E9Ar 2  CA               dex
005E9Br 2               
005E9Br 2               ; src/prelude.fth:15:19 in `negate`
005E9Br 2               @OPCODE_3100:   ; [c64_ir] PushLiteral(1)
005E9Br 2  E8               inx
005E9Cr 2  E8               inx
005E9Dr 2  A9 01            lda #1
005E9Fr 2  95 00            sta $00,x
005EA1r 2  A9 00            lda #0
005EA3r 2  95 01            sta $01,x
005EA5r 2               
005EA5r 2               ; src/prelude.fth:15:21 in `negate`
005EA5r 2               @OPCODE_3101:   ; [c64_ir] Add
005EA5r 2                   ; 21
005EA5r 2  CA               dex
005EA6r 2  CA               dex
005EA7r 2  18               clc
005EA8r 2  B5 00            lda $00,x
005EAAr 2  75 02            adc $02,x
005EACr 2  95 00            sta $00,x
005EAEr 2  B5 01            lda $01,x
005EB0r 2  75 03            adc $03,x
005EB2r 2  95 01            sta $01,x
005EB4r 2               
005EB4r 2               ; <inline>:0:0 in `main`
005EB4r 2               @OPCODE_3102:   ; [c64_ir] AltPop
005EB4r 2  E8               inx
005EB5r 2  E8               inx
005EB6r 2  68               pla
005EB7r 2  95 00            sta $00,x
005EB9r 2  68               pla
005EBAr 2  95 01            sta $01,x
005EBCr 2               
005EBCr 2               ; <inline>:0:0 in `main`
005EBCr 2               @OPCODE_3103:   ; [c64_ir] Drop
005EBCr 2  CA               dex
005EBDr 2  CA               dex
005EBEr 2               
005EBEr 2               ; src/prelude.fth:16:19 in `-`
005EBEr 2               @OPCODE_3104:   ; [c64_ir] Add
005EBEr 2                   ; 21
005EBEr 2  CA               dex
005EBFr 2  CA               dex
005EC0r 2  18               clc
005EC1r 2  B5 00            lda $00,x
005EC3r 2  75 02            adc $02,x
005EC5r 2  95 00            sta $00,x
005EC7r 2  B5 01            lda $01,x
005EC9r 2  75 03            adc $03,x
005ECBr 2  95 01            sta $01,x
005ECDr 2               
005ECDr 2               ; <inline>:0:0 in `main`
005ECDr 2               @OPCODE_3105:   ; [c64_ir] AltPop
005ECDr 2  E8               inx
005ECEr 2  E8               inx
005ECFr 2  68               pla
005ED0r 2  95 00            sta $00,x
005ED2r 2  68               pla
005ED3r 2  95 01            sta $01,x
005ED5r 2               
005ED5r 2               ; <inline>:0:0 in `main`
005ED5r 2               @OPCODE_3106:   ; [c64_ir] Drop
005ED5r 2  CA               dex
005ED6r 2  CA               dex
005ED7r 2               
005ED7r 2               ; <inline>:0:0 in `main`
005ED7r 2               @OPCODE_3107:   ; [c64_ir] PushLiteral(7777)
005ED7r 2  E8               inx
005ED8r 2  E8               inx
005ED9r 2  A9 61            lda #97
005EDBr 2  95 00            sta $00,x
005EDDr 2  A9 1E            lda #30
005EDFr 2  95 01            sta $01,x
005EE1r 2               
005EE1r 2               ; <inline>:0:0 in `main`
005EE1r 2               @OPCODE_3108:   ; [c64_ir] AltPush
005EE1r 2  CA               dex
005EE2r 2  CA               dex
005EE3r 2  B5 03            lda $03,x
005EE5r 2  48               pha
005EE6r 2  B5 02            lda $02,x
005EE8r 2  48               pha
005EE9r 2               
005EE9r 2               ; src/prelude.fth:21:8 in `0=`
005EE9r 2               @OPCODE_3109:   ; [c64_ir] JumpIf0(132)
005EE9r 2  CA               dex
005EEAr 2  CA               dex
005EEBr 2  B5 02            lda $02,x
005EEDr 2  15 03            ora $03,x
005EEFr 2  D0 03            bne *+5
005EF1r 2  4C rr rr         jmp @target_132
005EF4r 2               
005EF4r 2               @target_131:
005EF4r 2               
005EF4r 2               ; src/prelude.fth:21:11 in `0=`
005EF4r 2               @OPCODE_3111:   ; [c64_ir] PushLiteral(0)
005EF4r 2  E8               inx
005EF5r 2  E8               inx
005EF6r 2  A9 00            lda #0
005EF8r 2  95 00            sta $00,x
005EFAr 2  A9 00            lda #0
005EFCr 2  95 01            sta $01,x
005EFEr 2               
005EFEr 2               ; src/prelude.fth:21:13 in `0=`
005EFEr 2               @OPCODE_3112:   ; [c64_ir] JumpElse(133)
005EFEr 2  4C rr rr         jmp @target_133
005F01r 2               
005F01r 2               @target_132:
005F01r 2               
005F01r 2               ; src/prelude.fth:21:18 in `0=`
005F01r 2               @OPCODE_3114:   ; [c64_ir] PushLiteral(-1)
005F01r 2  E8               inx
005F02r 2  E8               inx
005F03r 2  A9 FF            lda #255
005F05r 2  95 00            sta $00,x
005F07r 2  A9 FF            lda #255
005F09r 2  95 01            sta $01,x
005F0Br 2               
005F0Br 2               ; src/prelude.fth:21:21 in `0=`
005F0Br 2               @OPCODE_3115:   ; [c64_ir] JumpTarget(132)
005F0Br 2               
005F0Br 2               @target_133:
005F0Br 2               
005F0Br 2               ; <inline>:0:0 in `main`
005F0Br 2               @OPCODE_3117:   ; [c64_ir] AltPop
005F0Br 2  E8               inx
005F0Cr 2  E8               inx
005F0Dr 2  68               pla
005F0Er 2  95 00            sta $00,x
005F10r 2  68               pla
005F11r 2  95 01            sta $01,x
005F13r 2               
005F13r 2               ; <inline>:0:0 in `main`
005F13r 2               @OPCODE_3118:   ; [c64_ir] Drop
005F13r 2  CA               dex
005F14r 2  CA               dex
005F15r 2               
005F15r 2               ; <inline>:0:0 in `main`
005F15r 2               @OPCODE_3119:   ; [c64_ir] AltPop
005F15r 2  E8               inx
005F16r 2  E8               inx
005F17r 2  68               pla
005F18r 2  95 00            sta $00,x
005F1Ar 2  68               pla
005F1Br 2  95 01            sta $01,x
005F1Dr 2               
005F1Dr 2               ; <inline>:0:0 in `main`
005F1Dr 2               @OPCODE_3120:   ; [c64_ir] Drop
005F1Dr 2  CA               dex
005F1Er 2  CA               dex
005F1Fr 2               
005F1Fr 2               ; snake.fth:132:16 in `move-snake-head`
005F1Fr 2               @OPCODE_3121:   ; [c64_ir] JumpIf0(135)
005F1Fr 2  CA               dex
005F20r 2  CA               dex
005F21r 2  B5 02            lda $02,x
005F23r 2  15 03            ora $03,x
005F25r 2  D0 03            bne *+5
005F27r 2  4C rr rr         jmp @target_135
005F2Ar 2               
005F2Ar 2               @target_134:
005F2Ar 2               
005F2Ar 2               ; <inline>:0:0 in `main`
005F2Ar 2               @OPCODE_3123:   ; [c64_ir] PushLiteral(7777)
005F2Ar 2  E8               inx
005F2Br 2  E8               inx
005F2Cr 2  A9 61            lda #97
005F2Er 2  95 00            sta $00,x
005F30r 2  A9 1E            lda #30
005F32r 2  95 01            sta $01,x
005F34r 2               
005F34r 2               ; <inline>:0:0 in `main`
005F34r 2               @OPCODE_3124:   ; [c64_ir] AltPush
005F34r 2  CA               dex
005F35r 2  CA               dex
005F36r 2  B5 03            lda $03,x
005F38r 2  48               pha
005F39r 2  B5 02            lda $02,x
005F3Br 2  48               pha
005F3Cr 2               
005F3Cr 2               ; snake.fth:127:14 in `move-left`
005F3Cr 2               @OPCODE_3125:   ; [c64_ir] PushLiteral(-1)
005F3Cr 2  E8               inx
005F3Dr 2  E8               inx
005F3Er 2  A9 FF            lda #255
005F40r 2  95 00            sta $00,x
005F42r 2  A9 FF            lda #255
005F44r 2  95 01            sta $01,x
005F46r 2               
005F46r 2               ; snake.fth:127:17 in `move-left`
005F46r 2               @OPCODE_3126:   ; [c64_ir] PushLiteral(-28668)
005F46r 2  E8               inx
005F47r 2  E8               inx
005F48r 2  A9 04            lda #4
005F4Ar 2  95 00            sta $00,x
005F4Cr 2  A9 90            lda #144
005F4Er 2  95 01            sta $01,x
005F50r 2               
005F50r 2               ; <inline>:0:0 in `main`
005F50r 2               @OPCODE_3127:   ; [c64_ir] PushLiteral(7777)
005F50r 2  E8               inx
005F51r 2  E8               inx
005F52r 2  A9 61            lda #97
005F54r 2  95 00            sta $00,x
005F56r 2  A9 1E            lda #30
005F58r 2  95 01            sta $01,x
005F5Ar 2               
005F5Ar 2               ; <inline>:0:0 in `main`
005F5Ar 2               @OPCODE_3128:   ; [c64_ir] AltPush
005F5Ar 2  CA               dex
005F5Br 2  CA               dex
005F5Cr 2  B5 03            lda $03,x
005F5Er 2  48               pha
005F5Fr 2  B5 02            lda $02,x
005F61r 2  48               pha
005F62r 2               
005F62r 2               ; <inline>:0:0 in `main`
005F62r 2               @OPCODE_3129:   ; [c64_ir] PushLiteral(7777)
005F62r 2  E8               inx
005F63r 2  E8               inx
005F64r 2  A9 61            lda #97
005F66r 2  95 00            sta $00,x
005F68r 2  A9 1E            lda #30
005F6Ar 2  95 01            sta $01,x
005F6Cr 2               
005F6Cr 2               ; <inline>:0:0 in `main`
005F6Cr 2               @OPCODE_3130:   ; [c64_ir] AltPush
005F6Cr 2  CA               dex
005F6Dr 2  CA               dex
005F6Er 2  B5 03            lda $03,x
005F70r 2  48               pha
005F71r 2  B5 02            lda $02,x
005F73r 2  48               pha
005F74r 2               
005F74r 2               ; src/prelude.fth:6:10 in `dup`
005F74r 2               @OPCODE_3131:   ; [c64_ir] TempStore
005F74r 2  CA               dex
005F75r 2  CA               dex
005F76r 2  B5 03            lda $03,x
005F78r 2  85 96            sta TEMP_PAX2
005F7Ar 2  B5 02            lda $02,x
005F7Cr 2  85 95            sta TEMP_PAX1
005F7Er 2               
005F7Er 2               ; src/prelude.fth:6:16 in `dup`
005F7Er 2               @OPCODE_3132:   ; [c64_ir] TempLoad
005F7Er 2  E8               inx
005F7Fr 2  E8               inx
005F80r 2  A5 95            lda TEMP_PAX1
005F82r 2  95 00            sta $00,x
005F84r 2  A5 96            lda TEMP_PAX2
005F86r 2  95 01            sta $01,x
005F88r 2               
005F88r 2               ; src/prelude.fth:6:22 in `dup`
005F88r 2               @OPCODE_3133:   ; [c64_ir] TempLoad
005F88r 2  E8               inx
005F89r 2  E8               inx
005F8Ar 2  A5 95            lda TEMP_PAX1
005F8Cr 2  95 00            sta $00,x
005F8Er 2  A5 96            lda TEMP_PAX2
005F90r 2  95 01            sta $01,x
005F92r 2               
005F92r 2               ; <inline>:0:0 in `main`
005F92r 2               @OPCODE_3134:   ; [c64_ir] AltPop
005F92r 2  E8               inx
005F93r 2  E8               inx
005F94r 2  68               pla
005F95r 2  95 00            sta $00,x
005F97r 2  68               pla
005F98r 2  95 01            sta $01,x
005F9Ar 2               
005F9Ar 2               ; <inline>:0:0 in `main`
005F9Ar 2               @OPCODE_3135:   ; [c64_ir] Drop
005F9Ar 2  CA               dex
005F9Br 2  CA               dex
005F9Cr 2               
005F9Cr 2               ; src/prelude.fth:20:12 in `+!`
005F9Cr 2               @OPCODE_3136:   ; [c64_ir] AltPush
005F9Cr 2  CA               dex
005F9Dr 2  CA               dex
005F9Er 2  B5 03            lda $03,x
005FA0r 2  48               pha
005FA1r 2  B5 02            lda $02,x
005FA3r 2  48               pha
005FA4r 2               
005FA4r 2               ; src/prelude.fth:20:15 in `+!`
005FA4r 2               @OPCODE_3137:   ; [c64_ir] Load
005FA4r 2  A1 00            lda ($00,x)
005FA6r 2  95 00            sta $00,x
005FA8r 2  A9 00            lda #0
005FAAr 2  95 01            sta $01,x
005FACr 2               
005FACr 2               ; src/prelude.fth:20:17 in `+!`
005FACr 2               @OPCODE_3138:   ; [c64_ir] Add
005FACr 2                   ; 21
005FACr 2  CA               dex
005FADr 2  CA               dex
005FAEr 2  18               clc
005FAFr 2  B5 00            lda $00,x
005FB1r 2  75 02            adc $02,x
005FB3r 2  95 00            sta $00,x
005FB5r 2  B5 01            lda $01,x
005FB7r 2  75 03            adc $03,x
005FB9r 2  95 01            sta $01,x
005FBBr 2               
005FBBr 2               ; src/prelude.fth:20:19 in `+!`
005FBBr 2               @OPCODE_3139:   ; [c64_ir] AltPop
005FBBr 2  E8               inx
005FBCr 2  E8               inx
005FBDr 2  68               pla
005FBEr 2  95 00            sta $00,x
005FC0r 2  68               pla
005FC1r 2  95 01            sta $01,x
005FC3r 2               
005FC3r 2               ; src/prelude.fth:20:22 in `+!`
005FC3r 2               @OPCODE_3140:   ; [c64_ir] Store
005FC3r 2  CA               dex
005FC4r 2  CA               dex
005FC5r 2  CA               dex
005FC6r 2  CA               dex
005FC7r 2  B5 02            lda $02,x
005FC9r 2  81 04            sta ($04,x)
005FCBr 2                   ; TODO high byte
005FCBr 2               
005FCBr 2               ; <inline>:0:0 in `main`
005FCBr 2               @OPCODE_3141:   ; [c64_ir] AltPop
005FCBr 2  E8               inx
005FCCr 2  E8               inx
005FCDr 2  68               pla
005FCEr 2  95 00            sta $00,x
005FD0r 2  68               pla
005FD1r 2  95 01            sta $01,x
005FD3r 2               
005FD3r 2               ; <inline>:0:0 in `main`
005FD3r 2               @OPCODE_3142:   ; [c64_ir] Drop
005FD3r 2  CA               dex
005FD4r 2  CA               dex
005FD5r 2               
005FD5r 2               ; <inline>:0:0 in `main`
005FD5r 2               @OPCODE_3143:   ; [c64_ir] AltPop
005FD5r 2  E8               inx
005FD6r 2  E8               inx
005FD7r 2  68               pla
005FD8r 2  95 00            sta $00,x
005FDAr 2  68               pla
005FDBr 2  95 01            sta $01,x
005FDDr 2               
005FDDr 2               ; <inline>:0:0 in `main`
005FDDr 2               @OPCODE_3144:   ; [c64_ir] Drop
005FDDr 2  CA               dex
005FDEr 2  CA               dex
005FDFr 2               
005FDFr 2               ; snake.fth:132:29 in `move-snake-head`
005FDFr 2               @OPCODE_3145:   ; [c64_ir] JumpElse(153)
005FDFr 2  4C rr rr         jmp @target_153
005FE2r 2               
005FE2r 2               @target_135:
005FE2r 2               
005FE2r 2               ; snake.fth:133:3 in `move-snake-head`
005FE2r 2               @OPCODE_3147:   ; [c64_ir] PushLiteral(38)
005FE2r 2  E8               inx
005FE3r 2  E8               inx
005FE4r 2  A9 26            lda #38
005FE6r 2  95 00            sta $00,x
005FE8r 2  A9 00            lda #0
005FEAr 2  95 01            sta $01,x
005FECr 2               
005FECr 2               ; <inline>:0:0 in `main`
005FECr 2               @OPCODE_3148:   ; [c64_ir] PushLiteral(7777)
005FECr 2  E8               inx
005FEDr 2  E8               inx
005FEEr 2  A9 61            lda #97
005FF0r 2  95 00            sta $00,x
005FF2r 2  A9 1E            lda #30
005FF4r 2  95 01            sta $01,x
005FF6r 2               
005FF6r 2               ; <inline>:0:0 in `main`
005FF6r 2               @OPCODE_3149:   ; [c64_ir] AltPush
005FF6r 2  CA               dex
005FF7r 2  CA               dex
005FF8r 2  B5 03            lda $03,x
005FFAr 2  48               pha
005FFBr 2  B5 02            lda $02,x
005FFDr 2  48               pha
005FFEr 2               
005FFEr 2               ; src/prelude.fth:4:10 in `over`
005FFEr 2               @OPCODE_3150:   ; [c64_ir] AltPush
005FFEr 2  CA               dex
005FFFr 2  CA               dex
006000r 2  B5 03            lda $03,x
006002r 2  48               pha
006003r 2  B5 02            lda $02,x
006005r 2  48               pha
006006r 2               
006006r 2               ; src/prelude.fth:4:13 in `over`
006006r 2               @OPCODE_3151:   ; [c64_ir] TempStore
006006r 2  CA               dex
006007r 2  CA               dex
006008r 2  B5 03            lda $03,x
00600Ar 2  85 96            sta TEMP_PAX2
00600Cr 2  B5 02            lda $02,x
00600Er 2  85 95            sta TEMP_PAX1
006010r 2               
006010r 2               ; src/prelude.fth:4:19 in `over`
006010r 2               @OPCODE_3152:   ; [c64_ir] TempLoad
006010r 2  E8               inx
006011r 2  E8               inx
006012r 2  A5 95            lda TEMP_PAX1
006014r 2  95 00            sta $00,x
006016r 2  A5 96            lda TEMP_PAX2
006018r 2  95 01            sta $01,x
00601Ar 2               
00601Ar 2               ; src/prelude.fth:4:25 in `over`
00601Ar 2               @OPCODE_3153:   ; [c64_ir] AltPop
00601Ar 2  E8               inx
00601Br 2  E8               inx
00601Cr 2  68               pla
00601Dr 2  95 00            sta $00,x
00601Fr 2  68               pla
006020r 2  95 01            sta $01,x
006022r 2               
006022r 2               ; src/prelude.fth:4:28 in `over`
006022r 2               @OPCODE_3154:   ; [c64_ir] TempLoad
006022r 2  E8               inx
006023r 2  E8               inx
006024r 2  A5 95            lda TEMP_PAX1
006026r 2  95 00            sta $00,x
006028r 2  A5 96            lda TEMP_PAX2
00602Ar 2  95 01            sta $01,x
00602Cr 2               
00602Cr 2               ; <inline>:0:0 in `main`
00602Cr 2               @OPCODE_3155:   ; [c64_ir] AltPop
00602Cr 2  E8               inx
00602Dr 2  E8               inx
00602Er 2  68               pla
00602Fr 2  95 00            sta $00,x
006031r 2  68               pla
006032r 2  95 01            sta $01,x
006034r 2               
006034r 2               ; <inline>:0:0 in `main`
006034r 2               @OPCODE_3156:   ; [c64_ir] Drop
006034r 2  CA               dex
006035r 2  CA               dex
006036r 2               
006036r 2               ; <inline>:0:0 in `main`
006036r 2               @OPCODE_3157:   ; [c64_ir] PushLiteral(7777)
006036r 2  E8               inx
006037r 2  E8               inx
006038r 2  A9 61            lda #97
00603Ar 2  95 00            sta $00,x
00603Cr 2  A9 1E            lda #30
00603Er 2  95 01            sta $01,x
006040r 2               
006040r 2               ; <inline>:0:0 in `main`
006040r 2               @OPCODE_3158:   ; [c64_ir] AltPush
006040r 2  CA               dex
006041r 2  CA               dex
006042r 2  B5 03            lda $03,x
006044r 2  48               pha
006045r 2  B5 02            lda $02,x
006047r 2  48               pha
006048r 2               
006048r 2               ; <inline>:0:0 in `main`
006048r 2               @OPCODE_3159:   ; [c64_ir] PushLiteral(7777)
006048r 2  E8               inx
006049r 2  E8               inx
00604Ar 2  A9 61            lda #97
00604Cr 2  95 00            sta $00,x
00604Er 2  A9 1E            lda #30
006050r 2  95 01            sta $01,x
006052r 2               
006052r 2               ; <inline>:0:0 in `main`
006052r 2               @OPCODE_3160:   ; [c64_ir] AltPush
006052r 2  CA               dex
006053r 2  CA               dex
006054r 2  B5 03            lda $03,x
006056r 2  48               pha
006057r 2  B5 02            lda $02,x
006059r 2  48               pha
00605Ar 2               
00605Ar 2               ; <inline>:0:0 in `main`
00605Ar 2               @OPCODE_3161:   ; [c64_ir] PushLiteral(7777)
00605Ar 2  E8               inx
00605Br 2  E8               inx
00605Cr 2  A9 61            lda #97
00605Er 2  95 00            sta $00,x
006060r 2  A9 1E            lda #30
006062r 2  95 01            sta $01,x
006064r 2               
006064r 2               ; <inline>:0:0 in `main`
006064r 2               @OPCODE_3162:   ; [c64_ir] AltPush
006064r 2  CA               dex
006065r 2  CA               dex
006066r 2  B5 03            lda $03,x
006068r 2  48               pha
006069r 2  B5 02            lda $02,x
00606Br 2  48               pha
00606Cr 2               
00606Cr 2               ; <inline>:0:0 in `main`
00606Cr 2               @OPCODE_3163:   ; [c64_ir] PushLiteral(7777)
00606Cr 2  E8               inx
00606Dr 2  E8               inx
00606Er 2  A9 61            lda #97
006070r 2  95 00            sta $00,x
006072r 2  A9 1E            lda #30
006074r 2  95 01            sta $01,x
006076r 2               
006076r 2               ; <inline>:0:0 in `main`
006076r 2               @OPCODE_3164:   ; [c64_ir] AltPush
006076r 2  CA               dex
006077r 2  CA               dex
006078r 2  B5 03            lda $03,x
00607Ar 2  48               pha
00607Br 2  B5 02            lda $02,x
00607Dr 2  48               pha
00607Er 2               
00607Er 2               ; src/prelude.fth:14:12 in `invert`
00607Er 2               @OPCODE_3165:   ; [c64_ir] PushLiteral(-1)
00607Er 2  E8               inx
00607Fr 2  E8               inx
006080r 2  A9 FF            lda #255
006082r 2  95 00            sta $00,x
006084r 2  A9 FF            lda #255
006086r 2  95 01            sta $01,x
006088r 2               
006088r 2               ; src/prelude.fth:14:15 in `invert`
006088r 2               @OPCODE_3166:   ; [c64_ir] Nand
006088r 2                   ; 26
006088r 2  CA               dex
006089r 2  CA               dex
00608Ar 2  B5 00            lda $00,x
00608Cr 2  35 02            and $02,x
00608Er 2  49 FF            eor #$ff
006090r 2  95 00            sta $00,x
006092r 2  B5 01            lda $01,x
006094r 2  35 03            and $03,x
006096r 2  49 FF            eor #$ff
006098r 2  95 01            sta $01,x
00609Ar 2               
00609Ar 2               ; <inline>:0:0 in `main`
00609Ar 2               @OPCODE_3167:   ; [c64_ir] AltPop
00609Ar 2  E8               inx
00609Br 2  E8               inx
00609Cr 2  68               pla
00609Dr 2  95 00            sta $00,x
00609Fr 2  68               pla
0060A0r 2  95 01            sta $01,x
0060A2r 2               
0060A2r 2               ; <inline>:0:0 in `main`
0060A2r 2               @OPCODE_3168:   ; [c64_ir] Drop
0060A2r 2  CA               dex
0060A3r 2  CA               dex
0060A4r 2               
0060A4r 2               ; src/prelude.fth:15:19 in `negate`
0060A4r 2               @OPCODE_3169:   ; [c64_ir] PushLiteral(1)
0060A4r 2  E8               inx
0060A5r 2  E8               inx
0060A6r 2  A9 01            lda #1
0060A8r 2  95 00            sta $00,x
0060AAr 2  A9 00            lda #0
0060ACr 2  95 01            sta $01,x
0060AEr 2               
0060AEr 2               ; src/prelude.fth:15:21 in `negate`
0060AEr 2               @OPCODE_3170:   ; [c64_ir] Add
0060AEr 2                   ; 21
0060AEr 2  CA               dex
0060AFr 2  CA               dex
0060B0r 2  18               clc
0060B1r 2  B5 00            lda $00,x
0060B3r 2  75 02            adc $02,x
0060B5r 2  95 00            sta $00,x
0060B7r 2  B5 01            lda $01,x
0060B9r 2  75 03            adc $03,x
0060BBr 2  95 01            sta $01,x
0060BDr 2               
0060BDr 2               ; <inline>:0:0 in `main`
0060BDr 2               @OPCODE_3171:   ; [c64_ir] AltPop
0060BDr 2  E8               inx
0060BEr 2  E8               inx
0060BFr 2  68               pla
0060C0r 2  95 00            sta $00,x
0060C2r 2  68               pla
0060C3r 2  95 01            sta $01,x
0060C5r 2               
0060C5r 2               ; <inline>:0:0 in `main`
0060C5r 2               @OPCODE_3172:   ; [c64_ir] Drop
0060C5r 2  CA               dex
0060C6r 2  CA               dex
0060C7r 2               
0060C7r 2               ; src/prelude.fth:16:19 in `-`
0060C7r 2               @OPCODE_3173:   ; [c64_ir] Add
0060C7r 2                   ; 21
0060C7r 2  CA               dex
0060C8r 2  CA               dex
0060C9r 2  18               clc
0060CAr 2  B5 00            lda $00,x
0060CCr 2  75 02            adc $02,x
0060CEr 2  95 00            sta $00,x
0060D0r 2  B5 01            lda $01,x
0060D2r 2  75 03            adc $03,x
0060D4r 2  95 01            sta $01,x
0060D6r 2               
0060D6r 2               ; <inline>:0:0 in `main`
0060D6r 2               @OPCODE_3174:   ; [c64_ir] AltPop
0060D6r 2  E8               inx
0060D7r 2  E8               inx
0060D8r 2  68               pla
0060D9r 2  95 00            sta $00,x
0060DBr 2  68               pla
0060DCr 2  95 01            sta $01,x
0060DEr 2               
0060DEr 2               ; <inline>:0:0 in `main`
0060DEr 2               @OPCODE_3175:   ; [c64_ir] Drop
0060DEr 2  CA               dex
0060DFr 2  CA               dex
0060E0r 2               
0060E0r 2               ; <inline>:0:0 in `main`
0060E0r 2               @OPCODE_3176:   ; [c64_ir] PushLiteral(7777)
0060E0r 2  E8               inx
0060E1r 2  E8               inx
0060E2r 2  A9 61            lda #97
0060E4r 2  95 00            sta $00,x
0060E6r 2  A9 1E            lda #30
0060E8r 2  95 01            sta $01,x
0060EAr 2               
0060EAr 2               ; <inline>:0:0 in `main`
0060EAr 2               @OPCODE_3177:   ; [c64_ir] AltPush
0060EAr 2  CA               dex
0060EBr 2  CA               dex
0060ECr 2  B5 03            lda $03,x
0060EEr 2  48               pha
0060EFr 2  B5 02            lda $02,x
0060F1r 2  48               pha
0060F2r 2               
0060F2r 2               ; src/prelude.fth:21:8 in `0=`
0060F2r 2               @OPCODE_3178:   ; [c64_ir] JumpIf0(137)
0060F2r 2  CA               dex
0060F3r 2  CA               dex
0060F4r 2  B5 02            lda $02,x
0060F6r 2  15 03            ora $03,x
0060F8r 2  D0 03            bne *+5
0060FAr 2  4C rr rr         jmp @target_137
0060FDr 2               
0060FDr 2               @target_136:
0060FDr 2               
0060FDr 2               ; src/prelude.fth:21:11 in `0=`
0060FDr 2               @OPCODE_3180:   ; [c64_ir] PushLiteral(0)
0060FDr 2  E8               inx
0060FEr 2  E8               inx
0060FFr 2  A9 00            lda #0
006101r 2  95 00            sta $00,x
006103r 2  A9 00            lda #0
006105r 2  95 01            sta $01,x
006107r 2               
006107r 2               ; src/prelude.fth:21:13 in `0=`
006107r 2               @OPCODE_3181:   ; [c64_ir] JumpElse(138)
006107r 2  4C rr rr         jmp @target_138
00610Ar 2               
00610Ar 2               @target_137:
00610Ar 2               
00610Ar 2               ; src/prelude.fth:21:18 in `0=`
00610Ar 2               @OPCODE_3183:   ; [c64_ir] PushLiteral(-1)
00610Ar 2  E8               inx
00610Br 2  E8               inx
00610Cr 2  A9 FF            lda #255
00610Er 2  95 00            sta $00,x
006110r 2  A9 FF            lda #255
006112r 2  95 01            sta $01,x
006114r 2               
006114r 2               ; src/prelude.fth:21:21 in `0=`
006114r 2               @OPCODE_3184:   ; [c64_ir] JumpTarget(137)
006114r 2               
006114r 2               @target_138:
006114r 2               
006114r 2               ; <inline>:0:0 in `main`
006114r 2               @OPCODE_3186:   ; [c64_ir] AltPop
006114r 2  E8               inx
006115r 2  E8               inx
006116r 2  68               pla
006117r 2  95 00            sta $00,x
006119r 2  68               pla
00611Ar 2  95 01            sta $01,x
00611Cr 2               
00611Cr 2               ; <inline>:0:0 in `main`
00611Cr 2               @OPCODE_3187:   ; [c64_ir] Drop
00611Cr 2  CA               dex
00611Dr 2  CA               dex
00611Er 2               
00611Er 2               ; <inline>:0:0 in `main`
00611Er 2               @OPCODE_3188:   ; [c64_ir] AltPop
00611Er 2  E8               inx
00611Fr 2  E8               inx
006120r 2  68               pla
006121r 2  95 00            sta $00,x
006123r 2  68               pla
006124r 2  95 01            sta $01,x
006126r 2               
006126r 2               ; <inline>:0:0 in `main`
006126r 2               @OPCODE_3189:   ; [c64_ir] Drop
006126r 2  CA               dex
006127r 2  CA               dex
006128r 2               
006128r 2               ; snake.fth:133:16 in `move-snake-head`
006128r 2               @OPCODE_3190:   ; [c64_ir] JumpIf0(140)
006128r 2  CA               dex
006129r 2  CA               dex
00612Ar 2  B5 02            lda $02,x
00612Cr 2  15 03            ora $03,x
00612Er 2  D0 03            bne *+5
006130r 2  4C rr rr         jmp @target_140
006133r 2               
006133r 2               @target_139:
006133r 2               
006133r 2               ; <inline>:0:0 in `main`
006133r 2               @OPCODE_3192:   ; [c64_ir] PushLiteral(7777)
006133r 2  E8               inx
006134r 2  E8               inx
006135r 2  A9 61            lda #97
006137r 2  95 00            sta $00,x
006139r 2  A9 1E            lda #30
00613Br 2  95 01            sta $01,x
00613Dr 2               
00613Dr 2               ; <inline>:0:0 in `main`
00613Dr 2               @OPCODE_3193:   ; [c64_ir] AltPush
00613Dr 2  CA               dex
00613Er 2  CA               dex
00613Fr 2  B5 03            lda $03,x
006141r 2  48               pha
006142r 2  B5 02            lda $02,x
006144r 2  48               pha
006145r 2               
006145r 2               ; snake.fth:126:12 in `move-up`
006145r 2               @OPCODE_3194:   ; [c64_ir] PushLiteral(-1)
006145r 2  E8               inx
006146r 2  E8               inx
006147r 2  A9 FF            lda #255
006149r 2  95 00            sta $00,x
00614Br 2  A9 FF            lda #255
00614Dr 2  95 01            sta $01,x
00614Fr 2               
00614Fr 2               ; snake.fth:126:15 in `move-up`
00614Fr 2               @OPCODE_3195:   ; [c64_ir] PushLiteral(-27666)
00614Fr 2  E8               inx
006150r 2  E8               inx
006151r 2  A9 EE            lda #238
006153r 2  95 00            sta $00,x
006155r 2  A9 93            lda #147
006157r 2  95 01            sta $01,x
006159r 2               
006159r 2               ; <inline>:0:0 in `main`
006159r 2               @OPCODE_3196:   ; [c64_ir] PushLiteral(7777)
006159r 2  E8               inx
00615Ar 2  E8               inx
00615Br 2  A9 61            lda #97
00615Dr 2  95 00            sta $00,x
00615Fr 2  A9 1E            lda #30
006161r 2  95 01            sta $01,x
006163r 2               
006163r 2               ; <inline>:0:0 in `main`
006163r 2               @OPCODE_3197:   ; [c64_ir] AltPush
006163r 2  CA               dex
006164r 2  CA               dex
006165r 2  B5 03            lda $03,x
006167r 2  48               pha
006168r 2  B5 02            lda $02,x
00616Ar 2  48               pha
00616Br 2               
00616Br 2               ; <inline>:0:0 in `main`
00616Br 2               @OPCODE_3198:   ; [c64_ir] PushLiteral(7777)
00616Br 2  E8               inx
00616Cr 2  E8               inx
00616Dr 2  A9 61            lda #97
00616Fr 2  95 00            sta $00,x
006171r 2  A9 1E            lda #30
006173r 2  95 01            sta $01,x
006175r 2               
006175r 2               ; <inline>:0:0 in `main`
006175r 2               @OPCODE_3199:   ; [c64_ir] AltPush
006175r 2  CA               dex
006176r 2  CA               dex
006177r 2  B5 03            lda $03,x
006179r 2  48               pha
00617Ar 2  B5 02            lda $02,x
00617Cr 2  48               pha
00617Dr 2               
00617Dr 2               ; src/prelude.fth:6:10 in `dup`
00617Dr 2               @OPCODE_3200:   ; [c64_ir] TempStore
00617Dr 2  CA               dex
00617Er 2  CA               dex
00617Fr 2  B5 03            lda $03,x
006181r 2  85 96            sta TEMP_PAX2
006183r 2  B5 02            lda $02,x
006185r 2  85 95            sta TEMP_PAX1
006187r 2               
006187r 2               ; src/prelude.fth:6:16 in `dup`
006187r 2               @OPCODE_3201:   ; [c64_ir] TempLoad
006187r 2  E8               inx
006188r 2  E8               inx
006189r 2  A5 95            lda TEMP_PAX1
00618Br 2  95 00            sta $00,x
00618Dr 2  A5 96            lda TEMP_PAX2
00618Fr 2  95 01            sta $01,x
006191r 2               
006191r 2               ; src/prelude.fth:6:22 in `dup`
006191r 2               @OPCODE_3202:   ; [c64_ir] TempLoad
006191r 2  E8               inx
006192r 2  E8               inx
006193r 2  A5 95            lda TEMP_PAX1
006195r 2  95 00            sta $00,x
006197r 2  A5 96            lda TEMP_PAX2
006199r 2  95 01            sta $01,x
00619Br 2               
00619Br 2               ; <inline>:0:0 in `main`
00619Br 2               @OPCODE_3203:   ; [c64_ir] AltPop
00619Br 2  E8               inx
00619Cr 2  E8               inx
00619Dr 2  68               pla
00619Er 2  95 00            sta $00,x
0061A0r 2  68               pla
0061A1r 2  95 01            sta $01,x
0061A3r 2               
0061A3r 2               ; <inline>:0:0 in `main`
0061A3r 2               @OPCODE_3204:   ; [c64_ir] Drop
0061A3r 2  CA               dex
0061A4r 2  CA               dex
0061A5r 2               
0061A5r 2               ; src/prelude.fth:20:12 in `+!`
0061A5r 2               @OPCODE_3205:   ; [c64_ir] AltPush
0061A5r 2  CA               dex
0061A6r 2  CA               dex
0061A7r 2  B5 03            lda $03,x
0061A9r 2  48               pha
0061AAr 2  B5 02            lda $02,x
0061ACr 2  48               pha
0061ADr 2               
0061ADr 2               ; src/prelude.fth:20:15 in `+!`
0061ADr 2               @OPCODE_3206:   ; [c64_ir] Load
0061ADr 2  A1 00            lda ($00,x)
0061AFr 2  95 00            sta $00,x
0061B1r 2  A9 00            lda #0
0061B3r 2  95 01            sta $01,x
0061B5r 2               
0061B5r 2               ; src/prelude.fth:20:17 in `+!`
0061B5r 2               @OPCODE_3207:   ; [c64_ir] Add
0061B5r 2                   ; 21
0061B5r 2  CA               dex
0061B6r 2  CA               dex
0061B7r 2  18               clc
0061B8r 2  B5 00            lda $00,x
0061BAr 2  75 02            adc $02,x
0061BCr 2  95 00            sta $00,x
0061BEr 2  B5 01            lda $01,x
0061C0r 2  75 03            adc $03,x
0061C2r 2  95 01            sta $01,x
0061C4r 2               
0061C4r 2               ; src/prelude.fth:20:19 in `+!`
0061C4r 2               @OPCODE_3208:   ; [c64_ir] AltPop
0061C4r 2  E8               inx
0061C5r 2  E8               inx
0061C6r 2  68               pla
0061C7r 2  95 00            sta $00,x
0061C9r 2  68               pla
0061CAr 2  95 01            sta $01,x
0061CCr 2               
0061CCr 2               ; src/prelude.fth:20:22 in `+!`
0061CCr 2               @OPCODE_3209:   ; [c64_ir] Store
0061CCr 2  CA               dex
0061CDr 2  CA               dex
0061CEr 2  CA               dex
0061CFr 2  CA               dex
0061D0r 2  B5 02            lda $02,x
0061D2r 2  81 04            sta ($04,x)
0061D4r 2                   ; TODO high byte
0061D4r 2               
0061D4r 2               ; <inline>:0:0 in `main`
0061D4r 2               @OPCODE_3210:   ; [c64_ir] AltPop
0061D4r 2  E8               inx
0061D5r 2  E8               inx
0061D6r 2  68               pla
0061D7r 2  95 00            sta $00,x
0061D9r 2  68               pla
0061DAr 2  95 01            sta $01,x
0061DCr 2               
0061DCr 2               ; <inline>:0:0 in `main`
0061DCr 2               @OPCODE_3211:   ; [c64_ir] Drop
0061DCr 2  CA               dex
0061DDr 2  CA               dex
0061DEr 2               
0061DEr 2               ; <inline>:0:0 in `main`
0061DEr 2               @OPCODE_3212:   ; [c64_ir] AltPop
0061DEr 2  E8               inx
0061DFr 2  E8               inx
0061E0r 2  68               pla
0061E1r 2  95 00            sta $00,x
0061E3r 2  68               pla
0061E4r 2  95 01            sta $01,x
0061E6r 2               
0061E6r 2               ; <inline>:0:0 in `main`
0061E6r 2               @OPCODE_3213:   ; [c64_ir] Drop
0061E6r 2  CA               dex
0061E7r 2  CA               dex
0061E8r 2               
0061E8r 2               ; snake.fth:133:27 in `move-snake-head`
0061E8r 2               @OPCODE_3214:   ; [c64_ir] JumpElse(152)
0061E8r 2  4C rr rr         jmp @target_152
0061EBr 2               
0061EBr 2               @target_140:
0061EBr 2               
0061EBr 2               ; snake.fth:134:3 in `move-snake-head`
0061EBr 2               @OPCODE_3216:   ; [c64_ir] PushLiteral(39)
0061EBr 2  E8               inx
0061ECr 2  E8               inx
0061EDr 2  A9 27            lda #39
0061EFr 2  95 00            sta $00,x
0061F1r 2  A9 00            lda #0
0061F3r 2  95 01            sta $01,x
0061F5r 2               
0061F5r 2               ; <inline>:0:0 in `main`
0061F5r 2               @OPCODE_3217:   ; [c64_ir] PushLiteral(7777)
0061F5r 2  E8               inx
0061F6r 2  E8               inx
0061F7r 2  A9 61            lda #97
0061F9r 2  95 00            sta $00,x
0061FBr 2  A9 1E            lda #30
0061FDr 2  95 01            sta $01,x
0061FFr 2               
0061FFr 2               ; <inline>:0:0 in `main`
0061FFr 2               @OPCODE_3218:   ; [c64_ir] AltPush
0061FFr 2  CA               dex
006200r 2  CA               dex
006201r 2  B5 03            lda $03,x
006203r 2  48               pha
006204r 2  B5 02            lda $02,x
006206r 2  48               pha
006207r 2               
006207r 2               ; src/prelude.fth:4:10 in `over`
006207r 2               @OPCODE_3219:   ; [c64_ir] AltPush
006207r 2  CA               dex
006208r 2  CA               dex
006209r 2  B5 03            lda $03,x
00620Br 2  48               pha
00620Cr 2  B5 02            lda $02,x
00620Er 2  48               pha
00620Fr 2               
00620Fr 2               ; src/prelude.fth:4:13 in `over`
00620Fr 2               @OPCODE_3220:   ; [c64_ir] TempStore
00620Fr 2  CA               dex
006210r 2  CA               dex
006211r 2  B5 03            lda $03,x
006213r 2  85 96            sta TEMP_PAX2
006215r 2  B5 02            lda $02,x
006217r 2  85 95            sta TEMP_PAX1
006219r 2               
006219r 2               ; src/prelude.fth:4:19 in `over`
006219r 2               @OPCODE_3221:   ; [c64_ir] TempLoad
006219r 2  E8               inx
00621Ar 2  E8               inx
00621Br 2  A5 95            lda TEMP_PAX1
00621Dr 2  95 00            sta $00,x
00621Fr 2  A5 96            lda TEMP_PAX2
006221r 2  95 01            sta $01,x
006223r 2               
006223r 2               ; src/prelude.fth:4:25 in `over`
006223r 2               @OPCODE_3222:   ; [c64_ir] AltPop
006223r 2  E8               inx
006224r 2  E8               inx
006225r 2  68               pla
006226r 2  95 00            sta $00,x
006228r 2  68               pla
006229r 2  95 01            sta $01,x
00622Br 2               
00622Br 2               ; src/prelude.fth:4:28 in `over`
00622Br 2               @OPCODE_3223:   ; [c64_ir] TempLoad
00622Br 2  E8               inx
00622Cr 2  E8               inx
00622Dr 2  A5 95            lda TEMP_PAX1
00622Fr 2  95 00            sta $00,x
006231r 2  A5 96            lda TEMP_PAX2
006233r 2  95 01            sta $01,x
006235r 2               
006235r 2               ; <inline>:0:0 in `main`
006235r 2               @OPCODE_3224:   ; [c64_ir] AltPop
006235r 2  E8               inx
006236r 2  E8               inx
006237r 2  68               pla
006238r 2  95 00            sta $00,x
00623Ar 2  68               pla
00623Br 2  95 01            sta $01,x
00623Dr 2               
00623Dr 2               ; <inline>:0:0 in `main`
00623Dr 2               @OPCODE_3225:   ; [c64_ir] Drop
00623Dr 2  CA               dex
00623Er 2  CA               dex
00623Fr 2               
00623Fr 2               ; <inline>:0:0 in `main`
00623Fr 2               @OPCODE_3226:   ; [c64_ir] PushLiteral(7777)
00623Fr 2  E8               inx
006240r 2  E8               inx
006241r 2  A9 61            lda #97
006243r 2  95 00            sta $00,x
006245r 2  A9 1E            lda #30
006247r 2  95 01            sta $01,x
006249r 2               
006249r 2               ; <inline>:0:0 in `main`
006249r 2               @OPCODE_3227:   ; [c64_ir] AltPush
006249r 2  CA               dex
00624Ar 2  CA               dex
00624Br 2  B5 03            lda $03,x
00624Dr 2  48               pha
00624Er 2  B5 02            lda $02,x
006250r 2  48               pha
006251r 2               
006251r 2               ; <inline>:0:0 in `main`
006251r 2               @OPCODE_3228:   ; [c64_ir] PushLiteral(7777)
006251r 2  E8               inx
006252r 2  E8               inx
006253r 2  A9 61            lda #97
006255r 2  95 00            sta $00,x
006257r 2  A9 1E            lda #30
006259r 2  95 01            sta $01,x
00625Br 2               
00625Br 2               ; <inline>:0:0 in `main`
00625Br 2               @OPCODE_3229:   ; [c64_ir] AltPush
00625Br 2  CA               dex
00625Cr 2  CA               dex
00625Dr 2  B5 03            lda $03,x
00625Fr 2  48               pha
006260r 2  B5 02            lda $02,x
006262r 2  48               pha
006263r 2               
006263r 2               ; <inline>:0:0 in `main`
006263r 2               @OPCODE_3230:   ; [c64_ir] PushLiteral(7777)
006263r 2  E8               inx
006264r 2  E8               inx
006265r 2  A9 61            lda #97
006267r 2  95 00            sta $00,x
006269r 2  A9 1E            lda #30
00626Br 2  95 01            sta $01,x
00626Dr 2               
00626Dr 2               ; <inline>:0:0 in `main`
00626Dr 2               @OPCODE_3231:   ; [c64_ir] AltPush
00626Dr 2  CA               dex
00626Er 2  CA               dex
00626Fr 2  B5 03            lda $03,x
006271r 2  48               pha
006272r 2  B5 02            lda $02,x
006274r 2  48               pha
006275r 2               
006275r 2               ; <inline>:0:0 in `main`
006275r 2               @OPCODE_3232:   ; [c64_ir] PushLiteral(7777)
006275r 2  E8               inx
006276r 2  E8               inx
006277r 2  A9 61            lda #97
006279r 2  95 00            sta $00,x
00627Br 2  A9 1E            lda #30
00627Dr 2  95 01            sta $01,x
00627Fr 2               
00627Fr 2               ; <inline>:0:0 in `main`
00627Fr 2               @OPCODE_3233:   ; [c64_ir] AltPush
00627Fr 2  CA               dex
006280r 2  CA               dex
006281r 2  B5 03            lda $03,x
006283r 2  48               pha
006284r 2  B5 02            lda $02,x
006286r 2  48               pha
006287r 2               
006287r 2               ; src/prelude.fth:14:12 in `invert`
006287r 2               @OPCODE_3234:   ; [c64_ir] PushLiteral(-1)
006287r 2  E8               inx
006288r 2  E8               inx
006289r 2  A9 FF            lda #255
00628Br 2  95 00            sta $00,x
00628Dr 2  A9 FF            lda #255
00628Fr 2  95 01            sta $01,x
006291r 2               
006291r 2               ; src/prelude.fth:14:15 in `invert`
006291r 2               @OPCODE_3235:   ; [c64_ir] Nand
006291r 2                   ; 26
006291r 2  CA               dex
006292r 2  CA               dex
006293r 2  B5 00            lda $00,x
006295r 2  35 02            and $02,x
006297r 2  49 FF            eor #$ff
006299r 2  95 00            sta $00,x
00629Br 2  B5 01            lda $01,x
00629Dr 2  35 03            and $03,x
00629Fr 2  49 FF            eor #$ff
0062A1r 2  95 01            sta $01,x
0062A3r 2               
0062A3r 2               ; <inline>:0:0 in `main`
0062A3r 2               @OPCODE_3236:   ; [c64_ir] AltPop
0062A3r 2  E8               inx
0062A4r 2  E8               inx
0062A5r 2  68               pla
0062A6r 2  95 00            sta $00,x
0062A8r 2  68               pla
0062A9r 2  95 01            sta $01,x
0062ABr 2               
0062ABr 2               ; <inline>:0:0 in `main`
0062ABr 2               @OPCODE_3237:   ; [c64_ir] Drop
0062ABr 2  CA               dex
0062ACr 2  CA               dex
0062ADr 2               
0062ADr 2               ; src/prelude.fth:15:19 in `negate`
0062ADr 2               @OPCODE_3238:   ; [c64_ir] PushLiteral(1)
0062ADr 2  E8               inx
0062AEr 2  E8               inx
0062AFr 2  A9 01            lda #1
0062B1r 2  95 00            sta $00,x
0062B3r 2  A9 00            lda #0
0062B5r 2  95 01            sta $01,x
0062B7r 2               
0062B7r 2               ; src/prelude.fth:15:21 in `negate`
0062B7r 2               @OPCODE_3239:   ; [c64_ir] Add
0062B7r 2                   ; 21
0062B7r 2  CA               dex
0062B8r 2  CA               dex
0062B9r 2  18               clc
0062BAr 2  B5 00            lda $00,x
0062BCr 2  75 02            adc $02,x
0062BEr 2  95 00            sta $00,x
0062C0r 2  B5 01            lda $01,x
0062C2r 2  75 03            adc $03,x
0062C4r 2  95 01            sta $01,x
0062C6r 2               
0062C6r 2               ; <inline>:0:0 in `main`
0062C6r 2               @OPCODE_3240:   ; [c64_ir] AltPop
0062C6r 2  E8               inx
0062C7r 2  E8               inx
0062C8r 2  68               pla
0062C9r 2  95 00            sta $00,x
0062CBr 2  68               pla
0062CCr 2  95 01            sta $01,x
0062CEr 2               
0062CEr 2               ; <inline>:0:0 in `main`
0062CEr 2               @OPCODE_3241:   ; [c64_ir] Drop
0062CEr 2  CA               dex
0062CFr 2  CA               dex
0062D0r 2               
0062D0r 2               ; src/prelude.fth:16:19 in `-`
0062D0r 2               @OPCODE_3242:   ; [c64_ir] Add
0062D0r 2                   ; 21
0062D0r 2  CA               dex
0062D1r 2  CA               dex
0062D2r 2  18               clc
0062D3r 2  B5 00            lda $00,x
0062D5r 2  75 02            adc $02,x
0062D7r 2  95 00            sta $00,x
0062D9r 2  B5 01            lda $01,x
0062DBr 2  75 03            adc $03,x
0062DDr 2  95 01            sta $01,x
0062DFr 2               
0062DFr 2               ; <inline>:0:0 in `main`
0062DFr 2               @OPCODE_3243:   ; [c64_ir] AltPop
0062DFr 2  E8               inx
0062E0r 2  E8               inx
0062E1r 2  68               pla
0062E2r 2  95 00            sta $00,x
0062E4r 2  68               pla
0062E5r 2  95 01            sta $01,x
0062E7r 2               
0062E7r 2               ; <inline>:0:0 in `main`
0062E7r 2               @OPCODE_3244:   ; [c64_ir] Drop
0062E7r 2  CA               dex
0062E8r 2  CA               dex
0062E9r 2               
0062E9r 2               ; <inline>:0:0 in `main`
0062E9r 2               @OPCODE_3245:   ; [c64_ir] PushLiteral(7777)
0062E9r 2  E8               inx
0062EAr 2  E8               inx
0062EBr 2  A9 61            lda #97
0062EDr 2  95 00            sta $00,x
0062EFr 2  A9 1E            lda #30
0062F1r 2  95 01            sta $01,x
0062F3r 2               
0062F3r 2               ; <inline>:0:0 in `main`
0062F3r 2               @OPCODE_3246:   ; [c64_ir] AltPush
0062F3r 2  CA               dex
0062F4r 2  CA               dex
0062F5r 2  B5 03            lda $03,x
0062F7r 2  48               pha
0062F8r 2  B5 02            lda $02,x
0062FAr 2  48               pha
0062FBr 2               
0062FBr 2               ; src/prelude.fth:21:8 in `0=`
0062FBr 2               @OPCODE_3247:   ; [c64_ir] JumpIf0(142)
0062FBr 2  CA               dex
0062FCr 2  CA               dex
0062FDr 2  B5 02            lda $02,x
0062FFr 2  15 03            ora $03,x
006301r 2  D0 03            bne *+5
006303r 2  4C rr rr         jmp @target_142
006306r 2               
006306r 2               @target_141:
006306r 2               
006306r 2               ; src/prelude.fth:21:11 in `0=`
006306r 2               @OPCODE_3249:   ; [c64_ir] PushLiteral(0)
006306r 2  E8               inx
006307r 2  E8               inx
006308r 2  A9 00            lda #0
00630Ar 2  95 00            sta $00,x
00630Cr 2  A9 00            lda #0
00630Er 2  95 01            sta $01,x
006310r 2               
006310r 2               ; src/prelude.fth:21:13 in `0=`
006310r 2               @OPCODE_3250:   ; [c64_ir] JumpElse(143)
006310r 2  4C rr rr         jmp @target_143
006313r 2               
006313r 2               @target_142:
006313r 2               
006313r 2               ; src/prelude.fth:21:18 in `0=`
006313r 2               @OPCODE_3252:   ; [c64_ir] PushLiteral(-1)
006313r 2  E8               inx
006314r 2  E8               inx
006315r 2  A9 FF            lda #255
006317r 2  95 00            sta $00,x
006319r 2  A9 FF            lda #255
00631Br 2  95 01            sta $01,x
00631Dr 2               
00631Dr 2               ; src/prelude.fth:21:21 in `0=`
00631Dr 2               @OPCODE_3253:   ; [c64_ir] JumpTarget(142)
00631Dr 2               
00631Dr 2               @target_143:
00631Dr 2               
00631Dr 2               ; <inline>:0:0 in `main`
00631Dr 2               @OPCODE_3255:   ; [c64_ir] AltPop
00631Dr 2  E8               inx
00631Er 2  E8               inx
00631Fr 2  68               pla
006320r 2  95 00            sta $00,x
006322r 2  68               pla
006323r 2  95 01            sta $01,x
006325r 2               
006325r 2               ; <inline>:0:0 in `main`
006325r 2               @OPCODE_3256:   ; [c64_ir] Drop
006325r 2  CA               dex
006326r 2  CA               dex
006327r 2               
006327r 2               ; <inline>:0:0 in `main`
006327r 2               @OPCODE_3257:   ; [c64_ir] AltPop
006327r 2  E8               inx
006328r 2  E8               inx
006329r 2  68               pla
00632Ar 2  95 00            sta $00,x
00632Cr 2  68               pla
00632Dr 2  95 01            sta $01,x
00632Fr 2               
00632Fr 2               ; <inline>:0:0 in `main`
00632Fr 2               @OPCODE_3258:   ; [c64_ir] Drop
00632Fr 2  CA               dex
006330r 2  CA               dex
006331r 2               
006331r 2               ; snake.fth:134:16 in `move-snake-head`
006331r 2               @OPCODE_3259:   ; [c64_ir] JumpIf0(145)
006331r 2  CA               dex
006332r 2  CA               dex
006333r 2  B5 02            lda $02,x
006335r 2  15 03            ora $03,x
006337r 2  D0 03            bne *+5
006339r 2  4C rr rr         jmp @target_145
00633Cr 2               
00633Cr 2               @target_144:
00633Cr 2               
00633Cr 2               ; <inline>:0:0 in `main`
00633Cr 2               @OPCODE_3261:   ; [c64_ir] PushLiteral(7777)
00633Cr 2  E8               inx
00633Dr 2  E8               inx
00633Er 2  A9 61            lda #97
006340r 2  95 00            sta $00,x
006342r 2  A9 1E            lda #30
006344r 2  95 01            sta $01,x
006346r 2               
006346r 2               ; <inline>:0:0 in `main`
006346r 2               @OPCODE_3262:   ; [c64_ir] AltPush
006346r 2  CA               dex
006347r 2  CA               dex
006348r 2  B5 03            lda $03,x
00634Ar 2  48               pha
00634Br 2  B5 02            lda $02,x
00634Dr 2  48               pha
00634Er 2               
00634Er 2               ; snake.fth:129:15 in `move-right`
00634Er 2               @OPCODE_3263:   ; [c64_ir] PushLiteral(1)
00634Er 2  E8               inx
00634Fr 2  E8               inx
006350r 2  A9 01            lda #1
006352r 2  95 00            sta $00,x
006354r 2  A9 00            lda #0
006356r 2  95 01            sta $01,x
006358r 2               
006358r 2               ; snake.fth:129:17 in `move-right`
006358r 2               @OPCODE_3264:   ; [c64_ir] PushLiteral(-28668)
006358r 2  E8               inx
006359r 2  E8               inx
00635Ar 2  A9 04            lda #4
00635Cr 2  95 00            sta $00,x
00635Er 2  A9 90            lda #144
006360r 2  95 01            sta $01,x
006362r 2               
006362r 2               ; <inline>:0:0 in `main`
006362r 2               @OPCODE_3265:   ; [c64_ir] PushLiteral(7777)
006362r 2  E8               inx
006363r 2  E8               inx
006364r 2  A9 61            lda #97
006366r 2  95 00            sta $00,x
006368r 2  A9 1E            lda #30
00636Ar 2  95 01            sta $01,x
00636Cr 2               
00636Cr 2               ; <inline>:0:0 in `main`
00636Cr 2               @OPCODE_3266:   ; [c64_ir] AltPush
00636Cr 2  CA               dex
00636Dr 2  CA               dex
00636Er 2  B5 03            lda $03,x
006370r 2  48               pha
006371r 2  B5 02            lda $02,x
006373r 2  48               pha
006374r 2               
006374r 2               ; <inline>:0:0 in `main`
006374r 2               @OPCODE_3267:   ; [c64_ir] PushLiteral(7777)
006374r 2  E8               inx
006375r 2  E8               inx
006376r 2  A9 61            lda #97
006378r 2  95 00            sta $00,x
00637Ar 2  A9 1E            lda #30
00637Cr 2  95 01            sta $01,x
00637Er 2               
00637Er 2               ; <inline>:0:0 in `main`
00637Er 2               @OPCODE_3268:   ; [c64_ir] AltPush
00637Er 2  CA               dex
00637Fr 2  CA               dex
006380r 2  B5 03            lda $03,x
006382r 2  48               pha
006383r 2  B5 02            lda $02,x
006385r 2  48               pha
006386r 2               
006386r 2               ; src/prelude.fth:6:10 in `dup`
006386r 2               @OPCODE_3269:   ; [c64_ir] TempStore
006386r 2  CA               dex
006387r 2  CA               dex
006388r 2  B5 03            lda $03,x
00638Ar 2  85 96            sta TEMP_PAX2
00638Cr 2  B5 02            lda $02,x
00638Er 2  85 95            sta TEMP_PAX1
006390r 2               
006390r 2               ; src/prelude.fth:6:16 in `dup`
006390r 2               @OPCODE_3270:   ; [c64_ir] TempLoad
006390r 2  E8               inx
006391r 2  E8               inx
006392r 2  A5 95            lda TEMP_PAX1
006394r 2  95 00            sta $00,x
006396r 2  A5 96            lda TEMP_PAX2
006398r 2  95 01            sta $01,x
00639Ar 2               
00639Ar 2               ; src/prelude.fth:6:22 in `dup`
00639Ar 2               @OPCODE_3271:   ; [c64_ir] TempLoad
00639Ar 2  E8               inx
00639Br 2  E8               inx
00639Cr 2  A5 95            lda TEMP_PAX1
00639Er 2  95 00            sta $00,x
0063A0r 2  A5 96            lda TEMP_PAX2
0063A2r 2  95 01            sta $01,x
0063A4r 2               
0063A4r 2               ; <inline>:0:0 in `main`
0063A4r 2               @OPCODE_3272:   ; [c64_ir] AltPop
0063A4r 2  E8               inx
0063A5r 2  E8               inx
0063A6r 2  68               pla
0063A7r 2  95 00            sta $00,x
0063A9r 2  68               pla
0063AAr 2  95 01            sta $01,x
0063ACr 2               
0063ACr 2               ; <inline>:0:0 in `main`
0063ACr 2               @OPCODE_3273:   ; [c64_ir] Drop
0063ACr 2  CA               dex
0063ADr 2  CA               dex
0063AEr 2               
0063AEr 2               ; src/prelude.fth:20:12 in `+!`
0063AEr 2               @OPCODE_3274:   ; [c64_ir] AltPush
0063AEr 2  CA               dex
0063AFr 2  CA               dex
0063B0r 2  B5 03            lda $03,x
0063B2r 2  48               pha
0063B3r 2  B5 02            lda $02,x
0063B5r 2  48               pha
0063B6r 2               
0063B6r 2               ; src/prelude.fth:20:15 in `+!`
0063B6r 2               @OPCODE_3275:   ; [c64_ir] Load
0063B6r 2  A1 00            lda ($00,x)
0063B8r 2  95 00            sta $00,x
0063BAr 2  A9 00            lda #0
0063BCr 2  95 01            sta $01,x
0063BEr 2               
0063BEr 2               ; src/prelude.fth:20:17 in `+!`
0063BEr 2               @OPCODE_3276:   ; [c64_ir] Add
0063BEr 2                   ; 21
0063BEr 2  CA               dex
0063BFr 2  CA               dex
0063C0r 2  18               clc
0063C1r 2  B5 00            lda $00,x
0063C3r 2  75 02            adc $02,x
0063C5r 2  95 00            sta $00,x
0063C7r 2  B5 01            lda $01,x
0063C9r 2  75 03            adc $03,x
0063CBr 2  95 01            sta $01,x
0063CDr 2               
0063CDr 2               ; src/prelude.fth:20:19 in `+!`
0063CDr 2               @OPCODE_3277:   ; [c64_ir] AltPop
0063CDr 2  E8               inx
0063CEr 2  E8               inx
0063CFr 2  68               pla
0063D0r 2  95 00            sta $00,x
0063D2r 2  68               pla
0063D3r 2  95 01            sta $01,x
0063D5r 2               
0063D5r 2               ; src/prelude.fth:20:22 in `+!`
0063D5r 2               @OPCODE_3278:   ; [c64_ir] Store
0063D5r 2  CA               dex
0063D6r 2  CA               dex
0063D7r 2  CA               dex
0063D8r 2  CA               dex
0063D9r 2  B5 02            lda $02,x
0063DBr 2  81 04            sta ($04,x)
0063DDr 2                   ; TODO high byte
0063DDr 2               
0063DDr 2               ; <inline>:0:0 in `main`
0063DDr 2               @OPCODE_3279:   ; [c64_ir] AltPop
0063DDr 2  E8               inx
0063DEr 2  E8               inx
0063DFr 2  68               pla
0063E0r 2  95 00            sta $00,x
0063E2r 2  68               pla
0063E3r 2  95 01            sta $01,x
0063E5r 2               
0063E5r 2               ; <inline>:0:0 in `main`
0063E5r 2               @OPCODE_3280:   ; [c64_ir] Drop
0063E5r 2  CA               dex
0063E6r 2  CA               dex
0063E7r 2               
0063E7r 2               ; <inline>:0:0 in `main`
0063E7r 2               @OPCODE_3281:   ; [c64_ir] AltPop
0063E7r 2  E8               inx
0063E8r 2  E8               inx
0063E9r 2  68               pla
0063EAr 2  95 00            sta $00,x
0063ECr 2  68               pla
0063EDr 2  95 01            sta $01,x
0063EFr 2               
0063EFr 2               ; <inline>:0:0 in `main`
0063EFr 2               @OPCODE_3282:   ; [c64_ir] Drop
0063EFr 2  CA               dex
0063F0r 2  CA               dex
0063F1r 2               
0063F1r 2               ; snake.fth:134:30 in `move-snake-head`
0063F1r 2               @OPCODE_3283:   ; [c64_ir] JumpElse(151)
0063F1r 2  4C rr rr         jmp @target_151
0063F4r 2               
0063F4r 2               @target_145:
0063F4r 2               
0063F4r 2               ; snake.fth:135:3 in `move-snake-head`
0063F4r 2               @OPCODE_3285:   ; [c64_ir] PushLiteral(40)
0063F4r 2  E8               inx
0063F5r 2  E8               inx
0063F6r 2  A9 28            lda #40
0063F8r 2  95 00            sta $00,x
0063FAr 2  A9 00            lda #0
0063FCr 2  95 01            sta $01,x
0063FEr 2               
0063FEr 2               ; <inline>:0:0 in `main`
0063FEr 2               @OPCODE_3286:   ; [c64_ir] PushLiteral(7777)
0063FEr 2  E8               inx
0063FFr 2  E8               inx
006400r 2  A9 61            lda #97
006402r 2  95 00            sta $00,x
006404r 2  A9 1E            lda #30
006406r 2  95 01            sta $01,x
006408r 2               
006408r 2               ; <inline>:0:0 in `main`
006408r 2               @OPCODE_3287:   ; [c64_ir] AltPush
006408r 2  CA               dex
006409r 2  CA               dex
00640Ar 2  B5 03            lda $03,x
00640Cr 2  48               pha
00640Dr 2  B5 02            lda $02,x
00640Fr 2  48               pha
006410r 2               
006410r 2               ; src/prelude.fth:4:10 in `over`
006410r 2               @OPCODE_3288:   ; [c64_ir] AltPush
006410r 2  CA               dex
006411r 2  CA               dex
006412r 2  B5 03            lda $03,x
006414r 2  48               pha
006415r 2  B5 02            lda $02,x
006417r 2  48               pha
006418r 2               
006418r 2               ; src/prelude.fth:4:13 in `over`
006418r 2               @OPCODE_3289:   ; [c64_ir] TempStore
006418r 2  CA               dex
006419r 2  CA               dex
00641Ar 2  B5 03            lda $03,x
00641Cr 2  85 96            sta TEMP_PAX2
00641Er 2  B5 02            lda $02,x
006420r 2  85 95            sta TEMP_PAX1
006422r 2               
006422r 2               ; src/prelude.fth:4:19 in `over`
006422r 2               @OPCODE_3290:   ; [c64_ir] TempLoad
006422r 2  E8               inx
006423r 2  E8               inx
006424r 2  A5 95            lda TEMP_PAX1
006426r 2  95 00            sta $00,x
006428r 2  A5 96            lda TEMP_PAX2
00642Ar 2  95 01            sta $01,x
00642Cr 2               
00642Cr 2               ; src/prelude.fth:4:25 in `over`
00642Cr 2               @OPCODE_3291:   ; [c64_ir] AltPop
00642Cr 2  E8               inx
00642Dr 2  E8               inx
00642Er 2  68               pla
00642Fr 2  95 00            sta $00,x
006431r 2  68               pla
006432r 2  95 01            sta $01,x
006434r 2               
006434r 2               ; src/prelude.fth:4:28 in `over`
006434r 2               @OPCODE_3292:   ; [c64_ir] TempLoad
006434r 2  E8               inx
006435r 2  E8               inx
006436r 2  A5 95            lda TEMP_PAX1
006438r 2  95 00            sta $00,x
00643Ar 2  A5 96            lda TEMP_PAX2
00643Cr 2  95 01            sta $01,x
00643Er 2               
00643Er 2               ; <inline>:0:0 in `main`
00643Er 2               @OPCODE_3293:   ; [c64_ir] AltPop
00643Er 2  E8               inx
00643Fr 2  E8               inx
006440r 2  68               pla
006441r 2  95 00            sta $00,x
006443r 2  68               pla
006444r 2  95 01            sta $01,x
006446r 2               
006446r 2               ; <inline>:0:0 in `main`
006446r 2               @OPCODE_3294:   ; [c64_ir] Drop
006446r 2  CA               dex
006447r 2  CA               dex
006448r 2               
006448r 2               ; <inline>:0:0 in `main`
006448r 2               @OPCODE_3295:   ; [c64_ir] PushLiteral(7777)
006448r 2  E8               inx
006449r 2  E8               inx
00644Ar 2  A9 61            lda #97
00644Cr 2  95 00            sta $00,x
00644Er 2  A9 1E            lda #30
006450r 2  95 01            sta $01,x
006452r 2               
006452r 2               ; <inline>:0:0 in `main`
006452r 2               @OPCODE_3296:   ; [c64_ir] AltPush
006452r 2  CA               dex
006453r 2  CA               dex
006454r 2  B5 03            lda $03,x
006456r 2  48               pha
006457r 2  B5 02            lda $02,x
006459r 2  48               pha
00645Ar 2               
00645Ar 2               ; <inline>:0:0 in `main`
00645Ar 2               @OPCODE_3297:   ; [c64_ir] PushLiteral(7777)
00645Ar 2  E8               inx
00645Br 2  E8               inx
00645Cr 2  A9 61            lda #97
00645Er 2  95 00            sta $00,x
006460r 2  A9 1E            lda #30
006462r 2  95 01            sta $01,x
006464r 2               
006464r 2               ; <inline>:0:0 in `main`
006464r 2               @OPCODE_3298:   ; [c64_ir] AltPush
006464r 2  CA               dex
006465r 2  CA               dex
006466r 2  B5 03            lda $03,x
006468r 2  48               pha
006469r 2  B5 02            lda $02,x
00646Br 2  48               pha
00646Cr 2               
00646Cr 2               ; <inline>:0:0 in `main`
00646Cr 2               @OPCODE_3299:   ; [c64_ir] PushLiteral(7777)
00646Cr 2  E8               inx
00646Dr 2  E8               inx
00646Er 2  A9 61            lda #97
006470r 2  95 00            sta $00,x
006472r 2  A9 1E            lda #30
006474r 2  95 01            sta $01,x
006476r 2               
006476r 2               ; <inline>:0:0 in `main`
006476r 2               @OPCODE_3300:   ; [c64_ir] AltPush
006476r 2  CA               dex
006477r 2  CA               dex
006478r 2  B5 03            lda $03,x
00647Ar 2  48               pha
00647Br 2  B5 02            lda $02,x
00647Dr 2  48               pha
00647Er 2               
00647Er 2               ; <inline>:0:0 in `main`
00647Er 2               @OPCODE_3301:   ; [c64_ir] PushLiteral(7777)
00647Er 2  E8               inx
00647Fr 2  E8               inx
006480r 2  A9 61            lda #97
006482r 2  95 00            sta $00,x
006484r 2  A9 1E            lda #30
006486r 2  95 01            sta $01,x
006488r 2               
006488r 2               ; <inline>:0:0 in `main`
006488r 2               @OPCODE_3302:   ; [c64_ir] AltPush
006488r 2  CA               dex
006489r 2  CA               dex
00648Ar 2  B5 03            lda $03,x
00648Cr 2  48               pha
00648Dr 2  B5 02            lda $02,x
00648Fr 2  48               pha
006490r 2               
006490r 2               ; src/prelude.fth:14:12 in `invert`
006490r 2               @OPCODE_3303:   ; [c64_ir] PushLiteral(-1)
006490r 2  E8               inx
006491r 2  E8               inx
006492r 2  A9 FF            lda #255
006494r 2  95 00            sta $00,x
006496r 2  A9 FF            lda #255
006498r 2  95 01            sta $01,x
00649Ar 2               
00649Ar 2               ; src/prelude.fth:14:15 in `invert`
00649Ar 2               @OPCODE_3304:   ; [c64_ir] Nand
00649Ar 2                   ; 26
00649Ar 2  CA               dex
00649Br 2  CA               dex
00649Cr 2  B5 00            lda $00,x
00649Er 2  35 02            and $02,x
0064A0r 2  49 FF            eor #$ff
0064A2r 2  95 00            sta $00,x
0064A4r 2  B5 01            lda $01,x
0064A6r 2  35 03            and $03,x
0064A8r 2  49 FF            eor #$ff
0064AAr 2  95 01            sta $01,x
0064ACr 2               
0064ACr 2               ; <inline>:0:0 in `main`
0064ACr 2               @OPCODE_3305:   ; [c64_ir] AltPop
0064ACr 2  E8               inx
0064ADr 2  E8               inx
0064AEr 2  68               pla
0064AFr 2  95 00            sta $00,x
0064B1r 2  68               pla
0064B2r 2  95 01            sta $01,x
0064B4r 2               
0064B4r 2               ; <inline>:0:0 in `main`
0064B4r 2               @OPCODE_3306:   ; [c64_ir] Drop
0064B4r 2  CA               dex
0064B5r 2  CA               dex
0064B6r 2               
0064B6r 2               ; src/prelude.fth:15:19 in `negate`
0064B6r 2               @OPCODE_3307:   ; [c64_ir] PushLiteral(1)
0064B6r 2  E8               inx
0064B7r 2  E8               inx
0064B8r 2  A9 01            lda #1
0064BAr 2  95 00            sta $00,x
0064BCr 2  A9 00            lda #0
0064BEr 2  95 01            sta $01,x
0064C0r 2               
0064C0r 2               ; src/prelude.fth:15:21 in `negate`
0064C0r 2               @OPCODE_3308:   ; [c64_ir] Add
0064C0r 2                   ; 21
0064C0r 2  CA               dex
0064C1r 2  CA               dex
0064C2r 2  18               clc
0064C3r 2  B5 00            lda $00,x
0064C5r 2  75 02            adc $02,x
0064C7r 2  95 00            sta $00,x
0064C9r 2  B5 01            lda $01,x
0064CBr 2  75 03            adc $03,x
0064CDr 2  95 01            sta $01,x
0064CFr 2               
0064CFr 2               ; <inline>:0:0 in `main`
0064CFr 2               @OPCODE_3309:   ; [c64_ir] AltPop
0064CFr 2  E8               inx
0064D0r 2  E8               inx
0064D1r 2  68               pla
0064D2r 2  95 00            sta $00,x
0064D4r 2  68               pla
0064D5r 2  95 01            sta $01,x
0064D7r 2               
0064D7r 2               ; <inline>:0:0 in `main`
0064D7r 2               @OPCODE_3310:   ; [c64_ir] Drop
0064D7r 2  CA               dex
0064D8r 2  CA               dex
0064D9r 2               
0064D9r 2               ; src/prelude.fth:16:19 in `-`
0064D9r 2               @OPCODE_3311:   ; [c64_ir] Add
0064D9r 2                   ; 21
0064D9r 2  CA               dex
0064DAr 2  CA               dex
0064DBr 2  18               clc
0064DCr 2  B5 00            lda $00,x
0064DEr 2  75 02            adc $02,x
0064E0r 2  95 00            sta $00,x
0064E2r 2  B5 01            lda $01,x
0064E4r 2  75 03            adc $03,x
0064E6r 2  95 01            sta $01,x
0064E8r 2               
0064E8r 2               ; <inline>:0:0 in `main`
0064E8r 2               @OPCODE_3312:   ; [c64_ir] AltPop
0064E8r 2  E8               inx
0064E9r 2  E8               inx
0064EAr 2  68               pla
0064EBr 2  95 00            sta $00,x
0064EDr 2  68               pla
0064EEr 2  95 01            sta $01,x
0064F0r 2               
0064F0r 2               ; <inline>:0:0 in `main`
0064F0r 2               @OPCODE_3313:   ; [c64_ir] Drop
0064F0r 2  CA               dex
0064F1r 2  CA               dex
0064F2r 2               
0064F2r 2               ; <inline>:0:0 in `main`
0064F2r 2               @OPCODE_3314:   ; [c64_ir] PushLiteral(7777)
0064F2r 2  E8               inx
0064F3r 2  E8               inx
0064F4r 2  A9 61            lda #97
0064F6r 2  95 00            sta $00,x
0064F8r 2  A9 1E            lda #30
0064FAr 2  95 01            sta $01,x
0064FCr 2               
0064FCr 2               ; <inline>:0:0 in `main`
0064FCr 2               @OPCODE_3315:   ; [c64_ir] AltPush
0064FCr 2  CA               dex
0064FDr 2  CA               dex
0064FEr 2  B5 03            lda $03,x
006500r 2  48               pha
006501r 2  B5 02            lda $02,x
006503r 2  48               pha
006504r 2               
006504r 2               ; src/prelude.fth:21:8 in `0=`
006504r 2               @OPCODE_3316:   ; [c64_ir] JumpIf0(147)
006504r 2  CA               dex
006505r 2  CA               dex
006506r 2  B5 02            lda $02,x
006508r 2  15 03            ora $03,x
00650Ar 2  D0 03            bne *+5
00650Cr 2  4C rr rr         jmp @target_147
00650Fr 2               
00650Fr 2               @target_146:
00650Fr 2               
00650Fr 2               ; src/prelude.fth:21:11 in `0=`
00650Fr 2               @OPCODE_3318:   ; [c64_ir] PushLiteral(0)
00650Fr 2  E8               inx
006510r 2  E8               inx
006511r 2  A9 00            lda #0
006513r 2  95 00            sta $00,x
006515r 2  A9 00            lda #0
006517r 2  95 01            sta $01,x
006519r 2               
006519r 2               ; src/prelude.fth:21:13 in `0=`
006519r 2               @OPCODE_3319:   ; [c64_ir] JumpElse(148)
006519r 2  4C rr rr         jmp @target_148
00651Cr 2               
00651Cr 2               @target_147:
00651Cr 2               
00651Cr 2               ; src/prelude.fth:21:18 in `0=`
00651Cr 2               @OPCODE_3321:   ; [c64_ir] PushLiteral(-1)
00651Cr 2  E8               inx
00651Dr 2  E8               inx
00651Er 2  A9 FF            lda #255
006520r 2  95 00            sta $00,x
006522r 2  A9 FF            lda #255
006524r 2  95 01            sta $01,x
006526r 2               
006526r 2               ; src/prelude.fth:21:21 in `0=`
006526r 2               @OPCODE_3322:   ; [c64_ir] JumpTarget(147)
006526r 2               
006526r 2               @target_148:
006526r 2               
006526r 2               ; <inline>:0:0 in `main`
006526r 2               @OPCODE_3324:   ; [c64_ir] AltPop
006526r 2  E8               inx
006527r 2  E8               inx
006528r 2  68               pla
006529r 2  95 00            sta $00,x
00652Br 2  68               pla
00652Cr 2  95 01            sta $01,x
00652Er 2               
00652Er 2               ; <inline>:0:0 in `main`
00652Er 2               @OPCODE_3325:   ; [c64_ir] Drop
00652Er 2  CA               dex
00652Fr 2  CA               dex
006530r 2               
006530r 2               ; <inline>:0:0 in `main`
006530r 2               @OPCODE_3326:   ; [c64_ir] AltPop
006530r 2  E8               inx
006531r 2  E8               inx
006532r 2  68               pla
006533r 2  95 00            sta $00,x
006535r 2  68               pla
006536r 2  95 01            sta $01,x
006538r 2               
006538r 2               ; <inline>:0:0 in `main`
006538r 2               @OPCODE_3327:   ; [c64_ir] Drop
006538r 2  CA               dex
006539r 2  CA               dex
00653Ar 2               
00653Ar 2               ; snake.fth:135:16 in `move-snake-head`
00653Ar 2               @OPCODE_3328:   ; [c64_ir] JumpIf0(150)
00653Ar 2  CA               dex
00653Br 2  CA               dex
00653Cr 2  B5 02            lda $02,x
00653Er 2  15 03            ora $03,x
006540r 2  D0 03            bne *+5
006542r 2  4C rr rr         jmp @target_150
006545r 2               
006545r 2               @target_149:
006545r 2               
006545r 2               ; <inline>:0:0 in `main`
006545r 2               @OPCODE_3330:   ; [c64_ir] PushLiteral(7777)
006545r 2  E8               inx
006546r 2  E8               inx
006547r 2  A9 61            lda #97
006549r 2  95 00            sta $00,x
00654Br 2  A9 1E            lda #30
00654Dr 2  95 01            sta $01,x
00654Fr 2               
00654Fr 2               ; <inline>:0:0 in `main`
00654Fr 2               @OPCODE_3331:   ; [c64_ir] AltPush
00654Fr 2  CA               dex
006550r 2  CA               dex
006551r 2  B5 03            lda $03,x
006553r 2  48               pha
006554r 2  B5 02            lda $02,x
006556r 2  48               pha
006557r 2               
006557r 2               ; snake.fth:128:14 in `move-down`
006557r 2               @OPCODE_3332:   ; [c64_ir] PushLiteral(1)
006557r 2  E8               inx
006558r 2  E8               inx
006559r 2  A9 01            lda #1
00655Br 2  95 00            sta $00,x
00655Dr 2  A9 00            lda #0
00655Fr 2  95 01            sta $01,x
006561r 2               
006561r 2               ; snake.fth:128:16 in `move-down`
006561r 2               @OPCODE_3333:   ; [c64_ir] PushLiteral(-27666)
006561r 2  E8               inx
006562r 2  E8               inx
006563r 2  A9 EE            lda #238
006565r 2  95 00            sta $00,x
006567r 2  A9 93            lda #147
006569r 2  95 01            sta $01,x
00656Br 2               
00656Br 2               ; <inline>:0:0 in `main`
00656Br 2               @OPCODE_3334:   ; [c64_ir] PushLiteral(7777)
00656Br 2  E8               inx
00656Cr 2  E8               inx
00656Dr 2  A9 61            lda #97
00656Fr 2  95 00            sta $00,x
006571r 2  A9 1E            lda #30
006573r 2  95 01            sta $01,x
006575r 2               
006575r 2               ; <inline>:0:0 in `main`
006575r 2               @OPCODE_3335:   ; [c64_ir] AltPush
006575r 2  CA               dex
006576r 2  CA               dex
006577r 2  B5 03            lda $03,x
006579r 2  48               pha
00657Ar 2  B5 02            lda $02,x
00657Cr 2  48               pha
00657Dr 2               
00657Dr 2               ; <inline>:0:0 in `main`
00657Dr 2               @OPCODE_3336:   ; [c64_ir] PushLiteral(7777)
00657Dr 2  E8               inx
00657Er 2  E8               inx
00657Fr 2  A9 61            lda #97
006581r 2  95 00            sta $00,x
006583r 2  A9 1E            lda #30
006585r 2  95 01            sta $01,x
006587r 2               
006587r 2               ; <inline>:0:0 in `main`
006587r 2               @OPCODE_3337:   ; [c64_ir] AltPush
006587r 2  CA               dex
006588r 2  CA               dex
006589r 2  B5 03            lda $03,x
00658Br 2  48               pha
00658Cr 2  B5 02            lda $02,x
00658Er 2  48               pha
00658Fr 2               
00658Fr 2               ; src/prelude.fth:6:10 in `dup`
00658Fr 2               @OPCODE_3338:   ; [c64_ir] TempStore
00658Fr 2  CA               dex
006590r 2  CA               dex
006591r 2  B5 03            lda $03,x
006593r 2  85 96            sta TEMP_PAX2
006595r 2  B5 02            lda $02,x
006597r 2  85 95            sta TEMP_PAX1
006599r 2               
006599r 2               ; src/prelude.fth:6:16 in `dup`
006599r 2               @OPCODE_3339:   ; [c64_ir] TempLoad
006599r 2  E8               inx
00659Ar 2  E8               inx
00659Br 2  A5 95            lda TEMP_PAX1
00659Dr 2  95 00            sta $00,x
00659Fr 2  A5 96            lda TEMP_PAX2
0065A1r 2  95 01            sta $01,x
0065A3r 2               
0065A3r 2               ; src/prelude.fth:6:22 in `dup`
0065A3r 2               @OPCODE_3340:   ; [c64_ir] TempLoad
0065A3r 2  E8               inx
0065A4r 2  E8               inx
0065A5r 2  A5 95            lda TEMP_PAX1
0065A7r 2  95 00            sta $00,x
0065A9r 2  A5 96            lda TEMP_PAX2
0065ABr 2  95 01            sta $01,x
0065ADr 2               
0065ADr 2               ; <inline>:0:0 in `main`
0065ADr 2               @OPCODE_3341:   ; [c64_ir] AltPop
0065ADr 2  E8               inx
0065AEr 2  E8               inx
0065AFr 2  68               pla
0065B0r 2  95 00            sta $00,x
0065B2r 2  68               pla
0065B3r 2  95 01            sta $01,x
0065B5r 2               
0065B5r 2               ; <inline>:0:0 in `main`
0065B5r 2               @OPCODE_3342:   ; [c64_ir] Drop
0065B5r 2  CA               dex
0065B6r 2  CA               dex
0065B7r 2               
0065B7r 2               ; src/prelude.fth:20:12 in `+!`
0065B7r 2               @OPCODE_3343:   ; [c64_ir] AltPush
0065B7r 2  CA               dex
0065B8r 2  CA               dex
0065B9r 2  B5 03            lda $03,x
0065BBr 2  48               pha
0065BCr 2  B5 02            lda $02,x
0065BEr 2  48               pha
0065BFr 2               
0065BFr 2               ; src/prelude.fth:20:15 in `+!`
0065BFr 2               @OPCODE_3344:   ; [c64_ir] Load
0065BFr 2  A1 00            lda ($00,x)
0065C1r 2  95 00            sta $00,x
0065C3r 2  A9 00            lda #0
0065C5r 2  95 01            sta $01,x
0065C7r 2               
0065C7r 2               ; src/prelude.fth:20:17 in `+!`
0065C7r 2               @OPCODE_3345:   ; [c64_ir] Add
0065C7r 2                   ; 21
0065C7r 2  CA               dex
0065C8r 2  CA               dex
0065C9r 2  18               clc
0065CAr 2  B5 00            lda $00,x
0065CCr 2  75 02            adc $02,x
0065CEr 2  95 00            sta $00,x
0065D0r 2  B5 01            lda $01,x
0065D2r 2  75 03            adc $03,x
0065D4r 2  95 01            sta $01,x
0065D6r 2               
0065D6r 2               ; src/prelude.fth:20:19 in `+!`
0065D6r 2               @OPCODE_3346:   ; [c64_ir] AltPop
0065D6r 2  E8               inx
0065D7r 2  E8               inx
0065D8r 2  68               pla
0065D9r 2  95 00            sta $00,x
0065DBr 2  68               pla
0065DCr 2  95 01            sta $01,x
0065DEr 2               
0065DEr 2               ; src/prelude.fth:20:22 in `+!`
0065DEr 2               @OPCODE_3347:   ; [c64_ir] Store
0065DEr 2  CA               dex
0065DFr 2  CA               dex
0065E0r 2  CA               dex
0065E1r 2  CA               dex
0065E2r 2  B5 02            lda $02,x
0065E4r 2  81 04            sta ($04,x)
0065E6r 2                   ; TODO high byte
0065E6r 2               
0065E6r 2               ; <inline>:0:0 in `main`
0065E6r 2               @OPCODE_3348:   ; [c64_ir] AltPop
0065E6r 2  E8               inx
0065E7r 2  E8               inx
0065E8r 2  68               pla
0065E9r 2  95 00            sta $00,x
0065EBr 2  68               pla
0065ECr 2  95 01            sta $01,x
0065EEr 2               
0065EEr 2               ; <inline>:0:0 in `main`
0065EEr 2               @OPCODE_3349:   ; [c64_ir] Drop
0065EEr 2  CA               dex
0065EFr 2  CA               dex
0065F0r 2               
0065F0r 2               ; <inline>:0:0 in `main`
0065F0r 2               @OPCODE_3350:   ; [c64_ir] AltPop
0065F0r 2  E8               inx
0065F1r 2  E8               inx
0065F2r 2  68               pla
0065F3r 2  95 00            sta $00,x
0065F5r 2  68               pla
0065F6r 2  95 01            sta $01,x
0065F8r 2               
0065F8r 2               ; <inline>:0:0 in `main`
0065F8r 2               @OPCODE_3351:   ; [c64_ir] Drop
0065F8r 2  CA               dex
0065F9r 2  CA               dex
0065FAr 2               
0065FAr 2               ; snake.fth:136:3 in `move-snake-head`
0065FAr 2               @OPCODE_3352:   ; [c64_ir] JumpTarget(149)
0065FAr 2               
0065FAr 2               @target_150:
0065FAr 2               
0065FAr 2               ; snake.fth:136:8 in `move-snake-head`
0065FAr 2               @OPCODE_3354:   ; [c64_ir] JumpTarget(150)
0065FAr 2               
0065FAr 2               @target_151:
0065FAr 2               
0065FAr 2               ; snake.fth:136:13 in `move-snake-head`
0065FAr 2               @OPCODE_3356:   ; [c64_ir] JumpTarget(151)
0065FAr 2               
0065FAr 2               @target_152:
0065FAr 2               
0065FAr 2               ; snake.fth:136:18 in `move-snake-head`
0065FAr 2               @OPCODE_3358:   ; [c64_ir] JumpTarget(152)
0065FAr 2               
0065FAr 2               @target_153:
0065FAr 2               
0065FAr 2               ; snake.fth:136:23 in `move-snake-head`
0065FAr 2               @OPCODE_3360:   ; [c64_ir] Drop
0065FAr 2  CA               dex
0065FBr 2  CA               dex
0065FCr 2               
0065FCr 2               ; <inline>:0:0 in `main`
0065FCr 2               @OPCODE_3361:   ; [c64_ir] AltPop
0065FCr 2  E8               inx
0065FDr 2  E8               inx
0065FEr 2  68               pla
0065FFr 2  95 00            sta $00,x
006601r 2  68               pla
006602r 2  95 01            sta $01,x
006604r 2               
006604r 2               ; <inline>:0:0 in `main`
006604r 2               @OPCODE_3362:   ; [c64_ir] Drop
006604r 2  CA               dex
006605r 2  CA               dex
006606r 2               
006606r 2               ; <inline>:0:0 in `main`
006606r 2               @OPCODE_3363:   ; [c64_ir] PushLiteral(7777)
006606r 2  E8               inx
006607r 2  E8               inx
006608r 2  A9 61            lda #97
00660Ar 2  95 00            sta $00,x
00660Cr 2  A9 1E            lda #30
00660Er 2  95 01            sta $01,x
006610r 2               
006610r 2               ; <inline>:0:0 in `main`
006610r 2               @OPCODE_3364:   ; [c64_ir] AltPush
006610r 2  CA               dex
006611r 2  CA               dex
006612r 2  B5 03            lda $03,x
006614r 2  48               pha
006615r 2  B5 02            lda $02,x
006617r 2  48               pha
006618r 2               
006618r 2               ; snake.fth:184:3 in `check-apple`
006618r 2               @OPCODE_3365:   ; [c64_ir] PushLiteral(-28668)
006618r 2  E8               inx
006619r 2  E8               inx
00661Ar 2  A9 04            lda #4
00661Cr 2  95 00            sta $00,x
00661Er 2  A9 90            lda #144
006620r 2  95 01            sta $01,x
006622r 2               
006622r 2               ; snake.fth:184:16 in `check-apple`
006622r 2               @OPCODE_3366:   ; [c64_ir] Load
006622r 2  A1 00            lda ($00,x)
006624r 2  95 00            sta $00,x
006626r 2  A9 00            lda #0
006628r 2  95 01            sta $01,x
00662Ar 2               
00662Ar 2               ; snake.fth:184:18 in `check-apple`
00662Ar 2               @OPCODE_3367:   ; [c64_ir] PushLiteral(-26664)
00662Ar 2  E8               inx
00662Br 2  E8               inx
00662Cr 2  A9 D8            lda #216
00662Er 2  95 00            sta $00,x
006630r 2  A9 97            lda #151
006632r 2  95 01            sta $01,x
006634r 2               
006634r 2               ; snake.fth:184:26 in `check-apple`
006634r 2               @OPCODE_3368:   ; [c64_ir] Load
006634r 2  A1 00            lda ($00,x)
006636r 2  95 00            sta $00,x
006638r 2  A9 00            lda #0
00663Ar 2  95 01            sta $01,x
00663Cr 2               
00663Cr 2               ; <inline>:0:0 in `main`
00663Cr 2               @OPCODE_3369:   ; [c64_ir] PushLiteral(7777)
00663Cr 2  E8               inx
00663Dr 2  E8               inx
00663Er 2  A9 61            lda #97
006640r 2  95 00            sta $00,x
006642r 2  A9 1E            lda #30
006644r 2  95 01            sta $01,x
006646r 2               
006646r 2               ; <inline>:0:0 in `main`
006646r 2               @OPCODE_3370:   ; [c64_ir] AltPush
006646r 2  CA               dex
006647r 2  CA               dex
006648r 2  B5 03            lda $03,x
00664Ar 2  48               pha
00664Br 2  B5 02            lda $02,x
00664Dr 2  48               pha
00664Er 2               
00664Er 2               ; <inline>:0:0 in `main`
00664Er 2               @OPCODE_3371:   ; [c64_ir] PushLiteral(7777)
00664Er 2  E8               inx
00664Fr 2  E8               inx
006650r 2  A9 61            lda #97
006652r 2  95 00            sta $00,x
006654r 2  A9 1E            lda #30
006656r 2  95 01            sta $01,x
006658r 2               
006658r 2               ; <inline>:0:0 in `main`
006658r 2               @OPCODE_3372:   ; [c64_ir] AltPush
006658r 2  CA               dex
006659r 2  CA               dex
00665Ar 2  B5 03            lda $03,x
00665Cr 2  48               pha
00665Dr 2  B5 02            lda $02,x
00665Fr 2  48               pha
006660r 2               
006660r 2               ; <inline>:0:0 in `main`
006660r 2               @OPCODE_3373:   ; [c64_ir] PushLiteral(7777)
006660r 2  E8               inx
006661r 2  E8               inx
006662r 2  A9 61            lda #97
006664r 2  95 00            sta $00,x
006666r 2  A9 1E            lda #30
006668r 2  95 01            sta $01,x
00666Ar 2               
00666Ar 2               ; <inline>:0:0 in `main`
00666Ar 2               @OPCODE_3374:   ; [c64_ir] AltPush
00666Ar 2  CA               dex
00666Br 2  CA               dex
00666Cr 2  B5 03            lda $03,x
00666Er 2  48               pha
00666Fr 2  B5 02            lda $02,x
006671r 2  48               pha
006672r 2               
006672r 2               ; <inline>:0:0 in `main`
006672r 2               @OPCODE_3375:   ; [c64_ir] PushLiteral(7777)
006672r 2  E8               inx
006673r 2  E8               inx
006674r 2  A9 61            lda #97
006676r 2  95 00            sta $00,x
006678r 2  A9 1E            lda #30
00667Ar 2  95 01            sta $01,x
00667Cr 2               
00667Cr 2               ; <inline>:0:0 in `main`
00667Cr 2               @OPCODE_3376:   ; [c64_ir] AltPush
00667Cr 2  CA               dex
00667Dr 2  CA               dex
00667Er 2  B5 03            lda $03,x
006680r 2  48               pha
006681r 2  B5 02            lda $02,x
006683r 2  48               pha
006684r 2               
006684r 2               ; src/prelude.fth:14:12 in `invert`
006684r 2               @OPCODE_3377:   ; [c64_ir] PushLiteral(-1)
006684r 2  E8               inx
006685r 2  E8               inx
006686r 2  A9 FF            lda #255
006688r 2  95 00            sta $00,x
00668Ar 2  A9 FF            lda #255
00668Cr 2  95 01            sta $01,x
00668Er 2               
00668Er 2               ; src/prelude.fth:14:15 in `invert`
00668Er 2               @OPCODE_3378:   ; [c64_ir] Nand
00668Er 2                   ; 26
00668Er 2  CA               dex
00668Fr 2  CA               dex
006690r 2  B5 00            lda $00,x
006692r 2  35 02            and $02,x
006694r 2  49 FF            eor #$ff
006696r 2  95 00            sta $00,x
006698r 2  B5 01            lda $01,x
00669Ar 2  35 03            and $03,x
00669Cr 2  49 FF            eor #$ff
00669Er 2  95 01            sta $01,x
0066A0r 2               
0066A0r 2               ; <inline>:0:0 in `main`
0066A0r 2               @OPCODE_3379:   ; [c64_ir] AltPop
0066A0r 2  E8               inx
0066A1r 2  E8               inx
0066A2r 2  68               pla
0066A3r 2  95 00            sta $00,x
0066A5r 2  68               pla
0066A6r 2  95 01            sta $01,x
0066A8r 2               
0066A8r 2               ; <inline>:0:0 in `main`
0066A8r 2               @OPCODE_3380:   ; [c64_ir] Drop
0066A8r 2  CA               dex
0066A9r 2  CA               dex
0066AAr 2               
0066AAr 2               ; src/prelude.fth:15:19 in `negate`
0066AAr 2               @OPCODE_3381:   ; [c64_ir] PushLiteral(1)
0066AAr 2  E8               inx
0066ABr 2  E8               inx
0066ACr 2  A9 01            lda #1
0066AEr 2  95 00            sta $00,x
0066B0r 2  A9 00            lda #0
0066B2r 2  95 01            sta $01,x
0066B4r 2               
0066B4r 2               ; src/prelude.fth:15:21 in `negate`
0066B4r 2               @OPCODE_3382:   ; [c64_ir] Add
0066B4r 2                   ; 21
0066B4r 2  CA               dex
0066B5r 2  CA               dex
0066B6r 2  18               clc
0066B7r 2  B5 00            lda $00,x
0066B9r 2  75 02            adc $02,x
0066BBr 2  95 00            sta $00,x
0066BDr 2  B5 01            lda $01,x
0066BFr 2  75 03            adc $03,x
0066C1r 2  95 01            sta $01,x
0066C3r 2               
0066C3r 2               ; <inline>:0:0 in `main`
0066C3r 2               @OPCODE_3383:   ; [c64_ir] AltPop
0066C3r 2  E8               inx
0066C4r 2  E8               inx
0066C5r 2  68               pla
0066C6r 2  95 00            sta $00,x
0066C8r 2  68               pla
0066C9r 2  95 01            sta $01,x
0066CBr 2               
0066CBr 2               ; <inline>:0:0 in `main`
0066CBr 2               @OPCODE_3384:   ; [c64_ir] Drop
0066CBr 2  CA               dex
0066CCr 2  CA               dex
0066CDr 2               
0066CDr 2               ; src/prelude.fth:16:19 in `-`
0066CDr 2               @OPCODE_3385:   ; [c64_ir] Add
0066CDr 2                   ; 21
0066CDr 2  CA               dex
0066CEr 2  CA               dex
0066CFr 2  18               clc
0066D0r 2  B5 00            lda $00,x
0066D2r 2  75 02            adc $02,x
0066D4r 2  95 00            sta $00,x
0066D6r 2  B5 01            lda $01,x
0066D8r 2  75 03            adc $03,x
0066DAr 2  95 01            sta $01,x
0066DCr 2               
0066DCr 2               ; <inline>:0:0 in `main`
0066DCr 2               @OPCODE_3386:   ; [c64_ir] AltPop
0066DCr 2  E8               inx
0066DDr 2  E8               inx
0066DEr 2  68               pla
0066DFr 2  95 00            sta $00,x
0066E1r 2  68               pla
0066E2r 2  95 01            sta $01,x
0066E4r 2               
0066E4r 2               ; <inline>:0:0 in `main`
0066E4r 2               @OPCODE_3387:   ; [c64_ir] Drop
0066E4r 2  CA               dex
0066E5r 2  CA               dex
0066E6r 2               
0066E6r 2               ; <inline>:0:0 in `main`
0066E6r 2               @OPCODE_3388:   ; [c64_ir] PushLiteral(7777)
0066E6r 2  E8               inx
0066E7r 2  E8               inx
0066E8r 2  A9 61            lda #97
0066EAr 2  95 00            sta $00,x
0066ECr 2  A9 1E            lda #30
0066EEr 2  95 01            sta $01,x
0066F0r 2               
0066F0r 2               ; <inline>:0:0 in `main`
0066F0r 2               @OPCODE_3389:   ; [c64_ir] AltPush
0066F0r 2  CA               dex
0066F1r 2  CA               dex
0066F2r 2  B5 03            lda $03,x
0066F4r 2  48               pha
0066F5r 2  B5 02            lda $02,x
0066F7r 2  48               pha
0066F8r 2               
0066F8r 2               ; src/prelude.fth:21:8 in `0=`
0066F8r 2               @OPCODE_3390:   ; [c64_ir] JumpIf0(155)
0066F8r 2  CA               dex
0066F9r 2  CA               dex
0066FAr 2  B5 02            lda $02,x
0066FCr 2  15 03            ora $03,x
0066FEr 2  D0 03            bne *+5
006700r 2  4C rr rr         jmp @target_155
006703r 2               
006703r 2               @target_154:
006703r 2               
006703r 2               ; src/prelude.fth:21:11 in `0=`
006703r 2               @OPCODE_3392:   ; [c64_ir] PushLiteral(0)
006703r 2  E8               inx
006704r 2  E8               inx
006705r 2  A9 00            lda #0
006707r 2  95 00            sta $00,x
006709r 2  A9 00            lda #0
00670Br 2  95 01            sta $01,x
00670Dr 2               
00670Dr 2               ; src/prelude.fth:21:13 in `0=`
00670Dr 2               @OPCODE_3393:   ; [c64_ir] JumpElse(156)
00670Dr 2  4C rr rr         jmp @target_156
006710r 2               
006710r 2               @target_155:
006710r 2               
006710r 2               ; src/prelude.fth:21:18 in `0=`
006710r 2               @OPCODE_3395:   ; [c64_ir] PushLiteral(-1)
006710r 2  E8               inx
006711r 2  E8               inx
006712r 2  A9 FF            lda #255
006714r 2  95 00            sta $00,x
006716r 2  A9 FF            lda #255
006718r 2  95 01            sta $01,x
00671Ar 2               
00671Ar 2               ; src/prelude.fth:21:21 in `0=`
00671Ar 2               @OPCODE_3396:   ; [c64_ir] JumpTarget(155)
00671Ar 2               
00671Ar 2               @target_156:
00671Ar 2               
00671Ar 2               ; <inline>:0:0 in `main`
00671Ar 2               @OPCODE_3398:   ; [c64_ir] AltPop
00671Ar 2  E8               inx
00671Br 2  E8               inx
00671Cr 2  68               pla
00671Dr 2  95 00            sta $00,x
00671Fr 2  68               pla
006720r 2  95 01            sta $01,x
006722r 2               
006722r 2               ; <inline>:0:0 in `main`
006722r 2               @OPCODE_3399:   ; [c64_ir] Drop
006722r 2  CA               dex
006723r 2  CA               dex
006724r 2               
006724r 2               ; <inline>:0:0 in `main`
006724r 2               @OPCODE_3400:   ; [c64_ir] AltPop
006724r 2  E8               inx
006725r 2  E8               inx
006726r 2  68               pla
006727r 2  95 00            sta $00,x
006729r 2  68               pla
00672Ar 2  95 01            sta $01,x
00672Cr 2               
00672Cr 2               ; <inline>:0:0 in `main`
00672Cr 2               @OPCODE_3401:   ; [c64_ir] Drop
00672Cr 2  CA               dex
00672Dr 2  CA               dex
00672Er 2               
00672Er 2               ; snake.fth:185:3 in `check-apple`
00672Er 2               @OPCODE_3402:   ; [c64_ir] PushLiteral(-27666)
00672Er 2  E8               inx
00672Fr 2  E8               inx
006730r 2  A9 EE            lda #238
006732r 2  95 00            sta $00,x
006734r 2  A9 93            lda #147
006736r 2  95 01            sta $01,x
006738r 2               
006738r 2               ; snake.fth:185:16 in `check-apple`
006738r 2               @OPCODE_3403:   ; [c64_ir] Load
006738r 2  A1 00            lda ($00,x)
00673Ar 2  95 00            sta $00,x
00673Cr 2  A9 00            lda #0
00673Er 2  95 01            sta $01,x
006740r 2               
006740r 2               ; snake.fth:185:18 in `check-apple`
006740r 2               @OPCODE_3404:   ; [c64_ir] PushLiteral(-26662)
006740r 2  E8               inx
006741r 2  E8               inx
006742r 2  A9 DA            lda #218
006744r 2  95 00            sta $00,x
006746r 2  A9 97            lda #151
006748r 2  95 01            sta $01,x
00674Ar 2               
00674Ar 2               ; snake.fth:185:26 in `check-apple`
00674Ar 2               @OPCODE_3405:   ; [c64_ir] Load
00674Ar 2  A1 00            lda ($00,x)
00674Cr 2  95 00            sta $00,x
00674Er 2  A9 00            lda #0
006750r 2  95 01            sta $01,x
006752r 2               
006752r 2               ; <inline>:0:0 in `main`
006752r 2               @OPCODE_3406:   ; [c64_ir] PushLiteral(7777)
006752r 2  E8               inx
006753r 2  E8               inx
006754r 2  A9 61            lda #97
006756r 2  95 00            sta $00,x
006758r 2  A9 1E            lda #30
00675Ar 2  95 01            sta $01,x
00675Cr 2               
00675Cr 2               ; <inline>:0:0 in `main`
00675Cr 2               @OPCODE_3407:   ; [c64_ir] AltPush
00675Cr 2  CA               dex
00675Dr 2  CA               dex
00675Er 2  B5 03            lda $03,x
006760r 2  48               pha
006761r 2  B5 02            lda $02,x
006763r 2  48               pha
006764r 2               
006764r 2               ; <inline>:0:0 in `main`
006764r 2               @OPCODE_3408:   ; [c64_ir] PushLiteral(7777)
006764r 2  E8               inx
006765r 2  E8               inx
006766r 2  A9 61            lda #97
006768r 2  95 00            sta $00,x
00676Ar 2  A9 1E            lda #30
00676Cr 2  95 01            sta $01,x
00676Er 2               
00676Er 2               ; <inline>:0:0 in `main`
00676Er 2               @OPCODE_3409:   ; [c64_ir] AltPush
00676Er 2  CA               dex
00676Fr 2  CA               dex
006770r 2  B5 03            lda $03,x
006772r 2  48               pha
006773r 2  B5 02            lda $02,x
006775r 2  48               pha
006776r 2               
006776r 2               ; <inline>:0:0 in `main`
006776r 2               @OPCODE_3410:   ; [c64_ir] PushLiteral(7777)
006776r 2  E8               inx
006777r 2  E8               inx
006778r 2  A9 61            lda #97
00677Ar 2  95 00            sta $00,x
00677Cr 2  A9 1E            lda #30
00677Er 2  95 01            sta $01,x
006780r 2               
006780r 2               ; <inline>:0:0 in `main`
006780r 2               @OPCODE_3411:   ; [c64_ir] AltPush
006780r 2  CA               dex
006781r 2  CA               dex
006782r 2  B5 03            lda $03,x
006784r 2  48               pha
006785r 2  B5 02            lda $02,x
006787r 2  48               pha
006788r 2               
006788r 2               ; <inline>:0:0 in `main`
006788r 2               @OPCODE_3412:   ; [c64_ir] PushLiteral(7777)
006788r 2  E8               inx
006789r 2  E8               inx
00678Ar 2  A9 61            lda #97
00678Cr 2  95 00            sta $00,x
00678Er 2  A9 1E            lda #30
006790r 2  95 01            sta $01,x
006792r 2               
006792r 2               ; <inline>:0:0 in `main`
006792r 2               @OPCODE_3413:   ; [c64_ir] AltPush
006792r 2  CA               dex
006793r 2  CA               dex
006794r 2  B5 03            lda $03,x
006796r 2  48               pha
006797r 2  B5 02            lda $02,x
006799r 2  48               pha
00679Ar 2               
00679Ar 2               ; src/prelude.fth:14:12 in `invert`
00679Ar 2               @OPCODE_3414:   ; [c64_ir] PushLiteral(-1)
00679Ar 2  E8               inx
00679Br 2  E8               inx
00679Cr 2  A9 FF            lda #255
00679Er 2  95 00            sta $00,x
0067A0r 2  A9 FF            lda #255
0067A2r 2  95 01            sta $01,x
0067A4r 2               
0067A4r 2               ; src/prelude.fth:14:15 in `invert`
0067A4r 2               @OPCODE_3415:   ; [c64_ir] Nand
0067A4r 2                   ; 26
0067A4r 2  CA               dex
0067A5r 2  CA               dex
0067A6r 2  B5 00            lda $00,x
0067A8r 2  35 02            and $02,x
0067AAr 2  49 FF            eor #$ff
0067ACr 2  95 00            sta $00,x
0067AEr 2  B5 01            lda $01,x
0067B0r 2  35 03            and $03,x
0067B2r 2  49 FF            eor #$ff
0067B4r 2  95 01            sta $01,x
0067B6r 2               
0067B6r 2               ; <inline>:0:0 in `main`
0067B6r 2               @OPCODE_3416:   ; [c64_ir] AltPop
0067B6r 2  E8               inx
0067B7r 2  E8               inx
0067B8r 2  68               pla
0067B9r 2  95 00            sta $00,x
0067BBr 2  68               pla
0067BCr 2  95 01            sta $01,x
0067BEr 2               
0067BEr 2               ; <inline>:0:0 in `main`
0067BEr 2               @OPCODE_3417:   ; [c64_ir] Drop
0067BEr 2  CA               dex
0067BFr 2  CA               dex
0067C0r 2               
0067C0r 2               ; src/prelude.fth:15:19 in `negate`
0067C0r 2               @OPCODE_3418:   ; [c64_ir] PushLiteral(1)
0067C0r 2  E8               inx
0067C1r 2  E8               inx
0067C2r 2  A9 01            lda #1
0067C4r 2  95 00            sta $00,x
0067C6r 2  A9 00            lda #0
0067C8r 2  95 01            sta $01,x
0067CAr 2               
0067CAr 2               ; src/prelude.fth:15:21 in `negate`
0067CAr 2               @OPCODE_3419:   ; [c64_ir] Add
0067CAr 2                   ; 21
0067CAr 2  CA               dex
0067CBr 2  CA               dex
0067CCr 2  18               clc
0067CDr 2  B5 00            lda $00,x
0067CFr 2  75 02            adc $02,x
0067D1r 2  95 00            sta $00,x
0067D3r 2  B5 01            lda $01,x
0067D5r 2  75 03            adc $03,x
0067D7r 2  95 01            sta $01,x
0067D9r 2               
0067D9r 2               ; <inline>:0:0 in `main`
0067D9r 2               @OPCODE_3420:   ; [c64_ir] AltPop
0067D9r 2  E8               inx
0067DAr 2  E8               inx
0067DBr 2  68               pla
0067DCr 2  95 00            sta $00,x
0067DEr 2  68               pla
0067DFr 2  95 01            sta $01,x
0067E1r 2               
0067E1r 2               ; <inline>:0:0 in `main`
0067E1r 2               @OPCODE_3421:   ; [c64_ir] Drop
0067E1r 2  CA               dex
0067E2r 2  CA               dex
0067E3r 2               
0067E3r 2               ; src/prelude.fth:16:19 in `-`
0067E3r 2               @OPCODE_3422:   ; [c64_ir] Add
0067E3r 2                   ; 21
0067E3r 2  CA               dex
0067E4r 2  CA               dex
0067E5r 2  18               clc
0067E6r 2  B5 00            lda $00,x
0067E8r 2  75 02            adc $02,x
0067EAr 2  95 00            sta $00,x
0067ECr 2  B5 01            lda $01,x
0067EEr 2  75 03            adc $03,x
0067F0r 2  95 01            sta $01,x
0067F2r 2               
0067F2r 2               ; <inline>:0:0 in `main`
0067F2r 2               @OPCODE_3423:   ; [c64_ir] AltPop
0067F2r 2  E8               inx
0067F3r 2  E8               inx
0067F4r 2  68               pla
0067F5r 2  95 00            sta $00,x
0067F7r 2  68               pla
0067F8r 2  95 01            sta $01,x
0067FAr 2               
0067FAr 2               ; <inline>:0:0 in `main`
0067FAr 2               @OPCODE_3424:   ; [c64_ir] Drop
0067FAr 2  CA               dex
0067FBr 2  CA               dex
0067FCr 2               
0067FCr 2               ; <inline>:0:0 in `main`
0067FCr 2               @OPCODE_3425:   ; [c64_ir] PushLiteral(7777)
0067FCr 2  E8               inx
0067FDr 2  E8               inx
0067FEr 2  A9 61            lda #97
006800r 2  95 00            sta $00,x
006802r 2  A9 1E            lda #30
006804r 2  95 01            sta $01,x
006806r 2               
006806r 2               ; <inline>:0:0 in `main`
006806r 2               @OPCODE_3426:   ; [c64_ir] AltPush
006806r 2  CA               dex
006807r 2  CA               dex
006808r 2  B5 03            lda $03,x
00680Ar 2  48               pha
00680Br 2  B5 02            lda $02,x
00680Dr 2  48               pha
00680Er 2               
00680Er 2               ; src/prelude.fth:21:8 in `0=`
00680Er 2               @OPCODE_3427:   ; [c64_ir] JumpIf0(158)
00680Er 2  CA               dex
00680Fr 2  CA               dex
006810r 2  B5 02            lda $02,x
006812r 2  15 03            ora $03,x
006814r 2  D0 03            bne *+5
006816r 2  4C rr rr         jmp @target_158
006819r 2               
006819r 2               @target_157:
006819r 2               
006819r 2               ; src/prelude.fth:21:11 in `0=`
006819r 2               @OPCODE_3429:   ; [c64_ir] PushLiteral(0)
006819r 2  E8               inx
00681Ar 2  E8               inx
00681Br 2  A9 00            lda #0
00681Dr 2  95 00            sta $00,x
00681Fr 2  A9 00            lda #0
006821r 2  95 01            sta $01,x
006823r 2               
006823r 2               ; src/prelude.fth:21:13 in `0=`
006823r 2               @OPCODE_3430:   ; [c64_ir] JumpElse(159)
006823r 2  4C rr rr         jmp @target_159
006826r 2               
006826r 2               @target_158:
006826r 2               
006826r 2               ; src/prelude.fth:21:18 in `0=`
006826r 2               @OPCODE_3432:   ; [c64_ir] PushLiteral(-1)
006826r 2  E8               inx
006827r 2  E8               inx
006828r 2  A9 FF            lda #255
00682Ar 2  95 00            sta $00,x
00682Cr 2  A9 FF            lda #255
00682Er 2  95 01            sta $01,x
006830r 2               
006830r 2               ; src/prelude.fth:21:21 in `0=`
006830r 2               @OPCODE_3433:   ; [c64_ir] JumpTarget(158)
006830r 2               
006830r 2               @target_159:
006830r 2               
006830r 2               ; <inline>:0:0 in `main`
006830r 2               @OPCODE_3435:   ; [c64_ir] AltPop
006830r 2  E8               inx
006831r 2  E8               inx
006832r 2  68               pla
006833r 2  95 00            sta $00,x
006835r 2  68               pla
006836r 2  95 01            sta $01,x
006838r 2               
006838r 2               ; <inline>:0:0 in `main`
006838r 2               @OPCODE_3436:   ; [c64_ir] Drop
006838r 2  CA               dex
006839r 2  CA               dex
00683Ar 2               
00683Ar 2               ; <inline>:0:0 in `main`
00683Ar 2               @OPCODE_3437:   ; [c64_ir] AltPop
00683Ar 2  E8               inx
00683Br 2  E8               inx
00683Cr 2  68               pla
00683Dr 2  95 00            sta $00,x
00683Fr 2  68               pla
006840r 2  95 01            sta $01,x
006842r 2               
006842r 2               ; <inline>:0:0 in `main`
006842r 2               @OPCODE_3438:   ; [c64_ir] Drop
006842r 2  CA               dex
006843r 2  CA               dex
006844r 2               
006844r 2               ; <inline>:0:0 in `main`
006844r 2               @OPCODE_3439:   ; [c64_ir] PushLiteral(7777)
006844r 2  E8               inx
006845r 2  E8               inx
006846r 2  A9 61            lda #97
006848r 2  95 00            sta $00,x
00684Ar 2  A9 1E            lda #30
00684Cr 2  95 01            sta $01,x
00684Er 2               
00684Er 2               ; <inline>:0:0 in `main`
00684Er 2               @OPCODE_3440:   ; [c64_ir] AltPush
00684Er 2  CA               dex
00684Fr 2  CA               dex
006850r 2  B5 03            lda $03,x
006852r 2  48               pha
006853r 2  B5 02            lda $02,x
006855r 2  48               pha
006856r 2               
006856r 2               ; src/prelude.fth:28:9 in `and`
006856r 2               @OPCODE_3441:   ; [c64_ir] Nand
006856r 2                   ; 26
006856r 2  CA               dex
006857r 2  CA               dex
006858r 2  B5 00            lda $00,x
00685Ar 2  35 02            and $02,x
00685Cr 2  49 FF            eor #$ff
00685Er 2  95 00            sta $00,x
006860r 2  B5 01            lda $01,x
006862r 2  35 03            and $03,x
006864r 2  49 FF            eor #$ff
006866r 2  95 01            sta $01,x
006868r 2               
006868r 2               ; <inline>:0:0 in `main`
006868r 2               @OPCODE_3442:   ; [c64_ir] PushLiteral(7777)
006868r 2  E8               inx
006869r 2  E8               inx
00686Ar 2  A9 61            lda #97
00686Cr 2  95 00            sta $00,x
00686Er 2  A9 1E            lda #30
006870r 2  95 01            sta $01,x
006872r 2               
006872r 2               ; <inline>:0:0 in `main`
006872r 2               @OPCODE_3443:   ; [c64_ir] AltPush
006872r 2  CA               dex
006873r 2  CA               dex
006874r 2  B5 03            lda $03,x
006876r 2  48               pha
006877r 2  B5 02            lda $02,x
006879r 2  48               pha
00687Ar 2               
00687Ar 2               ; src/prelude.fth:14:12 in `invert`
00687Ar 2               @OPCODE_3444:   ; [c64_ir] PushLiteral(-1)
00687Ar 2  E8               inx
00687Br 2  E8               inx
00687Cr 2  A9 FF            lda #255
00687Er 2  95 00            sta $00,x
006880r 2  A9 FF            lda #255
006882r 2  95 01            sta $01,x
006884r 2               
006884r 2               ; src/prelude.fth:14:15 in `invert`
006884r 2               @OPCODE_3445:   ; [c64_ir] Nand
006884r 2                   ; 26
006884r 2  CA               dex
006885r 2  CA               dex
006886r 2  B5 00            lda $00,x
006888r 2  35 02            and $02,x
00688Ar 2  49 FF            eor #$ff
00688Cr 2  95 00            sta $00,x
00688Er 2  B5 01            lda $01,x
006890r 2  35 03            and $03,x
006892r 2  49 FF            eor #$ff
006894r 2  95 01            sta $01,x
006896r 2               
006896r 2               ; <inline>:0:0 in `main`
006896r 2               @OPCODE_3446:   ; [c64_ir] AltPop
006896r 2  E8               inx
006897r 2  E8               inx
006898r 2  68               pla
006899r 2  95 00            sta $00,x
00689Br 2  68               pla
00689Cr 2  95 01            sta $01,x
00689Er 2               
00689Er 2               ; <inline>:0:0 in `main`
00689Er 2               @OPCODE_3447:   ; [c64_ir] Drop
00689Er 2  CA               dex
00689Fr 2  CA               dex
0068A0r 2               
0068A0r 2               ; <inline>:0:0 in `main`
0068A0r 2               @OPCODE_3448:   ; [c64_ir] AltPop
0068A0r 2  E8               inx
0068A1r 2  E8               inx
0068A2r 2  68               pla
0068A3r 2  95 00            sta $00,x
0068A5r 2  68               pla
0068A6r 2  95 01            sta $01,x
0068A8r 2               
0068A8r 2               ; <inline>:0:0 in `main`
0068A8r 2               @OPCODE_3449:   ; [c64_ir] Drop
0068A8r 2  CA               dex
0068A9r 2  CA               dex
0068AAr 2               
0068AAr 2               ; snake.fth:186:7 in `check-apple`
0068AAr 2               @OPCODE_3450:   ; [c64_ir] JumpIf0(182)
0068AAr 2  CA               dex
0068ABr 2  CA               dex
0068ACr 2  B5 02            lda $02,x
0068AEr 2  15 03            ora $03,x
0068B0r 2  D0 03            bne *+5
0068B2r 2  4C rr rr         jmp @target_182
0068B5r 2               
0068B5r 2               @target_160:
0068B5r 2               
0068B5r 2               ; <inline>:0:0 in `main`
0068B5r 2               @OPCODE_3452:   ; [c64_ir] PushLiteral(7777)
0068B5r 2  E8               inx
0068B6r 2  E8               inx
0068B7r 2  A9 61            lda #97
0068B9r 2  95 00            sta $00,x
0068BBr 2  A9 1E            lda #30
0068BDr 2  95 01            sta $01,x
0068BFr 2               
0068BFr 2               ; <inline>:0:0 in `main`
0068BFr 2               @OPCODE_3453:   ; [c64_ir] AltPush
0068BFr 2  CA               dex
0068C0r 2  CA               dex
0068C1r 2  B5 03            lda $03,x
0068C3r 2  48               pha
0068C4r 2  B5 02            lda $02,x
0068C6r 2  48               pha
0068C7r 2               
0068C7r 2               ; snake.fth:177:3 in `move-apple`
0068C7r 2               @OPCODE_3454:   ; [c64_ir] PushLiteral(-26664)
0068C7r 2  E8               inx
0068C8r 2  E8               inx
0068C9r 2  A9 D8            lda #216
0068CBr 2  95 00            sta $00,x
0068CDr 2  A9 97            lda #151
0068CFr 2  95 01            sta $01,x
0068D1r 2               
0068D1r 2               ; snake.fth:177:11 in `move-apple`
0068D1r 2               @OPCODE_3455:   ; [c64_ir] Load
0068D1r 2  A1 00            lda ($00,x)
0068D3r 2  95 00            sta $00,x
0068D5r 2  A9 00            lda #0
0068D7r 2  95 01            sta $01,x
0068D9r 2               
0068D9r 2               ; snake.fth:177:13 in `move-apple`
0068D9r 2               @OPCODE_3456:   ; [c64_ir] PushLiteral(-26662)
0068D9r 2  E8               inx
0068DAr 2  E8               inx
0068DBr 2  A9 DA            lda #218
0068DDr 2  95 00            sta $00,x
0068DFr 2  A9 97            lda #151
0068E1r 2  95 01            sta $01,x
0068E3r 2               
0068E3r 2               ; snake.fth:177:21 in `move-apple`
0068E3r 2               @OPCODE_3457:   ; [c64_ir] Load
0068E3r 2  A1 00            lda ($00,x)
0068E5r 2  95 00            sta $00,x
0068E7r 2  A9 00            lda #0
0068E9r 2  95 01            sta $01,x
0068EBr 2               
0068EBr 2               ; <inline>:0:0 in `main`
0068EBr 2               @OPCODE_3458:   ; [c64_ir] PushLiteral(7777)
0068EBr 2  E8               inx
0068ECr 2  E8               inx
0068EDr 2  A9 61            lda #97
0068EFr 2  95 00            sta $00,x
0068F1r 2  A9 1E            lda #30
0068F3r 2  95 01            sta $01,x
0068F5r 2               
0068F5r 2               ; <inline>:0:0 in `main`
0068F5r 2               @OPCODE_3459:   ; [c64_ir] AltPush
0068F5r 2  CA               dex
0068F6r 2  CA               dex
0068F7r 2  B5 03            lda $03,x
0068F9r 2  48               pha
0068FAr 2  B5 02            lda $02,x
0068FCr 2  48               pha
0068FDr 2               
0068FDr 2               ; snake.fth:51:26 in `draw-white`
0068FDr 2               @OPCODE_3460:   ; [c64_ir] PushLiteral(32)
0068FDr 2  E8               inx
0068FEr 2  E8               inx
0068FFr 2  A9 20            lda #32
006901r 2  95 00            sta $00,x
006903r 2  A9 00            lda #0
006905r 2  95 01            sta $01,x
006907r 2               
006907r 2               ; <inline>:0:0 in `main`
006907r 2               @OPCODE_3461:   ; [c64_ir] PushLiteral(7777)
006907r 2  E8               inx
006908r 2  E8               inx
006909r 2  A9 61            lda #97
00690Br 2  95 00            sta $00,x
00690Dr 2  A9 1E            lda #30
00690Fr 2  95 01            sta $01,x
006911r 2               
006911r 2               ; <inline>:0:0 in `main`
006911r 2               @OPCODE_3462:   ; [c64_ir] AltPush
006911r 2  CA               dex
006912r 2  CA               dex
006913r 2  B5 03            lda $03,x
006915r 2  48               pha
006916r 2  B5 02            lda $02,x
006918r 2  48               pha
006919r 2               
006919r 2               ; src/prelude.fth:5:10 in `rot`
006919r 2               @OPCODE_3463:   ; [c64_ir] AltPush
006919r 2  CA               dex
00691Ar 2  CA               dex
00691Br 2  B5 03            lda $03,x
00691Dr 2  48               pha
00691Er 2  B5 02            lda $02,x
006920r 2  48               pha
006921r 2               
006921r 2               ; <inline>:0:0 in `main`
006921r 2               @OPCODE_3464:   ; [c64_ir] PushLiteral(7777)
006921r 2  E8               inx
006922r 2  E8               inx
006923r 2  A9 61            lda #97
006925r 2  95 00            sta $00,x
006927r 2  A9 1E            lda #30
006929r 2  95 01            sta $01,x
00692Br 2               
00692Br 2               ; <inline>:0:0 in `main`
00692Br 2               @OPCODE_3465:   ; [c64_ir] AltPush
00692Br 2  CA               dex
00692Cr 2  CA               dex
00692Dr 2  B5 03            lda $03,x
00692Fr 2  48               pha
006930r 2  B5 02            lda $02,x
006932r 2  48               pha
006933r 2               
006933r 2               ; src/prelude.fth:3:10 in `swap`
006933r 2               @OPCODE_3466:   ; [c64_ir] AltPush
006933r 2  CA               dex
006934r 2  CA               dex
006935r 2  B5 03            lda $03,x
006937r 2  48               pha
006938r 2  B5 02            lda $02,x
00693Ar 2  48               pha
00693Br 2               
00693Br 2               ; src/prelude.fth:3:13 in `swap`
00693Br 2               @OPCODE_3467:   ; [c64_ir] TempStore
00693Br 2  CA               dex
00693Cr 2  CA               dex
00693Dr 2  B5 03            lda $03,x
00693Fr 2  85 96            sta TEMP_PAX2
006941r 2  B5 02            lda $02,x
006943r 2  85 95            sta TEMP_PAX1
006945r 2               
006945r 2               ; src/prelude.fth:3:19 in `swap`
006945r 2               @OPCODE_3468:   ; [c64_ir] AltPop
006945r 2  E8               inx
006946r 2  E8               inx
006947r 2  68               pla
006948r 2  95 00            sta $00,x
00694Ar 2  68               pla
00694Br 2  95 01            sta $01,x
00694Dr 2               
00694Dr 2               ; src/prelude.fth:3:22 in `swap`
00694Dr 2               @OPCODE_3469:   ; [c64_ir] TempLoad
00694Dr 2  E8               inx
00694Er 2  E8               inx
00694Fr 2  A5 95            lda TEMP_PAX1
006951r 2  95 00            sta $00,x
006953r 2  A5 96            lda TEMP_PAX2
006955r 2  95 01            sta $01,x
006957r 2               
006957r 2               ; <inline>:0:0 in `main`
006957r 2               @OPCODE_3470:   ; [c64_ir] AltPop
006957r 2  E8               inx
006958r 2  E8               inx
006959r 2  68               pla
00695Ar 2  95 00            sta $00,x
00695Cr 2  68               pla
00695Dr 2  95 01            sta $01,x
00695Fr 2               
00695Fr 2               ; <inline>:0:0 in `main`
00695Fr 2               @OPCODE_3471:   ; [c64_ir] Drop
00695Fr 2  CA               dex
006960r 2  CA               dex
006961r 2               
006961r 2               ; src/prelude.fth:5:18 in `rot`
006961r 2               @OPCODE_3472:   ; [c64_ir] AltPop
006961r 2  E8               inx
006962r 2  E8               inx
006963r 2  68               pla
006964r 2  95 00            sta $00,x
006966r 2  68               pla
006967r 2  95 01            sta $01,x
006969r 2               
006969r 2               ; <inline>:0:0 in `main`
006969r 2               @OPCODE_3473:   ; [c64_ir] PushLiteral(7777)
006969r 2  E8               inx
00696Ar 2  E8               inx
00696Br 2  A9 61            lda #97
00696Dr 2  95 00            sta $00,x
00696Fr 2  A9 1E            lda #30
006971r 2  95 01            sta $01,x
006973r 2               
006973r 2               ; <inline>:0:0 in `main`
006973r 2               @OPCODE_3474:   ; [c64_ir] AltPush
006973r 2  CA               dex
006974r 2  CA               dex
006975r 2  B5 03            lda $03,x
006977r 2  48               pha
006978r 2  B5 02            lda $02,x
00697Ar 2  48               pha
00697Br 2               
00697Br 2               ; src/prelude.fth:3:10 in `swap`
00697Br 2               @OPCODE_3475:   ; [c64_ir] AltPush
00697Br 2  CA               dex
00697Cr 2  CA               dex
00697Dr 2  B5 03            lda $03,x
00697Fr 2  48               pha
006980r 2  B5 02            lda $02,x
006982r 2  48               pha
006983r 2               
006983r 2               ; src/prelude.fth:3:13 in `swap`
006983r 2               @OPCODE_3476:   ; [c64_ir] TempStore
006983r 2  CA               dex
006984r 2  CA               dex
006985r 2  B5 03            lda $03,x
006987r 2  85 96            sta TEMP_PAX2
006989r 2  B5 02            lda $02,x
00698Br 2  85 95            sta TEMP_PAX1
00698Dr 2               
00698Dr 2               ; src/prelude.fth:3:19 in `swap`
00698Dr 2               @OPCODE_3477:   ; [c64_ir] AltPop
00698Dr 2  E8               inx
00698Er 2  E8               inx
00698Fr 2  68               pla
006990r 2  95 00            sta $00,x
006992r 2  68               pla
006993r 2  95 01            sta $01,x
006995r 2               
006995r 2               ; src/prelude.fth:3:22 in `swap`
006995r 2               @OPCODE_3478:   ; [c64_ir] TempLoad
006995r 2  E8               inx
006996r 2  E8               inx
006997r 2  A5 95            lda TEMP_PAX1
006999r 2  95 00            sta $00,x
00699Br 2  A5 96            lda TEMP_PAX2
00699Dr 2  95 01            sta $01,x
00699Fr 2               
00699Fr 2               ; <inline>:0:0 in `main`
00699Fr 2               @OPCODE_3479:   ; [c64_ir] AltPop
00699Fr 2  E8               inx
0069A0r 2  E8               inx
0069A1r 2  68               pla
0069A2r 2  95 00            sta $00,x
0069A4r 2  68               pla
0069A5r 2  95 01            sta $01,x
0069A7r 2               
0069A7r 2               ; <inline>:0:0 in `main`
0069A7r 2               @OPCODE_3480:   ; [c64_ir] Drop
0069A7r 2  CA               dex
0069A8r 2  CA               dex
0069A9r 2               
0069A9r 2               ; <inline>:0:0 in `main`
0069A9r 2               @OPCODE_3481:   ; [c64_ir] AltPop
0069A9r 2  E8               inx
0069AAr 2  E8               inx
0069ABr 2  68               pla
0069ACr 2  95 00            sta $00,x
0069AEr 2  68               pla
0069AFr 2  95 01            sta $01,x
0069B1r 2               
0069B1r 2               ; <inline>:0:0 in `main`
0069B1r 2               @OPCODE_3482:   ; [c64_ir] Drop
0069B1r 2  CA               dex
0069B2r 2  CA               dex
0069B3r 2               
0069B3r 2               ; <inline>:0:0 in `main`
0069B3r 2               @OPCODE_3483:   ; [c64_ir] PushLiteral(7777)
0069B3r 2  E8               inx
0069B4r 2  E8               inx
0069B5r 2  A9 61            lda #97
0069B7r 2  95 00            sta $00,x
0069B9r 2  A9 1E            lda #30
0069BBr 2  95 01            sta $01,x
0069BDr 2               
0069BDr 2               ; <inline>:0:0 in `main`
0069BDr 2               @OPCODE_3484:   ; [c64_ir] AltPush
0069BDr 2  CA               dex
0069BEr 2  CA               dex
0069BFr 2  B5 03            lda $03,x
0069C1r 2  48               pha
0069C2r 2  B5 02            lda $02,x
0069C4r 2  48               pha
0069C5r 2               
0069C5r 2               ; src/prelude.fth:5:10 in `rot`
0069C5r 2               @OPCODE_3485:   ; [c64_ir] AltPush
0069C5r 2  CA               dex
0069C6r 2  CA               dex
0069C7r 2  B5 03            lda $03,x
0069C9r 2  48               pha
0069CAr 2  B5 02            lda $02,x
0069CCr 2  48               pha
0069CDr 2               
0069CDr 2               ; <inline>:0:0 in `main`
0069CDr 2               @OPCODE_3486:   ; [c64_ir] PushLiteral(7777)
0069CDr 2  E8               inx
0069CEr 2  E8               inx
0069CFr 2  A9 61            lda #97
0069D1r 2  95 00            sta $00,x
0069D3r 2  A9 1E            lda #30
0069D5r 2  95 01            sta $01,x
0069D7r 2               
0069D7r 2               ; <inline>:0:0 in `main`
0069D7r 2               @OPCODE_3487:   ; [c64_ir] AltPush
0069D7r 2  CA               dex
0069D8r 2  CA               dex
0069D9r 2  B5 03            lda $03,x
0069DBr 2  48               pha
0069DCr 2  B5 02            lda $02,x
0069DEr 2  48               pha
0069DFr 2               
0069DFr 2               ; src/prelude.fth:3:10 in `swap`
0069DFr 2               @OPCODE_3488:   ; [c64_ir] AltPush
0069DFr 2  CA               dex
0069E0r 2  CA               dex
0069E1r 2  B5 03            lda $03,x
0069E3r 2  48               pha
0069E4r 2  B5 02            lda $02,x
0069E6r 2  48               pha
0069E7r 2               
0069E7r 2               ; src/prelude.fth:3:13 in `swap`
0069E7r 2               @OPCODE_3489:   ; [c64_ir] TempStore
0069E7r 2  CA               dex
0069E8r 2  CA               dex
0069E9r 2  B5 03            lda $03,x
0069EBr 2  85 96            sta TEMP_PAX2
0069EDr 2  B5 02            lda $02,x
0069EFr 2  85 95            sta TEMP_PAX1
0069F1r 2               
0069F1r 2               ; src/prelude.fth:3:19 in `swap`
0069F1r 2               @OPCODE_3490:   ; [c64_ir] AltPop
0069F1r 2  E8               inx
0069F2r 2  E8               inx
0069F3r 2  68               pla
0069F4r 2  95 00            sta $00,x
0069F6r 2  68               pla
0069F7r 2  95 01            sta $01,x
0069F9r 2               
0069F9r 2               ; src/prelude.fth:3:22 in `swap`
0069F9r 2               @OPCODE_3491:   ; [c64_ir] TempLoad
0069F9r 2  E8               inx
0069FAr 2  E8               inx
0069FBr 2  A5 95            lda TEMP_PAX1
0069FDr 2  95 00            sta $00,x
0069FFr 2  A5 96            lda TEMP_PAX2
006A01r 2  95 01            sta $01,x
006A03r 2               
006A03r 2               ; <inline>:0:0 in `main`
006A03r 2               @OPCODE_3492:   ; [c64_ir] AltPop
006A03r 2  E8               inx
006A04r 2  E8               inx
006A05r 2  68               pla
006A06r 2  95 00            sta $00,x
006A08r 2  68               pla
006A09r 2  95 01            sta $01,x
006A0Br 2               
006A0Br 2               ; <inline>:0:0 in `main`
006A0Br 2               @OPCODE_3493:   ; [c64_ir] Drop
006A0Br 2  CA               dex
006A0Cr 2  CA               dex
006A0Dr 2               
006A0Dr 2               ; src/prelude.fth:5:18 in `rot`
006A0Dr 2               @OPCODE_3494:   ; [c64_ir] AltPop
006A0Dr 2  E8               inx
006A0Er 2  E8               inx
006A0Fr 2  68               pla
006A10r 2  95 00            sta $00,x
006A12r 2  68               pla
006A13r 2  95 01            sta $01,x
006A15r 2               
006A15r 2               ; <inline>:0:0 in `main`
006A15r 2               @OPCODE_3495:   ; [c64_ir] PushLiteral(7777)
006A15r 2  E8               inx
006A16r 2  E8               inx
006A17r 2  A9 61            lda #97
006A19r 2  95 00            sta $00,x
006A1Br 2  A9 1E            lda #30
006A1Dr 2  95 01            sta $01,x
006A1Fr 2               
006A1Fr 2               ; <inline>:0:0 in `main`
006A1Fr 2               @OPCODE_3496:   ; [c64_ir] AltPush
006A1Fr 2  CA               dex
006A20r 2  CA               dex
006A21r 2  B5 03            lda $03,x
006A23r 2  48               pha
006A24r 2  B5 02            lda $02,x
006A26r 2  48               pha
006A27r 2               
006A27r 2               ; src/prelude.fth:3:10 in `swap`
006A27r 2               @OPCODE_3497:   ; [c64_ir] AltPush
006A27r 2  CA               dex
006A28r 2  CA               dex
006A29r 2  B5 03            lda $03,x
006A2Br 2  48               pha
006A2Cr 2  B5 02            lda $02,x
006A2Er 2  48               pha
006A2Fr 2               
006A2Fr 2               ; src/prelude.fth:3:13 in `swap`
006A2Fr 2               @OPCODE_3498:   ; [c64_ir] TempStore
006A2Fr 2  CA               dex
006A30r 2  CA               dex
006A31r 2  B5 03            lda $03,x
006A33r 2  85 96            sta TEMP_PAX2
006A35r 2  B5 02            lda $02,x
006A37r 2  85 95            sta TEMP_PAX1
006A39r 2               
006A39r 2               ; src/prelude.fth:3:19 in `swap`
006A39r 2               @OPCODE_3499:   ; [c64_ir] AltPop
006A39r 2  E8               inx
006A3Ar 2  E8               inx
006A3Br 2  68               pla
006A3Cr 2  95 00            sta $00,x
006A3Er 2  68               pla
006A3Fr 2  95 01            sta $01,x
006A41r 2               
006A41r 2               ; src/prelude.fth:3:22 in `swap`
006A41r 2               @OPCODE_3500:   ; [c64_ir] TempLoad
006A41r 2  E8               inx
006A42r 2  E8               inx
006A43r 2  A5 95            lda TEMP_PAX1
006A45r 2  95 00            sta $00,x
006A47r 2  A5 96            lda TEMP_PAX2
006A49r 2  95 01            sta $01,x
006A4Br 2               
006A4Br 2               ; <inline>:0:0 in `main`
006A4Br 2               @OPCODE_3501:   ; [c64_ir] AltPop
006A4Br 2  E8               inx
006A4Cr 2  E8               inx
006A4Dr 2  68               pla
006A4Er 2  95 00            sta $00,x
006A50r 2  68               pla
006A51r 2  95 01            sta $01,x
006A53r 2               
006A53r 2               ; <inline>:0:0 in `main`
006A53r 2               @OPCODE_3502:   ; [c64_ir] Drop
006A53r 2  CA               dex
006A54r 2  CA               dex
006A55r 2               
006A55r 2               ; <inline>:0:0 in `main`
006A55r 2               @OPCODE_3503:   ; [c64_ir] AltPop
006A55r 2  E8               inx
006A56r 2  E8               inx
006A57r 2  68               pla
006A58r 2  95 00            sta $00,x
006A5Ar 2  68               pla
006A5Br 2  95 01            sta $01,x
006A5Dr 2               
006A5Dr 2               ; <inline>:0:0 in `main`
006A5Dr 2               @OPCODE_3504:   ; [c64_ir] Drop
006A5Dr 2  CA               dex
006A5Er 2  CA               dex
006A5Fr 2               
006A5Fr 2               ; <inline>:0:0 in `main`
006A5Fr 2               @OPCODE_3505:   ; [c64_ir] PushLiteral(7777)
006A5Fr 2  E8               inx
006A60r 2  E8               inx
006A61r 2  A9 61            lda #97
006A63r 2  95 00            sta $00,x
006A65r 2  A9 1E            lda #30
006A67r 2  95 01            sta $01,x
006A69r 2               
006A69r 2               ; <inline>:0:0 in `main`
006A69r 2               @OPCODE_3506:   ; [c64_ir] AltPush
006A69r 2  CA               dex
006A6Ar 2  CA               dex
006A6Br 2  B5 03            lda $03,x
006A6Dr 2  48               pha
006A6Er 2  B5 02            lda $02,x
006A70r 2  48               pha
006A71r 2               
006A71r 2               ; <inline>:0:0 in `main`
006A71r 2               @OPCODE_3507:   ; [c64_ir] PushLiteral(7777)
006A71r 2  E8               inx
006A72r 2  E8               inx
006A73r 2  A9 61            lda #97
006A75r 2  95 00            sta $00,x
006A77r 2  A9 1E            lda #30
006A79r 2  95 01            sta $01,x
006A7Br 2               
006A7Br 2               ; <inline>:0:0 in `main`
006A7Br 2               @OPCODE_3508:   ; [c64_ir] AltPush
006A7Br 2  CA               dex
006A7Cr 2  CA               dex
006A7Dr 2  B5 03            lda $03,x
006A7Fr 2  48               pha
006A80r 2  B5 02            lda $02,x
006A82r 2  48               pha
006A83r 2               
006A83r 2               ; snake.fth:48:34 in `convert-x-y`
006A83r 2               @OPCODE_3509:   ; [c64_ir] PushLiteral(40)
006A83r 2  E8               inx
006A84r 2  E8               inx
006A85r 2  A9 28            lda #40
006A87r 2  95 00            sta $00,x
006A89r 2  A9 00            lda #0
006A8Br 2  95 01            sta $01,x
006A8Dr 2               
006A8Dr 2               ; <inline>:0:0 in `main`
006A8Dr 2               @OPCODE_3510:   ; [c64_ir] PushLiteral(7777)
006A8Dr 2  E8               inx
006A8Er 2  E8               inx
006A8Fr 2  A9 61            lda #97
006A91r 2  95 00            sta $00,x
006A93r 2  A9 1E            lda #30
006A95r 2  95 01            sta $01,x
006A97r 2               
006A97r 2               ; <inline>:0:0 in `main`
006A97r 2               @OPCODE_3511:   ; [c64_ir] AltPush
006A97r 2  CA               dex
006A98r 2  CA               dex
006A99r 2  B5 03            lda $03,x
006A9Br 2  48               pha
006A9Cr 2  B5 02            lda $02,x
006A9Er 2  48               pha
006A9Fr 2               
006A9Fr 2               ; src/prelude.fth:44:5 in `*`
006A9Fr 2               @OPCODE_3512:   ; [c64_ir] AltPush
006A9Fr 2  CA               dex
006AA0r 2  CA               dex
006AA1r 2  B5 03            lda $03,x
006AA3r 2  48               pha
006AA4r 2  B5 02            lda $02,x
006AA6r 2  48               pha
006AA7r 2               
006AA7r 2               ; src/prelude.fth:44:8 in `*`
006AA7r 2               @OPCODE_3513:   ; [c64_ir] PushLiteral(0)
006AA7r 2  E8               inx
006AA8r 2  E8               inx
006AA9r 2  A9 00            lda #0
006AABr 2  95 00            sta $00,x
006AADr 2  A9 00            lda #0
006AAFr 2  95 01            sta $01,x
006AB1r 2               
006AB1r 2               ; src/prelude.fth:44:10 in `*`
006AB1r 2               @OPCODE_3514:   ; [c64_ir] AltPop
006AB1r 2  E8               inx
006AB2r 2  E8               inx
006AB3r 2  68               pla
006AB4r 2  95 00            sta $00,x
006AB6r 2  68               pla
006AB7r 2  95 01            sta $01,x
006AB9r 2               
006AB9r 2               ; src/prelude.fth:44:13 in `*`
006AB9r 2               @OPCODE_3515:   ; [c64_ir] PushLiteral(0)
006AB9r 2  E8               inx
006ABAr 2  E8               inx
006ABBr 2  A9 00            lda #0
006ABDr 2  95 00            sta $00,x
006ABFr 2  A9 00            lda #0
006AC1r 2  95 01            sta $01,x
006AC3r 2               
006AC3r 2               ; src/prelude.fth:44:15 in `*`
006AC3r 2               @OPCODE_3516:   ; [c64_ir] AltPush
006AC3r 2  CA               dex
006AC4r 2  CA               dex
006AC5r 2  B5 03            lda $03,x
006AC7r 2  48               pha
006AC8r 2  B5 02            lda $02,x
006ACAr 2  48               pha
006ACBr 2               
006ACBr 2               ; src/prelude.fth:44:15 in `*`
006ACBr 2               @OPCODE_3517:   ; [c64_ir] AltPush
006ACBr 2  CA               dex
006ACCr 2  CA               dex
006ACDr 2  B5 03            lda $03,x
006ACFr 2  48               pha
006AD0r 2  B5 02            lda $02,x
006AD2r 2  48               pha
006AD3r 2               
006AD3r 2               ; src/prelude.fth:44:15 in `*`
006AD3r 2               @OPCODE_3518:   ; [c64_ir] LoopTarget(160)
006AD3r 2               
006AD3r 2               @target_161:
006AD3r 2               
006AD3r 2               ; <inline>:0:0 in `main`
006AD3r 2               @OPCODE_3520:   ; [c64_ir] PushLiteral(7777)
006AD3r 2  E8               inx
006AD4r 2  E8               inx
006AD5r 2  A9 61            lda #97
006AD7r 2  95 00            sta $00,x
006AD9r 2  A9 1E            lda #30
006ADBr 2  95 01            sta $01,x
006ADDr 2               
006ADDr 2               ; <inline>:0:0 in `main`
006ADDr 2               @OPCODE_3521:   ; [c64_ir] AltPush
006ADDr 2  CA               dex
006ADEr 2  CA               dex
006ADFr 2  B5 03            lda $03,x
006AE1r 2  48               pha
006AE2r 2  B5 02            lda $02,x
006AE4r 2  48               pha
006AE5r 2               
006AE5r 2               ; src/prelude.fth:4:10 in `over`
006AE5r 2               @OPCODE_3522:   ; [c64_ir] AltPush
006AE5r 2  CA               dex
006AE6r 2  CA               dex
006AE7r 2  B5 03            lda $03,x
006AE9r 2  48               pha
006AEAr 2  B5 02            lda $02,x
006AECr 2  48               pha
006AEDr 2               
006AEDr 2               ; src/prelude.fth:4:13 in `over`
006AEDr 2               @OPCODE_3523:   ; [c64_ir] TempStore
006AEDr 2  CA               dex
006AEEr 2  CA               dex
006AEFr 2  B5 03            lda $03,x
006AF1r 2  85 96            sta TEMP_PAX2
006AF3r 2  B5 02            lda $02,x
006AF5r 2  85 95            sta TEMP_PAX1
006AF7r 2               
006AF7r 2               ; src/prelude.fth:4:19 in `over`
006AF7r 2               @OPCODE_3524:   ; [c64_ir] TempLoad
006AF7r 2  E8               inx
006AF8r 2  E8               inx
006AF9r 2  A5 95            lda TEMP_PAX1
006AFBr 2  95 00            sta $00,x
006AFDr 2  A5 96            lda TEMP_PAX2
006AFFr 2  95 01            sta $01,x
006B01r 2               
006B01r 2               ; src/prelude.fth:4:25 in `over`
006B01r 2               @OPCODE_3525:   ; [c64_ir] AltPop
006B01r 2  E8               inx
006B02r 2  E8               inx
006B03r 2  68               pla
006B04r 2  95 00            sta $00,x
006B06r 2  68               pla
006B07r 2  95 01            sta $01,x
006B09r 2               
006B09r 2               ; src/prelude.fth:4:28 in `over`
006B09r 2               @OPCODE_3526:   ; [c64_ir] TempLoad
006B09r 2  E8               inx
006B0Ar 2  E8               inx
006B0Br 2  A5 95            lda TEMP_PAX1
006B0Dr 2  95 00            sta $00,x
006B0Fr 2  A5 96            lda TEMP_PAX2
006B11r 2  95 01            sta $01,x
006B13r 2               
006B13r 2               ; <inline>:0:0 in `main`
006B13r 2               @OPCODE_3527:   ; [c64_ir] AltPop
006B13r 2  E8               inx
006B14r 2  E8               inx
006B15r 2  68               pla
006B16r 2  95 00            sta $00,x
006B18r 2  68               pla
006B19r 2  95 01            sta $01,x
006B1Br 2               
006B1Br 2               ; <inline>:0:0 in `main`
006B1Br 2               @OPCODE_3528:   ; [c64_ir] Drop
006B1Br 2  CA               dex
006B1Cr 2  CA               dex
006B1Dr 2               
006B1Dr 2               ; src/prelude.fth:44:23 in `*`
006B1Dr 2               @OPCODE_3529:   ; [c64_ir] Add
006B1Dr 2                   ; 21
006B1Dr 2  CA               dex
006B1Er 2  CA               dex
006B1Fr 2  18               clc
006B20r 2  B5 00            lda $00,x
006B22r 2  75 02            adc $02,x
006B24r 2  95 00            sta $00,x
006B26r 2  B5 01            lda $01,x
006B28r 2  75 03            adc $03,x
006B2Ar 2  95 01            sta $01,x
006B2Cr 2               
006B2Cr 2               ; <inline>:0:0 in `main`
006B2Cr 2               @OPCODE_3530:   ; [c64_ir] PushLiteral(7777)
006B2Cr 2  E8               inx
006B2Dr 2  E8               inx
006B2Er 2  A9 61            lda #97
006B30r 2  95 00            sta $00,x
006B32r 2  A9 1E            lda #30
006B34r 2  95 01            sta $01,x
006B36r 2               
006B36r 2               ; <inline>:0:0 in `main`
006B36r 2               @OPCODE_3531:   ; [c64_ir] AltPush
006B36r 2  CA               dex
006B37r 2  CA               dex
006B38r 2  B5 03            lda $03,x
006B3Ar 2  48               pha
006B3Br 2  B5 02            lda $02,x
006B3Dr 2  48               pha
006B3Er 2               
006B3Er 2               ; src/prelude.fth:33:12 in `loopimpl`
006B3Er 2               @OPCODE_3532:   ; [c64_ir] AltPop
006B3Er 2  E8               inx
006B3Fr 2  E8               inx
006B40r 2  68               pla
006B41r 2  95 00            sta $00,x
006B43r 2  68               pla
006B44r 2  95 01            sta $01,x
006B46r 2               
006B46r 2               ; src/prelude.fth:33:15 in `loopimpl`
006B46r 2               @OPCODE_3533:   ; [c64_ir] AltPop
006B46r 2  E8               inx
006B47r 2  E8               inx
006B48r 2  68               pla
006B49r 2  95 00            sta $00,x
006B4Br 2  68               pla
006B4Cr 2  95 01            sta $01,x
006B4Er 2               
006B4Er 2               ; src/prelude.fth:33:18 in `loopimpl`
006B4Er 2               @OPCODE_3534:   ; [c64_ir] AltPop
006B4Er 2  E8               inx
006B4Fr 2  E8               inx
006B50r 2  68               pla
006B51r 2  95 00            sta $00,x
006B53r 2  68               pla
006B54r 2  95 01            sta $01,x
006B56r 2               
006B56r 2               ; <inline>:0:0 in `main`
006B56r 2               @OPCODE_3535:   ; [c64_ir] PushLiteral(7777)
006B56r 2  E8               inx
006B57r 2  E8               inx
006B58r 2  A9 61            lda #97
006B5Ar 2  95 00            sta $00,x
006B5Cr 2  A9 1E            lda #30
006B5Er 2  95 01            sta $01,x
006B60r 2               
006B60r 2               ; <inline>:0:0 in `main`
006B60r 2               @OPCODE_3536:   ; [c64_ir] AltPush
006B60r 2  CA               dex
006B61r 2  CA               dex
006B62r 2  B5 03            lda $03,x
006B64r 2  48               pha
006B65r 2  B5 02            lda $02,x
006B67r 2  48               pha
006B68r 2               
006B68r 2               ; src/prelude.fth:18:8 in `1+`
006B68r 2               @OPCODE_3537:   ; [c64_ir] PushLiteral(1)
006B68r 2  E8               inx
006B69r 2  E8               inx
006B6Ar 2  A9 01            lda #1
006B6Cr 2  95 00            sta $00,x
006B6Er 2  A9 00            lda #0
006B70r 2  95 01            sta $01,x
006B72r 2               
006B72r 2               ; src/prelude.fth:18:10 in `1+`
006B72r 2               @OPCODE_3538:   ; [c64_ir] Add
006B72r 2                   ; 21
006B72r 2  CA               dex
006B73r 2  CA               dex
006B74r 2  18               clc
006B75r 2  B5 00            lda $00,x
006B77r 2  75 02            adc $02,x
006B79r 2  95 00            sta $00,x
006B7Br 2  B5 01            lda $01,x
006B7Dr 2  75 03            adc $03,x
006B7Fr 2  95 01            sta $01,x
006B81r 2               
006B81r 2               ; <inline>:0:0 in `main`
006B81r 2               @OPCODE_3539:   ; [c64_ir] AltPop
006B81r 2  E8               inx
006B82r 2  E8               inx
006B83r 2  68               pla
006B84r 2  95 00            sta $00,x
006B86r 2  68               pla
006B87r 2  95 01            sta $01,x
006B89r 2               
006B89r 2               ; <inline>:0:0 in `main`
006B89r 2               @OPCODE_3540:   ; [c64_ir] Drop
006B89r 2  CA               dex
006B8Ar 2  CA               dex
006B8Br 2               
006B8Br 2               ; <inline>:0:0 in `main`
006B8Br 2               @OPCODE_3541:   ; [c64_ir] PushLiteral(7777)
006B8Br 2  E8               inx
006B8Cr 2  E8               inx
006B8Dr 2  A9 61            lda #97
006B8Fr 2  95 00            sta $00,x
006B91r 2  A9 1E            lda #30
006B93r 2  95 01            sta $01,x
006B95r 2               
006B95r 2               ; <inline>:0:0 in `main`
006B95r 2               @OPCODE_3542:   ; [c64_ir] AltPush
006B95r 2  CA               dex
006B96r 2  CA               dex
006B97r 2  B5 03            lda $03,x
006B99r 2  48               pha
006B9Ar 2  B5 02            lda $02,x
006B9Cr 2  48               pha
006B9Dr 2               
006B9Dr 2               ; <inline>:0:0 in `main`
006B9Dr 2               @OPCODE_3543:   ; [c64_ir] PushLiteral(7777)
006B9Dr 2  E8               inx
006B9Er 2  E8               inx
006B9Fr 2  A9 61            lda #97
006BA1r 2  95 00            sta $00,x
006BA3r 2  A9 1E            lda #30
006BA5r 2  95 01            sta $01,x
006BA7r 2               
006BA7r 2               ; <inline>:0:0 in `main`
006BA7r 2               @OPCODE_3544:   ; [c64_ir] AltPush
006BA7r 2  CA               dex
006BA8r 2  CA               dex
006BA9r 2  B5 03            lda $03,x
006BABr 2  48               pha
006BACr 2  B5 02            lda $02,x
006BAEr 2  48               pha
006BAFr 2               
006BAFr 2               ; src/prelude.fth:4:10 in `over`
006BAFr 2               @OPCODE_3545:   ; [c64_ir] AltPush
006BAFr 2  CA               dex
006BB0r 2  CA               dex
006BB1r 2  B5 03            lda $03,x
006BB3r 2  48               pha
006BB4r 2  B5 02            lda $02,x
006BB6r 2  48               pha
006BB7r 2               
006BB7r 2               ; src/prelude.fth:4:13 in `over`
006BB7r 2               @OPCODE_3546:   ; [c64_ir] TempStore
006BB7r 2  CA               dex
006BB8r 2  CA               dex
006BB9r 2  B5 03            lda $03,x
006BBBr 2  85 96            sta TEMP_PAX2
006BBDr 2  B5 02            lda $02,x
006BBFr 2  85 95            sta TEMP_PAX1
006BC1r 2               
006BC1r 2               ; src/prelude.fth:4:19 in `over`
006BC1r 2               @OPCODE_3547:   ; [c64_ir] TempLoad
006BC1r 2  E8               inx
006BC2r 2  E8               inx
006BC3r 2  A5 95            lda TEMP_PAX1
006BC5r 2  95 00            sta $00,x
006BC7r 2  A5 96            lda TEMP_PAX2
006BC9r 2  95 01            sta $01,x
006BCBr 2               
006BCBr 2               ; src/prelude.fth:4:25 in `over`
006BCBr 2               @OPCODE_3548:   ; [c64_ir] AltPop
006BCBr 2  E8               inx
006BCCr 2  E8               inx
006BCDr 2  68               pla
006BCEr 2  95 00            sta $00,x
006BD0r 2  68               pla
006BD1r 2  95 01            sta $01,x
006BD3r 2               
006BD3r 2               ; src/prelude.fth:4:28 in `over`
006BD3r 2               @OPCODE_3549:   ; [c64_ir] TempLoad
006BD3r 2  E8               inx
006BD4r 2  E8               inx
006BD5r 2  A5 95            lda TEMP_PAX1
006BD7r 2  95 00            sta $00,x
006BD9r 2  A5 96            lda TEMP_PAX2
006BDBr 2  95 01            sta $01,x
006BDDr 2               
006BDDr 2               ; <inline>:0:0 in `main`
006BDDr 2               @OPCODE_3550:   ; [c64_ir] AltPop
006BDDr 2  E8               inx
006BDEr 2  E8               inx
006BDFr 2  68               pla
006BE0r 2  95 00            sta $00,x
006BE2r 2  68               pla
006BE3r 2  95 01            sta $01,x
006BE5r 2               
006BE5r 2               ; <inline>:0:0 in `main`
006BE5r 2               @OPCODE_3551:   ; [c64_ir] Drop
006BE5r 2  CA               dex
006BE6r 2  CA               dex
006BE7r 2               
006BE7r 2               ; <inline>:0:0 in `main`
006BE7r 2               @OPCODE_3552:   ; [c64_ir] PushLiteral(7777)
006BE7r 2  E8               inx
006BE8r 2  E8               inx
006BE9r 2  A9 61            lda #97
006BEBr 2  95 00            sta $00,x
006BEDr 2  A9 1E            lda #30
006BEFr 2  95 01            sta $01,x
006BF1r 2               
006BF1r 2               ; <inline>:0:0 in `main`
006BF1r 2               @OPCODE_3553:   ; [c64_ir] AltPush
006BF1r 2  CA               dex
006BF2r 2  CA               dex
006BF3r 2  B5 03            lda $03,x
006BF5r 2  48               pha
006BF6r 2  B5 02            lda $02,x
006BF8r 2  48               pha
006BF9r 2               
006BF9r 2               ; src/prelude.fth:4:10 in `over`
006BF9r 2               @OPCODE_3554:   ; [c64_ir] AltPush
006BF9r 2  CA               dex
006BFAr 2  CA               dex
006BFBr 2  B5 03            lda $03,x
006BFDr 2  48               pha
006BFEr 2  B5 02            lda $02,x
006C00r 2  48               pha
006C01r 2               
006C01r 2               ; src/prelude.fth:4:13 in `over`
006C01r 2               @OPCODE_3555:   ; [c64_ir] TempStore
006C01r 2  CA               dex
006C02r 2  CA               dex
006C03r 2  B5 03            lda $03,x
006C05r 2  85 96            sta TEMP_PAX2
006C07r 2  B5 02            lda $02,x
006C09r 2  85 95            sta TEMP_PAX1
006C0Br 2               
006C0Br 2               ; src/prelude.fth:4:19 in `over`
006C0Br 2               @OPCODE_3556:   ; [c64_ir] TempLoad
006C0Br 2  E8               inx
006C0Cr 2  E8               inx
006C0Dr 2  A5 95            lda TEMP_PAX1
006C0Fr 2  95 00            sta $00,x
006C11r 2  A5 96            lda TEMP_PAX2
006C13r 2  95 01            sta $01,x
006C15r 2               
006C15r 2               ; src/prelude.fth:4:25 in `over`
006C15r 2               @OPCODE_3557:   ; [c64_ir] AltPop
006C15r 2  E8               inx
006C16r 2  E8               inx
006C17r 2  68               pla
006C18r 2  95 00            sta $00,x
006C1Ar 2  68               pla
006C1Br 2  95 01            sta $01,x
006C1Dr 2               
006C1Dr 2               ; src/prelude.fth:4:28 in `over`
006C1Dr 2               @OPCODE_3558:   ; [c64_ir] TempLoad
006C1Dr 2  E8               inx
006C1Er 2  E8               inx
006C1Fr 2  A5 95            lda TEMP_PAX1
006C21r 2  95 00            sta $00,x
006C23r 2  A5 96            lda TEMP_PAX2
006C25r 2  95 01            sta $01,x
006C27r 2               
006C27r 2               ; <inline>:0:0 in `main`
006C27r 2               @OPCODE_3559:   ; [c64_ir] AltPop
006C27r 2  E8               inx
006C28r 2  E8               inx
006C29r 2  68               pla
006C2Ar 2  95 00            sta $00,x
006C2Cr 2  68               pla
006C2Dr 2  95 01            sta $01,x
006C2Fr 2               
006C2Fr 2               ; <inline>:0:0 in `main`
006C2Fr 2               @OPCODE_3560:   ; [c64_ir] Drop
006C2Fr 2  CA               dex
006C30r 2  CA               dex
006C31r 2               
006C31r 2               ; <inline>:0:0 in `main`
006C31r 2               @OPCODE_3561:   ; [c64_ir] AltPop
006C31r 2  E8               inx
006C32r 2  E8               inx
006C33r 2  68               pla
006C34r 2  95 00            sta $00,x
006C36r 2  68               pla
006C37r 2  95 01            sta $01,x
006C39r 2               
006C39r 2               ; <inline>:0:0 in `main`
006C39r 2               @OPCODE_3562:   ; [c64_ir] Drop
006C39r 2  CA               dex
006C3Ar 2  CA               dex
006C3Br 2               
006C3Br 2               ; src/prelude.fth:33:29 in `loopimpl`
006C3Br 2               @OPCODE_3563:   ; [c64_ir] AltPush
006C3Br 2  CA               dex
006C3Cr 2  CA               dex
006C3Dr 2  B5 03            lda $03,x
006C3Fr 2  48               pha
006C40r 2  B5 02            lda $02,x
006C42r 2  48               pha
006C43r 2               
006C43r 2               ; src/prelude.fth:33:32 in `loopimpl`
006C43r 2               @OPCODE_3564:   ; [c64_ir] AltPush
006C43r 2  CA               dex
006C44r 2  CA               dex
006C45r 2  B5 03            lda $03,x
006C47r 2  48               pha
006C48r 2  B5 02            lda $02,x
006C4Ar 2  48               pha
006C4Br 2               
006C4Br 2               ; <inline>:0:0 in `main`
006C4Br 2               @OPCODE_3565:   ; [c64_ir] PushLiteral(7777)
006C4Br 2  E8               inx
006C4Cr 2  E8               inx
006C4Dr 2  A9 61            lda #97
006C4Fr 2  95 00            sta $00,x
006C51r 2  A9 1E            lda #30
006C53r 2  95 01            sta $01,x
006C55r 2               
006C55r 2               ; <inline>:0:0 in `main`
006C55r 2               @OPCODE_3566:   ; [c64_ir] AltPush
006C55r 2  CA               dex
006C56r 2  CA               dex
006C57r 2  B5 03            lda $03,x
006C59r 2  48               pha
006C5Ar 2  B5 02            lda $02,x
006C5Cr 2  48               pha
006C5Dr 2               
006C5Dr 2               ; <inline>:0:0 in `main`
006C5Dr 2               @OPCODE_3567:   ; [c64_ir] PushLiteral(7777)
006C5Dr 2  E8               inx
006C5Er 2  E8               inx
006C5Fr 2  A9 61            lda #97
006C61r 2  95 00            sta $00,x
006C63r 2  A9 1E            lda #30
006C65r 2  95 01            sta $01,x
006C67r 2               
006C67r 2               ; <inline>:0:0 in `main`
006C67r 2               @OPCODE_3568:   ; [c64_ir] AltPush
006C67r 2  CA               dex
006C68r 2  CA               dex
006C69r 2  B5 03            lda $03,x
006C6Br 2  48               pha
006C6Cr 2  B5 02            lda $02,x
006C6Er 2  48               pha
006C6Fr 2               
006C6Fr 2               ; <inline>:0:0 in `main`
006C6Fr 2               @OPCODE_3569:   ; [c64_ir] PushLiteral(7777)
006C6Fr 2  E8               inx
006C70r 2  E8               inx
006C71r 2  A9 61            lda #97
006C73r 2  95 00            sta $00,x
006C75r 2  A9 1E            lda #30
006C77r 2  95 01            sta $01,x
006C79r 2               
006C79r 2               ; <inline>:0:0 in `main`
006C79r 2               @OPCODE_3570:   ; [c64_ir] AltPush
006C79r 2  CA               dex
006C7Ar 2  CA               dex
006C7Br 2  B5 03            lda $03,x
006C7Dr 2  48               pha
006C7Er 2  B5 02            lda $02,x
006C80r 2  48               pha
006C81r 2               
006C81r 2               ; <inline>:0:0 in `main`
006C81r 2               @OPCODE_3571:   ; [c64_ir] PushLiteral(7777)
006C81r 2  E8               inx
006C82r 2  E8               inx
006C83r 2  A9 61            lda #97
006C85r 2  95 00            sta $00,x
006C87r 2  A9 1E            lda #30
006C89r 2  95 01            sta $01,x
006C8Br 2               
006C8Br 2               ; <inline>:0:0 in `main`
006C8Br 2               @OPCODE_3572:   ; [c64_ir] AltPush
006C8Br 2  CA               dex
006C8Cr 2  CA               dex
006C8Dr 2  B5 03            lda $03,x
006C8Fr 2  48               pha
006C90r 2  B5 02            lda $02,x
006C92r 2  48               pha
006C93r 2               
006C93r 2               ; src/prelude.fth:14:12 in `invert`
006C93r 2               @OPCODE_3573:   ; [c64_ir] PushLiteral(-1)
006C93r 2  E8               inx
006C94r 2  E8               inx
006C95r 2  A9 FF            lda #255
006C97r 2  95 00            sta $00,x
006C99r 2  A9 FF            lda #255
006C9Br 2  95 01            sta $01,x
006C9Dr 2               
006C9Dr 2               ; src/prelude.fth:14:15 in `invert`
006C9Dr 2               @OPCODE_3574:   ; [c64_ir] Nand
006C9Dr 2                   ; 26
006C9Dr 2  CA               dex
006C9Er 2  CA               dex
006C9Fr 2  B5 00            lda $00,x
006CA1r 2  35 02            and $02,x
006CA3r 2  49 FF            eor #$ff
006CA5r 2  95 00            sta $00,x
006CA7r 2  B5 01            lda $01,x
006CA9r 2  35 03            and $03,x
006CABr 2  49 FF            eor #$ff
006CADr 2  95 01            sta $01,x
006CAFr 2               
006CAFr 2               ; <inline>:0:0 in `main`
006CAFr 2               @OPCODE_3575:   ; [c64_ir] AltPop
006CAFr 2  E8               inx
006CB0r 2  E8               inx
006CB1r 2  68               pla
006CB2r 2  95 00            sta $00,x
006CB4r 2  68               pla
006CB5r 2  95 01            sta $01,x
006CB7r 2               
006CB7r 2               ; <inline>:0:0 in `main`
006CB7r 2               @OPCODE_3576:   ; [c64_ir] Drop
006CB7r 2  CA               dex
006CB8r 2  CA               dex
006CB9r 2               
006CB9r 2               ; src/prelude.fth:15:19 in `negate`
006CB9r 2               @OPCODE_3577:   ; [c64_ir] PushLiteral(1)
006CB9r 2  E8               inx
006CBAr 2  E8               inx
006CBBr 2  A9 01            lda #1
006CBDr 2  95 00            sta $00,x
006CBFr 2  A9 00            lda #0
006CC1r 2  95 01            sta $01,x
006CC3r 2               
006CC3r 2               ; src/prelude.fth:15:21 in `negate`
006CC3r 2               @OPCODE_3578:   ; [c64_ir] Add
006CC3r 2                   ; 21
006CC3r 2  CA               dex
006CC4r 2  CA               dex
006CC5r 2  18               clc
006CC6r 2  B5 00            lda $00,x
006CC8r 2  75 02            adc $02,x
006CCAr 2  95 00            sta $00,x
006CCCr 2  B5 01            lda $01,x
006CCEr 2  75 03            adc $03,x
006CD0r 2  95 01            sta $01,x
006CD2r 2               
006CD2r 2               ; <inline>:0:0 in `main`
006CD2r 2               @OPCODE_3579:   ; [c64_ir] AltPop
006CD2r 2  E8               inx
006CD3r 2  E8               inx
006CD4r 2  68               pla
006CD5r 2  95 00            sta $00,x
006CD7r 2  68               pla
006CD8r 2  95 01            sta $01,x
006CDAr 2               
006CDAr 2               ; <inline>:0:0 in `main`
006CDAr 2               @OPCODE_3580:   ; [c64_ir] Drop
006CDAr 2  CA               dex
006CDBr 2  CA               dex
006CDCr 2               
006CDCr 2               ; src/prelude.fth:16:19 in `-`
006CDCr 2               @OPCODE_3581:   ; [c64_ir] Add
006CDCr 2                   ; 21
006CDCr 2  CA               dex
006CDDr 2  CA               dex
006CDEr 2  18               clc
006CDFr 2  B5 00            lda $00,x
006CE1r 2  75 02            adc $02,x
006CE3r 2  95 00            sta $00,x
006CE5r 2  B5 01            lda $01,x
006CE7r 2  75 03            adc $03,x
006CE9r 2  95 01            sta $01,x
006CEBr 2               
006CEBr 2               ; <inline>:0:0 in `main`
006CEBr 2               @OPCODE_3582:   ; [c64_ir] AltPop
006CEBr 2  E8               inx
006CECr 2  E8               inx
006CEDr 2  68               pla
006CEEr 2  95 00            sta $00,x
006CF0r 2  68               pla
006CF1r 2  95 01            sta $01,x
006CF3r 2               
006CF3r 2               ; <inline>:0:0 in `main`
006CF3r 2               @OPCODE_3583:   ; [c64_ir] Drop
006CF3r 2  CA               dex
006CF4r 2  CA               dex
006CF5r 2               
006CF5r 2               ; <inline>:0:0 in `main`
006CF5r 2               @OPCODE_3584:   ; [c64_ir] PushLiteral(7777)
006CF5r 2  E8               inx
006CF6r 2  E8               inx
006CF7r 2  A9 61            lda #97
006CF9r 2  95 00            sta $00,x
006CFBr 2  A9 1E            lda #30
006CFDr 2  95 01            sta $01,x
006CFFr 2               
006CFFr 2               ; <inline>:0:0 in `main`
006CFFr 2               @OPCODE_3585:   ; [c64_ir] AltPush
006CFFr 2  CA               dex
006D00r 2  CA               dex
006D01r 2  B5 03            lda $03,x
006D03r 2  48               pha
006D04r 2  B5 02            lda $02,x
006D06r 2  48               pha
006D07r 2               
006D07r 2               ; src/prelude.fth:21:8 in `0=`
006D07r 2               @OPCODE_3586:   ; [c64_ir] JumpIf0(163)
006D07r 2  CA               dex
006D08r 2  CA               dex
006D09r 2  B5 02            lda $02,x
006D0Br 2  15 03            ora $03,x
006D0Dr 2  D0 03            bne *+5
006D0Fr 2  4C rr rr         jmp @target_163
006D12r 2               
006D12r 2               @target_162:
006D12r 2               
006D12r 2               ; src/prelude.fth:21:11 in `0=`
006D12r 2               @OPCODE_3588:   ; [c64_ir] PushLiteral(0)
006D12r 2  E8               inx
006D13r 2  E8               inx
006D14r 2  A9 00            lda #0
006D16r 2  95 00            sta $00,x
006D18r 2  A9 00            lda #0
006D1Ar 2  95 01            sta $01,x
006D1Cr 2               
006D1Cr 2               ; src/prelude.fth:21:13 in `0=`
006D1Cr 2               @OPCODE_3589:   ; [c64_ir] JumpElse(164)
006D1Cr 2  4C rr rr         jmp @target_164
006D1Fr 2               
006D1Fr 2               @target_163:
006D1Fr 2               
006D1Fr 2               ; src/prelude.fth:21:18 in `0=`
006D1Fr 2               @OPCODE_3591:   ; [c64_ir] PushLiteral(-1)
006D1Fr 2  E8               inx
006D20r 2  E8               inx
006D21r 2  A9 FF            lda #255
006D23r 2  95 00            sta $00,x
006D25r 2  A9 FF            lda #255
006D27r 2  95 01            sta $01,x
006D29r 2               
006D29r 2               ; src/prelude.fth:21:21 in `0=`
006D29r 2               @OPCODE_3592:   ; [c64_ir] JumpTarget(163)
006D29r 2               
006D29r 2               @target_164:
006D29r 2               
006D29r 2               ; <inline>:0:0 in `main`
006D29r 2               @OPCODE_3594:   ; [c64_ir] AltPop
006D29r 2  E8               inx
006D2Ar 2  E8               inx
006D2Br 2  68               pla
006D2Cr 2  95 00            sta $00,x
006D2Er 2  68               pla
006D2Fr 2  95 01            sta $01,x
006D31r 2               
006D31r 2               ; <inline>:0:0 in `main`
006D31r 2               @OPCODE_3595:   ; [c64_ir] Drop
006D31r 2  CA               dex
006D32r 2  CA               dex
006D33r 2               
006D33r 2               ; <inline>:0:0 in `main`
006D33r 2               @OPCODE_3596:   ; [c64_ir] AltPop
006D33r 2  E8               inx
006D34r 2  E8               inx
006D35r 2  68               pla
006D36r 2  95 00            sta $00,x
006D38r 2  68               pla
006D39r 2  95 01            sta $01,x
006D3Br 2               
006D3Br 2               ; <inline>:0:0 in `main`
006D3Br 2               @OPCODE_3597:   ; [c64_ir] Drop
006D3Br 2  CA               dex
006D3Cr 2  CA               dex
006D3Dr 2               
006D3Dr 2               ; <inline>:0:0 in `main`
006D3Dr 2               @OPCODE_3598:   ; [c64_ir] PushLiteral(7777)
006D3Dr 2  E8               inx
006D3Er 2  E8               inx
006D3Fr 2  A9 61            lda #97
006D41r 2  95 00            sta $00,x
006D43r 2  A9 1E            lda #30
006D45r 2  95 01            sta $01,x
006D47r 2               
006D47r 2               ; <inline>:0:0 in `main`
006D47r 2               @OPCODE_3599:   ; [c64_ir] AltPush
006D47r 2  CA               dex
006D48r 2  CA               dex
006D49r 2  B5 03            lda $03,x
006D4Br 2  48               pha
006D4Cr 2  B5 02            lda $02,x
006D4Er 2  48               pha
006D4Fr 2               
006D4Fr 2               ; src/prelude.fth:3:10 in `swap`
006D4Fr 2               @OPCODE_3600:   ; [c64_ir] AltPush
006D4Fr 2  CA               dex
006D50r 2  CA               dex
006D51r 2  B5 03            lda $03,x
006D53r 2  48               pha
006D54r 2  B5 02            lda $02,x
006D56r 2  48               pha
006D57r 2               
006D57r 2               ; src/prelude.fth:3:13 in `swap`
006D57r 2               @OPCODE_3601:   ; [c64_ir] TempStore
006D57r 2  CA               dex
006D58r 2  CA               dex
006D59r 2  B5 03            lda $03,x
006D5Br 2  85 96            sta TEMP_PAX2
006D5Dr 2  B5 02            lda $02,x
006D5Fr 2  85 95            sta TEMP_PAX1
006D61r 2               
006D61r 2               ; src/prelude.fth:3:19 in `swap`
006D61r 2               @OPCODE_3602:   ; [c64_ir] AltPop
006D61r 2  E8               inx
006D62r 2  E8               inx
006D63r 2  68               pla
006D64r 2  95 00            sta $00,x
006D66r 2  68               pla
006D67r 2  95 01            sta $01,x
006D69r 2               
006D69r 2               ; src/prelude.fth:3:22 in `swap`
006D69r 2               @OPCODE_3603:   ; [c64_ir] TempLoad
006D69r 2  E8               inx
006D6Ar 2  E8               inx
006D6Br 2  A5 95            lda TEMP_PAX1
006D6Dr 2  95 00            sta $00,x
006D6Fr 2  A5 96            lda TEMP_PAX2
006D71r 2  95 01            sta $01,x
006D73r 2               
006D73r 2               ; <inline>:0:0 in `main`
006D73r 2               @OPCODE_3604:   ; [c64_ir] AltPop
006D73r 2  E8               inx
006D74r 2  E8               inx
006D75r 2  68               pla
006D76r 2  95 00            sta $00,x
006D78r 2  68               pla
006D79r 2  95 01            sta $01,x
006D7Br 2               
006D7Br 2               ; <inline>:0:0 in `main`
006D7Br 2               @OPCODE_3605:   ; [c64_ir] Drop
006D7Br 2  CA               dex
006D7Cr 2  CA               dex
006D7Dr 2               
006D7Dr 2               ; src/prelude.fth:33:42 in `loopimpl`
006D7Dr 2               @OPCODE_3606:   ; [c64_ir] AltPush
006D7Dr 2  CA               dex
006D7Er 2  CA               dex
006D7Fr 2  B5 03            lda $03,x
006D81r 2  48               pha
006D82r 2  B5 02            lda $02,x
006D84r 2  48               pha
006D85r 2               
006D85r 2               ; <inline>:0:0 in `main`
006D85r 2               @OPCODE_3607:   ; [c64_ir] AltPop
006D85r 2  E8               inx
006D86r 2  E8               inx
006D87r 2  68               pla
006D88r 2  95 00            sta $00,x
006D8Ar 2  68               pla
006D8Br 2  95 01            sta $01,x
006D8Dr 2               
006D8Dr 2               ; <inline>:0:0 in `main`
006D8Dr 2               @OPCODE_3608:   ; [c64_ir] Drop
006D8Dr 2  CA               dex
006D8Er 2  CA               dex
006D8Fr 2               
006D8Fr 2               ; src/prelude.fth:44:25 in `*`
006D8Fr 2               @OPCODE_3609:   ; [c64_ir] LoopIf0(161)
006D8Fr 2  CA               dex
006D90r 2  CA               dex
006D91r 2  B5 02            lda $02,x
006D93r 2  15 03            ora $03,x
006D95r 2  D0 03            bne *+5
006D97r 2  4C rr rr         jmp @target_161
006D9Ar 2               
006D9Ar 2               @target_165:
006D9Ar 2               
006D9Ar 2               ; src/prelude.fth:44:25 in `*`
006D9Ar 2               @OPCODE_3611:   ; [c64_ir] AltPop
006D9Ar 2  E8               inx
006D9Br 2  E8               inx
006D9Cr 2  68               pla
006D9Dr 2  95 00            sta $00,x
006D9Fr 2  68               pla
006DA0r 2  95 01            sta $01,x
006DA2r 2               
006DA2r 2               ; src/prelude.fth:44:25 in `*`
006DA2r 2               @OPCODE_3612:   ; [c64_ir] Drop
006DA2r 2  CA               dex
006DA3r 2  CA               dex
006DA4r 2               
006DA4r 2               ; src/prelude.fth:44:25 in `*`
006DA4r 2               @OPCODE_3613:   ; [c64_ir] AltPop
006DA4r 2  E8               inx
006DA5r 2  E8               inx
006DA6r 2  68               pla
006DA7r 2  95 00            sta $00,x
006DA9r 2  68               pla
006DAAr 2  95 01            sta $01,x
006DACr 2               
006DACr 2               ; src/prelude.fth:44:25 in `*`
006DACr 2               @OPCODE_3614:   ; [c64_ir] Drop
006DACr 2  CA               dex
006DADr 2  CA               dex
006DAEr 2               
006DAEr 2               ; <inline>:0:0 in `main`
006DAEr 2               @OPCODE_3615:   ; [c64_ir] PushLiteral(7777)
006DAEr 2  E8               inx
006DAFr 2  E8               inx
006DB0r 2  A9 61            lda #97
006DB2r 2  95 00            sta $00,x
006DB4r 2  A9 1E            lda #30
006DB6r 2  95 01            sta $01,x
006DB8r 2               
006DB8r 2               ; <inline>:0:0 in `main`
006DB8r 2               @OPCODE_3616:   ; [c64_ir] AltPush
006DB8r 2  CA               dex
006DB9r 2  CA               dex
006DBAr 2  B5 03            lda $03,x
006DBCr 2  48               pha
006DBDr 2  B5 02            lda $02,x
006DBFr 2  48               pha
006DC0r 2               
006DC0r 2               ; src/prelude.fth:3:10 in `swap`
006DC0r 2               @OPCODE_3617:   ; [c64_ir] AltPush
006DC0r 2  CA               dex
006DC1r 2  CA               dex
006DC2r 2  B5 03            lda $03,x
006DC4r 2  48               pha
006DC5r 2  B5 02            lda $02,x
006DC7r 2  48               pha
006DC8r 2               
006DC8r 2               ; src/prelude.fth:3:13 in `swap`
006DC8r 2               @OPCODE_3618:   ; [c64_ir] TempStore
006DC8r 2  CA               dex
006DC9r 2  CA               dex
006DCAr 2  B5 03            lda $03,x
006DCCr 2  85 96            sta TEMP_PAX2
006DCEr 2  B5 02            lda $02,x
006DD0r 2  85 95            sta TEMP_PAX1
006DD2r 2               
006DD2r 2               ; src/prelude.fth:3:19 in `swap`
006DD2r 2               @OPCODE_3619:   ; [c64_ir] AltPop
006DD2r 2  E8               inx
006DD3r 2  E8               inx
006DD4r 2  68               pla
006DD5r 2  95 00            sta $00,x
006DD7r 2  68               pla
006DD8r 2  95 01            sta $01,x
006DDAr 2               
006DDAr 2               ; src/prelude.fth:3:22 in `swap`
006DDAr 2               @OPCODE_3620:   ; [c64_ir] TempLoad
006DDAr 2  E8               inx
006DDBr 2  E8               inx
006DDCr 2  A5 95            lda TEMP_PAX1
006DDEr 2  95 00            sta $00,x
006DE0r 2  A5 96            lda TEMP_PAX2
006DE2r 2  95 01            sta $01,x
006DE4r 2               
006DE4r 2               ; <inline>:0:0 in `main`
006DE4r 2               @OPCODE_3621:   ; [c64_ir] AltPop
006DE4r 2  E8               inx
006DE5r 2  E8               inx
006DE6r 2  68               pla
006DE7r 2  95 00            sta $00,x
006DE9r 2  68               pla
006DEAr 2  95 01            sta $01,x
006DECr 2               
006DECr 2               ; <inline>:0:0 in `main`
006DECr 2               @OPCODE_3622:   ; [c64_ir] Drop
006DECr 2  CA               dex
006DEDr 2  CA               dex
006DEEr 2               
006DEEr 2               ; src/prelude.fth:44:35 in `*`
006DEEr 2               @OPCODE_3623:   ; [c64_ir] Drop
006DEEr 2  CA               dex
006DEFr 2  CA               dex
006DF0r 2               
006DF0r 2               ; <inline>:0:0 in `main`
006DF0r 2               @OPCODE_3624:   ; [c64_ir] AltPop
006DF0r 2  E8               inx
006DF1r 2  E8               inx
006DF2r 2  68               pla
006DF3r 2  95 00            sta $00,x
006DF5r 2  68               pla
006DF6r 2  95 01            sta $01,x
006DF8r 2               
006DF8r 2               ; <inline>:0:0 in `main`
006DF8r 2               @OPCODE_3625:   ; [c64_ir] Drop
006DF8r 2  CA               dex
006DF9r 2  CA               dex
006DFAr 2               
006DFAr 2               ; snake.fth:48:39 in `convert-x-y`
006DFAr 2               @OPCODE_3626:   ; [c64_ir] Add
006DFAr 2                   ; 21
006DFAr 2  CA               dex
006DFBr 2  CA               dex
006DFCr 2  18               clc
006DFDr 2  B5 00            lda $00,x
006DFFr 2  75 02            adc $02,x
006E01r 2  95 00            sta $00,x
006E03r 2  B5 01            lda $01,x
006E05r 2  75 03            adc $03,x
006E07r 2  95 01            sta $01,x
006E09r 2               
006E09r 2               ; <inline>:0:0 in `main`
006E09r 2               @OPCODE_3627:   ; [c64_ir] AltPop
006E09r 2  E8               inx
006E0Ar 2  E8               inx
006E0Br 2  68               pla
006E0Cr 2  95 00            sta $00,x
006E0Er 2  68               pla
006E0Fr 2  95 01            sta $01,x
006E11r 2               
006E11r 2               ; <inline>:0:0 in `main`
006E11r 2               @OPCODE_3628:   ; [c64_ir] Drop
006E11r 2  CA               dex
006E12r 2  CA               dex
006E13r 2               
006E13r 2               ; <inline>:0:0 in `main`
006E13r 2               @OPCODE_3629:   ; [c64_ir] PushLiteral(7777)
006E13r 2  E8               inx
006E14r 2  E8               inx
006E15r 2  A9 61            lda #97
006E17r 2  95 00            sta $00,x
006E19r 2  A9 1E            lda #30
006E1Br 2  95 01            sta $01,x
006E1Dr 2               
006E1Dr 2               ; <inline>:0:0 in `main`
006E1Dr 2               @OPCODE_3630:   ; [c64_ir] AltPush
006E1Dr 2  CA               dex
006E1Er 2  CA               dex
006E1Fr 2  B5 03            lda $03,x
006E21r 2  48               pha
006E22r 2  B5 02            lda $02,x
006E24r 2  48               pha
006E25r 2               
006E25r 2               ; snake.fth:49:34 in `draw-index`
006E25r 2               @OPCODE_3631:   ; [c64_ir] PushLiteral(1024)
006E25r 2  E8               inx
006E26r 2  E8               inx
006E27r 2  A9 00            lda #0
006E29r 2  95 00            sta $00,x
006E2Br 2  A9 04            lda #4
006E2Dr 2  95 01            sta $01,x
006E2Fr 2               
006E2Fr 2               ; snake.fth:49:43 in `draw-index`
006E2Fr 2               @OPCODE_3632:   ; [c64_ir] Add
006E2Fr 2                   ; 21
006E2Fr 2  CA               dex
006E30r 2  CA               dex
006E31r 2  18               clc
006E32r 2  B5 00            lda $00,x
006E34r 2  75 02            adc $02,x
006E36r 2  95 00            sta $00,x
006E38r 2  B5 01            lda $01,x
006E3Ar 2  75 03            adc $03,x
006E3Cr 2  95 01            sta $01,x
006E3Er 2               
006E3Er 2               ; snake.fth:49:45 in `draw-index`
006E3Er 2               @OPCODE_3633:   ; [c64_ir] Store8
006E3Er 2  CA               dex
006E3Fr 2  CA               dex
006E40r 2  CA               dex
006E41r 2  CA               dex
006E42r 2  B5 02            lda $02,x
006E44r 2  81 04            sta ($04,x)
006E46r 2                   ; TODO high byte
006E46r 2               
006E46r 2               ; <inline>:0:0 in `main`
006E46r 2               @OPCODE_3634:   ; [c64_ir] AltPop
006E46r 2  E8               inx
006E47r 2  E8               inx
006E48r 2  68               pla
006E49r 2  95 00            sta $00,x
006E4Br 2  68               pla
006E4Cr 2  95 01            sta $01,x
006E4Er 2               
006E4Er 2               ; <inline>:0:0 in `main`
006E4Er 2               @OPCODE_3635:   ; [c64_ir] Drop
006E4Er 2  CA               dex
006E4Fr 2  CA               dex
006E50r 2               
006E50r 2               ; <inline>:0:0 in `main`
006E50r 2               @OPCODE_3636:   ; [c64_ir] AltPop
006E50r 2  E8               inx
006E51r 2  E8               inx
006E52r 2  68               pla
006E53r 2  95 00            sta $00,x
006E55r 2  68               pla
006E56r 2  95 01            sta $01,x
006E58r 2               
006E58r 2               ; <inline>:0:0 in `main`
006E58r 2               @OPCODE_3637:   ; [c64_ir] Drop
006E58r 2  CA               dex
006E59r 2  CA               dex
006E5Ar 2               
006E5Ar 2               ; <inline>:0:0 in `main`
006E5Ar 2               @OPCODE_3638:   ; [c64_ir] AltPop
006E5Ar 2  E8               inx
006E5Br 2  E8               inx
006E5Cr 2  68               pla
006E5Dr 2  95 00            sta $00,x
006E5Fr 2  68               pla
006E60r 2  95 01            sta $01,x
006E62r 2               
006E62r 2               ; <inline>:0:0 in `main`
006E62r 2               @OPCODE_3639:   ; [c64_ir] Drop
006E62r 2  CA               dex
006E63r 2  CA               dex
006E64r 2               
006E64r 2               ; <inline>:0:0 in `main`
006E64r 2               @OPCODE_3640:   ; [c64_ir] PushLiteral(7777)
006E64r 2  E8               inx
006E65r 2  E8               inx
006E66r 2  A9 61            lda #97
006E68r 2  95 00            sta $00,x
006E6Ar 2  A9 1E            lda #30
006E6Cr 2  95 01            sta $01,x
006E6Er 2               
006E6Er 2               ; <inline>:0:0 in `main`
006E6Er 2               @OPCODE_3641:   ; [c64_ir] AltPush
006E6Er 2  CA               dex
006E6Fr 2  CA               dex
006E70r 2  B5 03            lda $03,x
006E72r 2  48               pha
006E73r 2  B5 02            lda $02,x
006E75r 2  48               pha
006E76r 2               
006E76r 2               ; snake.fth:172:3 in `random-x-position`
006E76r 2               @OPCODE_3642:   ; [c64_ir] PushLiteral(40)
006E76r 2  E8               inx
006E77r 2  E8               inx
006E78r 2  A9 28            lda #40
006E7Ar 2  95 00            sta $00,x
006E7Cr 2  A9 00            lda #0
006E7Er 2  95 01            sta $01,x
006E80r 2               
006E80r 2               ; snake.fth:172:9 in `random-x-position`
006E80r 2               @OPCODE_3643:   ; [c64_ir] PushLiteral(4)
006E80r 2  E8               inx
006E81r 2  E8               inx
006E82r 2  A9 04            lda #4
006E84r 2  95 00            sta $00,x
006E86r 2  A9 00            lda #0
006E88r 2  95 01            sta $01,x
006E8Ar 2               
006E8Ar 2               ; <inline>:0:0 in `main`
006E8Ar 2               @OPCODE_3644:   ; [c64_ir] PushLiteral(7777)
006E8Ar 2  E8               inx
006E8Br 2  E8               inx
006E8Cr 2  A9 61            lda #97
006E8Er 2  95 00            sta $00,x
006E90r 2  A9 1E            lda #30
006E92r 2  95 01            sta $01,x
006E94r 2               
006E94r 2               ; <inline>:0:0 in `main`
006E94r 2               @OPCODE_3645:   ; [c64_ir] AltPush
006E94r 2  CA               dex
006E95r 2  CA               dex
006E96r 2  B5 03            lda $03,x
006E98r 2  48               pha
006E99r 2  B5 02            lda $02,x
006E9Br 2  48               pha
006E9Cr 2               
006E9Cr 2               ; <inline>:0:0 in `main`
006E9Cr 2               @OPCODE_3646:   ; [c64_ir] PushLiteral(7777)
006E9Cr 2  E8               inx
006E9Dr 2  E8               inx
006E9Er 2  A9 61            lda #97
006EA0r 2  95 00            sta $00,x
006EA2r 2  A9 1E            lda #30
006EA4r 2  95 01            sta $01,x
006EA6r 2               
006EA6r 2               ; <inline>:0:0 in `main`
006EA6r 2               @OPCODE_3647:   ; [c64_ir] AltPush
006EA6r 2  CA               dex
006EA7r 2  CA               dex
006EA8r 2  B5 03            lda $03,x
006EAAr 2  48               pha
006EABr 2  B5 02            lda $02,x
006EADr 2  48               pha
006EAEr 2               
006EAEr 2               ; <inline>:0:0 in `main`
006EAEr 2               @OPCODE_3648:   ; [c64_ir] PushLiteral(7777)
006EAEr 2  E8               inx
006EAFr 2  E8               inx
006EB0r 2  A9 61            lda #97
006EB2r 2  95 00            sta $00,x
006EB4r 2  A9 1E            lda #30
006EB6r 2  95 01            sta $01,x
006EB8r 2               
006EB8r 2               ; <inline>:0:0 in `main`
006EB8r 2               @OPCODE_3649:   ; [c64_ir] AltPush
006EB8r 2  CA               dex
006EB9r 2  CA               dex
006EBAr 2  B5 03            lda $03,x
006EBCr 2  48               pha
006EBDr 2  B5 02            lda $02,x
006EBFr 2  48               pha
006EC0r 2               
006EC0r 2               ; src/prelude.fth:14:12 in `invert`
006EC0r 2               @OPCODE_3650:   ; [c64_ir] PushLiteral(-1)
006EC0r 2  E8               inx
006EC1r 2  E8               inx
006EC2r 2  A9 FF            lda #255
006EC4r 2  95 00            sta $00,x
006EC6r 2  A9 FF            lda #255
006EC8r 2  95 01            sta $01,x
006ECAr 2               
006ECAr 2               ; src/prelude.fth:14:15 in `invert`
006ECAr 2               @OPCODE_3651:   ; [c64_ir] Nand
006ECAr 2                   ; 26
006ECAr 2  CA               dex
006ECBr 2  CA               dex
006ECCr 2  B5 00            lda $00,x
006ECEr 2  35 02            and $02,x
006ED0r 2  49 FF            eor #$ff
006ED2r 2  95 00            sta $00,x
006ED4r 2  B5 01            lda $01,x
006ED6r 2  35 03            and $03,x
006ED8r 2  49 FF            eor #$ff
006EDAr 2  95 01            sta $01,x
006EDCr 2               
006EDCr 2               ; <inline>:0:0 in `main`
006EDCr 2               @OPCODE_3652:   ; [c64_ir] AltPop
006EDCr 2  E8               inx
006EDDr 2  E8               inx
006EDEr 2  68               pla
006EDFr 2  95 00            sta $00,x
006EE1r 2  68               pla
006EE2r 2  95 01            sta $01,x
006EE4r 2               
006EE4r 2               ; <inline>:0:0 in `main`
006EE4r 2               @OPCODE_3653:   ; [c64_ir] Drop
006EE4r 2  CA               dex
006EE5r 2  CA               dex
006EE6r 2               
006EE6r 2               ; src/prelude.fth:15:19 in `negate`
006EE6r 2               @OPCODE_3654:   ; [c64_ir] PushLiteral(1)
006EE6r 2  E8               inx
006EE7r 2  E8               inx
006EE8r 2  A9 01            lda #1
006EEAr 2  95 00            sta $00,x
006EECr 2  A9 00            lda #0
006EEEr 2  95 01            sta $01,x
006EF0r 2               
006EF0r 2               ; src/prelude.fth:15:21 in `negate`
006EF0r 2               @OPCODE_3655:   ; [c64_ir] Add
006EF0r 2                   ; 21
006EF0r 2  CA               dex
006EF1r 2  CA               dex
006EF2r 2  18               clc
006EF3r 2  B5 00            lda $00,x
006EF5r 2  75 02            adc $02,x
006EF7r 2  95 00            sta $00,x
006EF9r 2  B5 01            lda $01,x
006EFBr 2  75 03            adc $03,x
006EFDr 2  95 01            sta $01,x
006EFFr 2               
006EFFr 2               ; <inline>:0:0 in `main`
006EFFr 2               @OPCODE_3656:   ; [c64_ir] AltPop
006EFFr 2  E8               inx
006F00r 2  E8               inx
006F01r 2  68               pla
006F02r 2  95 00            sta $00,x
006F04r 2  68               pla
006F05r 2  95 01            sta $01,x
006F07r 2               
006F07r 2               ; <inline>:0:0 in `main`
006F07r 2               @OPCODE_3657:   ; [c64_ir] Drop
006F07r 2  CA               dex
006F08r 2  CA               dex
006F09r 2               
006F09r 2               ; src/prelude.fth:16:19 in `-`
006F09r 2               @OPCODE_3658:   ; [c64_ir] Add
006F09r 2                   ; 21
006F09r 2  CA               dex
006F0Ar 2  CA               dex
006F0Br 2  18               clc
006F0Cr 2  B5 00            lda $00,x
006F0Er 2  75 02            adc $02,x
006F10r 2  95 00            sta $00,x
006F12r 2  B5 01            lda $01,x
006F14r 2  75 03            adc $03,x
006F16r 2  95 01            sta $01,x
006F18r 2               
006F18r 2               ; <inline>:0:0 in `main`
006F18r 2               @OPCODE_3659:   ; [c64_ir] AltPop
006F18r 2  E8               inx
006F19r 2  E8               inx
006F1Ar 2  68               pla
006F1Br 2  95 00            sta $00,x
006F1Dr 2  68               pla
006F1Er 2  95 01            sta $01,x
006F20r 2               
006F20r 2               ; <inline>:0:0 in `main`
006F20r 2               @OPCODE_3660:   ; [c64_ir] Drop
006F20r 2  CA               dex
006F21r 2  CA               dex
006F22r 2               
006F22r 2               ; <inline>:0:0 in `main`
006F22r 2               @OPCODE_3661:   ; [c64_ir] PushLiteral(7777)
006F22r 2  E8               inx
006F23r 2  E8               inx
006F24r 2  A9 61            lda #97
006F26r 2  95 00            sta $00,x
006F28r 2  A9 1E            lda #30
006F2Ar 2  95 01            sta $01,x
006F2Cr 2               
006F2Cr 2               ; <inline>:0:0 in `main`
006F2Cr 2               @OPCODE_3662:   ; [c64_ir] AltPush
006F2Cr 2  CA               dex
006F2Dr 2  CA               dex
006F2Er 2  B5 03            lda $03,x
006F30r 2  48               pha
006F31r 2  B5 02            lda $02,x
006F33r 2  48               pha
006F34r 2               
006F34r 2               ; snake.fth:8:10 in `random`
006F34r 2               @OPCODE_3663:   ; [c64_ir] PushLiteral(127)
006F34r 2  E8               inx
006F35r 2  E8               inx
006F36r 2  A9 7F            lda #127
006F38r 2  95 00            sta $00,x
006F3Ar 2  A9 00            lda #0
006F3Cr 2  95 01            sta $01,x
006F3Er 2               
006F3Er 2               ; snake.fth:8:26 in `random`
006F3Er 2               @OPCODE_3664:   ; [c64_ir] Load
006F3Er 2  A1 00            lda ($00,x)
006F40r 2  95 00            sta $00,x
006F42r 2  A9 00            lda #0
006F44r 2  95 01            sta $01,x
006F46r 2               
006F46r 2               ; snake.fth:8:28 in `random`
006F46r 2               @OPCODE_3665:   ; [c64_ir] PushLiteral(255)
006F46r 2  E8               inx
006F47r 2  E8               inx
006F48r 2  A9 FF            lda #255
006F4Ar 2  95 00            sta $00,x
006F4Cr 2  A9 00            lda #0
006F4Er 2  95 01            sta $01,x
006F50r 2               
006F50r 2               ; <inline>:0:0 in `main`
006F50r 2               @OPCODE_3666:   ; [c64_ir] PushLiteral(7777)
006F50r 2  E8               inx
006F51r 2  E8               inx
006F52r 2  A9 61            lda #97
006F54r 2  95 00            sta $00,x
006F56r 2  A9 1E            lda #30
006F58r 2  95 01            sta $01,x
006F5Ar 2               
006F5Ar 2               ; <inline>:0:0 in `main`
006F5Ar 2               @OPCODE_3667:   ; [c64_ir] AltPush
006F5Ar 2  CA               dex
006F5Br 2  CA               dex
006F5Cr 2  B5 03            lda $03,x
006F5Er 2  48               pha
006F5Fr 2  B5 02            lda $02,x
006F61r 2  48               pha
006F62r 2               
006F62r 2               ; src/prelude.fth:28:9 in `and`
006F62r 2               @OPCODE_3668:   ; [c64_ir] Nand
006F62r 2                   ; 26
006F62r 2  CA               dex
006F63r 2  CA               dex
006F64r 2  B5 00            lda $00,x
006F66r 2  35 02            and $02,x
006F68r 2  49 FF            eor #$ff
006F6Ar 2  95 00            sta $00,x
006F6Cr 2  B5 01            lda $01,x
006F6Er 2  35 03            and $03,x
006F70r 2  49 FF            eor #$ff
006F72r 2  95 01            sta $01,x
006F74r 2               
006F74r 2               ; <inline>:0:0 in `main`
006F74r 2               @OPCODE_3669:   ; [c64_ir] PushLiteral(7777)
006F74r 2  E8               inx
006F75r 2  E8               inx
006F76r 2  A9 61            lda #97
006F78r 2  95 00            sta $00,x
006F7Ar 2  A9 1E            lda #30
006F7Cr 2  95 01            sta $01,x
006F7Er 2               
006F7Er 2               ; <inline>:0:0 in `main`
006F7Er 2               @OPCODE_3670:   ; [c64_ir] AltPush
006F7Er 2  CA               dex
006F7Fr 2  CA               dex
006F80r 2  B5 03            lda $03,x
006F82r 2  48               pha
006F83r 2  B5 02            lda $02,x
006F85r 2  48               pha
006F86r 2               
006F86r 2               ; src/prelude.fth:14:12 in `invert`
006F86r 2               @OPCODE_3671:   ; [c64_ir] PushLiteral(-1)
006F86r 2  E8               inx
006F87r 2  E8               inx
006F88r 2  A9 FF            lda #255
006F8Ar 2  95 00            sta $00,x
006F8Cr 2  A9 FF            lda #255
006F8Er 2  95 01            sta $01,x
006F90r 2               
006F90r 2               ; src/prelude.fth:14:15 in `invert`
006F90r 2               @OPCODE_3672:   ; [c64_ir] Nand
006F90r 2                   ; 26
006F90r 2  CA               dex
006F91r 2  CA               dex
006F92r 2  B5 00            lda $00,x
006F94r 2  35 02            and $02,x
006F96r 2  49 FF            eor #$ff
006F98r 2  95 00            sta $00,x
006F9Ar 2  B5 01            lda $01,x
006F9Cr 2  35 03            and $03,x
006F9Er 2  49 FF            eor #$ff
006FA0r 2  95 01            sta $01,x
006FA2r 2               
006FA2r 2               ; <inline>:0:0 in `main`
006FA2r 2               @OPCODE_3673:   ; [c64_ir] AltPop
006FA2r 2  E8               inx
006FA3r 2  E8               inx
006FA4r 2  68               pla
006FA5r 2  95 00            sta $00,x
006FA7r 2  68               pla
006FA8r 2  95 01            sta $01,x
006FAAr 2               
006FAAr 2               ; <inline>:0:0 in `main`
006FAAr 2               @OPCODE_3674:   ; [c64_ir] Drop
006FAAr 2  CA               dex
006FABr 2  CA               dex
006FACr 2               
006FACr 2               ; <inline>:0:0 in `main`
006FACr 2               @OPCODE_3675:   ; [c64_ir] AltPop
006FACr 2  E8               inx
006FADr 2  E8               inx
006FAEr 2  68               pla
006FAFr 2  95 00            sta $00,x
006FB1r 2  68               pla
006FB2r 2  95 01            sta $01,x
006FB4r 2               
006FB4r 2               ; <inline>:0:0 in `main`
006FB4r 2               @OPCODE_3676:   ; [c64_ir] Drop
006FB4r 2  CA               dex
006FB5r 2  CA               dex
006FB6r 2               
006FB6r 2               ; <inline>:0:0 in `main`
006FB6r 2               @OPCODE_3677:   ; [c64_ir] PushLiteral(7777)
006FB6r 2  E8               inx
006FB7r 2  E8               inx
006FB8r 2  A9 61            lda #97
006FBAr 2  95 00            sta $00,x
006FBCr 2  A9 1E            lda #30
006FBEr 2  95 01            sta $01,x
006FC0r 2               
006FC0r 2               ; <inline>:0:0 in `main`
006FC0r 2               @OPCODE_3678:   ; [c64_ir] AltPush
006FC0r 2  CA               dex
006FC1r 2  CA               dex
006FC2r 2  B5 03            lda $03,x
006FC4r 2  48               pha
006FC5r 2  B5 02            lda $02,x
006FC7r 2  48               pha
006FC8r 2               
006FC8r 2               ; src/prelude.fth:3:10 in `swap`
006FC8r 2               @OPCODE_3679:   ; [c64_ir] AltPush
006FC8r 2  CA               dex
006FC9r 2  CA               dex
006FCAr 2  B5 03            lda $03,x
006FCCr 2  48               pha
006FCDr 2  B5 02            lda $02,x
006FCFr 2  48               pha
006FD0r 2               
006FD0r 2               ; src/prelude.fth:3:13 in `swap`
006FD0r 2               @OPCODE_3680:   ; [c64_ir] TempStore
006FD0r 2  CA               dex
006FD1r 2  CA               dex
006FD2r 2  B5 03            lda $03,x
006FD4r 2  85 96            sta TEMP_PAX2
006FD6r 2  B5 02            lda $02,x
006FD8r 2  85 95            sta TEMP_PAX1
006FDAr 2               
006FDAr 2               ; src/prelude.fth:3:19 in `swap`
006FDAr 2               @OPCODE_3681:   ; [c64_ir] AltPop
006FDAr 2  E8               inx
006FDBr 2  E8               inx
006FDCr 2  68               pla
006FDDr 2  95 00            sta $00,x
006FDFr 2  68               pla
006FE0r 2  95 01            sta $01,x
006FE2r 2               
006FE2r 2               ; src/prelude.fth:3:22 in `swap`
006FE2r 2               @OPCODE_3682:   ; [c64_ir] TempLoad
006FE2r 2  E8               inx
006FE3r 2  E8               inx
006FE4r 2  A5 95            lda TEMP_PAX1
006FE6r 2  95 00            sta $00,x
006FE8r 2  A5 96            lda TEMP_PAX2
006FEAr 2  95 01            sta $01,x
006FECr 2               
006FECr 2               ; <inline>:0:0 in `main`
006FECr 2               @OPCODE_3683:   ; [c64_ir] AltPop
006FECr 2  E8               inx
006FEDr 2  E8               inx
006FEEr 2  68               pla
006FEFr 2  95 00            sta $00,x
006FF1r 2  68               pla
006FF2r 2  95 01            sta $01,x
006FF4r 2               
006FF4r 2               ; <inline>:0:0 in `main`
006FF4r 2               @OPCODE_3684:   ; [c64_ir] Drop
006FF4r 2  CA               dex
006FF5r 2  CA               dex
006FF6r 2               
006FF6r 2               ; <inline>:0:0 in `main`
006FF6r 2               @OPCODE_3685:   ; [c64_ir] PushLiteral(7777)
006FF6r 2  E8               inx
006FF7r 2  E8               inx
006FF8r 2  A9 61            lda #97
006FFAr 2  95 00            sta $00,x
006FFCr 2  A9 1E            lda #30
006FFEr 2  95 01            sta $01,x
007000r 2               
007000r 2               ; <inline>:0:0 in `main`
007000r 2               @OPCODE_3686:   ; [c64_ir] AltPush
007000r 2  CA               dex
007001r 2  CA               dex
007002r 2  B5 03            lda $03,x
007004r 2  48               pha
007005r 2  B5 02            lda $02,x
007007r 2  48               pha
007008r 2               
007008r 2               ; src/prelude.fth:48:34 in `%`
007008r 2               @OPCODE_3687:   ; [c64_ir] LoopTarget(165)
007008r 2               
007008r 2               @target_166:
007008r 2               
007008r 2               ; <inline>:0:0 in `main`
007008r 2               @OPCODE_3689:   ; [c64_ir] PushLiteral(7777)
007008r 2  E8               inx
007009r 2  E8               inx
00700Ar 2  A9 61            lda #97
00700Cr 2  95 00            sta $00,x
00700Er 2  A9 1E            lda #30
007010r 2  95 01            sta $01,x
007012r 2               
007012r 2               ; <inline>:0:0 in `main`
007012r 2               @OPCODE_3690:   ; [c64_ir] AltPush
007012r 2  CA               dex
007013r 2  CA               dex
007014r 2  B5 03            lda $03,x
007016r 2  48               pha
007017r 2  B5 02            lda $02,x
007019r 2  48               pha
00701Ar 2               
00701Ar 2               ; <inline>:0:0 in `main`
00701Ar 2               @OPCODE_3691:   ; [c64_ir] PushLiteral(7777)
00701Ar 2  E8               inx
00701Br 2  E8               inx
00701Cr 2  A9 61            lda #97
00701Er 2  95 00            sta $00,x
007020r 2  A9 1E            lda #30
007022r 2  95 01            sta $01,x
007024r 2               
007024r 2               ; <inline>:0:0 in `main`
007024r 2               @OPCODE_3692:   ; [c64_ir] AltPush
007024r 2  CA               dex
007025r 2  CA               dex
007026r 2  B5 03            lda $03,x
007028r 2  48               pha
007029r 2  B5 02            lda $02,x
00702Br 2  48               pha
00702Cr 2               
00702Cr 2               ; src/prelude.fth:4:10 in `over`
00702Cr 2               @OPCODE_3693:   ; [c64_ir] AltPush
00702Cr 2  CA               dex
00702Dr 2  CA               dex
00702Er 2  B5 03            lda $03,x
007030r 2  48               pha
007031r 2  B5 02            lda $02,x
007033r 2  48               pha
007034r 2               
007034r 2               ; src/prelude.fth:4:13 in `over`
007034r 2               @OPCODE_3694:   ; [c64_ir] TempStore
007034r 2  CA               dex
007035r 2  CA               dex
007036r 2  B5 03            lda $03,x
007038r 2  85 96            sta TEMP_PAX2
00703Ar 2  B5 02            lda $02,x
00703Cr 2  85 95            sta TEMP_PAX1
00703Er 2               
00703Er 2               ; src/prelude.fth:4:19 in `over`
00703Er 2               @OPCODE_3695:   ; [c64_ir] TempLoad
00703Er 2  E8               inx
00703Fr 2  E8               inx
007040r 2  A5 95            lda TEMP_PAX1
007042r 2  95 00            sta $00,x
007044r 2  A5 96            lda TEMP_PAX2
007046r 2  95 01            sta $01,x
007048r 2               
007048r 2               ; src/prelude.fth:4:25 in `over`
007048r 2               @OPCODE_3696:   ; [c64_ir] AltPop
007048r 2  E8               inx
007049r 2  E8               inx
00704Ar 2  68               pla
00704Br 2  95 00            sta $00,x
00704Dr 2  68               pla
00704Er 2  95 01            sta $01,x
007050r 2               
007050r 2               ; src/prelude.fth:4:28 in `over`
007050r 2               @OPCODE_3697:   ; [c64_ir] TempLoad
007050r 2  E8               inx
007051r 2  E8               inx
007052r 2  A5 95            lda TEMP_PAX1
007054r 2  95 00            sta $00,x
007056r 2  A5 96            lda TEMP_PAX2
007058r 2  95 01            sta $01,x
00705Ar 2               
00705Ar 2               ; <inline>:0:0 in `main`
00705Ar 2               @OPCODE_3698:   ; [c64_ir] AltPop
00705Ar 2  E8               inx
00705Br 2  E8               inx
00705Cr 2  68               pla
00705Dr 2  95 00            sta $00,x
00705Fr 2  68               pla
007060r 2  95 01            sta $01,x
007062r 2               
007062r 2               ; <inline>:0:0 in `main`
007062r 2               @OPCODE_3699:   ; [c64_ir] Drop
007062r 2  CA               dex
007063r 2  CA               dex
007064r 2               
007064r 2               ; <inline>:0:0 in `main`
007064r 2               @OPCODE_3700:   ; [c64_ir] PushLiteral(7777)
007064r 2  E8               inx
007065r 2  E8               inx
007066r 2  A9 61            lda #97
007068r 2  95 00            sta $00,x
00706Ar 2  A9 1E            lda #30
00706Cr 2  95 01            sta $01,x
00706Er 2               
00706Er 2               ; <inline>:0:0 in `main`
00706Er 2               @OPCODE_3701:   ; [c64_ir] AltPush
00706Er 2  CA               dex
00706Fr 2  CA               dex
007070r 2  B5 03            lda $03,x
007072r 2  48               pha
007073r 2  B5 02            lda $02,x
007075r 2  48               pha
007076r 2               
007076r 2               ; src/prelude.fth:4:10 in `over`
007076r 2               @OPCODE_3702:   ; [c64_ir] AltPush
007076r 2  CA               dex
007077r 2  CA               dex
007078r 2  B5 03            lda $03,x
00707Ar 2  48               pha
00707Br 2  B5 02            lda $02,x
00707Dr 2  48               pha
00707Er 2               
00707Er 2               ; src/prelude.fth:4:13 in `over`
00707Er 2               @OPCODE_3703:   ; [c64_ir] TempStore
00707Er 2  CA               dex
00707Fr 2  CA               dex
007080r 2  B5 03            lda $03,x
007082r 2  85 96            sta TEMP_PAX2
007084r 2  B5 02            lda $02,x
007086r 2  85 95            sta TEMP_PAX1
007088r 2               
007088r 2               ; src/prelude.fth:4:19 in `over`
007088r 2               @OPCODE_3704:   ; [c64_ir] TempLoad
007088r 2  E8               inx
007089r 2  E8               inx
00708Ar 2  A5 95            lda TEMP_PAX1
00708Cr 2  95 00            sta $00,x
00708Er 2  A5 96            lda TEMP_PAX2
007090r 2  95 01            sta $01,x
007092r 2               
007092r 2               ; src/prelude.fth:4:25 in `over`
007092r 2               @OPCODE_3705:   ; [c64_ir] AltPop
007092r 2  E8               inx
007093r 2  E8               inx
007094r 2  68               pla
007095r 2  95 00            sta $00,x
007097r 2  68               pla
007098r 2  95 01            sta $01,x
00709Ar 2               
00709Ar 2               ; src/prelude.fth:4:28 in `over`
00709Ar 2               @OPCODE_3706:   ; [c64_ir] TempLoad
00709Ar 2  E8               inx
00709Br 2  E8               inx
00709Cr 2  A5 95            lda TEMP_PAX1
00709Er 2  95 00            sta $00,x
0070A0r 2  A5 96            lda TEMP_PAX2
0070A2r 2  95 01            sta $01,x
0070A4r 2               
0070A4r 2               ; <inline>:0:0 in `main`
0070A4r 2               @OPCODE_3707:   ; [c64_ir] AltPop
0070A4r 2  E8               inx
0070A5r 2  E8               inx
0070A6r 2  68               pla
0070A7r 2  95 00            sta $00,x
0070A9r 2  68               pla
0070AAr 2  95 01            sta $01,x
0070ACr 2               
0070ACr 2               ; <inline>:0:0 in `main`
0070ACr 2               @OPCODE_3708:   ; [c64_ir] Drop
0070ACr 2  CA               dex
0070ADr 2  CA               dex
0070AEr 2               
0070AEr 2               ; <inline>:0:0 in `main`
0070AEr 2               @OPCODE_3709:   ; [c64_ir] AltPop
0070AEr 2  E8               inx
0070AFr 2  E8               inx
0070B0r 2  68               pla
0070B1r 2  95 00            sta $00,x
0070B3r 2  68               pla
0070B4r 2  95 01            sta $01,x
0070B6r 2               
0070B6r 2               ; <inline>:0:0 in `main`
0070B6r 2               @OPCODE_3710:   ; [c64_ir] Drop
0070B6r 2  CA               dex
0070B7r 2  CA               dex
0070B8r 2               
0070B8r 2               ; <inline>:0:0 in `main`
0070B8r 2               @OPCODE_3711:   ; [c64_ir] PushLiteral(7777)
0070B8r 2  E8               inx
0070B9r 2  E8               inx
0070BAr 2  A9 61            lda #97
0070BCr 2  95 00            sta $00,x
0070BEr 2  A9 1E            lda #30
0070C0r 2  95 01            sta $01,x
0070C2r 2               
0070C2r 2               ; <inline>:0:0 in `main`
0070C2r 2               @OPCODE_3712:   ; [c64_ir] AltPush
0070C2r 2  CA               dex
0070C3r 2  CA               dex
0070C4r 2  B5 03            lda $03,x
0070C6r 2  48               pha
0070C7r 2  B5 02            lda $02,x
0070C9r 2  48               pha
0070CAr 2               
0070CAr 2               ; <inline>:0:0 in `main`
0070CAr 2               @OPCODE_3713:   ; [c64_ir] PushLiteral(7777)
0070CAr 2  E8               inx
0070CBr 2  E8               inx
0070CCr 2  A9 61            lda #97
0070CEr 2  95 00            sta $00,x
0070D0r 2  A9 1E            lda #30
0070D2r 2  95 01            sta $01,x
0070D4r 2               
0070D4r 2               ; <inline>:0:0 in `main`
0070D4r 2               @OPCODE_3714:   ; [c64_ir] AltPush
0070D4r 2  CA               dex
0070D5r 2  CA               dex
0070D6r 2  B5 03            lda $03,x
0070D8r 2  48               pha
0070D9r 2  B5 02            lda $02,x
0070DBr 2  48               pha
0070DCr 2               
0070DCr 2               ; <inline>:0:0 in `main`
0070DCr 2               @OPCODE_3715:   ; [c64_ir] PushLiteral(7777)
0070DCr 2  E8               inx
0070DDr 2  E8               inx
0070DEr 2  A9 61            lda #97
0070E0r 2  95 00            sta $00,x
0070E2r 2  A9 1E            lda #30
0070E4r 2  95 01            sta $01,x
0070E6r 2               
0070E6r 2               ; <inline>:0:0 in `main`
0070E6r 2               @OPCODE_3716:   ; [c64_ir] AltPush
0070E6r 2  CA               dex
0070E7r 2  CA               dex
0070E8r 2  B5 03            lda $03,x
0070EAr 2  48               pha
0070EBr 2  B5 02            lda $02,x
0070EDr 2  48               pha
0070EEr 2               
0070EEr 2               ; src/prelude.fth:14:12 in `invert`
0070EEr 2               @OPCODE_3717:   ; [c64_ir] PushLiteral(-1)
0070EEr 2  E8               inx
0070EFr 2  E8               inx
0070F0r 2  A9 FF            lda #255
0070F2r 2  95 00            sta $00,x
0070F4r 2  A9 FF            lda #255
0070F6r 2  95 01            sta $01,x
0070F8r 2               
0070F8r 2               ; src/prelude.fth:14:15 in `invert`
0070F8r 2               @OPCODE_3718:   ; [c64_ir] Nand
0070F8r 2                   ; 26
0070F8r 2  CA               dex
0070F9r 2  CA               dex
0070FAr 2  B5 00            lda $00,x
0070FCr 2  35 02            and $02,x
0070FEr 2  49 FF            eor #$ff
007100r 2  95 00            sta $00,x
007102r 2  B5 01            lda $01,x
007104r 2  35 03            and $03,x
007106r 2  49 FF            eor #$ff
007108r 2  95 01            sta $01,x
00710Ar 2               
00710Ar 2               ; <inline>:0:0 in `main`
00710Ar 2               @OPCODE_3719:   ; [c64_ir] AltPop
00710Ar 2  E8               inx
00710Br 2  E8               inx
00710Cr 2  68               pla
00710Dr 2  95 00            sta $00,x
00710Fr 2  68               pla
007110r 2  95 01            sta $01,x
007112r 2               
007112r 2               ; <inline>:0:0 in `main`
007112r 2               @OPCODE_3720:   ; [c64_ir] Drop
007112r 2  CA               dex
007113r 2  CA               dex
007114r 2               
007114r 2               ; src/prelude.fth:15:19 in `negate`
007114r 2               @OPCODE_3721:   ; [c64_ir] PushLiteral(1)
007114r 2  E8               inx
007115r 2  E8               inx
007116r 2  A9 01            lda #1
007118r 2  95 00            sta $00,x
00711Ar 2  A9 00            lda #0
00711Cr 2  95 01            sta $01,x
00711Er 2               
00711Er 2               ; src/prelude.fth:15:21 in `negate`
00711Er 2               @OPCODE_3722:   ; [c64_ir] Add
00711Er 2                   ; 21
00711Er 2  CA               dex
00711Fr 2  CA               dex
007120r 2  18               clc
007121r 2  B5 00            lda $00,x
007123r 2  75 02            adc $02,x
007125r 2  95 00            sta $00,x
007127r 2  B5 01            lda $01,x
007129r 2  75 03            adc $03,x
00712Br 2  95 01            sta $01,x
00712Dr 2               
00712Dr 2               ; <inline>:0:0 in `main`
00712Dr 2               @OPCODE_3723:   ; [c64_ir] AltPop
00712Dr 2  E8               inx
00712Er 2  E8               inx
00712Fr 2  68               pla
007130r 2  95 00            sta $00,x
007132r 2  68               pla
007133r 2  95 01            sta $01,x
007135r 2               
007135r 2               ; <inline>:0:0 in `main`
007135r 2               @OPCODE_3724:   ; [c64_ir] Drop
007135r 2  CA               dex
007136r 2  CA               dex
007137r 2               
007137r 2               ; src/prelude.fth:16:19 in `-`
007137r 2               @OPCODE_3725:   ; [c64_ir] Add
007137r 2                   ; 21
007137r 2  CA               dex
007138r 2  CA               dex
007139r 2  18               clc
00713Ar 2  B5 00            lda $00,x
00713Cr 2  75 02            adc $02,x
00713Er 2  95 00            sta $00,x
007140r 2  B5 01            lda $01,x
007142r 2  75 03            adc $03,x
007144r 2  95 01            sta $01,x
007146r 2               
007146r 2               ; <inline>:0:0 in `main`
007146r 2               @OPCODE_3726:   ; [c64_ir] AltPop
007146r 2  E8               inx
007147r 2  E8               inx
007148r 2  68               pla
007149r 2  95 00            sta $00,x
00714Br 2  68               pla
00714Cr 2  95 01            sta $01,x
00714Er 2               
00714Er 2               ; <inline>:0:0 in `main`
00714Er 2               @OPCODE_3727:   ; [c64_ir] Drop
00714Er 2  CA               dex
00714Fr 2  CA               dex
007150r 2               
007150r 2               ; <inline>:0:0 in `main`
007150r 2               @OPCODE_3728:   ; [c64_ir] PushLiteral(7777)
007150r 2  E8               inx
007151r 2  E8               inx
007152r 2  A9 61            lda #97
007154r 2  95 00            sta $00,x
007156r 2  A9 1E            lda #30
007158r 2  95 01            sta $01,x
00715Ar 2               
00715Ar 2               ; <inline>:0:0 in `main`
00715Ar 2               @OPCODE_3729:   ; [c64_ir] AltPush
00715Ar 2  CA               dex
00715Br 2  CA               dex
00715Cr 2  B5 03            lda $03,x
00715Er 2  48               pha
00715Fr 2  B5 02            lda $02,x
007161r 2  48               pha
007162r 2               
007162r 2               ; src/prelude.fth:6:10 in `dup`
007162r 2               @OPCODE_3730:   ; [c64_ir] TempStore
007162r 2  CA               dex
007163r 2  CA               dex
007164r 2  B5 03            lda $03,x
007166r 2  85 96            sta TEMP_PAX2
007168r 2  B5 02            lda $02,x
00716Ar 2  85 95            sta TEMP_PAX1
00716Cr 2               
00716Cr 2               ; src/prelude.fth:6:16 in `dup`
00716Cr 2               @OPCODE_3731:   ; [c64_ir] TempLoad
00716Cr 2  E8               inx
00716Dr 2  E8               inx
00716Er 2  A5 95            lda TEMP_PAX1
007170r 2  95 00            sta $00,x
007172r 2  A5 96            lda TEMP_PAX2
007174r 2  95 01            sta $01,x
007176r 2               
007176r 2               ; src/prelude.fth:6:22 in `dup`
007176r 2               @OPCODE_3732:   ; [c64_ir] TempLoad
007176r 2  E8               inx
007177r 2  E8               inx
007178r 2  A5 95            lda TEMP_PAX1
00717Ar 2  95 00            sta $00,x
00717Cr 2  A5 96            lda TEMP_PAX2
00717Er 2  95 01            sta $01,x
007180r 2               
007180r 2               ; <inline>:0:0 in `main`
007180r 2               @OPCODE_3733:   ; [c64_ir] AltPop
007180r 2  E8               inx
007181r 2  E8               inx
007182r 2  68               pla
007183r 2  95 00            sta $00,x
007185r 2  68               pla
007186r 2  95 01            sta $01,x
007188r 2               
007188r 2               ; <inline>:0:0 in `main`
007188r 2               @OPCODE_3734:   ; [c64_ir] Drop
007188r 2  CA               dex
007189r 2  CA               dex
00718Ar 2               
00718Ar 2               ; <inline>:0:0 in `main`
00718Ar 2               @OPCODE_3735:   ; [c64_ir] PushLiteral(7777)
00718Ar 2  E8               inx
00718Br 2  E8               inx
00718Cr 2  A9 61            lda #97
00718Er 2  95 00            sta $00,x
007190r 2  A9 1E            lda #30
007192r 2  95 01            sta $01,x
007194r 2               
007194r 2               ; <inline>:0:0 in `main`
007194r 2               @OPCODE_3736:   ; [c64_ir] AltPush
007194r 2  CA               dex
007195r 2  CA               dex
007196r 2  B5 03            lda $03,x
007198r 2  48               pha
007199r 2  B5 02            lda $02,x
00719Br 2  48               pha
00719Cr 2               
00719Cr 2               ; src/prelude.fth:47:8 in `0<`
00719Cr 2               @OPCODE_3737:   ; [c64_ir] PushLiteral(-32768)
00719Cr 2  E8               inx
00719Dr 2  E8               inx
00719Er 2  A9 00            lda #0
0071A0r 2  95 00            sta $00,x
0071A2r 2  A9 80            lda #128
0071A4r 2  95 01            sta $01,x
0071A6r 2               
0071A6r 2               ; src/prelude.fth:47:14 in `0<`
0071A6r 2               @OPCODE_3738:   ; [c64_ir] Nand
0071A6r 2                   ; 26
0071A6r 2  CA               dex
0071A7r 2  CA               dex
0071A8r 2  B5 00            lda $00,x
0071AAr 2  35 02            and $02,x
0071ACr 2  49 FF            eor #$ff
0071AEr 2  95 00            sta $00,x
0071B0r 2  B5 01            lda $01,x
0071B2r 2  35 03            and $03,x
0071B4r 2  49 FF            eor #$ff
0071B6r 2  95 01            sta $01,x
0071B8r 2               
0071B8r 2               ; <inline>:0:0 in `main`
0071B8r 2               @OPCODE_3739:   ; [c64_ir] PushLiteral(7777)
0071B8r 2  E8               inx
0071B9r 2  E8               inx
0071BAr 2  A9 61            lda #97
0071BCr 2  95 00            sta $00,x
0071BEr 2  A9 1E            lda #30
0071C0r 2  95 01            sta $01,x
0071C2r 2               
0071C2r 2               ; <inline>:0:0 in `main`
0071C2r 2               @OPCODE_3740:   ; [c64_ir] AltPush
0071C2r 2  CA               dex
0071C3r 2  CA               dex
0071C4r 2  B5 03            lda $03,x
0071C6r 2  48               pha
0071C7r 2  B5 02            lda $02,x
0071C9r 2  48               pha
0071CAr 2               
0071CAr 2               ; src/prelude.fth:14:12 in `invert`
0071CAr 2               @OPCODE_3741:   ; [c64_ir] PushLiteral(-1)
0071CAr 2  E8               inx
0071CBr 2  E8               inx
0071CCr 2  A9 FF            lda #255
0071CEr 2  95 00            sta $00,x
0071D0r 2  A9 FF            lda #255
0071D2r 2  95 01            sta $01,x
0071D4r 2               
0071D4r 2               ; src/prelude.fth:14:15 in `invert`
0071D4r 2               @OPCODE_3742:   ; [c64_ir] Nand
0071D4r 2                   ; 26
0071D4r 2  CA               dex
0071D5r 2  CA               dex
0071D6r 2  B5 00            lda $00,x
0071D8r 2  35 02            and $02,x
0071DAr 2  49 FF            eor #$ff
0071DCr 2  95 00            sta $00,x
0071DEr 2  B5 01            lda $01,x
0071E0r 2  35 03            and $03,x
0071E2r 2  49 FF            eor #$ff
0071E4r 2  95 01            sta $01,x
0071E6r 2               
0071E6r 2               ; <inline>:0:0 in `main`
0071E6r 2               @OPCODE_3743:   ; [c64_ir] AltPop
0071E6r 2  E8               inx
0071E7r 2  E8               inx
0071E8r 2  68               pla
0071E9r 2  95 00            sta $00,x
0071EBr 2  68               pla
0071ECr 2  95 01            sta $01,x
0071EEr 2               
0071EEr 2               ; <inline>:0:0 in `main`
0071EEr 2               @OPCODE_3744:   ; [c64_ir] Drop
0071EEr 2  CA               dex
0071EFr 2  CA               dex
0071F0r 2               
0071F0r 2               ; src/prelude.fth:47:26 in `0<`
0071F0r 2               @OPCODE_3745:   ; [c64_ir] JumpIf0(168)
0071F0r 2  CA               dex
0071F1r 2  CA               dex
0071F2r 2  B5 02            lda $02,x
0071F4r 2  15 03            ora $03,x
0071F6r 2  D0 03            bne *+5
0071F8r 2  4C rr rr         jmp @target_168
0071FBr 2               
0071FBr 2               @target_167:
0071FBr 2               
0071FBr 2               ; src/prelude.fth:47:29 in `0<`
0071FBr 2               @OPCODE_3747:   ; [c64_ir] PushLiteral(-1)
0071FBr 2  E8               inx
0071FCr 2  E8               inx
0071FDr 2  A9 FF            lda #255
0071FFr 2  95 00            sta $00,x
007201r 2  A9 FF            lda #255
007203r 2  95 01            sta $01,x
007205r 2               
007205r 2               ; src/prelude.fth:47:32 in `0<`
007205r 2               @OPCODE_3748:   ; [c64_ir] JumpElse(169)
007205r 2  4C rr rr         jmp @target_169
007208r 2               
007208r 2               @target_168:
007208r 2               
007208r 2               ; src/prelude.fth:47:37 in `0<`
007208r 2               @OPCODE_3750:   ; [c64_ir] PushLiteral(0)
007208r 2  E8               inx
007209r 2  E8               inx
00720Ar 2  A9 00            lda #0
00720Cr 2  95 00            sta $00,x
00720Er 2  A9 00            lda #0
007210r 2  95 01            sta $01,x
007212r 2               
007212r 2               ; src/prelude.fth:47:39 in `0<`
007212r 2               @OPCODE_3751:   ; [c64_ir] JumpTarget(168)
007212r 2               
007212r 2               @target_169:
007212r 2               
007212r 2               ; <inline>:0:0 in `main`
007212r 2               @OPCODE_3753:   ; [c64_ir] AltPop
007212r 2  E8               inx
007213r 2  E8               inx
007214r 2  68               pla
007215r 2  95 00            sta $00,x
007217r 2  68               pla
007218r 2  95 01            sta $01,x
00721Ar 2               
00721Ar 2               ; <inline>:0:0 in `main`
00721Ar 2               @OPCODE_3754:   ; [c64_ir] Drop
00721Ar 2  CA               dex
00721Br 2  CA               dex
00721Cr 2               
00721Cr 2               ; src/prelude.fth:48:54 in `%`
00721Cr 2               @OPCODE_3755:   ; [c64_ir] JumpIf0(171)
00721Cr 2  CA               dex
00721Dr 2  CA               dex
00721Er 2  B5 02            lda $02,x
007220r 2  15 03            ora $03,x
007222r 2  D0 03            bne *+5
007224r 2  4C rr rr         jmp @target_171
007227r 2               
007227r 2               @target_170:
007227r 2               
007227r 2               ; src/prelude.fth:48:57 in `%`
007227r 2               @OPCODE_3757:   ; [c64_ir] Add
007227r 2                   ; 21
007227r 2  CA               dex
007228r 2  CA               dex
007229r 2  18               clc
00722Ar 2  B5 00            lda $00,x
00722Cr 2  75 02            adc $02,x
00722Er 2  95 00            sta $00,x
007230r 2  B5 01            lda $01,x
007232r 2  75 03            adc $03,x
007234r 2  95 01            sta $01,x
007236r 2               
007236r 2               ; src/prelude.fth:48:59 in `%`
007236r 2               @OPCODE_3758:   ; [c64_ir] PushLiteral(-1)
007236r 2  E8               inx
007237r 2  E8               inx
007238r 2  A9 FF            lda #255
00723Ar 2  95 00            sta $00,x
00723Cr 2  A9 FF            lda #255
00723Er 2  95 01            sta $01,x
007240r 2               
007240r 2               ; src/prelude.fth:48:62 in `%`
007240r 2               @OPCODE_3759:   ; [c64_ir] JumpElse(172)
007240r 2  4C rr rr         jmp @target_172
007243r 2               
007243r 2               @target_171:
007243r 2               
007243r 2               ; <inline>:0:0 in `main`
007243r 2               @OPCODE_3761:   ; [c64_ir] PushLiteral(7777)
007243r 2  E8               inx
007244r 2  E8               inx
007245r 2  A9 61            lda #97
007247r 2  95 00            sta $00,x
007249r 2  A9 1E            lda #30
00724Br 2  95 01            sta $01,x
00724Dr 2               
00724Dr 2               ; <inline>:0:0 in `main`
00724Dr 2               @OPCODE_3762:   ; [c64_ir] AltPush
00724Dr 2  CA               dex
00724Er 2  CA               dex
00724Fr 2  B5 03            lda $03,x
007251r 2  48               pha
007252r 2  B5 02            lda $02,x
007254r 2  48               pha
007255r 2               
007255r 2               ; src/prelude.fth:5:10 in `rot`
007255r 2               @OPCODE_3763:   ; [c64_ir] AltPush
007255r 2  CA               dex
007256r 2  CA               dex
007257r 2  B5 03            lda $03,x
007259r 2  48               pha
00725Ar 2  B5 02            lda $02,x
00725Cr 2  48               pha
00725Dr 2               
00725Dr 2               ; <inline>:0:0 in `main`
00725Dr 2               @OPCODE_3764:   ; [c64_ir] PushLiteral(7777)
00725Dr 2  E8               inx
00725Er 2  E8               inx
00725Fr 2  A9 61            lda #97
007261r 2  95 00            sta $00,x
007263r 2  A9 1E            lda #30
007265r 2  95 01            sta $01,x
007267r 2               
007267r 2               ; <inline>:0:0 in `main`
007267r 2               @OPCODE_3765:   ; [c64_ir] AltPush
007267r 2  CA               dex
007268r 2  CA               dex
007269r 2  B5 03            lda $03,x
00726Br 2  48               pha
00726Cr 2  B5 02            lda $02,x
00726Er 2  48               pha
00726Fr 2               
00726Fr 2               ; src/prelude.fth:3:10 in `swap`
00726Fr 2               @OPCODE_3766:   ; [c64_ir] AltPush
00726Fr 2  CA               dex
007270r 2  CA               dex
007271r 2  B5 03            lda $03,x
007273r 2  48               pha
007274r 2  B5 02            lda $02,x
007276r 2  48               pha
007277r 2               
007277r 2               ; src/prelude.fth:3:13 in `swap`
007277r 2               @OPCODE_3767:   ; [c64_ir] TempStore
007277r 2  CA               dex
007278r 2  CA               dex
007279r 2  B5 03            lda $03,x
00727Br 2  85 96            sta TEMP_PAX2
00727Dr 2  B5 02            lda $02,x
00727Fr 2  85 95            sta TEMP_PAX1
007281r 2               
007281r 2               ; src/prelude.fth:3:19 in `swap`
007281r 2               @OPCODE_3768:   ; [c64_ir] AltPop
007281r 2  E8               inx
007282r 2  E8               inx
007283r 2  68               pla
007284r 2  95 00            sta $00,x
007286r 2  68               pla
007287r 2  95 01            sta $01,x
007289r 2               
007289r 2               ; src/prelude.fth:3:22 in `swap`
007289r 2               @OPCODE_3769:   ; [c64_ir] TempLoad
007289r 2  E8               inx
00728Ar 2  E8               inx
00728Br 2  A5 95            lda TEMP_PAX1
00728Dr 2  95 00            sta $00,x
00728Fr 2  A5 96            lda TEMP_PAX2
007291r 2  95 01            sta $01,x
007293r 2               
007293r 2               ; <inline>:0:0 in `main`
007293r 2               @OPCODE_3770:   ; [c64_ir] AltPop
007293r 2  E8               inx
007294r 2  E8               inx
007295r 2  68               pla
007296r 2  95 00            sta $00,x
007298r 2  68               pla
007299r 2  95 01            sta $01,x
00729Br 2               
00729Br 2               ; <inline>:0:0 in `main`
00729Br 2               @OPCODE_3771:   ; [c64_ir] Drop
00729Br 2  CA               dex
00729Cr 2  CA               dex
00729Dr 2               
00729Dr 2               ; src/prelude.fth:5:18 in `rot`
00729Dr 2               @OPCODE_3772:   ; [c64_ir] AltPop
00729Dr 2  E8               inx
00729Er 2  E8               inx
00729Fr 2  68               pla
0072A0r 2  95 00            sta $00,x
0072A2r 2  68               pla
0072A3r 2  95 01            sta $01,x
0072A5r 2               
0072A5r 2               ; <inline>:0:0 in `main`
0072A5r 2               @OPCODE_3773:   ; [c64_ir] PushLiteral(7777)
0072A5r 2  E8               inx
0072A6r 2  E8               inx
0072A7r 2  A9 61            lda #97
0072A9r 2  95 00            sta $00,x
0072ABr 2  A9 1E            lda #30
0072ADr 2  95 01            sta $01,x
0072AFr 2               
0072AFr 2               ; <inline>:0:0 in `main`
0072AFr 2               @OPCODE_3774:   ; [c64_ir] AltPush
0072AFr 2  CA               dex
0072B0r 2  CA               dex
0072B1r 2  B5 03            lda $03,x
0072B3r 2  48               pha
0072B4r 2  B5 02            lda $02,x
0072B6r 2  48               pha
0072B7r 2               
0072B7r 2               ; src/prelude.fth:3:10 in `swap`
0072B7r 2               @OPCODE_3775:   ; [c64_ir] AltPush
0072B7r 2  CA               dex
0072B8r 2  CA               dex
0072B9r 2  B5 03            lda $03,x
0072BBr 2  48               pha
0072BCr 2  B5 02            lda $02,x
0072BEr 2  48               pha
0072BFr 2               
0072BFr 2               ; src/prelude.fth:3:13 in `swap`
0072BFr 2               @OPCODE_3776:   ; [c64_ir] TempStore
0072BFr 2  CA               dex
0072C0r 2  CA               dex
0072C1r 2  B5 03            lda $03,x
0072C3r 2  85 96            sta TEMP_PAX2
0072C5r 2  B5 02            lda $02,x
0072C7r 2  85 95            sta TEMP_PAX1
0072C9r 2               
0072C9r 2               ; src/prelude.fth:3:19 in `swap`
0072C9r 2               @OPCODE_3777:   ; [c64_ir] AltPop
0072C9r 2  E8               inx
0072CAr 2  E8               inx
0072CBr 2  68               pla
0072CCr 2  95 00            sta $00,x
0072CEr 2  68               pla
0072CFr 2  95 01            sta $01,x
0072D1r 2               
0072D1r 2               ; src/prelude.fth:3:22 in `swap`
0072D1r 2               @OPCODE_3778:   ; [c64_ir] TempLoad
0072D1r 2  E8               inx
0072D2r 2  E8               inx
0072D3r 2  A5 95            lda TEMP_PAX1
0072D5r 2  95 00            sta $00,x
0072D7r 2  A5 96            lda TEMP_PAX2
0072D9r 2  95 01            sta $01,x
0072DBr 2               
0072DBr 2               ; <inline>:0:0 in `main`
0072DBr 2               @OPCODE_3779:   ; [c64_ir] AltPop
0072DBr 2  E8               inx
0072DCr 2  E8               inx
0072DDr 2  68               pla
0072DEr 2  95 00            sta $00,x
0072E0r 2  68               pla
0072E1r 2  95 01            sta $01,x
0072E3r 2               
0072E3r 2               ; <inline>:0:0 in `main`
0072E3r 2               @OPCODE_3780:   ; [c64_ir] Drop
0072E3r 2  CA               dex
0072E4r 2  CA               dex
0072E5r 2               
0072E5r 2               ; <inline>:0:0 in `main`
0072E5r 2               @OPCODE_3781:   ; [c64_ir] AltPop
0072E5r 2  E8               inx
0072E6r 2  E8               inx
0072E7r 2  68               pla
0072E8r 2  95 00            sta $00,x
0072EAr 2  68               pla
0072EBr 2  95 01            sta $01,x
0072EDr 2               
0072EDr 2               ; <inline>:0:0 in `main`
0072EDr 2               @OPCODE_3782:   ; [c64_ir] Drop
0072EDr 2  CA               dex
0072EEr 2  CA               dex
0072EFr 2               
0072EFr 2               ; src/prelude.fth:48:71 in `%`
0072EFr 2               @OPCODE_3783:   ; [c64_ir] Drop
0072EFr 2  CA               dex
0072F0r 2  CA               dex
0072F1r 2               
0072F1r 2               ; <inline>:0:0 in `main`
0072F1r 2               @OPCODE_3784:   ; [c64_ir] PushLiteral(7777)
0072F1r 2  E8               inx
0072F2r 2  E8               inx
0072F3r 2  A9 61            lda #97
0072F5r 2  95 00            sta $00,x
0072F7r 2  A9 1E            lda #30
0072F9r 2  95 01            sta $01,x
0072FBr 2               
0072FBr 2               ; <inline>:0:0 in `main`
0072FBr 2               @OPCODE_3785:   ; [c64_ir] AltPush
0072FBr 2  CA               dex
0072FCr 2  CA               dex
0072FDr 2  B5 03            lda $03,x
0072FFr 2  48               pha
007300r 2  B5 02            lda $02,x
007302r 2  48               pha
007303r 2               
007303r 2               ; src/prelude.fth:3:10 in `swap`
007303r 2               @OPCODE_3786:   ; [c64_ir] AltPush
007303r 2  CA               dex
007304r 2  CA               dex
007305r 2  B5 03            lda $03,x
007307r 2  48               pha
007308r 2  B5 02            lda $02,x
00730Ar 2  48               pha
00730Br 2               
00730Br 2               ; src/prelude.fth:3:13 in `swap`
00730Br 2               @OPCODE_3787:   ; [c64_ir] TempStore
00730Br 2  CA               dex
00730Cr 2  CA               dex
00730Dr 2  B5 03            lda $03,x
00730Fr 2  85 96            sta TEMP_PAX2
007311r 2  B5 02            lda $02,x
007313r 2  85 95            sta TEMP_PAX1
007315r 2               
007315r 2               ; src/prelude.fth:3:19 in `swap`
007315r 2               @OPCODE_3788:   ; [c64_ir] AltPop
007315r 2  E8               inx
007316r 2  E8               inx
007317r 2  68               pla
007318r 2  95 00            sta $00,x
00731Ar 2  68               pla
00731Br 2  95 01            sta $01,x
00731Dr 2               
00731Dr 2               ; src/prelude.fth:3:22 in `swap`
00731Dr 2               @OPCODE_3789:   ; [c64_ir] TempLoad
00731Dr 2  E8               inx
00731Er 2  E8               inx
00731Fr 2  A5 95            lda TEMP_PAX1
007321r 2  95 00            sta $00,x
007323r 2  A5 96            lda TEMP_PAX2
007325r 2  95 01            sta $01,x
007327r 2               
007327r 2               ; <inline>:0:0 in `main`
007327r 2               @OPCODE_3790:   ; [c64_ir] AltPop
007327r 2  E8               inx
007328r 2  E8               inx
007329r 2  68               pla
00732Ar 2  95 00            sta $00,x
00732Cr 2  68               pla
00732Dr 2  95 01            sta $01,x
00732Fr 2               
00732Fr 2               ; <inline>:0:0 in `main`
00732Fr 2               @OPCODE_3791:   ; [c64_ir] Drop
00732Fr 2  CA               dex
007330r 2  CA               dex
007331r 2               
007331r 2               ; src/prelude.fth:48:81 in `%`
007331r 2               @OPCODE_3792:   ; [c64_ir] PushLiteral(0)
007331r 2  E8               inx
007332r 2  E8               inx
007333r 2  A9 00            lda #0
007335r 2  95 00            sta $00,x
007337r 2  A9 00            lda #0
007339r 2  95 01            sta $01,x
00733Br 2               
00733Br 2               ; src/prelude.fth:48:83 in `%`
00733Br 2               @OPCODE_3793:   ; [c64_ir] JumpTarget(171)
00733Br 2               
00733Br 2               @target_172:
00733Br 2               
00733Br 2               ; src/prelude.fth:48:88 in `%`
00733Br 2               @OPCODE_3795:   ; [c64_ir] LoopIf0(166)
00733Br 2  CA               dex
00733Cr 2  CA               dex
00733Dr 2  B5 02            lda $02,x
00733Fr 2  15 03            ora $03,x
007341r 2  D0 03            bne *+5
007343r 2  4C rr rr         jmp @target_166
007346r 2               
007346r 2               @target_173:
007346r 2               
007346r 2               ; <inline>:0:0 in `main`
007346r 2               @OPCODE_3797:   ; [c64_ir] PushLiteral(7777)
007346r 2  E8               inx
007347r 2  E8               inx
007348r 2  A9 61            lda #97
00734Ar 2  95 00            sta $00,x
00734Cr 2  A9 1E            lda #30
00734Er 2  95 01            sta $01,x
007350r 2               
007350r 2               ; <inline>:0:0 in `main`
007350r 2               @OPCODE_3798:   ; [c64_ir] AltPush
007350r 2  CA               dex
007351r 2  CA               dex
007352r 2  B5 03            lda $03,x
007354r 2  48               pha
007355r 2  B5 02            lda $02,x
007357r 2  48               pha
007358r 2               
007358r 2               ; src/prelude.fth:3:10 in `swap`
007358r 2               @OPCODE_3799:   ; [c64_ir] AltPush
007358r 2  CA               dex
007359r 2  CA               dex
00735Ar 2  B5 03            lda $03,x
00735Cr 2  48               pha
00735Dr 2  B5 02            lda $02,x
00735Fr 2  48               pha
007360r 2               
007360r 2               ; src/prelude.fth:3:13 in `swap`
007360r 2               @OPCODE_3800:   ; [c64_ir] TempStore
007360r 2  CA               dex
007361r 2  CA               dex
007362r 2  B5 03            lda $03,x
007364r 2  85 96            sta TEMP_PAX2
007366r 2  B5 02            lda $02,x
007368r 2  85 95            sta TEMP_PAX1
00736Ar 2               
00736Ar 2               ; src/prelude.fth:3:19 in `swap`
00736Ar 2               @OPCODE_3801:   ; [c64_ir] AltPop
00736Ar 2  E8               inx
00736Br 2  E8               inx
00736Cr 2  68               pla
00736Dr 2  95 00            sta $00,x
00736Fr 2  68               pla
007370r 2  95 01            sta $01,x
007372r 2               
007372r 2               ; src/prelude.fth:3:22 in `swap`
007372r 2               @OPCODE_3802:   ; [c64_ir] TempLoad
007372r 2  E8               inx
007373r 2  E8               inx
007374r 2  A5 95            lda TEMP_PAX1
007376r 2  95 00            sta $00,x
007378r 2  A5 96            lda TEMP_PAX2
00737Ar 2  95 01            sta $01,x
00737Cr 2               
00737Cr 2               ; <inline>:0:0 in `main`
00737Cr 2               @OPCODE_3803:   ; [c64_ir] AltPop
00737Cr 2  E8               inx
00737Dr 2  E8               inx
00737Er 2  68               pla
00737Fr 2  95 00            sta $00,x
007381r 2  68               pla
007382r 2  95 01            sta $01,x
007384r 2               
007384r 2               ; <inline>:0:0 in `main`
007384r 2               @OPCODE_3804:   ; [c64_ir] Drop
007384r 2  CA               dex
007385r 2  CA               dex
007386r 2               
007386r 2               ; src/prelude.fth:48:99 in `%`
007386r 2               @OPCODE_3805:   ; [c64_ir] Drop
007386r 2  CA               dex
007387r 2  CA               dex
007388r 2               
007388r 2               ; <inline>:0:0 in `main`
007388r 2               @OPCODE_3806:   ; [c64_ir] AltPop
007388r 2  E8               inx
007389r 2  E8               inx
00738Ar 2  68               pla
00738Br 2  95 00            sta $00,x
00738Dr 2  68               pla
00738Er 2  95 01            sta $01,x
007390r 2               
007390r 2               ; <inline>:0:0 in `main`
007390r 2               @OPCODE_3807:   ; [c64_ir] Drop
007390r 2  CA               dex
007391r 2  CA               dex
007392r 2               
007392r 2               ; <inline>:0:0 in `main`
007392r 2               @OPCODE_3808:   ; [c64_ir] AltPop
007392r 2  E8               inx
007393r 2  E8               inx
007394r 2  68               pla
007395r 2  95 00            sta $00,x
007397r 2  68               pla
007398r 2  95 01            sta $01,x
00739Ar 2               
00739Ar 2               ; <inline>:0:0 in `main`
00739Ar 2               @OPCODE_3809:   ; [c64_ir] Drop
00739Ar 2  CA               dex
00739Br 2  CA               dex
00739Cr 2               
00739Cr 2               ; snake.fth:172:20 in `random-x-position`
00739Cr 2               @OPCODE_3810:   ; [c64_ir] PushLiteral(2)
00739Cr 2  E8               inx
00739Dr 2  E8               inx
00739Er 2  A9 02            lda #2
0073A0r 2  95 00            sta $00,x
0073A2r 2  A9 00            lda #0
0073A4r 2  95 01            sta $01,x
0073A6r 2               
0073A6r 2               ; snake.fth:172:22 in `random-x-position`
0073A6r 2               @OPCODE_3811:   ; [c64_ir] Add
0073A6r 2                   ; 21
0073A6r 2  CA               dex
0073A7r 2  CA               dex
0073A8r 2  18               clc
0073A9r 2  B5 00            lda $00,x
0073ABr 2  75 02            adc $02,x
0073ADr 2  95 00            sta $00,x
0073AFr 2  B5 01            lda $01,x
0073B1r 2  75 03            adc $03,x
0073B3r 2  95 01            sta $01,x
0073B5r 2               
0073B5r 2               ; <inline>:0:0 in `main`
0073B5r 2               @OPCODE_3812:   ; [c64_ir] AltPop
0073B5r 2  E8               inx
0073B6r 2  E8               inx
0073B7r 2  68               pla
0073B8r 2  95 00            sta $00,x
0073BAr 2  68               pla
0073BBr 2  95 01            sta $01,x
0073BDr 2               
0073BDr 2               ; <inline>:0:0 in `main`
0073BDr 2               @OPCODE_3813:   ; [c64_ir] Drop
0073BDr 2  CA               dex
0073BEr 2  CA               dex
0073BFr 2               
0073BFr 2               ; <inline>:0:0 in `main`
0073BFr 2               @OPCODE_3814:   ; [c64_ir] PushLiteral(7777)
0073BFr 2  E8               inx
0073C0r 2  E8               inx
0073C1r 2  A9 61            lda #97
0073C3r 2  95 00            sta $00,x
0073C5r 2  A9 1E            lda #30
0073C7r 2  95 01            sta $01,x
0073C9r 2               
0073C9r 2               ; <inline>:0:0 in `main`
0073C9r 2               @OPCODE_3815:   ; [c64_ir] AltPush
0073C9r 2  CA               dex
0073CAr 2  CA               dex
0073CBr 2  B5 03            lda $03,x
0073CDr 2  48               pha
0073CEr 2  B5 02            lda $02,x
0073D0r 2  48               pha
0073D1r 2               
0073D1r 2               ; snake.fth:174:3 in `random-y-position`
0073D1r 2               @OPCODE_3816:   ; [c64_ir] PushLiteral(25)
0073D1r 2  E8               inx
0073D2r 2  E8               inx
0073D3r 2  A9 19            lda #25
0073D5r 2  95 00            sta $00,x
0073D7r 2  A9 00            lda #0
0073D9r 2  95 01            sta $01,x
0073DBr 2               
0073DBr 2               ; snake.fth:174:10 in `random-y-position`
0073DBr 2               @OPCODE_3817:   ; [c64_ir] PushLiteral(4)
0073DBr 2  E8               inx
0073DCr 2  E8               inx
0073DDr 2  A9 04            lda #4
0073DFr 2  95 00            sta $00,x
0073E1r 2  A9 00            lda #0
0073E3r 2  95 01            sta $01,x
0073E5r 2               
0073E5r 2               ; <inline>:0:0 in `main`
0073E5r 2               @OPCODE_3818:   ; [c64_ir] PushLiteral(7777)
0073E5r 2  E8               inx
0073E6r 2  E8               inx
0073E7r 2  A9 61            lda #97
0073E9r 2  95 00            sta $00,x
0073EBr 2  A9 1E            lda #30
0073EDr 2  95 01            sta $01,x
0073EFr 2               
0073EFr 2               ; <inline>:0:0 in `main`
0073EFr 2               @OPCODE_3819:   ; [c64_ir] AltPush
0073EFr 2  CA               dex
0073F0r 2  CA               dex
0073F1r 2  B5 03            lda $03,x
0073F3r 2  48               pha
0073F4r 2  B5 02            lda $02,x
0073F6r 2  48               pha
0073F7r 2               
0073F7r 2               ; <inline>:0:0 in `main`
0073F7r 2               @OPCODE_3820:   ; [c64_ir] PushLiteral(7777)
0073F7r 2  E8               inx
0073F8r 2  E8               inx
0073F9r 2  A9 61            lda #97
0073FBr 2  95 00            sta $00,x
0073FDr 2  A9 1E            lda #30
0073FFr 2  95 01            sta $01,x
007401r 2               
007401r 2               ; <inline>:0:0 in `main`
007401r 2               @OPCODE_3821:   ; [c64_ir] AltPush
007401r 2  CA               dex
007402r 2  CA               dex
007403r 2  B5 03            lda $03,x
007405r 2  48               pha
007406r 2  B5 02            lda $02,x
007408r 2  48               pha
007409r 2               
007409r 2               ; <inline>:0:0 in `main`
007409r 2               @OPCODE_3822:   ; [c64_ir] PushLiteral(7777)
007409r 2  E8               inx
00740Ar 2  E8               inx
00740Br 2  A9 61            lda #97
00740Dr 2  95 00            sta $00,x
00740Fr 2  A9 1E            lda #30
007411r 2  95 01            sta $01,x
007413r 2               
007413r 2               ; <inline>:0:0 in `main`
007413r 2               @OPCODE_3823:   ; [c64_ir] AltPush
007413r 2  CA               dex
007414r 2  CA               dex
007415r 2  B5 03            lda $03,x
007417r 2  48               pha
007418r 2  B5 02            lda $02,x
00741Ar 2  48               pha
00741Br 2               
00741Br 2               ; src/prelude.fth:14:12 in `invert`
00741Br 2               @OPCODE_3824:   ; [c64_ir] PushLiteral(-1)
00741Br 2  E8               inx
00741Cr 2  E8               inx
00741Dr 2  A9 FF            lda #255
00741Fr 2  95 00            sta $00,x
007421r 2  A9 FF            lda #255
007423r 2  95 01            sta $01,x
007425r 2               
007425r 2               ; src/prelude.fth:14:15 in `invert`
007425r 2               @OPCODE_3825:   ; [c64_ir] Nand
007425r 2                   ; 26
007425r 2  CA               dex
007426r 2  CA               dex
007427r 2  B5 00            lda $00,x
007429r 2  35 02            and $02,x
00742Br 2  49 FF            eor #$ff
00742Dr 2  95 00            sta $00,x
00742Fr 2  B5 01            lda $01,x
007431r 2  35 03            and $03,x
007433r 2  49 FF            eor #$ff
007435r 2  95 01            sta $01,x
007437r 2               
007437r 2               ; <inline>:0:0 in `main`
007437r 2               @OPCODE_3826:   ; [c64_ir] AltPop
007437r 2  E8               inx
007438r 2  E8               inx
007439r 2  68               pla
00743Ar 2  95 00            sta $00,x
00743Cr 2  68               pla
00743Dr 2  95 01            sta $01,x
00743Fr 2               
00743Fr 2               ; <inline>:0:0 in `main`
00743Fr 2               @OPCODE_3827:   ; [c64_ir] Drop
00743Fr 2  CA               dex
007440r 2  CA               dex
007441r 2               
007441r 2               ; src/prelude.fth:15:19 in `negate`
007441r 2               @OPCODE_3828:   ; [c64_ir] PushLiteral(1)
007441r 2  E8               inx
007442r 2  E8               inx
007443r 2  A9 01            lda #1
007445r 2  95 00            sta $00,x
007447r 2  A9 00            lda #0
007449r 2  95 01            sta $01,x
00744Br 2               
00744Br 2               ; src/prelude.fth:15:21 in `negate`
00744Br 2               @OPCODE_3829:   ; [c64_ir] Add
00744Br 2                   ; 21
00744Br 2  CA               dex
00744Cr 2  CA               dex
00744Dr 2  18               clc
00744Er 2  B5 00            lda $00,x
007450r 2  75 02            adc $02,x
007452r 2  95 00            sta $00,x
007454r 2  B5 01            lda $01,x
007456r 2  75 03            adc $03,x
007458r 2  95 01            sta $01,x
00745Ar 2               
00745Ar 2               ; <inline>:0:0 in `main`
00745Ar 2               @OPCODE_3830:   ; [c64_ir] AltPop
00745Ar 2  E8               inx
00745Br 2  E8               inx
00745Cr 2  68               pla
00745Dr 2  95 00            sta $00,x
00745Fr 2  68               pla
007460r 2  95 01            sta $01,x
007462r 2               
007462r 2               ; <inline>:0:0 in `main`
007462r 2               @OPCODE_3831:   ; [c64_ir] Drop
007462r 2  CA               dex
007463r 2  CA               dex
007464r 2               
007464r 2               ; src/prelude.fth:16:19 in `-`
007464r 2               @OPCODE_3832:   ; [c64_ir] Add
007464r 2                   ; 21
007464r 2  CA               dex
007465r 2  CA               dex
007466r 2  18               clc
007467r 2  B5 00            lda $00,x
007469r 2  75 02            adc $02,x
00746Br 2  95 00            sta $00,x
00746Dr 2  B5 01            lda $01,x
00746Fr 2  75 03            adc $03,x
007471r 2  95 01            sta $01,x
007473r 2               
007473r 2               ; <inline>:0:0 in `main`
007473r 2               @OPCODE_3833:   ; [c64_ir] AltPop
007473r 2  E8               inx
007474r 2  E8               inx
007475r 2  68               pla
007476r 2  95 00            sta $00,x
007478r 2  68               pla
007479r 2  95 01            sta $01,x
00747Br 2               
00747Br 2               ; <inline>:0:0 in `main`
00747Br 2               @OPCODE_3834:   ; [c64_ir] Drop
00747Br 2  CA               dex
00747Cr 2  CA               dex
00747Dr 2               
00747Dr 2               ; <inline>:0:0 in `main`
00747Dr 2               @OPCODE_3835:   ; [c64_ir] PushLiteral(7777)
00747Dr 2  E8               inx
00747Er 2  E8               inx
00747Fr 2  A9 61            lda #97
007481r 2  95 00            sta $00,x
007483r 2  A9 1E            lda #30
007485r 2  95 01            sta $01,x
007487r 2               
007487r 2               ; <inline>:0:0 in `main`
007487r 2               @OPCODE_3836:   ; [c64_ir] AltPush
007487r 2  CA               dex
007488r 2  CA               dex
007489r 2  B5 03            lda $03,x
00748Br 2  48               pha
00748Cr 2  B5 02            lda $02,x
00748Er 2  48               pha
00748Fr 2               
00748Fr 2               ; snake.fth:8:10 in `random`
00748Fr 2               @OPCODE_3837:   ; [c64_ir] PushLiteral(127)
00748Fr 2  E8               inx
007490r 2  E8               inx
007491r 2  A9 7F            lda #127
007493r 2  95 00            sta $00,x
007495r 2  A9 00            lda #0
007497r 2  95 01            sta $01,x
007499r 2               
007499r 2               ; snake.fth:8:26 in `random`
007499r 2               @OPCODE_3838:   ; [c64_ir] Load
007499r 2  A1 00            lda ($00,x)
00749Br 2  95 00            sta $00,x
00749Dr 2  A9 00            lda #0
00749Fr 2  95 01            sta $01,x
0074A1r 2               
0074A1r 2               ; snake.fth:8:28 in `random`
0074A1r 2               @OPCODE_3839:   ; [c64_ir] PushLiteral(255)
0074A1r 2  E8               inx
0074A2r 2  E8               inx
0074A3r 2  A9 FF            lda #255
0074A5r 2  95 00            sta $00,x
0074A7r 2  A9 00            lda #0
0074A9r 2  95 01            sta $01,x
0074ABr 2               
0074ABr 2               ; <inline>:0:0 in `main`
0074ABr 2               @OPCODE_3840:   ; [c64_ir] PushLiteral(7777)
0074ABr 2  E8               inx
0074ACr 2  E8               inx
0074ADr 2  A9 61            lda #97
0074AFr 2  95 00            sta $00,x
0074B1r 2  A9 1E            lda #30
0074B3r 2  95 01            sta $01,x
0074B5r 2               
0074B5r 2               ; <inline>:0:0 in `main`
0074B5r 2               @OPCODE_3841:   ; [c64_ir] AltPush
0074B5r 2  CA               dex
0074B6r 2  CA               dex
0074B7r 2  B5 03            lda $03,x
0074B9r 2  48               pha
0074BAr 2  B5 02            lda $02,x
0074BCr 2  48               pha
0074BDr 2               
0074BDr 2               ; src/prelude.fth:28:9 in `and`
0074BDr 2               @OPCODE_3842:   ; [c64_ir] Nand
0074BDr 2                   ; 26
0074BDr 2  CA               dex
0074BEr 2  CA               dex
0074BFr 2  B5 00            lda $00,x
0074C1r 2  35 02            and $02,x
0074C3r 2  49 FF            eor #$ff
0074C5r 2  95 00            sta $00,x
0074C7r 2  B5 01            lda $01,x
0074C9r 2  35 03            and $03,x
0074CBr 2  49 FF            eor #$ff
0074CDr 2  95 01            sta $01,x
0074CFr 2               
0074CFr 2               ; <inline>:0:0 in `main`
0074CFr 2               @OPCODE_3843:   ; [c64_ir] PushLiteral(7777)
0074CFr 2  E8               inx
0074D0r 2  E8               inx
0074D1r 2  A9 61            lda #97
0074D3r 2  95 00            sta $00,x
0074D5r 2  A9 1E            lda #30
0074D7r 2  95 01            sta $01,x
0074D9r 2               
0074D9r 2               ; <inline>:0:0 in `main`
0074D9r 2               @OPCODE_3844:   ; [c64_ir] AltPush
0074D9r 2  CA               dex
0074DAr 2  CA               dex
0074DBr 2  B5 03            lda $03,x
0074DDr 2  48               pha
0074DEr 2  B5 02            lda $02,x
0074E0r 2  48               pha
0074E1r 2               
0074E1r 2               ; src/prelude.fth:14:12 in `invert`
0074E1r 2               @OPCODE_3845:   ; [c64_ir] PushLiteral(-1)
0074E1r 2  E8               inx
0074E2r 2  E8               inx
0074E3r 2  A9 FF            lda #255
0074E5r 2  95 00            sta $00,x
0074E7r 2  A9 FF            lda #255
0074E9r 2  95 01            sta $01,x
0074EBr 2               
0074EBr 2               ; src/prelude.fth:14:15 in `invert`
0074EBr 2               @OPCODE_3846:   ; [c64_ir] Nand
0074EBr 2                   ; 26
0074EBr 2  CA               dex
0074ECr 2  CA               dex
0074EDr 2  B5 00            lda $00,x
0074EFr 2  35 02            and $02,x
0074F1r 2  49 FF            eor #$ff
0074F3r 2  95 00            sta $00,x
0074F5r 2  B5 01            lda $01,x
0074F7r 2  35 03            and $03,x
0074F9r 2  49 FF            eor #$ff
0074FBr 2  95 01            sta $01,x
0074FDr 2               
0074FDr 2               ; <inline>:0:0 in `main`
0074FDr 2               @OPCODE_3847:   ; [c64_ir] AltPop
0074FDr 2  E8               inx
0074FEr 2  E8               inx
0074FFr 2  68               pla
007500r 2  95 00            sta $00,x
007502r 2  68               pla
007503r 2  95 01            sta $01,x
007505r 2               
007505r 2               ; <inline>:0:0 in `main`
007505r 2               @OPCODE_3848:   ; [c64_ir] Drop
007505r 2  CA               dex
007506r 2  CA               dex
007507r 2               
007507r 2               ; <inline>:0:0 in `main`
007507r 2               @OPCODE_3849:   ; [c64_ir] AltPop
007507r 2  E8               inx
007508r 2  E8               inx
007509r 2  68               pla
00750Ar 2  95 00            sta $00,x
00750Cr 2  68               pla
00750Dr 2  95 01            sta $01,x
00750Fr 2               
00750Fr 2               ; <inline>:0:0 in `main`
00750Fr 2               @OPCODE_3850:   ; [c64_ir] Drop
00750Fr 2  CA               dex
007510r 2  CA               dex
007511r 2               
007511r 2               ; <inline>:0:0 in `main`
007511r 2               @OPCODE_3851:   ; [c64_ir] PushLiteral(7777)
007511r 2  E8               inx
007512r 2  E8               inx
007513r 2  A9 61            lda #97
007515r 2  95 00            sta $00,x
007517r 2  A9 1E            lda #30
007519r 2  95 01            sta $01,x
00751Br 2               
00751Br 2               ; <inline>:0:0 in `main`
00751Br 2               @OPCODE_3852:   ; [c64_ir] AltPush
00751Br 2  CA               dex
00751Cr 2  CA               dex
00751Dr 2  B5 03            lda $03,x
00751Fr 2  48               pha
007520r 2  B5 02            lda $02,x
007522r 2  48               pha
007523r 2               
007523r 2               ; src/prelude.fth:3:10 in `swap`
007523r 2               @OPCODE_3853:   ; [c64_ir] AltPush
007523r 2  CA               dex
007524r 2  CA               dex
007525r 2  B5 03            lda $03,x
007527r 2  48               pha
007528r 2  B5 02            lda $02,x
00752Ar 2  48               pha
00752Br 2               
00752Br 2               ; src/prelude.fth:3:13 in `swap`
00752Br 2               @OPCODE_3854:   ; [c64_ir] TempStore
00752Br 2  CA               dex
00752Cr 2  CA               dex
00752Dr 2  B5 03            lda $03,x
00752Fr 2  85 96            sta TEMP_PAX2
007531r 2  B5 02            lda $02,x
007533r 2  85 95            sta TEMP_PAX1
007535r 2               
007535r 2               ; src/prelude.fth:3:19 in `swap`
007535r 2               @OPCODE_3855:   ; [c64_ir] AltPop
007535r 2  E8               inx
007536r 2  E8               inx
007537r 2  68               pla
007538r 2  95 00            sta $00,x
00753Ar 2  68               pla
00753Br 2  95 01            sta $01,x
00753Dr 2               
00753Dr 2               ; src/prelude.fth:3:22 in `swap`
00753Dr 2               @OPCODE_3856:   ; [c64_ir] TempLoad
00753Dr 2  E8               inx
00753Er 2  E8               inx
00753Fr 2  A5 95            lda TEMP_PAX1
007541r 2  95 00            sta $00,x
007543r 2  A5 96            lda TEMP_PAX2
007545r 2  95 01            sta $01,x
007547r 2               
007547r 2               ; <inline>:0:0 in `main`
007547r 2               @OPCODE_3857:   ; [c64_ir] AltPop
007547r 2  E8               inx
007548r 2  E8               inx
007549r 2  68               pla
00754Ar 2  95 00            sta $00,x
00754Cr 2  68               pla
00754Dr 2  95 01            sta $01,x
00754Fr 2               
00754Fr 2               ; <inline>:0:0 in `main`
00754Fr 2               @OPCODE_3858:   ; [c64_ir] Drop
00754Fr 2  CA               dex
007550r 2  CA               dex
007551r 2               
007551r 2               ; <inline>:0:0 in `main`
007551r 2               @OPCODE_3859:   ; [c64_ir] PushLiteral(7777)
007551r 2  E8               inx
007552r 2  E8               inx
007553r 2  A9 61            lda #97
007555r 2  95 00            sta $00,x
007557r 2  A9 1E            lda #30
007559r 2  95 01            sta $01,x
00755Br 2               
00755Br 2               ; <inline>:0:0 in `main`
00755Br 2               @OPCODE_3860:   ; [c64_ir] AltPush
00755Br 2  CA               dex
00755Cr 2  CA               dex
00755Dr 2  B5 03            lda $03,x
00755Fr 2  48               pha
007560r 2  B5 02            lda $02,x
007562r 2  48               pha
007563r 2               
007563r 2               ; src/prelude.fth:48:34 in `%`
007563r 2               @OPCODE_3861:   ; [c64_ir] LoopTarget(173)
007563r 2               
007563r 2               @target_174:
007563r 2               
007563r 2               ; <inline>:0:0 in `main`
007563r 2               @OPCODE_3863:   ; [c64_ir] PushLiteral(7777)
007563r 2  E8               inx
007564r 2  E8               inx
007565r 2  A9 61            lda #97
007567r 2  95 00            sta $00,x
007569r 2  A9 1E            lda #30
00756Br 2  95 01            sta $01,x
00756Dr 2               
00756Dr 2               ; <inline>:0:0 in `main`
00756Dr 2               @OPCODE_3864:   ; [c64_ir] AltPush
00756Dr 2  CA               dex
00756Er 2  CA               dex
00756Fr 2  B5 03            lda $03,x
007571r 2  48               pha
007572r 2  B5 02            lda $02,x
007574r 2  48               pha
007575r 2               
007575r 2               ; <inline>:0:0 in `main`
007575r 2               @OPCODE_3865:   ; [c64_ir] PushLiteral(7777)
007575r 2  E8               inx
007576r 2  E8               inx
007577r 2  A9 61            lda #97
007579r 2  95 00            sta $00,x
00757Br 2  A9 1E            lda #30
00757Dr 2  95 01            sta $01,x
00757Fr 2               
00757Fr 2               ; <inline>:0:0 in `main`
00757Fr 2               @OPCODE_3866:   ; [c64_ir] AltPush
00757Fr 2  CA               dex
007580r 2  CA               dex
007581r 2  B5 03            lda $03,x
007583r 2  48               pha
007584r 2  B5 02            lda $02,x
007586r 2  48               pha
007587r 2               
007587r 2               ; src/prelude.fth:4:10 in `over`
007587r 2               @OPCODE_3867:   ; [c64_ir] AltPush
007587r 2  CA               dex
007588r 2  CA               dex
007589r 2  B5 03            lda $03,x
00758Br 2  48               pha
00758Cr 2  B5 02            lda $02,x
00758Er 2  48               pha
00758Fr 2               
00758Fr 2               ; src/prelude.fth:4:13 in `over`
00758Fr 2               @OPCODE_3868:   ; [c64_ir] TempStore
00758Fr 2  CA               dex
007590r 2  CA               dex
007591r 2  B5 03            lda $03,x
007593r 2  85 96            sta TEMP_PAX2
007595r 2  B5 02            lda $02,x
007597r 2  85 95            sta TEMP_PAX1
007599r 2               
007599r 2               ; src/prelude.fth:4:19 in `over`
007599r 2               @OPCODE_3869:   ; [c64_ir] TempLoad
007599r 2  E8               inx
00759Ar 2  E8               inx
00759Br 2  A5 95            lda TEMP_PAX1
00759Dr 2  95 00            sta $00,x
00759Fr 2  A5 96            lda TEMP_PAX2
0075A1r 2  95 01            sta $01,x
0075A3r 2               
0075A3r 2               ; src/prelude.fth:4:25 in `over`
0075A3r 2               @OPCODE_3870:   ; [c64_ir] AltPop
0075A3r 2  E8               inx
0075A4r 2  E8               inx
0075A5r 2  68               pla
0075A6r 2  95 00            sta $00,x
0075A8r 2  68               pla
0075A9r 2  95 01            sta $01,x
0075ABr 2               
0075ABr 2               ; src/prelude.fth:4:28 in `over`
0075ABr 2               @OPCODE_3871:   ; [c64_ir] TempLoad
0075ABr 2  E8               inx
0075ACr 2  E8               inx
0075ADr 2  A5 95            lda TEMP_PAX1
0075AFr 2  95 00            sta $00,x
0075B1r 2  A5 96            lda TEMP_PAX2
0075B3r 2  95 01            sta $01,x
0075B5r 2               
0075B5r 2               ; <inline>:0:0 in `main`
0075B5r 2               @OPCODE_3872:   ; [c64_ir] AltPop
0075B5r 2  E8               inx
0075B6r 2  E8               inx
0075B7r 2  68               pla
0075B8r 2  95 00            sta $00,x
0075BAr 2  68               pla
0075BBr 2  95 01            sta $01,x
0075BDr 2               
0075BDr 2               ; <inline>:0:0 in `main`
0075BDr 2               @OPCODE_3873:   ; [c64_ir] Drop
0075BDr 2  CA               dex
0075BEr 2  CA               dex
0075BFr 2               
0075BFr 2               ; <inline>:0:0 in `main`
0075BFr 2               @OPCODE_3874:   ; [c64_ir] PushLiteral(7777)
0075BFr 2  E8               inx
0075C0r 2  E8               inx
0075C1r 2  A9 61            lda #97
0075C3r 2  95 00            sta $00,x
0075C5r 2  A9 1E            lda #30
0075C7r 2  95 01            sta $01,x
0075C9r 2               
0075C9r 2               ; <inline>:0:0 in `main`
0075C9r 2               @OPCODE_3875:   ; [c64_ir] AltPush
0075C9r 2  CA               dex
0075CAr 2  CA               dex
0075CBr 2  B5 03            lda $03,x
0075CDr 2  48               pha
0075CEr 2  B5 02            lda $02,x
0075D0r 2  48               pha
0075D1r 2               
0075D1r 2               ; src/prelude.fth:4:10 in `over`
0075D1r 2               @OPCODE_3876:   ; [c64_ir] AltPush
0075D1r 2  CA               dex
0075D2r 2  CA               dex
0075D3r 2  B5 03            lda $03,x
0075D5r 2  48               pha
0075D6r 2  B5 02            lda $02,x
0075D8r 2  48               pha
0075D9r 2               
0075D9r 2               ; src/prelude.fth:4:13 in `over`
0075D9r 2               @OPCODE_3877:   ; [c64_ir] TempStore
0075D9r 2  CA               dex
0075DAr 2  CA               dex
0075DBr 2  B5 03            lda $03,x
0075DDr 2  85 96            sta TEMP_PAX2
0075DFr 2  B5 02            lda $02,x
0075E1r 2  85 95            sta TEMP_PAX1
0075E3r 2               
0075E3r 2               ; src/prelude.fth:4:19 in `over`
0075E3r 2               @OPCODE_3878:   ; [c64_ir] TempLoad
0075E3r 2  E8               inx
0075E4r 2  E8               inx
0075E5r 2  A5 95            lda TEMP_PAX1
0075E7r 2  95 00            sta $00,x
0075E9r 2  A5 96            lda TEMP_PAX2
0075EBr 2  95 01            sta $01,x
0075EDr 2               
0075EDr 2               ; src/prelude.fth:4:25 in `over`
0075EDr 2               @OPCODE_3879:   ; [c64_ir] AltPop
0075EDr 2  E8               inx
0075EEr 2  E8               inx
0075EFr 2  68               pla
0075F0r 2  95 00            sta $00,x
0075F2r 2  68               pla
0075F3r 2  95 01            sta $01,x
0075F5r 2               
0075F5r 2               ; src/prelude.fth:4:28 in `over`
0075F5r 2               @OPCODE_3880:   ; [c64_ir] TempLoad
0075F5r 2  E8               inx
0075F6r 2  E8               inx
0075F7r 2  A5 95            lda TEMP_PAX1
0075F9r 2  95 00            sta $00,x
0075FBr 2  A5 96            lda TEMP_PAX2
0075FDr 2  95 01            sta $01,x
0075FFr 2               
0075FFr 2               ; <inline>:0:0 in `main`
0075FFr 2               @OPCODE_3881:   ; [c64_ir] AltPop
0075FFr 2  E8               inx
007600r 2  E8               inx
007601r 2  68               pla
007602r 2  95 00            sta $00,x
007604r 2  68               pla
007605r 2  95 01            sta $01,x
007607r 2               
007607r 2               ; <inline>:0:0 in `main`
007607r 2               @OPCODE_3882:   ; [c64_ir] Drop
007607r 2  CA               dex
007608r 2  CA               dex
007609r 2               
007609r 2               ; <inline>:0:0 in `main`
007609r 2               @OPCODE_3883:   ; [c64_ir] AltPop
007609r 2  E8               inx
00760Ar 2  E8               inx
00760Br 2  68               pla
00760Cr 2  95 00            sta $00,x
00760Er 2  68               pla
00760Fr 2  95 01            sta $01,x
007611r 2               
007611r 2               ; <inline>:0:0 in `main`
007611r 2               @OPCODE_3884:   ; [c64_ir] Drop
007611r 2  CA               dex
007612r 2  CA               dex
007613r 2               
007613r 2               ; <inline>:0:0 in `main`
007613r 2               @OPCODE_3885:   ; [c64_ir] PushLiteral(7777)
007613r 2  E8               inx
007614r 2  E8               inx
007615r 2  A9 61            lda #97
007617r 2  95 00            sta $00,x
007619r 2  A9 1E            lda #30
00761Br 2  95 01            sta $01,x
00761Dr 2               
00761Dr 2               ; <inline>:0:0 in `main`
00761Dr 2               @OPCODE_3886:   ; [c64_ir] AltPush
00761Dr 2  CA               dex
00761Er 2  CA               dex
00761Fr 2  B5 03            lda $03,x
007621r 2  48               pha
007622r 2  B5 02            lda $02,x
007624r 2  48               pha
007625r 2               
007625r 2               ; <inline>:0:0 in `main`
007625r 2               @OPCODE_3887:   ; [c64_ir] PushLiteral(7777)
007625r 2  E8               inx
007626r 2  E8               inx
007627r 2  A9 61            lda #97
007629r 2  95 00            sta $00,x
00762Br 2  A9 1E            lda #30
00762Dr 2  95 01            sta $01,x
00762Fr 2               
00762Fr 2               ; <inline>:0:0 in `main`
00762Fr 2               @OPCODE_3888:   ; [c64_ir] AltPush
00762Fr 2  CA               dex
007630r 2  CA               dex
007631r 2  B5 03            lda $03,x
007633r 2  48               pha
007634r 2  B5 02            lda $02,x
007636r 2  48               pha
007637r 2               
007637r 2               ; <inline>:0:0 in `main`
007637r 2               @OPCODE_3889:   ; [c64_ir] PushLiteral(7777)
007637r 2  E8               inx
007638r 2  E8               inx
007639r 2  A9 61            lda #97
00763Br 2  95 00            sta $00,x
00763Dr 2  A9 1E            lda #30
00763Fr 2  95 01            sta $01,x
007641r 2               
007641r 2               ; <inline>:0:0 in `main`
007641r 2               @OPCODE_3890:   ; [c64_ir] AltPush
007641r 2  CA               dex
007642r 2  CA               dex
007643r 2  B5 03            lda $03,x
007645r 2  48               pha
007646r 2  B5 02            lda $02,x
007648r 2  48               pha
007649r 2               
007649r 2               ; src/prelude.fth:14:12 in `invert`
007649r 2               @OPCODE_3891:   ; [c64_ir] PushLiteral(-1)
007649r 2  E8               inx
00764Ar 2  E8               inx
00764Br 2  A9 FF            lda #255
00764Dr 2  95 00            sta $00,x
00764Fr 2  A9 FF            lda #255
007651r 2  95 01            sta $01,x
007653r 2               
007653r 2               ; src/prelude.fth:14:15 in `invert`
007653r 2               @OPCODE_3892:   ; [c64_ir] Nand
007653r 2                   ; 26
007653r 2  CA               dex
007654r 2  CA               dex
007655r 2  B5 00            lda $00,x
007657r 2  35 02            and $02,x
007659r 2  49 FF            eor #$ff
00765Br 2  95 00            sta $00,x
00765Dr 2  B5 01            lda $01,x
00765Fr 2  35 03            and $03,x
007661r 2  49 FF            eor #$ff
007663r 2  95 01            sta $01,x
007665r 2               
007665r 2               ; <inline>:0:0 in `main`
007665r 2               @OPCODE_3893:   ; [c64_ir] AltPop
007665r 2  E8               inx
007666r 2  E8               inx
007667r 2  68               pla
007668r 2  95 00            sta $00,x
00766Ar 2  68               pla
00766Br 2  95 01            sta $01,x
00766Dr 2               
00766Dr 2               ; <inline>:0:0 in `main`
00766Dr 2               @OPCODE_3894:   ; [c64_ir] Drop
00766Dr 2  CA               dex
00766Er 2  CA               dex
00766Fr 2               
00766Fr 2               ; src/prelude.fth:15:19 in `negate`
00766Fr 2               @OPCODE_3895:   ; [c64_ir] PushLiteral(1)
00766Fr 2  E8               inx
007670r 2  E8               inx
007671r 2  A9 01            lda #1
007673r 2  95 00            sta $00,x
007675r 2  A9 00            lda #0
007677r 2  95 01            sta $01,x
007679r 2               
007679r 2               ; src/prelude.fth:15:21 in `negate`
007679r 2               @OPCODE_3896:   ; [c64_ir] Add
007679r 2                   ; 21
007679r 2  CA               dex
00767Ar 2  CA               dex
00767Br 2  18               clc
00767Cr 2  B5 00            lda $00,x
00767Er 2  75 02            adc $02,x
007680r 2  95 00            sta $00,x
007682r 2  B5 01            lda $01,x
007684r 2  75 03            adc $03,x
007686r 2  95 01            sta $01,x
007688r 2               
007688r 2               ; <inline>:0:0 in `main`
007688r 2               @OPCODE_3897:   ; [c64_ir] AltPop
007688r 2  E8               inx
007689r 2  E8               inx
00768Ar 2  68               pla
00768Br 2  95 00            sta $00,x
00768Dr 2  68               pla
00768Er 2  95 01            sta $01,x
007690r 2               
007690r 2               ; <inline>:0:0 in `main`
007690r 2               @OPCODE_3898:   ; [c64_ir] Drop
007690r 2  CA               dex
007691r 2  CA               dex
007692r 2               
007692r 2               ; src/prelude.fth:16:19 in `-`
007692r 2               @OPCODE_3899:   ; [c64_ir] Add
007692r 2                   ; 21
007692r 2  CA               dex
007693r 2  CA               dex
007694r 2  18               clc
007695r 2  B5 00            lda $00,x
007697r 2  75 02            adc $02,x
007699r 2  95 00            sta $00,x
00769Br 2  B5 01            lda $01,x
00769Dr 2  75 03            adc $03,x
00769Fr 2  95 01            sta $01,x
0076A1r 2               
0076A1r 2               ; <inline>:0:0 in `main`
0076A1r 2               @OPCODE_3900:   ; [c64_ir] AltPop
0076A1r 2  E8               inx
0076A2r 2  E8               inx
0076A3r 2  68               pla
0076A4r 2  95 00            sta $00,x
0076A6r 2  68               pla
0076A7r 2  95 01            sta $01,x
0076A9r 2               
0076A9r 2               ; <inline>:0:0 in `main`
0076A9r 2               @OPCODE_3901:   ; [c64_ir] Drop
0076A9r 2  CA               dex
0076AAr 2  CA               dex
0076ABr 2               
0076ABr 2               ; <inline>:0:0 in `main`
0076ABr 2               @OPCODE_3902:   ; [c64_ir] PushLiteral(7777)
0076ABr 2  E8               inx
0076ACr 2  E8               inx
0076ADr 2  A9 61            lda #97
0076AFr 2  95 00            sta $00,x
0076B1r 2  A9 1E            lda #30
0076B3r 2  95 01            sta $01,x
0076B5r 2               
0076B5r 2               ; <inline>:0:0 in `main`
0076B5r 2               @OPCODE_3903:   ; [c64_ir] AltPush
0076B5r 2  CA               dex
0076B6r 2  CA               dex
0076B7r 2  B5 03            lda $03,x
0076B9r 2  48               pha
0076BAr 2  B5 02            lda $02,x
0076BCr 2  48               pha
0076BDr 2               
0076BDr 2               ; src/prelude.fth:6:10 in `dup`
0076BDr 2               @OPCODE_3904:   ; [c64_ir] TempStore
0076BDr 2  CA               dex
0076BEr 2  CA               dex
0076BFr 2  B5 03            lda $03,x
0076C1r 2  85 96            sta TEMP_PAX2
0076C3r 2  B5 02            lda $02,x
0076C5r 2  85 95            sta TEMP_PAX1
0076C7r 2               
0076C7r 2               ; src/prelude.fth:6:16 in `dup`
0076C7r 2               @OPCODE_3905:   ; [c64_ir] TempLoad
0076C7r 2  E8               inx
0076C8r 2  E8               inx
0076C9r 2  A5 95            lda TEMP_PAX1
0076CBr 2  95 00            sta $00,x
0076CDr 2  A5 96            lda TEMP_PAX2
0076CFr 2  95 01            sta $01,x
0076D1r 2               
0076D1r 2               ; src/prelude.fth:6:22 in `dup`
0076D1r 2               @OPCODE_3906:   ; [c64_ir] TempLoad
0076D1r 2  E8               inx
0076D2r 2  E8               inx
0076D3r 2  A5 95            lda TEMP_PAX1
0076D5r 2  95 00            sta $00,x
0076D7r 2  A5 96            lda TEMP_PAX2
0076D9r 2  95 01            sta $01,x
0076DBr 2               
0076DBr 2               ; <inline>:0:0 in `main`
0076DBr 2               @OPCODE_3907:   ; [c64_ir] AltPop
0076DBr 2  E8               inx
0076DCr 2  E8               inx
0076DDr 2  68               pla
0076DEr 2  95 00            sta $00,x
0076E0r 2  68               pla
0076E1r 2  95 01            sta $01,x
0076E3r 2               
0076E3r 2               ; <inline>:0:0 in `main`
0076E3r 2               @OPCODE_3908:   ; [c64_ir] Drop
0076E3r 2  CA               dex
0076E4r 2  CA               dex
0076E5r 2               
0076E5r 2               ; <inline>:0:0 in `main`
0076E5r 2               @OPCODE_3909:   ; [c64_ir] PushLiteral(7777)
0076E5r 2  E8               inx
0076E6r 2  E8               inx
0076E7r 2  A9 61            lda #97
0076E9r 2  95 00            sta $00,x
0076EBr 2  A9 1E            lda #30
0076EDr 2  95 01            sta $01,x
0076EFr 2               
0076EFr 2               ; <inline>:0:0 in `main`
0076EFr 2               @OPCODE_3910:   ; [c64_ir] AltPush
0076EFr 2  CA               dex
0076F0r 2  CA               dex
0076F1r 2  B5 03            lda $03,x
0076F3r 2  48               pha
0076F4r 2  B5 02            lda $02,x
0076F6r 2  48               pha
0076F7r 2               
0076F7r 2               ; src/prelude.fth:47:8 in `0<`
0076F7r 2               @OPCODE_3911:   ; [c64_ir] PushLiteral(-32768)
0076F7r 2  E8               inx
0076F8r 2  E8               inx
0076F9r 2  A9 00            lda #0
0076FBr 2  95 00            sta $00,x
0076FDr 2  A9 80            lda #128
0076FFr 2  95 01            sta $01,x
007701r 2               
007701r 2               ; src/prelude.fth:47:14 in `0<`
007701r 2               @OPCODE_3912:   ; [c64_ir] Nand
007701r 2                   ; 26
007701r 2  CA               dex
007702r 2  CA               dex
007703r 2  B5 00            lda $00,x
007705r 2  35 02            and $02,x
007707r 2  49 FF            eor #$ff
007709r 2  95 00            sta $00,x
00770Br 2  B5 01            lda $01,x
00770Dr 2  35 03            and $03,x
00770Fr 2  49 FF            eor #$ff
007711r 2  95 01            sta $01,x
007713r 2               
007713r 2               ; <inline>:0:0 in `main`
007713r 2               @OPCODE_3913:   ; [c64_ir] PushLiteral(7777)
007713r 2  E8               inx
007714r 2  E8               inx
007715r 2  A9 61            lda #97
007717r 2  95 00            sta $00,x
007719r 2  A9 1E            lda #30
00771Br 2  95 01            sta $01,x
00771Dr 2               
00771Dr 2               ; <inline>:0:0 in `main`
00771Dr 2               @OPCODE_3914:   ; [c64_ir] AltPush
00771Dr 2  CA               dex
00771Er 2  CA               dex
00771Fr 2  B5 03            lda $03,x
007721r 2  48               pha
007722r 2  B5 02            lda $02,x
007724r 2  48               pha
007725r 2               
007725r 2               ; src/prelude.fth:14:12 in `invert`
007725r 2               @OPCODE_3915:   ; [c64_ir] PushLiteral(-1)
007725r 2  E8               inx
007726r 2  E8               inx
007727r 2  A9 FF            lda #255
007729r 2  95 00            sta $00,x
00772Br 2  A9 FF            lda #255
00772Dr 2  95 01            sta $01,x
00772Fr 2               
00772Fr 2               ; src/prelude.fth:14:15 in `invert`
00772Fr 2               @OPCODE_3916:   ; [c64_ir] Nand
00772Fr 2                   ; 26
00772Fr 2  CA               dex
007730r 2  CA               dex
007731r 2  B5 00            lda $00,x
007733r 2  35 02            and $02,x
007735r 2  49 FF            eor #$ff
007737r 2  95 00            sta $00,x
007739r 2  B5 01            lda $01,x
00773Br 2  35 03            and $03,x
00773Dr 2  49 FF            eor #$ff
00773Fr 2  95 01            sta $01,x
007741r 2               
007741r 2               ; <inline>:0:0 in `main`
007741r 2               @OPCODE_3917:   ; [c64_ir] AltPop
007741r 2  E8               inx
007742r 2  E8               inx
007743r 2  68               pla
007744r 2  95 00            sta $00,x
007746r 2  68               pla
007747r 2  95 01            sta $01,x
007749r 2               
007749r 2               ; <inline>:0:0 in `main`
007749r 2               @OPCODE_3918:   ; [c64_ir] Drop
007749r 2  CA               dex
00774Ar 2  CA               dex
00774Br 2               
00774Br 2               ; src/prelude.fth:47:26 in `0<`
00774Br 2               @OPCODE_3919:   ; [c64_ir] JumpIf0(176)
00774Br 2  CA               dex
00774Cr 2  CA               dex
00774Dr 2  B5 02            lda $02,x
00774Fr 2  15 03            ora $03,x
007751r 2  D0 03            bne *+5
007753r 2  4C rr rr         jmp @target_176
007756r 2               
007756r 2               @target_175:
007756r 2               
007756r 2               ; src/prelude.fth:47:29 in `0<`
007756r 2               @OPCODE_3921:   ; [c64_ir] PushLiteral(-1)
007756r 2  E8               inx
007757r 2  E8               inx
007758r 2  A9 FF            lda #255
00775Ar 2  95 00            sta $00,x
00775Cr 2  A9 FF            lda #255
00775Er 2  95 01            sta $01,x
007760r 2               
007760r 2               ; src/prelude.fth:47:32 in `0<`
007760r 2               @OPCODE_3922:   ; [c64_ir] JumpElse(177)
007760r 2  4C rr rr         jmp @target_177
007763r 2               
007763r 2               @target_176:
007763r 2               
007763r 2               ; src/prelude.fth:47:37 in `0<`
007763r 2               @OPCODE_3924:   ; [c64_ir] PushLiteral(0)
007763r 2  E8               inx
007764r 2  E8               inx
007765r 2  A9 00            lda #0
007767r 2  95 00            sta $00,x
007769r 2  A9 00            lda #0
00776Br 2  95 01            sta $01,x
00776Dr 2               
00776Dr 2               ; src/prelude.fth:47:39 in `0<`
00776Dr 2               @OPCODE_3925:   ; [c64_ir] JumpTarget(176)
00776Dr 2               
00776Dr 2               @target_177:
00776Dr 2               
00776Dr 2               ; <inline>:0:0 in `main`
00776Dr 2               @OPCODE_3927:   ; [c64_ir] AltPop
00776Dr 2  E8               inx
00776Er 2  E8               inx
00776Fr 2  68               pla
007770r 2  95 00            sta $00,x
007772r 2  68               pla
007773r 2  95 01            sta $01,x
007775r 2               
007775r 2               ; <inline>:0:0 in `main`
007775r 2               @OPCODE_3928:   ; [c64_ir] Drop
007775r 2  CA               dex
007776r 2  CA               dex
007777r 2               
007777r 2               ; src/prelude.fth:48:54 in `%`
007777r 2               @OPCODE_3929:   ; [c64_ir] JumpIf0(179)
007777r 2  CA               dex
007778r 2  CA               dex
007779r 2  B5 02            lda $02,x
00777Br 2  15 03            ora $03,x
00777Dr 2  D0 03            bne *+5
00777Fr 2  4C rr rr         jmp @target_179
007782r 2               
007782r 2               @target_178:
007782r 2               
007782r 2               ; src/prelude.fth:48:57 in `%`
007782r 2               @OPCODE_3931:   ; [c64_ir] Add
007782r 2                   ; 21
007782r 2  CA               dex
007783r 2  CA               dex
007784r 2  18               clc
007785r 2  B5 00            lda $00,x
007787r 2  75 02            adc $02,x
007789r 2  95 00            sta $00,x
00778Br 2  B5 01            lda $01,x
00778Dr 2  75 03            adc $03,x
00778Fr 2  95 01            sta $01,x
007791r 2               
007791r 2               ; src/prelude.fth:48:59 in `%`
007791r 2               @OPCODE_3932:   ; [c64_ir] PushLiteral(-1)
007791r 2  E8               inx
007792r 2  E8               inx
007793r 2  A9 FF            lda #255
007795r 2  95 00            sta $00,x
007797r 2  A9 FF            lda #255
007799r 2  95 01            sta $01,x
00779Br 2               
00779Br 2               ; src/prelude.fth:48:62 in `%`
00779Br 2               @OPCODE_3933:   ; [c64_ir] JumpElse(180)
00779Br 2  4C rr rr         jmp @target_180
00779Er 2               
00779Er 2               @target_179:
00779Er 2               
00779Er 2               ; <inline>:0:0 in `main`
00779Er 2               @OPCODE_3935:   ; [c64_ir] PushLiteral(7777)
00779Er 2  E8               inx
00779Fr 2  E8               inx
0077A0r 2  A9 61            lda #97
0077A2r 2  95 00            sta $00,x
0077A4r 2  A9 1E            lda #30
0077A6r 2  95 01            sta $01,x
0077A8r 2               
0077A8r 2               ; <inline>:0:0 in `main`
0077A8r 2               @OPCODE_3936:   ; [c64_ir] AltPush
0077A8r 2  CA               dex
0077A9r 2  CA               dex
0077AAr 2  B5 03            lda $03,x
0077ACr 2  48               pha
0077ADr 2  B5 02            lda $02,x
0077AFr 2  48               pha
0077B0r 2               
0077B0r 2               ; src/prelude.fth:5:10 in `rot`
0077B0r 2               @OPCODE_3937:   ; [c64_ir] AltPush
0077B0r 2  CA               dex
0077B1r 2  CA               dex
0077B2r 2  B5 03            lda $03,x
0077B4r 2  48               pha
0077B5r 2  B5 02            lda $02,x
0077B7r 2  48               pha
0077B8r 2               
0077B8r 2               ; <inline>:0:0 in `main`
0077B8r 2               @OPCODE_3938:   ; [c64_ir] PushLiteral(7777)
0077B8r 2  E8               inx
0077B9r 2  E8               inx
0077BAr 2  A9 61            lda #97
0077BCr 2  95 00            sta $00,x
0077BEr 2  A9 1E            lda #30
0077C0r 2  95 01            sta $01,x
0077C2r 2               
0077C2r 2               ; <inline>:0:0 in `main`
0077C2r 2               @OPCODE_3939:   ; [c64_ir] AltPush
0077C2r 2  CA               dex
0077C3r 2  CA               dex
0077C4r 2  B5 03            lda $03,x
0077C6r 2  48               pha
0077C7r 2  B5 02            lda $02,x
0077C9r 2  48               pha
0077CAr 2               
0077CAr 2               ; src/prelude.fth:3:10 in `swap`
0077CAr 2               @OPCODE_3940:   ; [c64_ir] AltPush
0077CAr 2  CA               dex
0077CBr 2  CA               dex
0077CCr 2  B5 03            lda $03,x
0077CEr 2  48               pha
0077CFr 2  B5 02            lda $02,x
0077D1r 2  48               pha
0077D2r 2               
0077D2r 2               ; src/prelude.fth:3:13 in `swap`
0077D2r 2               @OPCODE_3941:   ; [c64_ir] TempStore
0077D2r 2  CA               dex
0077D3r 2  CA               dex
0077D4r 2  B5 03            lda $03,x
0077D6r 2  85 96            sta TEMP_PAX2
0077D8r 2  B5 02            lda $02,x
0077DAr 2  85 95            sta TEMP_PAX1
0077DCr 2               
0077DCr 2               ; src/prelude.fth:3:19 in `swap`
0077DCr 2               @OPCODE_3942:   ; [c64_ir] AltPop
0077DCr 2  E8               inx
0077DDr 2  E8               inx
0077DEr 2  68               pla
0077DFr 2  95 00            sta $00,x
0077E1r 2  68               pla
0077E2r 2  95 01            sta $01,x
0077E4r 2               
0077E4r 2               ; src/prelude.fth:3:22 in `swap`
0077E4r 2               @OPCODE_3943:   ; [c64_ir] TempLoad
0077E4r 2  E8               inx
0077E5r 2  E8               inx
0077E6r 2  A5 95            lda TEMP_PAX1
0077E8r 2  95 00            sta $00,x
0077EAr 2  A5 96            lda TEMP_PAX2
0077ECr 2  95 01            sta $01,x
0077EEr 2               
0077EEr 2               ; <inline>:0:0 in `main`
0077EEr 2               @OPCODE_3944:   ; [c64_ir] AltPop
0077EEr 2  E8               inx
0077EFr 2  E8               inx
0077F0r 2  68               pla
0077F1r 2  95 00            sta $00,x
0077F3r 2  68               pla
0077F4r 2  95 01            sta $01,x
0077F6r 2               
0077F6r 2               ; <inline>:0:0 in `main`
0077F6r 2               @OPCODE_3945:   ; [c64_ir] Drop
0077F6r 2  CA               dex
0077F7r 2  CA               dex
0077F8r 2               
0077F8r 2               ; src/prelude.fth:5:18 in `rot`
0077F8r 2               @OPCODE_3946:   ; [c64_ir] AltPop
0077F8r 2  E8               inx
0077F9r 2  E8               inx
0077FAr 2  68               pla
0077FBr 2  95 00            sta $00,x
0077FDr 2  68               pla
0077FEr 2  95 01            sta $01,x
007800r 2               
007800r 2               ; <inline>:0:0 in `main`
007800r 2               @OPCODE_3947:   ; [c64_ir] PushLiteral(7777)
007800r 2  E8               inx
007801r 2  E8               inx
007802r 2  A9 61            lda #97
007804r 2  95 00            sta $00,x
007806r 2  A9 1E            lda #30
007808r 2  95 01            sta $01,x
00780Ar 2               
00780Ar 2               ; <inline>:0:0 in `main`
00780Ar 2               @OPCODE_3948:   ; [c64_ir] AltPush
00780Ar 2  CA               dex
00780Br 2  CA               dex
00780Cr 2  B5 03            lda $03,x
00780Er 2  48               pha
00780Fr 2  B5 02            lda $02,x
007811r 2  48               pha
007812r 2               
007812r 2               ; src/prelude.fth:3:10 in `swap`
007812r 2               @OPCODE_3949:   ; [c64_ir] AltPush
007812r 2  CA               dex
007813r 2  CA               dex
007814r 2  B5 03            lda $03,x
007816r 2  48               pha
007817r 2  B5 02            lda $02,x
007819r 2  48               pha
00781Ar 2               
00781Ar 2               ; src/prelude.fth:3:13 in `swap`
00781Ar 2               @OPCODE_3950:   ; [c64_ir] TempStore
00781Ar 2  CA               dex
00781Br 2  CA               dex
00781Cr 2  B5 03            lda $03,x
00781Er 2  85 96            sta TEMP_PAX2
007820r 2  B5 02            lda $02,x
007822r 2  85 95            sta TEMP_PAX1
007824r 2               
007824r 2               ; src/prelude.fth:3:19 in `swap`
007824r 2               @OPCODE_3951:   ; [c64_ir] AltPop
007824r 2  E8               inx
007825r 2  E8               inx
007826r 2  68               pla
007827r 2  95 00            sta $00,x
007829r 2  68               pla
00782Ar 2  95 01            sta $01,x
00782Cr 2               
00782Cr 2               ; src/prelude.fth:3:22 in `swap`
00782Cr 2               @OPCODE_3952:   ; [c64_ir] TempLoad
00782Cr 2  E8               inx
00782Dr 2  E8               inx
00782Er 2  A5 95            lda TEMP_PAX1
007830r 2  95 00            sta $00,x
007832r 2  A5 96            lda TEMP_PAX2
007834r 2  95 01            sta $01,x
007836r 2               
007836r 2               ; <inline>:0:0 in `main`
007836r 2               @OPCODE_3953:   ; [c64_ir] AltPop
007836r 2  E8               inx
007837r 2  E8               inx
007838r 2  68               pla
007839r 2  95 00            sta $00,x
00783Br 2  68               pla
00783Cr 2  95 01            sta $01,x
00783Er 2               
00783Er 2               ; <inline>:0:0 in `main`
00783Er 2               @OPCODE_3954:   ; [c64_ir] Drop
00783Er 2  CA               dex
00783Fr 2  CA               dex
007840r 2               
007840r 2               ; <inline>:0:0 in `main`
007840r 2               @OPCODE_3955:   ; [c64_ir] AltPop
007840r 2  E8               inx
007841r 2  E8               inx
007842r 2  68               pla
007843r 2  95 00            sta $00,x
007845r 2  68               pla
007846r 2  95 01            sta $01,x
007848r 2               
007848r 2               ; <inline>:0:0 in `main`
007848r 2               @OPCODE_3956:   ; [c64_ir] Drop
007848r 2  CA               dex
007849r 2  CA               dex
00784Ar 2               
00784Ar 2               ; src/prelude.fth:48:71 in `%`
00784Ar 2               @OPCODE_3957:   ; [c64_ir] Drop
00784Ar 2  CA               dex
00784Br 2  CA               dex
00784Cr 2               
00784Cr 2               ; <inline>:0:0 in `main`
00784Cr 2               @OPCODE_3958:   ; [c64_ir] PushLiteral(7777)
00784Cr 2  E8               inx
00784Dr 2  E8               inx
00784Er 2  A9 61            lda #97
007850r 2  95 00            sta $00,x
007852r 2  A9 1E            lda #30
007854r 2  95 01            sta $01,x
007856r 2               
007856r 2               ; <inline>:0:0 in `main`
007856r 2               @OPCODE_3959:   ; [c64_ir] AltPush
007856r 2  CA               dex
007857r 2  CA               dex
007858r 2  B5 03            lda $03,x
00785Ar 2  48               pha
00785Br 2  B5 02            lda $02,x
00785Dr 2  48               pha
00785Er 2               
00785Er 2               ; src/prelude.fth:3:10 in `swap`
00785Er 2               @OPCODE_3960:   ; [c64_ir] AltPush
00785Er 2  CA               dex
00785Fr 2  CA               dex
007860r 2  B5 03            lda $03,x
007862r 2  48               pha
007863r 2  B5 02            lda $02,x
007865r 2  48               pha
007866r 2               
007866r 2               ; src/prelude.fth:3:13 in `swap`
007866r 2               @OPCODE_3961:   ; [c64_ir] TempStore
007866r 2  CA               dex
007867r 2  CA               dex
007868r 2  B5 03            lda $03,x
00786Ar 2  85 96            sta TEMP_PAX2
00786Cr 2  B5 02            lda $02,x
00786Er 2  85 95            sta TEMP_PAX1
007870r 2               
007870r 2               ; src/prelude.fth:3:19 in `swap`
007870r 2               @OPCODE_3962:   ; [c64_ir] AltPop
007870r 2  E8               inx
007871r 2  E8               inx
007872r 2  68               pla
007873r 2  95 00            sta $00,x
007875r 2  68               pla
007876r 2  95 01            sta $01,x
007878r 2               
007878r 2               ; src/prelude.fth:3:22 in `swap`
007878r 2               @OPCODE_3963:   ; [c64_ir] TempLoad
007878r 2  E8               inx
007879r 2  E8               inx
00787Ar 2  A5 95            lda TEMP_PAX1
00787Cr 2  95 00            sta $00,x
00787Er 2  A5 96            lda TEMP_PAX2
007880r 2  95 01            sta $01,x
007882r 2               
007882r 2               ; <inline>:0:0 in `main`
007882r 2               @OPCODE_3964:   ; [c64_ir] AltPop
007882r 2  E8               inx
007883r 2  E8               inx
007884r 2  68               pla
007885r 2  95 00            sta $00,x
007887r 2  68               pla
007888r 2  95 01            sta $01,x
00788Ar 2               
00788Ar 2               ; <inline>:0:0 in `main`
00788Ar 2               @OPCODE_3965:   ; [c64_ir] Drop
00788Ar 2  CA               dex
00788Br 2  CA               dex
00788Cr 2               
00788Cr 2               ; src/prelude.fth:48:81 in `%`
00788Cr 2               @OPCODE_3966:   ; [c64_ir] PushLiteral(0)
00788Cr 2  E8               inx
00788Dr 2  E8               inx
00788Er 2  A9 00            lda #0
007890r 2  95 00            sta $00,x
007892r 2  A9 00            lda #0
007894r 2  95 01            sta $01,x
007896r 2               
007896r 2               ; src/prelude.fth:48:83 in `%`
007896r 2               @OPCODE_3967:   ; [c64_ir] JumpTarget(179)
007896r 2               
007896r 2               @target_180:
007896r 2               
007896r 2               ; src/prelude.fth:48:88 in `%`
007896r 2               @OPCODE_3969:   ; [c64_ir] LoopIf0(174)
007896r 2  CA               dex
007897r 2  CA               dex
007898r 2  B5 02            lda $02,x
00789Ar 2  15 03            ora $03,x
00789Cr 2  D0 03            bne *+5
00789Er 2  4C rr rr         jmp @target_174
0078A1r 2               
0078A1r 2               @target_181:
0078A1r 2               
0078A1r 2               ; <inline>:0:0 in `main`
0078A1r 2               @OPCODE_3971:   ; [c64_ir] PushLiteral(7777)
0078A1r 2  E8               inx
0078A2r 2  E8               inx
0078A3r 2  A9 61            lda #97
0078A5r 2  95 00            sta $00,x
0078A7r 2  A9 1E            lda #30
0078A9r 2  95 01            sta $01,x
0078ABr 2               
0078ABr 2               ; <inline>:0:0 in `main`
0078ABr 2               @OPCODE_3972:   ; [c64_ir] AltPush
0078ABr 2  CA               dex
0078ACr 2  CA               dex
0078ADr 2  B5 03            lda $03,x
0078AFr 2  48               pha
0078B0r 2  B5 02            lda $02,x
0078B2r 2  48               pha
0078B3r 2               
0078B3r 2               ; src/prelude.fth:3:10 in `swap`
0078B3r 2               @OPCODE_3973:   ; [c64_ir] AltPush
0078B3r 2  CA               dex
0078B4r 2  CA               dex
0078B5r 2  B5 03            lda $03,x
0078B7r 2  48               pha
0078B8r 2  B5 02            lda $02,x
0078BAr 2  48               pha
0078BBr 2               
0078BBr 2               ; src/prelude.fth:3:13 in `swap`
0078BBr 2               @OPCODE_3974:   ; [c64_ir] TempStore
0078BBr 2  CA               dex
0078BCr 2  CA               dex
0078BDr 2  B5 03            lda $03,x
0078BFr 2  85 96            sta TEMP_PAX2
0078C1r 2  B5 02            lda $02,x
0078C3r 2  85 95            sta TEMP_PAX1
0078C5r 2               
0078C5r 2               ; src/prelude.fth:3:19 in `swap`
0078C5r 2               @OPCODE_3975:   ; [c64_ir] AltPop
0078C5r 2  E8               inx
0078C6r 2  E8               inx
0078C7r 2  68               pla
0078C8r 2  95 00            sta $00,x
0078CAr 2  68               pla
0078CBr 2  95 01            sta $01,x
0078CDr 2               
0078CDr 2               ; src/prelude.fth:3:22 in `swap`
0078CDr 2               @OPCODE_3976:   ; [c64_ir] TempLoad
0078CDr 2  E8               inx
0078CEr 2  E8               inx
0078CFr 2  A5 95            lda TEMP_PAX1
0078D1r 2  95 00            sta $00,x
0078D3r 2  A5 96            lda TEMP_PAX2
0078D5r 2  95 01            sta $01,x
0078D7r 2               
0078D7r 2               ; <inline>:0:0 in `main`
0078D7r 2               @OPCODE_3977:   ; [c64_ir] AltPop
0078D7r 2  E8               inx
0078D8r 2  E8               inx
0078D9r 2  68               pla
0078DAr 2  95 00            sta $00,x
0078DCr 2  68               pla
0078DDr 2  95 01            sta $01,x
0078DFr 2               
0078DFr 2               ; <inline>:0:0 in `main`
0078DFr 2               @OPCODE_3978:   ; [c64_ir] Drop
0078DFr 2  CA               dex
0078E0r 2  CA               dex
0078E1r 2               
0078E1r 2               ; src/prelude.fth:48:99 in `%`
0078E1r 2               @OPCODE_3979:   ; [c64_ir] Drop
0078E1r 2  CA               dex
0078E2r 2  CA               dex
0078E3r 2               
0078E3r 2               ; <inline>:0:0 in `main`
0078E3r 2               @OPCODE_3980:   ; [c64_ir] AltPop
0078E3r 2  E8               inx
0078E4r 2  E8               inx
0078E5r 2  68               pla
0078E6r 2  95 00            sta $00,x
0078E8r 2  68               pla
0078E9r 2  95 01            sta $01,x
0078EBr 2               
0078EBr 2               ; <inline>:0:0 in `main`
0078EBr 2               @OPCODE_3981:   ; [c64_ir] Drop
0078EBr 2  CA               dex
0078ECr 2  CA               dex
0078EDr 2               
0078EDr 2               ; <inline>:0:0 in `main`
0078EDr 2               @OPCODE_3982:   ; [c64_ir] AltPop
0078EDr 2  E8               inx
0078EEr 2  E8               inx
0078EFr 2  68               pla
0078F0r 2  95 00            sta $00,x
0078F2r 2  68               pla
0078F3r 2  95 01            sta $01,x
0078F5r 2               
0078F5r 2               ; <inline>:0:0 in `main`
0078F5r 2               @OPCODE_3983:   ; [c64_ir] Drop
0078F5r 2  CA               dex
0078F6r 2  CA               dex
0078F7r 2               
0078F7r 2               ; snake.fth:174:21 in `random-y-position`
0078F7r 2               @OPCODE_3984:   ; [c64_ir] PushLiteral(2)
0078F7r 2  E8               inx
0078F8r 2  E8               inx
0078F9r 2  A9 02            lda #2
0078FBr 2  95 00            sta $00,x
0078FDr 2  A9 00            lda #0
0078FFr 2  95 01            sta $01,x
007901r 2               
007901r 2               ; snake.fth:174:23 in `random-y-position`
007901r 2               @OPCODE_3985:   ; [c64_ir] Add
007901r 2                   ; 21
007901r 2  CA               dex
007902r 2  CA               dex
007903r 2  18               clc
007904r 2  B5 00            lda $00,x
007906r 2  75 02            adc $02,x
007908r 2  95 00            sta $00,x
00790Ar 2  B5 01            lda $01,x
00790Cr 2  75 03            adc $03,x
00790Er 2  95 01            sta $01,x
007910r 2               
007910r 2               ; <inline>:0:0 in `main`
007910r 2               @OPCODE_3986:   ; [c64_ir] AltPop
007910r 2  E8               inx
007911r 2  E8               inx
007912r 2  68               pla
007913r 2  95 00            sta $00,x
007915r 2  68               pla
007916r 2  95 01            sta $01,x
007918r 2               
007918r 2               ; <inline>:0:0 in `main`
007918r 2               @OPCODE_3987:   ; [c64_ir] Drop
007918r 2  CA               dex
007919r 2  CA               dex
00791Ar 2               
00791Ar 2               ; <inline>:0:0 in `main`
00791Ar 2               @OPCODE_3988:   ; [c64_ir] PushLiteral(7777)
00791Ar 2  E8               inx
00791Br 2  E8               inx
00791Cr 2  A9 61            lda #97
00791Er 2  95 00            sta $00,x
007920r 2  A9 1E            lda #30
007922r 2  95 01            sta $01,x
007924r 2               
007924r 2               ; <inline>:0:0 in `main`
007924r 2               @OPCODE_3989:   ; [c64_ir] AltPush
007924r 2  CA               dex
007925r 2  CA               dex
007926r 2  B5 03            lda $03,x
007928r 2  48               pha
007929r 2  B5 02            lda $02,x
00792Br 2  48               pha
00792Cr 2               
00792Cr 2               ; snake.fth:105:22 in `set-apple-position`
00792Cr 2               @OPCODE_3990:   ; [c64_ir] PushLiteral(-26664)
00792Cr 2  E8               inx
00792Dr 2  E8               inx
00792Er 2  A9 D8            lda #216
007930r 2  95 00            sta $00,x
007932r 2  A9 97            lda #151
007934r 2  95 01            sta $01,x
007936r 2               
007936r 2               ; snake.fth:105:30 in `set-apple-position`
007936r 2               @OPCODE_3991:   ; [c64_ir] Store
007936r 2  CA               dex
007937r 2  CA               dex
007938r 2  CA               dex
007939r 2  CA               dex
00793Ar 2  B5 02            lda $02,x
00793Cr 2  81 04            sta ($04,x)
00793Er 2                   ; TODO high byte
00793Er 2               
00793Er 2               ; snake.fth:105:32 in `set-apple-position`
00793Er 2               @OPCODE_3992:   ; [c64_ir] PushLiteral(-26662)
00793Er 2  E8               inx
00793Fr 2  E8               inx
007940r 2  A9 DA            lda #218
007942r 2  95 00            sta $00,x
007944r 2  A9 97            lda #151
007946r 2  95 01            sta $01,x
007948r 2               
007948r 2               ; snake.fth:105:40 in `set-apple-position`
007948r 2               @OPCODE_3993:   ; [c64_ir] Store
007948r 2  CA               dex
007949r 2  CA               dex
00794Ar 2  CA               dex
00794Br 2  CA               dex
00794Cr 2  B5 02            lda $02,x
00794Er 2  81 04            sta ($04,x)
007950r 2                   ; TODO high byte
007950r 2               
007950r 2               ; <inline>:0:0 in `main`
007950r 2               @OPCODE_3994:   ; [c64_ir] AltPop
007950r 2  E8               inx
007951r 2  E8               inx
007952r 2  68               pla
007953r 2  95 00            sta $00,x
007955r 2  68               pla
007956r 2  95 01            sta $01,x
007958r 2               
007958r 2               ; <inline>:0:0 in `main`
007958r 2               @OPCODE_3995:   ; [c64_ir] Drop
007958r 2  CA               dex
007959r 2  CA               dex
00795Ar 2               
00795Ar 2               ; <inline>:0:0 in `main`
00795Ar 2               @OPCODE_3996:   ; [c64_ir] AltPop
00795Ar 2  E8               inx
00795Br 2  E8               inx
00795Cr 2  68               pla
00795Dr 2  95 00            sta $00,x
00795Fr 2  68               pla
007960r 2  95 01            sta $01,x
007962r 2               
007962r 2               ; <inline>:0:0 in `main`
007962r 2               @OPCODE_3997:   ; [c64_ir] Drop
007962r 2  CA               dex
007963r 2  CA               dex
007964r 2               
007964r 2               ; <inline>:0:0 in `main`
007964r 2               @OPCODE_3998:   ; [c64_ir] PushLiteral(7777)
007964r 2  E8               inx
007965r 2  E8               inx
007966r 2  A9 61            lda #97
007968r 2  95 00            sta $00,x
00796Ar 2  A9 1E            lda #30
00796Cr 2  95 01            sta $01,x
00796Er 2               
00796Er 2               ; <inline>:0:0 in `main`
00796Er 2               @OPCODE_3999:   ; [c64_ir] AltPush
00796Er 2  CA               dex
00796Fr 2  CA               dex
007970r 2  B5 03            lda $03,x
007972r 2  48               pha
007973r 2  B5 02            lda $02,x
007975r 2  48               pha
007976r 2               
007976r 2               ; snake.fth:181:15 in `grow-snake`
007976r 2               @OPCODE_4000:   ; [c64_ir] PushLiteral(1)
007976r 2  E8               inx
007977r 2  E8               inx
007978r 2  A9 01            lda #1
00797Ar 2  95 00            sta $00,x
00797Cr 2  A9 00            lda #0
00797Er 2  95 01            sta $01,x
007980r 2               
007980r 2               ; snake.fth:181:17 in `grow-snake`
007980r 2               @OPCODE_4001:   ; [c64_ir] PushLiteral(-26658)
007980r 2  E8               inx
007981r 2  E8               inx
007982r 2  A9 DE            lda #222
007984r 2  95 00            sta $00,x
007986r 2  A9 97            lda #151
007988r 2  95 01            sta $01,x
00798Ar 2               
00798Ar 2               ; <inline>:0:0 in `main`
00798Ar 2               @OPCODE_4002:   ; [c64_ir] PushLiteral(7777)
00798Ar 2  E8               inx
00798Br 2  E8               inx
00798Cr 2  A9 61            lda #97
00798Er 2  95 00            sta $00,x
007990r 2  A9 1E            lda #30
007992r 2  95 01            sta $01,x
007994r 2               
007994r 2               ; <inline>:0:0 in `main`
007994r 2               @OPCODE_4003:   ; [c64_ir] AltPush
007994r 2  CA               dex
007995r 2  CA               dex
007996r 2  B5 03            lda $03,x
007998r 2  48               pha
007999r 2  B5 02            lda $02,x
00799Br 2  48               pha
00799Cr 2               
00799Cr 2               ; <inline>:0:0 in `main`
00799Cr 2               @OPCODE_4004:   ; [c64_ir] PushLiteral(7777)
00799Cr 2  E8               inx
00799Dr 2  E8               inx
00799Er 2  A9 61            lda #97
0079A0r 2  95 00            sta $00,x
0079A2r 2  A9 1E            lda #30
0079A4r 2  95 01            sta $01,x
0079A6r 2               
0079A6r 2               ; <inline>:0:0 in `main`
0079A6r 2               @OPCODE_4005:   ; [c64_ir] AltPush
0079A6r 2  CA               dex
0079A7r 2  CA               dex
0079A8r 2  B5 03            lda $03,x
0079AAr 2  48               pha
0079ABr 2  B5 02            lda $02,x
0079ADr 2  48               pha
0079AEr 2               
0079AEr 2               ; src/prelude.fth:6:10 in `dup`
0079AEr 2               @OPCODE_4006:   ; [c64_ir] TempStore
0079AEr 2  CA               dex
0079AFr 2  CA               dex
0079B0r 2  B5 03            lda $03,x
0079B2r 2  85 96            sta TEMP_PAX2
0079B4r 2  B5 02            lda $02,x
0079B6r 2  85 95            sta TEMP_PAX1
0079B8r 2               
0079B8r 2               ; src/prelude.fth:6:16 in `dup`
0079B8r 2               @OPCODE_4007:   ; [c64_ir] TempLoad
0079B8r 2  E8               inx
0079B9r 2  E8               inx
0079BAr 2  A5 95            lda TEMP_PAX1
0079BCr 2  95 00            sta $00,x
0079BEr 2  A5 96            lda TEMP_PAX2
0079C0r 2  95 01            sta $01,x
0079C2r 2               
0079C2r 2               ; src/prelude.fth:6:22 in `dup`
0079C2r 2               @OPCODE_4008:   ; [c64_ir] TempLoad
0079C2r 2  E8               inx
0079C3r 2  E8               inx
0079C4r 2  A5 95            lda TEMP_PAX1
0079C6r 2  95 00            sta $00,x
0079C8r 2  A5 96            lda TEMP_PAX2
0079CAr 2  95 01            sta $01,x
0079CCr 2               
0079CCr 2               ; <inline>:0:0 in `main`
0079CCr 2               @OPCODE_4009:   ; [c64_ir] AltPop
0079CCr 2  E8               inx
0079CDr 2  E8               inx
0079CEr 2  68               pla
0079CFr 2  95 00            sta $00,x
0079D1r 2  68               pla
0079D2r 2  95 01            sta $01,x
0079D4r 2               
0079D4r 2               ; <inline>:0:0 in `main`
0079D4r 2               @OPCODE_4010:   ; [c64_ir] Drop
0079D4r 2  CA               dex
0079D5r 2  CA               dex
0079D6r 2               
0079D6r 2               ; src/prelude.fth:20:12 in `+!`
0079D6r 2               @OPCODE_4011:   ; [c64_ir] AltPush
0079D6r 2  CA               dex
0079D7r 2  CA               dex
0079D8r 2  B5 03            lda $03,x
0079DAr 2  48               pha
0079DBr 2  B5 02            lda $02,x
0079DDr 2  48               pha
0079DEr 2               
0079DEr 2               ; src/prelude.fth:20:15 in `+!`
0079DEr 2               @OPCODE_4012:   ; [c64_ir] Load
0079DEr 2  A1 00            lda ($00,x)
0079E0r 2  95 00            sta $00,x
0079E2r 2  A9 00            lda #0
0079E4r 2  95 01            sta $01,x
0079E6r 2               
0079E6r 2               ; src/prelude.fth:20:17 in `+!`
0079E6r 2               @OPCODE_4013:   ; [c64_ir] Add
0079E6r 2                   ; 21
0079E6r 2  CA               dex
0079E7r 2  CA               dex
0079E8r 2  18               clc
0079E9r 2  B5 00            lda $00,x
0079EBr 2  75 02            adc $02,x
0079EDr 2  95 00            sta $00,x
0079EFr 2  B5 01            lda $01,x
0079F1r 2  75 03            adc $03,x
0079F3r 2  95 01            sta $01,x
0079F5r 2               
0079F5r 2               ; src/prelude.fth:20:19 in `+!`
0079F5r 2               @OPCODE_4014:   ; [c64_ir] AltPop
0079F5r 2  E8               inx
0079F6r 2  E8               inx
0079F7r 2  68               pla
0079F8r 2  95 00            sta $00,x
0079FAr 2  68               pla
0079FBr 2  95 01            sta $01,x
0079FDr 2               
0079FDr 2               ; src/prelude.fth:20:22 in `+!`
0079FDr 2               @OPCODE_4015:   ; [c64_ir] Store
0079FDr 2  CA               dex
0079FEr 2  CA               dex
0079FFr 2  CA               dex
007A00r 2  CA               dex
007A01r 2  B5 02            lda $02,x
007A03r 2  81 04            sta ($04,x)
007A05r 2                   ; TODO high byte
007A05r 2               
007A05r 2               ; <inline>:0:0 in `main`
007A05r 2               @OPCODE_4016:   ; [c64_ir] AltPop
007A05r 2  E8               inx
007A06r 2  E8               inx
007A07r 2  68               pla
007A08r 2  95 00            sta $00,x
007A0Ar 2  68               pla
007A0Br 2  95 01            sta $01,x
007A0Dr 2               
007A0Dr 2               ; <inline>:0:0 in `main`
007A0Dr 2               @OPCODE_4017:   ; [c64_ir] Drop
007A0Dr 2  CA               dex
007A0Er 2  CA               dex
007A0Fr 2               
007A0Fr 2               ; <inline>:0:0 in `main`
007A0Fr 2               @OPCODE_4018:   ; [c64_ir] AltPop
007A0Fr 2  E8               inx
007A10r 2  E8               inx
007A11r 2  68               pla
007A12r 2  95 00            sta $00,x
007A14r 2  68               pla
007A15r 2  95 01            sta $01,x
007A17r 2               
007A17r 2               ; <inline>:0:0 in `main`
007A17r 2               @OPCODE_4019:   ; [c64_ir] Drop
007A17r 2  CA               dex
007A18r 2  CA               dex
007A19r 2               
007A19r 2               ; snake.fth:189:3 in `check-apple`
007A19r 2               @OPCODE_4020:   ; [c64_ir] JumpTarget(181)
007A19r 2               
007A19r 2               @target_182:
007A19r 2               
007A19r 2               ; <inline>:0:0 in `main`
007A19r 2               @OPCODE_4022:   ; [c64_ir] AltPop
007A19r 2  E8               inx
007A1Ar 2  E8               inx
007A1Br 2  68               pla
007A1Cr 2  95 00            sta $00,x
007A1Er 2  68               pla
007A1Fr 2  95 01            sta $01,x
007A21r 2               
007A21r 2               ; <inline>:0:0 in `main`
007A21r 2               @OPCODE_4023:   ; [c64_ir] Drop
007A21r 2  CA               dex
007A22r 2  CA               dex
007A23r 2               
007A23r 2               ; <inline>:0:0 in `main`
007A23r 2               @OPCODE_4024:   ; [c64_ir] PushLiteral(7777)
007A23r 2  E8               inx
007A24r 2  E8               inx
007A25r 2  A9 61            lda #97
007A27r 2  95 00            sta $00,x
007A29r 2  A9 1E            lda #30
007A2Br 2  95 01            sta $01,x
007A2Dr 2               
007A2Dr 2               ; <inline>:0:0 in `main`
007A2Dr 2               @OPCODE_4025:   ; [c64_ir] AltPush
007A2Dr 2  CA               dex
007A2Er 2  CA               dex
007A2Fr 2  B5 03            lda $03,x
007A31r 2  48               pha
007A32r 2  B5 02            lda $02,x
007A34r 2  48               pha
007A35r 2               
007A35r 2               ; snake.fth:193:3 in `check-collision`
007A35r 2               @OPCODE_4026:   ; [c64_ir] PushLiteral(-28668)
007A35r 2  E8               inx
007A36r 2  E8               inx
007A37r 2  A9 04            lda #4
007A39r 2  95 00            sta $00,x
007A3Br 2  A9 90            lda #144
007A3Dr 2  95 01            sta $01,x
007A3Fr 2               
007A3Fr 2               ; snake.fth:193:16 in `check-collision`
007A3Fr 2               @OPCODE_4027:   ; [c64_ir] Load
007A3Fr 2  A1 00            lda ($00,x)
007A41r 2  95 00            sta $00,x
007A43r 2  A9 00            lda #0
007A45r 2  95 01            sta $01,x
007A47r 2               
007A47r 2               ; snake.fth:193:18 in `check-collision`
007A47r 2               @OPCODE_4028:   ; [c64_ir] PushLiteral(-27666)
007A47r 2  E8               inx
007A48r 2  E8               inx
007A49r 2  A9 EE            lda #238
007A4Br 2  95 00            sta $00,x
007A4Dr 2  A9 93            lda #147
007A4Fr 2  95 01            sta $01,x
007A51r 2               
007A51r 2               ; snake.fth:193:31 in `check-collision`
007A51r 2               @OPCODE_4029:   ; [c64_ir] Load
007A51r 2  A1 00            lda ($00,x)
007A53r 2  95 00            sta $00,x
007A55r 2  A9 00            lda #0
007A57r 2  95 01            sta $01,x
007A59r 2               
007A59r 2               ; <inline>:0:0 in `main`
007A59r 2               @OPCODE_4030:   ; [c64_ir] PushLiteral(7777)
007A59r 2  E8               inx
007A5Ar 2  E8               inx
007A5Br 2  A9 61            lda #97
007A5Dr 2  95 00            sta $00,x
007A5Fr 2  A9 1E            lda #30
007A61r 2  95 01            sta $01,x
007A63r 2               
007A63r 2               ; <inline>:0:0 in `main`
007A63r 2               @OPCODE_4031:   ; [c64_ir] AltPush
007A63r 2  CA               dex
007A64r 2  CA               dex
007A65r 2  B5 03            lda $03,x
007A67r 2  48               pha
007A68r 2  B5 02            lda $02,x
007A6Ar 2  48               pha
007A6Br 2               
007A6Br 2               ; snake.fth:48:34 in `convert-x-y`
007A6Br 2               @OPCODE_4032:   ; [c64_ir] PushLiteral(40)
007A6Br 2  E8               inx
007A6Cr 2  E8               inx
007A6Dr 2  A9 28            lda #40
007A6Fr 2  95 00            sta $00,x
007A71r 2  A9 00            lda #0
007A73r 2  95 01            sta $01,x
007A75r 2               
007A75r 2               ; <inline>:0:0 in `main`
007A75r 2               @OPCODE_4033:   ; [c64_ir] PushLiteral(7777)
007A75r 2  E8               inx
007A76r 2  E8               inx
007A77r 2  A9 61            lda #97
007A79r 2  95 00            sta $00,x
007A7Br 2  A9 1E            lda #30
007A7Dr 2  95 01            sta $01,x
007A7Fr 2               
007A7Fr 2               ; <inline>:0:0 in `main`
007A7Fr 2               @OPCODE_4034:   ; [c64_ir] AltPush
007A7Fr 2  CA               dex
007A80r 2  CA               dex
007A81r 2  B5 03            lda $03,x
007A83r 2  48               pha
007A84r 2  B5 02            lda $02,x
007A86r 2  48               pha
007A87r 2               
007A87r 2               ; src/prelude.fth:44:5 in `*`
007A87r 2               @OPCODE_4035:   ; [c64_ir] AltPush
007A87r 2  CA               dex
007A88r 2  CA               dex
007A89r 2  B5 03            lda $03,x
007A8Br 2  48               pha
007A8Cr 2  B5 02            lda $02,x
007A8Er 2  48               pha
007A8Fr 2               
007A8Fr 2               ; src/prelude.fth:44:8 in `*`
007A8Fr 2               @OPCODE_4036:   ; [c64_ir] PushLiteral(0)
007A8Fr 2  E8               inx
007A90r 2  E8               inx
007A91r 2  A9 00            lda #0
007A93r 2  95 00            sta $00,x
007A95r 2  A9 00            lda #0
007A97r 2  95 01            sta $01,x
007A99r 2               
007A99r 2               ; src/prelude.fth:44:10 in `*`
007A99r 2               @OPCODE_4037:   ; [c64_ir] AltPop
007A99r 2  E8               inx
007A9Ar 2  E8               inx
007A9Br 2  68               pla
007A9Cr 2  95 00            sta $00,x
007A9Er 2  68               pla
007A9Fr 2  95 01            sta $01,x
007AA1r 2               
007AA1r 2               ; src/prelude.fth:44:13 in `*`
007AA1r 2               @OPCODE_4038:   ; [c64_ir] PushLiteral(0)
007AA1r 2  E8               inx
007AA2r 2  E8               inx
007AA3r 2  A9 00            lda #0
007AA5r 2  95 00            sta $00,x
007AA7r 2  A9 00            lda #0
007AA9r 2  95 01            sta $01,x
007AABr 2               
007AABr 2               ; src/prelude.fth:44:15 in `*`
007AABr 2               @OPCODE_4039:   ; [c64_ir] AltPush
007AABr 2  CA               dex
007AACr 2  CA               dex
007AADr 2  B5 03            lda $03,x
007AAFr 2  48               pha
007AB0r 2  B5 02            lda $02,x
007AB2r 2  48               pha
007AB3r 2               
007AB3r 2               ; src/prelude.fth:44:15 in `*`
007AB3r 2               @OPCODE_4040:   ; [c64_ir] AltPush
007AB3r 2  CA               dex
007AB4r 2  CA               dex
007AB5r 2  B5 03            lda $03,x
007AB7r 2  48               pha
007AB8r 2  B5 02            lda $02,x
007ABAr 2  48               pha
007ABBr 2               
007ABBr 2               ; src/prelude.fth:44:15 in `*`
007ABBr 2               @OPCODE_4041:   ; [c64_ir] LoopTarget(182)
007ABBr 2               
007ABBr 2               @target_183:
007ABBr 2               
007ABBr 2               ; <inline>:0:0 in `main`
007ABBr 2               @OPCODE_4043:   ; [c64_ir] PushLiteral(7777)
007ABBr 2  E8               inx
007ABCr 2  E8               inx
007ABDr 2  A9 61            lda #97
007ABFr 2  95 00            sta $00,x
007AC1r 2  A9 1E            lda #30
007AC3r 2  95 01            sta $01,x
007AC5r 2               
007AC5r 2               ; <inline>:0:0 in `main`
007AC5r 2               @OPCODE_4044:   ; [c64_ir] AltPush
007AC5r 2  CA               dex
007AC6r 2  CA               dex
007AC7r 2  B5 03            lda $03,x
007AC9r 2  48               pha
007ACAr 2  B5 02            lda $02,x
007ACCr 2  48               pha
007ACDr 2               
007ACDr 2               ; src/prelude.fth:4:10 in `over`
007ACDr 2               @OPCODE_4045:   ; [c64_ir] AltPush
007ACDr 2  CA               dex
007ACEr 2  CA               dex
007ACFr 2  B5 03            lda $03,x
007AD1r 2  48               pha
007AD2r 2  B5 02            lda $02,x
007AD4r 2  48               pha
007AD5r 2               
007AD5r 2               ; src/prelude.fth:4:13 in `over`
007AD5r 2               @OPCODE_4046:   ; [c64_ir] TempStore
007AD5r 2  CA               dex
007AD6r 2  CA               dex
007AD7r 2  B5 03            lda $03,x
007AD9r 2  85 96            sta TEMP_PAX2
007ADBr 2  B5 02            lda $02,x
007ADDr 2  85 95            sta TEMP_PAX1
007ADFr 2               
007ADFr 2               ; src/prelude.fth:4:19 in `over`
007ADFr 2               @OPCODE_4047:   ; [c64_ir] TempLoad
007ADFr 2  E8               inx
007AE0r 2  E8               inx
007AE1r 2  A5 95            lda TEMP_PAX1
007AE3r 2  95 00            sta $00,x
007AE5r 2  A5 96            lda TEMP_PAX2
007AE7r 2  95 01            sta $01,x
007AE9r 2               
007AE9r 2               ; src/prelude.fth:4:25 in `over`
007AE9r 2               @OPCODE_4048:   ; [c64_ir] AltPop
007AE9r 2  E8               inx
007AEAr 2  E8               inx
007AEBr 2  68               pla
007AECr 2  95 00            sta $00,x
007AEEr 2  68               pla
007AEFr 2  95 01            sta $01,x
007AF1r 2               
007AF1r 2               ; src/prelude.fth:4:28 in `over`
007AF1r 2               @OPCODE_4049:   ; [c64_ir] TempLoad
007AF1r 2  E8               inx
007AF2r 2  E8               inx
007AF3r 2  A5 95            lda TEMP_PAX1
007AF5r 2  95 00            sta $00,x
007AF7r 2  A5 96            lda TEMP_PAX2
007AF9r 2  95 01            sta $01,x
007AFBr 2               
007AFBr 2               ; <inline>:0:0 in `main`
007AFBr 2               @OPCODE_4050:   ; [c64_ir] AltPop
007AFBr 2  E8               inx
007AFCr 2  E8               inx
007AFDr 2  68               pla
007AFEr 2  95 00            sta $00,x
007B00r 2  68               pla
007B01r 2  95 01            sta $01,x
007B03r 2               
007B03r 2               ; <inline>:0:0 in `main`
007B03r 2               @OPCODE_4051:   ; [c64_ir] Drop
007B03r 2  CA               dex
007B04r 2  CA               dex
007B05r 2               
007B05r 2               ; src/prelude.fth:44:23 in `*`
007B05r 2               @OPCODE_4052:   ; [c64_ir] Add
007B05r 2                   ; 21
007B05r 2  CA               dex
007B06r 2  CA               dex
007B07r 2  18               clc
007B08r 2  B5 00            lda $00,x
007B0Ar 2  75 02            adc $02,x
007B0Cr 2  95 00            sta $00,x
007B0Er 2  B5 01            lda $01,x
007B10r 2  75 03            adc $03,x
007B12r 2  95 01            sta $01,x
007B14r 2               
007B14r 2               ; <inline>:0:0 in `main`
007B14r 2               @OPCODE_4053:   ; [c64_ir] PushLiteral(7777)
007B14r 2  E8               inx
007B15r 2  E8               inx
007B16r 2  A9 61            lda #97
007B18r 2  95 00            sta $00,x
007B1Ar 2  A9 1E            lda #30
007B1Cr 2  95 01            sta $01,x
007B1Er 2               
007B1Er 2               ; <inline>:0:0 in `main`
007B1Er 2               @OPCODE_4054:   ; [c64_ir] AltPush
007B1Er 2  CA               dex
007B1Fr 2  CA               dex
007B20r 2  B5 03            lda $03,x
007B22r 2  48               pha
007B23r 2  B5 02            lda $02,x
007B25r 2  48               pha
007B26r 2               
007B26r 2               ; src/prelude.fth:33:12 in `loopimpl`
007B26r 2               @OPCODE_4055:   ; [c64_ir] AltPop
007B26r 2  E8               inx
007B27r 2  E8               inx
007B28r 2  68               pla
007B29r 2  95 00            sta $00,x
007B2Br 2  68               pla
007B2Cr 2  95 01            sta $01,x
007B2Er 2               
007B2Er 2               ; src/prelude.fth:33:15 in `loopimpl`
007B2Er 2               @OPCODE_4056:   ; [c64_ir] AltPop
007B2Er 2  E8               inx
007B2Fr 2  E8               inx
007B30r 2  68               pla
007B31r 2  95 00            sta $00,x
007B33r 2  68               pla
007B34r 2  95 01            sta $01,x
007B36r 2               
007B36r 2               ; src/prelude.fth:33:18 in `loopimpl`
007B36r 2               @OPCODE_4057:   ; [c64_ir] AltPop
007B36r 2  E8               inx
007B37r 2  E8               inx
007B38r 2  68               pla
007B39r 2  95 00            sta $00,x
007B3Br 2  68               pla
007B3Cr 2  95 01            sta $01,x
007B3Er 2               
007B3Er 2               ; <inline>:0:0 in `main`
007B3Er 2               @OPCODE_4058:   ; [c64_ir] PushLiteral(7777)
007B3Er 2  E8               inx
007B3Fr 2  E8               inx
007B40r 2  A9 61            lda #97
007B42r 2  95 00            sta $00,x
007B44r 2  A9 1E            lda #30
007B46r 2  95 01            sta $01,x
007B48r 2               
007B48r 2               ; <inline>:0:0 in `main`
007B48r 2               @OPCODE_4059:   ; [c64_ir] AltPush
007B48r 2  CA               dex
007B49r 2  CA               dex
007B4Ar 2  B5 03            lda $03,x
007B4Cr 2  48               pha
007B4Dr 2  B5 02            lda $02,x
007B4Fr 2  48               pha
007B50r 2               
007B50r 2               ; src/prelude.fth:18:8 in `1+`
007B50r 2               @OPCODE_4060:   ; [c64_ir] PushLiteral(1)
007B50r 2  E8               inx
007B51r 2  E8               inx
007B52r 2  A9 01            lda #1
007B54r 2  95 00            sta $00,x
007B56r 2  A9 00            lda #0
007B58r 2  95 01            sta $01,x
007B5Ar 2               
007B5Ar 2               ; src/prelude.fth:18:10 in `1+`
007B5Ar 2               @OPCODE_4061:   ; [c64_ir] Add
007B5Ar 2                   ; 21
007B5Ar 2  CA               dex
007B5Br 2  CA               dex
007B5Cr 2  18               clc
007B5Dr 2  B5 00            lda $00,x
007B5Fr 2  75 02            adc $02,x
007B61r 2  95 00            sta $00,x
007B63r 2  B5 01            lda $01,x
007B65r 2  75 03            adc $03,x
007B67r 2  95 01            sta $01,x
007B69r 2               
007B69r 2               ; <inline>:0:0 in `main`
007B69r 2               @OPCODE_4062:   ; [c64_ir] AltPop
007B69r 2  E8               inx
007B6Ar 2  E8               inx
007B6Br 2  68               pla
007B6Cr 2  95 00            sta $00,x
007B6Er 2  68               pla
007B6Fr 2  95 01            sta $01,x
007B71r 2               
007B71r 2               ; <inline>:0:0 in `main`
007B71r 2               @OPCODE_4063:   ; [c64_ir] Drop
007B71r 2  CA               dex
007B72r 2  CA               dex
007B73r 2               
007B73r 2               ; <inline>:0:0 in `main`
007B73r 2               @OPCODE_4064:   ; [c64_ir] PushLiteral(7777)
007B73r 2  E8               inx
007B74r 2  E8               inx
007B75r 2  A9 61            lda #97
007B77r 2  95 00            sta $00,x
007B79r 2  A9 1E            lda #30
007B7Br 2  95 01            sta $01,x
007B7Dr 2               
007B7Dr 2               ; <inline>:0:0 in `main`
007B7Dr 2               @OPCODE_4065:   ; [c64_ir] AltPush
007B7Dr 2  CA               dex
007B7Er 2  CA               dex
007B7Fr 2  B5 03            lda $03,x
007B81r 2  48               pha
007B82r 2  B5 02            lda $02,x
007B84r 2  48               pha
007B85r 2               
007B85r 2               ; <inline>:0:0 in `main`
007B85r 2               @OPCODE_4066:   ; [c64_ir] PushLiteral(7777)
007B85r 2  E8               inx
007B86r 2  E8               inx
007B87r 2  A9 61            lda #97
007B89r 2  95 00            sta $00,x
007B8Br 2  A9 1E            lda #30
007B8Dr 2  95 01            sta $01,x
007B8Fr 2               
007B8Fr 2               ; <inline>:0:0 in `main`
007B8Fr 2               @OPCODE_4067:   ; [c64_ir] AltPush
007B8Fr 2  CA               dex
007B90r 2  CA               dex
007B91r 2  B5 03            lda $03,x
007B93r 2  48               pha
007B94r 2  B5 02            lda $02,x
007B96r 2  48               pha
007B97r 2               
007B97r 2               ; src/prelude.fth:4:10 in `over`
007B97r 2               @OPCODE_4068:   ; [c64_ir] AltPush
007B97r 2  CA               dex
007B98r 2  CA               dex
007B99r 2  B5 03            lda $03,x
007B9Br 2  48               pha
007B9Cr 2  B5 02            lda $02,x
007B9Er 2  48               pha
007B9Fr 2               
007B9Fr 2               ; src/prelude.fth:4:13 in `over`
007B9Fr 2               @OPCODE_4069:   ; [c64_ir] TempStore
007B9Fr 2  CA               dex
007BA0r 2  CA               dex
007BA1r 2  B5 03            lda $03,x
007BA3r 2  85 96            sta TEMP_PAX2
007BA5r 2  B5 02            lda $02,x
007BA7r 2  85 95            sta TEMP_PAX1
007BA9r 2               
007BA9r 2               ; src/prelude.fth:4:19 in `over`
007BA9r 2               @OPCODE_4070:   ; [c64_ir] TempLoad
007BA9r 2  E8               inx
007BAAr 2  E8               inx
007BABr 2  A5 95            lda TEMP_PAX1
007BADr 2  95 00            sta $00,x
007BAFr 2  A5 96            lda TEMP_PAX2
007BB1r 2  95 01            sta $01,x
007BB3r 2               
007BB3r 2               ; src/prelude.fth:4:25 in `over`
007BB3r 2               @OPCODE_4071:   ; [c64_ir] AltPop
007BB3r 2  E8               inx
007BB4r 2  E8               inx
007BB5r 2  68               pla
007BB6r 2  95 00            sta $00,x
007BB8r 2  68               pla
007BB9r 2  95 01            sta $01,x
007BBBr 2               
007BBBr 2               ; src/prelude.fth:4:28 in `over`
007BBBr 2               @OPCODE_4072:   ; [c64_ir] TempLoad
007BBBr 2  E8               inx
007BBCr 2  E8               inx
007BBDr 2  A5 95            lda TEMP_PAX1
007BBFr 2  95 00            sta $00,x
007BC1r 2  A5 96            lda TEMP_PAX2
007BC3r 2  95 01            sta $01,x
007BC5r 2               
007BC5r 2               ; <inline>:0:0 in `main`
007BC5r 2               @OPCODE_4073:   ; [c64_ir] AltPop
007BC5r 2  E8               inx
007BC6r 2  E8               inx
007BC7r 2  68               pla
007BC8r 2  95 00            sta $00,x
007BCAr 2  68               pla
007BCBr 2  95 01            sta $01,x
007BCDr 2               
007BCDr 2               ; <inline>:0:0 in `main`
007BCDr 2               @OPCODE_4074:   ; [c64_ir] Drop
007BCDr 2  CA               dex
007BCEr 2  CA               dex
007BCFr 2               
007BCFr 2               ; <inline>:0:0 in `main`
007BCFr 2               @OPCODE_4075:   ; [c64_ir] PushLiteral(7777)
007BCFr 2  E8               inx
007BD0r 2  E8               inx
007BD1r 2  A9 61            lda #97
007BD3r 2  95 00            sta $00,x
007BD5r 2  A9 1E            lda #30
007BD7r 2  95 01            sta $01,x
007BD9r 2               
007BD9r 2               ; <inline>:0:0 in `main`
007BD9r 2               @OPCODE_4076:   ; [c64_ir] AltPush
007BD9r 2  CA               dex
007BDAr 2  CA               dex
007BDBr 2  B5 03            lda $03,x
007BDDr 2  48               pha
007BDEr 2  B5 02            lda $02,x
007BE0r 2  48               pha
007BE1r 2               
007BE1r 2               ; src/prelude.fth:4:10 in `over`
007BE1r 2               @OPCODE_4077:   ; [c64_ir] AltPush
007BE1r 2  CA               dex
007BE2r 2  CA               dex
007BE3r 2  B5 03            lda $03,x
007BE5r 2  48               pha
007BE6r 2  B5 02            lda $02,x
007BE8r 2  48               pha
007BE9r 2               
007BE9r 2               ; src/prelude.fth:4:13 in `over`
007BE9r 2               @OPCODE_4078:   ; [c64_ir] TempStore
007BE9r 2  CA               dex
007BEAr 2  CA               dex
007BEBr 2  B5 03            lda $03,x
007BEDr 2  85 96            sta TEMP_PAX2
007BEFr 2  B5 02            lda $02,x
007BF1r 2  85 95            sta TEMP_PAX1
007BF3r 2               
007BF3r 2               ; src/prelude.fth:4:19 in `over`
007BF3r 2               @OPCODE_4079:   ; [c64_ir] TempLoad
007BF3r 2  E8               inx
007BF4r 2  E8               inx
007BF5r 2  A5 95            lda TEMP_PAX1
007BF7r 2  95 00            sta $00,x
007BF9r 2  A5 96            lda TEMP_PAX2
007BFBr 2  95 01            sta $01,x
007BFDr 2               
007BFDr 2               ; src/prelude.fth:4:25 in `over`
007BFDr 2               @OPCODE_4080:   ; [c64_ir] AltPop
007BFDr 2  E8               inx
007BFEr 2  E8               inx
007BFFr 2  68               pla
007C00r 2  95 00            sta $00,x
007C02r 2  68               pla
007C03r 2  95 01            sta $01,x
007C05r 2               
007C05r 2               ; src/prelude.fth:4:28 in `over`
007C05r 2               @OPCODE_4081:   ; [c64_ir] TempLoad
007C05r 2  E8               inx
007C06r 2  E8               inx
007C07r 2  A5 95            lda TEMP_PAX1
007C09r 2  95 00            sta $00,x
007C0Br 2  A5 96            lda TEMP_PAX2
007C0Dr 2  95 01            sta $01,x
007C0Fr 2               
007C0Fr 2               ; <inline>:0:0 in `main`
007C0Fr 2               @OPCODE_4082:   ; [c64_ir] AltPop
007C0Fr 2  E8               inx
007C10r 2  E8               inx
007C11r 2  68               pla
007C12r 2  95 00            sta $00,x
007C14r 2  68               pla
007C15r 2  95 01            sta $01,x
007C17r 2               
007C17r 2               ; <inline>:0:0 in `main`
007C17r 2               @OPCODE_4083:   ; [c64_ir] Drop
007C17r 2  CA               dex
007C18r 2  CA               dex
007C19r 2               
007C19r 2               ; <inline>:0:0 in `main`
007C19r 2               @OPCODE_4084:   ; [c64_ir] AltPop
007C19r 2  E8               inx
007C1Ar 2  E8               inx
007C1Br 2  68               pla
007C1Cr 2  95 00            sta $00,x
007C1Er 2  68               pla
007C1Fr 2  95 01            sta $01,x
007C21r 2               
007C21r 2               ; <inline>:0:0 in `main`
007C21r 2               @OPCODE_4085:   ; [c64_ir] Drop
007C21r 2  CA               dex
007C22r 2  CA               dex
007C23r 2               
007C23r 2               ; src/prelude.fth:33:29 in `loopimpl`
007C23r 2               @OPCODE_4086:   ; [c64_ir] AltPush
007C23r 2  CA               dex
007C24r 2  CA               dex
007C25r 2  B5 03            lda $03,x
007C27r 2  48               pha
007C28r 2  B5 02            lda $02,x
007C2Ar 2  48               pha
007C2Br 2               
007C2Br 2               ; src/prelude.fth:33:32 in `loopimpl`
007C2Br 2               @OPCODE_4087:   ; [c64_ir] AltPush
007C2Br 2  CA               dex
007C2Cr 2  CA               dex
007C2Dr 2  B5 03            lda $03,x
007C2Fr 2  48               pha
007C30r 2  B5 02            lda $02,x
007C32r 2  48               pha
007C33r 2               
007C33r 2               ; <inline>:0:0 in `main`
007C33r 2               @OPCODE_4088:   ; [c64_ir] PushLiteral(7777)
007C33r 2  E8               inx
007C34r 2  E8               inx
007C35r 2  A9 61            lda #97
007C37r 2  95 00            sta $00,x
007C39r 2  A9 1E            lda #30
007C3Br 2  95 01            sta $01,x
007C3Dr 2               
007C3Dr 2               ; <inline>:0:0 in `main`
007C3Dr 2               @OPCODE_4089:   ; [c64_ir] AltPush
007C3Dr 2  CA               dex
007C3Er 2  CA               dex
007C3Fr 2  B5 03            lda $03,x
007C41r 2  48               pha
007C42r 2  B5 02            lda $02,x
007C44r 2  48               pha
007C45r 2               
007C45r 2               ; <inline>:0:0 in `main`
007C45r 2               @OPCODE_4090:   ; [c64_ir] PushLiteral(7777)
007C45r 2  E8               inx
007C46r 2  E8               inx
007C47r 2  A9 61            lda #97
007C49r 2  95 00            sta $00,x
007C4Br 2  A9 1E            lda #30
007C4Dr 2  95 01            sta $01,x
007C4Fr 2               
007C4Fr 2               ; <inline>:0:0 in `main`
007C4Fr 2               @OPCODE_4091:   ; [c64_ir] AltPush
007C4Fr 2  CA               dex
007C50r 2  CA               dex
007C51r 2  B5 03            lda $03,x
007C53r 2  48               pha
007C54r 2  B5 02            lda $02,x
007C56r 2  48               pha
007C57r 2               
007C57r 2               ; <inline>:0:0 in `main`
007C57r 2               @OPCODE_4092:   ; [c64_ir] PushLiteral(7777)
007C57r 2  E8               inx
007C58r 2  E8               inx
007C59r 2  A9 61            lda #97
007C5Br 2  95 00            sta $00,x
007C5Dr 2  A9 1E            lda #30
007C5Fr 2  95 01            sta $01,x
007C61r 2               
007C61r 2               ; <inline>:0:0 in `main`
007C61r 2               @OPCODE_4093:   ; [c64_ir] AltPush
007C61r 2  CA               dex
007C62r 2  CA               dex
007C63r 2  B5 03            lda $03,x
007C65r 2  48               pha
007C66r 2  B5 02            lda $02,x
007C68r 2  48               pha
007C69r 2               
007C69r 2               ; <inline>:0:0 in `main`
007C69r 2               @OPCODE_4094:   ; [c64_ir] PushLiteral(7777)
007C69r 2  E8               inx
007C6Ar 2  E8               inx
007C6Br 2  A9 61            lda #97
007C6Dr 2  95 00            sta $00,x
007C6Fr 2  A9 1E            lda #30
007C71r 2  95 01            sta $01,x
007C73r 2               
007C73r 2               ; <inline>:0:0 in `main`
007C73r 2               @OPCODE_4095:   ; [c64_ir] AltPush
007C73r 2  CA               dex
007C74r 2  CA               dex
007C75r 2  B5 03            lda $03,x
007C77r 2  48               pha
007C78r 2  B5 02            lda $02,x
007C7Ar 2  48               pha
007C7Br 2               
007C7Br 2               ; src/prelude.fth:14:12 in `invert`
007C7Br 2               @OPCODE_4096:   ; [c64_ir] PushLiteral(-1)
007C7Br 2  E8               inx
007C7Cr 2  E8               inx
007C7Dr 2  A9 FF            lda #255
007C7Fr 2  95 00            sta $00,x
007C81r 2  A9 FF            lda #255
007C83r 2  95 01            sta $01,x
007C85r 2               
007C85r 2               ; src/prelude.fth:14:15 in `invert`
007C85r 2               @OPCODE_4097:   ; [c64_ir] Nand
007C85r 2                   ; 26
007C85r 2  CA               dex
007C86r 2  CA               dex
007C87r 2  B5 00            lda $00,x
007C89r 2  35 02            and $02,x
007C8Br 2  49 FF            eor #$ff
007C8Dr 2  95 00            sta $00,x
007C8Fr 2  B5 01            lda $01,x
007C91r 2  35 03            and $03,x
007C93r 2  49 FF            eor #$ff
007C95r 2  95 01            sta $01,x
007C97r 2               
007C97r 2               ; <inline>:0:0 in `main`
007C97r 2               @OPCODE_4098:   ; [c64_ir] AltPop
007C97r 2  E8               inx
007C98r 2  E8               inx
007C99r 2  68               pla
007C9Ar 2  95 00            sta $00,x
007C9Cr 2  68               pla
007C9Dr 2  95 01            sta $01,x
007C9Fr 2               
007C9Fr 2               ; <inline>:0:0 in `main`
007C9Fr 2               @OPCODE_4099:   ; [c64_ir] Drop
007C9Fr 2  CA               dex
007CA0r 2  CA               dex
007CA1r 2               
007CA1r 2               ; src/prelude.fth:15:19 in `negate`
007CA1r 2               @OPCODE_4100:   ; [c64_ir] PushLiteral(1)
007CA1r 2  E8               inx
007CA2r 2  E8               inx
007CA3r 2  A9 01            lda #1
007CA5r 2  95 00            sta $00,x
007CA7r 2  A9 00            lda #0
007CA9r 2  95 01            sta $01,x
007CABr 2               
007CABr 2               ; src/prelude.fth:15:21 in `negate`
007CABr 2               @OPCODE_4101:   ; [c64_ir] Add
007CABr 2                   ; 21
007CABr 2  CA               dex
007CACr 2  CA               dex
007CADr 2  18               clc
007CAEr 2  B5 00            lda $00,x
007CB0r 2  75 02            adc $02,x
007CB2r 2  95 00            sta $00,x
007CB4r 2  B5 01            lda $01,x
007CB6r 2  75 03            adc $03,x
007CB8r 2  95 01            sta $01,x
007CBAr 2               
007CBAr 2               ; <inline>:0:0 in `main`
007CBAr 2               @OPCODE_4102:   ; [c64_ir] AltPop
007CBAr 2  E8               inx
007CBBr 2  E8               inx
007CBCr 2  68               pla
007CBDr 2  95 00            sta $00,x
007CBFr 2  68               pla
007CC0r 2  95 01            sta $01,x
007CC2r 2               
007CC2r 2               ; <inline>:0:0 in `main`
007CC2r 2               @OPCODE_4103:   ; [c64_ir] Drop
007CC2r 2  CA               dex
007CC3r 2  CA               dex
007CC4r 2               
007CC4r 2               ; src/prelude.fth:16:19 in `-`
007CC4r 2               @OPCODE_4104:   ; [c64_ir] Add
007CC4r 2                   ; 21
007CC4r 2  CA               dex
007CC5r 2  CA               dex
007CC6r 2  18               clc
007CC7r 2  B5 00            lda $00,x
007CC9r 2  75 02            adc $02,x
007CCBr 2  95 00            sta $00,x
007CCDr 2  B5 01            lda $01,x
007CCFr 2  75 03            adc $03,x
007CD1r 2  95 01            sta $01,x
007CD3r 2               
007CD3r 2               ; <inline>:0:0 in `main`
007CD3r 2               @OPCODE_4105:   ; [c64_ir] AltPop
007CD3r 2  E8               inx
007CD4r 2  E8               inx
007CD5r 2  68               pla
007CD6r 2  95 00            sta $00,x
007CD8r 2  68               pla
007CD9r 2  95 01            sta $01,x
007CDBr 2               
007CDBr 2               ; <inline>:0:0 in `main`
007CDBr 2               @OPCODE_4106:   ; [c64_ir] Drop
007CDBr 2  CA               dex
007CDCr 2  CA               dex
007CDDr 2               
007CDDr 2               ; <inline>:0:0 in `main`
007CDDr 2               @OPCODE_4107:   ; [c64_ir] PushLiteral(7777)
007CDDr 2  E8               inx
007CDEr 2  E8               inx
007CDFr 2  A9 61            lda #97
007CE1r 2  95 00            sta $00,x
007CE3r 2  A9 1E            lda #30
007CE5r 2  95 01            sta $01,x
007CE7r 2               
007CE7r 2               ; <inline>:0:0 in `main`
007CE7r 2               @OPCODE_4108:   ; [c64_ir] AltPush
007CE7r 2  CA               dex
007CE8r 2  CA               dex
007CE9r 2  B5 03            lda $03,x
007CEBr 2  48               pha
007CECr 2  B5 02            lda $02,x
007CEEr 2  48               pha
007CEFr 2               
007CEFr 2               ; src/prelude.fth:21:8 in `0=`
007CEFr 2               @OPCODE_4109:   ; [c64_ir] JumpIf0(185)
007CEFr 2  CA               dex
007CF0r 2  CA               dex
007CF1r 2  B5 02            lda $02,x
007CF3r 2  15 03            ora $03,x
007CF5r 2  D0 03            bne *+5
007CF7r 2  4C rr rr         jmp @target_185
007CFAr 2               
007CFAr 2               @target_184:
007CFAr 2               
007CFAr 2               ; src/prelude.fth:21:11 in `0=`
007CFAr 2               @OPCODE_4111:   ; [c64_ir] PushLiteral(0)
007CFAr 2  E8               inx
007CFBr 2  E8               inx
007CFCr 2  A9 00            lda #0
007CFEr 2  95 00            sta $00,x
007D00r 2  A9 00            lda #0
007D02r 2  95 01            sta $01,x
007D04r 2               
007D04r 2               ; src/prelude.fth:21:13 in `0=`
007D04r 2               @OPCODE_4112:   ; [c64_ir] JumpElse(186)
007D04r 2  4C rr rr         jmp @target_186
007D07r 2               
007D07r 2               @target_185:
007D07r 2               
007D07r 2               ; src/prelude.fth:21:18 in `0=`
007D07r 2               @OPCODE_4114:   ; [c64_ir] PushLiteral(-1)
007D07r 2  E8               inx
007D08r 2  E8               inx
007D09r 2  A9 FF            lda #255
007D0Br 2  95 00            sta $00,x
007D0Dr 2  A9 FF            lda #255
007D0Fr 2  95 01            sta $01,x
007D11r 2               
007D11r 2               ; src/prelude.fth:21:21 in `0=`
007D11r 2               @OPCODE_4115:   ; [c64_ir] JumpTarget(185)
007D11r 2               
007D11r 2               @target_186:
007D11r 2               
007D11r 2               ; <inline>:0:0 in `main`
007D11r 2               @OPCODE_4117:   ; [c64_ir] AltPop
007D11r 2  E8               inx
007D12r 2  E8               inx
007D13r 2  68               pla
007D14r 2  95 00            sta $00,x
007D16r 2  68               pla
007D17r 2  95 01            sta $01,x
007D19r 2               
007D19r 2               ; <inline>:0:0 in `main`
007D19r 2               @OPCODE_4118:   ; [c64_ir] Drop
007D19r 2  CA               dex
007D1Ar 2  CA               dex
007D1Br 2               
007D1Br 2               ; <inline>:0:0 in `main`
007D1Br 2               @OPCODE_4119:   ; [c64_ir] AltPop
007D1Br 2  E8               inx
007D1Cr 2  E8               inx
007D1Dr 2  68               pla
007D1Er 2  95 00            sta $00,x
007D20r 2  68               pla
007D21r 2  95 01            sta $01,x
007D23r 2               
007D23r 2               ; <inline>:0:0 in `main`
007D23r 2               @OPCODE_4120:   ; [c64_ir] Drop
007D23r 2  CA               dex
007D24r 2  CA               dex
007D25r 2               
007D25r 2               ; <inline>:0:0 in `main`
007D25r 2               @OPCODE_4121:   ; [c64_ir] PushLiteral(7777)
007D25r 2  E8               inx
007D26r 2  E8               inx
007D27r 2  A9 61            lda #97
007D29r 2  95 00            sta $00,x
007D2Br 2  A9 1E            lda #30
007D2Dr 2  95 01            sta $01,x
007D2Fr 2               
007D2Fr 2               ; <inline>:0:0 in `main`
007D2Fr 2               @OPCODE_4122:   ; [c64_ir] AltPush
007D2Fr 2  CA               dex
007D30r 2  CA               dex
007D31r 2  B5 03            lda $03,x
007D33r 2  48               pha
007D34r 2  B5 02            lda $02,x
007D36r 2  48               pha
007D37r 2               
007D37r 2               ; src/prelude.fth:3:10 in `swap`
007D37r 2               @OPCODE_4123:   ; [c64_ir] AltPush
007D37r 2  CA               dex
007D38r 2  CA               dex
007D39r 2  B5 03            lda $03,x
007D3Br 2  48               pha
007D3Cr 2  B5 02            lda $02,x
007D3Er 2  48               pha
007D3Fr 2               
007D3Fr 2               ; src/prelude.fth:3:13 in `swap`
007D3Fr 2               @OPCODE_4124:   ; [c64_ir] TempStore
007D3Fr 2  CA               dex
007D40r 2  CA               dex
007D41r 2  B5 03            lda $03,x
007D43r 2  85 96            sta TEMP_PAX2
007D45r 2  B5 02            lda $02,x
007D47r 2  85 95            sta TEMP_PAX1
007D49r 2               
007D49r 2               ; src/prelude.fth:3:19 in `swap`
007D49r 2               @OPCODE_4125:   ; [c64_ir] AltPop
007D49r 2  E8               inx
007D4Ar 2  E8               inx
007D4Br 2  68               pla
007D4Cr 2  95 00            sta $00,x
007D4Er 2  68               pla
007D4Fr 2  95 01            sta $01,x
007D51r 2               
007D51r 2               ; src/prelude.fth:3:22 in `swap`
007D51r 2               @OPCODE_4126:   ; [c64_ir] TempLoad
007D51r 2  E8               inx
007D52r 2  E8               inx
007D53r 2  A5 95            lda TEMP_PAX1
007D55r 2  95 00            sta $00,x
007D57r 2  A5 96            lda TEMP_PAX2
007D59r 2  95 01            sta $01,x
007D5Br 2               
007D5Br 2               ; <inline>:0:0 in `main`
007D5Br 2               @OPCODE_4127:   ; [c64_ir] AltPop
007D5Br 2  E8               inx
007D5Cr 2  E8               inx
007D5Dr 2  68               pla
007D5Er 2  95 00            sta $00,x
007D60r 2  68               pla
007D61r 2  95 01            sta $01,x
007D63r 2               
007D63r 2               ; <inline>:0:0 in `main`
007D63r 2               @OPCODE_4128:   ; [c64_ir] Drop
007D63r 2  CA               dex
007D64r 2  CA               dex
007D65r 2               
007D65r 2               ; src/prelude.fth:33:42 in `loopimpl`
007D65r 2               @OPCODE_4129:   ; [c64_ir] AltPush
007D65r 2  CA               dex
007D66r 2  CA               dex
007D67r 2  B5 03            lda $03,x
007D69r 2  48               pha
007D6Ar 2  B5 02            lda $02,x
007D6Cr 2  48               pha
007D6Dr 2               
007D6Dr 2               ; <inline>:0:0 in `main`
007D6Dr 2               @OPCODE_4130:   ; [c64_ir] AltPop
007D6Dr 2  E8               inx
007D6Er 2  E8               inx
007D6Fr 2  68               pla
007D70r 2  95 00            sta $00,x
007D72r 2  68               pla
007D73r 2  95 01            sta $01,x
007D75r 2               
007D75r 2               ; <inline>:0:0 in `main`
007D75r 2               @OPCODE_4131:   ; [c64_ir] Drop
007D75r 2  CA               dex
007D76r 2  CA               dex
007D77r 2               
007D77r 2               ; src/prelude.fth:44:25 in `*`
007D77r 2               @OPCODE_4132:   ; [c64_ir] LoopIf0(183)
007D77r 2  CA               dex
007D78r 2  CA               dex
007D79r 2  B5 02            lda $02,x
007D7Br 2  15 03            ora $03,x
007D7Dr 2  D0 03            bne *+5
007D7Fr 2  4C rr rr         jmp @target_183
007D82r 2               
007D82r 2               @target_187:
007D82r 2               
007D82r 2               ; src/prelude.fth:44:25 in `*`
007D82r 2               @OPCODE_4134:   ; [c64_ir] AltPop
007D82r 2  E8               inx
007D83r 2  E8               inx
007D84r 2  68               pla
007D85r 2  95 00            sta $00,x
007D87r 2  68               pla
007D88r 2  95 01            sta $01,x
007D8Ar 2               
007D8Ar 2               ; src/prelude.fth:44:25 in `*`
007D8Ar 2               @OPCODE_4135:   ; [c64_ir] Drop
007D8Ar 2  CA               dex
007D8Br 2  CA               dex
007D8Cr 2               
007D8Cr 2               ; src/prelude.fth:44:25 in `*`
007D8Cr 2               @OPCODE_4136:   ; [c64_ir] AltPop
007D8Cr 2  E8               inx
007D8Dr 2  E8               inx
007D8Er 2  68               pla
007D8Fr 2  95 00            sta $00,x
007D91r 2  68               pla
007D92r 2  95 01            sta $01,x
007D94r 2               
007D94r 2               ; src/prelude.fth:44:25 in `*`
007D94r 2               @OPCODE_4137:   ; [c64_ir] Drop
007D94r 2  CA               dex
007D95r 2  CA               dex
007D96r 2               
007D96r 2               ; <inline>:0:0 in `main`
007D96r 2               @OPCODE_4138:   ; [c64_ir] PushLiteral(7777)
007D96r 2  E8               inx
007D97r 2  E8               inx
007D98r 2  A9 61            lda #97
007D9Ar 2  95 00            sta $00,x
007D9Cr 2  A9 1E            lda #30
007D9Er 2  95 01            sta $01,x
007DA0r 2               
007DA0r 2               ; <inline>:0:0 in `main`
007DA0r 2               @OPCODE_4139:   ; [c64_ir] AltPush
007DA0r 2  CA               dex
007DA1r 2  CA               dex
007DA2r 2  B5 03            lda $03,x
007DA4r 2  48               pha
007DA5r 2  B5 02            lda $02,x
007DA7r 2  48               pha
007DA8r 2               
007DA8r 2               ; src/prelude.fth:3:10 in `swap`
007DA8r 2               @OPCODE_4140:   ; [c64_ir] AltPush
007DA8r 2  CA               dex
007DA9r 2  CA               dex
007DAAr 2  B5 03            lda $03,x
007DACr 2  48               pha
007DADr 2  B5 02            lda $02,x
007DAFr 2  48               pha
007DB0r 2               
007DB0r 2               ; src/prelude.fth:3:13 in `swap`
007DB0r 2               @OPCODE_4141:   ; [c64_ir] TempStore
007DB0r 2  CA               dex
007DB1r 2  CA               dex
007DB2r 2  B5 03            lda $03,x
007DB4r 2  85 96            sta TEMP_PAX2
007DB6r 2  B5 02            lda $02,x
007DB8r 2  85 95            sta TEMP_PAX1
007DBAr 2               
007DBAr 2               ; src/prelude.fth:3:19 in `swap`
007DBAr 2               @OPCODE_4142:   ; [c64_ir] AltPop
007DBAr 2  E8               inx
007DBBr 2  E8               inx
007DBCr 2  68               pla
007DBDr 2  95 00            sta $00,x
007DBFr 2  68               pla
007DC0r 2  95 01            sta $01,x
007DC2r 2               
007DC2r 2               ; src/prelude.fth:3:22 in `swap`
007DC2r 2               @OPCODE_4143:   ; [c64_ir] TempLoad
007DC2r 2  E8               inx
007DC3r 2  E8               inx
007DC4r 2  A5 95            lda TEMP_PAX1
007DC6r 2  95 00            sta $00,x
007DC8r 2  A5 96            lda TEMP_PAX2
007DCAr 2  95 01            sta $01,x
007DCCr 2               
007DCCr 2               ; <inline>:0:0 in `main`
007DCCr 2               @OPCODE_4144:   ; [c64_ir] AltPop
007DCCr 2  E8               inx
007DCDr 2  E8               inx
007DCEr 2  68               pla
007DCFr 2  95 00            sta $00,x
007DD1r 2  68               pla
007DD2r 2  95 01            sta $01,x
007DD4r 2               
007DD4r 2               ; <inline>:0:0 in `main`
007DD4r 2               @OPCODE_4145:   ; [c64_ir] Drop
007DD4r 2  CA               dex
007DD5r 2  CA               dex
007DD6r 2               
007DD6r 2               ; src/prelude.fth:44:35 in `*`
007DD6r 2               @OPCODE_4146:   ; [c64_ir] Drop
007DD6r 2  CA               dex
007DD7r 2  CA               dex
007DD8r 2               
007DD8r 2               ; <inline>:0:0 in `main`
007DD8r 2               @OPCODE_4147:   ; [c64_ir] AltPop
007DD8r 2  E8               inx
007DD9r 2  E8               inx
007DDAr 2  68               pla
007DDBr 2  95 00            sta $00,x
007DDDr 2  68               pla
007DDEr 2  95 01            sta $01,x
007DE0r 2               
007DE0r 2               ; <inline>:0:0 in `main`
007DE0r 2               @OPCODE_4148:   ; [c64_ir] Drop
007DE0r 2  CA               dex
007DE1r 2  CA               dex
007DE2r 2               
007DE2r 2               ; snake.fth:48:39 in `convert-x-y`
007DE2r 2               @OPCODE_4149:   ; [c64_ir] Add
007DE2r 2                   ; 21
007DE2r 2  CA               dex
007DE3r 2  CA               dex
007DE4r 2  18               clc
007DE5r 2  B5 00            lda $00,x
007DE7r 2  75 02            adc $02,x
007DE9r 2  95 00            sta $00,x
007DEBr 2  B5 01            lda $01,x
007DEDr 2  75 03            adc $03,x
007DEFr 2  95 01            sta $01,x
007DF1r 2               
007DF1r 2               ; <inline>:0:0 in `main`
007DF1r 2               @OPCODE_4150:   ; [c64_ir] AltPop
007DF1r 2  E8               inx
007DF2r 2  E8               inx
007DF3r 2  68               pla
007DF4r 2  95 00            sta $00,x
007DF6r 2  68               pla
007DF7r 2  95 01            sta $01,x
007DF9r 2               
007DF9r 2               ; <inline>:0:0 in `main`
007DF9r 2               @OPCODE_4151:   ; [c64_ir] Drop
007DF9r 2  CA               dex
007DFAr 2  CA               dex
007DFBr 2               
007DFBr 2               ; snake.fth:196:15 in `check-collision`
007DFBr 2               @OPCODE_4152:   ; [c64_ir] PushLiteral(1024)
007DFBr 2  E8               inx
007DFCr 2  E8               inx
007DFDr 2  A9 00            lda #0
007DFFr 2  95 00            sta $00,x
007E01r 2  A9 04            lda #4
007E03r 2  95 01            sta $01,x
007E05r 2               
007E05r 2               ; snake.fth:196:24 in `check-collision`
007E05r 2               @OPCODE_4153:   ; [c64_ir] Add
007E05r 2                   ; 21
007E05r 2  CA               dex
007E06r 2  CA               dex
007E07r 2  18               clc
007E08r 2  B5 00            lda $00,x
007E0Ar 2  75 02            adc $02,x
007E0Cr 2  95 00            sta $00,x
007E0Er 2  B5 01            lda $01,x
007E10r 2  75 03            adc $03,x
007E12r 2  95 01            sta $01,x
007E14r 2               
007E14r 2               ; snake.fth:196:26 in `check-collision`
007E14r 2               @OPCODE_4154:   ; [c64_ir] Load8
007E14r 2  A1 00            lda ($00,x)
007E16r 2  95 00            sta $00,x
007E18r 2  A9 00            lda #0
007E1Ar 2  95 01            sta $01,x
007E1Cr 2               
007E1Cr 2               ; snake.fth:199:3 in `check-collision`
007E1Cr 2               @OPCODE_4155:   ; [c64_ir] PushLiteral(32)
007E1Cr 2  E8               inx
007E1Dr 2  E8               inx
007E1Er 2  A9 20            lda #32
007E20r 2  95 00            sta $00,x
007E22r 2  A9 00            lda #0
007E24r 2  95 01            sta $01,x
007E26r 2               
007E26r 2               ; <inline>:0:0 in `main`
007E26r 2               @OPCODE_4156:   ; [c64_ir] PushLiteral(7777)
007E26r 2  E8               inx
007E27r 2  E8               inx
007E28r 2  A9 61            lda #97
007E2Ar 2  95 00            sta $00,x
007E2Cr 2  A9 1E            lda #30
007E2Er 2  95 01            sta $01,x
007E30r 2               
007E30r 2               ; <inline>:0:0 in `main`
007E30r 2               @OPCODE_4157:   ; [c64_ir] AltPush
007E30r 2  CA               dex
007E31r 2  CA               dex
007E32r 2  B5 03            lda $03,x
007E34r 2  48               pha
007E35r 2  B5 02            lda $02,x
007E37r 2  48               pha
007E38r 2               
007E38r 2               ; <inline>:0:0 in `main`
007E38r 2               @OPCODE_4158:   ; [c64_ir] PushLiteral(7777)
007E38r 2  E8               inx
007E39r 2  E8               inx
007E3Ar 2  A9 61            lda #97
007E3Cr 2  95 00            sta $00,x
007E3Er 2  A9 1E            lda #30
007E40r 2  95 01            sta $01,x
007E42r 2               
007E42r 2               ; <inline>:0:0 in `main`
007E42r 2               @OPCODE_4159:   ; [c64_ir] AltPush
007E42r 2  CA               dex
007E43r 2  CA               dex
007E44r 2  B5 03            lda $03,x
007E46r 2  48               pha
007E47r 2  B5 02            lda $02,x
007E49r 2  48               pha
007E4Ar 2               
007E4Ar 2               ; <inline>:0:0 in `main`
007E4Ar 2               @OPCODE_4160:   ; [c64_ir] PushLiteral(7777)
007E4Ar 2  E8               inx
007E4Br 2  E8               inx
007E4Cr 2  A9 61            lda #97
007E4Er 2  95 00            sta $00,x
007E50r 2  A9 1E            lda #30
007E52r 2  95 01            sta $01,x
007E54r 2               
007E54r 2               ; <inline>:0:0 in `main`
007E54r 2               @OPCODE_4161:   ; [c64_ir] AltPush
007E54r 2  CA               dex
007E55r 2  CA               dex
007E56r 2  B5 03            lda $03,x
007E58r 2  48               pha
007E59r 2  B5 02            lda $02,x
007E5Br 2  48               pha
007E5Cr 2               
007E5Cr 2               ; <inline>:0:0 in `main`
007E5Cr 2               @OPCODE_4162:   ; [c64_ir] PushLiteral(7777)
007E5Cr 2  E8               inx
007E5Dr 2  E8               inx
007E5Er 2  A9 61            lda #97
007E60r 2  95 00            sta $00,x
007E62r 2  A9 1E            lda #30
007E64r 2  95 01            sta $01,x
007E66r 2               
007E66r 2               ; <inline>:0:0 in `main`
007E66r 2               @OPCODE_4163:   ; [c64_ir] AltPush
007E66r 2  CA               dex
007E67r 2  CA               dex
007E68r 2  B5 03            lda $03,x
007E6Ar 2  48               pha
007E6Br 2  B5 02            lda $02,x
007E6Dr 2  48               pha
007E6Er 2               
007E6Er 2               ; src/prelude.fth:14:12 in `invert`
007E6Er 2               @OPCODE_4164:   ; [c64_ir] PushLiteral(-1)
007E6Er 2  E8               inx
007E6Fr 2  E8               inx
007E70r 2  A9 FF            lda #255
007E72r 2  95 00            sta $00,x
007E74r 2  A9 FF            lda #255
007E76r 2  95 01            sta $01,x
007E78r 2               
007E78r 2               ; src/prelude.fth:14:15 in `invert`
007E78r 2               @OPCODE_4165:   ; [c64_ir] Nand
007E78r 2                   ; 26
007E78r 2  CA               dex
007E79r 2  CA               dex
007E7Ar 2  B5 00            lda $00,x
007E7Cr 2  35 02            and $02,x
007E7Er 2  49 FF            eor #$ff
007E80r 2  95 00            sta $00,x
007E82r 2  B5 01            lda $01,x
007E84r 2  35 03            and $03,x
007E86r 2  49 FF            eor #$ff
007E88r 2  95 01            sta $01,x
007E8Ar 2               
007E8Ar 2               ; <inline>:0:0 in `main`
007E8Ar 2               @OPCODE_4166:   ; [c64_ir] AltPop
007E8Ar 2  E8               inx
007E8Br 2  E8               inx
007E8Cr 2  68               pla
007E8Dr 2  95 00            sta $00,x
007E8Fr 2  68               pla
007E90r 2  95 01            sta $01,x
007E92r 2               
007E92r 2               ; <inline>:0:0 in `main`
007E92r 2               @OPCODE_4167:   ; [c64_ir] Drop
007E92r 2  CA               dex
007E93r 2  CA               dex
007E94r 2               
007E94r 2               ; src/prelude.fth:15:19 in `negate`
007E94r 2               @OPCODE_4168:   ; [c64_ir] PushLiteral(1)
007E94r 2  E8               inx
007E95r 2  E8               inx
007E96r 2  A9 01            lda #1
007E98r 2  95 00            sta $00,x
007E9Ar 2  A9 00            lda #0
007E9Cr 2  95 01            sta $01,x
007E9Er 2               
007E9Er 2               ; src/prelude.fth:15:21 in `negate`
007E9Er 2               @OPCODE_4169:   ; [c64_ir] Add
007E9Er 2                   ; 21
007E9Er 2  CA               dex
007E9Fr 2  CA               dex
007EA0r 2  18               clc
007EA1r 2  B5 00            lda $00,x
007EA3r 2  75 02            adc $02,x
007EA5r 2  95 00            sta $00,x
007EA7r 2  B5 01            lda $01,x
007EA9r 2  75 03            adc $03,x
007EABr 2  95 01            sta $01,x
007EADr 2               
007EADr 2               ; <inline>:0:0 in `main`
007EADr 2               @OPCODE_4170:   ; [c64_ir] AltPop
007EADr 2  E8               inx
007EAEr 2  E8               inx
007EAFr 2  68               pla
007EB0r 2  95 00            sta $00,x
007EB2r 2  68               pla
007EB3r 2  95 01            sta $01,x
007EB5r 2               
007EB5r 2               ; <inline>:0:0 in `main`
007EB5r 2               @OPCODE_4171:   ; [c64_ir] Drop
007EB5r 2  CA               dex
007EB6r 2  CA               dex
007EB7r 2               
007EB7r 2               ; src/prelude.fth:16:19 in `-`
007EB7r 2               @OPCODE_4172:   ; [c64_ir] Add
007EB7r 2                   ; 21
007EB7r 2  CA               dex
007EB8r 2  CA               dex
007EB9r 2  18               clc
007EBAr 2  B5 00            lda $00,x
007EBCr 2  75 02            adc $02,x
007EBEr 2  95 00            sta $00,x
007EC0r 2  B5 01            lda $01,x
007EC2r 2  75 03            adc $03,x
007EC4r 2  95 01            sta $01,x
007EC6r 2               
007EC6r 2               ; <inline>:0:0 in `main`
007EC6r 2               @OPCODE_4173:   ; [c64_ir] AltPop
007EC6r 2  E8               inx
007EC7r 2  E8               inx
007EC8r 2  68               pla
007EC9r 2  95 00            sta $00,x
007ECBr 2  68               pla
007ECCr 2  95 01            sta $01,x
007ECEr 2               
007ECEr 2               ; <inline>:0:0 in `main`
007ECEr 2               @OPCODE_4174:   ; [c64_ir] Drop
007ECEr 2  CA               dex
007ECFr 2  CA               dex
007ED0r 2               
007ED0r 2               ; <inline>:0:0 in `main`
007ED0r 2               @OPCODE_4175:   ; [c64_ir] PushLiteral(7777)
007ED0r 2  E8               inx
007ED1r 2  E8               inx
007ED2r 2  A9 61            lda #97
007ED4r 2  95 00            sta $00,x
007ED6r 2  A9 1E            lda #30
007ED8r 2  95 01            sta $01,x
007EDAr 2               
007EDAr 2               ; <inline>:0:0 in `main`
007EDAr 2               @OPCODE_4176:   ; [c64_ir] AltPush
007EDAr 2  CA               dex
007EDBr 2  CA               dex
007EDCr 2  B5 03            lda $03,x
007EDEr 2  48               pha
007EDFr 2  B5 02            lda $02,x
007EE1r 2  48               pha
007EE2r 2               
007EE2r 2               ; src/prelude.fth:21:8 in `0=`
007EE2r 2               @OPCODE_4177:   ; [c64_ir] JumpIf0(189)
007EE2r 2  CA               dex
007EE3r 2  CA               dex
007EE4r 2  B5 02            lda $02,x
007EE6r 2  15 03            ora $03,x
007EE8r 2  D0 03            bne *+5
007EEAr 2  4C rr rr         jmp @target_189
007EEDr 2               
007EEDr 2               @target_188:
007EEDr 2               
007EEDr 2               ; src/prelude.fth:21:11 in `0=`
007EEDr 2               @OPCODE_4179:   ; [c64_ir] PushLiteral(0)
007EEDr 2  E8               inx
007EEEr 2  E8               inx
007EEFr 2  A9 00            lda #0
007EF1r 2  95 00            sta $00,x
007EF3r 2  A9 00            lda #0
007EF5r 2  95 01            sta $01,x
007EF7r 2               
007EF7r 2               ; src/prelude.fth:21:13 in `0=`
007EF7r 2               @OPCODE_4180:   ; [c64_ir] JumpElse(190)
007EF7r 2  4C rr rr         jmp @target_190
007EFAr 2               
007EFAr 2               @target_189:
007EFAr 2               
007EFAr 2               ; src/prelude.fth:21:18 in `0=`
007EFAr 2               @OPCODE_4182:   ; [c64_ir] PushLiteral(-1)
007EFAr 2  E8               inx
007EFBr 2  E8               inx
007EFCr 2  A9 FF            lda #255
007EFEr 2  95 00            sta $00,x
007F00r 2  A9 FF            lda #255
007F02r 2  95 01            sta $01,x
007F04r 2               
007F04r 2               ; src/prelude.fth:21:21 in `0=`
007F04r 2               @OPCODE_4183:   ; [c64_ir] JumpTarget(189)
007F04r 2               
007F04r 2               @target_190:
007F04r 2               
007F04r 2               ; <inline>:0:0 in `main`
007F04r 2               @OPCODE_4185:   ; [c64_ir] AltPop
007F04r 2  E8               inx
007F05r 2  E8               inx
007F06r 2  68               pla
007F07r 2  95 00            sta $00,x
007F09r 2  68               pla
007F0Ar 2  95 01            sta $01,x
007F0Cr 2               
007F0Cr 2               ; <inline>:0:0 in `main`
007F0Cr 2               @OPCODE_4186:   ; [c64_ir] Drop
007F0Cr 2  CA               dex
007F0Dr 2  CA               dex
007F0Er 2               
007F0Er 2               ; <inline>:0:0 in `main`
007F0Er 2               @OPCODE_4187:   ; [c64_ir] AltPop
007F0Er 2  E8               inx
007F0Fr 2  E8               inx
007F10r 2  68               pla
007F11r 2  95 00            sta $00,x
007F13r 2  68               pla
007F14r 2  95 01            sta $01,x
007F16r 2               
007F16r 2               ; <inline>:0:0 in `main`
007F16r 2               @OPCODE_4188:   ; [c64_ir] Drop
007F16r 2  CA               dex
007F17r 2  CA               dex
007F18r 2               
007F18r 2               ; <inline>:0:0 in `main`
007F18r 2               @OPCODE_4189:   ; [c64_ir] AltPop
007F18r 2  E8               inx
007F19r 2  E8               inx
007F1Ar 2  68               pla
007F1Br 2  95 00            sta $00,x
007F1Dr 2  68               pla
007F1Er 2  95 01            sta $01,x
007F20r 2               
007F20r 2               ; <inline>:0:0 in `main`
007F20r 2               @OPCODE_4190:   ; [c64_ir] Drop
007F20r 2  CA               dex
007F21r 2  CA               dex
007F22r 2               
007F22r 2               ; snake.fth:224:1 in `main`
007F22r 2               @OPCODE_4191:   ; [c64_ir] JumpIf0(192)
007F22r 2  CA               dex
007F23r 2  CA               dex
007F24r 2  B5 02            lda $02,x
007F26r 2  15 03            ora $03,x
007F28r 2  D0 03            bne *+5
007F2Ar 2  4C rr rr         jmp @target_192
007F2Dr 2               
007F2Dr 2               @target_191:
007F2Dr 2               
007F2Dr 2               ; snake.fth:224:4 in `main`
007F2Dr 2               @OPCODE_4193:   ; [c64_ir] JumpElse(193)
007F2Dr 2  4C rr rr         jmp @target_193
007F30r 2               
007F30r 2               @target_192:
007F30r 2               
007F30r 2               ; snake.fth:224:9 in `main`
007F30r 2               @OPCODE_4195:   ; [c64_ir] PushLiteral(0)
007F30r 2  E8               inx
007F31r 2  E8               inx
007F32r 2  A9 00            lda #0
007F34r 2  95 00            sta $00,x
007F36r 2  A9 00            lda #0
007F38r 2  95 01            sta $01,x
007F3Ar 2               
007F3Ar 2               ; snake.fth:224:11 in `main`
007F3Ar 2               @OPCODE_4196:   ; [c64_ir] PushLiteral(-28672)
007F3Ar 2  E8               inx
007F3Br 2  E8               inx
007F3Cr 2  A9 00            lda #0
007F3Er 2  95 00            sta $00,x
007F40r 2  A9 90            lda #144
007F42r 2  95 01            sta $01,x
007F44r 2               
007F44r 2               ; snake.fth:224:23 in `main`
007F44r 2               @OPCODE_4197:   ; [c64_ir] Store
007F44r 2  CA               dex
007F45r 2  CA               dex
007F46r 2  CA               dex
007F47r 2  CA               dex
007F48r 2  B5 02            lda $02,x
007F4Ar 2  81 04            sta ($04,x)
007F4Cr 2                   ; TODO high byte
007F4Cr 2               
007F4Cr 2               ; snake.fth:224:25 in `main`
007F4Cr 2               @OPCODE_4198:   ; [c64_ir] JumpTarget(192)
007F4Cr 2               
007F4Cr 2               @target_193:
007F4Cr 2               
007F4Cr 2               ; :0:0 in ``
007F4Cr 2               @OPCODE_4200:   ; [c64_ir] Exit
007F4Cr 2  60               rts
007F4Dr 2               .endproc
007F4Dr 2               
007F4Dr 2               
007F4Dr 2               
007F4Dr 2               
007F4Dr 2               
007F4Dr 2               ; function start
007F4Dr 2               
007F4Dr 2               
007F4Dr 2               
007F4Dr 1               

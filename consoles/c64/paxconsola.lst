ca65 V2.18 - Git N/A
Main file   : paxconsola.s
Current file: paxconsola.s

000000r 1               GFX = $0400
000000r 1               
000000r 1               ;helpful labels
000000r 1               ; https://gist.github.com/biomood/1001256
000000r 1               CLEAR = $E544
000000r 1               GETIN  =  $FFE4
000000r 1               SCNKEY =  $FF9F
000000r 1               
000000r 1               ; Override Datasette ram
000000r 1               TEMP = $92
000000r 1               TEMP2 = $93
000000r 1               TEMP3 = $94
000000r 1               
000000r 1               TEMP_PAX1 = $95
000000r 1               TEMP_PAX2 = $96
000000r 1               
000000r 1               STACK_RESERVE = $97
000000r 1               
000000r 1               ; Can override all BASIC values
000000r 1               ; https://csdb.dk/forums/index.php?roomid=11&topicid=3541&showallposts=1
000000r 1               X_START = $02
000000r 1               X_END = $7f
000000r 1               
000000r 1               .code
000000r 1                   ; Make screen black and text white
000000r 1  A9 00            lda #$00
000002r 1  8D 20 D0         sta $d020
000005r 1  8D 21 D0         sta $d021
000008r 1  A9 01            lda #$01
00000Ar 1  8D 86 02         sta $0286
00000Dr 1               
00000Dr 1                   ; Select charset
00000Dr 1  A9 17            lda #23
00000Fr 1  8D 18 D0         sta $d018
000012r 1               
000012r 1                   ; Clear the screen
000012r 1  20 44 E5         jsr $e544
000015r 1               
000015r 1                   ; draw some helpful text
000015r 1  20 rr rr         jsr draw_text
000018r 1               
000018r 1  A9 00            lda #00
00001Ar 1  A2 7D            ldx #(X_END-X_START)
00001Cr 1               ClearReturnStackLoop:
00001Cr 1  95 02            sta X_START,x
00001Er 1  CA               dex
00001Fr 1  10 FB            bpl ClearReturnStackLoop
000021r 1               
000021r 1  A9 00            lda #$00
000023r 1  A2 FF            ldx #$ff
000025r 1               ClearMemoryLoop:
000025r 1  9D 00 90         sta $9000,x
000028r 1  CA               dex
000029r 1  D0 FA            bne ClearMemoryLoop
00002Br 1               
00002Br 1               
00002Br 1               before_mainloop:
00002Br 1  EA               nop
00002Cr 1               mainloop:
00002Cr 1  AD 11 D0         lda $d011
00002Fr 1  10 FB            bpl mainloop ; no: go to mainloop
000031r 1               
000031r 1               pax_start:
000031r 1                   ; disable inerrupts
000031r 1  78               sei
000032r 1                   ; store stack pointer, since execution might not be clean
000032r 1  BA               tsx
000033r 1  86 97            stx STACK_RESERVE
000035r 1               
000035r 1                   ; Set up PAX registers for execution
000035r 1                   ; X=return stack pointer, Y = high byte of TOS, A = low byte of TOS
000035r 1  A2 02            ldx #X_START
000037r 1  A9 00            lda #0
000039r 1  A0 00            ldy #0
00003Br 1               
00003Br 1  20 rr rr         jsr PAX_FN_main
00003Er 1               
00003Er 1                   ; restore stack
00003Er 1  A6 97            ldx STACK_RESERVE
000040r 1  9A               txs
000041r 1                   ; re-enable interrupts
000041r 1  58               cli
000042r 1               
000042r 1               
000042r 1  A9 05            LDA #5
000044r 1  85 7F            STA $7f
000046r 1               
000046r 1  20 9F FF         JSR SCNKEY      ;SCAN KEYBOARD
000049r 1  20 E4 FF         JSR GETIN       ;GET CHARACTER
00004Cr 1  C9 00            CMP #0          ;IS IT NULL?
00004Er 1  F0 2F            BEQ pax_finished  ;no? skip
000050r 1               
000050r 1               
000050r 1               START	:
000050r 1  C9 57            CMP #87		;W - up
000052r 1  F0 0F            BEQ UP
000054r 1               
000054r 1  C9 53            CMP #83		;S - down
000056r 1  F0 12            BEQ DOWN
000058r 1               
000058r 1  C9 41            CMP #65		;A - left
00005Ar 1  F0 15            BEQ LEFT
00005Cr 1               
00005Cr 1  C9 44            CMP #68		;D - right
00005Er 1  F0 18            BEQ RIGHT
000060r 1               
000060r 1                   ;CMP ENTER	;end if enter clicked
000060r 1                   ;BEQ END
000060r 1               
000060r 1  4C rr rr         JMP pax_finished
000063r 1               
000063r 1               UP:
000063r 1  A9 26            LDA #38
000065r 1  85 7E            STA $7e
000067r 1  4C rr rr         JMP pax_finished
00006Ar 1               
00006Ar 1               DOWN:
00006Ar 1  A9 28            LDA #40
00006Cr 1  85 7E            STA $7e
00006Er 1  4C rr rr         JMP pax_finished
000071r 1               
000071r 1               LEFT:
000071r 1  A9 25            LDA #37
000073r 1  85 7E            STA $7e
000075r 1  4C rr rr         JMP pax_finished
000078r 1               
000078r 1               RIGHT:
000078r 1  A9 27            LDA #39
00007Ar 1  85 7E            STA $7e
00007Cr 1  4C rr rr         JMP pax_finished
00007Fr 1               
00007Fr 1               
00007Fr 1               pax_finished:
00007Fr 1  4C rr rr         jmp mainloop
000082r 1               
000082r 1               
000082r 1               msg:
000082r 1  20 20 20 20      .asciiz "              snake world!              "
000086r 1  20 20 20 20  
00008Ar 1  20 20 20 20  
0000ABr 1               
0000ABr 1               draw_text:
0000ABr 1  A2 00            ldx #$00
0000ADr 1               draw_loop:
0000ADr 1  BD rr rr         lda msg,x
0000B0r 1  9D 18 05         sta $0518,x
0000B3r 1  E8               inx
0000B4r 1  E0 28            cpx #$28
0000B6r 1  D0 F5            bne draw_loop
0000B8r 1  60               rts
0000B9r 1               
0000B9r 1                   .include "generated.asm"
0000B9r 2               .proc PAX_FN_main
0000B9r 2               @target_0:
0000B9r 2               
0000B9r 2               ; snake.pax:205:1 in `main`
0000B9r 2               @OPCODE_1:   ; [c64_ir] PushLiteral(-28672)
0000B9r 2  E8               inx
0000BAr 2  E8               inx
0000BBr 2  A9 00            lda #0
0000BDr 2  95 00            sta $00,x
0000BFr 2  A9 90            lda #144
0000C1r 2  95 01            sta $01,x
0000C3r 2               
0000C3r 2               ; snake.pax:205:13 in `main`
0000C3r 2               @OPCODE_2:   ; [c64_ir] Load
0000C3r 2  A1 00            lda ($00,x)
0000C5r 2  95 00            sta $00,x
0000C7r 2  A9 00            lda #0
0000C9r 2  95 01            sta $01,x
0000CBr 2               
0000CBr 2               ; src/prelude.fth:21:8 in `0=`
0000CBr 2               @OPCODE_3:   ; [c64_ir] JumpIf0(2)
0000CBr 2  CA               dex
0000CCr 2  CA               dex
0000CDr 2  B5 02            lda $02,x
0000CFr 2  15 03            ora $03,x
0000D1r 2  D0 03            bne *+5
0000D3r 2  4C rr rr         jmp @target_2
0000D6r 2               
0000D6r 2               @target_1:
0000D6r 2               
0000D6r 2               ; src/prelude.fth:21:11 in `0=`
0000D6r 2               @OPCODE_5:   ; [c64_ir] PushLiteral(0)
0000D6r 2  E8               inx
0000D7r 2  E8               inx
0000D8r 2  A9 00            lda #0
0000DAr 2  95 00            sta $00,x
0000DCr 2  A9 00            lda #0
0000DEr 2  95 01            sta $01,x
0000E0r 2               
0000E0r 2               ; src/prelude.fth:21:13 in `0=`
0000E0r 2               @OPCODE_6:   ; [c64_ir] JumpElse(3)
0000E0r 2  4C rr rr         jmp @target_3
0000E3r 2               
0000E3r 2               @target_2:
0000E3r 2               
0000E3r 2               ; src/prelude.fth:21:18 in `0=`
0000E3r 2               @OPCODE_8:   ; [c64_ir] PushLiteral(-1)
0000E3r 2  E8               inx
0000E4r 2  E8               inx
0000E5r 2  A9 FF            lda #255
0000E7r 2  95 00            sta $00,x
0000E9r 2  A9 FF            lda #255
0000EBr 2  95 01            sta $01,x
0000EDr 2               
0000EDr 2               ; src/prelude.fth:21:21 in `0=`
0000EDr 2               @OPCODE_9:   ; [c64_ir] JumpTarget(2)
0000EDr 2               
0000EDr 2               @target_3:
0000EDr 2               
0000EDr 2               ; snake.pax:205:18 in `main`
0000EDr 2               @OPCODE_11:   ; [c64_ir] JumpIf0(55)
0000EDr 2  CA               dex
0000EEr 2  CA               dex
0000EFr 2  B5 02            lda $02,x
0000F1r 2  15 03            ora $03,x
0000F3r 2  D0 03            bne *+5
0000F5r 2  4C rr rr         jmp @target_55
0000F8r 2               
0000F8r 2               @target_4:
0000F8r 2               
0000F8r 2               ; <inline>:0:0 in `main`
0000F8r 2               @OPCODE_13:   ; [c64_ir] PushLiteral(7777)
0000F8r 2  E8               inx
0000F9r 2  E8               inx
0000FAr 2  A9 61            lda #97
0000FCr 2  95 00            sta $00,x
0000FEr 2  A9 1E            lda #30
000100r 2  95 01            sta $01,x
000102r 2               
000102r 2               ; <inline>:0:0 in `main`
000102r 2               @OPCODE_14:   ; [c64_ir] AltPush
000102r 2  CA               dex
000103r 2  CA               dex
000104r 2  B5 03            lda $03,x
000106r 2  48               pha
000107r 2  B5 02            lda $02,x
000109r 2  48               pha
00010Ar 2               
00010Ar 2               ; <inline>:0:0 in `main`
00010Ar 2               @OPCODE_15:   ; [c64_ir] PushLiteral(7777)
00010Ar 2  E8               inx
00010Br 2  E8               inx
00010Cr 2  A9 61            lda #97
00010Er 2  95 00            sta $00,x
000110r 2  A9 1E            lda #30
000112r 2  95 01            sta $01,x
000114r 2               
000114r 2               ; <inline>:0:0 in `main`
000114r 2               @OPCODE_16:   ; [c64_ir] AltPush
000114r 2  CA               dex
000115r 2  CA               dex
000116r 2  B5 03            lda $03,x
000118r 2  48               pha
000119r 2  B5 02            lda $02,x
00011Br 2  48               pha
00011Cr 2               
00011Cr 2               ; snake.pax:57:5 in `draw-background`
00011Cr 2               @OPCODE_17:   ; [c64_ir] PushLiteral(0)
00011Cr 2  E8               inx
00011Dr 2  E8               inx
00011Er 2  A9 00            lda #0
000120r 2  95 00            sta $00,x
000122r 2  A9 00            lda #0
000124r 2  95 01            sta $01,x
000126r 2               
000126r 2               ; snake.pax:58:5 in `draw-background`
000126r 2               @OPCODE_18:   ; [c64_ir] PushLiteral(25)
000126r 2  E8               inx
000127r 2  E8               inx
000128r 2  A9 19            lda #25
00012Ar 2  95 00            sta $00,x
00012Cr 2  A9 00            lda #0
00012Er 2  95 01            sta $01,x
000130r 2               
000130r 2               ; snake.pax:58:12 in `draw-background`
000130r 2               @OPCODE_19:   ; [c64_ir] PushLiteral(0)
000130r 2  E8               inx
000131r 2  E8               inx
000132r 2  A9 00            lda #0
000134r 2  95 00            sta $00,x
000136r 2  A9 00            lda #0
000138r 2  95 01            sta $01,x
00013Ar 2               
00013Ar 2               ; snake.pax:58:14 in `draw-background`
00013Ar 2               @OPCODE_20:   ; [c64_ir] AltPush
00013Ar 2  CA               dex
00013Br 2  CA               dex
00013Cr 2  B5 03            lda $03,x
00013Er 2  48               pha
00013Fr 2  B5 02            lda $02,x
000141r 2  48               pha
000142r 2               
000142r 2               ; snake.pax:58:14 in `draw-background`
000142r 2               @OPCODE_21:   ; [c64_ir] AltPush
000142r 2  CA               dex
000143r 2  CA               dex
000144r 2  B5 03            lda $03,x
000146r 2  48               pha
000147r 2  B5 02            lda $02,x
000149r 2  48               pha
00014Ar 2               
00014Ar 2               ; snake.pax:58:14 in `draw-background`
00014Ar 2               @OPCODE_22:   ; [c64_ir] LoopTarget(4)
00014Ar 2               
00014Ar 2               @target_5:
00014Ar 2               
00014Ar 2               ; snake.pax:59:9 in `draw-background`
00014Ar 2               @OPCODE_24:   ; [c64_ir] PushLiteral(40)
00014Ar 2  E8               inx
00014Br 2  E8               inx
00014Cr 2  A9 28            lda #40
00014Er 2  95 00            sta $00,x
000150r 2  A9 00            lda #0
000152r 2  95 01            sta $01,x
000154r 2               
000154r 2               ; snake.pax:59:15 in `draw-background`
000154r 2               @OPCODE_25:   ; [c64_ir] PushLiteral(0)
000154r 2  E8               inx
000155r 2  E8               inx
000156r 2  A9 00            lda #0
000158r 2  95 00            sta $00,x
00015Ar 2  A9 00            lda #0
00015Cr 2  95 01            sta $01,x
00015Er 2               
00015Er 2               ; snake.pax:59:17 in `draw-background`
00015Er 2               @OPCODE_26:   ; [c64_ir] AltPush
00015Er 2  CA               dex
00015Fr 2  CA               dex
000160r 2  B5 03            lda $03,x
000162r 2  48               pha
000163r 2  B5 02            lda $02,x
000165r 2  48               pha
000166r 2               
000166r 2               ; snake.pax:59:17 in `draw-background`
000166r 2               @OPCODE_27:   ; [c64_ir] AltPush
000166r 2  CA               dex
000167r 2  CA               dex
000168r 2  B5 03            lda $03,x
00016Ar 2  48               pha
00016Br 2  B5 02            lda $02,x
00016Dr 2  48               pha
00016Er 2               
00016Er 2               ; snake.pax:59:17 in `draw-background`
00016Er 2               @OPCODE_28:   ; [c64_ir] LoopTarget(5)
00016Er 2               
00016Er 2               @target_6:
00016Er 2               
00016Er 2               ; src/prelude.fth:4:13 in `over`
00016Er 2               @OPCODE_30:   ; [c64_ir] TempStore
00016Er 2  CA               dex
00016Fr 2  CA               dex
000170r 2  B5 03            lda $03,x
000172r 2  85 96            sta TEMP_PAX2
000174r 2  B5 02            lda $02,x
000176r 2  85 95            sta TEMP_PAX1
000178r 2               
000178r 2               ; src/prelude.fth:4:19 in `over`
000178r 2               @OPCODE_31:   ; [c64_ir] TempLoad
000178r 2  E8               inx
000179r 2  E8               inx
00017Ar 2  A5 95            lda TEMP_PAX1
00017Cr 2  95 00            sta $00,x
00017Er 2  A5 96            lda TEMP_PAX2
000180r 2  95 01            sta $01,x
000182r 2               
000182r 2               ; src/prelude.fth:4:25 in `over`
000182r 2               @OPCODE_32:   ; [c64_ir] PushLiteral(32)
000182r 2  E8               inx
000183r 2  E8               inx
000184r 2  A9 20            lda #32
000186r 2  95 00            sta $00,x
000188r 2  A9 00            lda #0
00018Ar 2  95 01            sta $01,x
00018Cr 2               
00018Cr 2               ; src/prelude.fth:4:28 in `over`
00018Cr 2               @OPCODE_33:   ; [c64_ir] TempLoad
00018Cr 2  E8               inx
00018Dr 2  E8               inx
00018Er 2  A5 95            lda TEMP_PAX1
000190r 2  95 00            sta $00,x
000192r 2  A5 96            lda TEMP_PAX2
000194r 2  95 01            sta $01,x
000196r 2               
000196r 2               ; src/prelude.fth:38:8 in `i`
000196r 2               @OPCODE_34:   ; [c64_ir] AltPop
000196r 2  E8               inx
000197r 2  E8               inx
000198r 2  68               pla
000199r 2  95 00            sta $00,x
00019Br 2  68               pla
00019Cr 2  95 01            sta $01,x
00019Er 2               
00019Er 2               ; src/prelude.fth:38:11 in `i`
00019Er 2               @OPCODE_35:   ; [c64_ir] AltPop
00019Er 2  E8               inx
00019Fr 2  E8               inx
0001A0r 2  68               pla
0001A1r 2  95 00            sta $00,x
0001A3r 2  68               pla
0001A4r 2  95 01            sta $01,x
0001A6r 2               
0001A6r 2               ; src/prelude.fth:38:14 in `i`
0001A6r 2               @OPCODE_36:   ; [c64_ir] TempStore
0001A6r 2  CA               dex
0001A7r 2  CA               dex
0001A8r 2  B5 03            lda $03,x
0001AAr 2  85 96            sta TEMP_PAX2
0001ACr 2  B5 02            lda $02,x
0001AEr 2  85 95            sta TEMP_PAX1
0001B0r 2               
0001B0r 2               ; src/prelude.fth:38:20 in `i`
0001B0r 2               @OPCODE_37:   ; [c64_ir] TempLoad
0001B0r 2  E8               inx
0001B1r 2  E8               inx
0001B2r 2  A5 95            lda TEMP_PAX1
0001B4r 2  95 00            sta $00,x
0001B6r 2  A5 96            lda TEMP_PAX2
0001B8r 2  95 01            sta $01,x
0001BAr 2               
0001BAr 2               ; src/prelude.fth:38:26 in `i`
0001BAr 2               @OPCODE_38:   ; [c64_ir] AltPush
0001BAr 2  CA               dex
0001BBr 2  CA               dex
0001BCr 2  B5 03            lda $03,x
0001BEr 2  48               pha
0001BFr 2  B5 02            lda $02,x
0001C1r 2  48               pha
0001C2r 2               
0001C2r 2               ; src/prelude.fth:38:29 in `i`
0001C2r 2               @OPCODE_39:   ; [c64_ir] AltPush
0001C2r 2  CA               dex
0001C3r 2  CA               dex
0001C4r 2  B5 03            lda $03,x
0001C6r 2  48               pha
0001C7r 2  B5 02            lda $02,x
0001C9r 2  48               pha
0001CAr 2               
0001CAr 2               ; src/prelude.fth:38:35 in `i`
0001CAr 2               @OPCODE_40:   ; [c64_ir] TempLoad
0001CAr 2  E8               inx
0001CBr 2  E8               inx
0001CCr 2  A5 95            lda TEMP_PAX1
0001CEr 2  95 00            sta $00,x
0001D0r 2  A5 96            lda TEMP_PAX2
0001D2r 2  95 01            sta $01,x
0001D4r 2               
0001D4r 2               ; snake.pax:60:32 in `draw-background`
0001D4r 2               @OPCODE_41:   ; [c64_ir] Add
0001D4r 2                   ; 21
0001D4r 2  CA               dex
0001D5r 2  CA               dex
0001D6r 2  18               clc
0001D7r 2  B5 00            lda $00,x
0001D9r 2  75 02            adc $02,x
0001DBr 2  95 00            sta $00,x
0001DDr 2  B5 01            lda $01,x
0001DFr 2  75 03            adc $03,x
0001E1r 2  95 01            sta $01,x
0001E3r 2               
0001E3r 2               ; snake.pax:49:34 in `draw-index`
0001E3r 2               @OPCODE_42:   ; [c64_ir] PushLiteral(1024)
0001E3r 2  E8               inx
0001E4r 2  E8               inx
0001E5r 2  A9 00            lda #0
0001E7r 2  95 00            sta $00,x
0001E9r 2  A9 04            lda #4
0001EBr 2  95 01            sta $01,x
0001EDr 2               
0001EDr 2               ; snake.pax:49:43 in `draw-index`
0001EDr 2               @OPCODE_43:   ; [c64_ir] Add
0001EDr 2                   ; 21
0001EDr 2  CA               dex
0001EEr 2  CA               dex
0001EFr 2  18               clc
0001F0r 2  B5 00            lda $00,x
0001F2r 2  75 02            adc $02,x
0001F4r 2  95 00            sta $00,x
0001F6r 2  B5 01            lda $01,x
0001F8r 2  75 03            adc $03,x
0001FAr 2  95 01            sta $01,x
0001FCr 2               
0001FCr 2               ; snake.pax:49:45 in `draw-index`
0001FCr 2               @OPCODE_44:   ; [c64_ir] Store8
0001FCr 2  CA               dex
0001FDr 2  CA               dex
0001FEr 2  CA               dex
0001FFr 2  CA               dex
000200r 2  B5 02            lda $02,x
000202r 2  81 04            sta ($04,x)
000204r 2                   ; TODO high byte
000204r 2               
000204r 2               ; src/prelude.fth:33:15 in `loopimpl`
000204r 2               @OPCODE_45:   ; [c64_ir] AltPop
000204r 2  E8               inx
000205r 2  E8               inx
000206r 2  68               pla
000207r 2  95 00            sta $00,x
000209r 2  68               pla
00020Ar 2  95 01            sta $01,x
00020Cr 2               
00020Cr 2               ; src/prelude.fth:33:18 in `loopimpl`
00020Cr 2               @OPCODE_46:   ; [c64_ir] AltPop
00020Cr 2  E8               inx
00020Dr 2  E8               inx
00020Er 2  68               pla
00020Fr 2  95 00            sta $00,x
000211r 2  68               pla
000212r 2  95 01            sta $01,x
000214r 2               
000214r 2               ; src/prelude.fth:18:8 in `1+`
000214r 2               @OPCODE_47:   ; [c64_ir] PushLiteral(1)
000214r 2  E8               inx
000215r 2  E8               inx
000216r 2  A9 01            lda #1
000218r 2  95 00            sta $00,x
00021Ar 2  A9 00            lda #0
00021Cr 2  95 01            sta $01,x
00021Er 2               
00021Er 2               ; src/prelude.fth:18:10 in `1+`
00021Er 2               @OPCODE_48:   ; [c64_ir] Add
00021Er 2                   ; 21
00021Er 2  CA               dex
00021Fr 2  CA               dex
000220r 2  18               clc
000221r 2  B5 00            lda $00,x
000223r 2  75 02            adc $02,x
000225r 2  95 00            sta $00,x
000227r 2  B5 01            lda $01,x
000229r 2  75 03            adc $03,x
00022Br 2  95 01            sta $01,x
00022Dr 2               
00022Dr 2               ; src/prelude.fth:4:10 in `over`
00022Dr 2               @OPCODE_49:   ; [c64_ir] AltPush
00022Dr 2  CA               dex
00022Er 2  CA               dex
00022Fr 2  B5 03            lda $03,x
000231r 2  48               pha
000232r 2  B5 02            lda $02,x
000234r 2  48               pha
000235r 2               
000235r 2               ; src/prelude.fth:4:13 in `over`
000235r 2               @OPCODE_50:   ; [c64_ir] TempStore
000235r 2  CA               dex
000236r 2  CA               dex
000237r 2  B5 03            lda $03,x
000239r 2  85 96            sta TEMP_PAX2
00023Br 2  B5 02            lda $02,x
00023Dr 2  85 95            sta TEMP_PAX1
00023Fr 2               
00023Fr 2               ; src/prelude.fth:4:19 in `over`
00023Fr 2               @OPCODE_51:   ; [c64_ir] TempLoad
00023Fr 2  E8               inx
000240r 2  E8               inx
000241r 2  A5 95            lda TEMP_PAX1
000243r 2  95 00            sta $00,x
000245r 2  A5 96            lda TEMP_PAX2
000247r 2  95 01            sta $01,x
000249r 2               
000249r 2               ; src/prelude.fth:4:25 in `over`
000249r 2               @OPCODE_52:   ; [c64_ir] AltPop
000249r 2  E8               inx
00024Ar 2  E8               inx
00024Br 2  68               pla
00024Cr 2  95 00            sta $00,x
00024Er 2  68               pla
00024Fr 2  95 01            sta $01,x
000251r 2               
000251r 2               ; src/prelude.fth:4:28 in `over`
000251r 2               @OPCODE_53:   ; [c64_ir] TempLoad
000251r 2  E8               inx
000252r 2  E8               inx
000253r 2  A5 95            lda TEMP_PAX1
000255r 2  95 00            sta $00,x
000257r 2  A5 96            lda TEMP_PAX2
000259r 2  95 01            sta $01,x
00025Br 2               
00025Br 2               ; src/prelude.fth:4:10 in `over`
00025Br 2               @OPCODE_54:   ; [c64_ir] AltPush
00025Br 2  CA               dex
00025Cr 2  CA               dex
00025Dr 2  B5 03            lda $03,x
00025Fr 2  48               pha
000260r 2  B5 02            lda $02,x
000262r 2  48               pha
000263r 2               
000263r 2               ; src/prelude.fth:4:13 in `over`
000263r 2               @OPCODE_55:   ; [c64_ir] TempStore
000263r 2  CA               dex
000264r 2  CA               dex
000265r 2  B5 03            lda $03,x
000267r 2  85 96            sta TEMP_PAX2
000269r 2  B5 02            lda $02,x
00026Br 2  85 95            sta TEMP_PAX1
00026Dr 2               
00026Dr 2               ; src/prelude.fth:4:19 in `over`
00026Dr 2               @OPCODE_56:   ; [c64_ir] TempLoad
00026Dr 2  E8               inx
00026Er 2  E8               inx
00026Fr 2  A5 95            lda TEMP_PAX1
000271r 2  95 00            sta $00,x
000273r 2  A5 96            lda TEMP_PAX2
000275r 2  95 01            sta $01,x
000277r 2               
000277r 2               ; src/prelude.fth:4:25 in `over`
000277r 2               @OPCODE_57:   ; [c64_ir] AltPop
000277r 2  E8               inx
000278r 2  E8               inx
000279r 2  68               pla
00027Ar 2  95 00            sta $00,x
00027Cr 2  68               pla
00027Dr 2  95 01            sta $01,x
00027Fr 2               
00027Fr 2               ; src/prelude.fth:4:28 in `over`
00027Fr 2               @OPCODE_58:   ; [c64_ir] TempLoad
00027Fr 2  E8               inx
000280r 2  E8               inx
000281r 2  A5 95            lda TEMP_PAX1
000283r 2  95 00            sta $00,x
000285r 2  A5 96            lda TEMP_PAX2
000287r 2  95 01            sta $01,x
000289r 2               
000289r 2               ; src/prelude.fth:33:29 in `loopimpl`
000289r 2               @OPCODE_59:   ; [c64_ir] AltPush
000289r 2  CA               dex
00028Ar 2  CA               dex
00028Br 2  B5 03            lda $03,x
00028Dr 2  48               pha
00028Er 2  B5 02            lda $02,x
000290r 2  48               pha
000291r 2               
000291r 2               ; src/prelude.fth:33:32 in `loopimpl`
000291r 2               @OPCODE_60:   ; [c64_ir] AltPush
000291r 2  CA               dex
000292r 2  CA               dex
000293r 2  B5 03            lda $03,x
000295r 2  48               pha
000296r 2  B5 02            lda $02,x
000298r 2  48               pha
000299r 2               
000299r 2               ; src/prelude.fth:14:12 in `invert`
000299r 2               @OPCODE_61:   ; [c64_ir] PushLiteral(-1)
000299r 2  E8               inx
00029Ar 2  E8               inx
00029Br 2  A9 FF            lda #255
00029Dr 2  95 00            sta $00,x
00029Fr 2  A9 FF            lda #255
0002A1r 2  95 01            sta $01,x
0002A3r 2               
0002A3r 2               ; src/prelude.fth:14:15 in `invert`
0002A3r 2               @OPCODE_62:   ; [c64_ir] Nand
0002A3r 2                   ; 26
0002A3r 2  CA               dex
0002A4r 2  CA               dex
0002A5r 2  B5 00            lda $00,x
0002A7r 2  35 02            and $02,x
0002A9r 2  49 FF            eor #$ff
0002ABr 2  95 00            sta $00,x
0002ADr 2  B5 01            lda $01,x
0002AFr 2  35 03            and $03,x
0002B1r 2  49 FF            eor #$ff
0002B3r 2  95 01            sta $01,x
0002B5r 2               
0002B5r 2               ; src/prelude.fth:15:19 in `negate`
0002B5r 2               @OPCODE_63:   ; [c64_ir] PushLiteral(1)
0002B5r 2  E8               inx
0002B6r 2  E8               inx
0002B7r 2  A9 01            lda #1
0002B9r 2  95 00            sta $00,x
0002BBr 2  A9 00            lda #0
0002BDr 2  95 01            sta $01,x
0002BFr 2               
0002BFr 2               ; src/prelude.fth:15:21 in `negate`
0002BFr 2               @OPCODE_64:   ; [c64_ir] Add
0002BFr 2                   ; 21
0002BFr 2  CA               dex
0002C0r 2  CA               dex
0002C1r 2  18               clc
0002C2r 2  B5 00            lda $00,x
0002C4r 2  75 02            adc $02,x
0002C6r 2  95 00            sta $00,x
0002C8r 2  B5 01            lda $01,x
0002CAr 2  75 03            adc $03,x
0002CCr 2  95 01            sta $01,x
0002CEr 2               
0002CEr 2               ; src/prelude.fth:16:19 in `-`
0002CEr 2               @OPCODE_65:   ; [c64_ir] Add
0002CEr 2                   ; 21
0002CEr 2  CA               dex
0002CFr 2  CA               dex
0002D0r 2  18               clc
0002D1r 2  B5 00            lda $00,x
0002D3r 2  75 02            adc $02,x
0002D5r 2  95 00            sta $00,x
0002D7r 2  B5 01            lda $01,x
0002D9r 2  75 03            adc $03,x
0002DBr 2  95 01            sta $01,x
0002DDr 2               
0002DDr 2               ; src/prelude.fth:21:8 in `0=`
0002DDr 2               @OPCODE_66:   ; [c64_ir] JumpIf0(8)
0002DDr 2  CA               dex
0002DEr 2  CA               dex
0002DFr 2  B5 02            lda $02,x
0002E1r 2  15 03            ora $03,x
0002E3r 2  D0 03            bne *+5
0002E5r 2  4C rr rr         jmp @target_8
0002E8r 2               
0002E8r 2               @target_7:
0002E8r 2               
0002E8r 2               ; src/prelude.fth:21:11 in `0=`
0002E8r 2               @OPCODE_68:   ; [c64_ir] PushLiteral(0)
0002E8r 2  E8               inx
0002E9r 2  E8               inx
0002EAr 2  A9 00            lda #0
0002ECr 2  95 00            sta $00,x
0002EEr 2  A9 00            lda #0
0002F0r 2  95 01            sta $01,x
0002F2r 2               
0002F2r 2               ; src/prelude.fth:21:13 in `0=`
0002F2r 2               @OPCODE_69:   ; [c64_ir] JumpElse(9)
0002F2r 2  4C rr rr         jmp @target_9
0002F5r 2               
0002F5r 2               @target_8:
0002F5r 2               
0002F5r 2               ; src/prelude.fth:21:18 in `0=`
0002F5r 2               @OPCODE_71:   ; [c64_ir] PushLiteral(-1)
0002F5r 2  E8               inx
0002F6r 2  E8               inx
0002F7r 2  A9 FF            lda #255
0002F9r 2  95 00            sta $00,x
0002FBr 2  A9 FF            lda #255
0002FDr 2  95 01            sta $01,x
0002FFr 2               
0002FFr 2               ; src/prelude.fth:21:21 in `0=`
0002FFr 2               @OPCODE_72:   ; [c64_ir] JumpTarget(8)
0002FFr 2               
0002FFr 2               @target_9:
0002FFr 2               
0002FFr 2               ; src/prelude.fth:3:10 in `swap`
0002FFr 2               @OPCODE_74:   ; [c64_ir] AltPush
0002FFr 2  CA               dex
000300r 2  CA               dex
000301r 2  B5 03            lda $03,x
000303r 2  48               pha
000304r 2  B5 02            lda $02,x
000306r 2  48               pha
000307r 2               
000307r 2               ; src/prelude.fth:3:19 in `swap`
000307r 2               @OPCODE_75:   ; [c64_ir] AltPop
000307r 2  E8               inx
000308r 2  E8               inx
000309r 2  68               pla
00030Ar 2  95 00            sta $00,x
00030Cr 2  68               pla
00030Dr 2  95 01            sta $01,x
00030Fr 2               
00030Fr 2               ; snake.pax:61:9 in `draw-background`
00030Fr 2               @OPCODE_76:   ; [c64_ir] LoopIf0(6)
00030Fr 2  CA               dex
000310r 2  CA               dex
000311r 2  B5 02            lda $02,x
000313r 2  15 03            ora $03,x
000315r 2  D0 03            bne *+5
000317r 2  4C rr rr         jmp @target_6
00031Ar 2               
00031Ar 2               @target_10:
00031Ar 2               
00031Ar 2               ; snake.pax:61:9 in `draw-background`
00031Ar 2               @OPCODE_78:   ; [c64_ir] AltPop
00031Ar 2  E8               inx
00031Br 2  E8               inx
00031Cr 2  68               pla
00031Dr 2  95 00            sta $00,x
00031Fr 2  68               pla
000320r 2  95 01            sta $01,x
000322r 2               
000322r 2               ; snake.pax:61:9 in `draw-background`
000322r 2               @OPCODE_79:   ; [c64_ir] Drop
000322r 2  CA               dex
000323r 2  CA               dex
000324r 2               
000324r 2               ; snake.pax:61:9 in `draw-background`
000324r 2               @OPCODE_80:   ; [c64_ir] AltPop
000324r 2  E8               inx
000325r 2  E8               inx
000326r 2  68               pla
000327r 2  95 00            sta $00,x
000329r 2  68               pla
00032Ar 2  95 01            sta $01,x
00032Cr 2               
00032Cr 2               ; snake.pax:61:9 in `draw-background`
00032Cr 2               @OPCODE_81:   ; [c64_ir] Drop
00032Cr 2  CA               dex
00032Dr 2  CA               dex
00032Er 2               
00032Er 2               ; snake.pax:62:9 in `draw-background`
00032Er 2               @OPCODE_82:   ; [c64_ir] PushLiteral(40)
00032Er 2  E8               inx
00032Fr 2  E8               inx
000330r 2  A9 28            lda #40
000332r 2  95 00            sta $00,x
000334r 2  A9 00            lda #0
000336r 2  95 01            sta $01,x
000338r 2               
000338r 2               ; snake.pax:62:15 in `draw-background`
000338r 2               @OPCODE_83:   ; [c64_ir] Add
000338r 2                   ; 21
000338r 2  CA               dex
000339r 2  CA               dex
00033Ar 2  18               clc
00033Br 2  B5 00            lda $00,x
00033Dr 2  75 02            adc $02,x
00033Fr 2  95 00            sta $00,x
000341r 2  B5 01            lda $01,x
000343r 2  75 03            adc $03,x
000345r 2  95 01            sta $01,x
000347r 2               
000347r 2               ; src/prelude.fth:33:15 in `loopimpl`
000347r 2               @OPCODE_84:   ; [c64_ir] AltPop
000347r 2  E8               inx
000348r 2  E8               inx
000349r 2  68               pla
00034Ar 2  95 00            sta $00,x
00034Cr 2  68               pla
00034Dr 2  95 01            sta $01,x
00034Fr 2               
00034Fr 2               ; src/prelude.fth:33:18 in `loopimpl`
00034Fr 2               @OPCODE_85:   ; [c64_ir] AltPop
00034Fr 2  E8               inx
000350r 2  E8               inx
000351r 2  68               pla
000352r 2  95 00            sta $00,x
000354r 2  68               pla
000355r 2  95 01            sta $01,x
000357r 2               
000357r 2               ; src/prelude.fth:18:8 in `1+`
000357r 2               @OPCODE_86:   ; [c64_ir] PushLiteral(1)
000357r 2  E8               inx
000358r 2  E8               inx
000359r 2  A9 01            lda #1
00035Br 2  95 00            sta $00,x
00035Dr 2  A9 00            lda #0
00035Fr 2  95 01            sta $01,x
000361r 2               
000361r 2               ; src/prelude.fth:18:10 in `1+`
000361r 2               @OPCODE_87:   ; [c64_ir] Add
000361r 2                   ; 21
000361r 2  CA               dex
000362r 2  CA               dex
000363r 2  18               clc
000364r 2  B5 00            lda $00,x
000366r 2  75 02            adc $02,x
000368r 2  95 00            sta $00,x
00036Ar 2  B5 01            lda $01,x
00036Cr 2  75 03            adc $03,x
00036Er 2  95 01            sta $01,x
000370r 2               
000370r 2               ; src/prelude.fth:4:10 in `over`
000370r 2               @OPCODE_88:   ; [c64_ir] AltPush
000370r 2  CA               dex
000371r 2  CA               dex
000372r 2  B5 03            lda $03,x
000374r 2  48               pha
000375r 2  B5 02            lda $02,x
000377r 2  48               pha
000378r 2               
000378r 2               ; src/prelude.fth:4:13 in `over`
000378r 2               @OPCODE_89:   ; [c64_ir] TempStore
000378r 2  CA               dex
000379r 2  CA               dex
00037Ar 2  B5 03            lda $03,x
00037Cr 2  85 96            sta TEMP_PAX2
00037Er 2  B5 02            lda $02,x
000380r 2  85 95            sta TEMP_PAX1
000382r 2               
000382r 2               ; src/prelude.fth:4:19 in `over`
000382r 2               @OPCODE_90:   ; [c64_ir] TempLoad
000382r 2  E8               inx
000383r 2  E8               inx
000384r 2  A5 95            lda TEMP_PAX1
000386r 2  95 00            sta $00,x
000388r 2  A5 96            lda TEMP_PAX2
00038Ar 2  95 01            sta $01,x
00038Cr 2               
00038Cr 2               ; src/prelude.fth:4:25 in `over`
00038Cr 2               @OPCODE_91:   ; [c64_ir] AltPop
00038Cr 2  E8               inx
00038Dr 2  E8               inx
00038Er 2  68               pla
00038Fr 2  95 00            sta $00,x
000391r 2  68               pla
000392r 2  95 01            sta $01,x
000394r 2               
000394r 2               ; src/prelude.fth:4:28 in `over`
000394r 2               @OPCODE_92:   ; [c64_ir] TempLoad
000394r 2  E8               inx
000395r 2  E8               inx
000396r 2  A5 95            lda TEMP_PAX1
000398r 2  95 00            sta $00,x
00039Ar 2  A5 96            lda TEMP_PAX2
00039Cr 2  95 01            sta $01,x
00039Er 2               
00039Er 2               ; src/prelude.fth:4:10 in `over`
00039Er 2               @OPCODE_93:   ; [c64_ir] AltPush
00039Er 2  CA               dex
00039Fr 2  CA               dex
0003A0r 2  B5 03            lda $03,x
0003A2r 2  48               pha
0003A3r 2  B5 02            lda $02,x
0003A5r 2  48               pha
0003A6r 2               
0003A6r 2               ; src/prelude.fth:4:13 in `over`
0003A6r 2               @OPCODE_94:   ; [c64_ir] TempStore
0003A6r 2  CA               dex
0003A7r 2  CA               dex
0003A8r 2  B5 03            lda $03,x
0003AAr 2  85 96            sta TEMP_PAX2
0003ACr 2  B5 02            lda $02,x
0003AEr 2  85 95            sta TEMP_PAX1
0003B0r 2               
0003B0r 2               ; src/prelude.fth:4:19 in `over`
0003B0r 2               @OPCODE_95:   ; [c64_ir] TempLoad
0003B0r 2  E8               inx
0003B1r 2  E8               inx
0003B2r 2  A5 95            lda TEMP_PAX1
0003B4r 2  95 00            sta $00,x
0003B6r 2  A5 96            lda TEMP_PAX2
0003B8r 2  95 01            sta $01,x
0003BAr 2               
0003BAr 2               ; src/prelude.fth:4:25 in `over`
0003BAr 2               @OPCODE_96:   ; [c64_ir] AltPop
0003BAr 2  E8               inx
0003BBr 2  E8               inx
0003BCr 2  68               pla
0003BDr 2  95 00            sta $00,x
0003BFr 2  68               pla
0003C0r 2  95 01            sta $01,x
0003C2r 2               
0003C2r 2               ; src/prelude.fth:4:28 in `over`
0003C2r 2               @OPCODE_97:   ; [c64_ir] TempLoad
0003C2r 2  E8               inx
0003C3r 2  E8               inx
0003C4r 2  A5 95            lda TEMP_PAX1
0003C6r 2  95 00            sta $00,x
0003C8r 2  A5 96            lda TEMP_PAX2
0003CAr 2  95 01            sta $01,x
0003CCr 2               
0003CCr 2               ; src/prelude.fth:33:29 in `loopimpl`
0003CCr 2               @OPCODE_98:   ; [c64_ir] AltPush
0003CCr 2  CA               dex
0003CDr 2  CA               dex
0003CEr 2  B5 03            lda $03,x
0003D0r 2  48               pha
0003D1r 2  B5 02            lda $02,x
0003D3r 2  48               pha
0003D4r 2               
0003D4r 2               ; src/prelude.fth:33:32 in `loopimpl`
0003D4r 2               @OPCODE_99:   ; [c64_ir] AltPush
0003D4r 2  CA               dex
0003D5r 2  CA               dex
0003D6r 2  B5 03            lda $03,x
0003D8r 2  48               pha
0003D9r 2  B5 02            lda $02,x
0003DBr 2  48               pha
0003DCr 2               
0003DCr 2               ; src/prelude.fth:14:12 in `invert`
0003DCr 2               @OPCODE_100:   ; [c64_ir] PushLiteral(-1)
0003DCr 2  E8               inx
0003DDr 2  E8               inx
0003DEr 2  A9 FF            lda #255
0003E0r 2  95 00            sta $00,x
0003E2r 2  A9 FF            lda #255
0003E4r 2  95 01            sta $01,x
0003E6r 2               
0003E6r 2               ; src/prelude.fth:14:15 in `invert`
0003E6r 2               @OPCODE_101:   ; [c64_ir] Nand
0003E6r 2                   ; 26
0003E6r 2  CA               dex
0003E7r 2  CA               dex
0003E8r 2  B5 00            lda $00,x
0003EAr 2  35 02            and $02,x
0003ECr 2  49 FF            eor #$ff
0003EEr 2  95 00            sta $00,x
0003F0r 2  B5 01            lda $01,x
0003F2r 2  35 03            and $03,x
0003F4r 2  49 FF            eor #$ff
0003F6r 2  95 01            sta $01,x
0003F8r 2               
0003F8r 2               ; src/prelude.fth:15:19 in `negate`
0003F8r 2               @OPCODE_102:   ; [c64_ir] PushLiteral(1)
0003F8r 2  E8               inx
0003F9r 2  E8               inx
0003FAr 2  A9 01            lda #1
0003FCr 2  95 00            sta $00,x
0003FEr 2  A9 00            lda #0
000400r 2  95 01            sta $01,x
000402r 2               
000402r 2               ; src/prelude.fth:15:21 in `negate`
000402r 2               @OPCODE_103:   ; [c64_ir] Add
000402r 2                   ; 21
000402r 2  CA               dex
000403r 2  CA               dex
000404r 2  18               clc
000405r 2  B5 00            lda $00,x
000407r 2  75 02            adc $02,x
000409r 2  95 00            sta $00,x
00040Br 2  B5 01            lda $01,x
00040Dr 2  75 03            adc $03,x
00040Fr 2  95 01            sta $01,x
000411r 2               
000411r 2               ; src/prelude.fth:16:19 in `-`
000411r 2               @OPCODE_104:   ; [c64_ir] Add
000411r 2                   ; 21
000411r 2  CA               dex
000412r 2  CA               dex
000413r 2  18               clc
000414r 2  B5 00            lda $00,x
000416r 2  75 02            adc $02,x
000418r 2  95 00            sta $00,x
00041Ar 2  B5 01            lda $01,x
00041Cr 2  75 03            adc $03,x
00041Er 2  95 01            sta $01,x
000420r 2               
000420r 2               ; src/prelude.fth:21:8 in `0=`
000420r 2               @OPCODE_105:   ; [c64_ir] JumpIf0(12)
000420r 2  CA               dex
000421r 2  CA               dex
000422r 2  B5 02            lda $02,x
000424r 2  15 03            ora $03,x
000426r 2  D0 03            bne *+5
000428r 2  4C rr rr         jmp @target_12
00042Br 2               
00042Br 2               @target_11:
00042Br 2               
00042Br 2               ; src/prelude.fth:21:11 in `0=`
00042Br 2               @OPCODE_107:   ; [c64_ir] PushLiteral(0)
00042Br 2  E8               inx
00042Cr 2  E8               inx
00042Dr 2  A9 00            lda #0
00042Fr 2  95 00            sta $00,x
000431r 2  A9 00            lda #0
000433r 2  95 01            sta $01,x
000435r 2               
000435r 2               ; src/prelude.fth:21:13 in `0=`
000435r 2               @OPCODE_108:   ; [c64_ir] JumpElse(13)
000435r 2  4C rr rr         jmp @target_13
000438r 2               
000438r 2               @target_12:
000438r 2               
000438r 2               ; src/prelude.fth:21:18 in `0=`
000438r 2               @OPCODE_110:   ; [c64_ir] PushLiteral(-1)
000438r 2  E8               inx
000439r 2  E8               inx
00043Ar 2  A9 FF            lda #255
00043Cr 2  95 00            sta $00,x
00043Er 2  A9 FF            lda #255
000440r 2  95 01            sta $01,x
000442r 2               
000442r 2               ; src/prelude.fth:21:21 in `0=`
000442r 2               @OPCODE_111:   ; [c64_ir] JumpTarget(12)
000442r 2               
000442r 2               @target_13:
000442r 2               
000442r 2               ; src/prelude.fth:3:10 in `swap`
000442r 2               @OPCODE_113:   ; [c64_ir] AltPush
000442r 2  CA               dex
000443r 2  CA               dex
000444r 2  B5 03            lda $03,x
000446r 2  48               pha
000447r 2  B5 02            lda $02,x
000449r 2  48               pha
00044Ar 2               
00044Ar 2               ; src/prelude.fth:3:19 in `swap`
00044Ar 2               @OPCODE_114:   ; [c64_ir] AltPop
00044Ar 2  E8               inx
00044Br 2  E8               inx
00044Cr 2  68               pla
00044Dr 2  95 00            sta $00,x
00044Fr 2  68               pla
000450r 2  95 01            sta $01,x
000452r 2               
000452r 2               ; snake.pax:63:4 in `draw-background`
000452r 2               @OPCODE_115:   ; [c64_ir] LoopIf0(5)
000452r 2  CA               dex
000453r 2  CA               dex
000454r 2  B5 02            lda $02,x
000456r 2  15 03            ora $03,x
000458r 2  D0 03            bne *+5
00045Ar 2  4C rr rr         jmp @target_5
00045Dr 2               
00045Dr 2               @target_14:
00045Dr 2               
00045Dr 2               ; snake.pax:63:4 in `draw-background`
00045Dr 2               @OPCODE_117:   ; [c64_ir] AltPop
00045Dr 2  E8               inx
00045Er 2  E8               inx
00045Fr 2  68               pla
000460r 2  95 00            sta $00,x
000462r 2  68               pla
000463r 2  95 01            sta $01,x
000465r 2               
000465r 2               ; snake.pax:63:4 in `draw-background`
000465r 2               @OPCODE_118:   ; [c64_ir] Drop
000465r 2  CA               dex
000466r 2  CA               dex
000467r 2               
000467r 2               ; snake.pax:63:4 in `draw-background`
000467r 2               @OPCODE_119:   ; [c64_ir] AltPop
000467r 2  E8               inx
000468r 2  E8               inx
000469r 2  68               pla
00046Ar 2  95 00            sta $00,x
00046Cr 2  68               pla
00046Dr 2  95 01            sta $01,x
00046Fr 2               
00046Fr 2               ; snake.pax:63:4 in `draw-background`
00046Fr 2               @OPCODE_120:   ; [c64_ir] Drop
00046Fr 2  CA               dex
000470r 2  CA               dex
000471r 2               
000471r 2               ; snake.pax:64:4 in `draw-background`
000471r 2               @OPCODE_121:   ; [c64_ir] Drop
000471r 2  CA               dex
000472r 2  CA               dex
000473r 2               
000473r 2               ; <inline>:0:0 in `main`
000473r 2               @OPCODE_122:   ; [c64_ir] AltPop
000473r 2  E8               inx
000474r 2  E8               inx
000475r 2  68               pla
000476r 2  95 00            sta $00,x
000478r 2  68               pla
000479r 2  95 01            sta $01,x
00047Br 2               
00047Br 2               ; <inline>:0:0 in `main`
00047Br 2               @OPCODE_123:   ; [c64_ir] Drop
00047Br 2  CA               dex
00047Cr 2  CA               dex
00047Dr 2               
00047Dr 2               ; <inline>:0:0 in `main`
00047Dr 2               @OPCODE_124:   ; [c64_ir] PushLiteral(7777)
00047Dr 2  E8               inx
00047Er 2  E8               inx
00047Fr 2  A9 61            lda #97
000481r 2  95 00            sta $00,x
000483r 2  A9 1E            lda #30
000485r 2  95 01            sta $01,x
000487r 2               
000487r 2               ; <inline>:0:0 in `main`
000487r 2               @OPCODE_125:   ; [c64_ir] AltPush
000487r 2  CA               dex
000488r 2  CA               dex
000489r 2  B5 03            lda $03,x
00048Br 2  48               pha
00048Cr 2  B5 02            lda $02,x
00048Er 2  48               pha
00048Fr 2               
00048Fr 2               ; snake.pax:69:5 in `draw-walls`
00048Fr 2               @OPCODE_126:   ; [c64_ir] PushLiteral(40)
00048Fr 2  E8               inx
000490r 2  E8               inx
000491r 2  A9 28            lda #40
000493r 2  95 00            sta $00,x
000495r 2  A9 00            lda #0
000497r 2  95 01            sta $01,x
000499r 2               
000499r 2               ; snake.pax:69:11 in `draw-walls`
000499r 2               @OPCODE_127:   ; [c64_ir] PushLiteral(25)
000499r 2  E8               inx
00049Ar 2  E8               inx
00049Br 2  A9 19            lda #25
00049Dr 2  95 00            sta $00,x
00049Fr 2  A9 00            lda #0
0004A1r 2  95 01            sta $01,x
0004A3r 2               
0004A3r 2               ; snake.pax:69:18 in `draw-walls`
0004A3r 2               @OPCODE_128:   ; [c64_ir] PushLiteral(1)
0004A3r 2  E8               inx
0004A4r 2  E8               inx
0004A5r 2  A9 01            lda #1
0004A7r 2  95 00            sta $00,x
0004A9r 2  A9 00            lda #0
0004ABr 2  95 01            sta $01,x
0004ADr 2               
0004ADr 2               ; src/prelude.fth:14:12 in `invert`
0004ADr 2               @OPCODE_129:   ; [c64_ir] PushLiteral(-1)
0004ADr 2  E8               inx
0004AEr 2  E8               inx
0004AFr 2  A9 FF            lda #255
0004B1r 2  95 00            sta $00,x
0004B3r 2  A9 FF            lda #255
0004B5r 2  95 01            sta $01,x
0004B7r 2               
0004B7r 2               ; src/prelude.fth:14:15 in `invert`
0004B7r 2               @OPCODE_130:   ; [c64_ir] Nand
0004B7r 2                   ; 26
0004B7r 2  CA               dex
0004B8r 2  CA               dex
0004B9r 2  B5 00            lda $00,x
0004BBr 2  35 02            and $02,x
0004BDr 2  49 FF            eor #$ff
0004BFr 2  95 00            sta $00,x
0004C1r 2  B5 01            lda $01,x
0004C3r 2  35 03            and $03,x
0004C5r 2  49 FF            eor #$ff
0004C7r 2  95 01            sta $01,x
0004C9r 2               
0004C9r 2               ; src/prelude.fth:15:19 in `negate`
0004C9r 2               @OPCODE_131:   ; [c64_ir] PushLiteral(1)
0004C9r 2  E8               inx
0004CAr 2  E8               inx
0004CBr 2  A9 01            lda #1
0004CDr 2  95 00            sta $00,x
0004CFr 2  A9 00            lda #0
0004D1r 2  95 01            sta $01,x
0004D3r 2               
0004D3r 2               ; src/prelude.fth:15:21 in `negate`
0004D3r 2               @OPCODE_132:   ; [c64_ir] Add
0004D3r 2                   ; 21
0004D3r 2  CA               dex
0004D4r 2  CA               dex
0004D5r 2  18               clc
0004D6r 2  B5 00            lda $00,x
0004D8r 2  75 02            adc $02,x
0004DAr 2  95 00            sta $00,x
0004DCr 2  B5 01            lda $01,x
0004DEr 2  75 03            adc $03,x
0004E0r 2  95 01            sta $01,x
0004E2r 2               
0004E2r 2               ; src/prelude.fth:16:19 in `-`
0004E2r 2               @OPCODE_133:   ; [c64_ir] Add
0004E2r 2                   ; 21
0004E2r 2  CA               dex
0004E3r 2  CA               dex
0004E4r 2  18               clc
0004E5r 2  B5 00            lda $00,x
0004E7r 2  75 02            adc $02,x
0004E9r 2  95 00            sta $00,x
0004EBr 2  B5 01            lda $01,x
0004EDr 2  75 03            adc $03,x
0004EFr 2  95 01            sta $01,x
0004F1r 2               
0004F1r 2               ; <inline>:0:0 in `main`
0004F1r 2               @OPCODE_134:   ; [c64_ir] PushLiteral(7777)
0004F1r 2  E8               inx
0004F2r 2  E8               inx
0004F3r 2  A9 61            lda #97
0004F5r 2  95 00            sta $00,x
0004F7r 2  A9 1E            lda #30
0004F9r 2  95 01            sta $01,x
0004FBr 2               
0004FBr 2               ; <inline>:0:0 in `main`
0004FBr 2               @OPCODE_135:   ; [c64_ir] AltPush
0004FBr 2  CA               dex
0004FCr 2  CA               dex
0004FDr 2  B5 03            lda $03,x
0004FFr 2  48               pha
000500r 2  B5 02            lda $02,x
000502r 2  48               pha
000503r 2               
000503r 2               ; src/prelude.fth:44:5 in `*`
000503r 2               @OPCODE_136:   ; [c64_ir] AltPush
000503r 2  CA               dex
000504r 2  CA               dex
000505r 2  B5 03            lda $03,x
000507r 2  48               pha
000508r 2  B5 02            lda $02,x
00050Ar 2  48               pha
00050Br 2               
00050Br 2               ; src/prelude.fth:44:8 in `*`
00050Br 2               @OPCODE_137:   ; [c64_ir] PushLiteral(0)
00050Br 2  E8               inx
00050Cr 2  E8               inx
00050Dr 2  A9 00            lda #0
00050Fr 2  95 00            sta $00,x
000511r 2  A9 00            lda #0
000513r 2  95 01            sta $01,x
000515r 2               
000515r 2               ; src/prelude.fth:44:10 in `*`
000515r 2               @OPCODE_138:   ; [c64_ir] AltPop
000515r 2  E8               inx
000516r 2  E8               inx
000517r 2  68               pla
000518r 2  95 00            sta $00,x
00051Ar 2  68               pla
00051Br 2  95 01            sta $01,x
00051Dr 2               
00051Dr 2               ; src/prelude.fth:44:13 in `*`
00051Dr 2               @OPCODE_139:   ; [c64_ir] PushLiteral(0)
00051Dr 2  E8               inx
00051Er 2  E8               inx
00051Fr 2  A9 00            lda #0
000521r 2  95 00            sta $00,x
000523r 2  A9 00            lda #0
000525r 2  95 01            sta $01,x
000527r 2               
000527r 2               ; src/prelude.fth:44:15 in `*`
000527r 2               @OPCODE_140:   ; [c64_ir] AltPush
000527r 2  CA               dex
000528r 2  CA               dex
000529r 2  B5 03            lda $03,x
00052Br 2  48               pha
00052Cr 2  B5 02            lda $02,x
00052Er 2  48               pha
00052Fr 2               
00052Fr 2               ; src/prelude.fth:44:15 in `*`
00052Fr 2               @OPCODE_141:   ; [c64_ir] AltPush
00052Fr 2  CA               dex
000530r 2  CA               dex
000531r 2  B5 03            lda $03,x
000533r 2  48               pha
000534r 2  B5 02            lda $02,x
000536r 2  48               pha
000537r 2               
000537r 2               ; src/prelude.fth:44:15 in `*`
000537r 2               @OPCODE_142:   ; [c64_ir] LoopTarget(14)
000537r 2               
000537r 2               @target_15:
000537r 2               
000537r 2               ; src/prelude.fth:4:10 in `over`
000537r 2               @OPCODE_144:   ; [c64_ir] AltPush
000537r 2  CA               dex
000538r 2  CA               dex
000539r 2  B5 03            lda $03,x
00053Br 2  48               pha
00053Cr 2  B5 02            lda $02,x
00053Er 2  48               pha
00053Fr 2               
00053Fr 2               ; src/prelude.fth:4:13 in `over`
00053Fr 2               @OPCODE_145:   ; [c64_ir] TempStore
00053Fr 2  CA               dex
000540r 2  CA               dex
000541r 2  B5 03            lda $03,x
000543r 2  85 96            sta TEMP_PAX2
000545r 2  B5 02            lda $02,x
000547r 2  85 95            sta TEMP_PAX1
000549r 2               
000549r 2               ; src/prelude.fth:4:19 in `over`
000549r 2               @OPCODE_146:   ; [c64_ir] TempLoad
000549r 2  E8               inx
00054Ar 2  E8               inx
00054Br 2  A5 95            lda TEMP_PAX1
00054Dr 2  95 00            sta $00,x
00054Fr 2  A5 96            lda TEMP_PAX2
000551r 2  95 01            sta $01,x
000553r 2               
000553r 2               ; src/prelude.fth:4:25 in `over`
000553r 2               @OPCODE_147:   ; [c64_ir] AltPop
000553r 2  E8               inx
000554r 2  E8               inx
000555r 2  68               pla
000556r 2  95 00            sta $00,x
000558r 2  68               pla
000559r 2  95 01            sta $01,x
00055Br 2               
00055Br 2               ; src/prelude.fth:4:28 in `over`
00055Br 2               @OPCODE_148:   ; [c64_ir] TempLoad
00055Br 2  E8               inx
00055Cr 2  E8               inx
00055Dr 2  A5 95            lda TEMP_PAX1
00055Fr 2  95 00            sta $00,x
000561r 2  A5 96            lda TEMP_PAX2
000563r 2  95 01            sta $01,x
000565r 2               
000565r 2               ; src/prelude.fth:44:23 in `*`
000565r 2               @OPCODE_149:   ; [c64_ir] Add
000565r 2                   ; 21
000565r 2  CA               dex
000566r 2  CA               dex
000567r 2  18               clc
000568r 2  B5 00            lda $00,x
00056Ar 2  75 02            adc $02,x
00056Cr 2  95 00            sta $00,x
00056Er 2  B5 01            lda $01,x
000570r 2  75 03            adc $03,x
000572r 2  95 01            sta $01,x
000574r 2               
000574r 2               ; src/prelude.fth:33:15 in `loopimpl`
000574r 2               @OPCODE_150:   ; [c64_ir] AltPop
000574r 2  E8               inx
000575r 2  E8               inx
000576r 2  68               pla
000577r 2  95 00            sta $00,x
000579r 2  68               pla
00057Ar 2  95 01            sta $01,x
00057Cr 2               
00057Cr 2               ; src/prelude.fth:33:18 in `loopimpl`
00057Cr 2               @OPCODE_151:   ; [c64_ir] AltPop
00057Cr 2  E8               inx
00057Dr 2  E8               inx
00057Er 2  68               pla
00057Fr 2  95 00            sta $00,x
000581r 2  68               pla
000582r 2  95 01            sta $01,x
000584r 2               
000584r 2               ; src/prelude.fth:18:8 in `1+`
000584r 2               @OPCODE_152:   ; [c64_ir] PushLiteral(1)
000584r 2  E8               inx
000585r 2  E8               inx
000586r 2  A9 01            lda #1
000588r 2  95 00            sta $00,x
00058Ar 2  A9 00            lda #0
00058Cr 2  95 01            sta $01,x
00058Er 2               
00058Er 2               ; src/prelude.fth:18:10 in `1+`
00058Er 2               @OPCODE_153:   ; [c64_ir] Add
00058Er 2                   ; 21
00058Er 2  CA               dex
00058Fr 2  CA               dex
000590r 2  18               clc
000591r 2  B5 00            lda $00,x
000593r 2  75 02            adc $02,x
000595r 2  95 00            sta $00,x
000597r 2  B5 01            lda $01,x
000599r 2  75 03            adc $03,x
00059Br 2  95 01            sta $01,x
00059Dr 2               
00059Dr 2               ; src/prelude.fth:4:10 in `over`
00059Dr 2               @OPCODE_154:   ; [c64_ir] AltPush
00059Dr 2  CA               dex
00059Er 2  CA               dex
00059Fr 2  B5 03            lda $03,x
0005A1r 2  48               pha
0005A2r 2  B5 02            lda $02,x
0005A4r 2  48               pha
0005A5r 2               
0005A5r 2               ; src/prelude.fth:4:13 in `over`
0005A5r 2               @OPCODE_155:   ; [c64_ir] TempStore
0005A5r 2  CA               dex
0005A6r 2  CA               dex
0005A7r 2  B5 03            lda $03,x
0005A9r 2  85 96            sta TEMP_PAX2
0005ABr 2  B5 02            lda $02,x
0005ADr 2  85 95            sta TEMP_PAX1
0005AFr 2               
0005AFr 2               ; src/prelude.fth:4:19 in `over`
0005AFr 2               @OPCODE_156:   ; [c64_ir] TempLoad
0005AFr 2  E8               inx
0005B0r 2  E8               inx
0005B1r 2  A5 95            lda TEMP_PAX1
0005B3r 2  95 00            sta $00,x
0005B5r 2  A5 96            lda TEMP_PAX2
0005B7r 2  95 01            sta $01,x
0005B9r 2               
0005B9r 2               ; src/prelude.fth:4:25 in `over`
0005B9r 2               @OPCODE_157:   ; [c64_ir] AltPop
0005B9r 2  E8               inx
0005BAr 2  E8               inx
0005BBr 2  68               pla
0005BCr 2  95 00            sta $00,x
0005BEr 2  68               pla
0005BFr 2  95 01            sta $01,x
0005C1r 2               
0005C1r 2               ; src/prelude.fth:4:28 in `over`
0005C1r 2               @OPCODE_158:   ; [c64_ir] TempLoad
0005C1r 2  E8               inx
0005C2r 2  E8               inx
0005C3r 2  A5 95            lda TEMP_PAX1
0005C5r 2  95 00            sta $00,x
0005C7r 2  A5 96            lda TEMP_PAX2
0005C9r 2  95 01            sta $01,x
0005CBr 2               
0005CBr 2               ; src/prelude.fth:4:10 in `over`
0005CBr 2               @OPCODE_159:   ; [c64_ir] AltPush
0005CBr 2  CA               dex
0005CCr 2  CA               dex
0005CDr 2  B5 03            lda $03,x
0005CFr 2  48               pha
0005D0r 2  B5 02            lda $02,x
0005D2r 2  48               pha
0005D3r 2               
0005D3r 2               ; src/prelude.fth:4:13 in `over`
0005D3r 2               @OPCODE_160:   ; [c64_ir] TempStore
0005D3r 2  CA               dex
0005D4r 2  CA               dex
0005D5r 2  B5 03            lda $03,x
0005D7r 2  85 96            sta TEMP_PAX2
0005D9r 2  B5 02            lda $02,x
0005DBr 2  85 95            sta TEMP_PAX1
0005DDr 2               
0005DDr 2               ; src/prelude.fth:4:19 in `over`
0005DDr 2               @OPCODE_161:   ; [c64_ir] TempLoad
0005DDr 2  E8               inx
0005DEr 2  E8               inx
0005DFr 2  A5 95            lda TEMP_PAX1
0005E1r 2  95 00            sta $00,x
0005E3r 2  A5 96            lda TEMP_PAX2
0005E5r 2  95 01            sta $01,x
0005E7r 2               
0005E7r 2               ; src/prelude.fth:4:25 in `over`
0005E7r 2               @OPCODE_162:   ; [c64_ir] AltPop
0005E7r 2  E8               inx
0005E8r 2  E8               inx
0005E9r 2  68               pla
0005EAr 2  95 00            sta $00,x
0005ECr 2  68               pla
0005EDr 2  95 01            sta $01,x
0005EFr 2               
0005EFr 2               ; src/prelude.fth:4:28 in `over`
0005EFr 2               @OPCODE_163:   ; [c64_ir] TempLoad
0005EFr 2  E8               inx
0005F0r 2  E8               inx
0005F1r 2  A5 95            lda TEMP_PAX1
0005F3r 2  95 00            sta $00,x
0005F5r 2  A5 96            lda TEMP_PAX2
0005F7r 2  95 01            sta $01,x
0005F9r 2               
0005F9r 2               ; src/prelude.fth:33:29 in `loopimpl`
0005F9r 2               @OPCODE_164:   ; [c64_ir] AltPush
0005F9r 2  CA               dex
0005FAr 2  CA               dex
0005FBr 2  B5 03            lda $03,x
0005FDr 2  48               pha
0005FEr 2  B5 02            lda $02,x
000600r 2  48               pha
000601r 2               
000601r 2               ; src/prelude.fth:33:32 in `loopimpl`
000601r 2               @OPCODE_165:   ; [c64_ir] AltPush
000601r 2  CA               dex
000602r 2  CA               dex
000603r 2  B5 03            lda $03,x
000605r 2  48               pha
000606r 2  B5 02            lda $02,x
000608r 2  48               pha
000609r 2               
000609r 2               ; src/prelude.fth:14:12 in `invert`
000609r 2               @OPCODE_166:   ; [c64_ir] PushLiteral(-1)
000609r 2  E8               inx
00060Ar 2  E8               inx
00060Br 2  A9 FF            lda #255
00060Dr 2  95 00            sta $00,x
00060Fr 2  A9 FF            lda #255
000611r 2  95 01            sta $01,x
000613r 2               
000613r 2               ; src/prelude.fth:14:15 in `invert`
000613r 2               @OPCODE_167:   ; [c64_ir] Nand
000613r 2                   ; 26
000613r 2  CA               dex
000614r 2  CA               dex
000615r 2  B5 00            lda $00,x
000617r 2  35 02            and $02,x
000619r 2  49 FF            eor #$ff
00061Br 2  95 00            sta $00,x
00061Dr 2  B5 01            lda $01,x
00061Fr 2  35 03            and $03,x
000621r 2  49 FF            eor #$ff
000623r 2  95 01            sta $01,x
000625r 2               
000625r 2               ; src/prelude.fth:15:19 in `negate`
000625r 2               @OPCODE_168:   ; [c64_ir] PushLiteral(1)
000625r 2  E8               inx
000626r 2  E8               inx
000627r 2  A9 01            lda #1
000629r 2  95 00            sta $00,x
00062Br 2  A9 00            lda #0
00062Dr 2  95 01            sta $01,x
00062Fr 2               
00062Fr 2               ; src/prelude.fth:15:21 in `negate`
00062Fr 2               @OPCODE_169:   ; [c64_ir] Add
00062Fr 2                   ; 21
00062Fr 2  CA               dex
000630r 2  CA               dex
000631r 2  18               clc
000632r 2  B5 00            lda $00,x
000634r 2  75 02            adc $02,x
000636r 2  95 00            sta $00,x
000638r 2  B5 01            lda $01,x
00063Ar 2  75 03            adc $03,x
00063Cr 2  95 01            sta $01,x
00063Er 2               
00063Er 2               ; src/prelude.fth:16:19 in `-`
00063Er 2               @OPCODE_170:   ; [c64_ir] Add
00063Er 2                   ; 21
00063Er 2  CA               dex
00063Fr 2  CA               dex
000640r 2  18               clc
000641r 2  B5 00            lda $00,x
000643r 2  75 02            adc $02,x
000645r 2  95 00            sta $00,x
000647r 2  B5 01            lda $01,x
000649r 2  75 03            adc $03,x
00064Br 2  95 01            sta $01,x
00064Dr 2               
00064Dr 2               ; src/prelude.fth:21:8 in `0=`
00064Dr 2               @OPCODE_171:   ; [c64_ir] JumpIf0(17)
00064Dr 2  CA               dex
00064Er 2  CA               dex
00064Fr 2  B5 02            lda $02,x
000651r 2  15 03            ora $03,x
000653r 2  D0 03            bne *+5
000655r 2  4C rr rr         jmp @target_17
000658r 2               
000658r 2               @target_16:
000658r 2               
000658r 2               ; src/prelude.fth:21:11 in `0=`
000658r 2               @OPCODE_173:   ; [c64_ir] PushLiteral(0)
000658r 2  E8               inx
000659r 2  E8               inx
00065Ar 2  A9 00            lda #0
00065Cr 2  95 00            sta $00,x
00065Er 2  A9 00            lda #0
000660r 2  95 01            sta $01,x
000662r 2               
000662r 2               ; src/prelude.fth:21:13 in `0=`
000662r 2               @OPCODE_174:   ; [c64_ir] JumpElse(18)
000662r 2  4C rr rr         jmp @target_18
000665r 2               
000665r 2               @target_17:
000665r 2               
000665r 2               ; src/prelude.fth:21:18 in `0=`
000665r 2               @OPCODE_176:   ; [c64_ir] PushLiteral(-1)
000665r 2  E8               inx
000666r 2  E8               inx
000667r 2  A9 FF            lda #255
000669r 2  95 00            sta $00,x
00066Br 2  A9 FF            lda #255
00066Dr 2  95 01            sta $01,x
00066Fr 2               
00066Fr 2               ; src/prelude.fth:21:21 in `0=`
00066Fr 2               @OPCODE_177:   ; [c64_ir] JumpTarget(17)
00066Fr 2               
00066Fr 2               @target_18:
00066Fr 2               
00066Fr 2               ; src/prelude.fth:3:10 in `swap`
00066Fr 2               @OPCODE_179:   ; [c64_ir] AltPush
00066Fr 2  CA               dex
000670r 2  CA               dex
000671r 2  B5 03            lda $03,x
000673r 2  48               pha
000674r 2  B5 02            lda $02,x
000676r 2  48               pha
000677r 2               
000677r 2               ; src/prelude.fth:3:19 in `swap`
000677r 2               @OPCODE_180:   ; [c64_ir] AltPop
000677r 2  E8               inx
000678r 2  E8               inx
000679r 2  68               pla
00067Ar 2  95 00            sta $00,x
00067Cr 2  68               pla
00067Dr 2  95 01            sta $01,x
00067Fr 2               
00067Fr 2               ; src/prelude.fth:44:25 in `*`
00067Fr 2               @OPCODE_181:   ; [c64_ir] LoopIf0(15)
00067Fr 2  CA               dex
000680r 2  CA               dex
000681r 2  B5 02            lda $02,x
000683r 2  15 03            ora $03,x
000685r 2  D0 03            bne *+5
000687r 2  4C rr rr         jmp @target_15
00068Ar 2               
00068Ar 2               @target_19:
00068Ar 2               
00068Ar 2               ; src/prelude.fth:44:25 in `*`
00068Ar 2               @OPCODE_183:   ; [c64_ir] AltPop
00068Ar 2  E8               inx
00068Br 2  E8               inx
00068Cr 2  68               pla
00068Dr 2  95 00            sta $00,x
00068Fr 2  68               pla
000690r 2  95 01            sta $01,x
000692r 2               
000692r 2               ; src/prelude.fth:44:25 in `*`
000692r 2               @OPCODE_184:   ; [c64_ir] Drop
000692r 2  CA               dex
000693r 2  CA               dex
000694r 2               
000694r 2               ; src/prelude.fth:44:25 in `*`
000694r 2               @OPCODE_185:   ; [c64_ir] AltPop
000694r 2  E8               inx
000695r 2  E8               inx
000696r 2  68               pla
000697r 2  95 00            sta $00,x
000699r 2  68               pla
00069Ar 2  95 01            sta $01,x
00069Cr 2               
00069Cr 2               ; src/prelude.fth:44:25 in `*`
00069Cr 2               @OPCODE_186:   ; [c64_ir] Drop
00069Cr 2  CA               dex
00069Dr 2  CA               dex
00069Er 2               
00069Er 2               ; src/prelude.fth:3:10 in `swap`
00069Er 2               @OPCODE_187:   ; [c64_ir] AltPush
00069Er 2  CA               dex
00069Fr 2  CA               dex
0006A0r 2  B5 03            lda $03,x
0006A2r 2  48               pha
0006A3r 2  B5 02            lda $02,x
0006A5r 2  48               pha
0006A6r 2               
0006A6r 2               ; src/prelude.fth:3:13 in `swap`
0006A6r 2               @OPCODE_188:   ; [c64_ir] TempStore
0006A6r 2  CA               dex
0006A7r 2  CA               dex
0006A8r 2  B5 03            lda $03,x
0006AAr 2  85 96            sta TEMP_PAX2
0006ACr 2  B5 02            lda $02,x
0006AEr 2  85 95            sta TEMP_PAX1
0006B0r 2               
0006B0r 2               ; src/prelude.fth:3:19 in `swap`
0006B0r 2               @OPCODE_189:   ; [c64_ir] AltPop
0006B0r 2  E8               inx
0006B1r 2  E8               inx
0006B2r 2  68               pla
0006B3r 2  95 00            sta $00,x
0006B5r 2  68               pla
0006B6r 2  95 01            sta $01,x
0006B8r 2               
0006B8r 2               ; <inline>:0:0 in `main`
0006B8r 2               @OPCODE_190:   ; [c64_ir] AltPop
0006B8r 2  E8               inx
0006B9r 2  E8               inx
0006BAr 2  68               pla
0006BBr 2  95 00            sta $00,x
0006BDr 2  68               pla
0006BEr 2  95 01            sta $01,x
0006C0r 2               
0006C0r 2               ; <inline>:0:0 in `main`
0006C0r 2               @OPCODE_191:   ; [c64_ir] Drop
0006C0r 2  CA               dex
0006C1r 2  CA               dex
0006C2r 2               
0006C2r 2               ; snake.pax:70:5 in `draw-walls`
0006C2r 2               @OPCODE_192:   ; [c64_ir] PushLiteral(40)
0006C2r 2  E8               inx
0006C3r 2  E8               inx
0006C4r 2  A9 28            lda #40
0006C6r 2  95 00            sta $00,x
0006C8r 2  A9 00            lda #0
0006CAr 2  95 01            sta $01,x
0006CCr 2               
0006CCr 2               ; snake.pax:70:11 in `draw-walls`
0006CCr 2               @OPCODE_193:   ; [c64_ir] PushLiteral(0)
0006CCr 2  E8               inx
0006CDr 2  E8               inx
0006CEr 2  A9 00            lda #0
0006D0r 2  95 00            sta $00,x
0006D2r 2  A9 00            lda #0
0006D4r 2  95 01            sta $01,x
0006D6r 2               
0006D6r 2               ; snake.pax:70:13 in `draw-walls`
0006D6r 2               @OPCODE_194:   ; [c64_ir] AltPush
0006D6r 2  CA               dex
0006D7r 2  CA               dex
0006D8r 2  B5 03            lda $03,x
0006DAr 2  48               pha
0006DBr 2  B5 02            lda $02,x
0006DDr 2  48               pha
0006DEr 2               
0006DEr 2               ; snake.pax:70:13 in `draw-walls`
0006DEr 2               @OPCODE_195:   ; [c64_ir] AltPush
0006DEr 2  CA               dex
0006DFr 2  CA               dex
0006E0r 2  B5 03            lda $03,x
0006E2r 2  48               pha
0006E3r 2  B5 02            lda $02,x
0006E5r 2  48               pha
0006E6r 2               
0006E6r 2               ; snake.pax:70:13 in `draw-walls`
0006E6r 2               @OPCODE_196:   ; [c64_ir] LoopTarget(19)
0006E6r 2               
0006E6r 2               @target_20:
0006E6r 2               
0006E6r 2               ; src/prelude.fth:4:13 in `over`
0006E6r 2               @OPCODE_198:   ; [c64_ir] TempStore
0006E6r 2  CA               dex
0006E7r 2  CA               dex
0006E8r 2  B5 03            lda $03,x
0006EAr 2  85 96            sta TEMP_PAX2
0006ECr 2  B5 02            lda $02,x
0006EEr 2  85 95            sta TEMP_PAX1
0006F0r 2               
0006F0r 2               ; src/prelude.fth:4:19 in `over`
0006F0r 2               @OPCODE_199:   ; [c64_ir] TempLoad
0006F0r 2  E8               inx
0006F1r 2  E8               inx
0006F2r 2  A5 95            lda TEMP_PAX1
0006F4r 2  95 00            sta $00,x
0006F6r 2  A5 96            lda TEMP_PAX2
0006F8r 2  95 01            sta $01,x
0006FAr 2               
0006FAr 2               ; src/prelude.fth:4:25 in `over`
0006FAr 2               @OPCODE_200:   ; [c64_ir] PushLiteral(230)
0006FAr 2  E8               inx
0006FBr 2  E8               inx
0006FCr 2  A9 E6            lda #230
0006FEr 2  95 00            sta $00,x
000700r 2  A9 00            lda #0
000702r 2  95 01            sta $01,x
000704r 2               
000704r 2               ; src/prelude.fth:4:28 in `over`
000704r 2               @OPCODE_201:   ; [c64_ir] TempLoad
000704r 2  E8               inx
000705r 2  E8               inx
000706r 2  A5 95            lda TEMP_PAX1
000708r 2  95 00            sta $00,x
00070Ar 2  A5 96            lda TEMP_PAX2
00070Cr 2  95 01            sta $01,x
00070Er 2               
00070Er 2               ; src/prelude.fth:38:8 in `i`
00070Er 2               @OPCODE_202:   ; [c64_ir] AltPop
00070Er 2  E8               inx
00070Fr 2  E8               inx
000710r 2  68               pla
000711r 2  95 00            sta $00,x
000713r 2  68               pla
000714r 2  95 01            sta $01,x
000716r 2               
000716r 2               ; src/prelude.fth:38:11 in `i`
000716r 2               @OPCODE_203:   ; [c64_ir] AltPop
000716r 2  E8               inx
000717r 2  E8               inx
000718r 2  68               pla
000719r 2  95 00            sta $00,x
00071Br 2  68               pla
00071Cr 2  95 01            sta $01,x
00071Er 2               
00071Er 2               ; src/prelude.fth:38:14 in `i`
00071Er 2               @OPCODE_204:   ; [c64_ir] TempStore
00071Er 2  CA               dex
00071Fr 2  CA               dex
000720r 2  B5 03            lda $03,x
000722r 2  85 96            sta TEMP_PAX2
000724r 2  B5 02            lda $02,x
000726r 2  85 95            sta TEMP_PAX1
000728r 2               
000728r 2               ; src/prelude.fth:38:20 in `i`
000728r 2               @OPCODE_205:   ; [c64_ir] TempLoad
000728r 2  E8               inx
000729r 2  E8               inx
00072Ar 2  A5 95            lda TEMP_PAX1
00072Cr 2  95 00            sta $00,x
00072Er 2  A5 96            lda TEMP_PAX2
000730r 2  95 01            sta $01,x
000732r 2               
000732r 2               ; src/prelude.fth:38:26 in `i`
000732r 2               @OPCODE_206:   ; [c64_ir] AltPush
000732r 2  CA               dex
000733r 2  CA               dex
000734r 2  B5 03            lda $03,x
000736r 2  48               pha
000737r 2  B5 02            lda $02,x
000739r 2  48               pha
00073Ar 2               
00073Ar 2               ; src/prelude.fth:38:29 in `i`
00073Ar 2               @OPCODE_207:   ; [c64_ir] AltPush
00073Ar 2  CA               dex
00073Br 2  CA               dex
00073Cr 2  B5 03            lda $03,x
00073Er 2  48               pha
00073Fr 2  B5 02            lda $02,x
000741r 2  48               pha
000742r 2               
000742r 2               ; src/prelude.fth:38:35 in `i`
000742r 2               @OPCODE_208:   ; [c64_ir] TempLoad
000742r 2  E8               inx
000743r 2  E8               inx
000744r 2  A5 95            lda TEMP_PAX1
000746r 2  95 00            sta $00,x
000748r 2  A5 96            lda TEMP_PAX2
00074Ar 2  95 01            sta $01,x
00074Cr 2               
00074Cr 2               ; snake.pax:71:21 in `draw-walls`
00074Cr 2               @OPCODE_209:   ; [c64_ir] Add
00074Cr 2                   ; 21
00074Cr 2  CA               dex
00074Dr 2  CA               dex
00074Er 2  18               clc
00074Fr 2  B5 00            lda $00,x
000751r 2  75 02            adc $02,x
000753r 2  95 00            sta $00,x
000755r 2  B5 01            lda $01,x
000757r 2  75 03            adc $03,x
000759r 2  95 01            sta $01,x
00075Br 2               
00075Br 2               ; snake.pax:49:34 in `draw-index`
00075Br 2               @OPCODE_210:   ; [c64_ir] PushLiteral(1024)
00075Br 2  E8               inx
00075Cr 2  E8               inx
00075Dr 2  A9 00            lda #0
00075Fr 2  95 00            sta $00,x
000761r 2  A9 04            lda #4
000763r 2  95 01            sta $01,x
000765r 2               
000765r 2               ; snake.pax:49:43 in `draw-index`
000765r 2               @OPCODE_211:   ; [c64_ir] Add
000765r 2                   ; 21
000765r 2  CA               dex
000766r 2  CA               dex
000767r 2  18               clc
000768r 2  B5 00            lda $00,x
00076Ar 2  75 02            adc $02,x
00076Cr 2  95 00            sta $00,x
00076Er 2  B5 01            lda $01,x
000770r 2  75 03            adc $03,x
000772r 2  95 01            sta $01,x
000774r 2               
000774r 2               ; snake.pax:49:45 in `draw-index`
000774r 2               @OPCODE_212:   ; [c64_ir] Store8
000774r 2  CA               dex
000775r 2  CA               dex
000776r 2  CA               dex
000777r 2  CA               dex
000778r 2  B5 02            lda $02,x
00077Ar 2  81 04            sta ($04,x)
00077Cr 2                   ; TODO high byte
00077Cr 2               
00077Cr 2               ; src/prelude.fth:33:15 in `loopimpl`
00077Cr 2               @OPCODE_213:   ; [c64_ir] AltPop
00077Cr 2  E8               inx
00077Dr 2  E8               inx
00077Er 2  68               pla
00077Fr 2  95 00            sta $00,x
000781r 2  68               pla
000782r 2  95 01            sta $01,x
000784r 2               
000784r 2               ; src/prelude.fth:33:18 in `loopimpl`
000784r 2               @OPCODE_214:   ; [c64_ir] AltPop
000784r 2  E8               inx
000785r 2  E8               inx
000786r 2  68               pla
000787r 2  95 00            sta $00,x
000789r 2  68               pla
00078Ar 2  95 01            sta $01,x
00078Cr 2               
00078Cr 2               ; src/prelude.fth:18:8 in `1+`
00078Cr 2               @OPCODE_215:   ; [c64_ir] PushLiteral(1)
00078Cr 2  E8               inx
00078Dr 2  E8               inx
00078Er 2  A9 01            lda #1
000790r 2  95 00            sta $00,x
000792r 2  A9 00            lda #0
000794r 2  95 01            sta $01,x
000796r 2               
000796r 2               ; src/prelude.fth:18:10 in `1+`
000796r 2               @OPCODE_216:   ; [c64_ir] Add
000796r 2                   ; 21
000796r 2  CA               dex
000797r 2  CA               dex
000798r 2  18               clc
000799r 2  B5 00            lda $00,x
00079Br 2  75 02            adc $02,x
00079Dr 2  95 00            sta $00,x
00079Fr 2  B5 01            lda $01,x
0007A1r 2  75 03            adc $03,x
0007A3r 2  95 01            sta $01,x
0007A5r 2               
0007A5r 2               ; src/prelude.fth:4:10 in `over`
0007A5r 2               @OPCODE_217:   ; [c64_ir] AltPush
0007A5r 2  CA               dex
0007A6r 2  CA               dex
0007A7r 2  B5 03            lda $03,x
0007A9r 2  48               pha
0007AAr 2  B5 02            lda $02,x
0007ACr 2  48               pha
0007ADr 2               
0007ADr 2               ; src/prelude.fth:4:13 in `over`
0007ADr 2               @OPCODE_218:   ; [c64_ir] TempStore
0007ADr 2  CA               dex
0007AEr 2  CA               dex
0007AFr 2  B5 03            lda $03,x
0007B1r 2  85 96            sta TEMP_PAX2
0007B3r 2  B5 02            lda $02,x
0007B5r 2  85 95            sta TEMP_PAX1
0007B7r 2               
0007B7r 2               ; src/prelude.fth:4:19 in `over`
0007B7r 2               @OPCODE_219:   ; [c64_ir] TempLoad
0007B7r 2  E8               inx
0007B8r 2  E8               inx
0007B9r 2  A5 95            lda TEMP_PAX1
0007BBr 2  95 00            sta $00,x
0007BDr 2  A5 96            lda TEMP_PAX2
0007BFr 2  95 01            sta $01,x
0007C1r 2               
0007C1r 2               ; src/prelude.fth:4:25 in `over`
0007C1r 2               @OPCODE_220:   ; [c64_ir] AltPop
0007C1r 2  E8               inx
0007C2r 2  E8               inx
0007C3r 2  68               pla
0007C4r 2  95 00            sta $00,x
0007C6r 2  68               pla
0007C7r 2  95 01            sta $01,x
0007C9r 2               
0007C9r 2               ; src/prelude.fth:4:28 in `over`
0007C9r 2               @OPCODE_221:   ; [c64_ir] TempLoad
0007C9r 2  E8               inx
0007CAr 2  E8               inx
0007CBr 2  A5 95            lda TEMP_PAX1
0007CDr 2  95 00            sta $00,x
0007CFr 2  A5 96            lda TEMP_PAX2
0007D1r 2  95 01            sta $01,x
0007D3r 2               
0007D3r 2               ; src/prelude.fth:4:10 in `over`
0007D3r 2               @OPCODE_222:   ; [c64_ir] AltPush
0007D3r 2  CA               dex
0007D4r 2  CA               dex
0007D5r 2  B5 03            lda $03,x
0007D7r 2  48               pha
0007D8r 2  B5 02            lda $02,x
0007DAr 2  48               pha
0007DBr 2               
0007DBr 2               ; src/prelude.fth:4:13 in `over`
0007DBr 2               @OPCODE_223:   ; [c64_ir] TempStore
0007DBr 2  CA               dex
0007DCr 2  CA               dex
0007DDr 2  B5 03            lda $03,x
0007DFr 2  85 96            sta TEMP_PAX2
0007E1r 2  B5 02            lda $02,x
0007E3r 2  85 95            sta TEMP_PAX1
0007E5r 2               
0007E5r 2               ; src/prelude.fth:4:19 in `over`
0007E5r 2               @OPCODE_224:   ; [c64_ir] TempLoad
0007E5r 2  E8               inx
0007E6r 2  E8               inx
0007E7r 2  A5 95            lda TEMP_PAX1
0007E9r 2  95 00            sta $00,x
0007EBr 2  A5 96            lda TEMP_PAX2
0007EDr 2  95 01            sta $01,x
0007EFr 2               
0007EFr 2               ; src/prelude.fth:4:25 in `over`
0007EFr 2               @OPCODE_225:   ; [c64_ir] AltPop
0007EFr 2  E8               inx
0007F0r 2  E8               inx
0007F1r 2  68               pla
0007F2r 2  95 00            sta $00,x
0007F4r 2  68               pla
0007F5r 2  95 01            sta $01,x
0007F7r 2               
0007F7r 2               ; src/prelude.fth:4:28 in `over`
0007F7r 2               @OPCODE_226:   ; [c64_ir] TempLoad
0007F7r 2  E8               inx
0007F8r 2  E8               inx
0007F9r 2  A5 95            lda TEMP_PAX1
0007FBr 2  95 00            sta $00,x
0007FDr 2  A5 96            lda TEMP_PAX2
0007FFr 2  95 01            sta $01,x
000801r 2               
000801r 2               ; src/prelude.fth:33:29 in `loopimpl`
000801r 2               @OPCODE_227:   ; [c64_ir] AltPush
000801r 2  CA               dex
000802r 2  CA               dex
000803r 2  B5 03            lda $03,x
000805r 2  48               pha
000806r 2  B5 02            lda $02,x
000808r 2  48               pha
000809r 2               
000809r 2               ; src/prelude.fth:33:32 in `loopimpl`
000809r 2               @OPCODE_228:   ; [c64_ir] AltPush
000809r 2  CA               dex
00080Ar 2  CA               dex
00080Br 2  B5 03            lda $03,x
00080Dr 2  48               pha
00080Er 2  B5 02            lda $02,x
000810r 2  48               pha
000811r 2               
000811r 2               ; src/prelude.fth:14:12 in `invert`
000811r 2               @OPCODE_229:   ; [c64_ir] PushLiteral(-1)
000811r 2  E8               inx
000812r 2  E8               inx
000813r 2  A9 FF            lda #255
000815r 2  95 00            sta $00,x
000817r 2  A9 FF            lda #255
000819r 2  95 01            sta $01,x
00081Br 2               
00081Br 2               ; src/prelude.fth:14:15 in `invert`
00081Br 2               @OPCODE_230:   ; [c64_ir] Nand
00081Br 2                   ; 26
00081Br 2  CA               dex
00081Cr 2  CA               dex
00081Dr 2  B5 00            lda $00,x
00081Fr 2  35 02            and $02,x
000821r 2  49 FF            eor #$ff
000823r 2  95 00            sta $00,x
000825r 2  B5 01            lda $01,x
000827r 2  35 03            and $03,x
000829r 2  49 FF            eor #$ff
00082Br 2  95 01            sta $01,x
00082Dr 2               
00082Dr 2               ; src/prelude.fth:15:19 in `negate`
00082Dr 2               @OPCODE_231:   ; [c64_ir] PushLiteral(1)
00082Dr 2  E8               inx
00082Er 2  E8               inx
00082Fr 2  A9 01            lda #1
000831r 2  95 00            sta $00,x
000833r 2  A9 00            lda #0
000835r 2  95 01            sta $01,x
000837r 2               
000837r 2               ; src/prelude.fth:15:21 in `negate`
000837r 2               @OPCODE_232:   ; [c64_ir] Add
000837r 2                   ; 21
000837r 2  CA               dex
000838r 2  CA               dex
000839r 2  18               clc
00083Ar 2  B5 00            lda $00,x
00083Cr 2  75 02            adc $02,x
00083Er 2  95 00            sta $00,x
000840r 2  B5 01            lda $01,x
000842r 2  75 03            adc $03,x
000844r 2  95 01            sta $01,x
000846r 2               
000846r 2               ; src/prelude.fth:16:19 in `-`
000846r 2               @OPCODE_233:   ; [c64_ir] Add
000846r 2                   ; 21
000846r 2  CA               dex
000847r 2  CA               dex
000848r 2  18               clc
000849r 2  B5 00            lda $00,x
00084Br 2  75 02            adc $02,x
00084Dr 2  95 00            sta $00,x
00084Fr 2  B5 01            lda $01,x
000851r 2  75 03            adc $03,x
000853r 2  95 01            sta $01,x
000855r 2               
000855r 2               ; src/prelude.fth:21:8 in `0=`
000855r 2               @OPCODE_234:   ; [c64_ir] JumpIf0(22)
000855r 2  CA               dex
000856r 2  CA               dex
000857r 2  B5 02            lda $02,x
000859r 2  15 03            ora $03,x
00085Br 2  D0 03            bne *+5
00085Dr 2  4C rr rr         jmp @target_22
000860r 2               
000860r 2               @target_21:
000860r 2               
000860r 2               ; src/prelude.fth:21:11 in `0=`
000860r 2               @OPCODE_236:   ; [c64_ir] PushLiteral(0)
000860r 2  E8               inx
000861r 2  E8               inx
000862r 2  A9 00            lda #0
000864r 2  95 00            sta $00,x
000866r 2  A9 00            lda #0
000868r 2  95 01            sta $01,x
00086Ar 2               
00086Ar 2               ; src/prelude.fth:21:13 in `0=`
00086Ar 2               @OPCODE_237:   ; [c64_ir] JumpElse(23)
00086Ar 2  4C rr rr         jmp @target_23
00086Dr 2               
00086Dr 2               @target_22:
00086Dr 2               
00086Dr 2               ; src/prelude.fth:21:18 in `0=`
00086Dr 2               @OPCODE_239:   ; [c64_ir] PushLiteral(-1)
00086Dr 2  E8               inx
00086Er 2  E8               inx
00086Fr 2  A9 FF            lda #255
000871r 2  95 00            sta $00,x
000873r 2  A9 FF            lda #255
000875r 2  95 01            sta $01,x
000877r 2               
000877r 2               ; src/prelude.fth:21:21 in `0=`
000877r 2               @OPCODE_240:   ; [c64_ir] JumpTarget(22)
000877r 2               
000877r 2               @target_23:
000877r 2               
000877r 2               ; src/prelude.fth:3:10 in `swap`
000877r 2               @OPCODE_242:   ; [c64_ir] AltPush
000877r 2  CA               dex
000878r 2  CA               dex
000879r 2  B5 03            lda $03,x
00087Br 2  48               pha
00087Cr 2  B5 02            lda $02,x
00087Er 2  48               pha
00087Fr 2               
00087Fr 2               ; src/prelude.fth:3:19 in `swap`
00087Fr 2               @OPCODE_243:   ; [c64_ir] AltPop
00087Fr 2  E8               inx
000880r 2  E8               inx
000881r 2  68               pla
000882r 2  95 00            sta $00,x
000884r 2  68               pla
000885r 2  95 01            sta $01,x
000887r 2               
000887r 2               ; snake.pax:72:5 in `draw-walls`
000887r 2               @OPCODE_244:   ; [c64_ir] LoopIf0(20)
000887r 2  CA               dex
000888r 2  CA               dex
000889r 2  B5 02            lda $02,x
00088Br 2  15 03            ora $03,x
00088Dr 2  D0 03            bne *+5
00088Fr 2  4C rr rr         jmp @target_20
000892r 2               
000892r 2               @target_24:
000892r 2               
000892r 2               ; snake.pax:72:5 in `draw-walls`
000892r 2               @OPCODE_246:   ; [c64_ir] AltPop
000892r 2  E8               inx
000893r 2  E8               inx
000894r 2  68               pla
000895r 2  95 00            sta $00,x
000897r 2  68               pla
000898r 2  95 01            sta $01,x
00089Ar 2               
00089Ar 2               ; snake.pax:72:5 in `draw-walls`
00089Ar 2               @OPCODE_247:   ; [c64_ir] Drop
00089Ar 2  CA               dex
00089Br 2  CA               dex
00089Cr 2               
00089Cr 2               ; snake.pax:72:5 in `draw-walls`
00089Cr 2               @OPCODE_248:   ; [c64_ir] AltPop
00089Cr 2  E8               inx
00089Dr 2  E8               inx
00089Er 2  68               pla
00089Fr 2  95 00            sta $00,x
0008A1r 2  68               pla
0008A2r 2  95 01            sta $01,x
0008A4r 2               
0008A4r 2               ; snake.pax:72:5 in `draw-walls`
0008A4r 2               @OPCODE_249:   ; [c64_ir] Drop
0008A4r 2  CA               dex
0008A5r 2  CA               dex
0008A6r 2               
0008A6r 2               ; snake.pax:73:5 in `draw-walls`
0008A6r 2               @OPCODE_250:   ; [c64_ir] Drop
0008A6r 2  CA               dex
0008A7r 2  CA               dex
0008A8r 2               
0008A8r 2               ; snake.pax:74:5 in `draw-walls`
0008A8r 2               @OPCODE_251:   ; [c64_ir] PushLiteral(40)
0008A8r 2  E8               inx
0008A9r 2  E8               inx
0008AAr 2  A9 28            lda #40
0008ACr 2  95 00            sta $00,x
0008AEr 2  A9 00            lda #0
0008B0r 2  95 01            sta $01,x
0008B2r 2               
0008B2r 2               ; snake.pax:74:11 in `draw-walls`
0008B2r 2               @OPCODE_252:   ; [c64_ir] PushLiteral(0)
0008B2r 2  E8               inx
0008B3r 2  E8               inx
0008B4r 2  A9 00            lda #0
0008B6r 2  95 00            sta $00,x
0008B8r 2  A9 00            lda #0
0008BAr 2  95 01            sta $01,x
0008BCr 2               
0008BCr 2               ; snake.pax:74:13 in `draw-walls`
0008BCr 2               @OPCODE_253:   ; [c64_ir] AltPush
0008BCr 2  CA               dex
0008BDr 2  CA               dex
0008BEr 2  B5 03            lda $03,x
0008C0r 2  48               pha
0008C1r 2  B5 02            lda $02,x
0008C3r 2  48               pha
0008C4r 2               
0008C4r 2               ; snake.pax:74:13 in `draw-walls`
0008C4r 2               @OPCODE_254:   ; [c64_ir] AltPush
0008C4r 2  CA               dex
0008C5r 2  CA               dex
0008C6r 2  B5 03            lda $03,x
0008C8r 2  48               pha
0008C9r 2  B5 02            lda $02,x
0008CBr 2  48               pha
0008CCr 2               
0008CCr 2               ; snake.pax:74:13 in `draw-walls`
0008CCr 2               @OPCODE_255:   ; [c64_ir] LoopTarget(24)
0008CCr 2               
0008CCr 2               @target_25:
0008CCr 2               
0008CCr 2               ; snake.pax:75:9 in `draw-walls`
0008CCr 2               @OPCODE_257:   ; [c64_ir] PushLiteral(230)
0008CCr 2  E8               inx
0008CDr 2  E8               inx
0008CEr 2  A9 E6            lda #230
0008D0r 2  95 00            sta $00,x
0008D2r 2  A9 00            lda #0
0008D4r 2  95 01            sta $01,x
0008D6r 2               
0008D6r 2               ; src/prelude.fth:38:8 in `i`
0008D6r 2               @OPCODE_258:   ; [c64_ir] AltPop
0008D6r 2  E8               inx
0008D7r 2  E8               inx
0008D8r 2  68               pla
0008D9r 2  95 00            sta $00,x
0008DBr 2  68               pla
0008DCr 2  95 01            sta $01,x
0008DEr 2               
0008DEr 2               ; src/prelude.fth:38:11 in `i`
0008DEr 2               @OPCODE_259:   ; [c64_ir] AltPop
0008DEr 2  E8               inx
0008DFr 2  E8               inx
0008E0r 2  68               pla
0008E1r 2  95 00            sta $00,x
0008E3r 2  68               pla
0008E4r 2  95 01            sta $01,x
0008E6r 2               
0008E6r 2               ; src/prelude.fth:38:14 in `i`
0008E6r 2               @OPCODE_260:   ; [c64_ir] TempStore
0008E6r 2  CA               dex
0008E7r 2  CA               dex
0008E8r 2  B5 03            lda $03,x
0008EAr 2  85 96            sta TEMP_PAX2
0008ECr 2  B5 02            lda $02,x
0008EEr 2  85 95            sta TEMP_PAX1
0008F0r 2               
0008F0r 2               ; src/prelude.fth:38:20 in `i`
0008F0r 2               @OPCODE_261:   ; [c64_ir] TempLoad
0008F0r 2  E8               inx
0008F1r 2  E8               inx
0008F2r 2  A5 95            lda TEMP_PAX1
0008F4r 2  95 00            sta $00,x
0008F6r 2  A5 96            lda TEMP_PAX2
0008F8r 2  95 01            sta $01,x
0008FAr 2               
0008FAr 2               ; src/prelude.fth:38:26 in `i`
0008FAr 2               @OPCODE_262:   ; [c64_ir] AltPush
0008FAr 2  CA               dex
0008FBr 2  CA               dex
0008FCr 2  B5 03            lda $03,x
0008FEr 2  48               pha
0008FFr 2  B5 02            lda $02,x
000901r 2  48               pha
000902r 2               
000902r 2               ; src/prelude.fth:38:29 in `i`
000902r 2               @OPCODE_263:   ; [c64_ir] AltPush
000902r 2  CA               dex
000903r 2  CA               dex
000904r 2  B5 03            lda $03,x
000906r 2  48               pha
000907r 2  B5 02            lda $02,x
000909r 2  48               pha
00090Ar 2               
00090Ar 2               ; src/prelude.fth:38:35 in `i`
00090Ar 2               @OPCODE_264:   ; [c64_ir] TempLoad
00090Ar 2  E8               inx
00090Br 2  E8               inx
00090Cr 2  A5 95            lda TEMP_PAX1
00090Er 2  95 00            sta $00,x
000910r 2  A5 96            lda TEMP_PAX2
000912r 2  95 01            sta $01,x
000914r 2               
000914r 2               ; snake.pax:49:34 in `draw-index`
000914r 2               @OPCODE_265:   ; [c64_ir] PushLiteral(1024)
000914r 2  E8               inx
000915r 2  E8               inx
000916r 2  A9 00            lda #0
000918r 2  95 00            sta $00,x
00091Ar 2  A9 04            lda #4
00091Cr 2  95 01            sta $01,x
00091Er 2               
00091Er 2               ; snake.pax:49:43 in `draw-index`
00091Er 2               @OPCODE_266:   ; [c64_ir] Add
00091Er 2                   ; 21
00091Er 2  CA               dex
00091Fr 2  CA               dex
000920r 2  18               clc
000921r 2  B5 00            lda $00,x
000923r 2  75 02            adc $02,x
000925r 2  95 00            sta $00,x
000927r 2  B5 01            lda $01,x
000929r 2  75 03            adc $03,x
00092Br 2  95 01            sta $01,x
00092Dr 2               
00092Dr 2               ; snake.pax:49:45 in `draw-index`
00092Dr 2               @OPCODE_267:   ; [c64_ir] Store8
00092Dr 2  CA               dex
00092Er 2  CA               dex
00092Fr 2  CA               dex
000930r 2  CA               dex
000931r 2  B5 02            lda $02,x
000933r 2  81 04            sta ($04,x)
000935r 2                   ; TODO high byte
000935r 2               
000935r 2               ; src/prelude.fth:33:15 in `loopimpl`
000935r 2               @OPCODE_268:   ; [c64_ir] AltPop
000935r 2  E8               inx
000936r 2  E8               inx
000937r 2  68               pla
000938r 2  95 00            sta $00,x
00093Ar 2  68               pla
00093Br 2  95 01            sta $01,x
00093Dr 2               
00093Dr 2               ; src/prelude.fth:33:18 in `loopimpl`
00093Dr 2               @OPCODE_269:   ; [c64_ir] AltPop
00093Dr 2  E8               inx
00093Er 2  E8               inx
00093Fr 2  68               pla
000940r 2  95 00            sta $00,x
000942r 2  68               pla
000943r 2  95 01            sta $01,x
000945r 2               
000945r 2               ; src/prelude.fth:18:8 in `1+`
000945r 2               @OPCODE_270:   ; [c64_ir] PushLiteral(1)
000945r 2  E8               inx
000946r 2  E8               inx
000947r 2  A9 01            lda #1
000949r 2  95 00            sta $00,x
00094Br 2  A9 00            lda #0
00094Dr 2  95 01            sta $01,x
00094Fr 2               
00094Fr 2               ; src/prelude.fth:18:10 in `1+`
00094Fr 2               @OPCODE_271:   ; [c64_ir] Add
00094Fr 2                   ; 21
00094Fr 2  CA               dex
000950r 2  CA               dex
000951r 2  18               clc
000952r 2  B5 00            lda $00,x
000954r 2  75 02            adc $02,x
000956r 2  95 00            sta $00,x
000958r 2  B5 01            lda $01,x
00095Ar 2  75 03            adc $03,x
00095Cr 2  95 01            sta $01,x
00095Er 2               
00095Er 2               ; src/prelude.fth:4:10 in `over`
00095Er 2               @OPCODE_272:   ; [c64_ir] AltPush
00095Er 2  CA               dex
00095Fr 2  CA               dex
000960r 2  B5 03            lda $03,x
000962r 2  48               pha
000963r 2  B5 02            lda $02,x
000965r 2  48               pha
000966r 2               
000966r 2               ; src/prelude.fth:4:13 in `over`
000966r 2               @OPCODE_273:   ; [c64_ir] TempStore
000966r 2  CA               dex
000967r 2  CA               dex
000968r 2  B5 03            lda $03,x
00096Ar 2  85 96            sta TEMP_PAX2
00096Cr 2  B5 02            lda $02,x
00096Er 2  85 95            sta TEMP_PAX1
000970r 2               
000970r 2               ; src/prelude.fth:4:19 in `over`
000970r 2               @OPCODE_274:   ; [c64_ir] TempLoad
000970r 2  E8               inx
000971r 2  E8               inx
000972r 2  A5 95            lda TEMP_PAX1
000974r 2  95 00            sta $00,x
000976r 2  A5 96            lda TEMP_PAX2
000978r 2  95 01            sta $01,x
00097Ar 2               
00097Ar 2               ; src/prelude.fth:4:25 in `over`
00097Ar 2               @OPCODE_275:   ; [c64_ir] AltPop
00097Ar 2  E8               inx
00097Br 2  E8               inx
00097Cr 2  68               pla
00097Dr 2  95 00            sta $00,x
00097Fr 2  68               pla
000980r 2  95 01            sta $01,x
000982r 2               
000982r 2               ; src/prelude.fth:4:28 in `over`
000982r 2               @OPCODE_276:   ; [c64_ir] TempLoad
000982r 2  E8               inx
000983r 2  E8               inx
000984r 2  A5 95            lda TEMP_PAX1
000986r 2  95 00            sta $00,x
000988r 2  A5 96            lda TEMP_PAX2
00098Ar 2  95 01            sta $01,x
00098Cr 2               
00098Cr 2               ; src/prelude.fth:4:10 in `over`
00098Cr 2               @OPCODE_277:   ; [c64_ir] AltPush
00098Cr 2  CA               dex
00098Dr 2  CA               dex
00098Er 2  B5 03            lda $03,x
000990r 2  48               pha
000991r 2  B5 02            lda $02,x
000993r 2  48               pha
000994r 2               
000994r 2               ; src/prelude.fth:4:13 in `over`
000994r 2               @OPCODE_278:   ; [c64_ir] TempStore
000994r 2  CA               dex
000995r 2  CA               dex
000996r 2  B5 03            lda $03,x
000998r 2  85 96            sta TEMP_PAX2
00099Ar 2  B5 02            lda $02,x
00099Cr 2  85 95            sta TEMP_PAX1
00099Er 2               
00099Er 2               ; src/prelude.fth:4:19 in `over`
00099Er 2               @OPCODE_279:   ; [c64_ir] TempLoad
00099Er 2  E8               inx
00099Fr 2  E8               inx
0009A0r 2  A5 95            lda TEMP_PAX1
0009A2r 2  95 00            sta $00,x
0009A4r 2  A5 96            lda TEMP_PAX2
0009A6r 2  95 01            sta $01,x
0009A8r 2               
0009A8r 2               ; src/prelude.fth:4:25 in `over`
0009A8r 2               @OPCODE_280:   ; [c64_ir] AltPop
0009A8r 2  E8               inx
0009A9r 2  E8               inx
0009AAr 2  68               pla
0009ABr 2  95 00            sta $00,x
0009ADr 2  68               pla
0009AEr 2  95 01            sta $01,x
0009B0r 2               
0009B0r 2               ; src/prelude.fth:4:28 in `over`
0009B0r 2               @OPCODE_281:   ; [c64_ir] TempLoad
0009B0r 2  E8               inx
0009B1r 2  E8               inx
0009B2r 2  A5 95            lda TEMP_PAX1
0009B4r 2  95 00            sta $00,x
0009B6r 2  A5 96            lda TEMP_PAX2
0009B8r 2  95 01            sta $01,x
0009BAr 2               
0009BAr 2               ; src/prelude.fth:33:29 in `loopimpl`
0009BAr 2               @OPCODE_282:   ; [c64_ir] AltPush
0009BAr 2  CA               dex
0009BBr 2  CA               dex
0009BCr 2  B5 03            lda $03,x
0009BEr 2  48               pha
0009BFr 2  B5 02            lda $02,x
0009C1r 2  48               pha
0009C2r 2               
0009C2r 2               ; src/prelude.fth:33:32 in `loopimpl`
0009C2r 2               @OPCODE_283:   ; [c64_ir] AltPush
0009C2r 2  CA               dex
0009C3r 2  CA               dex
0009C4r 2  B5 03            lda $03,x
0009C6r 2  48               pha
0009C7r 2  B5 02            lda $02,x
0009C9r 2  48               pha
0009CAr 2               
0009CAr 2               ; src/prelude.fth:14:12 in `invert`
0009CAr 2               @OPCODE_284:   ; [c64_ir] PushLiteral(-1)
0009CAr 2  E8               inx
0009CBr 2  E8               inx
0009CCr 2  A9 FF            lda #255
0009CEr 2  95 00            sta $00,x
0009D0r 2  A9 FF            lda #255
0009D2r 2  95 01            sta $01,x
0009D4r 2               
0009D4r 2               ; src/prelude.fth:14:15 in `invert`
0009D4r 2               @OPCODE_285:   ; [c64_ir] Nand
0009D4r 2                   ; 26
0009D4r 2  CA               dex
0009D5r 2  CA               dex
0009D6r 2  B5 00            lda $00,x
0009D8r 2  35 02            and $02,x
0009DAr 2  49 FF            eor #$ff
0009DCr 2  95 00            sta $00,x
0009DEr 2  B5 01            lda $01,x
0009E0r 2  35 03            and $03,x
0009E2r 2  49 FF            eor #$ff
0009E4r 2  95 01            sta $01,x
0009E6r 2               
0009E6r 2               ; src/prelude.fth:15:19 in `negate`
0009E6r 2               @OPCODE_286:   ; [c64_ir] PushLiteral(1)
0009E6r 2  E8               inx
0009E7r 2  E8               inx
0009E8r 2  A9 01            lda #1
0009EAr 2  95 00            sta $00,x
0009ECr 2  A9 00            lda #0
0009EEr 2  95 01            sta $01,x
0009F0r 2               
0009F0r 2               ; src/prelude.fth:15:21 in `negate`
0009F0r 2               @OPCODE_287:   ; [c64_ir] Add
0009F0r 2                   ; 21
0009F0r 2  CA               dex
0009F1r 2  CA               dex
0009F2r 2  18               clc
0009F3r 2  B5 00            lda $00,x
0009F5r 2  75 02            adc $02,x
0009F7r 2  95 00            sta $00,x
0009F9r 2  B5 01            lda $01,x
0009FBr 2  75 03            adc $03,x
0009FDr 2  95 01            sta $01,x
0009FFr 2               
0009FFr 2               ; src/prelude.fth:16:19 in `-`
0009FFr 2               @OPCODE_288:   ; [c64_ir] Add
0009FFr 2                   ; 21
0009FFr 2  CA               dex
000A00r 2  CA               dex
000A01r 2  18               clc
000A02r 2  B5 00            lda $00,x
000A04r 2  75 02            adc $02,x
000A06r 2  95 00            sta $00,x
000A08r 2  B5 01            lda $01,x
000A0Ar 2  75 03            adc $03,x
000A0Cr 2  95 01            sta $01,x
000A0Er 2               
000A0Er 2               ; src/prelude.fth:21:8 in `0=`
000A0Er 2               @OPCODE_289:   ; [c64_ir] JumpIf0(27)
000A0Er 2  CA               dex
000A0Fr 2  CA               dex
000A10r 2  B5 02            lda $02,x
000A12r 2  15 03            ora $03,x
000A14r 2  D0 03            bne *+5
000A16r 2  4C rr rr         jmp @target_27
000A19r 2               
000A19r 2               @target_26:
000A19r 2               
000A19r 2               ; src/prelude.fth:21:11 in `0=`
000A19r 2               @OPCODE_291:   ; [c64_ir] PushLiteral(0)
000A19r 2  E8               inx
000A1Ar 2  E8               inx
000A1Br 2  A9 00            lda #0
000A1Dr 2  95 00            sta $00,x
000A1Fr 2  A9 00            lda #0
000A21r 2  95 01            sta $01,x
000A23r 2               
000A23r 2               ; src/prelude.fth:21:13 in `0=`
000A23r 2               @OPCODE_292:   ; [c64_ir] JumpElse(28)
000A23r 2  4C rr rr         jmp @target_28
000A26r 2               
000A26r 2               @target_27:
000A26r 2               
000A26r 2               ; src/prelude.fth:21:18 in `0=`
000A26r 2               @OPCODE_294:   ; [c64_ir] PushLiteral(-1)
000A26r 2  E8               inx
000A27r 2  E8               inx
000A28r 2  A9 FF            lda #255
000A2Ar 2  95 00            sta $00,x
000A2Cr 2  A9 FF            lda #255
000A2Er 2  95 01            sta $01,x
000A30r 2               
000A30r 2               ; src/prelude.fth:21:21 in `0=`
000A30r 2               @OPCODE_295:   ; [c64_ir] JumpTarget(27)
000A30r 2               
000A30r 2               @target_28:
000A30r 2               
000A30r 2               ; src/prelude.fth:3:10 in `swap`
000A30r 2               @OPCODE_297:   ; [c64_ir] AltPush
000A30r 2  CA               dex
000A31r 2  CA               dex
000A32r 2  B5 03            lda $03,x
000A34r 2  48               pha
000A35r 2  B5 02            lda $02,x
000A37r 2  48               pha
000A38r 2               
000A38r 2               ; src/prelude.fth:3:19 in `swap`
000A38r 2               @OPCODE_298:   ; [c64_ir] AltPop
000A38r 2  E8               inx
000A39r 2  E8               inx
000A3Ar 2  68               pla
000A3Br 2  95 00            sta $00,x
000A3Dr 2  68               pla
000A3Er 2  95 01            sta $01,x
000A40r 2               
000A40r 2               ; snake.pax:76:5 in `draw-walls`
000A40r 2               @OPCODE_299:   ; [c64_ir] LoopIf0(25)
000A40r 2  CA               dex
000A41r 2  CA               dex
000A42r 2  B5 02            lda $02,x
000A44r 2  15 03            ora $03,x
000A46r 2  D0 03            bne *+5
000A48r 2  4C rr rr         jmp @target_25
000A4Br 2               
000A4Br 2               @target_29:
000A4Br 2               
000A4Br 2               ; snake.pax:76:5 in `draw-walls`
000A4Br 2               @OPCODE_301:   ; [c64_ir] AltPop
000A4Br 2  E8               inx
000A4Cr 2  E8               inx
000A4Dr 2  68               pla
000A4Er 2  95 00            sta $00,x
000A50r 2  68               pla
000A51r 2  95 01            sta $01,x
000A53r 2               
000A53r 2               ; snake.pax:76:5 in `draw-walls`
000A53r 2               @OPCODE_302:   ; [c64_ir] Drop
000A53r 2  CA               dex
000A54r 2  CA               dex
000A55r 2               
000A55r 2               ; snake.pax:76:5 in `draw-walls`
000A55r 2               @OPCODE_303:   ; [c64_ir] AltPop
000A55r 2  E8               inx
000A56r 2  E8               inx
000A57r 2  68               pla
000A58r 2  95 00            sta $00,x
000A5Ar 2  68               pla
000A5Br 2  95 01            sta $01,x
000A5Dr 2               
000A5Dr 2               ; snake.pax:76:5 in `draw-walls`
000A5Dr 2               @OPCODE_304:   ; [c64_ir] Drop
000A5Dr 2  CA               dex
000A5Er 2  CA               dex
000A5Fr 2               
000A5Fr 2               ; snake.pax:78:5 in `draw-walls`
000A5Fr 2               @OPCODE_305:   ; [c64_ir] PushLiteral(40)
000A5Fr 2  E8               inx
000A60r 2  E8               inx
000A61r 2  A9 28            lda #40
000A63r 2  95 00            sta $00,x
000A65r 2  A9 00            lda #0
000A67r 2  95 01            sta $01,x
000A69r 2               
000A69r 2               ; snake.pax:78:11 in `draw-walls`
000A69r 2               @OPCODE_306:   ; [c64_ir] PushLiteral(1)
000A69r 2  E8               inx
000A6Ar 2  E8               inx
000A6Br 2  A9 01            lda #1
000A6Dr 2  95 00            sta $00,x
000A6Fr 2  A9 00            lda #0
000A71r 2  95 01            sta $01,x
000A73r 2               
000A73r 2               ; src/prelude.fth:14:12 in `invert`
000A73r 2               @OPCODE_307:   ; [c64_ir] PushLiteral(-1)
000A73r 2  E8               inx
000A74r 2  E8               inx
000A75r 2  A9 FF            lda #255
000A77r 2  95 00            sta $00,x
000A79r 2  A9 FF            lda #255
000A7Br 2  95 01            sta $01,x
000A7Dr 2               
000A7Dr 2               ; src/prelude.fth:14:15 in `invert`
000A7Dr 2               @OPCODE_308:   ; [c64_ir] Nand
000A7Dr 2                   ; 26
000A7Dr 2  CA               dex
000A7Er 2  CA               dex
000A7Fr 2  B5 00            lda $00,x
000A81r 2  35 02            and $02,x
000A83r 2  49 FF            eor #$ff
000A85r 2  95 00            sta $00,x
000A87r 2  B5 01            lda $01,x
000A89r 2  35 03            and $03,x
000A8Br 2  49 FF            eor #$ff
000A8Dr 2  95 01            sta $01,x
000A8Fr 2               
000A8Fr 2               ; src/prelude.fth:15:19 in `negate`
000A8Fr 2               @OPCODE_309:   ; [c64_ir] PushLiteral(1)
000A8Fr 2  E8               inx
000A90r 2  E8               inx
000A91r 2  A9 01            lda #1
000A93r 2  95 00            sta $00,x
000A95r 2  A9 00            lda #0
000A97r 2  95 01            sta $01,x
000A99r 2               
000A99r 2               ; src/prelude.fth:15:21 in `negate`
000A99r 2               @OPCODE_310:   ; [c64_ir] Add
000A99r 2                   ; 21
000A99r 2  CA               dex
000A9Ar 2  CA               dex
000A9Br 2  18               clc
000A9Cr 2  B5 00            lda $00,x
000A9Er 2  75 02            adc $02,x
000AA0r 2  95 00            sta $00,x
000AA2r 2  B5 01            lda $01,x
000AA4r 2  75 03            adc $03,x
000AA6r 2  95 01            sta $01,x
000AA8r 2               
000AA8r 2               ; src/prelude.fth:16:19 in `-`
000AA8r 2               @OPCODE_311:   ; [c64_ir] Add
000AA8r 2                   ; 21
000AA8r 2  CA               dex
000AA9r 2  CA               dex
000AAAr 2  18               clc
000AABr 2  B5 00            lda $00,x
000AADr 2  75 02            adc $02,x
000AAFr 2  95 00            sta $00,x
000AB1r 2  B5 01            lda $01,x
000AB3r 2  75 03            adc $03,x
000AB5r 2  95 01            sta $01,x
000AB7r 2               
000AB7r 2               ; snake.pax:79:5 in `draw-walls`
000AB7r 2               @OPCODE_312:   ; [c64_ir] PushLiteral(25)
000AB7r 2  E8               inx
000AB8r 2  E8               inx
000AB9r 2  A9 19            lda #25
000ABBr 2  95 00            sta $00,x
000ABDr 2  A9 00            lda #0
000ABFr 2  95 01            sta $01,x
000AC1r 2               
000AC1r 2               ; snake.pax:79:12 in `draw-walls`
000AC1r 2               @OPCODE_313:   ; [c64_ir] PushLiteral(0)
000AC1r 2  E8               inx
000AC2r 2  E8               inx
000AC3r 2  A9 00            lda #0
000AC5r 2  95 00            sta $00,x
000AC7r 2  A9 00            lda #0
000AC9r 2  95 01            sta $01,x
000ACBr 2               
000ACBr 2               ; snake.pax:79:14 in `draw-walls`
000ACBr 2               @OPCODE_314:   ; [c64_ir] AltPush
000ACBr 2  CA               dex
000ACCr 2  CA               dex
000ACDr 2  B5 03            lda $03,x
000ACFr 2  48               pha
000AD0r 2  B5 02            lda $02,x
000AD2r 2  48               pha
000AD3r 2               
000AD3r 2               ; snake.pax:79:14 in `draw-walls`
000AD3r 2               @OPCODE_315:   ; [c64_ir] AltPush
000AD3r 2  CA               dex
000AD4r 2  CA               dex
000AD5r 2  B5 03            lda $03,x
000AD7r 2  48               pha
000AD8r 2  B5 02            lda $02,x
000ADAr 2  48               pha
000ADBr 2               
000ADBr 2               ; snake.pax:79:14 in `draw-walls`
000ADBr 2               @OPCODE_316:   ; [c64_ir] LoopTarget(29)
000ADBr 2               
000ADBr 2               @target_30:
000ADBr 2               
000ADBr 2               ; src/prelude.fth:4:13 in `over`
000ADBr 2               @OPCODE_318:   ; [c64_ir] TempStore
000ADBr 2  CA               dex
000ADCr 2  CA               dex
000ADDr 2  B5 03            lda $03,x
000ADFr 2  85 96            sta TEMP_PAX2
000AE1r 2  B5 02            lda $02,x
000AE3r 2  85 95            sta TEMP_PAX1
000AE5r 2               
000AE5r 2               ; src/prelude.fth:4:19 in `over`
000AE5r 2               @OPCODE_319:   ; [c64_ir] TempLoad
000AE5r 2  E8               inx
000AE6r 2  E8               inx
000AE7r 2  A5 95            lda TEMP_PAX1
000AE9r 2  95 00            sta $00,x
000AEBr 2  A5 96            lda TEMP_PAX2
000AEDr 2  95 01            sta $01,x
000AEFr 2               
000AEFr 2               ; src/prelude.fth:4:25 in `over`
000AEFr 2               @OPCODE_320:   ; [c64_ir] PushLiteral(230)
000AEFr 2  E8               inx
000AF0r 2  E8               inx
000AF1r 2  A9 E6            lda #230
000AF3r 2  95 00            sta $00,x
000AF5r 2  A9 00            lda #0
000AF7r 2  95 01            sta $01,x
000AF9r 2               
000AF9r 2               ; src/prelude.fth:4:28 in `over`
000AF9r 2               @OPCODE_321:   ; [c64_ir] TempLoad
000AF9r 2  E8               inx
000AFAr 2  E8               inx
000AFBr 2  A5 95            lda TEMP_PAX1
000AFDr 2  95 00            sta $00,x
000AFFr 2  A5 96            lda TEMP_PAX2
000B01r 2  95 01            sta $01,x
000B03r 2               
000B03r 2               ; snake.pax:49:34 in `draw-index`
000B03r 2               @OPCODE_322:   ; [c64_ir] PushLiteral(1024)
000B03r 2  E8               inx
000B04r 2  E8               inx
000B05r 2  A9 00            lda #0
000B07r 2  95 00            sta $00,x
000B09r 2  A9 04            lda #4
000B0Br 2  95 01            sta $01,x
000B0Dr 2               
000B0Dr 2               ; snake.pax:49:43 in `draw-index`
000B0Dr 2               @OPCODE_323:   ; [c64_ir] Add
000B0Dr 2                   ; 21
000B0Dr 2  CA               dex
000B0Er 2  CA               dex
000B0Fr 2  18               clc
000B10r 2  B5 00            lda $00,x
000B12r 2  75 02            adc $02,x
000B14r 2  95 00            sta $00,x
000B16r 2  B5 01            lda $01,x
000B18r 2  75 03            adc $03,x
000B1Ar 2  95 01            sta $01,x
000B1Cr 2               
000B1Cr 2               ; snake.pax:49:45 in `draw-index`
000B1Cr 2               @OPCODE_324:   ; [c64_ir] Store8
000B1Cr 2  CA               dex
000B1Dr 2  CA               dex
000B1Er 2  CA               dex
000B1Fr 2  CA               dex
000B20r 2  B5 02            lda $02,x
000B22r 2  81 04            sta ($04,x)
000B24r 2                   ; TODO high byte
000B24r 2               
000B24r 2               ; snake.pax:81:9 in `draw-walls`
000B24r 2               @OPCODE_325:   ; [c64_ir] PushLiteral(40)
000B24r 2  E8               inx
000B25r 2  E8               inx
000B26r 2  A9 28            lda #40
000B28r 2  95 00            sta $00,x
000B2Ar 2  A9 00            lda #0
000B2Cr 2  95 01            sta $01,x
000B2Er 2               
000B2Er 2               ; snake.pax:81:15 in `draw-walls`
000B2Er 2               @OPCODE_326:   ; [c64_ir] Add
000B2Er 2                   ; 21
000B2Er 2  CA               dex
000B2Fr 2  CA               dex
000B30r 2  18               clc
000B31r 2  B5 00            lda $00,x
000B33r 2  75 02            adc $02,x
000B35r 2  95 00            sta $00,x
000B37r 2  B5 01            lda $01,x
000B39r 2  75 03            adc $03,x
000B3Br 2  95 01            sta $01,x
000B3Dr 2               
000B3Dr 2               ; src/prelude.fth:33:15 in `loopimpl`
000B3Dr 2               @OPCODE_327:   ; [c64_ir] AltPop
000B3Dr 2  E8               inx
000B3Er 2  E8               inx
000B3Fr 2  68               pla
000B40r 2  95 00            sta $00,x
000B42r 2  68               pla
000B43r 2  95 01            sta $01,x
000B45r 2               
000B45r 2               ; src/prelude.fth:33:18 in `loopimpl`
000B45r 2               @OPCODE_328:   ; [c64_ir] AltPop
000B45r 2  E8               inx
000B46r 2  E8               inx
000B47r 2  68               pla
000B48r 2  95 00            sta $00,x
000B4Ar 2  68               pla
000B4Br 2  95 01            sta $01,x
000B4Dr 2               
000B4Dr 2               ; src/prelude.fth:18:8 in `1+`
000B4Dr 2               @OPCODE_329:   ; [c64_ir] PushLiteral(1)
000B4Dr 2  E8               inx
000B4Er 2  E8               inx
000B4Fr 2  A9 01            lda #1
000B51r 2  95 00            sta $00,x
000B53r 2  A9 00            lda #0
000B55r 2  95 01            sta $01,x
000B57r 2               
000B57r 2               ; src/prelude.fth:18:10 in `1+`
000B57r 2               @OPCODE_330:   ; [c64_ir] Add
000B57r 2                   ; 21
000B57r 2  CA               dex
000B58r 2  CA               dex
000B59r 2  18               clc
000B5Ar 2  B5 00            lda $00,x
000B5Cr 2  75 02            adc $02,x
000B5Er 2  95 00            sta $00,x
000B60r 2  B5 01            lda $01,x
000B62r 2  75 03            adc $03,x
000B64r 2  95 01            sta $01,x
000B66r 2               
000B66r 2               ; src/prelude.fth:4:10 in `over`
000B66r 2               @OPCODE_331:   ; [c64_ir] AltPush
000B66r 2  CA               dex
000B67r 2  CA               dex
000B68r 2  B5 03            lda $03,x
000B6Ar 2  48               pha
000B6Br 2  B5 02            lda $02,x
000B6Dr 2  48               pha
000B6Er 2               
000B6Er 2               ; src/prelude.fth:4:13 in `over`
000B6Er 2               @OPCODE_332:   ; [c64_ir] TempStore
000B6Er 2  CA               dex
000B6Fr 2  CA               dex
000B70r 2  B5 03            lda $03,x
000B72r 2  85 96            sta TEMP_PAX2
000B74r 2  B5 02            lda $02,x
000B76r 2  85 95            sta TEMP_PAX1
000B78r 2               
000B78r 2               ; src/prelude.fth:4:19 in `over`
000B78r 2               @OPCODE_333:   ; [c64_ir] TempLoad
000B78r 2  E8               inx
000B79r 2  E8               inx
000B7Ar 2  A5 95            lda TEMP_PAX1
000B7Cr 2  95 00            sta $00,x
000B7Er 2  A5 96            lda TEMP_PAX2
000B80r 2  95 01            sta $01,x
000B82r 2               
000B82r 2               ; src/prelude.fth:4:25 in `over`
000B82r 2               @OPCODE_334:   ; [c64_ir] AltPop
000B82r 2  E8               inx
000B83r 2  E8               inx
000B84r 2  68               pla
000B85r 2  95 00            sta $00,x
000B87r 2  68               pla
000B88r 2  95 01            sta $01,x
000B8Ar 2               
000B8Ar 2               ; src/prelude.fth:4:28 in `over`
000B8Ar 2               @OPCODE_335:   ; [c64_ir] TempLoad
000B8Ar 2  E8               inx
000B8Br 2  E8               inx
000B8Cr 2  A5 95            lda TEMP_PAX1
000B8Er 2  95 00            sta $00,x
000B90r 2  A5 96            lda TEMP_PAX2
000B92r 2  95 01            sta $01,x
000B94r 2               
000B94r 2               ; src/prelude.fth:4:10 in `over`
000B94r 2               @OPCODE_336:   ; [c64_ir] AltPush
000B94r 2  CA               dex
000B95r 2  CA               dex
000B96r 2  B5 03            lda $03,x
000B98r 2  48               pha
000B99r 2  B5 02            lda $02,x
000B9Br 2  48               pha
000B9Cr 2               
000B9Cr 2               ; src/prelude.fth:4:13 in `over`
000B9Cr 2               @OPCODE_337:   ; [c64_ir] TempStore
000B9Cr 2  CA               dex
000B9Dr 2  CA               dex
000B9Er 2  B5 03            lda $03,x
000BA0r 2  85 96            sta TEMP_PAX2
000BA2r 2  B5 02            lda $02,x
000BA4r 2  85 95            sta TEMP_PAX1
000BA6r 2               
000BA6r 2               ; src/prelude.fth:4:19 in `over`
000BA6r 2               @OPCODE_338:   ; [c64_ir] TempLoad
000BA6r 2  E8               inx
000BA7r 2  E8               inx
000BA8r 2  A5 95            lda TEMP_PAX1
000BAAr 2  95 00            sta $00,x
000BACr 2  A5 96            lda TEMP_PAX2
000BAEr 2  95 01            sta $01,x
000BB0r 2               
000BB0r 2               ; src/prelude.fth:4:25 in `over`
000BB0r 2               @OPCODE_339:   ; [c64_ir] AltPop
000BB0r 2  E8               inx
000BB1r 2  E8               inx
000BB2r 2  68               pla
000BB3r 2  95 00            sta $00,x
000BB5r 2  68               pla
000BB6r 2  95 01            sta $01,x
000BB8r 2               
000BB8r 2               ; src/prelude.fth:4:28 in `over`
000BB8r 2               @OPCODE_340:   ; [c64_ir] TempLoad
000BB8r 2  E8               inx
000BB9r 2  E8               inx
000BBAr 2  A5 95            lda TEMP_PAX1
000BBCr 2  95 00            sta $00,x
000BBEr 2  A5 96            lda TEMP_PAX2
000BC0r 2  95 01            sta $01,x
000BC2r 2               
000BC2r 2               ; src/prelude.fth:33:29 in `loopimpl`
000BC2r 2               @OPCODE_341:   ; [c64_ir] AltPush
000BC2r 2  CA               dex
000BC3r 2  CA               dex
000BC4r 2  B5 03            lda $03,x
000BC6r 2  48               pha
000BC7r 2  B5 02            lda $02,x
000BC9r 2  48               pha
000BCAr 2               
000BCAr 2               ; src/prelude.fth:33:32 in `loopimpl`
000BCAr 2               @OPCODE_342:   ; [c64_ir] AltPush
000BCAr 2  CA               dex
000BCBr 2  CA               dex
000BCCr 2  B5 03            lda $03,x
000BCEr 2  48               pha
000BCFr 2  B5 02            lda $02,x
000BD1r 2  48               pha
000BD2r 2               
000BD2r 2               ; src/prelude.fth:14:12 in `invert`
000BD2r 2               @OPCODE_343:   ; [c64_ir] PushLiteral(-1)
000BD2r 2  E8               inx
000BD3r 2  E8               inx
000BD4r 2  A9 FF            lda #255
000BD6r 2  95 00            sta $00,x
000BD8r 2  A9 FF            lda #255
000BDAr 2  95 01            sta $01,x
000BDCr 2               
000BDCr 2               ; src/prelude.fth:14:15 in `invert`
000BDCr 2               @OPCODE_344:   ; [c64_ir] Nand
000BDCr 2                   ; 26
000BDCr 2  CA               dex
000BDDr 2  CA               dex
000BDEr 2  B5 00            lda $00,x
000BE0r 2  35 02            and $02,x
000BE2r 2  49 FF            eor #$ff
000BE4r 2  95 00            sta $00,x
000BE6r 2  B5 01            lda $01,x
000BE8r 2  35 03            and $03,x
000BEAr 2  49 FF            eor #$ff
000BECr 2  95 01            sta $01,x
000BEEr 2               
000BEEr 2               ; src/prelude.fth:15:19 in `negate`
000BEEr 2               @OPCODE_345:   ; [c64_ir] PushLiteral(1)
000BEEr 2  E8               inx
000BEFr 2  E8               inx
000BF0r 2  A9 01            lda #1
000BF2r 2  95 00            sta $00,x
000BF4r 2  A9 00            lda #0
000BF6r 2  95 01            sta $01,x
000BF8r 2               
000BF8r 2               ; src/prelude.fth:15:21 in `negate`
000BF8r 2               @OPCODE_346:   ; [c64_ir] Add
000BF8r 2                   ; 21
000BF8r 2  CA               dex
000BF9r 2  CA               dex
000BFAr 2  18               clc
000BFBr 2  B5 00            lda $00,x
000BFDr 2  75 02            adc $02,x
000BFFr 2  95 00            sta $00,x
000C01r 2  B5 01            lda $01,x
000C03r 2  75 03            adc $03,x
000C05r 2  95 01            sta $01,x
000C07r 2               
000C07r 2               ; src/prelude.fth:16:19 in `-`
000C07r 2               @OPCODE_347:   ; [c64_ir] Add
000C07r 2                   ; 21
000C07r 2  CA               dex
000C08r 2  CA               dex
000C09r 2  18               clc
000C0Ar 2  B5 00            lda $00,x
000C0Cr 2  75 02            adc $02,x
000C0Er 2  95 00            sta $00,x
000C10r 2  B5 01            lda $01,x
000C12r 2  75 03            adc $03,x
000C14r 2  95 01            sta $01,x
000C16r 2               
000C16r 2               ; src/prelude.fth:21:8 in `0=`
000C16r 2               @OPCODE_348:   ; [c64_ir] JumpIf0(32)
000C16r 2  CA               dex
000C17r 2  CA               dex
000C18r 2  B5 02            lda $02,x
000C1Ar 2  15 03            ora $03,x
000C1Cr 2  D0 03            bne *+5
000C1Er 2  4C rr rr         jmp @target_32
000C21r 2               
000C21r 2               @target_31:
000C21r 2               
000C21r 2               ; src/prelude.fth:21:11 in `0=`
000C21r 2               @OPCODE_350:   ; [c64_ir] PushLiteral(0)
000C21r 2  E8               inx
000C22r 2  E8               inx
000C23r 2  A9 00            lda #0
000C25r 2  95 00            sta $00,x
000C27r 2  A9 00            lda #0
000C29r 2  95 01            sta $01,x
000C2Br 2               
000C2Br 2               ; src/prelude.fth:21:13 in `0=`
000C2Br 2               @OPCODE_351:   ; [c64_ir] JumpElse(33)
000C2Br 2  4C rr rr         jmp @target_33
000C2Er 2               
000C2Er 2               @target_32:
000C2Er 2               
000C2Er 2               ; src/prelude.fth:21:18 in `0=`
000C2Er 2               @OPCODE_353:   ; [c64_ir] PushLiteral(-1)
000C2Er 2  E8               inx
000C2Fr 2  E8               inx
000C30r 2  A9 FF            lda #255
000C32r 2  95 00            sta $00,x
000C34r 2  A9 FF            lda #255
000C36r 2  95 01            sta $01,x
000C38r 2               
000C38r 2               ; src/prelude.fth:21:21 in `0=`
000C38r 2               @OPCODE_354:   ; [c64_ir] JumpTarget(32)
000C38r 2               
000C38r 2               @target_33:
000C38r 2               
000C38r 2               ; src/prelude.fth:3:10 in `swap`
000C38r 2               @OPCODE_356:   ; [c64_ir] AltPush
000C38r 2  CA               dex
000C39r 2  CA               dex
000C3Ar 2  B5 03            lda $03,x
000C3Cr 2  48               pha
000C3Dr 2  B5 02            lda $02,x
000C3Fr 2  48               pha
000C40r 2               
000C40r 2               ; src/prelude.fth:3:19 in `swap`
000C40r 2               @OPCODE_357:   ; [c64_ir] AltPop
000C40r 2  E8               inx
000C41r 2  E8               inx
000C42r 2  68               pla
000C43r 2  95 00            sta $00,x
000C45r 2  68               pla
000C46r 2  95 01            sta $01,x
000C48r 2               
000C48r 2               ; snake.pax:82:5 in `draw-walls`
000C48r 2               @OPCODE_358:   ; [c64_ir] LoopIf0(30)
000C48r 2  CA               dex
000C49r 2  CA               dex
000C4Ar 2  B5 02            lda $02,x
000C4Cr 2  15 03            ora $03,x
000C4Er 2  D0 03            bne *+5
000C50r 2  4C rr rr         jmp @target_30
000C53r 2               
000C53r 2               @target_34:
000C53r 2               
000C53r 2               ; snake.pax:82:5 in `draw-walls`
000C53r 2               @OPCODE_360:   ; [c64_ir] AltPop
000C53r 2  E8               inx
000C54r 2  E8               inx
000C55r 2  68               pla
000C56r 2  95 00            sta $00,x
000C58r 2  68               pla
000C59r 2  95 01            sta $01,x
000C5Br 2               
000C5Br 2               ; snake.pax:82:5 in `draw-walls`
000C5Br 2               @OPCODE_361:   ; [c64_ir] Drop
000C5Br 2  CA               dex
000C5Cr 2  CA               dex
000C5Dr 2               
000C5Dr 2               ; snake.pax:82:5 in `draw-walls`
000C5Dr 2               @OPCODE_362:   ; [c64_ir] AltPop
000C5Dr 2  E8               inx
000C5Er 2  E8               inx
000C5Fr 2  68               pla
000C60r 2  95 00            sta $00,x
000C62r 2  68               pla
000C63r 2  95 01            sta $01,x
000C65r 2               
000C65r 2               ; snake.pax:82:5 in `draw-walls`
000C65r 2               @OPCODE_363:   ; [c64_ir] Drop
000C65r 2  CA               dex
000C66r 2  CA               dex
000C67r 2               
000C67r 2               ; snake.pax:83:5 in `draw-walls`
000C67r 2               @OPCODE_364:   ; [c64_ir] PushLiteral(0)
000C67r 2  E8               inx
000C68r 2  E8               inx
000C69r 2  A9 00            lda #0
000C6Br 2  95 00            sta $00,x
000C6Dr 2  A9 00            lda #0
000C6Fr 2  95 01            sta $01,x
000C71r 2               
000C71r 2               ; snake.pax:84:5 in `draw-walls`
000C71r 2               @OPCODE_365:   ; [c64_ir] PushLiteral(25)
000C71r 2  E8               inx
000C72r 2  E8               inx
000C73r 2  A9 19            lda #25
000C75r 2  95 00            sta $00,x
000C77r 2  A9 00            lda #0
000C79r 2  95 01            sta $01,x
000C7Br 2               
000C7Br 2               ; snake.pax:84:12 in `draw-walls`
000C7Br 2               @OPCODE_366:   ; [c64_ir] PushLiteral(0)
000C7Br 2  E8               inx
000C7Cr 2  E8               inx
000C7Dr 2  A9 00            lda #0
000C7Fr 2  95 00            sta $00,x
000C81r 2  A9 00            lda #0
000C83r 2  95 01            sta $01,x
000C85r 2               
000C85r 2               ; snake.pax:84:14 in `draw-walls`
000C85r 2               @OPCODE_367:   ; [c64_ir] AltPush
000C85r 2  CA               dex
000C86r 2  CA               dex
000C87r 2  B5 03            lda $03,x
000C89r 2  48               pha
000C8Ar 2  B5 02            lda $02,x
000C8Cr 2  48               pha
000C8Dr 2               
000C8Dr 2               ; snake.pax:84:14 in `draw-walls`
000C8Dr 2               @OPCODE_368:   ; [c64_ir] AltPush
000C8Dr 2  CA               dex
000C8Er 2  CA               dex
000C8Fr 2  B5 03            lda $03,x
000C91r 2  48               pha
000C92r 2  B5 02            lda $02,x
000C94r 2  48               pha
000C95r 2               
000C95r 2               ; snake.pax:84:14 in `draw-walls`
000C95r 2               @OPCODE_369:   ; [c64_ir] LoopTarget(34)
000C95r 2               
000C95r 2               @target_35:
000C95r 2               
000C95r 2               ; src/prelude.fth:4:13 in `over`
000C95r 2               @OPCODE_371:   ; [c64_ir] TempStore
000C95r 2  CA               dex
000C96r 2  CA               dex
000C97r 2  B5 03            lda $03,x
000C99r 2  85 96            sta TEMP_PAX2
000C9Br 2  B5 02            lda $02,x
000C9Dr 2  85 95            sta TEMP_PAX1
000C9Fr 2               
000C9Fr 2               ; src/prelude.fth:4:19 in `over`
000C9Fr 2               @OPCODE_372:   ; [c64_ir] TempLoad
000C9Fr 2  E8               inx
000CA0r 2  E8               inx
000CA1r 2  A5 95            lda TEMP_PAX1
000CA3r 2  95 00            sta $00,x
000CA5r 2  A5 96            lda TEMP_PAX2
000CA7r 2  95 01            sta $01,x
000CA9r 2               
000CA9r 2               ; src/prelude.fth:4:25 in `over`
000CA9r 2               @OPCODE_373:   ; [c64_ir] PushLiteral(230)
000CA9r 2  E8               inx
000CAAr 2  E8               inx
000CABr 2  A9 E6            lda #230
000CADr 2  95 00            sta $00,x
000CAFr 2  A9 00            lda #0
000CB1r 2  95 01            sta $01,x
000CB3r 2               
000CB3r 2               ; src/prelude.fth:4:28 in `over`
000CB3r 2               @OPCODE_374:   ; [c64_ir] TempLoad
000CB3r 2  E8               inx
000CB4r 2  E8               inx
000CB5r 2  A5 95            lda TEMP_PAX1
000CB7r 2  95 00            sta $00,x
000CB9r 2  A5 96            lda TEMP_PAX2
000CBBr 2  95 01            sta $01,x
000CBDr 2               
000CBDr 2               ; snake.pax:49:34 in `draw-index`
000CBDr 2               @OPCODE_375:   ; [c64_ir] PushLiteral(1024)
000CBDr 2  E8               inx
000CBEr 2  E8               inx
000CBFr 2  A9 00            lda #0
000CC1r 2  95 00            sta $00,x
000CC3r 2  A9 04            lda #4
000CC5r 2  95 01            sta $01,x
000CC7r 2               
000CC7r 2               ; snake.pax:49:43 in `draw-index`
000CC7r 2               @OPCODE_376:   ; [c64_ir] Add
000CC7r 2                   ; 21
000CC7r 2  CA               dex
000CC8r 2  CA               dex
000CC9r 2  18               clc
000CCAr 2  B5 00            lda $00,x
000CCCr 2  75 02            adc $02,x
000CCEr 2  95 00            sta $00,x
000CD0r 2  B5 01            lda $01,x
000CD2r 2  75 03            adc $03,x
000CD4r 2  95 01            sta $01,x
000CD6r 2               
000CD6r 2               ; snake.pax:49:45 in `draw-index`
000CD6r 2               @OPCODE_377:   ; [c64_ir] Store8
000CD6r 2  CA               dex
000CD7r 2  CA               dex
000CD8r 2  CA               dex
000CD9r 2  CA               dex
000CDAr 2  B5 02            lda $02,x
000CDCr 2  81 04            sta ($04,x)
000CDEr 2                   ; TODO high byte
000CDEr 2               
000CDEr 2               ; snake.pax:86:9 in `draw-walls`
000CDEr 2               @OPCODE_378:   ; [c64_ir] PushLiteral(40)
000CDEr 2  E8               inx
000CDFr 2  E8               inx
000CE0r 2  A9 28            lda #40
000CE2r 2  95 00            sta $00,x
000CE4r 2  A9 00            lda #0
000CE6r 2  95 01            sta $01,x
000CE8r 2               
000CE8r 2               ; snake.pax:86:15 in `draw-walls`
000CE8r 2               @OPCODE_379:   ; [c64_ir] Add
000CE8r 2                   ; 21
000CE8r 2  CA               dex
000CE9r 2  CA               dex
000CEAr 2  18               clc
000CEBr 2  B5 00            lda $00,x
000CEDr 2  75 02            adc $02,x
000CEFr 2  95 00            sta $00,x
000CF1r 2  B5 01            lda $01,x
000CF3r 2  75 03            adc $03,x
000CF5r 2  95 01            sta $01,x
000CF7r 2               
000CF7r 2               ; src/prelude.fth:33:15 in `loopimpl`
000CF7r 2               @OPCODE_380:   ; [c64_ir] AltPop
000CF7r 2  E8               inx
000CF8r 2  E8               inx
000CF9r 2  68               pla
000CFAr 2  95 00            sta $00,x
000CFCr 2  68               pla
000CFDr 2  95 01            sta $01,x
000CFFr 2               
000CFFr 2               ; src/prelude.fth:33:18 in `loopimpl`
000CFFr 2               @OPCODE_381:   ; [c64_ir] AltPop
000CFFr 2  E8               inx
000D00r 2  E8               inx
000D01r 2  68               pla
000D02r 2  95 00            sta $00,x
000D04r 2  68               pla
000D05r 2  95 01            sta $01,x
000D07r 2               
000D07r 2               ; src/prelude.fth:18:8 in `1+`
000D07r 2               @OPCODE_382:   ; [c64_ir] PushLiteral(1)
000D07r 2  E8               inx
000D08r 2  E8               inx
000D09r 2  A9 01            lda #1
000D0Br 2  95 00            sta $00,x
000D0Dr 2  A9 00            lda #0
000D0Fr 2  95 01            sta $01,x
000D11r 2               
000D11r 2               ; src/prelude.fth:18:10 in `1+`
000D11r 2               @OPCODE_383:   ; [c64_ir] Add
000D11r 2                   ; 21
000D11r 2  CA               dex
000D12r 2  CA               dex
000D13r 2  18               clc
000D14r 2  B5 00            lda $00,x
000D16r 2  75 02            adc $02,x
000D18r 2  95 00            sta $00,x
000D1Ar 2  B5 01            lda $01,x
000D1Cr 2  75 03            adc $03,x
000D1Er 2  95 01            sta $01,x
000D20r 2               
000D20r 2               ; src/prelude.fth:4:10 in `over`
000D20r 2               @OPCODE_384:   ; [c64_ir] AltPush
000D20r 2  CA               dex
000D21r 2  CA               dex
000D22r 2  B5 03            lda $03,x
000D24r 2  48               pha
000D25r 2  B5 02            lda $02,x
000D27r 2  48               pha
000D28r 2               
000D28r 2               ; src/prelude.fth:4:13 in `over`
000D28r 2               @OPCODE_385:   ; [c64_ir] TempStore
000D28r 2  CA               dex
000D29r 2  CA               dex
000D2Ar 2  B5 03            lda $03,x
000D2Cr 2  85 96            sta TEMP_PAX2
000D2Er 2  B5 02            lda $02,x
000D30r 2  85 95            sta TEMP_PAX1
000D32r 2               
000D32r 2               ; src/prelude.fth:4:19 in `over`
000D32r 2               @OPCODE_386:   ; [c64_ir] TempLoad
000D32r 2  E8               inx
000D33r 2  E8               inx
000D34r 2  A5 95            lda TEMP_PAX1
000D36r 2  95 00            sta $00,x
000D38r 2  A5 96            lda TEMP_PAX2
000D3Ar 2  95 01            sta $01,x
000D3Cr 2               
000D3Cr 2               ; src/prelude.fth:4:25 in `over`
000D3Cr 2               @OPCODE_387:   ; [c64_ir] AltPop
000D3Cr 2  E8               inx
000D3Dr 2  E8               inx
000D3Er 2  68               pla
000D3Fr 2  95 00            sta $00,x
000D41r 2  68               pla
000D42r 2  95 01            sta $01,x
000D44r 2               
000D44r 2               ; src/prelude.fth:4:28 in `over`
000D44r 2               @OPCODE_388:   ; [c64_ir] TempLoad
000D44r 2  E8               inx
000D45r 2  E8               inx
000D46r 2  A5 95            lda TEMP_PAX1
000D48r 2  95 00            sta $00,x
000D4Ar 2  A5 96            lda TEMP_PAX2
000D4Cr 2  95 01            sta $01,x
000D4Er 2               
000D4Er 2               ; src/prelude.fth:4:10 in `over`
000D4Er 2               @OPCODE_389:   ; [c64_ir] AltPush
000D4Er 2  CA               dex
000D4Fr 2  CA               dex
000D50r 2  B5 03            lda $03,x
000D52r 2  48               pha
000D53r 2  B5 02            lda $02,x
000D55r 2  48               pha
000D56r 2               
000D56r 2               ; src/prelude.fth:4:13 in `over`
000D56r 2               @OPCODE_390:   ; [c64_ir] TempStore
000D56r 2  CA               dex
000D57r 2  CA               dex
000D58r 2  B5 03            lda $03,x
000D5Ar 2  85 96            sta TEMP_PAX2
000D5Cr 2  B5 02            lda $02,x
000D5Er 2  85 95            sta TEMP_PAX1
000D60r 2               
000D60r 2               ; src/prelude.fth:4:19 in `over`
000D60r 2               @OPCODE_391:   ; [c64_ir] TempLoad
000D60r 2  E8               inx
000D61r 2  E8               inx
000D62r 2  A5 95            lda TEMP_PAX1
000D64r 2  95 00            sta $00,x
000D66r 2  A5 96            lda TEMP_PAX2
000D68r 2  95 01            sta $01,x
000D6Ar 2               
000D6Ar 2               ; src/prelude.fth:4:25 in `over`
000D6Ar 2               @OPCODE_392:   ; [c64_ir] AltPop
000D6Ar 2  E8               inx
000D6Br 2  E8               inx
000D6Cr 2  68               pla
000D6Dr 2  95 00            sta $00,x
000D6Fr 2  68               pla
000D70r 2  95 01            sta $01,x
000D72r 2               
000D72r 2               ; src/prelude.fth:4:28 in `over`
000D72r 2               @OPCODE_393:   ; [c64_ir] TempLoad
000D72r 2  E8               inx
000D73r 2  E8               inx
000D74r 2  A5 95            lda TEMP_PAX1
000D76r 2  95 00            sta $00,x
000D78r 2  A5 96            lda TEMP_PAX2
000D7Ar 2  95 01            sta $01,x
000D7Cr 2               
000D7Cr 2               ; src/prelude.fth:33:29 in `loopimpl`
000D7Cr 2               @OPCODE_394:   ; [c64_ir] AltPush
000D7Cr 2  CA               dex
000D7Dr 2  CA               dex
000D7Er 2  B5 03            lda $03,x
000D80r 2  48               pha
000D81r 2  B5 02            lda $02,x
000D83r 2  48               pha
000D84r 2               
000D84r 2               ; src/prelude.fth:33:32 in `loopimpl`
000D84r 2               @OPCODE_395:   ; [c64_ir] AltPush
000D84r 2  CA               dex
000D85r 2  CA               dex
000D86r 2  B5 03            lda $03,x
000D88r 2  48               pha
000D89r 2  B5 02            lda $02,x
000D8Br 2  48               pha
000D8Cr 2               
000D8Cr 2               ; src/prelude.fth:14:12 in `invert`
000D8Cr 2               @OPCODE_396:   ; [c64_ir] PushLiteral(-1)
000D8Cr 2  E8               inx
000D8Dr 2  E8               inx
000D8Er 2  A9 FF            lda #255
000D90r 2  95 00            sta $00,x
000D92r 2  A9 FF            lda #255
000D94r 2  95 01            sta $01,x
000D96r 2               
000D96r 2               ; src/prelude.fth:14:15 in `invert`
000D96r 2               @OPCODE_397:   ; [c64_ir] Nand
000D96r 2                   ; 26
000D96r 2  CA               dex
000D97r 2  CA               dex
000D98r 2  B5 00            lda $00,x
000D9Ar 2  35 02            and $02,x
000D9Cr 2  49 FF            eor #$ff
000D9Er 2  95 00            sta $00,x
000DA0r 2  B5 01            lda $01,x
000DA2r 2  35 03            and $03,x
000DA4r 2  49 FF            eor #$ff
000DA6r 2  95 01            sta $01,x
000DA8r 2               
000DA8r 2               ; src/prelude.fth:15:19 in `negate`
000DA8r 2               @OPCODE_398:   ; [c64_ir] PushLiteral(1)
000DA8r 2  E8               inx
000DA9r 2  E8               inx
000DAAr 2  A9 01            lda #1
000DACr 2  95 00            sta $00,x
000DAEr 2  A9 00            lda #0
000DB0r 2  95 01            sta $01,x
000DB2r 2               
000DB2r 2               ; src/prelude.fth:15:21 in `negate`
000DB2r 2               @OPCODE_399:   ; [c64_ir] Add
000DB2r 2                   ; 21
000DB2r 2  CA               dex
000DB3r 2  CA               dex
000DB4r 2  18               clc
000DB5r 2  B5 00            lda $00,x
000DB7r 2  75 02            adc $02,x
000DB9r 2  95 00            sta $00,x
000DBBr 2  B5 01            lda $01,x
000DBDr 2  75 03            adc $03,x
000DBFr 2  95 01            sta $01,x
000DC1r 2               
000DC1r 2               ; src/prelude.fth:16:19 in `-`
000DC1r 2               @OPCODE_400:   ; [c64_ir] Add
000DC1r 2                   ; 21
000DC1r 2  CA               dex
000DC2r 2  CA               dex
000DC3r 2  18               clc
000DC4r 2  B5 00            lda $00,x
000DC6r 2  75 02            adc $02,x
000DC8r 2  95 00            sta $00,x
000DCAr 2  B5 01            lda $01,x
000DCCr 2  75 03            adc $03,x
000DCEr 2  95 01            sta $01,x
000DD0r 2               
000DD0r 2               ; src/prelude.fth:21:8 in `0=`
000DD0r 2               @OPCODE_401:   ; [c64_ir] JumpIf0(37)
000DD0r 2  CA               dex
000DD1r 2  CA               dex
000DD2r 2  B5 02            lda $02,x
000DD4r 2  15 03            ora $03,x
000DD6r 2  D0 03            bne *+5
000DD8r 2  4C rr rr         jmp @target_37
000DDBr 2               
000DDBr 2               @target_36:
000DDBr 2               
000DDBr 2               ; src/prelude.fth:21:11 in `0=`
000DDBr 2               @OPCODE_403:   ; [c64_ir] PushLiteral(0)
000DDBr 2  E8               inx
000DDCr 2  E8               inx
000DDDr 2  A9 00            lda #0
000DDFr 2  95 00            sta $00,x
000DE1r 2  A9 00            lda #0
000DE3r 2  95 01            sta $01,x
000DE5r 2               
000DE5r 2               ; src/prelude.fth:21:13 in `0=`
000DE5r 2               @OPCODE_404:   ; [c64_ir] JumpElse(38)
000DE5r 2  4C rr rr         jmp @target_38
000DE8r 2               
000DE8r 2               @target_37:
000DE8r 2               
000DE8r 2               ; src/prelude.fth:21:18 in `0=`
000DE8r 2               @OPCODE_406:   ; [c64_ir] PushLiteral(-1)
000DE8r 2  E8               inx
000DE9r 2  E8               inx
000DEAr 2  A9 FF            lda #255
000DECr 2  95 00            sta $00,x
000DEEr 2  A9 FF            lda #255
000DF0r 2  95 01            sta $01,x
000DF2r 2               
000DF2r 2               ; src/prelude.fth:21:21 in `0=`
000DF2r 2               @OPCODE_407:   ; [c64_ir] JumpTarget(37)
000DF2r 2               
000DF2r 2               @target_38:
000DF2r 2               
000DF2r 2               ; src/prelude.fth:3:10 in `swap`
000DF2r 2               @OPCODE_409:   ; [c64_ir] AltPush
000DF2r 2  CA               dex
000DF3r 2  CA               dex
000DF4r 2  B5 03            lda $03,x
000DF6r 2  48               pha
000DF7r 2  B5 02            lda $02,x
000DF9r 2  48               pha
000DFAr 2               
000DFAr 2               ; src/prelude.fth:3:19 in `swap`
000DFAr 2               @OPCODE_410:   ; [c64_ir] AltPop
000DFAr 2  E8               inx
000DFBr 2  E8               inx
000DFCr 2  68               pla
000DFDr 2  95 00            sta $00,x
000DFFr 2  68               pla
000E00r 2  95 01            sta $01,x
000E02r 2               
000E02r 2               ; snake.pax:87:5 in `draw-walls`
000E02r 2               @OPCODE_411:   ; [c64_ir] LoopIf0(35)
000E02r 2  CA               dex
000E03r 2  CA               dex
000E04r 2  B5 02            lda $02,x
000E06r 2  15 03            ora $03,x
000E08r 2  D0 03            bne *+5
000E0Ar 2  4C rr rr         jmp @target_35
000E0Dr 2               
000E0Dr 2               @target_39:
000E0Dr 2               
000E0Dr 2               ; snake.pax:87:5 in `draw-walls`
000E0Dr 2               @OPCODE_413:   ; [c64_ir] AltPop
000E0Dr 2  E8               inx
000E0Er 2  E8               inx
000E0Fr 2  68               pla
000E10r 2  95 00            sta $00,x
000E12r 2  68               pla
000E13r 2  95 01            sta $01,x
000E15r 2               
000E15r 2               ; snake.pax:87:5 in `draw-walls`
000E15r 2               @OPCODE_414:   ; [c64_ir] Drop
000E15r 2  CA               dex
000E16r 2  CA               dex
000E17r 2               
000E17r 2               ; snake.pax:87:5 in `draw-walls`
000E17r 2               @OPCODE_415:   ; [c64_ir] AltPop
000E17r 2  E8               inx
000E18r 2  E8               inx
000E19r 2  68               pla
000E1Ar 2  95 00            sta $00,x
000E1Cr 2  68               pla
000E1Dr 2  95 01            sta $01,x
000E1Fr 2               
000E1Fr 2               ; snake.pax:87:5 in `draw-walls`
000E1Fr 2               @OPCODE_416:   ; [c64_ir] Drop
000E1Fr 2  CA               dex
000E20r 2  CA               dex
000E21r 2               
000E21r 2               ; <inline>:0:0 in `main`
000E21r 2               @OPCODE_417:   ; [c64_ir] AltPop
000E21r 2  E8               inx
000E22r 2  E8               inx
000E23r 2  68               pla
000E24r 2  95 00            sta $00,x
000E26r 2  68               pla
000E27r 2  95 01            sta $01,x
000E29r 2               
000E29r 2               ; <inline>:0:0 in `main`
000E29r 2               @OPCODE_418:   ; [c64_ir] Drop
000E29r 2  CA               dex
000E2Ar 2  CA               dex
000E2Br 2               
000E2Br 2               ; <inline>:0:0 in `main`
000E2Br 2               @OPCODE_419:   ; [c64_ir] PushLiteral(7777)
000E2Br 2  E8               inx
000E2Cr 2  E8               inx
000E2Dr 2  A9 61            lda #97
000E2Fr 2  95 00            sta $00,x
000E31r 2  A9 1E            lda #30
000E33r 2  95 01            sta $01,x
000E35r 2               
000E35r 2               ; <inline>:0:0 in `main`
000E35r 2               @OPCODE_420:   ; [c64_ir] AltPush
000E35r 2  CA               dex
000E36r 2  CA               dex
000E37r 2  B5 03            lda $03,x
000E39r 2  48               pha
000E3Ar 2  B5 02            lda $02,x
000E3Cr 2  48               pha
000E3Dr 2               
000E3Dr 2               ; snake.pax:91:3 in `initialize-snake`
000E3Dr 2               @OPCODE_421:   ; [c64_ir] PushLiteral(4)
000E3Dr 2  E8               inx
000E3Er 2  E8               inx
000E3Fr 2  A9 04            lda #4
000E41r 2  95 00            sta $00,x
000E43r 2  A9 00            lda #0
000E45r 2  95 01            sta $01,x
000E47r 2               
000E47r 2               ; snake.pax:91:5 in `initialize-snake`
000E47r 2               @OPCODE_422:   ; [c64_ir] PushLiteral(-26658)
000E47r 2  E8               inx
000E48r 2  E8               inx
000E49r 2  A9 DE            lda #222
000E4Br 2  95 00            sta $00,x
000E4Dr 2  A9 97            lda #151
000E4Fr 2  95 01            sta $01,x
000E51r 2               
000E51r 2               ; snake.pax:91:12 in `initialize-snake`
000E51r 2               @OPCODE_423:   ; [c64_ir] Store
000E51r 2  CA               dex
000E52r 2  CA               dex
000E53r 2  CA               dex
000E54r 2  CA               dex
000E55r 2  B5 02            lda $02,x
000E57r 2  81 04            sta ($04,x)
000E59r 2                   ; TODO high byte
000E59r 2               
000E59r 2               ; snake.pax:92:3 in `initialize-snake`
000E59r 2               @OPCODE_424:   ; [c64_ir] PushLiteral(-26658)
000E59r 2  E8               inx
000E5Ar 2  E8               inx
000E5Br 2  A9 DE            lda #222
000E5Dr 2  95 00            sta $00,x
000E5Fr 2  A9 97            lda #151
000E61r 2  95 01            sta $01,x
000E63r 2               
000E63r 2               ; snake.pax:92:10 in `initialize-snake`
000E63r 2               @OPCODE_425:   ; [c64_ir] Load
000E63r 2  A1 00            lda ($00,x)
000E65r 2  95 00            sta $00,x
000E67r 2  A9 00            lda #0
000E69r 2  95 01            sta $01,x
000E6Br 2               
000E6Br 2               ; snake.pax:92:12 in `initialize-snake`
000E6Br 2               @OPCODE_426:   ; [c64_ir] PushLiteral(1)
000E6Br 2  E8               inx
000E6Cr 2  E8               inx
000E6Dr 2  A9 01            lda #1
000E6Fr 2  95 00            sta $00,x
000E71r 2  A9 00            lda #0
000E73r 2  95 01            sta $01,x
000E75r 2               
000E75r 2               ; snake.pax:92:14 in `initialize-snake`
000E75r 2               @OPCODE_427:   ; [c64_ir] Add
000E75r 2                   ; 21
000E75r 2  CA               dex
000E76r 2  CA               dex
000E77r 2  18               clc
000E78r 2  B5 00            lda $00,x
000E7Ar 2  75 02            adc $02,x
000E7Cr 2  95 00            sta $00,x
000E7Er 2  B5 01            lda $01,x
000E80r 2  75 03            adc $03,x
000E82r 2  95 01            sta $01,x
000E84r 2               
000E84r 2               ; snake.pax:92:16 in `initialize-snake`
000E84r 2               @OPCODE_428:   ; [c64_ir] PushLiteral(0)
000E84r 2  E8               inx
000E85r 2  E8               inx
000E86r 2  A9 00            lda #0
000E88r 2  95 00            sta $00,x
000E8Ar 2  A9 00            lda #0
000E8Cr 2  95 01            sta $01,x
000E8Er 2               
000E8Er 2               ; snake.pax:92:18 in `initialize-snake`
000E8Er 2               @OPCODE_429:   ; [c64_ir] AltPush
000E8Er 2  CA               dex
000E8Fr 2  CA               dex
000E90r 2  B5 03            lda $03,x
000E92r 2  48               pha
000E93r 2  B5 02            lda $02,x
000E95r 2  48               pha
000E96r 2               
000E96r 2               ; snake.pax:92:18 in `initialize-snake`
000E96r 2               @OPCODE_430:   ; [c64_ir] AltPush
000E96r 2  CA               dex
000E97r 2  CA               dex
000E98r 2  B5 03            lda $03,x
000E9Ar 2  48               pha
000E9Br 2  B5 02            lda $02,x
000E9Dr 2  48               pha
000E9Er 2               
000E9Er 2               ; snake.pax:92:18 in `initialize-snake`
000E9Er 2               @OPCODE_431:   ; [c64_ir] LoopTarget(39)
000E9Er 2               
000E9Er 2               @target_40:
000E9Er 2               
000E9Er 2               ; snake.pax:93:5 in `initialize-snake`
000E9Er 2               @OPCODE_433:   ; [c64_ir] PushLiteral(8)
000E9Er 2  E8               inx
000E9Fr 2  E8               inx
000EA0r 2  A9 08            lda #8
000EA2r 2  95 00            sta $00,x
000EA4r 2  A9 00            lda #0
000EA6r 2  95 01            sta $01,x
000EA8r 2               
000EA8r 2               ; src/prelude.fth:38:8 in `i`
000EA8r 2               @OPCODE_434:   ; [c64_ir] AltPop
000EA8r 2  E8               inx
000EA9r 2  E8               inx
000EAAr 2  68               pla
000EABr 2  95 00            sta $00,x
000EADr 2  68               pla
000EAEr 2  95 01            sta $01,x
000EB0r 2               
000EB0r 2               ; src/prelude.fth:38:11 in `i`
000EB0r 2               @OPCODE_435:   ; [c64_ir] AltPop
000EB0r 2  E8               inx
000EB1r 2  E8               inx
000EB2r 2  68               pla
000EB3r 2  95 00            sta $00,x
000EB5r 2  68               pla
000EB6r 2  95 01            sta $01,x
000EB8r 2               
000EB8r 2               ; src/prelude.fth:38:14 in `i`
000EB8r 2               @OPCODE_436:   ; [c64_ir] TempStore
000EB8r 2  CA               dex
000EB9r 2  CA               dex
000EBAr 2  B5 03            lda $03,x
000EBCr 2  85 96            sta TEMP_PAX2
000EBEr 2  B5 02            lda $02,x
000EC0r 2  85 95            sta TEMP_PAX1
000EC2r 2               
000EC2r 2               ; src/prelude.fth:38:20 in `i`
000EC2r 2               @OPCODE_437:   ; [c64_ir] TempLoad
000EC2r 2  E8               inx
000EC3r 2  E8               inx
000EC4r 2  A5 95            lda TEMP_PAX1
000EC6r 2  95 00            sta $00,x
000EC8r 2  A5 96            lda TEMP_PAX2
000ECAr 2  95 01            sta $01,x
000ECCr 2               
000ECCr 2               ; src/prelude.fth:38:26 in `i`
000ECCr 2               @OPCODE_438:   ; [c64_ir] AltPush
000ECCr 2  CA               dex
000ECDr 2  CA               dex
000ECEr 2  B5 03            lda $03,x
000ED0r 2  48               pha
000ED1r 2  B5 02            lda $02,x
000ED3r 2  48               pha
000ED4r 2               
000ED4r 2               ; src/prelude.fth:38:29 in `i`
000ED4r 2               @OPCODE_439:   ; [c64_ir] AltPush
000ED4r 2  CA               dex
000ED5r 2  CA               dex
000ED6r 2  B5 03            lda $03,x
000ED8r 2  48               pha
000ED9r 2  B5 02            lda $02,x
000EDBr 2  48               pha
000EDCr 2               
000EDCr 2               ; src/prelude.fth:38:35 in `i`
000EDCr 2               @OPCODE_440:   ; [c64_ir] TempLoad
000EDCr 2  E8               inx
000EDDr 2  E8               inx
000EDEr 2  A5 95            lda TEMP_PAX1
000EE0r 2  95 00            sta $00,x
000EE2r 2  A5 96            lda TEMP_PAX2
000EE4r 2  95 01            sta $01,x
000EE6r 2               
000EE6r 2               ; src/prelude.fth:14:12 in `invert`
000EE6r 2               @OPCODE_441:   ; [c64_ir] PushLiteral(-1)
000EE6r 2  E8               inx
000EE7r 2  E8               inx
000EE8r 2  A9 FF            lda #255
000EEAr 2  95 00            sta $00,x
000EECr 2  A9 FF            lda #255
000EEEr 2  95 01            sta $01,x
000EF0r 2               
000EF0r 2               ; src/prelude.fth:14:15 in `invert`
000EF0r 2               @OPCODE_442:   ; [c64_ir] Nand
000EF0r 2                   ; 26
000EF0r 2  CA               dex
000EF1r 2  CA               dex
000EF2r 2  B5 00            lda $00,x
000EF4r 2  35 02            and $02,x
000EF6r 2  49 FF            eor #$ff
000EF8r 2  95 00            sta $00,x
000EFAr 2  B5 01            lda $01,x
000EFCr 2  35 03            and $03,x
000EFEr 2  49 FF            eor #$ff
000F00r 2  95 01            sta $01,x
000F02r 2               
000F02r 2               ; src/prelude.fth:15:19 in `negate`
000F02r 2               @OPCODE_443:   ; [c64_ir] PushLiteral(1)
000F02r 2  E8               inx
000F03r 2  E8               inx
000F04r 2  A9 01            lda #1
000F06r 2  95 00            sta $00,x
000F08r 2  A9 00            lda #0
000F0Ar 2  95 01            sta $01,x
000F0Cr 2               
000F0Cr 2               ; src/prelude.fth:15:21 in `negate`
000F0Cr 2               @OPCODE_444:   ; [c64_ir] Add
000F0Cr 2                   ; 21
000F0Cr 2  CA               dex
000F0Dr 2  CA               dex
000F0Er 2  18               clc
000F0Fr 2  B5 00            lda $00,x
000F11r 2  75 02            adc $02,x
000F13r 2  95 00            sta $00,x
000F15r 2  B5 01            lda $01,x
000F17r 2  75 03            adc $03,x
000F19r 2  95 01            sta $01,x
000F1Br 2               
000F1Br 2               ; src/prelude.fth:16:19 in `-`
000F1Br 2               @OPCODE_445:   ; [c64_ir] Add
000F1Br 2                   ; 21
000F1Br 2  CA               dex
000F1Cr 2  CA               dex
000F1Dr 2  18               clc
000F1Er 2  B5 00            lda $00,x
000F20r 2  75 02            adc $02,x
000F22r 2  95 00            sta $00,x
000F24r 2  B5 01            lda $01,x
000F26r 2  75 03            adc $03,x
000F28r 2  95 01            sta $01,x
000F2Ar 2               
000F2Ar 2               ; src/prelude.fth:38:8 in `i`
000F2Ar 2               @OPCODE_446:   ; [c64_ir] AltPop
000F2Ar 2  E8               inx
000F2Br 2  E8               inx
000F2Cr 2  68               pla
000F2Dr 2  95 00            sta $00,x
000F2Fr 2  68               pla
000F30r 2  95 01            sta $01,x
000F32r 2               
000F32r 2               ; src/prelude.fth:38:11 in `i`
000F32r 2               @OPCODE_447:   ; [c64_ir] AltPop
000F32r 2  E8               inx
000F33r 2  E8               inx
000F34r 2  68               pla
000F35r 2  95 00            sta $00,x
000F37r 2  68               pla
000F38r 2  95 01            sta $01,x
000F3Ar 2               
000F3Ar 2               ; src/prelude.fth:38:14 in `i`
000F3Ar 2               @OPCODE_448:   ; [c64_ir] TempStore
000F3Ar 2  CA               dex
000F3Br 2  CA               dex
000F3Cr 2  B5 03            lda $03,x
000F3Er 2  85 96            sta TEMP_PAX2
000F40r 2  B5 02            lda $02,x
000F42r 2  85 95            sta TEMP_PAX1
000F44r 2               
000F44r 2               ; src/prelude.fth:38:20 in `i`
000F44r 2               @OPCODE_449:   ; [c64_ir] TempLoad
000F44r 2  E8               inx
000F45r 2  E8               inx
000F46r 2  A5 95            lda TEMP_PAX1
000F48r 2  95 00            sta $00,x
000F4Ar 2  A5 96            lda TEMP_PAX2
000F4Cr 2  95 01            sta $01,x
000F4Er 2               
000F4Er 2               ; src/prelude.fth:38:26 in `i`
000F4Er 2               @OPCODE_450:   ; [c64_ir] AltPush
000F4Er 2  CA               dex
000F4Fr 2  CA               dex
000F50r 2  B5 03            lda $03,x
000F52r 2  48               pha
000F53r 2  B5 02            lda $02,x
000F55r 2  48               pha
000F56r 2               
000F56r 2               ; src/prelude.fth:38:29 in `i`
000F56r 2               @OPCODE_451:   ; [c64_ir] AltPush
000F56r 2  CA               dex
000F57r 2  CA               dex
000F58r 2  B5 03            lda $03,x
000F5Ar 2  48               pha
000F5Br 2  B5 02            lda $02,x
000F5Dr 2  48               pha
000F5Er 2               
000F5Er 2               ; src/prelude.fth:38:35 in `i`
000F5Er 2               @OPCODE_452:   ; [c64_ir] TempLoad
000F5Er 2  E8               inx
000F5Fr 2  E8               inx
000F60r 2  A5 95            lda TEMP_PAX1
000F62r 2  95 00            sta $00,x
000F64r 2  A5 96            lda TEMP_PAX2
000F66r 2  95 01            sta $01,x
000F68r 2               
000F68r 2               ; src/prelude.fth:6:10 in `dup`
000F68r 2               @OPCODE_453:   ; [c64_ir] TempStore
000F68r 2  CA               dex
000F69r 2  CA               dex
000F6Ar 2  B5 03            lda $03,x
000F6Cr 2  85 96            sta TEMP_PAX2
000F6Er 2  B5 02            lda $02,x
000F70r 2  85 95            sta TEMP_PAX1
000F72r 2               
000F72r 2               ; src/prelude.fth:6:16 in `dup`
000F72r 2               @OPCODE_454:   ; [c64_ir] TempLoad
000F72r 2  E8               inx
000F73r 2  E8               inx
000F74r 2  A5 95            lda TEMP_PAX1
000F76r 2  95 00            sta $00,x
000F78r 2  A5 96            lda TEMP_PAX2
000F7Ar 2  95 01            sta $01,x
000F7Cr 2               
000F7Cr 2               ; src/prelude.fth:6:22 in `dup`
000F7Cr 2               @OPCODE_455:   ; [c64_ir] TempLoad
000F7Cr 2  E8               inx
000F7Dr 2  E8               inx
000F7Er 2  A5 95            lda TEMP_PAX1
000F80r 2  95 00            sta $00,x
000F82r 2  A5 96            lda TEMP_PAX2
000F84r 2  95 01            sta $01,x
000F86r 2               
000F86r 2               ; src/prelude.fth:41:13 in `cells`
000F86r 2               @OPCODE_456:   ; [c64_ir] Add
000F86r 2                   ; 21
000F86r 2  CA               dex
000F87r 2  CA               dex
000F88r 2  18               clc
000F89r 2  B5 00            lda $00,x
000F8Br 2  75 02            adc $02,x
000F8Dr 2  95 00            sta $00,x
000F8Fr 2  B5 01            lda $01,x
000F91r 2  75 03            adc $03,x
000F93r 2  95 01            sta $01,x
000F95r 2               
000F95r 2               ; snake.pax:42:9 in `snake-x`
000F95r 2               @OPCODE_457:   ; [c64_ir] PushLiteral(-28668)
000F95r 2  E8               inx
000F96r 2  E8               inx
000F97r 2  A9 04            lda #4
000F99r 2  95 00            sta $00,x
000F9Br 2  A9 90            lda #144
000F9Dr 2  95 01            sta $01,x
000F9Fr 2               
000F9Fr 2               ; snake.pax:42:22 in `snake-x`
000F9Fr 2               @OPCODE_458:   ; [c64_ir] Add
000F9Fr 2                   ; 21
000F9Fr 2  CA               dex
000FA0r 2  CA               dex
000FA1r 2  18               clc
000FA2r 2  B5 00            lda $00,x
000FA4r 2  75 02            adc $02,x
000FA6r 2  95 00            sta $00,x
000FA8r 2  B5 01            lda $01,x
000FAAr 2  75 03            adc $03,x
000FACr 2  95 01            sta $01,x
000FAEr 2               
000FAEr 2               ; snake.pax:93:21 in `initialize-snake`
000FAEr 2               @OPCODE_459:   ; [c64_ir] Store
000FAEr 2  CA               dex
000FAFr 2  CA               dex
000FB0r 2  CA               dex
000FB1r 2  CA               dex
000FB2r 2  B5 02            lda $02,x
000FB4r 2  81 04            sta ($04,x)
000FB6r 2                   ; TODO high byte
000FB6r 2               
000FB6r 2               ; snake.pax:94:5 in `initialize-snake`
000FB6r 2               @OPCODE_460:   ; [c64_ir] PushLiteral(8)
000FB6r 2  E8               inx
000FB7r 2  E8               inx
000FB8r 2  A9 08            lda #8
000FBAr 2  95 00            sta $00,x
000FBCr 2  A9 00            lda #0
000FBEr 2  95 01            sta $01,x
000FC0r 2               
000FC0r 2               ; src/prelude.fth:38:8 in `i`
000FC0r 2               @OPCODE_461:   ; [c64_ir] AltPop
000FC0r 2  E8               inx
000FC1r 2  E8               inx
000FC2r 2  68               pla
000FC3r 2  95 00            sta $00,x
000FC5r 2  68               pla
000FC6r 2  95 01            sta $01,x
000FC8r 2               
000FC8r 2               ; src/prelude.fth:38:11 in `i`
000FC8r 2               @OPCODE_462:   ; [c64_ir] AltPop
000FC8r 2  E8               inx
000FC9r 2  E8               inx
000FCAr 2  68               pla
000FCBr 2  95 00            sta $00,x
000FCDr 2  68               pla
000FCEr 2  95 01            sta $01,x
000FD0r 2               
000FD0r 2               ; src/prelude.fth:38:14 in `i`
000FD0r 2               @OPCODE_463:   ; [c64_ir] TempStore
000FD0r 2  CA               dex
000FD1r 2  CA               dex
000FD2r 2  B5 03            lda $03,x
000FD4r 2  85 96            sta TEMP_PAX2
000FD6r 2  B5 02            lda $02,x
000FD8r 2  85 95            sta TEMP_PAX1
000FDAr 2               
000FDAr 2               ; src/prelude.fth:38:20 in `i`
000FDAr 2               @OPCODE_464:   ; [c64_ir] TempLoad
000FDAr 2  E8               inx
000FDBr 2  E8               inx
000FDCr 2  A5 95            lda TEMP_PAX1
000FDEr 2  95 00            sta $00,x
000FE0r 2  A5 96            lda TEMP_PAX2
000FE2r 2  95 01            sta $01,x
000FE4r 2               
000FE4r 2               ; src/prelude.fth:38:26 in `i`
000FE4r 2               @OPCODE_465:   ; [c64_ir] AltPush
000FE4r 2  CA               dex
000FE5r 2  CA               dex
000FE6r 2  B5 03            lda $03,x
000FE8r 2  48               pha
000FE9r 2  B5 02            lda $02,x
000FEBr 2  48               pha
000FECr 2               
000FECr 2               ; src/prelude.fth:38:29 in `i`
000FECr 2               @OPCODE_466:   ; [c64_ir] AltPush
000FECr 2  CA               dex
000FEDr 2  CA               dex
000FEEr 2  B5 03            lda $03,x
000FF0r 2  48               pha
000FF1r 2  B5 02            lda $02,x
000FF3r 2  48               pha
000FF4r 2               
000FF4r 2               ; src/prelude.fth:38:35 in `i`
000FF4r 2               @OPCODE_467:   ; [c64_ir] TempLoad
000FF4r 2  E8               inx
000FF5r 2  E8               inx
000FF6r 2  A5 95            lda TEMP_PAX1
000FF8r 2  95 00            sta $00,x
000FFAr 2  A5 96            lda TEMP_PAX2
000FFCr 2  95 01            sta $01,x
000FFEr 2               
000FFEr 2               ; src/prelude.fth:6:10 in `dup`
000FFEr 2               @OPCODE_468:   ; [c64_ir] TempStore
000FFEr 2  CA               dex
000FFFr 2  CA               dex
001000r 2  B5 03            lda $03,x
001002r 2  85 96            sta TEMP_PAX2
001004r 2  B5 02            lda $02,x
001006r 2  85 95            sta TEMP_PAX1
001008r 2               
001008r 2               ; src/prelude.fth:6:16 in `dup`
001008r 2               @OPCODE_469:   ; [c64_ir] TempLoad
001008r 2  E8               inx
001009r 2  E8               inx
00100Ar 2  A5 95            lda TEMP_PAX1
00100Cr 2  95 00            sta $00,x
00100Er 2  A5 96            lda TEMP_PAX2
001010r 2  95 01            sta $01,x
001012r 2               
001012r 2               ; src/prelude.fth:6:22 in `dup`
001012r 2               @OPCODE_470:   ; [c64_ir] TempLoad
001012r 2  E8               inx
001013r 2  E8               inx
001014r 2  A5 95            lda TEMP_PAX1
001016r 2  95 00            sta $00,x
001018r 2  A5 96            lda TEMP_PAX2
00101Ar 2  95 01            sta $01,x
00101Cr 2               
00101Cr 2               ; src/prelude.fth:41:13 in `cells`
00101Cr 2               @OPCODE_471:   ; [c64_ir] Add
00101Cr 2                   ; 21
00101Cr 2  CA               dex
00101Dr 2  CA               dex
00101Er 2  18               clc
00101Fr 2  B5 00            lda $00,x
001021r 2  75 02            adc $02,x
001023r 2  95 00            sta $00,x
001025r 2  B5 01            lda $01,x
001027r 2  75 03            adc $03,x
001029r 2  95 01            sta $01,x
00102Br 2               
00102Br 2               ; snake.pax:45:9 in `snake-y`
00102Br 2               @OPCODE_472:   ; [c64_ir] PushLiteral(-27666)
00102Br 2  E8               inx
00102Cr 2  E8               inx
00102Dr 2  A9 EE            lda #238
00102Fr 2  95 00            sta $00,x
001031r 2  A9 93            lda #147
001033r 2  95 01            sta $01,x
001035r 2               
001035r 2               ; snake.pax:45:22 in `snake-y`
001035r 2               @OPCODE_473:   ; [c64_ir] Add
001035r 2                   ; 21
001035r 2  CA               dex
001036r 2  CA               dex
001037r 2  18               clc
001038r 2  B5 00            lda $00,x
00103Ar 2  75 02            adc $02,x
00103Cr 2  95 00            sta $00,x
00103Er 2  B5 01            lda $01,x
001040r 2  75 03            adc $03,x
001042r 2  95 01            sta $01,x
001044r 2               
001044r 2               ; snake.pax:94:17 in `initialize-snake`
001044r 2               @OPCODE_474:   ; [c64_ir] Store
001044r 2  CA               dex
001045r 2  CA               dex
001046r 2  CA               dex
001047r 2  CA               dex
001048r 2  B5 02            lda $02,x
00104Ar 2  81 04            sta ($04,x)
00104Cr 2                   ; TODO high byte
00104Cr 2               
00104Cr 2               ; src/prelude.fth:33:15 in `loopimpl`
00104Cr 2               @OPCODE_475:   ; [c64_ir] AltPop
00104Cr 2  E8               inx
00104Dr 2  E8               inx
00104Er 2  68               pla
00104Fr 2  95 00            sta $00,x
001051r 2  68               pla
001052r 2  95 01            sta $01,x
001054r 2               
001054r 2               ; src/prelude.fth:33:18 in `loopimpl`
001054r 2               @OPCODE_476:   ; [c64_ir] AltPop
001054r 2  E8               inx
001055r 2  E8               inx
001056r 2  68               pla
001057r 2  95 00            sta $00,x
001059r 2  68               pla
00105Ar 2  95 01            sta $01,x
00105Cr 2               
00105Cr 2               ; src/prelude.fth:18:8 in `1+`
00105Cr 2               @OPCODE_477:   ; [c64_ir] PushLiteral(1)
00105Cr 2  E8               inx
00105Dr 2  E8               inx
00105Er 2  A9 01            lda #1
001060r 2  95 00            sta $00,x
001062r 2  A9 00            lda #0
001064r 2  95 01            sta $01,x
001066r 2               
001066r 2               ; src/prelude.fth:18:10 in `1+`
001066r 2               @OPCODE_478:   ; [c64_ir] Add
001066r 2                   ; 21
001066r 2  CA               dex
001067r 2  CA               dex
001068r 2  18               clc
001069r 2  B5 00            lda $00,x
00106Br 2  75 02            adc $02,x
00106Dr 2  95 00            sta $00,x
00106Fr 2  B5 01            lda $01,x
001071r 2  75 03            adc $03,x
001073r 2  95 01            sta $01,x
001075r 2               
001075r 2               ; src/prelude.fth:4:10 in `over`
001075r 2               @OPCODE_479:   ; [c64_ir] AltPush
001075r 2  CA               dex
001076r 2  CA               dex
001077r 2  B5 03            lda $03,x
001079r 2  48               pha
00107Ar 2  B5 02            lda $02,x
00107Cr 2  48               pha
00107Dr 2               
00107Dr 2               ; src/prelude.fth:4:13 in `over`
00107Dr 2               @OPCODE_480:   ; [c64_ir] TempStore
00107Dr 2  CA               dex
00107Er 2  CA               dex
00107Fr 2  B5 03            lda $03,x
001081r 2  85 96            sta TEMP_PAX2
001083r 2  B5 02            lda $02,x
001085r 2  85 95            sta TEMP_PAX1
001087r 2               
001087r 2               ; src/prelude.fth:4:19 in `over`
001087r 2               @OPCODE_481:   ; [c64_ir] TempLoad
001087r 2  E8               inx
001088r 2  E8               inx
001089r 2  A5 95            lda TEMP_PAX1
00108Br 2  95 00            sta $00,x
00108Dr 2  A5 96            lda TEMP_PAX2
00108Fr 2  95 01            sta $01,x
001091r 2               
001091r 2               ; src/prelude.fth:4:25 in `over`
001091r 2               @OPCODE_482:   ; [c64_ir] AltPop
001091r 2  E8               inx
001092r 2  E8               inx
001093r 2  68               pla
001094r 2  95 00            sta $00,x
001096r 2  68               pla
001097r 2  95 01            sta $01,x
001099r 2               
001099r 2               ; src/prelude.fth:4:28 in `over`
001099r 2               @OPCODE_483:   ; [c64_ir] TempLoad
001099r 2  E8               inx
00109Ar 2  E8               inx
00109Br 2  A5 95            lda TEMP_PAX1
00109Dr 2  95 00            sta $00,x
00109Fr 2  A5 96            lda TEMP_PAX2
0010A1r 2  95 01            sta $01,x
0010A3r 2               
0010A3r 2               ; src/prelude.fth:4:10 in `over`
0010A3r 2               @OPCODE_484:   ; [c64_ir] AltPush
0010A3r 2  CA               dex
0010A4r 2  CA               dex
0010A5r 2  B5 03            lda $03,x
0010A7r 2  48               pha
0010A8r 2  B5 02            lda $02,x
0010AAr 2  48               pha
0010ABr 2               
0010ABr 2               ; src/prelude.fth:4:13 in `over`
0010ABr 2               @OPCODE_485:   ; [c64_ir] TempStore
0010ABr 2  CA               dex
0010ACr 2  CA               dex
0010ADr 2  B5 03            lda $03,x
0010AFr 2  85 96            sta TEMP_PAX2
0010B1r 2  B5 02            lda $02,x
0010B3r 2  85 95            sta TEMP_PAX1
0010B5r 2               
0010B5r 2               ; src/prelude.fth:4:19 in `over`
0010B5r 2               @OPCODE_486:   ; [c64_ir] TempLoad
0010B5r 2  E8               inx
0010B6r 2  E8               inx
0010B7r 2  A5 95            lda TEMP_PAX1
0010B9r 2  95 00            sta $00,x
0010BBr 2  A5 96            lda TEMP_PAX2
0010BDr 2  95 01            sta $01,x
0010BFr 2               
0010BFr 2               ; src/prelude.fth:4:25 in `over`
0010BFr 2               @OPCODE_487:   ; [c64_ir] AltPop
0010BFr 2  E8               inx
0010C0r 2  E8               inx
0010C1r 2  68               pla
0010C2r 2  95 00            sta $00,x
0010C4r 2  68               pla
0010C5r 2  95 01            sta $01,x
0010C7r 2               
0010C7r 2               ; src/prelude.fth:4:28 in `over`
0010C7r 2               @OPCODE_488:   ; [c64_ir] TempLoad
0010C7r 2  E8               inx
0010C8r 2  E8               inx
0010C9r 2  A5 95            lda TEMP_PAX1
0010CBr 2  95 00            sta $00,x
0010CDr 2  A5 96            lda TEMP_PAX2
0010CFr 2  95 01            sta $01,x
0010D1r 2               
0010D1r 2               ; src/prelude.fth:33:29 in `loopimpl`
0010D1r 2               @OPCODE_489:   ; [c64_ir] AltPush
0010D1r 2  CA               dex
0010D2r 2  CA               dex
0010D3r 2  B5 03            lda $03,x
0010D5r 2  48               pha
0010D6r 2  B5 02            lda $02,x
0010D8r 2  48               pha
0010D9r 2               
0010D9r 2               ; src/prelude.fth:33:32 in `loopimpl`
0010D9r 2               @OPCODE_490:   ; [c64_ir] AltPush
0010D9r 2  CA               dex
0010DAr 2  CA               dex
0010DBr 2  B5 03            lda $03,x
0010DDr 2  48               pha
0010DEr 2  B5 02            lda $02,x
0010E0r 2  48               pha
0010E1r 2               
0010E1r 2               ; src/prelude.fth:14:12 in `invert`
0010E1r 2               @OPCODE_491:   ; [c64_ir] PushLiteral(-1)
0010E1r 2  E8               inx
0010E2r 2  E8               inx
0010E3r 2  A9 FF            lda #255
0010E5r 2  95 00            sta $00,x
0010E7r 2  A9 FF            lda #255
0010E9r 2  95 01            sta $01,x
0010EBr 2               
0010EBr 2               ; src/prelude.fth:14:15 in `invert`
0010EBr 2               @OPCODE_492:   ; [c64_ir] Nand
0010EBr 2                   ; 26
0010EBr 2  CA               dex
0010ECr 2  CA               dex
0010EDr 2  B5 00            lda $00,x
0010EFr 2  35 02            and $02,x
0010F1r 2  49 FF            eor #$ff
0010F3r 2  95 00            sta $00,x
0010F5r 2  B5 01            lda $01,x
0010F7r 2  35 03            and $03,x
0010F9r 2  49 FF            eor #$ff
0010FBr 2  95 01            sta $01,x
0010FDr 2               
0010FDr 2               ; src/prelude.fth:15:19 in `negate`
0010FDr 2               @OPCODE_493:   ; [c64_ir] PushLiteral(1)
0010FDr 2  E8               inx
0010FEr 2  E8               inx
0010FFr 2  A9 01            lda #1
001101r 2  95 00            sta $00,x
001103r 2  A9 00            lda #0
001105r 2  95 01            sta $01,x
001107r 2               
001107r 2               ; src/prelude.fth:15:21 in `negate`
001107r 2               @OPCODE_494:   ; [c64_ir] Add
001107r 2                   ; 21
001107r 2  CA               dex
001108r 2  CA               dex
001109r 2  18               clc
00110Ar 2  B5 00            lda $00,x
00110Cr 2  75 02            adc $02,x
00110Er 2  95 00            sta $00,x
001110r 2  B5 01            lda $01,x
001112r 2  75 03            adc $03,x
001114r 2  95 01            sta $01,x
001116r 2               
001116r 2               ; src/prelude.fth:16:19 in `-`
001116r 2               @OPCODE_495:   ; [c64_ir] Add
001116r 2                   ; 21
001116r 2  CA               dex
001117r 2  CA               dex
001118r 2  18               clc
001119r 2  B5 00            lda $00,x
00111Br 2  75 02            adc $02,x
00111Dr 2  95 00            sta $00,x
00111Fr 2  B5 01            lda $01,x
001121r 2  75 03            adc $03,x
001123r 2  95 01            sta $01,x
001125r 2               
001125r 2               ; src/prelude.fth:21:8 in `0=`
001125r 2               @OPCODE_496:   ; [c64_ir] JumpIf0(42)
001125r 2  CA               dex
001126r 2  CA               dex
001127r 2  B5 02            lda $02,x
001129r 2  15 03            ora $03,x
00112Br 2  D0 03            bne *+5
00112Dr 2  4C rr rr         jmp @target_42
001130r 2               
001130r 2               @target_41:
001130r 2               
001130r 2               ; src/prelude.fth:21:11 in `0=`
001130r 2               @OPCODE_498:   ; [c64_ir] PushLiteral(0)
001130r 2  E8               inx
001131r 2  E8               inx
001132r 2  A9 00            lda #0
001134r 2  95 00            sta $00,x
001136r 2  A9 00            lda #0
001138r 2  95 01            sta $01,x
00113Ar 2               
00113Ar 2               ; src/prelude.fth:21:13 in `0=`
00113Ar 2               @OPCODE_499:   ; [c64_ir] JumpElse(43)
00113Ar 2  4C rr rr         jmp @target_43
00113Dr 2               
00113Dr 2               @target_42:
00113Dr 2               
00113Dr 2               ; src/prelude.fth:21:18 in `0=`
00113Dr 2               @OPCODE_501:   ; [c64_ir] PushLiteral(-1)
00113Dr 2  E8               inx
00113Er 2  E8               inx
00113Fr 2  A9 FF            lda #255
001141r 2  95 00            sta $00,x
001143r 2  A9 FF            lda #255
001145r 2  95 01            sta $01,x
001147r 2               
001147r 2               ; src/prelude.fth:21:21 in `0=`
001147r 2               @OPCODE_502:   ; [c64_ir] JumpTarget(42)
001147r 2               
001147r 2               @target_43:
001147r 2               
001147r 2               ; src/prelude.fth:3:10 in `swap`
001147r 2               @OPCODE_504:   ; [c64_ir] AltPush
001147r 2  CA               dex
001148r 2  CA               dex
001149r 2  B5 03            lda $03,x
00114Br 2  48               pha
00114Cr 2  B5 02            lda $02,x
00114Er 2  48               pha
00114Fr 2               
00114Fr 2               ; src/prelude.fth:3:19 in `swap`
00114Fr 2               @OPCODE_505:   ; [c64_ir] AltPop
00114Fr 2  E8               inx
001150r 2  E8               inx
001151r 2  68               pla
001152r 2  95 00            sta $00,x
001154r 2  68               pla
001155r 2  95 01            sta $01,x
001157r 2               
001157r 2               ; snake.pax:95:3 in `initialize-snake`
001157r 2               @OPCODE_506:   ; [c64_ir] LoopIf0(40)
001157r 2  CA               dex
001158r 2  CA               dex
001159r 2  B5 02            lda $02,x
00115Br 2  15 03            ora $03,x
00115Dr 2  D0 03            bne *+5
00115Fr 2  4C rr rr         jmp @target_40
001162r 2               
001162r 2               @target_44:
001162r 2               
001162r 2               ; snake.pax:95:3 in `initialize-snake`
001162r 2               @OPCODE_508:   ; [c64_ir] AltPop
001162r 2  E8               inx
001163r 2  E8               inx
001164r 2  68               pla
001165r 2  95 00            sta $00,x
001167r 2  68               pla
001168r 2  95 01            sta $01,x
00116Ar 2               
00116Ar 2               ; snake.pax:95:3 in `initialize-snake`
00116Ar 2               @OPCODE_509:   ; [c64_ir] Drop
00116Ar 2  CA               dex
00116Br 2  CA               dex
00116Cr 2               
00116Cr 2               ; snake.pax:95:3 in `initialize-snake`
00116Cr 2               @OPCODE_510:   ; [c64_ir] AltPop
00116Cr 2  E8               inx
00116Dr 2  E8               inx
00116Er 2  68               pla
00116Fr 2  95 00            sta $00,x
001171r 2  68               pla
001172r 2  95 01            sta $01,x
001174r 2               
001174r 2               ; snake.pax:95:3 in `initialize-snake`
001174r 2               @OPCODE_511:   ; [c64_ir] Drop
001174r 2  CA               dex
001175r 2  CA               dex
001176r 2               
001176r 2               ; snake.pax:96:3 in `initialize-snake`
001176r 2               @OPCODE_512:   ; [c64_ir] PushLiteral(39)
001176r 2  E8               inx
001177r 2  E8               inx
001178r 2  A9 27            lda #39
00117Ar 2  95 00            sta $00,x
00117Cr 2  A9 00            lda #0
00117Er 2  95 01            sta $01,x
001180r 2               
001180r 2               ; snake.pax:96:9 in `initialize-snake`
001180r 2               @OPCODE_513:   ; [c64_ir] PushLiteral(-26660)
001180r 2  E8               inx
001181r 2  E8               inx
001182r 2  A9 DC            lda #220
001184r 2  95 00            sta $00,x
001186r 2  A9 97            lda #151
001188r 2  95 01            sta $01,x
00118Ar 2               
00118Ar 2               ; snake.pax:96:19 in `initialize-snake`
00118Ar 2               @OPCODE_514:   ; [c64_ir] Store
00118Ar 2  CA               dex
00118Br 2  CA               dex
00118Cr 2  CA               dex
00118Dr 2  CA               dex
00118Er 2  B5 02            lda $02,x
001190r 2  81 04            sta ($04,x)
001192r 2                   ; TODO high byte
001192r 2               
001192r 2               ; <inline>:0:0 in `main`
001192r 2               @OPCODE_515:   ; [c64_ir] AltPop
001192r 2  E8               inx
001193r 2  E8               inx
001194r 2  68               pla
001195r 2  95 00            sta $00,x
001197r 2  68               pla
001198r 2  95 01            sta $01,x
00119Ar 2               
00119Ar 2               ; <inline>:0:0 in `main`
00119Ar 2               @OPCODE_516:   ; [c64_ir] Drop
00119Ar 2  CA               dex
00119Br 2  CA               dex
00119Cr 2               
00119Cr 2               ; snake.pax:100:21 in `initialize-apple`
00119Cr 2               @OPCODE_517:   ; [c64_ir] PushLiteral(8)
00119Cr 2  E8               inx
00119Dr 2  E8               inx
00119Er 2  A9 08            lda #8
0011A0r 2  95 00            sta $00,x
0011A2r 2  A9 00            lda #0
0011A4r 2  95 01            sta $01,x
0011A6r 2               
0011A6r 2               ; snake.pax:100:23 in `initialize-apple`
0011A6r 2               @OPCODE_518:   ; [c64_ir] PushLiteral(13)
0011A6r 2  E8               inx
0011A7r 2  E8               inx
0011A8r 2  A9 0D            lda #13
0011AAr 2  95 00            sta $00,x
0011ACr 2  A9 00            lda #0
0011AEr 2  95 01            sta $01,x
0011B0r 2               
0011B0r 2               ; snake.pax:98:22 in `set-apple-position`
0011B0r 2               @OPCODE_519:   ; [c64_ir] PushLiteral(-26664)
0011B0r 2  E8               inx
0011B1r 2  E8               inx
0011B2r 2  A9 D8            lda #216
0011B4r 2  95 00            sta $00,x
0011B6r 2  A9 97            lda #151
0011B8r 2  95 01            sta $01,x
0011BAr 2               
0011BAr 2               ; snake.pax:98:30 in `set-apple-position`
0011BAr 2               @OPCODE_520:   ; [c64_ir] Store
0011BAr 2  CA               dex
0011BBr 2  CA               dex
0011BCr 2  CA               dex
0011BDr 2  CA               dex
0011BEr 2  B5 02            lda $02,x
0011C0r 2  81 04            sta ($04,x)
0011C2r 2                   ; TODO high byte
0011C2r 2               
0011C2r 2               ; snake.pax:98:32 in `set-apple-position`
0011C2r 2               @OPCODE_521:   ; [c64_ir] PushLiteral(-26662)
0011C2r 2  E8               inx
0011C3r 2  E8               inx
0011C4r 2  A9 DA            lda #218
0011C6r 2  95 00            sta $00,x
0011C8r 2  A9 97            lda #151
0011CAr 2  95 01            sta $01,x
0011CCr 2               
0011CCr 2               ; snake.pax:98:40 in `set-apple-position`
0011CCr 2               @OPCODE_522:   ; [c64_ir] Store
0011CCr 2  CA               dex
0011CDr 2  CA               dex
0011CEr 2  CA               dex
0011CFr 2  CA               dex
0011D0r 2  B5 02            lda $02,x
0011D2r 2  81 04            sta ($04,x)
0011D4r 2                   ; TODO high byte
0011D4r 2               
0011D4r 2               ; <inline>:0:0 in `main`
0011D4r 2               @OPCODE_523:   ; [c64_ir] PushLiteral(7777)
0011D4r 2  E8               inx
0011D5r 2  E8               inx
0011D6r 2  A9 61            lda #97
0011D8r 2  95 00            sta $00,x
0011DAr 2  A9 1E            lda #30
0011DCr 2  95 01            sta $01,x
0011DEr 2               
0011DEr 2               ; <inline>:0:0 in `main`
0011DEr 2               @OPCODE_524:   ; [c64_ir] AltPush
0011DEr 2  CA               dex
0011DFr 2  CA               dex
0011E0r 2  B5 03            lda $03,x
0011E2r 2  48               pha
0011E3r 2  B5 02            lda $02,x
0011E5r 2  48               pha
0011E6r 2               
0011E6r 2               ; snake.pax:103:3 in `draw-full-snake`
0011E6r 2               @OPCODE_525:   ; [c64_ir] PushLiteral(-26658)
0011E6r 2  E8               inx
0011E7r 2  E8               inx
0011E8r 2  A9 DE            lda #222
0011EAr 2  95 00            sta $00,x
0011ECr 2  A9 97            lda #151
0011EEr 2  95 01            sta $01,x
0011F0r 2               
0011F0r 2               ; snake.pax:103:10 in `draw-full-snake`
0011F0r 2               @OPCODE_526:   ; [c64_ir] Load
0011F0r 2  A1 00            lda ($00,x)
0011F2r 2  95 00            sta $00,x
0011F4r 2  A9 00            lda #0
0011F6r 2  95 01            sta $01,x
0011F8r 2               
0011F8r 2               ; snake.pax:103:12 in `draw-full-snake`
0011F8r 2               @OPCODE_527:   ; [c64_ir] PushLiteral(0)
0011F8r 2  E8               inx
0011F9r 2  E8               inx
0011FAr 2  A9 00            lda #0
0011FCr 2  95 00            sta $00,x
0011FEr 2  A9 00            lda #0
001200r 2  95 01            sta $01,x
001202r 2               
001202r 2               ; snake.pax:103:14 in `draw-full-snake`
001202r 2               @OPCODE_528:   ; [c64_ir] AltPush
001202r 2  CA               dex
001203r 2  CA               dex
001204r 2  B5 03            lda $03,x
001206r 2  48               pha
001207r 2  B5 02            lda $02,x
001209r 2  48               pha
00120Ar 2               
00120Ar 2               ; snake.pax:103:14 in `draw-full-snake`
00120Ar 2               @OPCODE_529:   ; [c64_ir] AltPush
00120Ar 2  CA               dex
00120Br 2  CA               dex
00120Cr 2  B5 03            lda $03,x
00120Er 2  48               pha
00120Fr 2  B5 02            lda $02,x
001211r 2  48               pha
001212r 2               
001212r 2               ; snake.pax:103:14 in `draw-full-snake`
001212r 2               @OPCODE_530:   ; [c64_ir] LoopTarget(44)
001212r 2               
001212r 2               @target_45:
001212r 2               
001212r 2               ; src/prelude.fth:38:8 in `i`
001212r 2               @OPCODE_532:   ; [c64_ir] AltPop
001212r 2  E8               inx
001213r 2  E8               inx
001214r 2  68               pla
001215r 2  95 00            sta $00,x
001217r 2  68               pla
001218r 2  95 01            sta $01,x
00121Ar 2               
00121Ar 2               ; src/prelude.fth:38:11 in `i`
00121Ar 2               @OPCODE_533:   ; [c64_ir] AltPop
00121Ar 2  E8               inx
00121Br 2  E8               inx
00121Cr 2  68               pla
00121Dr 2  95 00            sta $00,x
00121Fr 2  68               pla
001220r 2  95 01            sta $01,x
001222r 2               
001222r 2               ; src/prelude.fth:38:14 in `i`
001222r 2               @OPCODE_534:   ; [c64_ir] TempStore
001222r 2  CA               dex
001223r 2  CA               dex
001224r 2  B5 03            lda $03,x
001226r 2  85 96            sta TEMP_PAX2
001228r 2  B5 02            lda $02,x
00122Ar 2  85 95            sta TEMP_PAX1
00122Cr 2               
00122Cr 2               ; src/prelude.fth:38:20 in `i`
00122Cr 2               @OPCODE_535:   ; [c64_ir] TempLoad
00122Cr 2  E8               inx
00122Dr 2  E8               inx
00122Er 2  A5 95            lda TEMP_PAX1
001230r 2  95 00            sta $00,x
001232r 2  A5 96            lda TEMP_PAX2
001234r 2  95 01            sta $01,x
001236r 2               
001236r 2               ; src/prelude.fth:38:26 in `i`
001236r 2               @OPCODE_536:   ; [c64_ir] AltPush
001236r 2  CA               dex
001237r 2  CA               dex
001238r 2  B5 03            lda $03,x
00123Ar 2  48               pha
00123Br 2  B5 02            lda $02,x
00123Dr 2  48               pha
00123Er 2               
00123Er 2               ; src/prelude.fth:38:29 in `i`
00123Er 2               @OPCODE_537:   ; [c64_ir] AltPush
00123Er 2  CA               dex
00123Fr 2  CA               dex
001240r 2  B5 03            lda $03,x
001242r 2  48               pha
001243r 2  B5 02            lda $02,x
001245r 2  48               pha
001246r 2               
001246r 2               ; src/prelude.fth:38:35 in `i`
001246r 2               @OPCODE_538:   ; [c64_ir] TempLoad
001246r 2  E8               inx
001247r 2  E8               inx
001248r 2  A5 95            lda TEMP_PAX1
00124Ar 2  95 00            sta $00,x
00124Cr 2  A5 96            lda TEMP_PAX2
00124Er 2  95 01            sta $01,x
001250r 2               
001250r 2               ; src/prelude.fth:6:10 in `dup`
001250r 2               @OPCODE_539:   ; [c64_ir] TempStore
001250r 2  CA               dex
001251r 2  CA               dex
001252r 2  B5 03            lda $03,x
001254r 2  85 96            sta TEMP_PAX2
001256r 2  B5 02            lda $02,x
001258r 2  85 95            sta TEMP_PAX1
00125Ar 2               
00125Ar 2               ; src/prelude.fth:6:16 in `dup`
00125Ar 2               @OPCODE_540:   ; [c64_ir] TempLoad
00125Ar 2  E8               inx
00125Br 2  E8               inx
00125Cr 2  A5 95            lda TEMP_PAX1
00125Er 2  95 00            sta $00,x
001260r 2  A5 96            lda TEMP_PAX2
001262r 2  95 01            sta $01,x
001264r 2               
001264r 2               ; src/prelude.fth:6:22 in `dup`
001264r 2               @OPCODE_541:   ; [c64_ir] TempLoad
001264r 2  E8               inx
001265r 2  E8               inx
001266r 2  A5 95            lda TEMP_PAX1
001268r 2  95 00            sta $00,x
00126Ar 2  A5 96            lda TEMP_PAX2
00126Cr 2  95 01            sta $01,x
00126Er 2               
00126Er 2               ; src/prelude.fth:41:13 in `cells`
00126Er 2               @OPCODE_542:   ; [c64_ir] Add
00126Er 2                   ; 21
00126Er 2  CA               dex
00126Fr 2  CA               dex
001270r 2  18               clc
001271r 2  B5 00            lda $00,x
001273r 2  75 02            adc $02,x
001275r 2  95 00            sta $00,x
001277r 2  B5 01            lda $01,x
001279r 2  75 03            adc $03,x
00127Br 2  95 01            sta $01,x
00127Dr 2               
00127Dr 2               ; snake.pax:42:9 in `snake-x`
00127Dr 2               @OPCODE_543:   ; [c64_ir] PushLiteral(-28668)
00127Dr 2  E8               inx
00127Er 2  E8               inx
00127Fr 2  A9 04            lda #4
001281r 2  95 00            sta $00,x
001283r 2  A9 90            lda #144
001285r 2  95 01            sta $01,x
001287r 2               
001287r 2               ; snake.pax:42:22 in `snake-x`
001287r 2               @OPCODE_544:   ; [c64_ir] Add
001287r 2                   ; 21
001287r 2  CA               dex
001288r 2  CA               dex
001289r 2  18               clc
00128Ar 2  B5 00            lda $00,x
00128Cr 2  75 02            adc $02,x
00128Er 2  95 00            sta $00,x
001290r 2  B5 01            lda $01,x
001292r 2  75 03            adc $03,x
001294r 2  95 01            sta $01,x
001296r 2               
001296r 2               ; snake.pax:104:15 in `draw-full-snake`
001296r 2               @OPCODE_545:   ; [c64_ir] Load
001296r 2  A1 00            lda ($00,x)
001298r 2  95 00            sta $00,x
00129Ar 2  A9 00            lda #0
00129Cr 2  95 01            sta $01,x
00129Er 2               
00129Er 2               ; src/prelude.fth:38:8 in `i`
00129Er 2               @OPCODE_546:   ; [c64_ir] AltPop
00129Er 2  E8               inx
00129Fr 2  E8               inx
0012A0r 2  68               pla
0012A1r 2  95 00            sta $00,x
0012A3r 2  68               pla
0012A4r 2  95 01            sta $01,x
0012A6r 2               
0012A6r 2               ; src/prelude.fth:38:11 in `i`
0012A6r 2               @OPCODE_547:   ; [c64_ir] AltPop
0012A6r 2  E8               inx
0012A7r 2  E8               inx
0012A8r 2  68               pla
0012A9r 2  95 00            sta $00,x
0012ABr 2  68               pla
0012ACr 2  95 01            sta $01,x
0012AEr 2               
0012AEr 2               ; src/prelude.fth:38:14 in `i`
0012AEr 2               @OPCODE_548:   ; [c64_ir] TempStore
0012AEr 2  CA               dex
0012AFr 2  CA               dex
0012B0r 2  B5 03            lda $03,x
0012B2r 2  85 96            sta TEMP_PAX2
0012B4r 2  B5 02            lda $02,x
0012B6r 2  85 95            sta TEMP_PAX1
0012B8r 2               
0012B8r 2               ; src/prelude.fth:38:20 in `i`
0012B8r 2               @OPCODE_549:   ; [c64_ir] TempLoad
0012B8r 2  E8               inx
0012B9r 2  E8               inx
0012BAr 2  A5 95            lda TEMP_PAX1
0012BCr 2  95 00            sta $00,x
0012BEr 2  A5 96            lda TEMP_PAX2
0012C0r 2  95 01            sta $01,x
0012C2r 2               
0012C2r 2               ; src/prelude.fth:38:26 in `i`
0012C2r 2               @OPCODE_550:   ; [c64_ir] AltPush
0012C2r 2  CA               dex
0012C3r 2  CA               dex
0012C4r 2  B5 03            lda $03,x
0012C6r 2  48               pha
0012C7r 2  B5 02            lda $02,x
0012C9r 2  48               pha
0012CAr 2               
0012CAr 2               ; src/prelude.fth:38:29 in `i`
0012CAr 2               @OPCODE_551:   ; [c64_ir] AltPush
0012CAr 2  CA               dex
0012CBr 2  CA               dex
0012CCr 2  B5 03            lda $03,x
0012CEr 2  48               pha
0012CFr 2  B5 02            lda $02,x
0012D1r 2  48               pha
0012D2r 2               
0012D2r 2               ; src/prelude.fth:38:35 in `i`
0012D2r 2               @OPCODE_552:   ; [c64_ir] TempLoad
0012D2r 2  E8               inx
0012D3r 2  E8               inx
0012D4r 2  A5 95            lda TEMP_PAX1
0012D6r 2  95 00            sta $00,x
0012D8r 2  A5 96            lda TEMP_PAX2
0012DAr 2  95 01            sta $01,x
0012DCr 2               
0012DCr 2               ; src/prelude.fth:6:10 in `dup`
0012DCr 2               @OPCODE_553:   ; [c64_ir] TempStore
0012DCr 2  CA               dex
0012DDr 2  CA               dex
0012DEr 2  B5 03            lda $03,x
0012E0r 2  85 96            sta TEMP_PAX2
0012E2r 2  B5 02            lda $02,x
0012E4r 2  85 95            sta TEMP_PAX1
0012E6r 2               
0012E6r 2               ; src/prelude.fth:6:16 in `dup`
0012E6r 2               @OPCODE_554:   ; [c64_ir] TempLoad
0012E6r 2  E8               inx
0012E7r 2  E8               inx
0012E8r 2  A5 95            lda TEMP_PAX1
0012EAr 2  95 00            sta $00,x
0012ECr 2  A5 96            lda TEMP_PAX2
0012EEr 2  95 01            sta $01,x
0012F0r 2               
0012F0r 2               ; src/prelude.fth:6:22 in `dup`
0012F0r 2               @OPCODE_555:   ; [c64_ir] TempLoad
0012F0r 2  E8               inx
0012F1r 2  E8               inx
0012F2r 2  A5 95            lda TEMP_PAX1
0012F4r 2  95 00            sta $00,x
0012F6r 2  A5 96            lda TEMP_PAX2
0012F8r 2  95 01            sta $01,x
0012FAr 2               
0012FAr 2               ; src/prelude.fth:41:13 in `cells`
0012FAr 2               @OPCODE_556:   ; [c64_ir] Add
0012FAr 2                   ; 21
0012FAr 2  CA               dex
0012FBr 2  CA               dex
0012FCr 2  18               clc
0012FDr 2  B5 00            lda $00,x
0012FFr 2  75 02            adc $02,x
001301r 2  95 00            sta $00,x
001303r 2  B5 01            lda $01,x
001305r 2  75 03            adc $03,x
001307r 2  95 01            sta $01,x
001309r 2               
001309r 2               ; snake.pax:45:9 in `snake-y`
001309r 2               @OPCODE_557:   ; [c64_ir] PushLiteral(-27666)
001309r 2  E8               inx
00130Ar 2  E8               inx
00130Br 2  A9 EE            lda #238
00130Dr 2  95 00            sta $00,x
00130Fr 2  A9 93            lda #147
001311r 2  95 01            sta $01,x
001313r 2               
001313r 2               ; snake.pax:45:22 in `snake-y`
001313r 2               @OPCODE_558:   ; [c64_ir] Add
001313r 2                   ; 21
001313r 2  CA               dex
001314r 2  CA               dex
001315r 2  18               clc
001316r 2  B5 00            lda $00,x
001318r 2  75 02            adc $02,x
00131Ar 2  95 00            sta $00,x
00131Cr 2  B5 01            lda $01,x
00131Er 2  75 03            adc $03,x
001320r 2  95 01            sta $01,x
001322r 2               
001322r 2               ; snake.pax:104:27 in `draw-full-snake`
001322r 2               @OPCODE_559:   ; [c64_ir] Load
001322r 2  A1 00            lda ($00,x)
001324r 2  95 00            sta $00,x
001326r 2  A9 00            lda #0
001328r 2  95 01            sta $01,x
00132Ar 2               
00132Ar 2               ; <inline>:0:0 in `main`
00132Ar 2               @OPCODE_560:   ; [c64_ir] PushLiteral(7777)
00132Ar 2  E8               inx
00132Br 2  E8               inx
00132Cr 2  A9 61            lda #97
00132Er 2  95 00            sta $00,x
001330r 2  A9 1E            lda #30
001332r 2  95 01            sta $01,x
001334r 2               
001334r 2               ; <inline>:0:0 in `main`
001334r 2               @OPCODE_561:   ; [c64_ir] AltPush
001334r 2  CA               dex
001335r 2  CA               dex
001336r 2  B5 03            lda $03,x
001338r 2  48               pha
001339r 2  B5 02            lda $02,x
00133Br 2  48               pha
00133Cr 2               
00133Cr 2               ; src/prelude.fth:3:10 in `swap`
00133Cr 2               @OPCODE_562:   ; [c64_ir] AltPush
00133Cr 2  CA               dex
00133Dr 2  CA               dex
00133Er 2  B5 03            lda $03,x
001340r 2  48               pha
001341r 2  B5 02            lda $02,x
001343r 2  48               pha
001344r 2               
001344r 2               ; src/prelude.fth:3:13 in `swap`
001344r 2               @OPCODE_563:   ; [c64_ir] TempStore
001344r 2  CA               dex
001345r 2  CA               dex
001346r 2  B5 03            lda $03,x
001348r 2  85 96            sta TEMP_PAX2
00134Ar 2  B5 02            lda $02,x
00134Cr 2  85 95            sta TEMP_PAX1
00134Er 2               
00134Er 2               ; src/prelude.fth:3:19 in `swap`
00134Er 2               @OPCODE_564:   ; [c64_ir] AltPop
00134Er 2  E8               inx
00134Fr 2  E8               inx
001350r 2  68               pla
001351r 2  95 00            sta $00,x
001353r 2  68               pla
001354r 2  95 01            sta $01,x
001356r 2               
001356r 2               ; src/prelude.fth:3:22 in `swap`
001356r 2               @OPCODE_565:   ; [c64_ir] TempLoad
001356r 2  E8               inx
001357r 2  E8               inx
001358r 2  A5 95            lda TEMP_PAX1
00135Ar 2  95 00            sta $00,x
00135Cr 2  A5 96            lda TEMP_PAX2
00135Er 2  95 01            sta $01,x
001360r 2               
001360r 2               ; src/prelude.fth:3:13 in `swap`
001360r 2               @OPCODE_566:   ; [c64_ir] TempStore
001360r 2  CA               dex
001361r 2  CA               dex
001362r 2  B5 03            lda $03,x
001364r 2  85 96            sta TEMP_PAX2
001366r 2  B5 02            lda $02,x
001368r 2  85 95            sta TEMP_PAX1
00136Ar 2               
00136Ar 2               ; src/prelude.fth:3:22 in `swap`
00136Ar 2               @OPCODE_567:   ; [c64_ir] TempLoad
00136Ar 2  E8               inx
00136Br 2  E8               inx
00136Cr 2  A5 95            lda TEMP_PAX1
00136Er 2  95 00            sta $00,x
001370r 2  A5 96            lda TEMP_PAX2
001372r 2  95 01            sta $01,x
001374r 2               
001374r 2               ; src/prelude.fth:5:10 in `rot`
001374r 2               @OPCODE_568:   ; [c64_ir] AltPush
001374r 2  CA               dex
001375r 2  CA               dex
001376r 2  B5 03            lda $03,x
001378r 2  48               pha
001379r 2  B5 02            lda $02,x
00137Br 2  48               pha
00137Cr 2               
00137Cr 2               ; src/prelude.fth:3:13 in `swap`
00137Cr 2               @OPCODE_569:   ; [c64_ir] TempStore
00137Cr 2  CA               dex
00137Dr 2  CA               dex
00137Er 2  B5 03            lda $03,x
001380r 2  85 96            sta TEMP_PAX2
001382r 2  B5 02            lda $02,x
001384r 2  85 95            sta TEMP_PAX1
001386r 2               
001386r 2               ; src/prelude.fth:3:19 in `swap`
001386r 2               @OPCODE_570:   ; [c64_ir] PushLiteral(232)
001386r 2  E8               inx
001387r 2  E8               inx
001388r 2  A9 E8            lda #232
00138Ar 2  95 00            sta $00,x
00138Cr 2  A9 00            lda #0
00138Er 2  95 01            sta $01,x
001390r 2               
001390r 2               ; src/prelude.fth:3:22 in `swap`
001390r 2               @OPCODE_571:   ; [c64_ir] TempLoad
001390r 2  E8               inx
001391r 2  E8               inx
001392r 2  A5 95            lda TEMP_PAX1
001394r 2  95 00            sta $00,x
001396r 2  A5 96            lda TEMP_PAX2
001398r 2  95 01            sta $01,x
00139Ar 2               
00139Ar 2               ; src/prelude.fth:5:18 in `rot`
00139Ar 2               @OPCODE_572:   ; [c64_ir] AltPop
00139Ar 2  E8               inx
00139Br 2  E8               inx
00139Cr 2  68               pla
00139Dr 2  95 00            sta $00,x
00139Fr 2  68               pla
0013A0r 2  95 01            sta $01,x
0013A2r 2               
0013A2r 2               ; src/prelude.fth:3:10 in `swap`
0013A2r 2               @OPCODE_573:   ; [c64_ir] AltPush
0013A2r 2  CA               dex
0013A3r 2  CA               dex
0013A4r 2  B5 03            lda $03,x
0013A6r 2  48               pha
0013A7r 2  B5 02            lda $02,x
0013A9r 2  48               pha
0013AAr 2               
0013AAr 2               ; src/prelude.fth:3:13 in `swap`
0013AAr 2               @OPCODE_574:   ; [c64_ir] TempStore
0013AAr 2  CA               dex
0013ABr 2  CA               dex
0013ACr 2  B5 03            lda $03,x
0013AEr 2  85 96            sta TEMP_PAX2
0013B0r 2  B5 02            lda $02,x
0013B2r 2  85 95            sta TEMP_PAX1
0013B4r 2               
0013B4r 2               ; src/prelude.fth:3:19 in `swap`
0013B4r 2               @OPCODE_575:   ; [c64_ir] AltPop
0013B4r 2  E8               inx
0013B5r 2  E8               inx
0013B6r 2  68               pla
0013B7r 2  95 00            sta $00,x
0013B9r 2  68               pla
0013BAr 2  95 01            sta $01,x
0013BCr 2               
0013BCr 2               ; src/prelude.fth:3:22 in `swap`
0013BCr 2               @OPCODE_576:   ; [c64_ir] TempLoad
0013BCr 2  E8               inx
0013BDr 2  E8               inx
0013BEr 2  A5 95            lda TEMP_PAX1
0013C0r 2  95 00            sta $00,x
0013C2r 2  A5 96            lda TEMP_PAX2
0013C4r 2  95 01            sta $01,x
0013C6r 2               
0013C6r 2               ; <inline>:0:0 in `main`
0013C6r 2               @OPCODE_577:   ; [c64_ir] PushLiteral(7777)
0013C6r 2  E8               inx
0013C7r 2  E8               inx
0013C8r 2  A9 61            lda #97
0013CAr 2  95 00            sta $00,x
0013CCr 2  A9 1E            lda #30
0013CEr 2  95 01            sta $01,x
0013D0r 2               
0013D0r 2               ; <inline>:0:0 in `main`
0013D0r 2               @OPCODE_578:   ; [c64_ir] AltPush
0013D0r 2  CA               dex
0013D1r 2  CA               dex
0013D2r 2  B5 03            lda $03,x
0013D4r 2  48               pha
0013D5r 2  B5 02            lda $02,x
0013D7r 2  48               pha
0013D8r 2               
0013D8r 2               ; <inline>:0:0 in `main`
0013D8r 2               @OPCODE_579:   ; [c64_ir] PushLiteral(7777)
0013D8r 2  E8               inx
0013D9r 2  E8               inx
0013DAr 2  A9 61            lda #97
0013DCr 2  95 00            sta $00,x
0013DEr 2  A9 1E            lda #30
0013E0r 2  95 01            sta $01,x
0013E2r 2               
0013E2r 2               ; <inline>:0:0 in `main`
0013E2r 2               @OPCODE_580:   ; [c64_ir] AltPush
0013E2r 2  CA               dex
0013E3r 2  CA               dex
0013E4r 2  B5 03            lda $03,x
0013E6r 2  48               pha
0013E7r 2  B5 02            lda $02,x
0013E9r 2  48               pha
0013EAr 2               
0013EAr 2               ; <inline>:0:0 in `main`
0013EAr 2               @OPCODE_581:   ; [c64_ir] PushLiteral(7777)
0013EAr 2  E8               inx
0013EBr 2  E8               inx
0013ECr 2  A9 61            lda #97
0013EEr 2  95 00            sta $00,x
0013F0r 2  A9 1E            lda #30
0013F2r 2  95 01            sta $01,x
0013F4r 2               
0013F4r 2               ; <inline>:0:0 in `main`
0013F4r 2               @OPCODE_582:   ; [c64_ir] AltPush
0013F4r 2  CA               dex
0013F5r 2  CA               dex
0013F6r 2  B5 03            lda $03,x
0013F8r 2  48               pha
0013F9r 2  B5 02            lda $02,x
0013FBr 2  48               pha
0013FCr 2               
0013FCr 2               ; src/prelude.fth:44:8 in `*`
0013FCr 2               @OPCODE_583:   ; [c64_ir] PushLiteral(0)
0013FCr 2  E8               inx
0013FDr 2  E8               inx
0013FEr 2  A9 00            lda #0
001400r 2  95 00            sta $00,x
001402r 2  A9 00            lda #0
001404r 2  95 01            sta $01,x
001406r 2               
001406r 2               ; src/prelude.fth:44:10 in `*`
001406r 2               @OPCODE_584:   ; [c64_ir] PushLiteral(40)
001406r 2  E8               inx
001407r 2  E8               inx
001408r 2  A9 28            lda #40
00140Ar 2  95 00            sta $00,x
00140Cr 2  A9 00            lda #0
00140Er 2  95 01            sta $01,x
001410r 2               
001410r 2               ; src/prelude.fth:44:13 in `*`
001410r 2               @OPCODE_585:   ; [c64_ir] PushLiteral(0)
001410r 2  E8               inx
001411r 2  E8               inx
001412r 2  A9 00            lda #0
001414r 2  95 00            sta $00,x
001416r 2  A9 00            lda #0
001418r 2  95 01            sta $01,x
00141Ar 2               
00141Ar 2               ; src/prelude.fth:44:15 in `*`
00141Ar 2               @OPCODE_586:   ; [c64_ir] AltPush
00141Ar 2  CA               dex
00141Br 2  CA               dex
00141Cr 2  B5 03            lda $03,x
00141Er 2  48               pha
00141Fr 2  B5 02            lda $02,x
001421r 2  48               pha
001422r 2               
001422r 2               ; src/prelude.fth:44:15 in `*`
001422r 2               @OPCODE_587:   ; [c64_ir] AltPush
001422r 2  CA               dex
001423r 2  CA               dex
001424r 2  B5 03            lda $03,x
001426r 2  48               pha
001427r 2  B5 02            lda $02,x
001429r 2  48               pha
00142Ar 2               
00142Ar 2               ; src/prelude.fth:44:15 in `*`
00142Ar 2               @OPCODE_588:   ; [c64_ir] LoopTarget(45)
00142Ar 2               
00142Ar 2               @target_46:
00142Ar 2               
00142Ar 2               ; src/prelude.fth:4:10 in `over`
00142Ar 2               @OPCODE_590:   ; [c64_ir] AltPush
00142Ar 2  CA               dex
00142Br 2  CA               dex
00142Cr 2  B5 03            lda $03,x
00142Er 2  48               pha
00142Fr 2  B5 02            lda $02,x
001431r 2  48               pha
001432r 2               
001432r 2               ; src/prelude.fth:4:13 in `over`
001432r 2               @OPCODE_591:   ; [c64_ir] TempStore
001432r 2  CA               dex
001433r 2  CA               dex
001434r 2  B5 03            lda $03,x
001436r 2  85 96            sta TEMP_PAX2
001438r 2  B5 02            lda $02,x
00143Ar 2  85 95            sta TEMP_PAX1
00143Cr 2               
00143Cr 2               ; src/prelude.fth:4:19 in `over`
00143Cr 2               @OPCODE_592:   ; [c64_ir] TempLoad
00143Cr 2  E8               inx
00143Dr 2  E8               inx
00143Er 2  A5 95            lda TEMP_PAX1
001440r 2  95 00            sta $00,x
001442r 2  A5 96            lda TEMP_PAX2
001444r 2  95 01            sta $01,x
001446r 2               
001446r 2               ; src/prelude.fth:4:25 in `over`
001446r 2               @OPCODE_593:   ; [c64_ir] AltPop
001446r 2  E8               inx
001447r 2  E8               inx
001448r 2  68               pla
001449r 2  95 00            sta $00,x
00144Br 2  68               pla
00144Cr 2  95 01            sta $01,x
00144Er 2               
00144Er 2               ; src/prelude.fth:4:28 in `over`
00144Er 2               @OPCODE_594:   ; [c64_ir] TempLoad
00144Er 2  E8               inx
00144Fr 2  E8               inx
001450r 2  A5 95            lda TEMP_PAX1
001452r 2  95 00            sta $00,x
001454r 2  A5 96            lda TEMP_PAX2
001456r 2  95 01            sta $01,x
001458r 2               
001458r 2               ; src/prelude.fth:44:23 in `*`
001458r 2               @OPCODE_595:   ; [c64_ir] Add
001458r 2                   ; 21
001458r 2  CA               dex
001459r 2  CA               dex
00145Ar 2  18               clc
00145Br 2  B5 00            lda $00,x
00145Dr 2  75 02            adc $02,x
00145Fr 2  95 00            sta $00,x
001461r 2  B5 01            lda $01,x
001463r 2  75 03            adc $03,x
001465r 2  95 01            sta $01,x
001467r 2               
001467r 2               ; src/prelude.fth:33:15 in `loopimpl`
001467r 2               @OPCODE_596:   ; [c64_ir] AltPop
001467r 2  E8               inx
001468r 2  E8               inx
001469r 2  68               pla
00146Ar 2  95 00            sta $00,x
00146Cr 2  68               pla
00146Dr 2  95 01            sta $01,x
00146Fr 2               
00146Fr 2               ; src/prelude.fth:33:18 in `loopimpl`
00146Fr 2               @OPCODE_597:   ; [c64_ir] AltPop
00146Fr 2  E8               inx
001470r 2  E8               inx
001471r 2  68               pla
001472r 2  95 00            sta $00,x
001474r 2  68               pla
001475r 2  95 01            sta $01,x
001477r 2               
001477r 2               ; src/prelude.fth:18:8 in `1+`
001477r 2               @OPCODE_598:   ; [c64_ir] PushLiteral(1)
001477r 2  E8               inx
001478r 2  E8               inx
001479r 2  A9 01            lda #1
00147Br 2  95 00            sta $00,x
00147Dr 2  A9 00            lda #0
00147Fr 2  95 01            sta $01,x
001481r 2               
001481r 2               ; src/prelude.fth:18:10 in `1+`
001481r 2               @OPCODE_599:   ; [c64_ir] Add
001481r 2                   ; 21
001481r 2  CA               dex
001482r 2  CA               dex
001483r 2  18               clc
001484r 2  B5 00            lda $00,x
001486r 2  75 02            adc $02,x
001488r 2  95 00            sta $00,x
00148Ar 2  B5 01            lda $01,x
00148Cr 2  75 03            adc $03,x
00148Er 2  95 01            sta $01,x
001490r 2               
001490r 2               ; src/prelude.fth:4:10 in `over`
001490r 2               @OPCODE_600:   ; [c64_ir] AltPush
001490r 2  CA               dex
001491r 2  CA               dex
001492r 2  B5 03            lda $03,x
001494r 2  48               pha
001495r 2  B5 02            lda $02,x
001497r 2  48               pha
001498r 2               
001498r 2               ; src/prelude.fth:4:13 in `over`
001498r 2               @OPCODE_601:   ; [c64_ir] TempStore
001498r 2  CA               dex
001499r 2  CA               dex
00149Ar 2  B5 03            lda $03,x
00149Cr 2  85 96            sta TEMP_PAX2
00149Er 2  B5 02            lda $02,x
0014A0r 2  85 95            sta TEMP_PAX1
0014A2r 2               
0014A2r 2               ; src/prelude.fth:4:19 in `over`
0014A2r 2               @OPCODE_602:   ; [c64_ir] TempLoad
0014A2r 2  E8               inx
0014A3r 2  E8               inx
0014A4r 2  A5 95            lda TEMP_PAX1
0014A6r 2  95 00            sta $00,x
0014A8r 2  A5 96            lda TEMP_PAX2
0014AAr 2  95 01            sta $01,x
0014ACr 2               
0014ACr 2               ; src/prelude.fth:4:25 in `over`
0014ACr 2               @OPCODE_603:   ; [c64_ir] AltPop
0014ACr 2  E8               inx
0014ADr 2  E8               inx
0014AEr 2  68               pla
0014AFr 2  95 00            sta $00,x
0014B1r 2  68               pla
0014B2r 2  95 01            sta $01,x
0014B4r 2               
0014B4r 2               ; src/prelude.fth:4:28 in `over`
0014B4r 2               @OPCODE_604:   ; [c64_ir] TempLoad
0014B4r 2  E8               inx
0014B5r 2  E8               inx
0014B6r 2  A5 95            lda TEMP_PAX1
0014B8r 2  95 00            sta $00,x
0014BAr 2  A5 96            lda TEMP_PAX2
0014BCr 2  95 01            sta $01,x
0014BEr 2               
0014BEr 2               ; src/prelude.fth:4:10 in `over`
0014BEr 2               @OPCODE_605:   ; [c64_ir] AltPush
0014BEr 2  CA               dex
0014BFr 2  CA               dex
0014C0r 2  B5 03            lda $03,x
0014C2r 2  48               pha
0014C3r 2  B5 02            lda $02,x
0014C5r 2  48               pha
0014C6r 2               
0014C6r 2               ; src/prelude.fth:4:13 in `over`
0014C6r 2               @OPCODE_606:   ; [c64_ir] TempStore
0014C6r 2  CA               dex
0014C7r 2  CA               dex
0014C8r 2  B5 03            lda $03,x
0014CAr 2  85 96            sta TEMP_PAX2
0014CCr 2  B5 02            lda $02,x
0014CEr 2  85 95            sta TEMP_PAX1
0014D0r 2               
0014D0r 2               ; src/prelude.fth:4:19 in `over`
0014D0r 2               @OPCODE_607:   ; [c64_ir] TempLoad
0014D0r 2  E8               inx
0014D1r 2  E8               inx
0014D2r 2  A5 95            lda TEMP_PAX1
0014D4r 2  95 00            sta $00,x
0014D6r 2  A5 96            lda TEMP_PAX2
0014D8r 2  95 01            sta $01,x
0014DAr 2               
0014DAr 2               ; src/prelude.fth:4:25 in `over`
0014DAr 2               @OPCODE_608:   ; [c64_ir] AltPop
0014DAr 2  E8               inx
0014DBr 2  E8               inx
0014DCr 2  68               pla
0014DDr 2  95 00            sta $00,x
0014DFr 2  68               pla
0014E0r 2  95 01            sta $01,x
0014E2r 2               
0014E2r 2               ; src/prelude.fth:4:28 in `over`
0014E2r 2               @OPCODE_609:   ; [c64_ir] TempLoad
0014E2r 2  E8               inx
0014E3r 2  E8               inx
0014E4r 2  A5 95            lda TEMP_PAX1
0014E6r 2  95 00            sta $00,x
0014E8r 2  A5 96            lda TEMP_PAX2
0014EAr 2  95 01            sta $01,x
0014ECr 2               
0014ECr 2               ; src/prelude.fth:33:29 in `loopimpl`
0014ECr 2               @OPCODE_610:   ; [c64_ir] AltPush
0014ECr 2  CA               dex
0014EDr 2  CA               dex
0014EEr 2  B5 03            lda $03,x
0014F0r 2  48               pha
0014F1r 2  B5 02            lda $02,x
0014F3r 2  48               pha
0014F4r 2               
0014F4r 2               ; src/prelude.fth:33:32 in `loopimpl`
0014F4r 2               @OPCODE_611:   ; [c64_ir] AltPush
0014F4r 2  CA               dex
0014F5r 2  CA               dex
0014F6r 2  B5 03            lda $03,x
0014F8r 2  48               pha
0014F9r 2  B5 02            lda $02,x
0014FBr 2  48               pha
0014FCr 2               
0014FCr 2               ; src/prelude.fth:14:12 in `invert`
0014FCr 2               @OPCODE_612:   ; [c64_ir] PushLiteral(-1)
0014FCr 2  E8               inx
0014FDr 2  E8               inx
0014FEr 2  A9 FF            lda #255
001500r 2  95 00            sta $00,x
001502r 2  A9 FF            lda #255
001504r 2  95 01            sta $01,x
001506r 2               
001506r 2               ; src/prelude.fth:14:15 in `invert`
001506r 2               @OPCODE_613:   ; [c64_ir] Nand
001506r 2                   ; 26
001506r 2  CA               dex
001507r 2  CA               dex
001508r 2  B5 00            lda $00,x
00150Ar 2  35 02            and $02,x
00150Cr 2  49 FF            eor #$ff
00150Er 2  95 00            sta $00,x
001510r 2  B5 01            lda $01,x
001512r 2  35 03            and $03,x
001514r 2  49 FF            eor #$ff
001516r 2  95 01            sta $01,x
001518r 2               
001518r 2               ; src/prelude.fth:15:19 in `negate`
001518r 2               @OPCODE_614:   ; [c64_ir] PushLiteral(1)
001518r 2  E8               inx
001519r 2  E8               inx
00151Ar 2  A9 01            lda #1
00151Cr 2  95 00            sta $00,x
00151Er 2  A9 00            lda #0
001520r 2  95 01            sta $01,x
001522r 2               
001522r 2               ; src/prelude.fth:15:21 in `negate`
001522r 2               @OPCODE_615:   ; [c64_ir] Add
001522r 2                   ; 21
001522r 2  CA               dex
001523r 2  CA               dex
001524r 2  18               clc
001525r 2  B5 00            lda $00,x
001527r 2  75 02            adc $02,x
001529r 2  95 00            sta $00,x
00152Br 2  B5 01            lda $01,x
00152Dr 2  75 03            adc $03,x
00152Fr 2  95 01            sta $01,x
001531r 2               
001531r 2               ; src/prelude.fth:16:19 in `-`
001531r 2               @OPCODE_616:   ; [c64_ir] Add
001531r 2                   ; 21
001531r 2  CA               dex
001532r 2  CA               dex
001533r 2  18               clc
001534r 2  B5 00            lda $00,x
001536r 2  75 02            adc $02,x
001538r 2  95 00            sta $00,x
00153Ar 2  B5 01            lda $01,x
00153Cr 2  75 03            adc $03,x
00153Er 2  95 01            sta $01,x
001540r 2               
001540r 2               ; src/prelude.fth:21:8 in `0=`
001540r 2               @OPCODE_617:   ; [c64_ir] JumpIf0(48)
001540r 2  CA               dex
001541r 2  CA               dex
001542r 2  B5 02            lda $02,x
001544r 2  15 03            ora $03,x
001546r 2  D0 03            bne *+5
001548r 2  4C rr rr         jmp @target_48
00154Br 2               
00154Br 2               @target_47:
00154Br 2               
00154Br 2               ; src/prelude.fth:21:11 in `0=`
00154Br 2               @OPCODE_619:   ; [c64_ir] PushLiteral(0)
00154Br 2  E8               inx
00154Cr 2  E8               inx
00154Dr 2  A9 00            lda #0
00154Fr 2  95 00            sta $00,x
001551r 2  A9 00            lda #0
001553r 2  95 01            sta $01,x
001555r 2               
001555r 2               ; src/prelude.fth:21:13 in `0=`
001555r 2               @OPCODE_620:   ; [c64_ir] JumpElse(49)
001555r 2  4C rr rr         jmp @target_49
001558r 2               
001558r 2               @target_48:
001558r 2               
001558r 2               ; src/prelude.fth:21:18 in `0=`
001558r 2               @OPCODE_622:   ; [c64_ir] PushLiteral(-1)
001558r 2  E8               inx
001559r 2  E8               inx
00155Ar 2  A9 FF            lda #255
00155Cr 2  95 00            sta $00,x
00155Er 2  A9 FF            lda #255
001560r 2  95 01            sta $01,x
001562r 2               
001562r 2               ; src/prelude.fth:21:21 in `0=`
001562r 2               @OPCODE_623:   ; [c64_ir] JumpTarget(48)
001562r 2               
001562r 2               @target_49:
001562r 2               
001562r 2               ; src/prelude.fth:3:10 in `swap`
001562r 2               @OPCODE_625:   ; [c64_ir] AltPush
001562r 2  CA               dex
001563r 2  CA               dex
001564r 2  B5 03            lda $03,x
001566r 2  48               pha
001567r 2  B5 02            lda $02,x
001569r 2  48               pha
00156Ar 2               
00156Ar 2               ; src/prelude.fth:3:19 in `swap`
00156Ar 2               @OPCODE_626:   ; [c64_ir] AltPop
00156Ar 2  E8               inx
00156Br 2  E8               inx
00156Cr 2  68               pla
00156Dr 2  95 00            sta $00,x
00156Fr 2  68               pla
001570r 2  95 01            sta $01,x
001572r 2               
001572r 2               ; src/prelude.fth:44:25 in `*`
001572r 2               @OPCODE_627:   ; [c64_ir] LoopIf0(46)
001572r 2  CA               dex
001573r 2  CA               dex
001574r 2  B5 02            lda $02,x
001576r 2  15 03            ora $03,x
001578r 2  D0 03            bne *+5
00157Ar 2  4C rr rr         jmp @target_46
00157Dr 2               
00157Dr 2               @target_50:
00157Dr 2               
00157Dr 2               ; src/prelude.fth:44:25 in `*`
00157Dr 2               @OPCODE_629:   ; [c64_ir] AltPop
00157Dr 2  E8               inx
00157Er 2  E8               inx
00157Fr 2  68               pla
001580r 2  95 00            sta $00,x
001582r 2  68               pla
001583r 2  95 01            sta $01,x
001585r 2               
001585r 2               ; src/prelude.fth:44:25 in `*`
001585r 2               @OPCODE_630:   ; [c64_ir] Drop
001585r 2  CA               dex
001586r 2  CA               dex
001587r 2               
001587r 2               ; src/prelude.fth:44:25 in `*`
001587r 2               @OPCODE_631:   ; [c64_ir] AltPop
001587r 2  E8               inx
001588r 2  E8               inx
001589r 2  68               pla
00158Ar 2  95 00            sta $00,x
00158Cr 2  68               pla
00158Dr 2  95 01            sta $01,x
00158Fr 2               
00158Fr 2               ; src/prelude.fth:44:25 in `*`
00158Fr 2               @OPCODE_632:   ; [c64_ir] Drop
00158Fr 2  CA               dex
001590r 2  CA               dex
001591r 2               
001591r 2               ; src/prelude.fth:3:10 in `swap`
001591r 2               @OPCODE_633:   ; [c64_ir] AltPush
001591r 2  CA               dex
001592r 2  CA               dex
001593r 2  B5 03            lda $03,x
001595r 2  48               pha
001596r 2  B5 02            lda $02,x
001598r 2  48               pha
001599r 2               
001599r 2               ; src/prelude.fth:3:13 in `swap`
001599r 2               @OPCODE_634:   ; [c64_ir] TempStore
001599r 2  CA               dex
00159Ar 2  CA               dex
00159Br 2  B5 03            lda $03,x
00159Dr 2  85 96            sta TEMP_PAX2
00159Fr 2  B5 02            lda $02,x
0015A1r 2  85 95            sta TEMP_PAX1
0015A3r 2               
0015A3r 2               ; src/prelude.fth:3:19 in `swap`
0015A3r 2               @OPCODE_635:   ; [c64_ir] AltPop
0015A3r 2  E8               inx
0015A4r 2  E8               inx
0015A5r 2  68               pla
0015A6r 2  95 00            sta $00,x
0015A8r 2  68               pla
0015A9r 2  95 01            sta $01,x
0015ABr 2               
0015ABr 2               ; <inline>:0:0 in `main`
0015ABr 2               @OPCODE_636:   ; [c64_ir] AltPop
0015ABr 2  E8               inx
0015ACr 2  E8               inx
0015ADr 2  68               pla
0015AEr 2  95 00            sta $00,x
0015B0r 2  68               pla
0015B1r 2  95 01            sta $01,x
0015B3r 2               
0015B3r 2               ; <inline>:0:0 in `main`
0015B3r 2               @OPCODE_637:   ; [c64_ir] Drop
0015B3r 2  CA               dex
0015B4r 2  CA               dex
0015B5r 2               
0015B5r 2               ; snake.pax:48:39 in `convert-x-y`
0015B5r 2               @OPCODE_638:   ; [c64_ir] Add
0015B5r 2                   ; 21
0015B5r 2  CA               dex
0015B6r 2  CA               dex
0015B7r 2  18               clc
0015B8r 2  B5 00            lda $00,x
0015BAr 2  75 02            adc $02,x
0015BCr 2  95 00            sta $00,x
0015BEr 2  B5 01            lda $01,x
0015C0r 2  75 03            adc $03,x
0015C2r 2  95 01            sta $01,x
0015C4r 2               
0015C4r 2               ; <inline>:0:0 in `main`
0015C4r 2               @OPCODE_639:   ; [c64_ir] AltPop
0015C4r 2  E8               inx
0015C5r 2  E8               inx
0015C6r 2  68               pla
0015C7r 2  95 00            sta $00,x
0015C9r 2  68               pla
0015CAr 2  95 01            sta $01,x
0015CCr 2               
0015CCr 2               ; <inline>:0:0 in `main`
0015CCr 2               @OPCODE_640:   ; [c64_ir] Drop
0015CCr 2  CA               dex
0015CDr 2  CA               dex
0015CEr 2               
0015CEr 2               ; snake.pax:49:34 in `draw-index`
0015CEr 2               @OPCODE_641:   ; [c64_ir] PushLiteral(1024)
0015CEr 2  E8               inx
0015CFr 2  E8               inx
0015D0r 2  A9 00            lda #0
0015D2r 2  95 00            sta $00,x
0015D4r 2  A9 04            lda #4
0015D6r 2  95 01            sta $01,x
0015D8r 2               
0015D8r 2               ; snake.pax:49:43 in `draw-index`
0015D8r 2               @OPCODE_642:   ; [c64_ir] Add
0015D8r 2                   ; 21
0015D8r 2  CA               dex
0015D9r 2  CA               dex
0015DAr 2  18               clc
0015DBr 2  B5 00            lda $00,x
0015DDr 2  75 02            adc $02,x
0015DFr 2  95 00            sta $00,x
0015E1r 2  B5 01            lda $01,x
0015E3r 2  75 03            adc $03,x
0015E5r 2  95 01            sta $01,x
0015E7r 2               
0015E7r 2               ; snake.pax:49:45 in `draw-index`
0015E7r 2               @OPCODE_643:   ; [c64_ir] Store8
0015E7r 2  CA               dex
0015E8r 2  CA               dex
0015E9r 2  CA               dex
0015EAr 2  CA               dex
0015EBr 2  B5 02            lda $02,x
0015EDr 2  81 04            sta ($04,x)
0015EFr 2                   ; TODO high byte
0015EFr 2               
0015EFr 2               ; <inline>:0:0 in `main`
0015EFr 2               @OPCODE_644:   ; [c64_ir] AltPop
0015EFr 2  E8               inx
0015F0r 2  E8               inx
0015F1r 2  68               pla
0015F2r 2  95 00            sta $00,x
0015F4r 2  68               pla
0015F5r 2  95 01            sta $01,x
0015F7r 2               
0015F7r 2               ; <inline>:0:0 in `main`
0015F7r 2               @OPCODE_645:   ; [c64_ir] Drop
0015F7r 2  CA               dex
0015F8r 2  CA               dex
0015F9r 2               
0015F9r 2               ; <inline>:0:0 in `main`
0015F9r 2               @OPCODE_646:   ; [c64_ir] AltPop
0015F9r 2  E8               inx
0015FAr 2  E8               inx
0015FBr 2  68               pla
0015FCr 2  95 00            sta $00,x
0015FEr 2  68               pla
0015FFr 2  95 01            sta $01,x
001601r 2               
001601r 2               ; <inline>:0:0 in `main`
001601r 2               @OPCODE_647:   ; [c64_ir] Drop
001601r 2  CA               dex
001602r 2  CA               dex
001603r 2               
001603r 2               ; src/prelude.fth:33:15 in `loopimpl`
001603r 2               @OPCODE_648:   ; [c64_ir] AltPop
001603r 2  E8               inx
001604r 2  E8               inx
001605r 2  68               pla
001606r 2  95 00            sta $00,x
001608r 2  68               pla
001609r 2  95 01            sta $01,x
00160Br 2               
00160Br 2               ; src/prelude.fth:33:18 in `loopimpl`
00160Br 2               @OPCODE_649:   ; [c64_ir] AltPop
00160Br 2  E8               inx
00160Cr 2  E8               inx
00160Dr 2  68               pla
00160Er 2  95 00            sta $00,x
001610r 2  68               pla
001611r 2  95 01            sta $01,x
001613r 2               
001613r 2               ; src/prelude.fth:18:8 in `1+`
001613r 2               @OPCODE_650:   ; [c64_ir] PushLiteral(1)
001613r 2  E8               inx
001614r 2  E8               inx
001615r 2  A9 01            lda #1
001617r 2  95 00            sta $00,x
001619r 2  A9 00            lda #0
00161Br 2  95 01            sta $01,x
00161Dr 2               
00161Dr 2               ; src/prelude.fth:18:10 in `1+`
00161Dr 2               @OPCODE_651:   ; [c64_ir] Add
00161Dr 2                   ; 21
00161Dr 2  CA               dex
00161Er 2  CA               dex
00161Fr 2  18               clc
001620r 2  B5 00            lda $00,x
001622r 2  75 02            adc $02,x
001624r 2  95 00            sta $00,x
001626r 2  B5 01            lda $01,x
001628r 2  75 03            adc $03,x
00162Ar 2  95 01            sta $01,x
00162Cr 2               
00162Cr 2               ; src/prelude.fth:4:10 in `over`
00162Cr 2               @OPCODE_652:   ; [c64_ir] AltPush
00162Cr 2  CA               dex
00162Dr 2  CA               dex
00162Er 2  B5 03            lda $03,x
001630r 2  48               pha
001631r 2  B5 02            lda $02,x
001633r 2  48               pha
001634r 2               
001634r 2               ; src/prelude.fth:4:13 in `over`
001634r 2               @OPCODE_653:   ; [c64_ir] TempStore
001634r 2  CA               dex
001635r 2  CA               dex
001636r 2  B5 03            lda $03,x
001638r 2  85 96            sta TEMP_PAX2
00163Ar 2  B5 02            lda $02,x
00163Cr 2  85 95            sta TEMP_PAX1
00163Er 2               
00163Er 2               ; src/prelude.fth:4:19 in `over`
00163Er 2               @OPCODE_654:   ; [c64_ir] TempLoad
00163Er 2  E8               inx
00163Fr 2  E8               inx
001640r 2  A5 95            lda TEMP_PAX1
001642r 2  95 00            sta $00,x
001644r 2  A5 96            lda TEMP_PAX2
001646r 2  95 01            sta $01,x
001648r 2               
001648r 2               ; src/prelude.fth:4:25 in `over`
001648r 2               @OPCODE_655:   ; [c64_ir] AltPop
001648r 2  E8               inx
001649r 2  E8               inx
00164Ar 2  68               pla
00164Br 2  95 00            sta $00,x
00164Dr 2  68               pla
00164Er 2  95 01            sta $01,x
001650r 2               
001650r 2               ; src/prelude.fth:4:28 in `over`
001650r 2               @OPCODE_656:   ; [c64_ir] TempLoad
001650r 2  E8               inx
001651r 2  E8               inx
001652r 2  A5 95            lda TEMP_PAX1
001654r 2  95 00            sta $00,x
001656r 2  A5 96            lda TEMP_PAX2
001658r 2  95 01            sta $01,x
00165Ar 2               
00165Ar 2               ; src/prelude.fth:4:10 in `over`
00165Ar 2               @OPCODE_657:   ; [c64_ir] AltPush
00165Ar 2  CA               dex
00165Br 2  CA               dex
00165Cr 2  B5 03            lda $03,x
00165Er 2  48               pha
00165Fr 2  B5 02            lda $02,x
001661r 2  48               pha
001662r 2               
001662r 2               ; src/prelude.fth:4:13 in `over`
001662r 2               @OPCODE_658:   ; [c64_ir] TempStore
001662r 2  CA               dex
001663r 2  CA               dex
001664r 2  B5 03            lda $03,x
001666r 2  85 96            sta TEMP_PAX2
001668r 2  B5 02            lda $02,x
00166Ar 2  85 95            sta TEMP_PAX1
00166Cr 2               
00166Cr 2               ; src/prelude.fth:4:19 in `over`
00166Cr 2               @OPCODE_659:   ; [c64_ir] TempLoad
00166Cr 2  E8               inx
00166Dr 2  E8               inx
00166Er 2  A5 95            lda TEMP_PAX1
001670r 2  95 00            sta $00,x
001672r 2  A5 96            lda TEMP_PAX2
001674r 2  95 01            sta $01,x
001676r 2               
001676r 2               ; src/prelude.fth:4:25 in `over`
001676r 2               @OPCODE_660:   ; [c64_ir] AltPop
001676r 2  E8               inx
001677r 2  E8               inx
001678r 2  68               pla
001679r 2  95 00            sta $00,x
00167Br 2  68               pla
00167Cr 2  95 01            sta $01,x
00167Er 2               
00167Er 2               ; src/prelude.fth:4:28 in `over`
00167Er 2               @OPCODE_661:   ; [c64_ir] TempLoad
00167Er 2  E8               inx
00167Fr 2  E8               inx
001680r 2  A5 95            lda TEMP_PAX1
001682r 2  95 00            sta $00,x
001684r 2  A5 96            lda TEMP_PAX2
001686r 2  95 01            sta $01,x
001688r 2               
001688r 2               ; src/prelude.fth:33:29 in `loopimpl`
001688r 2               @OPCODE_662:   ; [c64_ir] AltPush
001688r 2  CA               dex
001689r 2  CA               dex
00168Ar 2  B5 03            lda $03,x
00168Cr 2  48               pha
00168Dr 2  B5 02            lda $02,x
00168Fr 2  48               pha
001690r 2               
001690r 2               ; src/prelude.fth:33:32 in `loopimpl`
001690r 2               @OPCODE_663:   ; [c64_ir] AltPush
001690r 2  CA               dex
001691r 2  CA               dex
001692r 2  B5 03            lda $03,x
001694r 2  48               pha
001695r 2  B5 02            lda $02,x
001697r 2  48               pha
001698r 2               
001698r 2               ; src/prelude.fth:14:12 in `invert`
001698r 2               @OPCODE_664:   ; [c64_ir] PushLiteral(-1)
001698r 2  E8               inx
001699r 2  E8               inx
00169Ar 2  A9 FF            lda #255
00169Cr 2  95 00            sta $00,x
00169Er 2  A9 FF            lda #255
0016A0r 2  95 01            sta $01,x
0016A2r 2               
0016A2r 2               ; src/prelude.fth:14:15 in `invert`
0016A2r 2               @OPCODE_665:   ; [c64_ir] Nand
0016A2r 2                   ; 26
0016A2r 2  CA               dex
0016A3r 2  CA               dex
0016A4r 2  B5 00            lda $00,x
0016A6r 2  35 02            and $02,x
0016A8r 2  49 FF            eor #$ff
0016AAr 2  95 00            sta $00,x
0016ACr 2  B5 01            lda $01,x
0016AEr 2  35 03            and $03,x
0016B0r 2  49 FF            eor #$ff
0016B2r 2  95 01            sta $01,x
0016B4r 2               
0016B4r 2               ; src/prelude.fth:15:19 in `negate`
0016B4r 2               @OPCODE_666:   ; [c64_ir] PushLiteral(1)
0016B4r 2  E8               inx
0016B5r 2  E8               inx
0016B6r 2  A9 01            lda #1
0016B8r 2  95 00            sta $00,x
0016BAr 2  A9 00            lda #0
0016BCr 2  95 01            sta $01,x
0016BEr 2               
0016BEr 2               ; src/prelude.fth:15:21 in `negate`
0016BEr 2               @OPCODE_667:   ; [c64_ir] Add
0016BEr 2                   ; 21
0016BEr 2  CA               dex
0016BFr 2  CA               dex
0016C0r 2  18               clc
0016C1r 2  B5 00            lda $00,x
0016C3r 2  75 02            adc $02,x
0016C5r 2  95 00            sta $00,x
0016C7r 2  B5 01            lda $01,x
0016C9r 2  75 03            adc $03,x
0016CBr 2  95 01            sta $01,x
0016CDr 2               
0016CDr 2               ; src/prelude.fth:16:19 in `-`
0016CDr 2               @OPCODE_668:   ; [c64_ir] Add
0016CDr 2                   ; 21
0016CDr 2  CA               dex
0016CEr 2  CA               dex
0016CFr 2  18               clc
0016D0r 2  B5 00            lda $00,x
0016D2r 2  75 02            adc $02,x
0016D4r 2  95 00            sta $00,x
0016D6r 2  B5 01            lda $01,x
0016D8r 2  75 03            adc $03,x
0016DAr 2  95 01            sta $01,x
0016DCr 2               
0016DCr 2               ; src/prelude.fth:21:8 in `0=`
0016DCr 2               @OPCODE_669:   ; [c64_ir] JumpIf0(52)
0016DCr 2  CA               dex
0016DDr 2  CA               dex
0016DEr 2  B5 02            lda $02,x
0016E0r 2  15 03            ora $03,x
0016E2r 2  D0 03            bne *+5
0016E4r 2  4C rr rr         jmp @target_52
0016E7r 2               
0016E7r 2               @target_51:
0016E7r 2               
0016E7r 2               ; src/prelude.fth:21:11 in `0=`
0016E7r 2               @OPCODE_671:   ; [c64_ir] PushLiteral(0)
0016E7r 2  E8               inx
0016E8r 2  E8               inx
0016E9r 2  A9 00            lda #0
0016EBr 2  95 00            sta $00,x
0016EDr 2  A9 00            lda #0
0016EFr 2  95 01            sta $01,x
0016F1r 2               
0016F1r 2               ; src/prelude.fth:21:13 in `0=`
0016F1r 2               @OPCODE_672:   ; [c64_ir] JumpElse(53)
0016F1r 2  4C rr rr         jmp @target_53
0016F4r 2               
0016F4r 2               @target_52:
0016F4r 2               
0016F4r 2               ; src/prelude.fth:21:18 in `0=`
0016F4r 2               @OPCODE_674:   ; [c64_ir] PushLiteral(-1)
0016F4r 2  E8               inx
0016F5r 2  E8               inx
0016F6r 2  A9 FF            lda #255
0016F8r 2  95 00            sta $00,x
0016FAr 2  A9 FF            lda #255
0016FCr 2  95 01            sta $01,x
0016FEr 2               
0016FEr 2               ; src/prelude.fth:21:21 in `0=`
0016FEr 2               @OPCODE_675:   ; [c64_ir] JumpTarget(52)
0016FEr 2               
0016FEr 2               @target_53:
0016FEr 2               
0016FEr 2               ; src/prelude.fth:3:10 in `swap`
0016FEr 2               @OPCODE_677:   ; [c64_ir] AltPush
0016FEr 2  CA               dex
0016FFr 2  CA               dex
001700r 2  B5 03            lda $03,x
001702r 2  48               pha
001703r 2  B5 02            lda $02,x
001705r 2  48               pha
001706r 2               
001706r 2               ; src/prelude.fth:3:19 in `swap`
001706r 2               @OPCODE_678:   ; [c64_ir] AltPop
001706r 2  E8               inx
001707r 2  E8               inx
001708r 2  68               pla
001709r 2  95 00            sta $00,x
00170Br 2  68               pla
00170Cr 2  95 01            sta $01,x
00170Er 2               
00170Er 2               ; snake.pax:105:3 in `draw-full-snake`
00170Er 2               @OPCODE_679:   ; [c64_ir] LoopIf0(45)
00170Er 2  CA               dex
00170Fr 2  CA               dex
001710r 2  B5 02            lda $02,x
001712r 2  15 03            ora $03,x
001714r 2  D0 03            bne *+5
001716r 2  4C rr rr         jmp @target_45
001719r 2               
001719r 2               @target_54:
001719r 2               
001719r 2               ; snake.pax:105:3 in `draw-full-snake`
001719r 2               @OPCODE_681:   ; [c64_ir] AltPop
001719r 2  E8               inx
00171Ar 2  E8               inx
00171Br 2  68               pla
00171Cr 2  95 00            sta $00,x
00171Er 2  68               pla
00171Fr 2  95 01            sta $01,x
001721r 2               
001721r 2               ; snake.pax:105:3 in `draw-full-snake`
001721r 2               @OPCODE_682:   ; [c64_ir] Drop
001721r 2  CA               dex
001722r 2  CA               dex
001723r 2               
001723r 2               ; snake.pax:105:3 in `draw-full-snake`
001723r 2               @OPCODE_683:   ; [c64_ir] AltPop
001723r 2  E8               inx
001724r 2  E8               inx
001725r 2  68               pla
001726r 2  95 00            sta $00,x
001728r 2  68               pla
001729r 2  95 01            sta $01,x
00172Br 2               
00172Br 2               ; snake.pax:105:3 in `draw-full-snake`
00172Br 2               @OPCODE_684:   ; [c64_ir] Drop
00172Br 2  CA               dex
00172Cr 2  CA               dex
00172Dr 2               
00172Dr 2               ; <inline>:0:0 in `main`
00172Dr 2               @OPCODE_685:   ; [c64_ir] AltPop
00172Dr 2  E8               inx
00172Er 2  E8               inx
00172Fr 2  68               pla
001730r 2  95 00            sta $00,x
001732r 2  68               pla
001733r 2  95 01            sta $01,x
001735r 2               
001735r 2               ; <inline>:0:0 in `main`
001735r 2               @OPCODE_686:   ; [c64_ir] Drop
001735r 2  CA               dex
001736r 2  CA               dex
001737r 2               
001737r 2               ; <inline>:0:0 in `main`
001737r 2               @OPCODE_687:   ; [c64_ir] AltPop
001737r 2  E8               inx
001738r 2  E8               inx
001739r 2  68               pla
00173Ar 2  95 00            sta $00,x
00173Cr 2  68               pla
00173Dr 2  95 01            sta $01,x
00173Fr 2               
00173Fr 2               ; <inline>:0:0 in `main`
00173Fr 2               @OPCODE_688:   ; [c64_ir] Drop
00173Fr 2  CA               dex
001740r 2  CA               dex
001741r 2               
001741r 2               ; snake.pax:205:32 in `main`
001741r 2               @OPCODE_689:   ; [c64_ir] JumpTarget(54)
001741r 2               
001741r 2               @target_55:
001741r 2               
001741r 2               ; snake.pax:206:1 in `main`
001741r 2               @OPCODE_691:   ; [c64_ir] PushLiteral(1)
001741r 2  E8               inx
001742r 2  E8               inx
001743r 2  A9 01            lda #1
001745r 2  95 00            sta $00,x
001747r 2  A9 00            lda #0
001749r 2  95 01            sta $01,x
00174Br 2               
00174Br 2               ; snake.pax:206:3 in `main`
00174Br 2               @OPCODE_692:   ; [c64_ir] PushLiteral(-28672)
00174Br 2  E8               inx
00174Cr 2  E8               inx
00174Dr 2  A9 00            lda #0
00174Fr 2  95 00            sta $00,x
001751r 2  A9 90            lda #144
001753r 2  95 01            sta $01,x
001755r 2               
001755r 2               ; snake.pax:206:15 in `main`
001755r 2               @OPCODE_693:   ; [c64_ir] Store
001755r 2  CA               dex
001756r 2  CA               dex
001757r 2  CA               dex
001758r 2  CA               dex
001759r 2  B5 02            lda $02,x
00175Br 2  81 04            sta ($04,x)
00175Dr 2                   ; TODO high byte
00175Dr 2               
00175Dr 2               ; <inline>:0:0 in `main`
00175Dr 2               @OPCODE_694:   ; [c64_ir] PushLiteral(7777)
00175Dr 2  E8               inx
00175Er 2  E8               inx
00175Fr 2  A9 61            lda #97
001761r 2  95 00            sta $00,x
001763r 2  A9 1E            lda #30
001765r 2  95 01            sta $01,x
001767r 2               
001767r 2               ; <inline>:0:0 in `main`
001767r 2               @OPCODE_695:   ; [c64_ir] AltPush
001767r 2  CA               dex
001768r 2  CA               dex
001769r 2  B5 03            lda $03,x
00176Br 2  48               pha
00176Cr 2  B5 02            lda $02,x
00176Er 2  48               pha
00176Fr 2               
00176Fr 2               ; src/prelude.fth:6:16 in `dup`
00176Fr 2               @OPCODE_696:   ; [c64_ir] PushLiteral(0)
00176Fr 2  E8               inx
001770r 2  E8               inx
001771r 2  A9 00            lda #0
001773r 2  95 00            sta $00,x
001775r 2  A9 00            lda #0
001777r 2  95 01            sta $01,x
001779r 2               
001779r 2               ; src/prelude.fth:6:22 in `dup`
001779r 2               @OPCODE_697:   ; [c64_ir] PushLiteral(0)
001779r 2  E8               inx
00177Ar 2  E8               inx
00177Br 2  A9 00            lda #0
00177Dr 2  95 00            sta $00,x
00177Fr 2  A9 00            lda #0
001781r 2  95 01            sta $01,x
001783r 2               
001783r 2               ; src/prelude.fth:41:13 in `cells`
001783r 2               @OPCODE_698:   ; [c64_ir] Add
001783r 2                   ; 21
001783r 2  CA               dex
001784r 2  CA               dex
001785r 2  18               clc
001786r 2  B5 00            lda $00,x
001788r 2  75 02            adc $02,x
00178Ar 2  95 00            sta $00,x
00178Cr 2  B5 01            lda $01,x
00178Er 2  75 03            adc $03,x
001790r 2  95 01            sta $01,x
001792r 2               
001792r 2               ; snake.pax:42:9 in `snake-x`
001792r 2               @OPCODE_699:   ; [c64_ir] PushLiteral(-28668)
001792r 2  E8               inx
001793r 2  E8               inx
001794r 2  A9 04            lda #4
001796r 2  95 00            sta $00,x
001798r 2  A9 90            lda #144
00179Ar 2  95 01            sta $01,x
00179Cr 2               
00179Cr 2               ; snake.pax:42:22 in `snake-x`
00179Cr 2               @OPCODE_700:   ; [c64_ir] Add
00179Cr 2                   ; 21
00179Cr 2  CA               dex
00179Dr 2  CA               dex
00179Er 2  18               clc
00179Fr 2  B5 00            lda $00,x
0017A1r 2  75 02            adc $02,x
0017A3r 2  95 00            sta $00,x
0017A5r 2  B5 01            lda $01,x
0017A7r 2  75 03            adc $03,x
0017A9r 2  95 01            sta $01,x
0017ABr 2               
0017ABr 2               ; snake.pax:195:13 in `draw-snake-head-tail`
0017ABr 2               @OPCODE_701:   ; [c64_ir] Load
0017ABr 2  A1 00            lda ($00,x)
0017ADr 2  95 00            sta $00,x
0017AFr 2  A9 00            lda #0
0017B1r 2  95 01            sta $01,x
0017B3r 2               
0017B3r 2               ; src/prelude.fth:6:16 in `dup`
0017B3r 2               @OPCODE_702:   ; [c64_ir] PushLiteral(0)
0017B3r 2  E8               inx
0017B4r 2  E8               inx
0017B5r 2  A9 00            lda #0
0017B7r 2  95 00            sta $00,x
0017B9r 2  A9 00            lda #0
0017BBr 2  95 01            sta $01,x
0017BDr 2               
0017BDr 2               ; src/prelude.fth:6:22 in `dup`
0017BDr 2               @OPCODE_703:   ; [c64_ir] PushLiteral(0)
0017BDr 2  E8               inx
0017BEr 2  E8               inx
0017BFr 2  A9 00            lda #0
0017C1r 2  95 00            sta $00,x
0017C3r 2  A9 00            lda #0
0017C5r 2  95 01            sta $01,x
0017C7r 2               
0017C7r 2               ; src/prelude.fth:41:13 in `cells`
0017C7r 2               @OPCODE_704:   ; [c64_ir] Add
0017C7r 2                   ; 21
0017C7r 2  CA               dex
0017C8r 2  CA               dex
0017C9r 2  18               clc
0017CAr 2  B5 00            lda $00,x
0017CCr 2  75 02            adc $02,x
0017CEr 2  95 00            sta $00,x
0017D0r 2  B5 01            lda $01,x
0017D2r 2  75 03            adc $03,x
0017D4r 2  95 01            sta $01,x
0017D6r 2               
0017D6r 2               ; snake.pax:45:9 in `snake-y`
0017D6r 2               @OPCODE_705:   ; [c64_ir] PushLiteral(-27666)
0017D6r 2  E8               inx
0017D7r 2  E8               inx
0017D8r 2  A9 EE            lda #238
0017DAr 2  95 00            sta $00,x
0017DCr 2  A9 93            lda #147
0017DEr 2  95 01            sta $01,x
0017E0r 2               
0017E0r 2               ; snake.pax:45:22 in `snake-y`
0017E0r 2               @OPCODE_706:   ; [c64_ir] Add
0017E0r 2                   ; 21
0017E0r 2  CA               dex
0017E1r 2  CA               dex
0017E2r 2  18               clc
0017E3r 2  B5 00            lda $00,x
0017E5r 2  75 02            adc $02,x
0017E7r 2  95 00            sta $00,x
0017E9r 2  B5 01            lda $01,x
0017EBr 2  75 03            adc $03,x
0017EDr 2  95 01            sta $01,x
0017EFr 2               
0017EFr 2               ; snake.pax:195:25 in `draw-snake-head-tail`
0017EFr 2               @OPCODE_707:   ; [c64_ir] Load
0017EFr 2  A1 00            lda ($00,x)
0017F1r 2  95 00            sta $00,x
0017F3r 2  A9 00            lda #0
0017F5r 2  95 01            sta $01,x
0017F7r 2               
0017F7r 2               ; <inline>:0:0 in `main`
0017F7r 2               @OPCODE_708:   ; [c64_ir] PushLiteral(7777)
0017F7r 2  E8               inx
0017F8r 2  E8               inx
0017F9r 2  A9 61            lda #97
0017FBr 2  95 00            sta $00,x
0017FDr 2  A9 1E            lda #30
0017FFr 2  95 01            sta $01,x
001801r 2               
001801r 2               ; <inline>:0:0 in `main`
001801r 2               @OPCODE_709:   ; [c64_ir] AltPush
001801r 2  CA               dex
001802r 2  CA               dex
001803r 2  B5 03            lda $03,x
001805r 2  48               pha
001806r 2  B5 02            lda $02,x
001808r 2  48               pha
001809r 2               
001809r 2               ; src/prelude.fth:3:10 in `swap`
001809r 2               @OPCODE_710:   ; [c64_ir] AltPush
001809r 2  CA               dex
00180Ar 2  CA               dex
00180Br 2  B5 03            lda $03,x
00180Dr 2  48               pha
00180Er 2  B5 02            lda $02,x
001810r 2  48               pha
001811r 2               
001811r 2               ; src/prelude.fth:3:13 in `swap`
001811r 2               @OPCODE_711:   ; [c64_ir] TempStore
001811r 2  CA               dex
001812r 2  CA               dex
001813r 2  B5 03            lda $03,x
001815r 2  85 96            sta TEMP_PAX2
001817r 2  B5 02            lda $02,x
001819r 2  85 95            sta TEMP_PAX1
00181Br 2               
00181Br 2               ; src/prelude.fth:3:19 in `swap`
00181Br 2               @OPCODE_712:   ; [c64_ir] AltPop
00181Br 2  E8               inx
00181Cr 2  E8               inx
00181Dr 2  68               pla
00181Er 2  95 00            sta $00,x
001820r 2  68               pla
001821r 2  95 01            sta $01,x
001823r 2               
001823r 2               ; src/prelude.fth:3:22 in `swap`
001823r 2               @OPCODE_713:   ; [c64_ir] TempLoad
001823r 2  E8               inx
001824r 2  E8               inx
001825r 2  A5 95            lda TEMP_PAX1
001827r 2  95 00            sta $00,x
001829r 2  A5 96            lda TEMP_PAX2
00182Br 2  95 01            sta $01,x
00182Dr 2               
00182Dr 2               ; src/prelude.fth:3:13 in `swap`
00182Dr 2               @OPCODE_714:   ; [c64_ir] TempStore
00182Dr 2  CA               dex
00182Er 2  CA               dex
00182Fr 2  B5 03            lda $03,x
001831r 2  85 96            sta TEMP_PAX2
001833r 2  B5 02            lda $02,x
001835r 2  85 95            sta TEMP_PAX1
001837r 2               
001837r 2               ; src/prelude.fth:3:22 in `swap`
001837r 2               @OPCODE_715:   ; [c64_ir] TempLoad
001837r 2  E8               inx
001838r 2  E8               inx
001839r 2  A5 95            lda TEMP_PAX1
00183Br 2  95 00            sta $00,x
00183Dr 2  A5 96            lda TEMP_PAX2
00183Fr 2  95 01            sta $01,x
001841r 2               
001841r 2               ; src/prelude.fth:5:10 in `rot`
001841r 2               @OPCODE_716:   ; [c64_ir] AltPush
001841r 2  CA               dex
001842r 2  CA               dex
001843r 2  B5 03            lda $03,x
001845r 2  48               pha
001846r 2  B5 02            lda $02,x
001848r 2  48               pha
001849r 2               
001849r 2               ; src/prelude.fth:3:13 in `swap`
001849r 2               @OPCODE_717:   ; [c64_ir] TempStore
001849r 2  CA               dex
00184Ar 2  CA               dex
00184Br 2  B5 03            lda $03,x
00184Dr 2  85 96            sta TEMP_PAX2
00184Fr 2  B5 02            lda $02,x
001851r 2  85 95            sta TEMP_PAX1
001853r 2               
001853r 2               ; src/prelude.fth:3:19 in `swap`
001853r 2               @OPCODE_718:   ; [c64_ir] PushLiteral(232)
001853r 2  E8               inx
001854r 2  E8               inx
001855r 2  A9 E8            lda #232
001857r 2  95 00            sta $00,x
001859r 2  A9 00            lda #0
00185Br 2  95 01            sta $01,x
00185Dr 2               
00185Dr 2               ; src/prelude.fth:3:22 in `swap`
00185Dr 2               @OPCODE_719:   ; [c64_ir] TempLoad
00185Dr 2  E8               inx
00185Er 2  E8               inx
00185Fr 2  A5 95            lda TEMP_PAX1
001861r 2  95 00            sta $00,x
001863r 2  A5 96            lda TEMP_PAX2
001865r 2  95 01            sta $01,x
001867r 2               
001867r 2               ; src/prelude.fth:5:18 in `rot`
001867r 2               @OPCODE_720:   ; [c64_ir] AltPop
001867r 2  E8               inx
001868r 2  E8               inx
001869r 2  68               pla
00186Ar 2  95 00            sta $00,x
00186Cr 2  68               pla
00186Dr 2  95 01            sta $01,x
00186Fr 2               
00186Fr 2               ; src/prelude.fth:3:10 in `swap`
00186Fr 2               @OPCODE_721:   ; [c64_ir] AltPush
00186Fr 2  CA               dex
001870r 2  CA               dex
001871r 2  B5 03            lda $03,x
001873r 2  48               pha
001874r 2  B5 02            lda $02,x
001876r 2  48               pha
001877r 2               
001877r 2               ; src/prelude.fth:3:13 in `swap`
001877r 2               @OPCODE_722:   ; [c64_ir] TempStore
001877r 2  CA               dex
001878r 2  CA               dex
001879r 2  B5 03            lda $03,x
00187Br 2  85 96            sta TEMP_PAX2
00187Dr 2  B5 02            lda $02,x
00187Fr 2  85 95            sta TEMP_PAX1
001881r 2               
001881r 2               ; src/prelude.fth:3:19 in `swap`
001881r 2               @OPCODE_723:   ; [c64_ir] AltPop
001881r 2  E8               inx
001882r 2  E8               inx
001883r 2  68               pla
001884r 2  95 00            sta $00,x
001886r 2  68               pla
001887r 2  95 01            sta $01,x
001889r 2               
001889r 2               ; src/prelude.fth:3:22 in `swap`
001889r 2               @OPCODE_724:   ; [c64_ir] TempLoad
001889r 2  E8               inx
00188Ar 2  E8               inx
00188Br 2  A5 95            lda TEMP_PAX1
00188Dr 2  95 00            sta $00,x
00188Fr 2  A5 96            lda TEMP_PAX2
001891r 2  95 01            sta $01,x
001893r 2               
001893r 2               ; <inline>:0:0 in `main`
001893r 2               @OPCODE_725:   ; [c64_ir] PushLiteral(7777)
001893r 2  E8               inx
001894r 2  E8               inx
001895r 2  A9 61            lda #97
001897r 2  95 00            sta $00,x
001899r 2  A9 1E            lda #30
00189Br 2  95 01            sta $01,x
00189Dr 2               
00189Dr 2               ; <inline>:0:0 in `main`
00189Dr 2               @OPCODE_726:   ; [c64_ir] AltPush
00189Dr 2  CA               dex
00189Er 2  CA               dex
00189Fr 2  B5 03            lda $03,x
0018A1r 2  48               pha
0018A2r 2  B5 02            lda $02,x
0018A4r 2  48               pha
0018A5r 2               
0018A5r 2               ; <inline>:0:0 in `main`
0018A5r 2               @OPCODE_727:   ; [c64_ir] PushLiteral(7777)
0018A5r 2  E8               inx
0018A6r 2  E8               inx
0018A7r 2  A9 61            lda #97
0018A9r 2  95 00            sta $00,x
0018ABr 2  A9 1E            lda #30
0018ADr 2  95 01            sta $01,x
0018AFr 2               
0018AFr 2               ; <inline>:0:0 in `main`
0018AFr 2               @OPCODE_728:   ; [c64_ir] AltPush
0018AFr 2  CA               dex
0018B0r 2  CA               dex
0018B1r 2  B5 03            lda $03,x
0018B3r 2  48               pha
0018B4r 2  B5 02            lda $02,x
0018B6r 2  48               pha
0018B7r 2               
0018B7r 2               ; <inline>:0:0 in `main`
0018B7r 2               @OPCODE_729:   ; [c64_ir] PushLiteral(7777)
0018B7r 2  E8               inx
0018B8r 2  E8               inx
0018B9r 2  A9 61            lda #97
0018BBr 2  95 00            sta $00,x
0018BDr 2  A9 1E            lda #30
0018BFr 2  95 01            sta $01,x
0018C1r 2               
0018C1r 2               ; <inline>:0:0 in `main`
0018C1r 2               @OPCODE_730:   ; [c64_ir] AltPush
0018C1r 2  CA               dex
0018C2r 2  CA               dex
0018C3r 2  B5 03            lda $03,x
0018C5r 2  48               pha
0018C6r 2  B5 02            lda $02,x
0018C8r 2  48               pha
0018C9r 2               
0018C9r 2               ; src/prelude.fth:44:8 in `*`
0018C9r 2               @OPCODE_731:   ; [c64_ir] PushLiteral(0)
0018C9r 2  E8               inx
0018CAr 2  E8               inx
0018CBr 2  A9 00            lda #0
0018CDr 2  95 00            sta $00,x
0018CFr 2  A9 00            lda #0
0018D1r 2  95 01            sta $01,x
0018D3r 2               
0018D3r 2               ; src/prelude.fth:44:10 in `*`
0018D3r 2               @OPCODE_732:   ; [c64_ir] PushLiteral(40)
0018D3r 2  E8               inx
0018D4r 2  E8               inx
0018D5r 2  A9 28            lda #40
0018D7r 2  95 00            sta $00,x
0018D9r 2  A9 00            lda #0
0018DBr 2  95 01            sta $01,x
0018DDr 2               
0018DDr 2               ; src/prelude.fth:44:13 in `*`
0018DDr 2               @OPCODE_733:   ; [c64_ir] PushLiteral(0)
0018DDr 2  E8               inx
0018DEr 2  E8               inx
0018DFr 2  A9 00            lda #0
0018E1r 2  95 00            sta $00,x
0018E3r 2  A9 00            lda #0
0018E5r 2  95 01            sta $01,x
0018E7r 2               
0018E7r 2               ; src/prelude.fth:44:15 in `*`
0018E7r 2               @OPCODE_734:   ; [c64_ir] AltPush
0018E7r 2  CA               dex
0018E8r 2  CA               dex
0018E9r 2  B5 03            lda $03,x
0018EBr 2  48               pha
0018ECr 2  B5 02            lda $02,x
0018EEr 2  48               pha
0018EFr 2               
0018EFr 2               ; src/prelude.fth:44:15 in `*`
0018EFr 2               @OPCODE_735:   ; [c64_ir] AltPush
0018EFr 2  CA               dex
0018F0r 2  CA               dex
0018F1r 2  B5 03            lda $03,x
0018F3r 2  48               pha
0018F4r 2  B5 02            lda $02,x
0018F6r 2  48               pha
0018F7r 2               
0018F7r 2               ; src/prelude.fth:44:15 in `*`
0018F7r 2               @OPCODE_736:   ; [c64_ir] LoopTarget(55)
0018F7r 2               
0018F7r 2               @target_56:
0018F7r 2               
0018F7r 2               ; src/prelude.fth:4:10 in `over`
0018F7r 2               @OPCODE_738:   ; [c64_ir] AltPush
0018F7r 2  CA               dex
0018F8r 2  CA               dex
0018F9r 2  B5 03            lda $03,x
0018FBr 2  48               pha
0018FCr 2  B5 02            lda $02,x
0018FEr 2  48               pha
0018FFr 2               
0018FFr 2               ; src/prelude.fth:4:13 in `over`
0018FFr 2               @OPCODE_739:   ; [c64_ir] TempStore
0018FFr 2  CA               dex
001900r 2  CA               dex
001901r 2  B5 03            lda $03,x
001903r 2  85 96            sta TEMP_PAX2
001905r 2  B5 02            lda $02,x
001907r 2  85 95            sta TEMP_PAX1
001909r 2               
001909r 2               ; src/prelude.fth:4:19 in `over`
001909r 2               @OPCODE_740:   ; [c64_ir] TempLoad
001909r 2  E8               inx
00190Ar 2  E8               inx
00190Br 2  A5 95            lda TEMP_PAX1
00190Dr 2  95 00            sta $00,x
00190Fr 2  A5 96            lda TEMP_PAX2
001911r 2  95 01            sta $01,x
001913r 2               
001913r 2               ; src/prelude.fth:4:25 in `over`
001913r 2               @OPCODE_741:   ; [c64_ir] AltPop
001913r 2  E8               inx
001914r 2  E8               inx
001915r 2  68               pla
001916r 2  95 00            sta $00,x
001918r 2  68               pla
001919r 2  95 01            sta $01,x
00191Br 2               
00191Br 2               ; src/prelude.fth:4:28 in `over`
00191Br 2               @OPCODE_742:   ; [c64_ir] TempLoad
00191Br 2  E8               inx
00191Cr 2  E8               inx
00191Dr 2  A5 95            lda TEMP_PAX1
00191Fr 2  95 00            sta $00,x
001921r 2  A5 96            lda TEMP_PAX2
001923r 2  95 01            sta $01,x
001925r 2               
001925r 2               ; src/prelude.fth:44:23 in `*`
001925r 2               @OPCODE_743:   ; [c64_ir] Add
001925r 2                   ; 21
001925r 2  CA               dex
001926r 2  CA               dex
001927r 2  18               clc
001928r 2  B5 00            lda $00,x
00192Ar 2  75 02            adc $02,x
00192Cr 2  95 00            sta $00,x
00192Er 2  B5 01            lda $01,x
001930r 2  75 03            adc $03,x
001932r 2  95 01            sta $01,x
001934r 2               
001934r 2               ; src/prelude.fth:33:15 in `loopimpl`
001934r 2               @OPCODE_744:   ; [c64_ir] AltPop
001934r 2  E8               inx
001935r 2  E8               inx
001936r 2  68               pla
001937r 2  95 00            sta $00,x
001939r 2  68               pla
00193Ar 2  95 01            sta $01,x
00193Cr 2               
00193Cr 2               ; src/prelude.fth:33:18 in `loopimpl`
00193Cr 2               @OPCODE_745:   ; [c64_ir] AltPop
00193Cr 2  E8               inx
00193Dr 2  E8               inx
00193Er 2  68               pla
00193Fr 2  95 00            sta $00,x
001941r 2  68               pla
001942r 2  95 01            sta $01,x
001944r 2               
001944r 2               ; src/prelude.fth:18:8 in `1+`
001944r 2               @OPCODE_746:   ; [c64_ir] PushLiteral(1)
001944r 2  E8               inx
001945r 2  E8               inx
001946r 2  A9 01            lda #1
001948r 2  95 00            sta $00,x
00194Ar 2  A9 00            lda #0
00194Cr 2  95 01            sta $01,x
00194Er 2               
00194Er 2               ; src/prelude.fth:18:10 in `1+`
00194Er 2               @OPCODE_747:   ; [c64_ir] Add
00194Er 2                   ; 21
00194Er 2  CA               dex
00194Fr 2  CA               dex
001950r 2  18               clc
001951r 2  B5 00            lda $00,x
001953r 2  75 02            adc $02,x
001955r 2  95 00            sta $00,x
001957r 2  B5 01            lda $01,x
001959r 2  75 03            adc $03,x
00195Br 2  95 01            sta $01,x
00195Dr 2               
00195Dr 2               ; src/prelude.fth:4:10 in `over`
00195Dr 2               @OPCODE_748:   ; [c64_ir] AltPush
00195Dr 2  CA               dex
00195Er 2  CA               dex
00195Fr 2  B5 03            lda $03,x
001961r 2  48               pha
001962r 2  B5 02            lda $02,x
001964r 2  48               pha
001965r 2               
001965r 2               ; src/prelude.fth:4:13 in `over`
001965r 2               @OPCODE_749:   ; [c64_ir] TempStore
001965r 2  CA               dex
001966r 2  CA               dex
001967r 2  B5 03            lda $03,x
001969r 2  85 96            sta TEMP_PAX2
00196Br 2  B5 02            lda $02,x
00196Dr 2  85 95            sta TEMP_PAX1
00196Fr 2               
00196Fr 2               ; src/prelude.fth:4:19 in `over`
00196Fr 2               @OPCODE_750:   ; [c64_ir] TempLoad
00196Fr 2  E8               inx
001970r 2  E8               inx
001971r 2  A5 95            lda TEMP_PAX1
001973r 2  95 00            sta $00,x
001975r 2  A5 96            lda TEMP_PAX2
001977r 2  95 01            sta $01,x
001979r 2               
001979r 2               ; src/prelude.fth:4:25 in `over`
001979r 2               @OPCODE_751:   ; [c64_ir] AltPop
001979r 2  E8               inx
00197Ar 2  E8               inx
00197Br 2  68               pla
00197Cr 2  95 00            sta $00,x
00197Er 2  68               pla
00197Fr 2  95 01            sta $01,x
001981r 2               
001981r 2               ; src/prelude.fth:4:28 in `over`
001981r 2               @OPCODE_752:   ; [c64_ir] TempLoad
001981r 2  E8               inx
001982r 2  E8               inx
001983r 2  A5 95            lda TEMP_PAX1
001985r 2  95 00            sta $00,x
001987r 2  A5 96            lda TEMP_PAX2
001989r 2  95 01            sta $01,x
00198Br 2               
00198Br 2               ; src/prelude.fth:4:10 in `over`
00198Br 2               @OPCODE_753:   ; [c64_ir] AltPush
00198Br 2  CA               dex
00198Cr 2  CA               dex
00198Dr 2  B5 03            lda $03,x
00198Fr 2  48               pha
001990r 2  B5 02            lda $02,x
001992r 2  48               pha
001993r 2               
001993r 2               ; src/prelude.fth:4:13 in `over`
001993r 2               @OPCODE_754:   ; [c64_ir] TempStore
001993r 2  CA               dex
001994r 2  CA               dex
001995r 2  B5 03            lda $03,x
001997r 2  85 96            sta TEMP_PAX2
001999r 2  B5 02            lda $02,x
00199Br 2  85 95            sta TEMP_PAX1
00199Dr 2               
00199Dr 2               ; src/prelude.fth:4:19 in `over`
00199Dr 2               @OPCODE_755:   ; [c64_ir] TempLoad
00199Dr 2  E8               inx
00199Er 2  E8               inx
00199Fr 2  A5 95            lda TEMP_PAX1
0019A1r 2  95 00            sta $00,x
0019A3r 2  A5 96            lda TEMP_PAX2
0019A5r 2  95 01            sta $01,x
0019A7r 2               
0019A7r 2               ; src/prelude.fth:4:25 in `over`
0019A7r 2               @OPCODE_756:   ; [c64_ir] AltPop
0019A7r 2  E8               inx
0019A8r 2  E8               inx
0019A9r 2  68               pla
0019AAr 2  95 00            sta $00,x
0019ACr 2  68               pla
0019ADr 2  95 01            sta $01,x
0019AFr 2               
0019AFr 2               ; src/prelude.fth:4:28 in `over`
0019AFr 2               @OPCODE_757:   ; [c64_ir] TempLoad
0019AFr 2  E8               inx
0019B0r 2  E8               inx
0019B1r 2  A5 95            lda TEMP_PAX1
0019B3r 2  95 00            sta $00,x
0019B5r 2  A5 96            lda TEMP_PAX2
0019B7r 2  95 01            sta $01,x
0019B9r 2               
0019B9r 2               ; src/prelude.fth:33:29 in `loopimpl`
0019B9r 2               @OPCODE_758:   ; [c64_ir] AltPush
0019B9r 2  CA               dex
0019BAr 2  CA               dex
0019BBr 2  B5 03            lda $03,x
0019BDr 2  48               pha
0019BEr 2  B5 02            lda $02,x
0019C0r 2  48               pha
0019C1r 2               
0019C1r 2               ; src/prelude.fth:33:32 in `loopimpl`
0019C1r 2               @OPCODE_759:   ; [c64_ir] AltPush
0019C1r 2  CA               dex
0019C2r 2  CA               dex
0019C3r 2  B5 03            lda $03,x
0019C5r 2  48               pha
0019C6r 2  B5 02            lda $02,x
0019C8r 2  48               pha
0019C9r 2               
0019C9r 2               ; src/prelude.fth:14:12 in `invert`
0019C9r 2               @OPCODE_760:   ; [c64_ir] PushLiteral(-1)
0019C9r 2  E8               inx
0019CAr 2  E8               inx
0019CBr 2  A9 FF            lda #255
0019CDr 2  95 00            sta $00,x
0019CFr 2  A9 FF            lda #255
0019D1r 2  95 01            sta $01,x
0019D3r 2               
0019D3r 2               ; src/prelude.fth:14:15 in `invert`
0019D3r 2               @OPCODE_761:   ; [c64_ir] Nand
0019D3r 2                   ; 26
0019D3r 2  CA               dex
0019D4r 2  CA               dex
0019D5r 2  B5 00            lda $00,x
0019D7r 2  35 02            and $02,x
0019D9r 2  49 FF            eor #$ff
0019DBr 2  95 00            sta $00,x
0019DDr 2  B5 01            lda $01,x
0019DFr 2  35 03            and $03,x
0019E1r 2  49 FF            eor #$ff
0019E3r 2  95 01            sta $01,x
0019E5r 2               
0019E5r 2               ; src/prelude.fth:15:19 in `negate`
0019E5r 2               @OPCODE_762:   ; [c64_ir] PushLiteral(1)
0019E5r 2  E8               inx
0019E6r 2  E8               inx
0019E7r 2  A9 01            lda #1
0019E9r 2  95 00            sta $00,x
0019EBr 2  A9 00            lda #0
0019EDr 2  95 01            sta $01,x
0019EFr 2               
0019EFr 2               ; src/prelude.fth:15:21 in `negate`
0019EFr 2               @OPCODE_763:   ; [c64_ir] Add
0019EFr 2                   ; 21
0019EFr 2  CA               dex
0019F0r 2  CA               dex
0019F1r 2  18               clc
0019F2r 2  B5 00            lda $00,x
0019F4r 2  75 02            adc $02,x
0019F6r 2  95 00            sta $00,x
0019F8r 2  B5 01            lda $01,x
0019FAr 2  75 03            adc $03,x
0019FCr 2  95 01            sta $01,x
0019FEr 2               
0019FEr 2               ; src/prelude.fth:16:19 in `-`
0019FEr 2               @OPCODE_764:   ; [c64_ir] Add
0019FEr 2                   ; 21
0019FEr 2  CA               dex
0019FFr 2  CA               dex
001A00r 2  18               clc
001A01r 2  B5 00            lda $00,x
001A03r 2  75 02            adc $02,x
001A05r 2  95 00            sta $00,x
001A07r 2  B5 01            lda $01,x
001A09r 2  75 03            adc $03,x
001A0Br 2  95 01            sta $01,x
001A0Dr 2               
001A0Dr 2               ; src/prelude.fth:21:8 in `0=`
001A0Dr 2               @OPCODE_765:   ; [c64_ir] JumpIf0(58)
001A0Dr 2  CA               dex
001A0Er 2  CA               dex
001A0Fr 2  B5 02            lda $02,x
001A11r 2  15 03            ora $03,x
001A13r 2  D0 03            bne *+5
001A15r 2  4C rr rr         jmp @target_58
001A18r 2               
001A18r 2               @target_57:
001A18r 2               
001A18r 2               ; src/prelude.fth:21:11 in `0=`
001A18r 2               @OPCODE_767:   ; [c64_ir] PushLiteral(0)
001A18r 2  E8               inx
001A19r 2  E8               inx
001A1Ar 2  A9 00            lda #0
001A1Cr 2  95 00            sta $00,x
001A1Er 2  A9 00            lda #0
001A20r 2  95 01            sta $01,x
001A22r 2               
001A22r 2               ; src/prelude.fth:21:13 in `0=`
001A22r 2               @OPCODE_768:   ; [c64_ir] JumpElse(59)
001A22r 2  4C rr rr         jmp @target_59
001A25r 2               
001A25r 2               @target_58:
001A25r 2               
001A25r 2               ; src/prelude.fth:21:18 in `0=`
001A25r 2               @OPCODE_770:   ; [c64_ir] PushLiteral(-1)
001A25r 2  E8               inx
001A26r 2  E8               inx
001A27r 2  A9 FF            lda #255
001A29r 2  95 00            sta $00,x
001A2Br 2  A9 FF            lda #255
001A2Dr 2  95 01            sta $01,x
001A2Fr 2               
001A2Fr 2               ; src/prelude.fth:21:21 in `0=`
001A2Fr 2               @OPCODE_771:   ; [c64_ir] JumpTarget(58)
001A2Fr 2               
001A2Fr 2               @target_59:
001A2Fr 2               
001A2Fr 2               ; src/prelude.fth:3:10 in `swap`
001A2Fr 2               @OPCODE_773:   ; [c64_ir] AltPush
001A2Fr 2  CA               dex
001A30r 2  CA               dex
001A31r 2  B5 03            lda $03,x
001A33r 2  48               pha
001A34r 2  B5 02            lda $02,x
001A36r 2  48               pha
001A37r 2               
001A37r 2               ; src/prelude.fth:3:19 in `swap`
001A37r 2               @OPCODE_774:   ; [c64_ir] AltPop
001A37r 2  E8               inx
001A38r 2  E8               inx
001A39r 2  68               pla
001A3Ar 2  95 00            sta $00,x
001A3Cr 2  68               pla
001A3Dr 2  95 01            sta $01,x
001A3Fr 2               
001A3Fr 2               ; src/prelude.fth:44:25 in `*`
001A3Fr 2               @OPCODE_775:   ; [c64_ir] LoopIf0(56)
001A3Fr 2  CA               dex
001A40r 2  CA               dex
001A41r 2  B5 02            lda $02,x
001A43r 2  15 03            ora $03,x
001A45r 2  D0 03            bne *+5
001A47r 2  4C rr rr         jmp @target_56
001A4Ar 2               
001A4Ar 2               @target_60:
001A4Ar 2               
001A4Ar 2               ; src/prelude.fth:44:25 in `*`
001A4Ar 2               @OPCODE_777:   ; [c64_ir] AltPop
001A4Ar 2  E8               inx
001A4Br 2  E8               inx
001A4Cr 2  68               pla
001A4Dr 2  95 00            sta $00,x
001A4Fr 2  68               pla
001A50r 2  95 01            sta $01,x
001A52r 2               
001A52r 2               ; src/prelude.fth:44:25 in `*`
001A52r 2               @OPCODE_778:   ; [c64_ir] Drop
001A52r 2  CA               dex
001A53r 2  CA               dex
001A54r 2               
001A54r 2               ; src/prelude.fth:44:25 in `*`
001A54r 2               @OPCODE_779:   ; [c64_ir] AltPop
001A54r 2  E8               inx
001A55r 2  E8               inx
001A56r 2  68               pla
001A57r 2  95 00            sta $00,x
001A59r 2  68               pla
001A5Ar 2  95 01            sta $01,x
001A5Cr 2               
001A5Cr 2               ; src/prelude.fth:44:25 in `*`
001A5Cr 2               @OPCODE_780:   ; [c64_ir] Drop
001A5Cr 2  CA               dex
001A5Dr 2  CA               dex
001A5Er 2               
001A5Er 2               ; src/prelude.fth:3:10 in `swap`
001A5Er 2               @OPCODE_781:   ; [c64_ir] AltPush
001A5Er 2  CA               dex
001A5Fr 2  CA               dex
001A60r 2  B5 03            lda $03,x
001A62r 2  48               pha
001A63r 2  B5 02            lda $02,x
001A65r 2  48               pha
001A66r 2               
001A66r 2               ; src/prelude.fth:3:13 in `swap`
001A66r 2               @OPCODE_782:   ; [c64_ir] TempStore
001A66r 2  CA               dex
001A67r 2  CA               dex
001A68r 2  B5 03            lda $03,x
001A6Ar 2  85 96            sta TEMP_PAX2
001A6Cr 2  B5 02            lda $02,x
001A6Er 2  85 95            sta TEMP_PAX1
001A70r 2               
001A70r 2               ; src/prelude.fth:3:19 in `swap`
001A70r 2               @OPCODE_783:   ; [c64_ir] AltPop
001A70r 2  E8               inx
001A71r 2  E8               inx
001A72r 2  68               pla
001A73r 2  95 00            sta $00,x
001A75r 2  68               pla
001A76r 2  95 01            sta $01,x
001A78r 2               
001A78r 2               ; <inline>:0:0 in `main`
001A78r 2               @OPCODE_784:   ; [c64_ir] AltPop
001A78r 2  E8               inx
001A79r 2  E8               inx
001A7Ar 2  68               pla
001A7Br 2  95 00            sta $00,x
001A7Dr 2  68               pla
001A7Er 2  95 01            sta $01,x
001A80r 2               
001A80r 2               ; <inline>:0:0 in `main`
001A80r 2               @OPCODE_785:   ; [c64_ir] Drop
001A80r 2  CA               dex
001A81r 2  CA               dex
001A82r 2               
001A82r 2               ; snake.pax:48:39 in `convert-x-y`
001A82r 2               @OPCODE_786:   ; [c64_ir] Add
001A82r 2                   ; 21
001A82r 2  CA               dex
001A83r 2  CA               dex
001A84r 2  18               clc
001A85r 2  B5 00            lda $00,x
001A87r 2  75 02            adc $02,x
001A89r 2  95 00            sta $00,x
001A8Br 2  B5 01            lda $01,x
001A8Dr 2  75 03            adc $03,x
001A8Fr 2  95 01            sta $01,x
001A91r 2               
001A91r 2               ; <inline>:0:0 in `main`
001A91r 2               @OPCODE_787:   ; [c64_ir] AltPop
001A91r 2  E8               inx
001A92r 2  E8               inx
001A93r 2  68               pla
001A94r 2  95 00            sta $00,x
001A96r 2  68               pla
001A97r 2  95 01            sta $01,x
001A99r 2               
001A99r 2               ; <inline>:0:0 in `main`
001A99r 2               @OPCODE_788:   ; [c64_ir] Drop
001A99r 2  CA               dex
001A9Ar 2  CA               dex
001A9Br 2               
001A9Br 2               ; snake.pax:49:34 in `draw-index`
001A9Br 2               @OPCODE_789:   ; [c64_ir] PushLiteral(1024)
001A9Br 2  E8               inx
001A9Cr 2  E8               inx
001A9Dr 2  A9 00            lda #0
001A9Fr 2  95 00            sta $00,x
001AA1r 2  A9 04            lda #4
001AA3r 2  95 01            sta $01,x
001AA5r 2               
001AA5r 2               ; snake.pax:49:43 in `draw-index`
001AA5r 2               @OPCODE_790:   ; [c64_ir] Add
001AA5r 2                   ; 21
001AA5r 2  CA               dex
001AA6r 2  CA               dex
001AA7r 2  18               clc
001AA8r 2  B5 00            lda $00,x
001AAAr 2  75 02            adc $02,x
001AACr 2  95 00            sta $00,x
001AAEr 2  B5 01            lda $01,x
001AB0r 2  75 03            adc $03,x
001AB2r 2  95 01            sta $01,x
001AB4r 2               
001AB4r 2               ; snake.pax:49:45 in `draw-index`
001AB4r 2               @OPCODE_791:   ; [c64_ir] Store8
001AB4r 2  CA               dex
001AB5r 2  CA               dex
001AB6r 2  CA               dex
001AB7r 2  CA               dex
001AB8r 2  B5 02            lda $02,x
001ABAr 2  81 04            sta ($04,x)
001ABCr 2                   ; TODO high byte
001ABCr 2               
001ABCr 2               ; <inline>:0:0 in `main`
001ABCr 2               @OPCODE_792:   ; [c64_ir] AltPop
001ABCr 2  E8               inx
001ABDr 2  E8               inx
001ABEr 2  68               pla
001ABFr 2  95 00            sta $00,x
001AC1r 2  68               pla
001AC2r 2  95 01            sta $01,x
001AC4r 2               
001AC4r 2               ; <inline>:0:0 in `main`
001AC4r 2               @OPCODE_793:   ; [c64_ir] Drop
001AC4r 2  CA               dex
001AC5r 2  CA               dex
001AC6r 2               
001AC6r 2               ; <inline>:0:0 in `main`
001AC6r 2               @OPCODE_794:   ; [c64_ir] AltPop
001AC6r 2  E8               inx
001AC7r 2  E8               inx
001AC8r 2  68               pla
001AC9r 2  95 00            sta $00,x
001ACBr 2  68               pla
001ACCr 2  95 01            sta $01,x
001ACEr 2               
001ACEr 2               ; <inline>:0:0 in `main`
001ACEr 2               @OPCODE_795:   ; [c64_ir] Drop
001ACEr 2  CA               dex
001ACFr 2  CA               dex
001AD0r 2               
001AD0r 2               ; snake.pax:196:3 in `draw-snake-head-tail`
001AD0r 2               @OPCODE_796:   ; [c64_ir] PushLiteral(-26658)
001AD0r 2  E8               inx
001AD1r 2  E8               inx
001AD2r 2  A9 DE            lda #222
001AD4r 2  95 00            sta $00,x
001AD6r 2  A9 97            lda #151
001AD8r 2  95 01            sta $01,x
001ADAr 2               
001ADAr 2               ; snake.pax:196:10 in `draw-snake-head-tail`
001ADAr 2               @OPCODE_797:   ; [c64_ir] Load
001ADAr 2  A1 00            lda ($00,x)
001ADCr 2  95 00            sta $00,x
001ADEr 2  A9 00            lda #0
001AE0r 2  95 01            sta $01,x
001AE2r 2               
001AE2r 2               ; src/prelude.fth:6:10 in `dup`
001AE2r 2               @OPCODE_798:   ; [c64_ir] TempStore
001AE2r 2  CA               dex
001AE3r 2  CA               dex
001AE4r 2  B5 03            lda $03,x
001AE6r 2  85 96            sta TEMP_PAX2
001AE8r 2  B5 02            lda $02,x
001AEAr 2  85 95            sta TEMP_PAX1
001AECr 2               
001AECr 2               ; src/prelude.fth:6:16 in `dup`
001AECr 2               @OPCODE_799:   ; [c64_ir] TempLoad
001AECr 2  E8               inx
001AEDr 2  E8               inx
001AEEr 2  A5 95            lda TEMP_PAX1
001AF0r 2  95 00            sta $00,x
001AF2r 2  A5 96            lda TEMP_PAX2
001AF4r 2  95 01            sta $01,x
001AF6r 2               
001AF6r 2               ; src/prelude.fth:6:22 in `dup`
001AF6r 2               @OPCODE_800:   ; [c64_ir] TempLoad
001AF6r 2  E8               inx
001AF7r 2  E8               inx
001AF8r 2  A5 95            lda TEMP_PAX1
001AFAr 2  95 00            sta $00,x
001AFCr 2  A5 96            lda TEMP_PAX2
001AFEr 2  95 01            sta $01,x
001B00r 2               
001B00r 2               ; src/prelude.fth:41:13 in `cells`
001B00r 2               @OPCODE_801:   ; [c64_ir] Add
001B00r 2                   ; 21
001B00r 2  CA               dex
001B01r 2  CA               dex
001B02r 2  18               clc
001B03r 2  B5 00            lda $00,x
001B05r 2  75 02            adc $02,x
001B07r 2  95 00            sta $00,x
001B09r 2  B5 01            lda $01,x
001B0Br 2  75 03            adc $03,x
001B0Dr 2  95 01            sta $01,x
001B0Fr 2               
001B0Fr 2               ; snake.pax:42:9 in `snake-x`
001B0Fr 2               @OPCODE_802:   ; [c64_ir] PushLiteral(-28668)
001B0Fr 2  E8               inx
001B10r 2  E8               inx
001B11r 2  A9 04            lda #4
001B13r 2  95 00            sta $00,x
001B15r 2  A9 90            lda #144
001B17r 2  95 01            sta $01,x
001B19r 2               
001B19r 2               ; snake.pax:42:22 in `snake-x`
001B19r 2               @OPCODE_803:   ; [c64_ir] Add
001B19r 2                   ; 21
001B19r 2  CA               dex
001B1Ar 2  CA               dex
001B1Br 2  18               clc
001B1Cr 2  B5 00            lda $00,x
001B1Er 2  75 02            adc $02,x
001B20r 2  95 00            sta $00,x
001B22r 2  B5 01            lda $01,x
001B24r 2  75 03            adc $03,x
001B26r 2  95 01            sta $01,x
001B28r 2               
001B28r 2               ; snake.pax:196:20 in `draw-snake-head-tail`
001B28r 2               @OPCODE_804:   ; [c64_ir] Load
001B28r 2  A1 00            lda ($00,x)
001B2Ar 2  95 00            sta $00,x
001B2Cr 2  A9 00            lda #0
001B2Er 2  95 01            sta $01,x
001B30r 2               
001B30r 2               ; snake.pax:197:3 in `draw-snake-head-tail`
001B30r 2               @OPCODE_805:   ; [c64_ir] PushLiteral(-26658)
001B30r 2  E8               inx
001B31r 2  E8               inx
001B32r 2  A9 DE            lda #222
001B34r 2  95 00            sta $00,x
001B36r 2  A9 97            lda #151
001B38r 2  95 01            sta $01,x
001B3Ar 2               
001B3Ar 2               ; snake.pax:197:10 in `draw-snake-head-tail`
001B3Ar 2               @OPCODE_806:   ; [c64_ir] Load
001B3Ar 2  A1 00            lda ($00,x)
001B3Cr 2  95 00            sta $00,x
001B3Er 2  A9 00            lda #0
001B40r 2  95 01            sta $01,x
001B42r 2               
001B42r 2               ; src/prelude.fth:6:10 in `dup`
001B42r 2               @OPCODE_807:   ; [c64_ir] TempStore
001B42r 2  CA               dex
001B43r 2  CA               dex
001B44r 2  B5 03            lda $03,x
001B46r 2  85 96            sta TEMP_PAX2
001B48r 2  B5 02            lda $02,x
001B4Ar 2  85 95            sta TEMP_PAX1
001B4Cr 2               
001B4Cr 2               ; src/prelude.fth:6:16 in `dup`
001B4Cr 2               @OPCODE_808:   ; [c64_ir] TempLoad
001B4Cr 2  E8               inx
001B4Dr 2  E8               inx
001B4Er 2  A5 95            lda TEMP_PAX1
001B50r 2  95 00            sta $00,x
001B52r 2  A5 96            lda TEMP_PAX2
001B54r 2  95 01            sta $01,x
001B56r 2               
001B56r 2               ; src/prelude.fth:6:22 in `dup`
001B56r 2               @OPCODE_809:   ; [c64_ir] TempLoad
001B56r 2  E8               inx
001B57r 2  E8               inx
001B58r 2  A5 95            lda TEMP_PAX1
001B5Ar 2  95 00            sta $00,x
001B5Cr 2  A5 96            lda TEMP_PAX2
001B5Er 2  95 01            sta $01,x
001B60r 2               
001B60r 2               ; src/prelude.fth:41:13 in `cells`
001B60r 2               @OPCODE_810:   ; [c64_ir] Add
001B60r 2                   ; 21
001B60r 2  CA               dex
001B61r 2  CA               dex
001B62r 2  18               clc
001B63r 2  B5 00            lda $00,x
001B65r 2  75 02            adc $02,x
001B67r 2  95 00            sta $00,x
001B69r 2  B5 01            lda $01,x
001B6Br 2  75 03            adc $03,x
001B6Dr 2  95 01            sta $01,x
001B6Fr 2               
001B6Fr 2               ; snake.pax:45:9 in `snake-y`
001B6Fr 2               @OPCODE_811:   ; [c64_ir] PushLiteral(-27666)
001B6Fr 2  E8               inx
001B70r 2  E8               inx
001B71r 2  A9 EE            lda #238
001B73r 2  95 00            sta $00,x
001B75r 2  A9 93            lda #147
001B77r 2  95 01            sta $01,x
001B79r 2               
001B79r 2               ; snake.pax:45:22 in `snake-y`
001B79r 2               @OPCODE_812:   ; [c64_ir] Add
001B79r 2                   ; 21
001B79r 2  CA               dex
001B7Ar 2  CA               dex
001B7Br 2  18               clc
001B7Cr 2  B5 00            lda $00,x
001B7Er 2  75 02            adc $02,x
001B80r 2  95 00            sta $00,x
001B82r 2  B5 01            lda $01,x
001B84r 2  75 03            adc $03,x
001B86r 2  95 01            sta $01,x
001B88r 2               
001B88r 2               ; snake.pax:197:20 in `draw-snake-head-tail`
001B88r 2               @OPCODE_813:   ; [c64_ir] Load
001B88r 2  A1 00            lda ($00,x)
001B8Ar 2  95 00            sta $00,x
001B8Cr 2  A9 00            lda #0
001B8Er 2  95 01            sta $01,x
001B90r 2               
001B90r 2               ; <inline>:0:0 in `main`
001B90r 2               @OPCODE_814:   ; [c64_ir] PushLiteral(7777)
001B90r 2  E8               inx
001B91r 2  E8               inx
001B92r 2  A9 61            lda #97
001B94r 2  95 00            sta $00,x
001B96r 2  A9 1E            lda #30
001B98r 2  95 01            sta $01,x
001B9Ar 2               
001B9Ar 2               ; <inline>:0:0 in `main`
001B9Ar 2               @OPCODE_815:   ; [c64_ir] AltPush
001B9Ar 2  CA               dex
001B9Br 2  CA               dex
001B9Cr 2  B5 03            lda $03,x
001B9Er 2  48               pha
001B9Fr 2  B5 02            lda $02,x
001BA1r 2  48               pha
001BA2r 2               
001BA2r 2               ; src/prelude.fth:3:10 in `swap`
001BA2r 2               @OPCODE_816:   ; [c64_ir] AltPush
001BA2r 2  CA               dex
001BA3r 2  CA               dex
001BA4r 2  B5 03            lda $03,x
001BA6r 2  48               pha
001BA7r 2  B5 02            lda $02,x
001BA9r 2  48               pha
001BAAr 2               
001BAAr 2               ; src/prelude.fth:3:13 in `swap`
001BAAr 2               @OPCODE_817:   ; [c64_ir] TempStore
001BAAr 2  CA               dex
001BABr 2  CA               dex
001BACr 2  B5 03            lda $03,x
001BAEr 2  85 96            sta TEMP_PAX2
001BB0r 2  B5 02            lda $02,x
001BB2r 2  85 95            sta TEMP_PAX1
001BB4r 2               
001BB4r 2               ; src/prelude.fth:3:19 in `swap`
001BB4r 2               @OPCODE_818:   ; [c64_ir] AltPop
001BB4r 2  E8               inx
001BB5r 2  E8               inx
001BB6r 2  68               pla
001BB7r 2  95 00            sta $00,x
001BB9r 2  68               pla
001BBAr 2  95 01            sta $01,x
001BBCr 2               
001BBCr 2               ; src/prelude.fth:3:22 in `swap`
001BBCr 2               @OPCODE_819:   ; [c64_ir] TempLoad
001BBCr 2  E8               inx
001BBDr 2  E8               inx
001BBEr 2  A5 95            lda TEMP_PAX1
001BC0r 2  95 00            sta $00,x
001BC2r 2  A5 96            lda TEMP_PAX2
001BC4r 2  95 01            sta $01,x
001BC6r 2               
001BC6r 2               ; src/prelude.fth:3:13 in `swap`
001BC6r 2               @OPCODE_820:   ; [c64_ir] TempStore
001BC6r 2  CA               dex
001BC7r 2  CA               dex
001BC8r 2  B5 03            lda $03,x
001BCAr 2  85 96            sta TEMP_PAX2
001BCCr 2  B5 02            lda $02,x
001BCEr 2  85 95            sta TEMP_PAX1
001BD0r 2               
001BD0r 2               ; src/prelude.fth:3:22 in `swap`
001BD0r 2               @OPCODE_821:   ; [c64_ir] TempLoad
001BD0r 2  E8               inx
001BD1r 2  E8               inx
001BD2r 2  A5 95            lda TEMP_PAX1
001BD4r 2  95 00            sta $00,x
001BD6r 2  A5 96            lda TEMP_PAX2
001BD8r 2  95 01            sta $01,x
001BDAr 2               
001BDAr 2               ; src/prelude.fth:5:10 in `rot`
001BDAr 2               @OPCODE_822:   ; [c64_ir] AltPush
001BDAr 2  CA               dex
001BDBr 2  CA               dex
001BDCr 2  B5 03            lda $03,x
001BDEr 2  48               pha
001BDFr 2  B5 02            lda $02,x
001BE1r 2  48               pha
001BE2r 2               
001BE2r 2               ; src/prelude.fth:3:13 in `swap`
001BE2r 2               @OPCODE_823:   ; [c64_ir] TempStore
001BE2r 2  CA               dex
001BE3r 2  CA               dex
001BE4r 2  B5 03            lda $03,x
001BE6r 2  85 96            sta TEMP_PAX2
001BE8r 2  B5 02            lda $02,x
001BEAr 2  85 95            sta TEMP_PAX1
001BECr 2               
001BECr 2               ; src/prelude.fth:3:19 in `swap`
001BECr 2               @OPCODE_824:   ; [c64_ir] PushLiteral(32)
001BECr 2  E8               inx
001BEDr 2  E8               inx
001BEEr 2  A9 20            lda #32
001BF0r 2  95 00            sta $00,x
001BF2r 2  A9 00            lda #0
001BF4r 2  95 01            sta $01,x
001BF6r 2               
001BF6r 2               ; src/prelude.fth:3:22 in `swap`
001BF6r 2               @OPCODE_825:   ; [c64_ir] TempLoad
001BF6r 2  E8               inx
001BF7r 2  E8               inx
001BF8r 2  A5 95            lda TEMP_PAX1
001BFAr 2  95 00            sta $00,x
001BFCr 2  A5 96            lda TEMP_PAX2
001BFEr 2  95 01            sta $01,x
001C00r 2               
001C00r 2               ; src/prelude.fth:5:18 in `rot`
001C00r 2               @OPCODE_826:   ; [c64_ir] AltPop
001C00r 2  E8               inx
001C01r 2  E8               inx
001C02r 2  68               pla
001C03r 2  95 00            sta $00,x
001C05r 2  68               pla
001C06r 2  95 01            sta $01,x
001C08r 2               
001C08r 2               ; src/prelude.fth:3:10 in `swap`
001C08r 2               @OPCODE_827:   ; [c64_ir] AltPush
001C08r 2  CA               dex
001C09r 2  CA               dex
001C0Ar 2  B5 03            lda $03,x
001C0Cr 2  48               pha
001C0Dr 2  B5 02            lda $02,x
001C0Fr 2  48               pha
001C10r 2               
001C10r 2               ; src/prelude.fth:3:13 in `swap`
001C10r 2               @OPCODE_828:   ; [c64_ir] TempStore
001C10r 2  CA               dex
001C11r 2  CA               dex
001C12r 2  B5 03            lda $03,x
001C14r 2  85 96            sta TEMP_PAX2
001C16r 2  B5 02            lda $02,x
001C18r 2  85 95            sta TEMP_PAX1
001C1Ar 2               
001C1Ar 2               ; src/prelude.fth:3:19 in `swap`
001C1Ar 2               @OPCODE_829:   ; [c64_ir] AltPop
001C1Ar 2  E8               inx
001C1Br 2  E8               inx
001C1Cr 2  68               pla
001C1Dr 2  95 00            sta $00,x
001C1Fr 2  68               pla
001C20r 2  95 01            sta $01,x
001C22r 2               
001C22r 2               ; src/prelude.fth:3:22 in `swap`
001C22r 2               @OPCODE_830:   ; [c64_ir] TempLoad
001C22r 2  E8               inx
001C23r 2  E8               inx
001C24r 2  A5 95            lda TEMP_PAX1
001C26r 2  95 00            sta $00,x
001C28r 2  A5 96            lda TEMP_PAX2
001C2Ar 2  95 01            sta $01,x
001C2Cr 2               
001C2Cr 2               ; <inline>:0:0 in `main`
001C2Cr 2               @OPCODE_831:   ; [c64_ir] PushLiteral(7777)
001C2Cr 2  E8               inx
001C2Dr 2  E8               inx
001C2Er 2  A9 61            lda #97
001C30r 2  95 00            sta $00,x
001C32r 2  A9 1E            lda #30
001C34r 2  95 01            sta $01,x
001C36r 2               
001C36r 2               ; <inline>:0:0 in `main`
001C36r 2               @OPCODE_832:   ; [c64_ir] AltPush
001C36r 2  CA               dex
001C37r 2  CA               dex
001C38r 2  B5 03            lda $03,x
001C3Ar 2  48               pha
001C3Br 2  B5 02            lda $02,x
001C3Dr 2  48               pha
001C3Er 2               
001C3Er 2               ; <inline>:0:0 in `main`
001C3Er 2               @OPCODE_833:   ; [c64_ir] PushLiteral(7777)
001C3Er 2  E8               inx
001C3Fr 2  E8               inx
001C40r 2  A9 61            lda #97
001C42r 2  95 00            sta $00,x
001C44r 2  A9 1E            lda #30
001C46r 2  95 01            sta $01,x
001C48r 2               
001C48r 2               ; <inline>:0:0 in `main`
001C48r 2               @OPCODE_834:   ; [c64_ir] AltPush
001C48r 2  CA               dex
001C49r 2  CA               dex
001C4Ar 2  B5 03            lda $03,x
001C4Cr 2  48               pha
001C4Dr 2  B5 02            lda $02,x
001C4Fr 2  48               pha
001C50r 2               
001C50r 2               ; <inline>:0:0 in `main`
001C50r 2               @OPCODE_835:   ; [c64_ir] PushLiteral(7777)
001C50r 2  E8               inx
001C51r 2  E8               inx
001C52r 2  A9 61            lda #97
001C54r 2  95 00            sta $00,x
001C56r 2  A9 1E            lda #30
001C58r 2  95 01            sta $01,x
001C5Ar 2               
001C5Ar 2               ; <inline>:0:0 in `main`
001C5Ar 2               @OPCODE_836:   ; [c64_ir] AltPush
001C5Ar 2  CA               dex
001C5Br 2  CA               dex
001C5Cr 2  B5 03            lda $03,x
001C5Er 2  48               pha
001C5Fr 2  B5 02            lda $02,x
001C61r 2  48               pha
001C62r 2               
001C62r 2               ; src/prelude.fth:44:8 in `*`
001C62r 2               @OPCODE_837:   ; [c64_ir] PushLiteral(0)
001C62r 2  E8               inx
001C63r 2  E8               inx
001C64r 2  A9 00            lda #0
001C66r 2  95 00            sta $00,x
001C68r 2  A9 00            lda #0
001C6Ar 2  95 01            sta $01,x
001C6Cr 2               
001C6Cr 2               ; src/prelude.fth:44:10 in `*`
001C6Cr 2               @OPCODE_838:   ; [c64_ir] PushLiteral(40)
001C6Cr 2  E8               inx
001C6Dr 2  E8               inx
001C6Er 2  A9 28            lda #40
001C70r 2  95 00            sta $00,x
001C72r 2  A9 00            lda #0
001C74r 2  95 01            sta $01,x
001C76r 2               
001C76r 2               ; src/prelude.fth:44:13 in `*`
001C76r 2               @OPCODE_839:   ; [c64_ir] PushLiteral(0)
001C76r 2  E8               inx
001C77r 2  E8               inx
001C78r 2  A9 00            lda #0
001C7Ar 2  95 00            sta $00,x
001C7Cr 2  A9 00            lda #0
001C7Er 2  95 01            sta $01,x
001C80r 2               
001C80r 2               ; src/prelude.fth:44:15 in `*`
001C80r 2               @OPCODE_840:   ; [c64_ir] AltPush
001C80r 2  CA               dex
001C81r 2  CA               dex
001C82r 2  B5 03            lda $03,x
001C84r 2  48               pha
001C85r 2  B5 02            lda $02,x
001C87r 2  48               pha
001C88r 2               
001C88r 2               ; src/prelude.fth:44:15 in `*`
001C88r 2               @OPCODE_841:   ; [c64_ir] AltPush
001C88r 2  CA               dex
001C89r 2  CA               dex
001C8Ar 2  B5 03            lda $03,x
001C8Cr 2  48               pha
001C8Dr 2  B5 02            lda $02,x
001C8Fr 2  48               pha
001C90r 2               
001C90r 2               ; src/prelude.fth:44:15 in `*`
001C90r 2               @OPCODE_842:   ; [c64_ir] LoopTarget(60)
001C90r 2               
001C90r 2               @target_61:
001C90r 2               
001C90r 2               ; src/prelude.fth:4:10 in `over`
001C90r 2               @OPCODE_844:   ; [c64_ir] AltPush
001C90r 2  CA               dex
001C91r 2  CA               dex
001C92r 2  B5 03            lda $03,x
001C94r 2  48               pha
001C95r 2  B5 02            lda $02,x
001C97r 2  48               pha
001C98r 2               
001C98r 2               ; src/prelude.fth:4:13 in `over`
001C98r 2               @OPCODE_845:   ; [c64_ir] TempStore
001C98r 2  CA               dex
001C99r 2  CA               dex
001C9Ar 2  B5 03            lda $03,x
001C9Cr 2  85 96            sta TEMP_PAX2
001C9Er 2  B5 02            lda $02,x
001CA0r 2  85 95            sta TEMP_PAX1
001CA2r 2               
001CA2r 2               ; src/prelude.fth:4:19 in `over`
001CA2r 2               @OPCODE_846:   ; [c64_ir] TempLoad
001CA2r 2  E8               inx
001CA3r 2  E8               inx
001CA4r 2  A5 95            lda TEMP_PAX1
001CA6r 2  95 00            sta $00,x
001CA8r 2  A5 96            lda TEMP_PAX2
001CAAr 2  95 01            sta $01,x
001CACr 2               
001CACr 2               ; src/prelude.fth:4:25 in `over`
001CACr 2               @OPCODE_847:   ; [c64_ir] AltPop
001CACr 2  E8               inx
001CADr 2  E8               inx
001CAEr 2  68               pla
001CAFr 2  95 00            sta $00,x
001CB1r 2  68               pla
001CB2r 2  95 01            sta $01,x
001CB4r 2               
001CB4r 2               ; src/prelude.fth:4:28 in `over`
001CB4r 2               @OPCODE_848:   ; [c64_ir] TempLoad
001CB4r 2  E8               inx
001CB5r 2  E8               inx
001CB6r 2  A5 95            lda TEMP_PAX1
001CB8r 2  95 00            sta $00,x
001CBAr 2  A5 96            lda TEMP_PAX2
001CBCr 2  95 01            sta $01,x
001CBEr 2               
001CBEr 2               ; src/prelude.fth:44:23 in `*`
001CBEr 2               @OPCODE_849:   ; [c64_ir] Add
001CBEr 2                   ; 21
001CBEr 2  CA               dex
001CBFr 2  CA               dex
001CC0r 2  18               clc
001CC1r 2  B5 00            lda $00,x
001CC3r 2  75 02            adc $02,x
001CC5r 2  95 00            sta $00,x
001CC7r 2  B5 01            lda $01,x
001CC9r 2  75 03            adc $03,x
001CCBr 2  95 01            sta $01,x
001CCDr 2               
001CCDr 2               ; src/prelude.fth:33:15 in `loopimpl`
001CCDr 2               @OPCODE_850:   ; [c64_ir] AltPop
001CCDr 2  E8               inx
001CCEr 2  E8               inx
001CCFr 2  68               pla
001CD0r 2  95 00            sta $00,x
001CD2r 2  68               pla
001CD3r 2  95 01            sta $01,x
001CD5r 2               
001CD5r 2               ; src/prelude.fth:33:18 in `loopimpl`
001CD5r 2               @OPCODE_851:   ; [c64_ir] AltPop
001CD5r 2  E8               inx
001CD6r 2  E8               inx
001CD7r 2  68               pla
001CD8r 2  95 00            sta $00,x
001CDAr 2  68               pla
001CDBr 2  95 01            sta $01,x
001CDDr 2               
001CDDr 2               ; src/prelude.fth:18:8 in `1+`
001CDDr 2               @OPCODE_852:   ; [c64_ir] PushLiteral(1)
001CDDr 2  E8               inx
001CDEr 2  E8               inx
001CDFr 2  A9 01            lda #1
001CE1r 2  95 00            sta $00,x
001CE3r 2  A9 00            lda #0
001CE5r 2  95 01            sta $01,x
001CE7r 2               
001CE7r 2               ; src/prelude.fth:18:10 in `1+`
001CE7r 2               @OPCODE_853:   ; [c64_ir] Add
001CE7r 2                   ; 21
001CE7r 2  CA               dex
001CE8r 2  CA               dex
001CE9r 2  18               clc
001CEAr 2  B5 00            lda $00,x
001CECr 2  75 02            adc $02,x
001CEEr 2  95 00            sta $00,x
001CF0r 2  B5 01            lda $01,x
001CF2r 2  75 03            adc $03,x
001CF4r 2  95 01            sta $01,x
001CF6r 2               
001CF6r 2               ; src/prelude.fth:4:10 in `over`
001CF6r 2               @OPCODE_854:   ; [c64_ir] AltPush
001CF6r 2  CA               dex
001CF7r 2  CA               dex
001CF8r 2  B5 03            lda $03,x
001CFAr 2  48               pha
001CFBr 2  B5 02            lda $02,x
001CFDr 2  48               pha
001CFEr 2               
001CFEr 2               ; src/prelude.fth:4:13 in `over`
001CFEr 2               @OPCODE_855:   ; [c64_ir] TempStore
001CFEr 2  CA               dex
001CFFr 2  CA               dex
001D00r 2  B5 03            lda $03,x
001D02r 2  85 96            sta TEMP_PAX2
001D04r 2  B5 02            lda $02,x
001D06r 2  85 95            sta TEMP_PAX1
001D08r 2               
001D08r 2               ; src/prelude.fth:4:19 in `over`
001D08r 2               @OPCODE_856:   ; [c64_ir] TempLoad
001D08r 2  E8               inx
001D09r 2  E8               inx
001D0Ar 2  A5 95            lda TEMP_PAX1
001D0Cr 2  95 00            sta $00,x
001D0Er 2  A5 96            lda TEMP_PAX2
001D10r 2  95 01            sta $01,x
001D12r 2               
001D12r 2               ; src/prelude.fth:4:25 in `over`
001D12r 2               @OPCODE_857:   ; [c64_ir] AltPop
001D12r 2  E8               inx
001D13r 2  E8               inx
001D14r 2  68               pla
001D15r 2  95 00            sta $00,x
001D17r 2  68               pla
001D18r 2  95 01            sta $01,x
001D1Ar 2               
001D1Ar 2               ; src/prelude.fth:4:28 in `over`
001D1Ar 2               @OPCODE_858:   ; [c64_ir] TempLoad
001D1Ar 2  E8               inx
001D1Br 2  E8               inx
001D1Cr 2  A5 95            lda TEMP_PAX1
001D1Er 2  95 00            sta $00,x
001D20r 2  A5 96            lda TEMP_PAX2
001D22r 2  95 01            sta $01,x
001D24r 2               
001D24r 2               ; src/prelude.fth:4:10 in `over`
001D24r 2               @OPCODE_859:   ; [c64_ir] AltPush
001D24r 2  CA               dex
001D25r 2  CA               dex
001D26r 2  B5 03            lda $03,x
001D28r 2  48               pha
001D29r 2  B5 02            lda $02,x
001D2Br 2  48               pha
001D2Cr 2               
001D2Cr 2               ; src/prelude.fth:4:13 in `over`
001D2Cr 2               @OPCODE_860:   ; [c64_ir] TempStore
001D2Cr 2  CA               dex
001D2Dr 2  CA               dex
001D2Er 2  B5 03            lda $03,x
001D30r 2  85 96            sta TEMP_PAX2
001D32r 2  B5 02            lda $02,x
001D34r 2  85 95            sta TEMP_PAX1
001D36r 2               
001D36r 2               ; src/prelude.fth:4:19 in `over`
001D36r 2               @OPCODE_861:   ; [c64_ir] TempLoad
001D36r 2  E8               inx
001D37r 2  E8               inx
001D38r 2  A5 95            lda TEMP_PAX1
001D3Ar 2  95 00            sta $00,x
001D3Cr 2  A5 96            lda TEMP_PAX2
001D3Er 2  95 01            sta $01,x
001D40r 2               
001D40r 2               ; src/prelude.fth:4:25 in `over`
001D40r 2               @OPCODE_862:   ; [c64_ir] AltPop
001D40r 2  E8               inx
001D41r 2  E8               inx
001D42r 2  68               pla
001D43r 2  95 00            sta $00,x
001D45r 2  68               pla
001D46r 2  95 01            sta $01,x
001D48r 2               
001D48r 2               ; src/prelude.fth:4:28 in `over`
001D48r 2               @OPCODE_863:   ; [c64_ir] TempLoad
001D48r 2  E8               inx
001D49r 2  E8               inx
001D4Ar 2  A5 95            lda TEMP_PAX1
001D4Cr 2  95 00            sta $00,x
001D4Er 2  A5 96            lda TEMP_PAX2
001D50r 2  95 01            sta $01,x
001D52r 2               
001D52r 2               ; src/prelude.fth:33:29 in `loopimpl`
001D52r 2               @OPCODE_864:   ; [c64_ir] AltPush
001D52r 2  CA               dex
001D53r 2  CA               dex
001D54r 2  B5 03            lda $03,x
001D56r 2  48               pha
001D57r 2  B5 02            lda $02,x
001D59r 2  48               pha
001D5Ar 2               
001D5Ar 2               ; src/prelude.fth:33:32 in `loopimpl`
001D5Ar 2               @OPCODE_865:   ; [c64_ir] AltPush
001D5Ar 2  CA               dex
001D5Br 2  CA               dex
001D5Cr 2  B5 03            lda $03,x
001D5Er 2  48               pha
001D5Fr 2  B5 02            lda $02,x
001D61r 2  48               pha
001D62r 2               
001D62r 2               ; src/prelude.fth:14:12 in `invert`
001D62r 2               @OPCODE_866:   ; [c64_ir] PushLiteral(-1)
001D62r 2  E8               inx
001D63r 2  E8               inx
001D64r 2  A9 FF            lda #255
001D66r 2  95 00            sta $00,x
001D68r 2  A9 FF            lda #255
001D6Ar 2  95 01            sta $01,x
001D6Cr 2               
001D6Cr 2               ; src/prelude.fth:14:15 in `invert`
001D6Cr 2               @OPCODE_867:   ; [c64_ir] Nand
001D6Cr 2                   ; 26
001D6Cr 2  CA               dex
001D6Dr 2  CA               dex
001D6Er 2  B5 00            lda $00,x
001D70r 2  35 02            and $02,x
001D72r 2  49 FF            eor #$ff
001D74r 2  95 00            sta $00,x
001D76r 2  B5 01            lda $01,x
001D78r 2  35 03            and $03,x
001D7Ar 2  49 FF            eor #$ff
001D7Cr 2  95 01            sta $01,x
001D7Er 2               
001D7Er 2               ; src/prelude.fth:15:19 in `negate`
001D7Er 2               @OPCODE_868:   ; [c64_ir] PushLiteral(1)
001D7Er 2  E8               inx
001D7Fr 2  E8               inx
001D80r 2  A9 01            lda #1
001D82r 2  95 00            sta $00,x
001D84r 2  A9 00            lda #0
001D86r 2  95 01            sta $01,x
001D88r 2               
001D88r 2               ; src/prelude.fth:15:21 in `negate`
001D88r 2               @OPCODE_869:   ; [c64_ir] Add
001D88r 2                   ; 21
001D88r 2  CA               dex
001D89r 2  CA               dex
001D8Ar 2  18               clc
001D8Br 2  B5 00            lda $00,x
001D8Dr 2  75 02            adc $02,x
001D8Fr 2  95 00            sta $00,x
001D91r 2  B5 01            lda $01,x
001D93r 2  75 03            adc $03,x
001D95r 2  95 01            sta $01,x
001D97r 2               
001D97r 2               ; src/prelude.fth:16:19 in `-`
001D97r 2               @OPCODE_870:   ; [c64_ir] Add
001D97r 2                   ; 21
001D97r 2  CA               dex
001D98r 2  CA               dex
001D99r 2  18               clc
001D9Ar 2  B5 00            lda $00,x
001D9Cr 2  75 02            adc $02,x
001D9Er 2  95 00            sta $00,x
001DA0r 2  B5 01            lda $01,x
001DA2r 2  75 03            adc $03,x
001DA4r 2  95 01            sta $01,x
001DA6r 2               
001DA6r 2               ; src/prelude.fth:21:8 in `0=`
001DA6r 2               @OPCODE_871:   ; [c64_ir] JumpIf0(63)
001DA6r 2  CA               dex
001DA7r 2  CA               dex
001DA8r 2  B5 02            lda $02,x
001DAAr 2  15 03            ora $03,x
001DACr 2  D0 03            bne *+5
001DAEr 2  4C rr rr         jmp @target_63
001DB1r 2               
001DB1r 2               @target_62:
001DB1r 2               
001DB1r 2               ; src/prelude.fth:21:11 in `0=`
001DB1r 2               @OPCODE_873:   ; [c64_ir] PushLiteral(0)
001DB1r 2  E8               inx
001DB2r 2  E8               inx
001DB3r 2  A9 00            lda #0
001DB5r 2  95 00            sta $00,x
001DB7r 2  A9 00            lda #0
001DB9r 2  95 01            sta $01,x
001DBBr 2               
001DBBr 2               ; src/prelude.fth:21:13 in `0=`
001DBBr 2               @OPCODE_874:   ; [c64_ir] JumpElse(64)
001DBBr 2  4C rr rr         jmp @target_64
001DBEr 2               
001DBEr 2               @target_63:
001DBEr 2               
001DBEr 2               ; src/prelude.fth:21:18 in `0=`
001DBEr 2               @OPCODE_876:   ; [c64_ir] PushLiteral(-1)
001DBEr 2  E8               inx
001DBFr 2  E8               inx
001DC0r 2  A9 FF            lda #255
001DC2r 2  95 00            sta $00,x
001DC4r 2  A9 FF            lda #255
001DC6r 2  95 01            sta $01,x
001DC8r 2               
001DC8r 2               ; src/prelude.fth:21:21 in `0=`
001DC8r 2               @OPCODE_877:   ; [c64_ir] JumpTarget(63)
001DC8r 2               
001DC8r 2               @target_64:
001DC8r 2               
001DC8r 2               ; src/prelude.fth:3:10 in `swap`
001DC8r 2               @OPCODE_879:   ; [c64_ir] AltPush
001DC8r 2  CA               dex
001DC9r 2  CA               dex
001DCAr 2  B5 03            lda $03,x
001DCCr 2  48               pha
001DCDr 2  B5 02            lda $02,x
001DCFr 2  48               pha
001DD0r 2               
001DD0r 2               ; src/prelude.fth:3:19 in `swap`
001DD0r 2               @OPCODE_880:   ; [c64_ir] AltPop
001DD0r 2  E8               inx
001DD1r 2  E8               inx
001DD2r 2  68               pla
001DD3r 2  95 00            sta $00,x
001DD5r 2  68               pla
001DD6r 2  95 01            sta $01,x
001DD8r 2               
001DD8r 2               ; src/prelude.fth:44:25 in `*`
001DD8r 2               @OPCODE_881:   ; [c64_ir] LoopIf0(61)
001DD8r 2  CA               dex
001DD9r 2  CA               dex
001DDAr 2  B5 02            lda $02,x
001DDCr 2  15 03            ora $03,x
001DDEr 2  D0 03            bne *+5
001DE0r 2  4C rr rr         jmp @target_61
001DE3r 2               
001DE3r 2               @target_65:
001DE3r 2               
001DE3r 2               ; src/prelude.fth:44:25 in `*`
001DE3r 2               @OPCODE_883:   ; [c64_ir] AltPop
001DE3r 2  E8               inx
001DE4r 2  E8               inx
001DE5r 2  68               pla
001DE6r 2  95 00            sta $00,x
001DE8r 2  68               pla
001DE9r 2  95 01            sta $01,x
001DEBr 2               
001DEBr 2               ; src/prelude.fth:44:25 in `*`
001DEBr 2               @OPCODE_884:   ; [c64_ir] Drop
001DEBr 2  CA               dex
001DECr 2  CA               dex
001DEDr 2               
001DEDr 2               ; src/prelude.fth:44:25 in `*`
001DEDr 2               @OPCODE_885:   ; [c64_ir] AltPop
001DEDr 2  E8               inx
001DEEr 2  E8               inx
001DEFr 2  68               pla
001DF0r 2  95 00            sta $00,x
001DF2r 2  68               pla
001DF3r 2  95 01            sta $01,x
001DF5r 2               
001DF5r 2               ; src/prelude.fth:44:25 in `*`
001DF5r 2               @OPCODE_886:   ; [c64_ir] Drop
001DF5r 2  CA               dex
001DF6r 2  CA               dex
001DF7r 2               
001DF7r 2               ; src/prelude.fth:3:10 in `swap`
001DF7r 2               @OPCODE_887:   ; [c64_ir] AltPush
001DF7r 2  CA               dex
001DF8r 2  CA               dex
001DF9r 2  B5 03            lda $03,x
001DFBr 2  48               pha
001DFCr 2  B5 02            lda $02,x
001DFEr 2  48               pha
001DFFr 2               
001DFFr 2               ; src/prelude.fth:3:13 in `swap`
001DFFr 2               @OPCODE_888:   ; [c64_ir] TempStore
001DFFr 2  CA               dex
001E00r 2  CA               dex
001E01r 2  B5 03            lda $03,x
001E03r 2  85 96            sta TEMP_PAX2
001E05r 2  B5 02            lda $02,x
001E07r 2  85 95            sta TEMP_PAX1
001E09r 2               
001E09r 2               ; src/prelude.fth:3:19 in `swap`
001E09r 2               @OPCODE_889:   ; [c64_ir] AltPop
001E09r 2  E8               inx
001E0Ar 2  E8               inx
001E0Br 2  68               pla
001E0Cr 2  95 00            sta $00,x
001E0Er 2  68               pla
001E0Fr 2  95 01            sta $01,x
001E11r 2               
001E11r 2               ; <inline>:0:0 in `main`
001E11r 2               @OPCODE_890:   ; [c64_ir] AltPop
001E11r 2  E8               inx
001E12r 2  E8               inx
001E13r 2  68               pla
001E14r 2  95 00            sta $00,x
001E16r 2  68               pla
001E17r 2  95 01            sta $01,x
001E19r 2               
001E19r 2               ; <inline>:0:0 in `main`
001E19r 2               @OPCODE_891:   ; [c64_ir] Drop
001E19r 2  CA               dex
001E1Ar 2  CA               dex
001E1Br 2               
001E1Br 2               ; snake.pax:48:39 in `convert-x-y`
001E1Br 2               @OPCODE_892:   ; [c64_ir] Add
001E1Br 2                   ; 21
001E1Br 2  CA               dex
001E1Cr 2  CA               dex
001E1Dr 2  18               clc
001E1Er 2  B5 00            lda $00,x
001E20r 2  75 02            adc $02,x
001E22r 2  95 00            sta $00,x
001E24r 2  B5 01            lda $01,x
001E26r 2  75 03            adc $03,x
001E28r 2  95 01            sta $01,x
001E2Ar 2               
001E2Ar 2               ; <inline>:0:0 in `main`
001E2Ar 2               @OPCODE_893:   ; [c64_ir] AltPop
001E2Ar 2  E8               inx
001E2Br 2  E8               inx
001E2Cr 2  68               pla
001E2Dr 2  95 00            sta $00,x
001E2Fr 2  68               pla
001E30r 2  95 01            sta $01,x
001E32r 2               
001E32r 2               ; <inline>:0:0 in `main`
001E32r 2               @OPCODE_894:   ; [c64_ir] Drop
001E32r 2  CA               dex
001E33r 2  CA               dex
001E34r 2               
001E34r 2               ; snake.pax:49:34 in `draw-index`
001E34r 2               @OPCODE_895:   ; [c64_ir] PushLiteral(1024)
001E34r 2  E8               inx
001E35r 2  E8               inx
001E36r 2  A9 00            lda #0
001E38r 2  95 00            sta $00,x
001E3Ar 2  A9 04            lda #4
001E3Cr 2  95 01            sta $01,x
001E3Er 2               
001E3Er 2               ; snake.pax:49:43 in `draw-index`
001E3Er 2               @OPCODE_896:   ; [c64_ir] Add
001E3Er 2                   ; 21
001E3Er 2  CA               dex
001E3Fr 2  CA               dex
001E40r 2  18               clc
001E41r 2  B5 00            lda $00,x
001E43r 2  75 02            adc $02,x
001E45r 2  95 00            sta $00,x
001E47r 2  B5 01            lda $01,x
001E49r 2  75 03            adc $03,x
001E4Br 2  95 01            sta $01,x
001E4Dr 2               
001E4Dr 2               ; snake.pax:49:45 in `draw-index`
001E4Dr 2               @OPCODE_897:   ; [c64_ir] Store8
001E4Dr 2  CA               dex
001E4Er 2  CA               dex
001E4Fr 2  CA               dex
001E50r 2  CA               dex
001E51r 2  B5 02            lda $02,x
001E53r 2  81 04            sta ($04,x)
001E55r 2                   ; TODO high byte
001E55r 2               
001E55r 2               ; <inline>:0:0 in `main`
001E55r 2               @OPCODE_898:   ; [c64_ir] AltPop
001E55r 2  E8               inx
001E56r 2  E8               inx
001E57r 2  68               pla
001E58r 2  95 00            sta $00,x
001E5Ar 2  68               pla
001E5Br 2  95 01            sta $01,x
001E5Dr 2               
001E5Dr 2               ; <inline>:0:0 in `main`
001E5Dr 2               @OPCODE_899:   ; [c64_ir] Drop
001E5Dr 2  CA               dex
001E5Er 2  CA               dex
001E5Fr 2               
001E5Fr 2               ; <inline>:0:0 in `main`
001E5Fr 2               @OPCODE_900:   ; [c64_ir] AltPop
001E5Fr 2  E8               inx
001E60r 2  E8               inx
001E61r 2  68               pla
001E62r 2  95 00            sta $00,x
001E64r 2  68               pla
001E65r 2  95 01            sta $01,x
001E67r 2               
001E67r 2               ; <inline>:0:0 in `main`
001E67r 2               @OPCODE_901:   ; [c64_ir] Drop
001E67r 2  CA               dex
001E68r 2  CA               dex
001E69r 2               
001E69r 2               ; <inline>:0:0 in `main`
001E69r 2               @OPCODE_902:   ; [c64_ir] AltPop
001E69r 2  E8               inx
001E6Ar 2  E8               inx
001E6Br 2  68               pla
001E6Cr 2  95 00            sta $00,x
001E6Er 2  68               pla
001E6Fr 2  95 01            sta $01,x
001E71r 2               
001E71r 2               ; <inline>:0:0 in `main`
001E71r 2               @OPCODE_903:   ; [c64_ir] Drop
001E71r 2  CA               dex
001E72r 2  CA               dex
001E73r 2               
001E73r 2               ; <inline>:0:0 in `main`
001E73r 2               @OPCODE_904:   ; [c64_ir] PushLiteral(7777)
001E73r 2  E8               inx
001E74r 2  E8               inx
001E75r 2  A9 61            lda #97
001E77r 2  95 00            sta $00,x
001E79r 2  A9 1E            lda #30
001E7Br 2  95 01            sta $01,x
001E7Dr 2               
001E7Dr 2               ; <inline>:0:0 in `main`
001E7Dr 2               @OPCODE_905:   ; [c64_ir] AltPush
001E7Dr 2  CA               dex
001E7Er 2  CA               dex
001E7Fr 2  B5 03            lda $03,x
001E81r 2  48               pha
001E82r 2  B5 02            lda $02,x
001E84r 2  48               pha
001E85r 2               
001E85r 2               ; snake.pax:201:3 in `draw-apple`
001E85r 2               @OPCODE_906:   ; [c64_ir] PushLiteral(-26664)
001E85r 2  E8               inx
001E86r 2  E8               inx
001E87r 2  A9 D8            lda #216
001E89r 2  95 00            sta $00,x
001E8Br 2  A9 97            lda #151
001E8Dr 2  95 01            sta $01,x
001E8Fr 2               
001E8Fr 2               ; snake.pax:201:11 in `draw-apple`
001E8Fr 2               @OPCODE_907:   ; [c64_ir] Load
001E8Fr 2  A1 00            lda ($00,x)
001E91r 2  95 00            sta $00,x
001E93r 2  A9 00            lda #0
001E95r 2  95 01            sta $01,x
001E97r 2               
001E97r 2               ; snake.pax:201:13 in `draw-apple`
001E97r 2               @OPCODE_908:   ; [c64_ir] PushLiteral(-26662)
001E97r 2  E8               inx
001E98r 2  E8               inx
001E99r 2  A9 DA            lda #218
001E9Br 2  95 00            sta $00,x
001E9Dr 2  A9 97            lda #151
001E9Fr 2  95 01            sta $01,x
001EA1r 2               
001EA1r 2               ; snake.pax:201:21 in `draw-apple`
001EA1r 2               @OPCODE_909:   ; [c64_ir] Load
001EA1r 2  A1 00            lda ($00,x)
001EA3r 2  95 00            sta $00,x
001EA5r 2  A9 00            lda #0
001EA7r 2  95 01            sta $01,x
001EA9r 2               
001EA9r 2               ; <inline>:0:0 in `main`
001EA9r 2               @OPCODE_910:   ; [c64_ir] PushLiteral(7777)
001EA9r 2  E8               inx
001EAAr 2  E8               inx
001EABr 2  A9 61            lda #97
001EADr 2  95 00            sta $00,x
001EAFr 2  A9 1E            lda #30
001EB1r 2  95 01            sta $01,x
001EB3r 2               
001EB3r 2               ; <inline>:0:0 in `main`
001EB3r 2               @OPCODE_911:   ; [c64_ir] AltPush
001EB3r 2  CA               dex
001EB4r 2  CA               dex
001EB5r 2  B5 03            lda $03,x
001EB7r 2  48               pha
001EB8r 2  B5 02            lda $02,x
001EBAr 2  48               pha
001EBBr 2               
001EBBr 2               ; src/prelude.fth:3:10 in `swap`
001EBBr 2               @OPCODE_912:   ; [c64_ir] AltPush
001EBBr 2  CA               dex
001EBCr 2  CA               dex
001EBDr 2  B5 03            lda $03,x
001EBFr 2  48               pha
001EC0r 2  B5 02            lda $02,x
001EC2r 2  48               pha
001EC3r 2               
001EC3r 2               ; src/prelude.fth:3:13 in `swap`
001EC3r 2               @OPCODE_913:   ; [c64_ir] TempStore
001EC3r 2  CA               dex
001EC4r 2  CA               dex
001EC5r 2  B5 03            lda $03,x
001EC7r 2  85 96            sta TEMP_PAX2
001EC9r 2  B5 02            lda $02,x
001ECBr 2  85 95            sta TEMP_PAX1
001ECDr 2               
001ECDr 2               ; src/prelude.fth:3:19 in `swap`
001ECDr 2               @OPCODE_914:   ; [c64_ir] AltPop
001ECDr 2  E8               inx
001ECEr 2  E8               inx
001ECFr 2  68               pla
001ED0r 2  95 00            sta $00,x
001ED2r 2  68               pla
001ED3r 2  95 01            sta $01,x
001ED5r 2               
001ED5r 2               ; src/prelude.fth:3:22 in `swap`
001ED5r 2               @OPCODE_915:   ; [c64_ir] TempLoad
001ED5r 2  E8               inx
001ED6r 2  E8               inx
001ED7r 2  A5 95            lda TEMP_PAX1
001ED9r 2  95 00            sta $00,x
001EDBr 2  A5 96            lda TEMP_PAX2
001EDDr 2  95 01            sta $01,x
001EDFr 2               
001EDFr 2               ; src/prelude.fth:3:13 in `swap`
001EDFr 2               @OPCODE_916:   ; [c64_ir] TempStore
001EDFr 2  CA               dex
001EE0r 2  CA               dex
001EE1r 2  B5 03            lda $03,x
001EE3r 2  85 96            sta TEMP_PAX2
001EE5r 2  B5 02            lda $02,x
001EE7r 2  85 95            sta TEMP_PAX1
001EE9r 2               
001EE9r 2               ; src/prelude.fth:3:22 in `swap`
001EE9r 2               @OPCODE_917:   ; [c64_ir] TempLoad
001EE9r 2  E8               inx
001EEAr 2  E8               inx
001EEBr 2  A5 95            lda TEMP_PAX1
001EEDr 2  95 00            sta $00,x
001EEFr 2  A5 96            lda TEMP_PAX2
001EF1r 2  95 01            sta $01,x
001EF3r 2               
001EF3r 2               ; src/prelude.fth:5:10 in `rot`
001EF3r 2               @OPCODE_918:   ; [c64_ir] AltPush
001EF3r 2  CA               dex
001EF4r 2  CA               dex
001EF5r 2  B5 03            lda $03,x
001EF7r 2  48               pha
001EF8r 2  B5 02            lda $02,x
001EFAr 2  48               pha
001EFBr 2               
001EFBr 2               ; src/prelude.fth:3:13 in `swap`
001EFBr 2               @OPCODE_919:   ; [c64_ir] TempStore
001EFBr 2  CA               dex
001EFCr 2  CA               dex
001EFDr 2  B5 03            lda $03,x
001EFFr 2  85 96            sta TEMP_PAX2
001F01r 2  B5 02            lda $02,x
001F03r 2  85 95            sta TEMP_PAX1
001F05r 2               
001F05r 2               ; src/prelude.fth:3:19 in `swap`
001F05r 2               @OPCODE_920:   ; [c64_ir] PushLiteral(233)
001F05r 2  E8               inx
001F06r 2  E8               inx
001F07r 2  A9 E9            lda #233
001F09r 2  95 00            sta $00,x
001F0Br 2  A9 00            lda #0
001F0Dr 2  95 01            sta $01,x
001F0Fr 2               
001F0Fr 2               ; src/prelude.fth:3:22 in `swap`
001F0Fr 2               @OPCODE_921:   ; [c64_ir] TempLoad
001F0Fr 2  E8               inx
001F10r 2  E8               inx
001F11r 2  A5 95            lda TEMP_PAX1
001F13r 2  95 00            sta $00,x
001F15r 2  A5 96            lda TEMP_PAX2
001F17r 2  95 01            sta $01,x
001F19r 2               
001F19r 2               ; src/prelude.fth:5:18 in `rot`
001F19r 2               @OPCODE_922:   ; [c64_ir] AltPop
001F19r 2  E8               inx
001F1Ar 2  E8               inx
001F1Br 2  68               pla
001F1Cr 2  95 00            sta $00,x
001F1Er 2  68               pla
001F1Fr 2  95 01            sta $01,x
001F21r 2               
001F21r 2               ; src/prelude.fth:3:10 in `swap`
001F21r 2               @OPCODE_923:   ; [c64_ir] AltPush
001F21r 2  CA               dex
001F22r 2  CA               dex
001F23r 2  B5 03            lda $03,x
001F25r 2  48               pha
001F26r 2  B5 02            lda $02,x
001F28r 2  48               pha
001F29r 2               
001F29r 2               ; src/prelude.fth:3:13 in `swap`
001F29r 2               @OPCODE_924:   ; [c64_ir] TempStore
001F29r 2  CA               dex
001F2Ar 2  CA               dex
001F2Br 2  B5 03            lda $03,x
001F2Dr 2  85 96            sta TEMP_PAX2
001F2Fr 2  B5 02            lda $02,x
001F31r 2  85 95            sta TEMP_PAX1
001F33r 2               
001F33r 2               ; src/prelude.fth:3:19 in `swap`
001F33r 2               @OPCODE_925:   ; [c64_ir] AltPop
001F33r 2  E8               inx
001F34r 2  E8               inx
001F35r 2  68               pla
001F36r 2  95 00            sta $00,x
001F38r 2  68               pla
001F39r 2  95 01            sta $01,x
001F3Br 2               
001F3Br 2               ; src/prelude.fth:3:22 in `swap`
001F3Br 2               @OPCODE_926:   ; [c64_ir] TempLoad
001F3Br 2  E8               inx
001F3Cr 2  E8               inx
001F3Dr 2  A5 95            lda TEMP_PAX1
001F3Fr 2  95 00            sta $00,x
001F41r 2  A5 96            lda TEMP_PAX2
001F43r 2  95 01            sta $01,x
001F45r 2               
001F45r 2               ; <inline>:0:0 in `main`
001F45r 2               @OPCODE_927:   ; [c64_ir] PushLiteral(7777)
001F45r 2  E8               inx
001F46r 2  E8               inx
001F47r 2  A9 61            lda #97
001F49r 2  95 00            sta $00,x
001F4Br 2  A9 1E            lda #30
001F4Dr 2  95 01            sta $01,x
001F4Fr 2               
001F4Fr 2               ; <inline>:0:0 in `main`
001F4Fr 2               @OPCODE_928:   ; [c64_ir] AltPush
001F4Fr 2  CA               dex
001F50r 2  CA               dex
001F51r 2  B5 03            lda $03,x
001F53r 2  48               pha
001F54r 2  B5 02            lda $02,x
001F56r 2  48               pha
001F57r 2               
001F57r 2               ; <inline>:0:0 in `main`
001F57r 2               @OPCODE_929:   ; [c64_ir] PushLiteral(7777)
001F57r 2  E8               inx
001F58r 2  E8               inx
001F59r 2  A9 61            lda #97
001F5Br 2  95 00            sta $00,x
001F5Dr 2  A9 1E            lda #30
001F5Fr 2  95 01            sta $01,x
001F61r 2               
001F61r 2               ; <inline>:0:0 in `main`
001F61r 2               @OPCODE_930:   ; [c64_ir] AltPush
001F61r 2  CA               dex
001F62r 2  CA               dex
001F63r 2  B5 03            lda $03,x
001F65r 2  48               pha
001F66r 2  B5 02            lda $02,x
001F68r 2  48               pha
001F69r 2               
001F69r 2               ; <inline>:0:0 in `main`
001F69r 2               @OPCODE_931:   ; [c64_ir] PushLiteral(7777)
001F69r 2  E8               inx
001F6Ar 2  E8               inx
001F6Br 2  A9 61            lda #97
001F6Dr 2  95 00            sta $00,x
001F6Fr 2  A9 1E            lda #30
001F71r 2  95 01            sta $01,x
001F73r 2               
001F73r 2               ; <inline>:0:0 in `main`
001F73r 2               @OPCODE_932:   ; [c64_ir] AltPush
001F73r 2  CA               dex
001F74r 2  CA               dex
001F75r 2  B5 03            lda $03,x
001F77r 2  48               pha
001F78r 2  B5 02            lda $02,x
001F7Ar 2  48               pha
001F7Br 2               
001F7Br 2               ; src/prelude.fth:44:8 in `*`
001F7Br 2               @OPCODE_933:   ; [c64_ir] PushLiteral(0)
001F7Br 2  E8               inx
001F7Cr 2  E8               inx
001F7Dr 2  A9 00            lda #0
001F7Fr 2  95 00            sta $00,x
001F81r 2  A9 00            lda #0
001F83r 2  95 01            sta $01,x
001F85r 2               
001F85r 2               ; src/prelude.fth:44:10 in `*`
001F85r 2               @OPCODE_934:   ; [c64_ir] PushLiteral(40)
001F85r 2  E8               inx
001F86r 2  E8               inx
001F87r 2  A9 28            lda #40
001F89r 2  95 00            sta $00,x
001F8Br 2  A9 00            lda #0
001F8Dr 2  95 01            sta $01,x
001F8Fr 2               
001F8Fr 2               ; src/prelude.fth:44:13 in `*`
001F8Fr 2               @OPCODE_935:   ; [c64_ir] PushLiteral(0)
001F8Fr 2  E8               inx
001F90r 2  E8               inx
001F91r 2  A9 00            lda #0
001F93r 2  95 00            sta $00,x
001F95r 2  A9 00            lda #0
001F97r 2  95 01            sta $01,x
001F99r 2               
001F99r 2               ; src/prelude.fth:44:15 in `*`
001F99r 2               @OPCODE_936:   ; [c64_ir] AltPush
001F99r 2  CA               dex
001F9Ar 2  CA               dex
001F9Br 2  B5 03            lda $03,x
001F9Dr 2  48               pha
001F9Er 2  B5 02            lda $02,x
001FA0r 2  48               pha
001FA1r 2               
001FA1r 2               ; src/prelude.fth:44:15 in `*`
001FA1r 2               @OPCODE_937:   ; [c64_ir] AltPush
001FA1r 2  CA               dex
001FA2r 2  CA               dex
001FA3r 2  B5 03            lda $03,x
001FA5r 2  48               pha
001FA6r 2  B5 02            lda $02,x
001FA8r 2  48               pha
001FA9r 2               
001FA9r 2               ; src/prelude.fth:44:15 in `*`
001FA9r 2               @OPCODE_938:   ; [c64_ir] LoopTarget(65)
001FA9r 2               
001FA9r 2               @target_66:
001FA9r 2               
001FA9r 2               ; src/prelude.fth:4:10 in `over`
001FA9r 2               @OPCODE_940:   ; [c64_ir] AltPush
001FA9r 2  CA               dex
001FAAr 2  CA               dex
001FABr 2  B5 03            lda $03,x
001FADr 2  48               pha
001FAEr 2  B5 02            lda $02,x
001FB0r 2  48               pha
001FB1r 2               
001FB1r 2               ; src/prelude.fth:4:13 in `over`
001FB1r 2               @OPCODE_941:   ; [c64_ir] TempStore
001FB1r 2  CA               dex
001FB2r 2  CA               dex
001FB3r 2  B5 03            lda $03,x
001FB5r 2  85 96            sta TEMP_PAX2
001FB7r 2  B5 02            lda $02,x
001FB9r 2  85 95            sta TEMP_PAX1
001FBBr 2               
001FBBr 2               ; src/prelude.fth:4:19 in `over`
001FBBr 2               @OPCODE_942:   ; [c64_ir] TempLoad
001FBBr 2  E8               inx
001FBCr 2  E8               inx
001FBDr 2  A5 95            lda TEMP_PAX1
001FBFr 2  95 00            sta $00,x
001FC1r 2  A5 96            lda TEMP_PAX2
001FC3r 2  95 01            sta $01,x
001FC5r 2               
001FC5r 2               ; src/prelude.fth:4:25 in `over`
001FC5r 2               @OPCODE_943:   ; [c64_ir] AltPop
001FC5r 2  E8               inx
001FC6r 2  E8               inx
001FC7r 2  68               pla
001FC8r 2  95 00            sta $00,x
001FCAr 2  68               pla
001FCBr 2  95 01            sta $01,x
001FCDr 2               
001FCDr 2               ; src/prelude.fth:4:28 in `over`
001FCDr 2               @OPCODE_944:   ; [c64_ir] TempLoad
001FCDr 2  E8               inx
001FCEr 2  E8               inx
001FCFr 2  A5 95            lda TEMP_PAX1
001FD1r 2  95 00            sta $00,x
001FD3r 2  A5 96            lda TEMP_PAX2
001FD5r 2  95 01            sta $01,x
001FD7r 2               
001FD7r 2               ; src/prelude.fth:44:23 in `*`
001FD7r 2               @OPCODE_945:   ; [c64_ir] Add
001FD7r 2                   ; 21
001FD7r 2  CA               dex
001FD8r 2  CA               dex
001FD9r 2  18               clc
001FDAr 2  B5 00            lda $00,x
001FDCr 2  75 02            adc $02,x
001FDEr 2  95 00            sta $00,x
001FE0r 2  B5 01            lda $01,x
001FE2r 2  75 03            adc $03,x
001FE4r 2  95 01            sta $01,x
001FE6r 2               
001FE6r 2               ; src/prelude.fth:33:15 in `loopimpl`
001FE6r 2               @OPCODE_946:   ; [c64_ir] AltPop
001FE6r 2  E8               inx
001FE7r 2  E8               inx
001FE8r 2  68               pla
001FE9r 2  95 00            sta $00,x
001FEBr 2  68               pla
001FECr 2  95 01            sta $01,x
001FEEr 2               
001FEEr 2               ; src/prelude.fth:33:18 in `loopimpl`
001FEEr 2               @OPCODE_947:   ; [c64_ir] AltPop
001FEEr 2  E8               inx
001FEFr 2  E8               inx
001FF0r 2  68               pla
001FF1r 2  95 00            sta $00,x
001FF3r 2  68               pla
001FF4r 2  95 01            sta $01,x
001FF6r 2               
001FF6r 2               ; src/prelude.fth:18:8 in `1+`
001FF6r 2               @OPCODE_948:   ; [c64_ir] PushLiteral(1)
001FF6r 2  E8               inx
001FF7r 2  E8               inx
001FF8r 2  A9 01            lda #1
001FFAr 2  95 00            sta $00,x
001FFCr 2  A9 00            lda #0
001FFEr 2  95 01            sta $01,x
002000r 2               
002000r 2               ; src/prelude.fth:18:10 in `1+`
002000r 2               @OPCODE_949:   ; [c64_ir] Add
002000r 2                   ; 21
002000r 2  CA               dex
002001r 2  CA               dex
002002r 2  18               clc
002003r 2  B5 00            lda $00,x
002005r 2  75 02            adc $02,x
002007r 2  95 00            sta $00,x
002009r 2  B5 01            lda $01,x
00200Br 2  75 03            adc $03,x
00200Dr 2  95 01            sta $01,x
00200Fr 2               
00200Fr 2               ; src/prelude.fth:4:10 in `over`
00200Fr 2               @OPCODE_950:   ; [c64_ir] AltPush
00200Fr 2  CA               dex
002010r 2  CA               dex
002011r 2  B5 03            lda $03,x
002013r 2  48               pha
002014r 2  B5 02            lda $02,x
002016r 2  48               pha
002017r 2               
002017r 2               ; src/prelude.fth:4:13 in `over`
002017r 2               @OPCODE_951:   ; [c64_ir] TempStore
002017r 2  CA               dex
002018r 2  CA               dex
002019r 2  B5 03            lda $03,x
00201Br 2  85 96            sta TEMP_PAX2
00201Dr 2  B5 02            lda $02,x
00201Fr 2  85 95            sta TEMP_PAX1
002021r 2               
002021r 2               ; src/prelude.fth:4:19 in `over`
002021r 2               @OPCODE_952:   ; [c64_ir] TempLoad
002021r 2  E8               inx
002022r 2  E8               inx
002023r 2  A5 95            lda TEMP_PAX1
002025r 2  95 00            sta $00,x
002027r 2  A5 96            lda TEMP_PAX2
002029r 2  95 01            sta $01,x
00202Br 2               
00202Br 2               ; src/prelude.fth:4:25 in `over`
00202Br 2               @OPCODE_953:   ; [c64_ir] AltPop
00202Br 2  E8               inx
00202Cr 2  E8               inx
00202Dr 2  68               pla
00202Er 2  95 00            sta $00,x
002030r 2  68               pla
002031r 2  95 01            sta $01,x
002033r 2               
002033r 2               ; src/prelude.fth:4:28 in `over`
002033r 2               @OPCODE_954:   ; [c64_ir] TempLoad
002033r 2  E8               inx
002034r 2  E8               inx
002035r 2  A5 95            lda TEMP_PAX1
002037r 2  95 00            sta $00,x
002039r 2  A5 96            lda TEMP_PAX2
00203Br 2  95 01            sta $01,x
00203Dr 2               
00203Dr 2               ; src/prelude.fth:4:10 in `over`
00203Dr 2               @OPCODE_955:   ; [c64_ir] AltPush
00203Dr 2  CA               dex
00203Er 2  CA               dex
00203Fr 2  B5 03            lda $03,x
002041r 2  48               pha
002042r 2  B5 02            lda $02,x
002044r 2  48               pha
002045r 2               
002045r 2               ; src/prelude.fth:4:13 in `over`
002045r 2               @OPCODE_956:   ; [c64_ir] TempStore
002045r 2  CA               dex
002046r 2  CA               dex
002047r 2  B5 03            lda $03,x
002049r 2  85 96            sta TEMP_PAX2
00204Br 2  B5 02            lda $02,x
00204Dr 2  85 95            sta TEMP_PAX1
00204Fr 2               
00204Fr 2               ; src/prelude.fth:4:19 in `over`
00204Fr 2               @OPCODE_957:   ; [c64_ir] TempLoad
00204Fr 2  E8               inx
002050r 2  E8               inx
002051r 2  A5 95            lda TEMP_PAX1
002053r 2  95 00            sta $00,x
002055r 2  A5 96            lda TEMP_PAX2
002057r 2  95 01            sta $01,x
002059r 2               
002059r 2               ; src/prelude.fth:4:25 in `over`
002059r 2               @OPCODE_958:   ; [c64_ir] AltPop
002059r 2  E8               inx
00205Ar 2  E8               inx
00205Br 2  68               pla
00205Cr 2  95 00            sta $00,x
00205Er 2  68               pla
00205Fr 2  95 01            sta $01,x
002061r 2               
002061r 2               ; src/prelude.fth:4:28 in `over`
002061r 2               @OPCODE_959:   ; [c64_ir] TempLoad
002061r 2  E8               inx
002062r 2  E8               inx
002063r 2  A5 95            lda TEMP_PAX1
002065r 2  95 00            sta $00,x
002067r 2  A5 96            lda TEMP_PAX2
002069r 2  95 01            sta $01,x
00206Br 2               
00206Br 2               ; src/prelude.fth:33:29 in `loopimpl`
00206Br 2               @OPCODE_960:   ; [c64_ir] AltPush
00206Br 2  CA               dex
00206Cr 2  CA               dex
00206Dr 2  B5 03            lda $03,x
00206Fr 2  48               pha
002070r 2  B5 02            lda $02,x
002072r 2  48               pha
002073r 2               
002073r 2               ; src/prelude.fth:33:32 in `loopimpl`
002073r 2               @OPCODE_961:   ; [c64_ir] AltPush
002073r 2  CA               dex
002074r 2  CA               dex
002075r 2  B5 03            lda $03,x
002077r 2  48               pha
002078r 2  B5 02            lda $02,x
00207Ar 2  48               pha
00207Br 2               
00207Br 2               ; src/prelude.fth:14:12 in `invert`
00207Br 2               @OPCODE_962:   ; [c64_ir] PushLiteral(-1)
00207Br 2  E8               inx
00207Cr 2  E8               inx
00207Dr 2  A9 FF            lda #255
00207Fr 2  95 00            sta $00,x
002081r 2  A9 FF            lda #255
002083r 2  95 01            sta $01,x
002085r 2               
002085r 2               ; src/prelude.fth:14:15 in `invert`
002085r 2               @OPCODE_963:   ; [c64_ir] Nand
002085r 2                   ; 26
002085r 2  CA               dex
002086r 2  CA               dex
002087r 2  B5 00            lda $00,x
002089r 2  35 02            and $02,x
00208Br 2  49 FF            eor #$ff
00208Dr 2  95 00            sta $00,x
00208Fr 2  B5 01            lda $01,x
002091r 2  35 03            and $03,x
002093r 2  49 FF            eor #$ff
002095r 2  95 01            sta $01,x
002097r 2               
002097r 2               ; src/prelude.fth:15:19 in `negate`
002097r 2               @OPCODE_964:   ; [c64_ir] PushLiteral(1)
002097r 2  E8               inx
002098r 2  E8               inx
002099r 2  A9 01            lda #1
00209Br 2  95 00            sta $00,x
00209Dr 2  A9 00            lda #0
00209Fr 2  95 01            sta $01,x
0020A1r 2               
0020A1r 2               ; src/prelude.fth:15:21 in `negate`
0020A1r 2               @OPCODE_965:   ; [c64_ir] Add
0020A1r 2                   ; 21
0020A1r 2  CA               dex
0020A2r 2  CA               dex
0020A3r 2  18               clc
0020A4r 2  B5 00            lda $00,x
0020A6r 2  75 02            adc $02,x
0020A8r 2  95 00            sta $00,x
0020AAr 2  B5 01            lda $01,x
0020ACr 2  75 03            adc $03,x
0020AEr 2  95 01            sta $01,x
0020B0r 2               
0020B0r 2               ; src/prelude.fth:16:19 in `-`
0020B0r 2               @OPCODE_966:   ; [c64_ir] Add
0020B0r 2                   ; 21
0020B0r 2  CA               dex
0020B1r 2  CA               dex
0020B2r 2  18               clc
0020B3r 2  B5 00            lda $00,x
0020B5r 2  75 02            adc $02,x
0020B7r 2  95 00            sta $00,x
0020B9r 2  B5 01            lda $01,x
0020BBr 2  75 03            adc $03,x
0020BDr 2  95 01            sta $01,x
0020BFr 2               
0020BFr 2               ; src/prelude.fth:21:8 in `0=`
0020BFr 2               @OPCODE_967:   ; [c64_ir] JumpIf0(68)
0020BFr 2  CA               dex
0020C0r 2  CA               dex
0020C1r 2  B5 02            lda $02,x
0020C3r 2  15 03            ora $03,x
0020C5r 2  D0 03            bne *+5
0020C7r 2  4C rr rr         jmp @target_68
0020CAr 2               
0020CAr 2               @target_67:
0020CAr 2               
0020CAr 2               ; src/prelude.fth:21:11 in `0=`
0020CAr 2               @OPCODE_969:   ; [c64_ir] PushLiteral(0)
0020CAr 2  E8               inx
0020CBr 2  E8               inx
0020CCr 2  A9 00            lda #0
0020CEr 2  95 00            sta $00,x
0020D0r 2  A9 00            lda #0
0020D2r 2  95 01            sta $01,x
0020D4r 2               
0020D4r 2               ; src/prelude.fth:21:13 in `0=`
0020D4r 2               @OPCODE_970:   ; [c64_ir] JumpElse(69)
0020D4r 2  4C rr rr         jmp @target_69
0020D7r 2               
0020D7r 2               @target_68:
0020D7r 2               
0020D7r 2               ; src/prelude.fth:21:18 in `0=`
0020D7r 2               @OPCODE_972:   ; [c64_ir] PushLiteral(-1)
0020D7r 2  E8               inx
0020D8r 2  E8               inx
0020D9r 2  A9 FF            lda #255
0020DBr 2  95 00            sta $00,x
0020DDr 2  A9 FF            lda #255
0020DFr 2  95 01            sta $01,x
0020E1r 2               
0020E1r 2               ; src/prelude.fth:21:21 in `0=`
0020E1r 2               @OPCODE_973:   ; [c64_ir] JumpTarget(68)
0020E1r 2               
0020E1r 2               @target_69:
0020E1r 2               
0020E1r 2               ; src/prelude.fth:3:10 in `swap`
0020E1r 2               @OPCODE_975:   ; [c64_ir] AltPush
0020E1r 2  CA               dex
0020E2r 2  CA               dex
0020E3r 2  B5 03            lda $03,x
0020E5r 2  48               pha
0020E6r 2  B5 02            lda $02,x
0020E8r 2  48               pha
0020E9r 2               
0020E9r 2               ; src/prelude.fth:3:19 in `swap`
0020E9r 2               @OPCODE_976:   ; [c64_ir] AltPop
0020E9r 2  E8               inx
0020EAr 2  E8               inx
0020EBr 2  68               pla
0020ECr 2  95 00            sta $00,x
0020EEr 2  68               pla
0020EFr 2  95 01            sta $01,x
0020F1r 2               
0020F1r 2               ; src/prelude.fth:44:25 in `*`
0020F1r 2               @OPCODE_977:   ; [c64_ir] LoopIf0(66)
0020F1r 2  CA               dex
0020F2r 2  CA               dex
0020F3r 2  B5 02            lda $02,x
0020F5r 2  15 03            ora $03,x
0020F7r 2  D0 03            bne *+5
0020F9r 2  4C rr rr         jmp @target_66
0020FCr 2               
0020FCr 2               @target_70:
0020FCr 2               
0020FCr 2               ; src/prelude.fth:44:25 in `*`
0020FCr 2               @OPCODE_979:   ; [c64_ir] AltPop
0020FCr 2  E8               inx
0020FDr 2  E8               inx
0020FEr 2  68               pla
0020FFr 2  95 00            sta $00,x
002101r 2  68               pla
002102r 2  95 01            sta $01,x
002104r 2               
002104r 2               ; src/prelude.fth:44:25 in `*`
002104r 2               @OPCODE_980:   ; [c64_ir] Drop
002104r 2  CA               dex
002105r 2  CA               dex
002106r 2               
002106r 2               ; src/prelude.fth:44:25 in `*`
002106r 2               @OPCODE_981:   ; [c64_ir] AltPop
002106r 2  E8               inx
002107r 2  E8               inx
002108r 2  68               pla
002109r 2  95 00            sta $00,x
00210Br 2  68               pla
00210Cr 2  95 01            sta $01,x
00210Er 2               
00210Er 2               ; src/prelude.fth:44:25 in `*`
00210Er 2               @OPCODE_982:   ; [c64_ir] Drop
00210Er 2  CA               dex
00210Fr 2  CA               dex
002110r 2               
002110r 2               ; src/prelude.fth:3:10 in `swap`
002110r 2               @OPCODE_983:   ; [c64_ir] AltPush
002110r 2  CA               dex
002111r 2  CA               dex
002112r 2  B5 03            lda $03,x
002114r 2  48               pha
002115r 2  B5 02            lda $02,x
002117r 2  48               pha
002118r 2               
002118r 2               ; src/prelude.fth:3:13 in `swap`
002118r 2               @OPCODE_984:   ; [c64_ir] TempStore
002118r 2  CA               dex
002119r 2  CA               dex
00211Ar 2  B5 03            lda $03,x
00211Cr 2  85 96            sta TEMP_PAX2
00211Er 2  B5 02            lda $02,x
002120r 2  85 95            sta TEMP_PAX1
002122r 2               
002122r 2               ; src/prelude.fth:3:19 in `swap`
002122r 2               @OPCODE_985:   ; [c64_ir] AltPop
002122r 2  E8               inx
002123r 2  E8               inx
002124r 2  68               pla
002125r 2  95 00            sta $00,x
002127r 2  68               pla
002128r 2  95 01            sta $01,x
00212Ar 2               
00212Ar 2               ; <inline>:0:0 in `main`
00212Ar 2               @OPCODE_986:   ; [c64_ir] AltPop
00212Ar 2  E8               inx
00212Br 2  E8               inx
00212Cr 2  68               pla
00212Dr 2  95 00            sta $00,x
00212Fr 2  68               pla
002130r 2  95 01            sta $01,x
002132r 2               
002132r 2               ; <inline>:0:0 in `main`
002132r 2               @OPCODE_987:   ; [c64_ir] Drop
002132r 2  CA               dex
002133r 2  CA               dex
002134r 2               
002134r 2               ; snake.pax:48:39 in `convert-x-y`
002134r 2               @OPCODE_988:   ; [c64_ir] Add
002134r 2                   ; 21
002134r 2  CA               dex
002135r 2  CA               dex
002136r 2  18               clc
002137r 2  B5 00            lda $00,x
002139r 2  75 02            adc $02,x
00213Br 2  95 00            sta $00,x
00213Dr 2  B5 01            lda $01,x
00213Fr 2  75 03            adc $03,x
002141r 2  95 01            sta $01,x
002143r 2               
002143r 2               ; <inline>:0:0 in `main`
002143r 2               @OPCODE_989:   ; [c64_ir] AltPop
002143r 2  E8               inx
002144r 2  E8               inx
002145r 2  68               pla
002146r 2  95 00            sta $00,x
002148r 2  68               pla
002149r 2  95 01            sta $01,x
00214Br 2               
00214Br 2               ; <inline>:0:0 in `main`
00214Br 2               @OPCODE_990:   ; [c64_ir] Drop
00214Br 2  CA               dex
00214Cr 2  CA               dex
00214Dr 2               
00214Dr 2               ; snake.pax:49:34 in `draw-index`
00214Dr 2               @OPCODE_991:   ; [c64_ir] PushLiteral(1024)
00214Dr 2  E8               inx
00214Er 2  E8               inx
00214Fr 2  A9 00            lda #0
002151r 2  95 00            sta $00,x
002153r 2  A9 04            lda #4
002155r 2  95 01            sta $01,x
002157r 2               
002157r 2               ; snake.pax:49:43 in `draw-index`
002157r 2               @OPCODE_992:   ; [c64_ir] Add
002157r 2                   ; 21
002157r 2  CA               dex
002158r 2  CA               dex
002159r 2  18               clc
00215Ar 2  B5 00            lda $00,x
00215Cr 2  75 02            adc $02,x
00215Er 2  95 00            sta $00,x
002160r 2  B5 01            lda $01,x
002162r 2  75 03            adc $03,x
002164r 2  95 01            sta $01,x
002166r 2               
002166r 2               ; snake.pax:49:45 in `draw-index`
002166r 2               @OPCODE_993:   ; [c64_ir] Store8
002166r 2  CA               dex
002167r 2  CA               dex
002168r 2  CA               dex
002169r 2  CA               dex
00216Ar 2  B5 02            lda $02,x
00216Cr 2  81 04            sta ($04,x)
00216Er 2                   ; TODO high byte
00216Er 2               
00216Er 2               ; <inline>:0:0 in `main`
00216Er 2               @OPCODE_994:   ; [c64_ir] AltPop
00216Er 2  E8               inx
00216Fr 2  E8               inx
002170r 2  68               pla
002171r 2  95 00            sta $00,x
002173r 2  68               pla
002174r 2  95 01            sta $01,x
002176r 2               
002176r 2               ; <inline>:0:0 in `main`
002176r 2               @OPCODE_995:   ; [c64_ir] Drop
002176r 2  CA               dex
002177r 2  CA               dex
002178r 2               
002178r 2               ; <inline>:0:0 in `main`
002178r 2               @OPCODE_996:   ; [c64_ir] AltPop
002178r 2  E8               inx
002179r 2  E8               inx
00217Ar 2  68               pla
00217Br 2  95 00            sta $00,x
00217Dr 2  68               pla
00217Er 2  95 01            sta $01,x
002180r 2               
002180r 2               ; <inline>:0:0 in `main`
002180r 2               @OPCODE_997:   ; [c64_ir] Drop
002180r 2  CA               dex
002181r 2  CA               dex
002182r 2               
002182r 2               ; <inline>:0:0 in `main`
002182r 2               @OPCODE_998:   ; [c64_ir] AltPop
002182r 2  E8               inx
002183r 2  E8               inx
002184r 2  68               pla
002185r 2  95 00            sta $00,x
002187r 2  68               pla
002188r 2  95 01            sta $01,x
00218Ar 2               
00218Ar 2               ; <inline>:0:0 in `main`
00218Ar 2               @OPCODE_999:   ; [c64_ir] Drop
00218Ar 2  CA               dex
00218Br 2  CA               dex
00218Cr 2               
00218Cr 2               ; <inline>:0:0 in `main`
00218Cr 2               @OPCODE_1000:   ; [c64_ir] PushLiteral(7777)
00218Cr 2  E8               inx
00218Dr 2  E8               inx
00218Er 2  A9 61            lda #97
002190r 2  95 00            sta $00,x
002192r 2  A9 1E            lda #30
002194r 2  95 01            sta $01,x
002196r 2               
002196r 2               ; <inline>:0:0 in `main`
002196r 2               @OPCODE_1001:   ; [c64_ir] AltPush
002196r 2  CA               dex
002197r 2  CA               dex
002198r 2  B5 03            lda $03,x
00219Ar 2  48               pha
00219Br 2  B5 02            lda $02,x
00219Dr 2  48               pha
00219Er 2               
00219Er 2               ; snake.pax:160:3 in `check-input`
00219Er 2               @OPCODE_1002:   ; [c64_ir] PushLiteral(126)
00219Er 2  E8               inx
00219Fr 2  E8               inx
0021A0r 2  A9 7E            lda #126
0021A2r 2  95 00            sta $00,x
0021A4r 2  A9 00            lda #0
0021A6r 2  95 01            sta $01,x
0021A8r 2               
0021A8r 2               ; snake.pax:160:12 in `check-input`
0021A8r 2               @OPCODE_1003:   ; [c64_ir] Load
0021A8r 2  A1 00            lda ($00,x)
0021AAr 2  95 00            sta $00,x
0021ACr 2  A9 00            lda #0
0021AEr 2  95 01            sta $01,x
0021B0r 2               
0021B0r 2               ; <inline>:0:0 in `main`
0021B0r 2               @OPCODE_1004:   ; [c64_ir] PushLiteral(7777)
0021B0r 2  E8               inx
0021B1r 2  E8               inx
0021B2r 2  A9 61            lda #97
0021B4r 2  95 00            sta $00,x
0021B6r 2  A9 1E            lda #30
0021B8r 2  95 01            sta $01,x
0021BAr 2               
0021BAr 2               ; <inline>:0:0 in `main`
0021BAr 2               @OPCODE_1005:   ; [c64_ir] AltPush
0021BAr 2  CA               dex
0021BBr 2  CA               dex
0021BCr 2  B5 03            lda $03,x
0021BEr 2  48               pha
0021BFr 2  B5 02            lda $02,x
0021C1r 2  48               pha
0021C2r 2               
0021C2r 2               ; src/prelude.fth:4:13 in `over`
0021C2r 2               @OPCODE_1006:   ; [c64_ir] TempStore
0021C2r 2  CA               dex
0021C3r 2  CA               dex
0021C4r 2  B5 03            lda $03,x
0021C6r 2  85 96            sta TEMP_PAX2
0021C8r 2  B5 02            lda $02,x
0021CAr 2  85 95            sta TEMP_PAX1
0021CCr 2               
0021CCr 2               ; src/prelude.fth:4:19 in `over`
0021CCr 2               @OPCODE_1007:   ; [c64_ir] TempLoad
0021CCr 2  E8               inx
0021CDr 2  E8               inx
0021CEr 2  A5 95            lda TEMP_PAX1
0021D0r 2  95 00            sta $00,x
0021D2r 2  A5 96            lda TEMP_PAX2
0021D4r 2  95 01            sta $01,x
0021D6r 2               
0021D6r 2               ; src/prelude.fth:4:25 in `over`
0021D6r 2               @OPCODE_1008:   ; [c64_ir] PushLiteral(37)
0021D6r 2  E8               inx
0021D7r 2  E8               inx
0021D8r 2  A9 25            lda #37
0021DAr 2  95 00            sta $00,x
0021DCr 2  A9 00            lda #0
0021DEr 2  95 01            sta $01,x
0021E0r 2               
0021E0r 2               ; src/prelude.fth:4:28 in `over`
0021E0r 2               @OPCODE_1009:   ; [c64_ir] TempLoad
0021E0r 2  E8               inx
0021E1r 2  E8               inx
0021E2r 2  A5 95            lda TEMP_PAX1
0021E4r 2  95 00            sta $00,x
0021E6r 2  A5 96            lda TEMP_PAX2
0021E8r 2  95 01            sta $01,x
0021EAr 2               
0021EAr 2               ; src/prelude.fth:14:12 in `invert`
0021EAr 2               @OPCODE_1010:   ; [c64_ir] PushLiteral(-1)
0021EAr 2  E8               inx
0021EBr 2  E8               inx
0021ECr 2  A9 FF            lda #255
0021EEr 2  95 00            sta $00,x
0021F0r 2  A9 FF            lda #255
0021F2r 2  95 01            sta $01,x
0021F4r 2               
0021F4r 2               ; src/prelude.fth:14:15 in `invert`
0021F4r 2               @OPCODE_1011:   ; [c64_ir] Nand
0021F4r 2                   ; 26
0021F4r 2  CA               dex
0021F5r 2  CA               dex
0021F6r 2  B5 00            lda $00,x
0021F8r 2  35 02            and $02,x
0021FAr 2  49 FF            eor #$ff
0021FCr 2  95 00            sta $00,x
0021FEr 2  B5 01            lda $01,x
002200r 2  35 03            and $03,x
002202r 2  49 FF            eor #$ff
002204r 2  95 01            sta $01,x
002206r 2               
002206r 2               ; src/prelude.fth:15:19 in `negate`
002206r 2               @OPCODE_1012:   ; [c64_ir] PushLiteral(1)
002206r 2  E8               inx
002207r 2  E8               inx
002208r 2  A9 01            lda #1
00220Ar 2  95 00            sta $00,x
00220Cr 2  A9 00            lda #0
00220Er 2  95 01            sta $01,x
002210r 2               
002210r 2               ; src/prelude.fth:15:21 in `negate`
002210r 2               @OPCODE_1013:   ; [c64_ir] Add
002210r 2                   ; 21
002210r 2  CA               dex
002211r 2  CA               dex
002212r 2  18               clc
002213r 2  B5 00            lda $00,x
002215r 2  75 02            adc $02,x
002217r 2  95 00            sta $00,x
002219r 2  B5 01            lda $01,x
00221Br 2  75 03            adc $03,x
00221Dr 2  95 01            sta $01,x
00221Fr 2               
00221Fr 2               ; src/prelude.fth:16:19 in `-`
00221Fr 2               @OPCODE_1014:   ; [c64_ir] Add
00221Fr 2                   ; 21
00221Fr 2  CA               dex
002220r 2  CA               dex
002221r 2  18               clc
002222r 2  B5 00            lda $00,x
002224r 2  75 02            adc $02,x
002226r 2  95 00            sta $00,x
002228r 2  B5 01            lda $01,x
00222Ar 2  75 03            adc $03,x
00222Cr 2  95 01            sta $01,x
00222Er 2               
00222Er 2               ; src/prelude.fth:21:8 in `0=`
00222Er 2               @OPCODE_1015:   ; [c64_ir] JumpIf0(72)
00222Er 2  CA               dex
00222Fr 2  CA               dex
002230r 2  B5 02            lda $02,x
002232r 2  15 03            ora $03,x
002234r 2  D0 03            bne *+5
002236r 2  4C rr rr         jmp @target_72
002239r 2               
002239r 2               @target_71:
002239r 2               
002239r 2               ; src/prelude.fth:21:11 in `0=`
002239r 2               @OPCODE_1017:   ; [c64_ir] PushLiteral(0)
002239r 2  E8               inx
00223Ar 2  E8               inx
00223Br 2  A9 00            lda #0
00223Dr 2  95 00            sta $00,x
00223Fr 2  A9 00            lda #0
002241r 2  95 01            sta $01,x
002243r 2               
002243r 2               ; src/prelude.fth:21:13 in `0=`
002243r 2               @OPCODE_1018:   ; [c64_ir] JumpElse(73)
002243r 2  4C rr rr         jmp @target_73
002246r 2               
002246r 2               @target_72:
002246r 2               
002246r 2               ; src/prelude.fth:21:18 in `0=`
002246r 2               @OPCODE_1020:   ; [c64_ir] PushLiteral(-1)
002246r 2  E8               inx
002247r 2  E8               inx
002248r 2  A9 FF            lda #255
00224Ar 2  95 00            sta $00,x
00224Cr 2  A9 FF            lda #255
00224Er 2  95 01            sta $01,x
002250r 2               
002250r 2               ; src/prelude.fth:21:21 in `0=`
002250r 2               @OPCODE_1021:   ; [c64_ir] JumpTarget(72)
002250r 2               
002250r 2               @target_73:
002250r 2               
002250r 2               ; snake.pax:153:15 in `change-direction`
002250r 2               @OPCODE_1023:   ; [c64_ir] JumpIf0(83)
002250r 2  CA               dex
002251r 2  CA               dex
002252r 2  B5 02            lda $02,x
002254r 2  15 03            ora $03,x
002256r 2  D0 03            bne *+5
002258r 2  4C rr rr         jmp @target_83
00225Br 2               
00225Br 2               @target_74:
00225Br 2               
00225Br 2               ; <inline>:0:0 in `main`
00225Br 2               @OPCODE_1025:   ; [c64_ir] PushLiteral(7777)
00225Br 2  E8               inx
00225Cr 2  E8               inx
00225Dr 2  A9 61            lda #97
00225Fr 2  95 00            sta $00,x
002261r 2  A9 1E            lda #30
002263r 2  95 01            sta $01,x
002265r 2               
002265r 2               ; <inline>:0:0 in `main`
002265r 2               @OPCODE_1026:   ; [c64_ir] AltPush
002265r 2  CA               dex
002266r 2  CA               dex
002267r 2  B5 03            lda $03,x
002269r 2  48               pha
00226Ar 2  B5 02            lda $02,x
00226Cr 2  48               pha
00226Dr 2               
00226Dr 2               ; <inline>:0:0 in `main`
00226Dr 2               @OPCODE_1027:   ; [c64_ir] PushLiteral(7777)
00226Dr 2  E8               inx
00226Er 2  E8               inx
00226Fr 2  A9 61            lda #97
002271r 2  95 00            sta $00,x
002273r 2  A9 1E            lda #30
002275r 2  95 01            sta $01,x
002277r 2               
002277r 2               ; <inline>:0:0 in `main`
002277r 2               @OPCODE_1028:   ; [c64_ir] AltPush
002277r 2  CA               dex
002278r 2  CA               dex
002279r 2  B5 03            lda $03,x
00227Br 2  48               pha
00227Cr 2  B5 02            lda $02,x
00227Er 2  48               pha
00227Fr 2               
00227Fr 2               ; snake.pax:143:16 in `is-vertical`
00227Fr 2               @OPCODE_1029:   ; [c64_ir] PushLiteral(-26660)
00227Fr 2  E8               inx
002280r 2  E8               inx
002281r 2  A9 DC            lda #220
002283r 2  95 00            sta $00,x
002285r 2  A9 97            lda #151
002287r 2  95 01            sta $01,x
002289r 2               
002289r 2               ; snake.pax:143:26 in `is-vertical`
002289r 2               @OPCODE_1030:   ; [c64_ir] Load
002289r 2  A1 00            lda ($00,x)
00228Br 2  95 00            sta $00,x
00228Dr 2  A9 00            lda #0
00228Fr 2  95 01            sta $01,x
002291r 2               
002291r 2               ; src/prelude.fth:6:10 in `dup`
002291r 2               @OPCODE_1031:   ; [c64_ir] TempStore
002291r 2  CA               dex
002292r 2  CA               dex
002293r 2  B5 03            lda $03,x
002295r 2  85 96            sta TEMP_PAX2
002297r 2  B5 02            lda $02,x
002299r 2  85 95            sta TEMP_PAX1
00229Br 2               
00229Br 2               ; src/prelude.fth:6:16 in `dup`
00229Br 2               @OPCODE_1032:   ; [c64_ir] TempLoad
00229Br 2  E8               inx
00229Cr 2  E8               inx
00229Dr 2  A5 95            lda TEMP_PAX1
00229Fr 2  95 00            sta $00,x
0022A1r 2  A5 96            lda TEMP_PAX2
0022A3r 2  95 01            sta $01,x
0022A5r 2               
0022A5r 2               ; src/prelude.fth:6:22 in `dup`
0022A5r 2               @OPCODE_1033:   ; [c64_ir] TempLoad
0022A5r 2  E8               inx
0022A6r 2  E8               inx
0022A7r 2  A5 95            lda TEMP_PAX1
0022A9r 2  95 00            sta $00,x
0022ABr 2  A5 96            lda TEMP_PAX2
0022ADr 2  95 01            sta $01,x
0022AFr 2               
0022AFr 2               ; snake.pax:144:3 in `is-vertical`
0022AFr 2               @OPCODE_1034:   ; [c64_ir] PushLiteral(38)
0022AFr 2  E8               inx
0022B0r 2  E8               inx
0022B1r 2  A9 26            lda #38
0022B3r 2  95 00            sta $00,x
0022B5r 2  A9 00            lda #0
0022B7r 2  95 01            sta $01,x
0022B9r 2               
0022B9r 2               ; src/prelude.fth:14:12 in `invert`
0022B9r 2               @OPCODE_1035:   ; [c64_ir] PushLiteral(-1)
0022B9r 2  E8               inx
0022BAr 2  E8               inx
0022BBr 2  A9 FF            lda #255
0022BDr 2  95 00            sta $00,x
0022BFr 2  A9 FF            lda #255
0022C1r 2  95 01            sta $01,x
0022C3r 2               
0022C3r 2               ; src/prelude.fth:14:15 in `invert`
0022C3r 2               @OPCODE_1036:   ; [c64_ir] Nand
0022C3r 2                   ; 26
0022C3r 2  CA               dex
0022C4r 2  CA               dex
0022C5r 2  B5 00            lda $00,x
0022C7r 2  35 02            and $02,x
0022C9r 2  49 FF            eor #$ff
0022CBr 2  95 00            sta $00,x
0022CDr 2  B5 01            lda $01,x
0022CFr 2  35 03            and $03,x
0022D1r 2  49 FF            eor #$ff
0022D3r 2  95 01            sta $01,x
0022D5r 2               
0022D5r 2               ; src/prelude.fth:15:19 in `negate`
0022D5r 2               @OPCODE_1037:   ; [c64_ir] PushLiteral(1)
0022D5r 2  E8               inx
0022D6r 2  E8               inx
0022D7r 2  A9 01            lda #1
0022D9r 2  95 00            sta $00,x
0022DBr 2  A9 00            lda #0
0022DDr 2  95 01            sta $01,x
0022DFr 2               
0022DFr 2               ; src/prelude.fth:15:21 in `negate`
0022DFr 2               @OPCODE_1038:   ; [c64_ir] Add
0022DFr 2                   ; 21
0022DFr 2  CA               dex
0022E0r 2  CA               dex
0022E1r 2  18               clc
0022E2r 2  B5 00            lda $00,x
0022E4r 2  75 02            adc $02,x
0022E6r 2  95 00            sta $00,x
0022E8r 2  B5 01            lda $01,x
0022EAr 2  75 03            adc $03,x
0022ECr 2  95 01            sta $01,x
0022EEr 2               
0022EEr 2               ; src/prelude.fth:16:19 in `-`
0022EEr 2               @OPCODE_1039:   ; [c64_ir] Add
0022EEr 2                   ; 21
0022EEr 2  CA               dex
0022EFr 2  CA               dex
0022F0r 2  18               clc
0022F1r 2  B5 00            lda $00,x
0022F3r 2  75 02            adc $02,x
0022F5r 2  95 00            sta $00,x
0022F7r 2  B5 01            lda $01,x
0022F9r 2  75 03            adc $03,x
0022FBr 2  95 01            sta $01,x
0022FDr 2               
0022FDr 2               ; src/prelude.fth:21:8 in `0=`
0022FDr 2               @OPCODE_1040:   ; [c64_ir] JumpIf0(76)
0022FDr 2  CA               dex
0022FEr 2  CA               dex
0022FFr 2  B5 02            lda $02,x
002301r 2  15 03            ora $03,x
002303r 2  D0 03            bne *+5
002305r 2  4C rr rr         jmp @target_76
002308r 2               
002308r 2               @target_75:
002308r 2               
002308r 2               ; src/prelude.fth:21:11 in `0=`
002308r 2               @OPCODE_1042:   ; [c64_ir] PushLiteral(0)
002308r 2  E8               inx
002309r 2  E8               inx
00230Ar 2  A9 00            lda #0
00230Cr 2  95 00            sta $00,x
00230Er 2  A9 00            lda #0
002310r 2  95 01            sta $01,x
002312r 2               
002312r 2               ; src/prelude.fth:21:13 in `0=`
002312r 2               @OPCODE_1043:   ; [c64_ir] JumpElse(77)
002312r 2  4C rr rr         jmp @target_77
002315r 2               
002315r 2               @target_76:
002315r 2               
002315r 2               ; src/prelude.fth:21:18 in `0=`
002315r 2               @OPCODE_1045:   ; [c64_ir] PushLiteral(-1)
002315r 2  E8               inx
002316r 2  E8               inx
002317r 2  A9 FF            lda #255
002319r 2  95 00            sta $00,x
00231Br 2  A9 FF            lda #255
00231Dr 2  95 01            sta $01,x
00231Fr 2               
00231Fr 2               ; src/prelude.fth:21:21 in `0=`
00231Fr 2               @OPCODE_1046:   ; [c64_ir] JumpTarget(76)
00231Fr 2               
00231Fr 2               @target_77:
00231Fr 2               
00231Fr 2               ; src/prelude.fth:3:10 in `swap`
00231Fr 2               @OPCODE_1048:   ; [c64_ir] AltPush
00231Fr 2  CA               dex
002320r 2  CA               dex
002321r 2  B5 03            lda $03,x
002323r 2  48               pha
002324r 2  B5 02            lda $02,x
002326r 2  48               pha
002327r 2               
002327r 2               ; src/prelude.fth:3:13 in `swap`
002327r 2               @OPCODE_1049:   ; [c64_ir] TempStore
002327r 2  CA               dex
002328r 2  CA               dex
002329r 2  B5 03            lda $03,x
00232Br 2  85 96            sta TEMP_PAX2
00232Dr 2  B5 02            lda $02,x
00232Fr 2  85 95            sta TEMP_PAX1
002331r 2               
002331r 2               ; src/prelude.fth:3:19 in `swap`
002331r 2               @OPCODE_1050:   ; [c64_ir] AltPop
002331r 2  E8               inx
002332r 2  E8               inx
002333r 2  68               pla
002334r 2  95 00            sta $00,x
002336r 2  68               pla
002337r 2  95 01            sta $01,x
002339r 2               
002339r 2               ; src/prelude.fth:3:22 in `swap`
002339r 2               @OPCODE_1051:   ; [c64_ir] TempLoad
002339r 2  E8               inx
00233Ar 2  E8               inx
00233Br 2  A5 95            lda TEMP_PAX1
00233Dr 2  95 00            sta $00,x
00233Fr 2  A5 96            lda TEMP_PAX2
002341r 2  95 01            sta $01,x
002343r 2               
002343r 2               ; snake.pax:145:3 in `is-vertical`
002343r 2               @OPCODE_1052:   ; [c64_ir] PushLiteral(40)
002343r 2  E8               inx
002344r 2  E8               inx
002345r 2  A9 28            lda #40
002347r 2  95 00            sta $00,x
002349r 2  A9 00            lda #0
00234Br 2  95 01            sta $01,x
00234Dr 2               
00234Dr 2               ; src/prelude.fth:14:12 in `invert`
00234Dr 2               @OPCODE_1053:   ; [c64_ir] PushLiteral(-1)
00234Dr 2  E8               inx
00234Er 2  E8               inx
00234Fr 2  A9 FF            lda #255
002351r 2  95 00            sta $00,x
002353r 2  A9 FF            lda #255
002355r 2  95 01            sta $01,x
002357r 2               
002357r 2               ; src/prelude.fth:14:15 in `invert`
002357r 2               @OPCODE_1054:   ; [c64_ir] Nand
002357r 2                   ; 26
002357r 2  CA               dex
002358r 2  CA               dex
002359r 2  B5 00            lda $00,x
00235Br 2  35 02            and $02,x
00235Dr 2  49 FF            eor #$ff
00235Fr 2  95 00            sta $00,x
002361r 2  B5 01            lda $01,x
002363r 2  35 03            and $03,x
002365r 2  49 FF            eor #$ff
002367r 2  95 01            sta $01,x
002369r 2               
002369r 2               ; src/prelude.fth:15:19 in `negate`
002369r 2               @OPCODE_1055:   ; [c64_ir] PushLiteral(1)
002369r 2  E8               inx
00236Ar 2  E8               inx
00236Br 2  A9 01            lda #1
00236Dr 2  95 00            sta $00,x
00236Fr 2  A9 00            lda #0
002371r 2  95 01            sta $01,x
002373r 2               
002373r 2               ; src/prelude.fth:15:21 in `negate`
002373r 2               @OPCODE_1056:   ; [c64_ir] Add
002373r 2                   ; 21
002373r 2  CA               dex
002374r 2  CA               dex
002375r 2  18               clc
002376r 2  B5 00            lda $00,x
002378r 2  75 02            adc $02,x
00237Ar 2  95 00            sta $00,x
00237Cr 2  B5 01            lda $01,x
00237Er 2  75 03            adc $03,x
002380r 2  95 01            sta $01,x
002382r 2               
002382r 2               ; src/prelude.fth:16:19 in `-`
002382r 2               @OPCODE_1057:   ; [c64_ir] Add
002382r 2                   ; 21
002382r 2  CA               dex
002383r 2  CA               dex
002384r 2  18               clc
002385r 2  B5 00            lda $00,x
002387r 2  75 02            adc $02,x
002389r 2  95 00            sta $00,x
00238Br 2  B5 01            lda $01,x
00238Dr 2  75 03            adc $03,x
00238Fr 2  95 01            sta $01,x
002391r 2               
002391r 2               ; src/prelude.fth:21:8 in `0=`
002391r 2               @OPCODE_1058:   ; [c64_ir] JumpIf0(79)
002391r 2  CA               dex
002392r 2  CA               dex
002393r 2  B5 02            lda $02,x
002395r 2  15 03            ora $03,x
002397r 2  D0 03            bne *+5
002399r 2  4C rr rr         jmp @target_79
00239Cr 2               
00239Cr 2               @target_78:
00239Cr 2               
00239Cr 2               ; src/prelude.fth:21:11 in `0=`
00239Cr 2               @OPCODE_1060:   ; [c64_ir] PushLiteral(0)
00239Cr 2  E8               inx
00239Dr 2  E8               inx
00239Er 2  A9 00            lda #0
0023A0r 2  95 00            sta $00,x
0023A2r 2  A9 00            lda #0
0023A4r 2  95 01            sta $01,x
0023A6r 2               
0023A6r 2               ; src/prelude.fth:21:13 in `0=`
0023A6r 2               @OPCODE_1061:   ; [c64_ir] JumpElse(80)
0023A6r 2  4C rr rr         jmp @target_80
0023A9r 2               
0023A9r 2               @target_79:
0023A9r 2               
0023A9r 2               ; src/prelude.fth:21:18 in `0=`
0023A9r 2               @OPCODE_1063:   ; [c64_ir] PushLiteral(-1)
0023A9r 2  E8               inx
0023AAr 2  E8               inx
0023ABr 2  A9 FF            lda #255
0023ADr 2  95 00            sta $00,x
0023AFr 2  A9 FF            lda #255
0023B1r 2  95 01            sta $01,x
0023B3r 2               
0023B3r 2               ; src/prelude.fth:21:21 in `0=`
0023B3r 2               @OPCODE_1064:   ; [c64_ir] JumpTarget(79)
0023B3r 2               
0023B3r 2               @target_80:
0023B3r 2               
0023B3r 2               ; src/prelude.fth:14:12 in `invert`
0023B3r 2               @OPCODE_1066:   ; [c64_ir] PushLiteral(-1)
0023B3r 2  E8               inx
0023B4r 2  E8               inx
0023B5r 2  A9 FF            lda #255
0023B7r 2  95 00            sta $00,x
0023B9r 2  A9 FF            lda #255
0023BBr 2  95 01            sta $01,x
0023BDr 2               
0023BDr 2               ; src/prelude.fth:14:15 in `invert`
0023BDr 2               @OPCODE_1067:   ; [c64_ir] Nand
0023BDr 2                   ; 26
0023BDr 2  CA               dex
0023BEr 2  CA               dex
0023BFr 2  B5 00            lda $00,x
0023C1r 2  35 02            and $02,x
0023C3r 2  49 FF            eor #$ff
0023C5r 2  95 00            sta $00,x
0023C7r 2  B5 01            lda $01,x
0023C9r 2  35 03            and $03,x
0023CBr 2  49 FF            eor #$ff
0023CDr 2  95 01            sta $01,x
0023CFr 2               
0023CFr 2               ; src/prelude.fth:3:10 in `swap`
0023CFr 2               @OPCODE_1068:   ; [c64_ir] AltPush
0023CFr 2  CA               dex
0023D0r 2  CA               dex
0023D1r 2  B5 03            lda $03,x
0023D3r 2  48               pha
0023D4r 2  B5 02            lda $02,x
0023D6r 2  48               pha
0023D7r 2               
0023D7r 2               ; src/prelude.fth:3:13 in `swap`
0023D7r 2               @OPCODE_1069:   ; [c64_ir] TempStore
0023D7r 2  CA               dex
0023D8r 2  CA               dex
0023D9r 2  B5 03            lda $03,x
0023DBr 2  85 96            sta TEMP_PAX2
0023DDr 2  B5 02            lda $02,x
0023DFr 2  85 95            sta TEMP_PAX1
0023E1r 2               
0023E1r 2               ; src/prelude.fth:3:19 in `swap`
0023E1r 2               @OPCODE_1070:   ; [c64_ir] AltPop
0023E1r 2  E8               inx
0023E2r 2  E8               inx
0023E3r 2  68               pla
0023E4r 2  95 00            sta $00,x
0023E6r 2  68               pla
0023E7r 2  95 01            sta $01,x
0023E9r 2               
0023E9r 2               ; src/prelude.fth:3:22 in `swap`
0023E9r 2               @OPCODE_1071:   ; [c64_ir] TempLoad
0023E9r 2  E8               inx
0023EAr 2  E8               inx
0023EBr 2  A5 95            lda TEMP_PAX1
0023EDr 2  95 00            sta $00,x
0023EFr 2  A5 96            lda TEMP_PAX2
0023F1r 2  95 01            sta $01,x
0023F3r 2               
0023F3r 2               ; src/prelude.fth:14:12 in `invert`
0023F3r 2               @OPCODE_1072:   ; [c64_ir] PushLiteral(-1)
0023F3r 2  E8               inx
0023F4r 2  E8               inx
0023F5r 2  A9 FF            lda #255
0023F7r 2  95 00            sta $00,x
0023F9r 2  A9 FF            lda #255
0023FBr 2  95 01            sta $01,x
0023FDr 2               
0023FDr 2               ; src/prelude.fth:14:15 in `invert`
0023FDr 2               @OPCODE_1073:   ; [c64_ir] Nand
0023FDr 2                   ; 26
0023FDr 2  CA               dex
0023FEr 2  CA               dex
0023FFr 2  B5 00            lda $00,x
002401r 2  35 02            and $02,x
002403r 2  49 FF            eor #$ff
002405r 2  95 00            sta $00,x
002407r 2  B5 01            lda $01,x
002409r 2  35 03            and $03,x
00240Br 2  49 FF            eor #$ff
00240Dr 2  95 01            sta $01,x
00240Fr 2               
00240Fr 2               ; src/prelude.fth:26:27 in `or`
00240Fr 2               @OPCODE_1074:   ; [c64_ir] Nand
00240Fr 2                   ; 26
00240Fr 2  CA               dex
002410r 2  CA               dex
002411r 2  B5 00            lda $00,x
002413r 2  35 02            and $02,x
002415r 2  49 FF            eor #$ff
002417r 2  95 00            sta $00,x
002419r 2  B5 01            lda $01,x
00241Br 2  35 03            and $03,x
00241Dr 2  49 FF            eor #$ff
00241Fr 2  95 01            sta $01,x
002421r 2               
002421r 2               ; <inline>:0:0 in `main`
002421r 2               @OPCODE_1075:   ; [c64_ir] AltPop
002421r 2  E8               inx
002422r 2  E8               inx
002423r 2  68               pla
002424r 2  95 00            sta $00,x
002426r 2  68               pla
002427r 2  95 01            sta $01,x
002429r 2               
002429r 2               ; <inline>:0:0 in `main`
002429r 2               @OPCODE_1076:   ; [c64_ir] Drop
002429r 2  CA               dex
00242Ar 2  CA               dex
00242Br 2               
00242Br 2               ; snake.pax:148:27 in `turn-left`
00242Br 2               @OPCODE_1077:   ; [c64_ir] JumpIf0(82)
00242Br 2  CA               dex
00242Cr 2  CA               dex
00242Dr 2  B5 02            lda $02,x
00242Fr 2  15 03            ora $03,x
002431r 2  D0 03            bne *+5
002433r 2  4C rr rr         jmp @target_82
002436r 2               
002436r 2               @target_81:
002436r 2               
002436r 2               ; snake.pax:148:30 in `turn-left`
002436r 2               @OPCODE_1079:   ; [c64_ir] PushLiteral(37)
002436r 2  E8               inx
002437r 2  E8               inx
002438r 2  A9 25            lda #37
00243Ar 2  95 00            sta $00,x
00243Cr 2  A9 00            lda #0
00243Er 2  95 01            sta $01,x
002440r 2               
002440r 2               ; snake.pax:148:35 in `turn-left`
002440r 2               @OPCODE_1080:   ; [c64_ir] PushLiteral(-26660)
002440r 2  E8               inx
002441r 2  E8               inx
002442r 2  A9 DC            lda #220
002444r 2  95 00            sta $00,x
002446r 2  A9 97            lda #151
002448r 2  95 01            sta $01,x
00244Ar 2               
00244Ar 2               ; snake.pax:148:45 in `turn-left`
00244Ar 2               @OPCODE_1081:   ; [c64_ir] Store
00244Ar 2  CA               dex
00244Br 2  CA               dex
00244Cr 2  CA               dex
00244Dr 2  CA               dex
00244Er 2  B5 02            lda $02,x
002450r 2  81 04            sta ($04,x)
002452r 2                   ; TODO high byte
002452r 2               
002452r 2               ; snake.pax:148:47 in `turn-left`
002452r 2               @OPCODE_1082:   ; [c64_ir] JumpTarget(81)
002452r 2               
002452r 2               @target_82:
002452r 2               
002452r 2               ; <inline>:0:0 in `main`
002452r 2               @OPCODE_1084:   ; [c64_ir] AltPop
002452r 2  E8               inx
002453r 2  E8               inx
002454r 2  68               pla
002455r 2  95 00            sta $00,x
002457r 2  68               pla
002458r 2  95 01            sta $01,x
00245Ar 2               
00245Ar 2               ; <inline>:0:0 in `main`
00245Ar 2               @OPCODE_1085:   ; [c64_ir] Drop
00245Ar 2  CA               dex
00245Br 2  CA               dex
00245Cr 2               
00245Cr 2               ; snake.pax:153:28 in `change-direction`
00245Cr 2               @OPCODE_1086:   ; [c64_ir] JumpElse(125)
00245Cr 2  4C rr rr         jmp @target_125
00245Fr 2               
00245Fr 2               @target_83:
00245Fr 2               
00245Fr 2               ; src/prelude.fth:4:13 in `over`
00245Fr 2               @OPCODE_1088:   ; [c64_ir] TempStore
00245Fr 2  CA               dex
002460r 2  CA               dex
002461r 2  B5 03            lda $03,x
002463r 2  85 96            sta TEMP_PAX2
002465r 2  B5 02            lda $02,x
002467r 2  85 95            sta TEMP_PAX1
002469r 2               
002469r 2               ; src/prelude.fth:4:19 in `over`
002469r 2               @OPCODE_1089:   ; [c64_ir] TempLoad
002469r 2  E8               inx
00246Ar 2  E8               inx
00246Br 2  A5 95            lda TEMP_PAX1
00246Dr 2  95 00            sta $00,x
00246Fr 2  A5 96            lda TEMP_PAX2
002471r 2  95 01            sta $01,x
002473r 2               
002473r 2               ; src/prelude.fth:4:25 in `over`
002473r 2               @OPCODE_1090:   ; [c64_ir] PushLiteral(38)
002473r 2  E8               inx
002474r 2  E8               inx
002475r 2  A9 26            lda #38
002477r 2  95 00            sta $00,x
002479r 2  A9 00            lda #0
00247Br 2  95 01            sta $01,x
00247Dr 2               
00247Dr 2               ; src/prelude.fth:4:28 in `over`
00247Dr 2               @OPCODE_1091:   ; [c64_ir] TempLoad
00247Dr 2  E8               inx
00247Er 2  E8               inx
00247Fr 2  A5 95            lda TEMP_PAX1
002481r 2  95 00            sta $00,x
002483r 2  A5 96            lda TEMP_PAX2
002485r 2  95 01            sta $01,x
002487r 2               
002487r 2               ; src/prelude.fth:14:12 in `invert`
002487r 2               @OPCODE_1092:   ; [c64_ir] PushLiteral(-1)
002487r 2  E8               inx
002488r 2  E8               inx
002489r 2  A9 FF            lda #255
00248Br 2  95 00            sta $00,x
00248Dr 2  A9 FF            lda #255
00248Fr 2  95 01            sta $01,x
002491r 2               
002491r 2               ; src/prelude.fth:14:15 in `invert`
002491r 2               @OPCODE_1093:   ; [c64_ir] Nand
002491r 2                   ; 26
002491r 2  CA               dex
002492r 2  CA               dex
002493r 2  B5 00            lda $00,x
002495r 2  35 02            and $02,x
002497r 2  49 FF            eor #$ff
002499r 2  95 00            sta $00,x
00249Br 2  B5 01            lda $01,x
00249Dr 2  35 03            and $03,x
00249Fr 2  49 FF            eor #$ff
0024A1r 2  95 01            sta $01,x
0024A3r 2               
0024A3r 2               ; src/prelude.fth:15:19 in `negate`
0024A3r 2               @OPCODE_1094:   ; [c64_ir] PushLiteral(1)
0024A3r 2  E8               inx
0024A4r 2  E8               inx
0024A5r 2  A9 01            lda #1
0024A7r 2  95 00            sta $00,x
0024A9r 2  A9 00            lda #0
0024ABr 2  95 01            sta $01,x
0024ADr 2               
0024ADr 2               ; src/prelude.fth:15:21 in `negate`
0024ADr 2               @OPCODE_1095:   ; [c64_ir] Add
0024ADr 2                   ; 21
0024ADr 2  CA               dex
0024AEr 2  CA               dex
0024AFr 2  18               clc
0024B0r 2  B5 00            lda $00,x
0024B2r 2  75 02            adc $02,x
0024B4r 2  95 00            sta $00,x
0024B6r 2  B5 01            lda $01,x
0024B8r 2  75 03            adc $03,x
0024BAr 2  95 01            sta $01,x
0024BCr 2               
0024BCr 2               ; src/prelude.fth:16:19 in `-`
0024BCr 2               @OPCODE_1096:   ; [c64_ir] Add
0024BCr 2                   ; 21
0024BCr 2  CA               dex
0024BDr 2  CA               dex
0024BEr 2  18               clc
0024BFr 2  B5 00            lda $00,x
0024C1r 2  75 02            adc $02,x
0024C3r 2  95 00            sta $00,x
0024C5r 2  B5 01            lda $01,x
0024C7r 2  75 03            adc $03,x
0024C9r 2  95 01            sta $01,x
0024CBr 2               
0024CBr 2               ; src/prelude.fth:21:8 in `0=`
0024CBr 2               @OPCODE_1097:   ; [c64_ir] JumpIf0(85)
0024CBr 2  CA               dex
0024CCr 2  CA               dex
0024CDr 2  B5 02            lda $02,x
0024CFr 2  15 03            ora $03,x
0024D1r 2  D0 03            bne *+5
0024D3r 2  4C rr rr         jmp @target_85
0024D6r 2               
0024D6r 2               @target_84:
0024D6r 2               
0024D6r 2               ; src/prelude.fth:21:11 in `0=`
0024D6r 2               @OPCODE_1099:   ; [c64_ir] PushLiteral(0)
0024D6r 2  E8               inx
0024D7r 2  E8               inx
0024D8r 2  A9 00            lda #0
0024DAr 2  95 00            sta $00,x
0024DCr 2  A9 00            lda #0
0024DEr 2  95 01            sta $01,x
0024E0r 2               
0024E0r 2               ; src/prelude.fth:21:13 in `0=`
0024E0r 2               @OPCODE_1100:   ; [c64_ir] JumpElse(86)
0024E0r 2  4C rr rr         jmp @target_86
0024E3r 2               
0024E3r 2               @target_85:
0024E3r 2               
0024E3r 2               ; src/prelude.fth:21:18 in `0=`
0024E3r 2               @OPCODE_1102:   ; [c64_ir] PushLiteral(-1)
0024E3r 2  E8               inx
0024E4r 2  E8               inx
0024E5r 2  A9 FF            lda #255
0024E7r 2  95 00            sta $00,x
0024E9r 2  A9 FF            lda #255
0024EBr 2  95 01            sta $01,x
0024EDr 2               
0024EDr 2               ; src/prelude.fth:21:21 in `0=`
0024EDr 2               @OPCODE_1103:   ; [c64_ir] JumpTarget(85)
0024EDr 2               
0024EDr 2               @target_86:
0024EDr 2               
0024EDr 2               ; snake.pax:154:13 in `change-direction`
0024EDr 2               @OPCODE_1105:   ; [c64_ir] JumpIf0(96)
0024EDr 2  CA               dex
0024EEr 2  CA               dex
0024EFr 2  B5 02            lda $02,x
0024F1r 2  15 03            ora $03,x
0024F3r 2  D0 03            bne *+5
0024F5r 2  4C rr rr         jmp @target_96
0024F8r 2               
0024F8r 2               @target_87:
0024F8r 2               
0024F8r 2               ; <inline>:0:0 in `main`
0024F8r 2               @OPCODE_1107:   ; [c64_ir] PushLiteral(7777)
0024F8r 2  E8               inx
0024F9r 2  E8               inx
0024FAr 2  A9 61            lda #97
0024FCr 2  95 00            sta $00,x
0024FEr 2  A9 1E            lda #30
002500r 2  95 01            sta $01,x
002502r 2               
002502r 2               ; <inline>:0:0 in `main`
002502r 2               @OPCODE_1108:   ; [c64_ir] AltPush
002502r 2  CA               dex
002503r 2  CA               dex
002504r 2  B5 03            lda $03,x
002506r 2  48               pha
002507r 2  B5 02            lda $02,x
002509r 2  48               pha
00250Ar 2               
00250Ar 2               ; <inline>:0:0 in `main`
00250Ar 2               @OPCODE_1109:   ; [c64_ir] PushLiteral(7777)
00250Ar 2  E8               inx
00250Br 2  E8               inx
00250Cr 2  A9 61            lda #97
00250Er 2  95 00            sta $00,x
002510r 2  A9 1E            lda #30
002512r 2  95 01            sta $01,x
002514r 2               
002514r 2               ; <inline>:0:0 in `main`
002514r 2               @OPCODE_1110:   ; [c64_ir] AltPush
002514r 2  CA               dex
002515r 2  CA               dex
002516r 2  B5 03            lda $03,x
002518r 2  48               pha
002519r 2  B5 02            lda $02,x
00251Br 2  48               pha
00251Cr 2               
00251Cr 2               ; snake.pax:139:18 in `is-horizontal`
00251Cr 2               @OPCODE_1111:   ; [c64_ir] PushLiteral(-26660)
00251Cr 2  E8               inx
00251Dr 2  E8               inx
00251Er 2  A9 DC            lda #220
002520r 2  95 00            sta $00,x
002522r 2  A9 97            lda #151
002524r 2  95 01            sta $01,x
002526r 2               
002526r 2               ; snake.pax:139:28 in `is-horizontal`
002526r 2               @OPCODE_1112:   ; [c64_ir] Load
002526r 2  A1 00            lda ($00,x)
002528r 2  95 00            sta $00,x
00252Ar 2  A9 00            lda #0
00252Cr 2  95 01            sta $01,x
00252Er 2               
00252Er 2               ; src/prelude.fth:6:10 in `dup`
00252Er 2               @OPCODE_1113:   ; [c64_ir] TempStore
00252Er 2  CA               dex
00252Fr 2  CA               dex
002530r 2  B5 03            lda $03,x
002532r 2  85 96            sta TEMP_PAX2
002534r 2  B5 02            lda $02,x
002536r 2  85 95            sta TEMP_PAX1
002538r 2               
002538r 2               ; src/prelude.fth:6:16 in `dup`
002538r 2               @OPCODE_1114:   ; [c64_ir] TempLoad
002538r 2  E8               inx
002539r 2  E8               inx
00253Ar 2  A5 95            lda TEMP_PAX1
00253Cr 2  95 00            sta $00,x
00253Er 2  A5 96            lda TEMP_PAX2
002540r 2  95 01            sta $01,x
002542r 2               
002542r 2               ; src/prelude.fth:6:22 in `dup`
002542r 2               @OPCODE_1115:   ; [c64_ir] TempLoad
002542r 2  E8               inx
002543r 2  E8               inx
002544r 2  A5 95            lda TEMP_PAX1
002546r 2  95 00            sta $00,x
002548r 2  A5 96            lda TEMP_PAX2
00254Ar 2  95 01            sta $01,x
00254Cr 2               
00254Cr 2               ; snake.pax:140:3 in `is-horizontal`
00254Cr 2               @OPCODE_1116:   ; [c64_ir] PushLiteral(37)
00254Cr 2  E8               inx
00254Dr 2  E8               inx
00254Er 2  A9 25            lda #37
002550r 2  95 00            sta $00,x
002552r 2  A9 00            lda #0
002554r 2  95 01            sta $01,x
002556r 2               
002556r 2               ; src/prelude.fth:14:12 in `invert`
002556r 2               @OPCODE_1117:   ; [c64_ir] PushLiteral(-1)
002556r 2  E8               inx
002557r 2  E8               inx
002558r 2  A9 FF            lda #255
00255Ar 2  95 00            sta $00,x
00255Cr 2  A9 FF            lda #255
00255Er 2  95 01            sta $01,x
002560r 2               
002560r 2               ; src/prelude.fth:14:15 in `invert`
002560r 2               @OPCODE_1118:   ; [c64_ir] Nand
002560r 2                   ; 26
002560r 2  CA               dex
002561r 2  CA               dex
002562r 2  B5 00            lda $00,x
002564r 2  35 02            and $02,x
002566r 2  49 FF            eor #$ff
002568r 2  95 00            sta $00,x
00256Ar 2  B5 01            lda $01,x
00256Cr 2  35 03            and $03,x
00256Er 2  49 FF            eor #$ff
002570r 2  95 01            sta $01,x
002572r 2               
002572r 2               ; src/prelude.fth:15:19 in `negate`
002572r 2               @OPCODE_1119:   ; [c64_ir] PushLiteral(1)
002572r 2  E8               inx
002573r 2  E8               inx
002574r 2  A9 01            lda #1
002576r 2  95 00            sta $00,x
002578r 2  A9 00            lda #0
00257Ar 2  95 01            sta $01,x
00257Cr 2               
00257Cr 2               ; src/prelude.fth:15:21 in `negate`
00257Cr 2               @OPCODE_1120:   ; [c64_ir] Add
00257Cr 2                   ; 21
00257Cr 2  CA               dex
00257Dr 2  CA               dex
00257Er 2  18               clc
00257Fr 2  B5 00            lda $00,x
002581r 2  75 02            adc $02,x
002583r 2  95 00            sta $00,x
002585r 2  B5 01            lda $01,x
002587r 2  75 03            adc $03,x
002589r 2  95 01            sta $01,x
00258Br 2               
00258Br 2               ; src/prelude.fth:16:19 in `-`
00258Br 2               @OPCODE_1121:   ; [c64_ir] Add
00258Br 2                   ; 21
00258Br 2  CA               dex
00258Cr 2  CA               dex
00258Dr 2  18               clc
00258Er 2  B5 00            lda $00,x
002590r 2  75 02            adc $02,x
002592r 2  95 00            sta $00,x
002594r 2  B5 01            lda $01,x
002596r 2  75 03            adc $03,x
002598r 2  95 01            sta $01,x
00259Ar 2               
00259Ar 2               ; src/prelude.fth:21:8 in `0=`
00259Ar 2               @OPCODE_1122:   ; [c64_ir] JumpIf0(89)
00259Ar 2  CA               dex
00259Br 2  CA               dex
00259Cr 2  B5 02            lda $02,x
00259Er 2  15 03            ora $03,x
0025A0r 2  D0 03            bne *+5
0025A2r 2  4C rr rr         jmp @target_89
0025A5r 2               
0025A5r 2               @target_88:
0025A5r 2               
0025A5r 2               ; src/prelude.fth:21:11 in `0=`
0025A5r 2               @OPCODE_1124:   ; [c64_ir] PushLiteral(0)
0025A5r 2  E8               inx
0025A6r 2  E8               inx
0025A7r 2  A9 00            lda #0
0025A9r 2  95 00            sta $00,x
0025ABr 2  A9 00            lda #0
0025ADr 2  95 01            sta $01,x
0025AFr 2               
0025AFr 2               ; src/prelude.fth:21:13 in `0=`
0025AFr 2               @OPCODE_1125:   ; [c64_ir] JumpElse(90)
0025AFr 2  4C rr rr         jmp @target_90
0025B2r 2               
0025B2r 2               @target_89:
0025B2r 2               
0025B2r 2               ; src/prelude.fth:21:18 in `0=`
0025B2r 2               @OPCODE_1127:   ; [c64_ir] PushLiteral(-1)
0025B2r 2  E8               inx
0025B3r 2  E8               inx
0025B4r 2  A9 FF            lda #255
0025B6r 2  95 00            sta $00,x
0025B8r 2  A9 FF            lda #255
0025BAr 2  95 01            sta $01,x
0025BCr 2               
0025BCr 2               ; src/prelude.fth:21:21 in `0=`
0025BCr 2               @OPCODE_1128:   ; [c64_ir] JumpTarget(89)
0025BCr 2               
0025BCr 2               @target_90:
0025BCr 2               
0025BCr 2               ; src/prelude.fth:3:10 in `swap`
0025BCr 2               @OPCODE_1130:   ; [c64_ir] AltPush
0025BCr 2  CA               dex
0025BDr 2  CA               dex
0025BEr 2  B5 03            lda $03,x
0025C0r 2  48               pha
0025C1r 2  B5 02            lda $02,x
0025C3r 2  48               pha
0025C4r 2               
0025C4r 2               ; src/prelude.fth:3:13 in `swap`
0025C4r 2               @OPCODE_1131:   ; [c64_ir] TempStore
0025C4r 2  CA               dex
0025C5r 2  CA               dex
0025C6r 2  B5 03            lda $03,x
0025C8r 2  85 96            sta TEMP_PAX2
0025CAr 2  B5 02            lda $02,x
0025CCr 2  85 95            sta TEMP_PAX1
0025CEr 2               
0025CEr 2               ; src/prelude.fth:3:19 in `swap`
0025CEr 2               @OPCODE_1132:   ; [c64_ir] AltPop
0025CEr 2  E8               inx
0025CFr 2  E8               inx
0025D0r 2  68               pla
0025D1r 2  95 00            sta $00,x
0025D3r 2  68               pla
0025D4r 2  95 01            sta $01,x
0025D6r 2               
0025D6r 2               ; src/prelude.fth:3:22 in `swap`
0025D6r 2               @OPCODE_1133:   ; [c64_ir] TempLoad
0025D6r 2  E8               inx
0025D7r 2  E8               inx
0025D8r 2  A5 95            lda TEMP_PAX1
0025DAr 2  95 00            sta $00,x
0025DCr 2  A5 96            lda TEMP_PAX2
0025DEr 2  95 01            sta $01,x
0025E0r 2               
0025E0r 2               ; snake.pax:141:3 in `is-horizontal`
0025E0r 2               @OPCODE_1134:   ; [c64_ir] PushLiteral(39)
0025E0r 2  E8               inx
0025E1r 2  E8               inx
0025E2r 2  A9 27            lda #39
0025E4r 2  95 00            sta $00,x
0025E6r 2  A9 00            lda #0
0025E8r 2  95 01            sta $01,x
0025EAr 2               
0025EAr 2               ; src/prelude.fth:14:12 in `invert`
0025EAr 2               @OPCODE_1135:   ; [c64_ir] PushLiteral(-1)
0025EAr 2  E8               inx
0025EBr 2  E8               inx
0025ECr 2  A9 FF            lda #255
0025EEr 2  95 00            sta $00,x
0025F0r 2  A9 FF            lda #255
0025F2r 2  95 01            sta $01,x
0025F4r 2               
0025F4r 2               ; src/prelude.fth:14:15 in `invert`
0025F4r 2               @OPCODE_1136:   ; [c64_ir] Nand
0025F4r 2                   ; 26
0025F4r 2  CA               dex
0025F5r 2  CA               dex
0025F6r 2  B5 00            lda $00,x
0025F8r 2  35 02            and $02,x
0025FAr 2  49 FF            eor #$ff
0025FCr 2  95 00            sta $00,x
0025FEr 2  B5 01            lda $01,x
002600r 2  35 03            and $03,x
002602r 2  49 FF            eor #$ff
002604r 2  95 01            sta $01,x
002606r 2               
002606r 2               ; src/prelude.fth:15:19 in `negate`
002606r 2               @OPCODE_1137:   ; [c64_ir] PushLiteral(1)
002606r 2  E8               inx
002607r 2  E8               inx
002608r 2  A9 01            lda #1
00260Ar 2  95 00            sta $00,x
00260Cr 2  A9 00            lda #0
00260Er 2  95 01            sta $01,x
002610r 2               
002610r 2               ; src/prelude.fth:15:21 in `negate`
002610r 2               @OPCODE_1138:   ; [c64_ir] Add
002610r 2                   ; 21
002610r 2  CA               dex
002611r 2  CA               dex
002612r 2  18               clc
002613r 2  B5 00            lda $00,x
002615r 2  75 02            adc $02,x
002617r 2  95 00            sta $00,x
002619r 2  B5 01            lda $01,x
00261Br 2  75 03            adc $03,x
00261Dr 2  95 01            sta $01,x
00261Fr 2               
00261Fr 2               ; src/prelude.fth:16:19 in `-`
00261Fr 2               @OPCODE_1139:   ; [c64_ir] Add
00261Fr 2                   ; 21
00261Fr 2  CA               dex
002620r 2  CA               dex
002621r 2  18               clc
002622r 2  B5 00            lda $00,x
002624r 2  75 02            adc $02,x
002626r 2  95 00            sta $00,x
002628r 2  B5 01            lda $01,x
00262Ar 2  75 03            adc $03,x
00262Cr 2  95 01            sta $01,x
00262Er 2               
00262Er 2               ; src/prelude.fth:21:8 in `0=`
00262Er 2               @OPCODE_1140:   ; [c64_ir] JumpIf0(92)
00262Er 2  CA               dex
00262Fr 2  CA               dex
002630r 2  B5 02            lda $02,x
002632r 2  15 03            ora $03,x
002634r 2  D0 03            bne *+5
002636r 2  4C rr rr         jmp @target_92
002639r 2               
002639r 2               @target_91:
002639r 2               
002639r 2               ; src/prelude.fth:21:11 in `0=`
002639r 2               @OPCODE_1142:   ; [c64_ir] PushLiteral(0)
002639r 2  E8               inx
00263Ar 2  E8               inx
00263Br 2  A9 00            lda #0
00263Dr 2  95 00            sta $00,x
00263Fr 2  A9 00            lda #0
002641r 2  95 01            sta $01,x
002643r 2               
002643r 2               ; src/prelude.fth:21:13 in `0=`
002643r 2               @OPCODE_1143:   ; [c64_ir] JumpElse(93)
002643r 2  4C rr rr         jmp @target_93
002646r 2               
002646r 2               @target_92:
002646r 2               
002646r 2               ; src/prelude.fth:21:18 in `0=`
002646r 2               @OPCODE_1145:   ; [c64_ir] PushLiteral(-1)
002646r 2  E8               inx
002647r 2  E8               inx
002648r 2  A9 FF            lda #255
00264Ar 2  95 00            sta $00,x
00264Cr 2  A9 FF            lda #255
00264Er 2  95 01            sta $01,x
002650r 2               
002650r 2               ; src/prelude.fth:21:21 in `0=`
002650r 2               @OPCODE_1146:   ; [c64_ir] JumpTarget(92)
002650r 2               
002650r 2               @target_93:
002650r 2               
002650r 2               ; src/prelude.fth:14:12 in `invert`
002650r 2               @OPCODE_1148:   ; [c64_ir] PushLiteral(-1)
002650r 2  E8               inx
002651r 2  E8               inx
002652r 2  A9 FF            lda #255
002654r 2  95 00            sta $00,x
002656r 2  A9 FF            lda #255
002658r 2  95 01            sta $01,x
00265Ar 2               
00265Ar 2               ; src/prelude.fth:14:15 in `invert`
00265Ar 2               @OPCODE_1149:   ; [c64_ir] Nand
00265Ar 2                   ; 26
00265Ar 2  CA               dex
00265Br 2  CA               dex
00265Cr 2  B5 00            lda $00,x
00265Er 2  35 02            and $02,x
002660r 2  49 FF            eor #$ff
002662r 2  95 00            sta $00,x
002664r 2  B5 01            lda $01,x
002666r 2  35 03            and $03,x
002668r 2  49 FF            eor #$ff
00266Ar 2  95 01            sta $01,x
00266Cr 2               
00266Cr 2               ; src/prelude.fth:3:10 in `swap`
00266Cr 2               @OPCODE_1150:   ; [c64_ir] AltPush
00266Cr 2  CA               dex
00266Dr 2  CA               dex
00266Er 2  B5 03            lda $03,x
002670r 2  48               pha
002671r 2  B5 02            lda $02,x
002673r 2  48               pha
002674r 2               
002674r 2               ; src/prelude.fth:3:13 in `swap`
002674r 2               @OPCODE_1151:   ; [c64_ir] TempStore
002674r 2  CA               dex
002675r 2  CA               dex
002676r 2  B5 03            lda $03,x
002678r 2  85 96            sta TEMP_PAX2
00267Ar 2  B5 02            lda $02,x
00267Cr 2  85 95            sta TEMP_PAX1
00267Er 2               
00267Er 2               ; src/prelude.fth:3:19 in `swap`
00267Er 2               @OPCODE_1152:   ; [c64_ir] AltPop
00267Er 2  E8               inx
00267Fr 2  E8               inx
002680r 2  68               pla
002681r 2  95 00            sta $00,x
002683r 2  68               pla
002684r 2  95 01            sta $01,x
002686r 2               
002686r 2               ; src/prelude.fth:3:22 in `swap`
002686r 2               @OPCODE_1153:   ; [c64_ir] TempLoad
002686r 2  E8               inx
002687r 2  E8               inx
002688r 2  A5 95            lda TEMP_PAX1
00268Ar 2  95 00            sta $00,x
00268Cr 2  A5 96            lda TEMP_PAX2
00268Er 2  95 01            sta $01,x
002690r 2               
002690r 2               ; src/prelude.fth:14:12 in `invert`
002690r 2               @OPCODE_1154:   ; [c64_ir] PushLiteral(-1)
002690r 2  E8               inx
002691r 2  E8               inx
002692r 2  A9 FF            lda #255
002694r 2  95 00            sta $00,x
002696r 2  A9 FF            lda #255
002698r 2  95 01            sta $01,x
00269Ar 2               
00269Ar 2               ; src/prelude.fth:14:15 in `invert`
00269Ar 2               @OPCODE_1155:   ; [c64_ir] Nand
00269Ar 2                   ; 26
00269Ar 2  CA               dex
00269Br 2  CA               dex
00269Cr 2  B5 00            lda $00,x
00269Er 2  35 02            and $02,x
0026A0r 2  49 FF            eor #$ff
0026A2r 2  95 00            sta $00,x
0026A4r 2  B5 01            lda $01,x
0026A6r 2  35 03            and $03,x
0026A8r 2  49 FF            eor #$ff
0026AAr 2  95 01            sta $01,x
0026ACr 2               
0026ACr 2               ; src/prelude.fth:26:27 in `or`
0026ACr 2               @OPCODE_1156:   ; [c64_ir] Nand
0026ACr 2                   ; 26
0026ACr 2  CA               dex
0026ADr 2  CA               dex
0026AEr 2  B5 00            lda $00,x
0026B0r 2  35 02            and $02,x
0026B2r 2  49 FF            eor #$ff
0026B4r 2  95 00            sta $00,x
0026B6r 2  B5 01            lda $01,x
0026B8r 2  35 03            and $03,x
0026BAr 2  49 FF            eor #$ff
0026BCr 2  95 01            sta $01,x
0026BEr 2               
0026BEr 2               ; <inline>:0:0 in `main`
0026BEr 2               @OPCODE_1157:   ; [c64_ir] AltPop
0026BEr 2  E8               inx
0026BFr 2  E8               inx
0026C0r 2  68               pla
0026C1r 2  95 00            sta $00,x
0026C3r 2  68               pla
0026C4r 2  95 01            sta $01,x
0026C6r 2               
0026C6r 2               ; <inline>:0:0 in `main`
0026C6r 2               @OPCODE_1158:   ; [c64_ir] Drop
0026C6r 2  CA               dex
0026C7r 2  CA               dex
0026C8r 2               
0026C8r 2               ; snake.pax:147:29 in `turn-up`
0026C8r 2               @OPCODE_1159:   ; [c64_ir] JumpIf0(95)
0026C8r 2  CA               dex
0026C9r 2  CA               dex
0026CAr 2  B5 02            lda $02,x
0026CCr 2  15 03            ora $03,x
0026CEr 2  D0 03            bne *+5
0026D0r 2  4C rr rr         jmp @target_95
0026D3r 2               
0026D3r 2               @target_94:
0026D3r 2               
0026D3r 2               ; snake.pax:147:32 in `turn-up`
0026D3r 2               @OPCODE_1161:   ; [c64_ir] PushLiteral(38)
0026D3r 2  E8               inx
0026D4r 2  E8               inx
0026D5r 2  A9 26            lda #38
0026D7r 2  95 00            sta $00,x
0026D9r 2  A9 00            lda #0
0026DBr 2  95 01            sta $01,x
0026DDr 2               
0026DDr 2               ; snake.pax:147:35 in `turn-up`
0026DDr 2               @OPCODE_1162:   ; [c64_ir] PushLiteral(-26660)
0026DDr 2  E8               inx
0026DEr 2  E8               inx
0026DFr 2  A9 DC            lda #220
0026E1r 2  95 00            sta $00,x
0026E3r 2  A9 97            lda #151
0026E5r 2  95 01            sta $01,x
0026E7r 2               
0026E7r 2               ; snake.pax:147:45 in `turn-up`
0026E7r 2               @OPCODE_1163:   ; [c64_ir] Store
0026E7r 2  CA               dex
0026E8r 2  CA               dex
0026E9r 2  CA               dex
0026EAr 2  CA               dex
0026EBr 2  B5 02            lda $02,x
0026EDr 2  81 04            sta ($04,x)
0026EFr 2                   ; TODO high byte
0026EFr 2               
0026EFr 2               ; snake.pax:147:47 in `turn-up`
0026EFr 2               @OPCODE_1164:   ; [c64_ir] JumpTarget(94)
0026EFr 2               
0026EFr 2               @target_95:
0026EFr 2               
0026EFr 2               ; <inline>:0:0 in `main`
0026EFr 2               @OPCODE_1166:   ; [c64_ir] AltPop
0026EFr 2  E8               inx
0026F0r 2  E8               inx
0026F1r 2  68               pla
0026F2r 2  95 00            sta $00,x
0026F4r 2  68               pla
0026F5r 2  95 01            sta $01,x
0026F7r 2               
0026F7r 2               ; <inline>:0:0 in `main`
0026F7r 2               @OPCODE_1167:   ; [c64_ir] Drop
0026F7r 2  CA               dex
0026F8r 2  CA               dex
0026F9r 2               
0026F9r 2               ; snake.pax:154:24 in `change-direction`
0026F9r 2               @OPCODE_1168:   ; [c64_ir] JumpElse(124)
0026F9r 2  4C rr rr         jmp @target_124
0026FCr 2               
0026FCr 2               @target_96:
0026FCr 2               
0026FCr 2               ; src/prelude.fth:4:13 in `over`
0026FCr 2               @OPCODE_1170:   ; [c64_ir] TempStore
0026FCr 2  CA               dex
0026FDr 2  CA               dex
0026FEr 2  B5 03            lda $03,x
002700r 2  85 96            sta TEMP_PAX2
002702r 2  B5 02            lda $02,x
002704r 2  85 95            sta TEMP_PAX1
002706r 2               
002706r 2               ; src/prelude.fth:4:19 in `over`
002706r 2               @OPCODE_1171:   ; [c64_ir] TempLoad
002706r 2  E8               inx
002707r 2  E8               inx
002708r 2  A5 95            lda TEMP_PAX1
00270Ar 2  95 00            sta $00,x
00270Cr 2  A5 96            lda TEMP_PAX2
00270Er 2  95 01            sta $01,x
002710r 2               
002710r 2               ; src/prelude.fth:4:25 in `over`
002710r 2               @OPCODE_1172:   ; [c64_ir] PushLiteral(39)
002710r 2  E8               inx
002711r 2  E8               inx
002712r 2  A9 27            lda #39
002714r 2  95 00            sta $00,x
002716r 2  A9 00            lda #0
002718r 2  95 01            sta $01,x
00271Ar 2               
00271Ar 2               ; src/prelude.fth:4:28 in `over`
00271Ar 2               @OPCODE_1173:   ; [c64_ir] TempLoad
00271Ar 2  E8               inx
00271Br 2  E8               inx
00271Cr 2  A5 95            lda TEMP_PAX1
00271Er 2  95 00            sta $00,x
002720r 2  A5 96            lda TEMP_PAX2
002722r 2  95 01            sta $01,x
002724r 2               
002724r 2               ; src/prelude.fth:14:12 in `invert`
002724r 2               @OPCODE_1174:   ; [c64_ir] PushLiteral(-1)
002724r 2  E8               inx
002725r 2  E8               inx
002726r 2  A9 FF            lda #255
002728r 2  95 00            sta $00,x
00272Ar 2  A9 FF            lda #255
00272Cr 2  95 01            sta $01,x
00272Er 2               
00272Er 2               ; src/prelude.fth:14:15 in `invert`
00272Er 2               @OPCODE_1175:   ; [c64_ir] Nand
00272Er 2                   ; 26
00272Er 2  CA               dex
00272Fr 2  CA               dex
002730r 2  B5 00            lda $00,x
002732r 2  35 02            and $02,x
002734r 2  49 FF            eor #$ff
002736r 2  95 00            sta $00,x
002738r 2  B5 01            lda $01,x
00273Ar 2  35 03            and $03,x
00273Cr 2  49 FF            eor #$ff
00273Er 2  95 01            sta $01,x
002740r 2               
002740r 2               ; src/prelude.fth:15:19 in `negate`
002740r 2               @OPCODE_1176:   ; [c64_ir] PushLiteral(1)
002740r 2  E8               inx
002741r 2  E8               inx
002742r 2  A9 01            lda #1
002744r 2  95 00            sta $00,x
002746r 2  A9 00            lda #0
002748r 2  95 01            sta $01,x
00274Ar 2               
00274Ar 2               ; src/prelude.fth:15:21 in `negate`
00274Ar 2               @OPCODE_1177:   ; [c64_ir] Add
00274Ar 2                   ; 21
00274Ar 2  CA               dex
00274Br 2  CA               dex
00274Cr 2  18               clc
00274Dr 2  B5 00            lda $00,x
00274Fr 2  75 02            adc $02,x
002751r 2  95 00            sta $00,x
002753r 2  B5 01            lda $01,x
002755r 2  75 03            adc $03,x
002757r 2  95 01            sta $01,x
002759r 2               
002759r 2               ; src/prelude.fth:16:19 in `-`
002759r 2               @OPCODE_1178:   ; [c64_ir] Add
002759r 2                   ; 21
002759r 2  CA               dex
00275Ar 2  CA               dex
00275Br 2  18               clc
00275Cr 2  B5 00            lda $00,x
00275Er 2  75 02            adc $02,x
002760r 2  95 00            sta $00,x
002762r 2  B5 01            lda $01,x
002764r 2  75 03            adc $03,x
002766r 2  95 01            sta $01,x
002768r 2               
002768r 2               ; src/prelude.fth:21:8 in `0=`
002768r 2               @OPCODE_1179:   ; [c64_ir] JumpIf0(98)
002768r 2  CA               dex
002769r 2  CA               dex
00276Ar 2  B5 02            lda $02,x
00276Cr 2  15 03            ora $03,x
00276Er 2  D0 03            bne *+5
002770r 2  4C rr rr         jmp @target_98
002773r 2               
002773r 2               @target_97:
002773r 2               
002773r 2               ; src/prelude.fth:21:11 in `0=`
002773r 2               @OPCODE_1181:   ; [c64_ir] PushLiteral(0)
002773r 2  E8               inx
002774r 2  E8               inx
002775r 2  A9 00            lda #0
002777r 2  95 00            sta $00,x
002779r 2  A9 00            lda #0
00277Br 2  95 01            sta $01,x
00277Dr 2               
00277Dr 2               ; src/prelude.fth:21:13 in `0=`
00277Dr 2               @OPCODE_1182:   ; [c64_ir] JumpElse(99)
00277Dr 2  4C rr rr         jmp @target_99
002780r 2               
002780r 2               @target_98:
002780r 2               
002780r 2               ; src/prelude.fth:21:18 in `0=`
002780r 2               @OPCODE_1184:   ; [c64_ir] PushLiteral(-1)
002780r 2  E8               inx
002781r 2  E8               inx
002782r 2  A9 FF            lda #255
002784r 2  95 00            sta $00,x
002786r 2  A9 FF            lda #255
002788r 2  95 01            sta $01,x
00278Ar 2               
00278Ar 2               ; src/prelude.fth:21:21 in `0=`
00278Ar 2               @OPCODE_1185:   ; [c64_ir] JumpTarget(98)
00278Ar 2               
00278Ar 2               @target_99:
00278Ar 2               
00278Ar 2               ; snake.pax:155:16 in `change-direction`
00278Ar 2               @OPCODE_1187:   ; [c64_ir] JumpIf0(109)
00278Ar 2  CA               dex
00278Br 2  CA               dex
00278Cr 2  B5 02            lda $02,x
00278Er 2  15 03            ora $03,x
002790r 2  D0 03            bne *+5
002792r 2  4C rr rr         jmp @target_109
002795r 2               
002795r 2               @target_100:
002795r 2               
002795r 2               ; <inline>:0:0 in `main`
002795r 2               @OPCODE_1189:   ; [c64_ir] PushLiteral(7777)
002795r 2  E8               inx
002796r 2  E8               inx
002797r 2  A9 61            lda #97
002799r 2  95 00            sta $00,x
00279Br 2  A9 1E            lda #30
00279Dr 2  95 01            sta $01,x
00279Fr 2               
00279Fr 2               ; <inline>:0:0 in `main`
00279Fr 2               @OPCODE_1190:   ; [c64_ir] AltPush
00279Fr 2  CA               dex
0027A0r 2  CA               dex
0027A1r 2  B5 03            lda $03,x
0027A3r 2  48               pha
0027A4r 2  B5 02            lda $02,x
0027A6r 2  48               pha
0027A7r 2               
0027A7r 2               ; <inline>:0:0 in `main`
0027A7r 2               @OPCODE_1191:   ; [c64_ir] PushLiteral(7777)
0027A7r 2  E8               inx
0027A8r 2  E8               inx
0027A9r 2  A9 61            lda #97
0027ABr 2  95 00            sta $00,x
0027ADr 2  A9 1E            lda #30
0027AFr 2  95 01            sta $01,x
0027B1r 2               
0027B1r 2               ; <inline>:0:0 in `main`
0027B1r 2               @OPCODE_1192:   ; [c64_ir] AltPush
0027B1r 2  CA               dex
0027B2r 2  CA               dex
0027B3r 2  B5 03            lda $03,x
0027B5r 2  48               pha
0027B6r 2  B5 02            lda $02,x
0027B8r 2  48               pha
0027B9r 2               
0027B9r 2               ; snake.pax:143:16 in `is-vertical`
0027B9r 2               @OPCODE_1193:   ; [c64_ir] PushLiteral(-26660)
0027B9r 2  E8               inx
0027BAr 2  E8               inx
0027BBr 2  A9 DC            lda #220
0027BDr 2  95 00            sta $00,x
0027BFr 2  A9 97            lda #151
0027C1r 2  95 01            sta $01,x
0027C3r 2               
0027C3r 2               ; snake.pax:143:26 in `is-vertical`
0027C3r 2               @OPCODE_1194:   ; [c64_ir] Load
0027C3r 2  A1 00            lda ($00,x)
0027C5r 2  95 00            sta $00,x
0027C7r 2  A9 00            lda #0
0027C9r 2  95 01            sta $01,x
0027CBr 2               
0027CBr 2               ; src/prelude.fth:6:10 in `dup`
0027CBr 2               @OPCODE_1195:   ; [c64_ir] TempStore
0027CBr 2  CA               dex
0027CCr 2  CA               dex
0027CDr 2  B5 03            lda $03,x
0027CFr 2  85 96            sta TEMP_PAX2
0027D1r 2  B5 02            lda $02,x
0027D3r 2  85 95            sta TEMP_PAX1
0027D5r 2               
0027D5r 2               ; src/prelude.fth:6:16 in `dup`
0027D5r 2               @OPCODE_1196:   ; [c64_ir] TempLoad
0027D5r 2  E8               inx
0027D6r 2  E8               inx
0027D7r 2  A5 95            lda TEMP_PAX1
0027D9r 2  95 00            sta $00,x
0027DBr 2  A5 96            lda TEMP_PAX2
0027DDr 2  95 01            sta $01,x
0027DFr 2               
0027DFr 2               ; src/prelude.fth:6:22 in `dup`
0027DFr 2               @OPCODE_1197:   ; [c64_ir] TempLoad
0027DFr 2  E8               inx
0027E0r 2  E8               inx
0027E1r 2  A5 95            lda TEMP_PAX1
0027E3r 2  95 00            sta $00,x
0027E5r 2  A5 96            lda TEMP_PAX2
0027E7r 2  95 01            sta $01,x
0027E9r 2               
0027E9r 2               ; snake.pax:144:3 in `is-vertical`
0027E9r 2               @OPCODE_1198:   ; [c64_ir] PushLiteral(38)
0027E9r 2  E8               inx
0027EAr 2  E8               inx
0027EBr 2  A9 26            lda #38
0027EDr 2  95 00            sta $00,x
0027EFr 2  A9 00            lda #0
0027F1r 2  95 01            sta $01,x
0027F3r 2               
0027F3r 2               ; src/prelude.fth:14:12 in `invert`
0027F3r 2               @OPCODE_1199:   ; [c64_ir] PushLiteral(-1)
0027F3r 2  E8               inx
0027F4r 2  E8               inx
0027F5r 2  A9 FF            lda #255
0027F7r 2  95 00            sta $00,x
0027F9r 2  A9 FF            lda #255
0027FBr 2  95 01            sta $01,x
0027FDr 2               
0027FDr 2               ; src/prelude.fth:14:15 in `invert`
0027FDr 2               @OPCODE_1200:   ; [c64_ir] Nand
0027FDr 2                   ; 26
0027FDr 2  CA               dex
0027FEr 2  CA               dex
0027FFr 2  B5 00            lda $00,x
002801r 2  35 02            and $02,x
002803r 2  49 FF            eor #$ff
002805r 2  95 00            sta $00,x
002807r 2  B5 01            lda $01,x
002809r 2  35 03            and $03,x
00280Br 2  49 FF            eor #$ff
00280Dr 2  95 01            sta $01,x
00280Fr 2               
00280Fr 2               ; src/prelude.fth:15:19 in `negate`
00280Fr 2               @OPCODE_1201:   ; [c64_ir] PushLiteral(1)
00280Fr 2  E8               inx
002810r 2  E8               inx
002811r 2  A9 01            lda #1
002813r 2  95 00            sta $00,x
002815r 2  A9 00            lda #0
002817r 2  95 01            sta $01,x
002819r 2               
002819r 2               ; src/prelude.fth:15:21 in `negate`
002819r 2               @OPCODE_1202:   ; [c64_ir] Add
002819r 2                   ; 21
002819r 2  CA               dex
00281Ar 2  CA               dex
00281Br 2  18               clc
00281Cr 2  B5 00            lda $00,x
00281Er 2  75 02            adc $02,x
002820r 2  95 00            sta $00,x
002822r 2  B5 01            lda $01,x
002824r 2  75 03            adc $03,x
002826r 2  95 01            sta $01,x
002828r 2               
002828r 2               ; src/prelude.fth:16:19 in `-`
002828r 2               @OPCODE_1203:   ; [c64_ir] Add
002828r 2                   ; 21
002828r 2  CA               dex
002829r 2  CA               dex
00282Ar 2  18               clc
00282Br 2  B5 00            lda $00,x
00282Dr 2  75 02            adc $02,x
00282Fr 2  95 00            sta $00,x
002831r 2  B5 01            lda $01,x
002833r 2  75 03            adc $03,x
002835r 2  95 01            sta $01,x
002837r 2               
002837r 2               ; src/prelude.fth:21:8 in `0=`
002837r 2               @OPCODE_1204:   ; [c64_ir] JumpIf0(102)
002837r 2  CA               dex
002838r 2  CA               dex
002839r 2  B5 02            lda $02,x
00283Br 2  15 03            ora $03,x
00283Dr 2  D0 03            bne *+5
00283Fr 2  4C rr rr         jmp @target_102
002842r 2               
002842r 2               @target_101:
002842r 2               
002842r 2               ; src/prelude.fth:21:11 in `0=`
002842r 2               @OPCODE_1206:   ; [c64_ir] PushLiteral(0)
002842r 2  E8               inx
002843r 2  E8               inx
002844r 2  A9 00            lda #0
002846r 2  95 00            sta $00,x
002848r 2  A9 00            lda #0
00284Ar 2  95 01            sta $01,x
00284Cr 2               
00284Cr 2               ; src/prelude.fth:21:13 in `0=`
00284Cr 2               @OPCODE_1207:   ; [c64_ir] JumpElse(103)
00284Cr 2  4C rr rr         jmp @target_103
00284Fr 2               
00284Fr 2               @target_102:
00284Fr 2               
00284Fr 2               ; src/prelude.fth:21:18 in `0=`
00284Fr 2               @OPCODE_1209:   ; [c64_ir] PushLiteral(-1)
00284Fr 2  E8               inx
002850r 2  E8               inx
002851r 2  A9 FF            lda #255
002853r 2  95 00            sta $00,x
002855r 2  A9 FF            lda #255
002857r 2  95 01            sta $01,x
002859r 2               
002859r 2               ; src/prelude.fth:21:21 in `0=`
002859r 2               @OPCODE_1210:   ; [c64_ir] JumpTarget(102)
002859r 2               
002859r 2               @target_103:
002859r 2               
002859r 2               ; src/prelude.fth:3:10 in `swap`
002859r 2               @OPCODE_1212:   ; [c64_ir] AltPush
002859r 2  CA               dex
00285Ar 2  CA               dex
00285Br 2  B5 03            lda $03,x
00285Dr 2  48               pha
00285Er 2  B5 02            lda $02,x
002860r 2  48               pha
002861r 2               
002861r 2               ; src/prelude.fth:3:13 in `swap`
002861r 2               @OPCODE_1213:   ; [c64_ir] TempStore
002861r 2  CA               dex
002862r 2  CA               dex
002863r 2  B5 03            lda $03,x
002865r 2  85 96            sta TEMP_PAX2
002867r 2  B5 02            lda $02,x
002869r 2  85 95            sta TEMP_PAX1
00286Br 2               
00286Br 2               ; src/prelude.fth:3:19 in `swap`
00286Br 2               @OPCODE_1214:   ; [c64_ir] AltPop
00286Br 2  E8               inx
00286Cr 2  E8               inx
00286Dr 2  68               pla
00286Er 2  95 00            sta $00,x
002870r 2  68               pla
002871r 2  95 01            sta $01,x
002873r 2               
002873r 2               ; src/prelude.fth:3:22 in `swap`
002873r 2               @OPCODE_1215:   ; [c64_ir] TempLoad
002873r 2  E8               inx
002874r 2  E8               inx
002875r 2  A5 95            lda TEMP_PAX1
002877r 2  95 00            sta $00,x
002879r 2  A5 96            lda TEMP_PAX2
00287Br 2  95 01            sta $01,x
00287Dr 2               
00287Dr 2               ; snake.pax:145:3 in `is-vertical`
00287Dr 2               @OPCODE_1216:   ; [c64_ir] PushLiteral(40)
00287Dr 2  E8               inx
00287Er 2  E8               inx
00287Fr 2  A9 28            lda #40
002881r 2  95 00            sta $00,x
002883r 2  A9 00            lda #0
002885r 2  95 01            sta $01,x
002887r 2               
002887r 2               ; src/prelude.fth:14:12 in `invert`
002887r 2               @OPCODE_1217:   ; [c64_ir] PushLiteral(-1)
002887r 2  E8               inx
002888r 2  E8               inx
002889r 2  A9 FF            lda #255
00288Br 2  95 00            sta $00,x
00288Dr 2  A9 FF            lda #255
00288Fr 2  95 01            sta $01,x
002891r 2               
002891r 2               ; src/prelude.fth:14:15 in `invert`
002891r 2               @OPCODE_1218:   ; [c64_ir] Nand
002891r 2                   ; 26
002891r 2  CA               dex
002892r 2  CA               dex
002893r 2  B5 00            lda $00,x
002895r 2  35 02            and $02,x
002897r 2  49 FF            eor #$ff
002899r 2  95 00            sta $00,x
00289Br 2  B5 01            lda $01,x
00289Dr 2  35 03            and $03,x
00289Fr 2  49 FF            eor #$ff
0028A1r 2  95 01            sta $01,x
0028A3r 2               
0028A3r 2               ; src/prelude.fth:15:19 in `negate`
0028A3r 2               @OPCODE_1219:   ; [c64_ir] PushLiteral(1)
0028A3r 2  E8               inx
0028A4r 2  E8               inx
0028A5r 2  A9 01            lda #1
0028A7r 2  95 00            sta $00,x
0028A9r 2  A9 00            lda #0
0028ABr 2  95 01            sta $01,x
0028ADr 2               
0028ADr 2               ; src/prelude.fth:15:21 in `negate`
0028ADr 2               @OPCODE_1220:   ; [c64_ir] Add
0028ADr 2                   ; 21
0028ADr 2  CA               dex
0028AEr 2  CA               dex
0028AFr 2  18               clc
0028B0r 2  B5 00            lda $00,x
0028B2r 2  75 02            adc $02,x
0028B4r 2  95 00            sta $00,x
0028B6r 2  B5 01            lda $01,x
0028B8r 2  75 03            adc $03,x
0028BAr 2  95 01            sta $01,x
0028BCr 2               
0028BCr 2               ; src/prelude.fth:16:19 in `-`
0028BCr 2               @OPCODE_1221:   ; [c64_ir] Add
0028BCr 2                   ; 21
0028BCr 2  CA               dex
0028BDr 2  CA               dex
0028BEr 2  18               clc
0028BFr 2  B5 00            lda $00,x
0028C1r 2  75 02            adc $02,x
0028C3r 2  95 00            sta $00,x
0028C5r 2  B5 01            lda $01,x
0028C7r 2  75 03            adc $03,x
0028C9r 2  95 01            sta $01,x
0028CBr 2               
0028CBr 2               ; src/prelude.fth:21:8 in `0=`
0028CBr 2               @OPCODE_1222:   ; [c64_ir] JumpIf0(105)
0028CBr 2  CA               dex
0028CCr 2  CA               dex
0028CDr 2  B5 02            lda $02,x
0028CFr 2  15 03            ora $03,x
0028D1r 2  D0 03            bne *+5
0028D3r 2  4C rr rr         jmp @target_105
0028D6r 2               
0028D6r 2               @target_104:
0028D6r 2               
0028D6r 2               ; src/prelude.fth:21:11 in `0=`
0028D6r 2               @OPCODE_1224:   ; [c64_ir] PushLiteral(0)
0028D6r 2  E8               inx
0028D7r 2  E8               inx
0028D8r 2  A9 00            lda #0
0028DAr 2  95 00            sta $00,x
0028DCr 2  A9 00            lda #0
0028DEr 2  95 01            sta $01,x
0028E0r 2               
0028E0r 2               ; src/prelude.fth:21:13 in `0=`
0028E0r 2               @OPCODE_1225:   ; [c64_ir] JumpElse(106)
0028E0r 2  4C rr rr         jmp @target_106
0028E3r 2               
0028E3r 2               @target_105:
0028E3r 2               
0028E3r 2               ; src/prelude.fth:21:18 in `0=`
0028E3r 2               @OPCODE_1227:   ; [c64_ir] PushLiteral(-1)
0028E3r 2  E8               inx
0028E4r 2  E8               inx
0028E5r 2  A9 FF            lda #255
0028E7r 2  95 00            sta $00,x
0028E9r 2  A9 FF            lda #255
0028EBr 2  95 01            sta $01,x
0028EDr 2               
0028EDr 2               ; src/prelude.fth:21:21 in `0=`
0028EDr 2               @OPCODE_1228:   ; [c64_ir] JumpTarget(105)
0028EDr 2               
0028EDr 2               @target_106:
0028EDr 2               
0028EDr 2               ; src/prelude.fth:14:12 in `invert`
0028EDr 2               @OPCODE_1230:   ; [c64_ir] PushLiteral(-1)
0028EDr 2  E8               inx
0028EEr 2  E8               inx
0028EFr 2  A9 FF            lda #255
0028F1r 2  95 00            sta $00,x
0028F3r 2  A9 FF            lda #255
0028F5r 2  95 01            sta $01,x
0028F7r 2               
0028F7r 2               ; src/prelude.fth:14:15 in `invert`
0028F7r 2               @OPCODE_1231:   ; [c64_ir] Nand
0028F7r 2                   ; 26
0028F7r 2  CA               dex
0028F8r 2  CA               dex
0028F9r 2  B5 00            lda $00,x
0028FBr 2  35 02            and $02,x
0028FDr 2  49 FF            eor #$ff
0028FFr 2  95 00            sta $00,x
002901r 2  B5 01            lda $01,x
002903r 2  35 03            and $03,x
002905r 2  49 FF            eor #$ff
002907r 2  95 01            sta $01,x
002909r 2               
002909r 2               ; src/prelude.fth:3:10 in `swap`
002909r 2               @OPCODE_1232:   ; [c64_ir] AltPush
002909r 2  CA               dex
00290Ar 2  CA               dex
00290Br 2  B5 03            lda $03,x
00290Dr 2  48               pha
00290Er 2  B5 02            lda $02,x
002910r 2  48               pha
002911r 2               
002911r 2               ; src/prelude.fth:3:13 in `swap`
002911r 2               @OPCODE_1233:   ; [c64_ir] TempStore
002911r 2  CA               dex
002912r 2  CA               dex
002913r 2  B5 03            lda $03,x
002915r 2  85 96            sta TEMP_PAX2
002917r 2  B5 02            lda $02,x
002919r 2  85 95            sta TEMP_PAX1
00291Br 2               
00291Br 2               ; src/prelude.fth:3:19 in `swap`
00291Br 2               @OPCODE_1234:   ; [c64_ir] AltPop
00291Br 2  E8               inx
00291Cr 2  E8               inx
00291Dr 2  68               pla
00291Er 2  95 00            sta $00,x
002920r 2  68               pla
002921r 2  95 01            sta $01,x
002923r 2               
002923r 2               ; src/prelude.fth:3:22 in `swap`
002923r 2               @OPCODE_1235:   ; [c64_ir] TempLoad
002923r 2  E8               inx
002924r 2  E8               inx
002925r 2  A5 95            lda TEMP_PAX1
002927r 2  95 00            sta $00,x
002929r 2  A5 96            lda TEMP_PAX2
00292Br 2  95 01            sta $01,x
00292Dr 2               
00292Dr 2               ; src/prelude.fth:14:12 in `invert`
00292Dr 2               @OPCODE_1236:   ; [c64_ir] PushLiteral(-1)
00292Dr 2  E8               inx
00292Er 2  E8               inx
00292Fr 2  A9 FF            lda #255
002931r 2  95 00            sta $00,x
002933r 2  A9 FF            lda #255
002935r 2  95 01            sta $01,x
002937r 2               
002937r 2               ; src/prelude.fth:14:15 in `invert`
002937r 2               @OPCODE_1237:   ; [c64_ir] Nand
002937r 2                   ; 26
002937r 2  CA               dex
002938r 2  CA               dex
002939r 2  B5 00            lda $00,x
00293Br 2  35 02            and $02,x
00293Dr 2  49 FF            eor #$ff
00293Fr 2  95 00            sta $00,x
002941r 2  B5 01            lda $01,x
002943r 2  35 03            and $03,x
002945r 2  49 FF            eor #$ff
002947r 2  95 01            sta $01,x
002949r 2               
002949r 2               ; src/prelude.fth:26:27 in `or`
002949r 2               @OPCODE_1238:   ; [c64_ir] Nand
002949r 2                   ; 26
002949r 2  CA               dex
00294Ar 2  CA               dex
00294Br 2  B5 00            lda $00,x
00294Dr 2  35 02            and $02,x
00294Fr 2  49 FF            eor #$ff
002951r 2  95 00            sta $00,x
002953r 2  B5 01            lda $01,x
002955r 2  35 03            and $03,x
002957r 2  49 FF            eor #$ff
002959r 2  95 01            sta $01,x
00295Br 2               
00295Br 2               ; <inline>:0:0 in `main`
00295Br 2               @OPCODE_1239:   ; [c64_ir] AltPop
00295Br 2  E8               inx
00295Cr 2  E8               inx
00295Dr 2  68               pla
00295Er 2  95 00            sta $00,x
002960r 2  68               pla
002961r 2  95 01            sta $01,x
002963r 2               
002963r 2               ; <inline>:0:0 in `main`
002963r 2               @OPCODE_1240:   ; [c64_ir] Drop
002963r 2  CA               dex
002964r 2  CA               dex
002965r 2               
002965r 2               ; snake.pax:150:27 in `turn-right`
002965r 2               @OPCODE_1241:   ; [c64_ir] JumpIf0(108)
002965r 2  CA               dex
002966r 2  CA               dex
002967r 2  B5 02            lda $02,x
002969r 2  15 03            ora $03,x
00296Br 2  D0 03            bne *+5
00296Dr 2  4C rr rr         jmp @target_108
002970r 2               
002970r 2               @target_107:
002970r 2               
002970r 2               ; snake.pax:150:30 in `turn-right`
002970r 2               @OPCODE_1243:   ; [c64_ir] PushLiteral(39)
002970r 2  E8               inx
002971r 2  E8               inx
002972r 2  A9 27            lda #39
002974r 2  95 00            sta $00,x
002976r 2  A9 00            lda #0
002978r 2  95 01            sta $01,x
00297Ar 2               
00297Ar 2               ; snake.pax:150:36 in `turn-right`
00297Ar 2               @OPCODE_1244:   ; [c64_ir] PushLiteral(-26660)
00297Ar 2  E8               inx
00297Br 2  E8               inx
00297Cr 2  A9 DC            lda #220
00297Er 2  95 00            sta $00,x
002980r 2  A9 97            lda #151
002982r 2  95 01            sta $01,x
002984r 2               
002984r 2               ; snake.pax:150:46 in `turn-right`
002984r 2               @OPCODE_1245:   ; [c64_ir] Store
002984r 2  CA               dex
002985r 2  CA               dex
002986r 2  CA               dex
002987r 2  CA               dex
002988r 2  B5 02            lda $02,x
00298Ar 2  81 04            sta ($04,x)
00298Cr 2                   ; TODO high byte
00298Cr 2               
00298Cr 2               ; snake.pax:150:48 in `turn-right`
00298Cr 2               @OPCODE_1246:   ; [c64_ir] JumpTarget(107)
00298Cr 2               
00298Cr 2               @target_108:
00298Cr 2               
00298Cr 2               ; <inline>:0:0 in `main`
00298Cr 2               @OPCODE_1248:   ; [c64_ir] AltPop
00298Cr 2  E8               inx
00298Dr 2  E8               inx
00298Er 2  68               pla
00298Fr 2  95 00            sta $00,x
002991r 2  68               pla
002992r 2  95 01            sta $01,x
002994r 2               
002994r 2               ; <inline>:0:0 in `main`
002994r 2               @OPCODE_1249:   ; [c64_ir] Drop
002994r 2  CA               dex
002995r 2  CA               dex
002996r 2               
002996r 2               ; snake.pax:155:30 in `change-direction`
002996r 2               @OPCODE_1250:   ; [c64_ir] JumpElse(123)
002996r 2  4C rr rr         jmp @target_123
002999r 2               
002999r 2               @target_109:
002999r 2               
002999r 2               ; src/prelude.fth:4:13 in `over`
002999r 2               @OPCODE_1252:   ; [c64_ir] TempStore
002999r 2  CA               dex
00299Ar 2  CA               dex
00299Br 2  B5 03            lda $03,x
00299Dr 2  85 96            sta TEMP_PAX2
00299Fr 2  B5 02            lda $02,x
0029A1r 2  85 95            sta TEMP_PAX1
0029A3r 2               
0029A3r 2               ; src/prelude.fth:4:19 in `over`
0029A3r 2               @OPCODE_1253:   ; [c64_ir] TempLoad
0029A3r 2  E8               inx
0029A4r 2  E8               inx
0029A5r 2  A5 95            lda TEMP_PAX1
0029A7r 2  95 00            sta $00,x
0029A9r 2  A5 96            lda TEMP_PAX2
0029ABr 2  95 01            sta $01,x
0029ADr 2               
0029ADr 2               ; src/prelude.fth:4:25 in `over`
0029ADr 2               @OPCODE_1254:   ; [c64_ir] PushLiteral(40)
0029ADr 2  E8               inx
0029AEr 2  E8               inx
0029AFr 2  A9 28            lda #40
0029B1r 2  95 00            sta $00,x
0029B3r 2  A9 00            lda #0
0029B5r 2  95 01            sta $01,x
0029B7r 2               
0029B7r 2               ; src/prelude.fth:4:28 in `over`
0029B7r 2               @OPCODE_1255:   ; [c64_ir] TempLoad
0029B7r 2  E8               inx
0029B8r 2  E8               inx
0029B9r 2  A5 95            lda TEMP_PAX1
0029BBr 2  95 00            sta $00,x
0029BDr 2  A5 96            lda TEMP_PAX2
0029BFr 2  95 01            sta $01,x
0029C1r 2               
0029C1r 2               ; src/prelude.fth:14:12 in `invert`
0029C1r 2               @OPCODE_1256:   ; [c64_ir] PushLiteral(-1)
0029C1r 2  E8               inx
0029C2r 2  E8               inx
0029C3r 2  A9 FF            lda #255
0029C5r 2  95 00            sta $00,x
0029C7r 2  A9 FF            lda #255
0029C9r 2  95 01            sta $01,x
0029CBr 2               
0029CBr 2               ; src/prelude.fth:14:15 in `invert`
0029CBr 2               @OPCODE_1257:   ; [c64_ir] Nand
0029CBr 2                   ; 26
0029CBr 2  CA               dex
0029CCr 2  CA               dex
0029CDr 2  B5 00            lda $00,x
0029CFr 2  35 02            and $02,x
0029D1r 2  49 FF            eor #$ff
0029D3r 2  95 00            sta $00,x
0029D5r 2  B5 01            lda $01,x
0029D7r 2  35 03            and $03,x
0029D9r 2  49 FF            eor #$ff
0029DBr 2  95 01            sta $01,x
0029DDr 2               
0029DDr 2               ; src/prelude.fth:15:19 in `negate`
0029DDr 2               @OPCODE_1258:   ; [c64_ir] PushLiteral(1)
0029DDr 2  E8               inx
0029DEr 2  E8               inx
0029DFr 2  A9 01            lda #1
0029E1r 2  95 00            sta $00,x
0029E3r 2  A9 00            lda #0
0029E5r 2  95 01            sta $01,x
0029E7r 2               
0029E7r 2               ; src/prelude.fth:15:21 in `negate`
0029E7r 2               @OPCODE_1259:   ; [c64_ir] Add
0029E7r 2                   ; 21
0029E7r 2  CA               dex
0029E8r 2  CA               dex
0029E9r 2  18               clc
0029EAr 2  B5 00            lda $00,x
0029ECr 2  75 02            adc $02,x
0029EEr 2  95 00            sta $00,x
0029F0r 2  B5 01            lda $01,x
0029F2r 2  75 03            adc $03,x
0029F4r 2  95 01            sta $01,x
0029F6r 2               
0029F6r 2               ; src/prelude.fth:16:19 in `-`
0029F6r 2               @OPCODE_1260:   ; [c64_ir] Add
0029F6r 2                   ; 21
0029F6r 2  CA               dex
0029F7r 2  CA               dex
0029F8r 2  18               clc
0029F9r 2  B5 00            lda $00,x
0029FBr 2  75 02            adc $02,x
0029FDr 2  95 00            sta $00,x
0029FFr 2  B5 01            lda $01,x
002A01r 2  75 03            adc $03,x
002A03r 2  95 01            sta $01,x
002A05r 2               
002A05r 2               ; src/prelude.fth:21:8 in `0=`
002A05r 2               @OPCODE_1261:   ; [c64_ir] JumpIf0(111)
002A05r 2  CA               dex
002A06r 2  CA               dex
002A07r 2  B5 02            lda $02,x
002A09r 2  15 03            ora $03,x
002A0Br 2  D0 03            bne *+5
002A0Dr 2  4C rr rr         jmp @target_111
002A10r 2               
002A10r 2               @target_110:
002A10r 2               
002A10r 2               ; src/prelude.fth:21:11 in `0=`
002A10r 2               @OPCODE_1263:   ; [c64_ir] PushLiteral(0)
002A10r 2  E8               inx
002A11r 2  E8               inx
002A12r 2  A9 00            lda #0
002A14r 2  95 00            sta $00,x
002A16r 2  A9 00            lda #0
002A18r 2  95 01            sta $01,x
002A1Ar 2               
002A1Ar 2               ; src/prelude.fth:21:13 in `0=`
002A1Ar 2               @OPCODE_1264:   ; [c64_ir] JumpElse(112)
002A1Ar 2  4C rr rr         jmp @target_112
002A1Dr 2               
002A1Dr 2               @target_111:
002A1Dr 2               
002A1Dr 2               ; src/prelude.fth:21:18 in `0=`
002A1Dr 2               @OPCODE_1266:   ; [c64_ir] PushLiteral(-1)
002A1Dr 2  E8               inx
002A1Er 2  E8               inx
002A1Fr 2  A9 FF            lda #255
002A21r 2  95 00            sta $00,x
002A23r 2  A9 FF            lda #255
002A25r 2  95 01            sta $01,x
002A27r 2               
002A27r 2               ; src/prelude.fth:21:21 in `0=`
002A27r 2               @OPCODE_1267:   ; [c64_ir] JumpTarget(111)
002A27r 2               
002A27r 2               @target_112:
002A27r 2               
002A27r 2               ; snake.pax:156:15 in `change-direction`
002A27r 2               @OPCODE_1269:   ; [c64_ir] JumpIf0(122)
002A27r 2  CA               dex
002A28r 2  CA               dex
002A29r 2  B5 02            lda $02,x
002A2Br 2  15 03            ora $03,x
002A2Dr 2  D0 03            bne *+5
002A2Fr 2  4C rr rr         jmp @target_122
002A32r 2               
002A32r 2               @target_113:
002A32r 2               
002A32r 2               ; <inline>:0:0 in `main`
002A32r 2               @OPCODE_1271:   ; [c64_ir] PushLiteral(7777)
002A32r 2  E8               inx
002A33r 2  E8               inx
002A34r 2  A9 61            lda #97
002A36r 2  95 00            sta $00,x
002A38r 2  A9 1E            lda #30
002A3Ar 2  95 01            sta $01,x
002A3Cr 2               
002A3Cr 2               ; <inline>:0:0 in `main`
002A3Cr 2               @OPCODE_1272:   ; [c64_ir] AltPush
002A3Cr 2  CA               dex
002A3Dr 2  CA               dex
002A3Er 2  B5 03            lda $03,x
002A40r 2  48               pha
002A41r 2  B5 02            lda $02,x
002A43r 2  48               pha
002A44r 2               
002A44r 2               ; <inline>:0:0 in `main`
002A44r 2               @OPCODE_1273:   ; [c64_ir] PushLiteral(7777)
002A44r 2  E8               inx
002A45r 2  E8               inx
002A46r 2  A9 61            lda #97
002A48r 2  95 00            sta $00,x
002A4Ar 2  A9 1E            lda #30
002A4Cr 2  95 01            sta $01,x
002A4Er 2               
002A4Er 2               ; <inline>:0:0 in `main`
002A4Er 2               @OPCODE_1274:   ; [c64_ir] AltPush
002A4Er 2  CA               dex
002A4Fr 2  CA               dex
002A50r 2  B5 03            lda $03,x
002A52r 2  48               pha
002A53r 2  B5 02            lda $02,x
002A55r 2  48               pha
002A56r 2               
002A56r 2               ; snake.pax:139:18 in `is-horizontal`
002A56r 2               @OPCODE_1275:   ; [c64_ir] PushLiteral(-26660)
002A56r 2  E8               inx
002A57r 2  E8               inx
002A58r 2  A9 DC            lda #220
002A5Ar 2  95 00            sta $00,x
002A5Cr 2  A9 97            lda #151
002A5Er 2  95 01            sta $01,x
002A60r 2               
002A60r 2               ; snake.pax:139:28 in `is-horizontal`
002A60r 2               @OPCODE_1276:   ; [c64_ir] Load
002A60r 2  A1 00            lda ($00,x)
002A62r 2  95 00            sta $00,x
002A64r 2  A9 00            lda #0
002A66r 2  95 01            sta $01,x
002A68r 2               
002A68r 2               ; src/prelude.fth:6:10 in `dup`
002A68r 2               @OPCODE_1277:   ; [c64_ir] TempStore
002A68r 2  CA               dex
002A69r 2  CA               dex
002A6Ar 2  B5 03            lda $03,x
002A6Cr 2  85 96            sta TEMP_PAX2
002A6Er 2  B5 02            lda $02,x
002A70r 2  85 95            sta TEMP_PAX1
002A72r 2               
002A72r 2               ; src/prelude.fth:6:16 in `dup`
002A72r 2               @OPCODE_1278:   ; [c64_ir] TempLoad
002A72r 2  E8               inx
002A73r 2  E8               inx
002A74r 2  A5 95            lda TEMP_PAX1
002A76r 2  95 00            sta $00,x
002A78r 2  A5 96            lda TEMP_PAX2
002A7Ar 2  95 01            sta $01,x
002A7Cr 2               
002A7Cr 2               ; src/prelude.fth:6:22 in `dup`
002A7Cr 2               @OPCODE_1279:   ; [c64_ir] TempLoad
002A7Cr 2  E8               inx
002A7Dr 2  E8               inx
002A7Er 2  A5 95            lda TEMP_PAX1
002A80r 2  95 00            sta $00,x
002A82r 2  A5 96            lda TEMP_PAX2
002A84r 2  95 01            sta $01,x
002A86r 2               
002A86r 2               ; snake.pax:140:3 in `is-horizontal`
002A86r 2               @OPCODE_1280:   ; [c64_ir] PushLiteral(37)
002A86r 2  E8               inx
002A87r 2  E8               inx
002A88r 2  A9 25            lda #37
002A8Ar 2  95 00            sta $00,x
002A8Cr 2  A9 00            lda #0
002A8Er 2  95 01            sta $01,x
002A90r 2               
002A90r 2               ; src/prelude.fth:14:12 in `invert`
002A90r 2               @OPCODE_1281:   ; [c64_ir] PushLiteral(-1)
002A90r 2  E8               inx
002A91r 2  E8               inx
002A92r 2  A9 FF            lda #255
002A94r 2  95 00            sta $00,x
002A96r 2  A9 FF            lda #255
002A98r 2  95 01            sta $01,x
002A9Ar 2               
002A9Ar 2               ; src/prelude.fth:14:15 in `invert`
002A9Ar 2               @OPCODE_1282:   ; [c64_ir] Nand
002A9Ar 2                   ; 26
002A9Ar 2  CA               dex
002A9Br 2  CA               dex
002A9Cr 2  B5 00            lda $00,x
002A9Er 2  35 02            and $02,x
002AA0r 2  49 FF            eor #$ff
002AA2r 2  95 00            sta $00,x
002AA4r 2  B5 01            lda $01,x
002AA6r 2  35 03            and $03,x
002AA8r 2  49 FF            eor #$ff
002AAAr 2  95 01            sta $01,x
002AACr 2               
002AACr 2               ; src/prelude.fth:15:19 in `negate`
002AACr 2               @OPCODE_1283:   ; [c64_ir] PushLiteral(1)
002AACr 2  E8               inx
002AADr 2  E8               inx
002AAEr 2  A9 01            lda #1
002AB0r 2  95 00            sta $00,x
002AB2r 2  A9 00            lda #0
002AB4r 2  95 01            sta $01,x
002AB6r 2               
002AB6r 2               ; src/prelude.fth:15:21 in `negate`
002AB6r 2               @OPCODE_1284:   ; [c64_ir] Add
002AB6r 2                   ; 21
002AB6r 2  CA               dex
002AB7r 2  CA               dex
002AB8r 2  18               clc
002AB9r 2  B5 00            lda $00,x
002ABBr 2  75 02            adc $02,x
002ABDr 2  95 00            sta $00,x
002ABFr 2  B5 01            lda $01,x
002AC1r 2  75 03            adc $03,x
002AC3r 2  95 01            sta $01,x
002AC5r 2               
002AC5r 2               ; src/prelude.fth:16:19 in `-`
002AC5r 2               @OPCODE_1285:   ; [c64_ir] Add
002AC5r 2                   ; 21
002AC5r 2  CA               dex
002AC6r 2  CA               dex
002AC7r 2  18               clc
002AC8r 2  B5 00            lda $00,x
002ACAr 2  75 02            adc $02,x
002ACCr 2  95 00            sta $00,x
002ACEr 2  B5 01            lda $01,x
002AD0r 2  75 03            adc $03,x
002AD2r 2  95 01            sta $01,x
002AD4r 2               
002AD4r 2               ; src/prelude.fth:21:8 in `0=`
002AD4r 2               @OPCODE_1286:   ; [c64_ir] JumpIf0(115)
002AD4r 2  CA               dex
002AD5r 2  CA               dex
002AD6r 2  B5 02            lda $02,x
002AD8r 2  15 03            ora $03,x
002ADAr 2  D0 03            bne *+5
002ADCr 2  4C rr rr         jmp @target_115
002ADFr 2               
002ADFr 2               @target_114:
002ADFr 2               
002ADFr 2               ; src/prelude.fth:21:11 in `0=`
002ADFr 2               @OPCODE_1288:   ; [c64_ir] PushLiteral(0)
002ADFr 2  E8               inx
002AE0r 2  E8               inx
002AE1r 2  A9 00            lda #0
002AE3r 2  95 00            sta $00,x
002AE5r 2  A9 00            lda #0
002AE7r 2  95 01            sta $01,x
002AE9r 2               
002AE9r 2               ; src/prelude.fth:21:13 in `0=`
002AE9r 2               @OPCODE_1289:   ; [c64_ir] JumpElse(116)
002AE9r 2  4C rr rr         jmp @target_116
002AECr 2               
002AECr 2               @target_115:
002AECr 2               
002AECr 2               ; src/prelude.fth:21:18 in `0=`
002AECr 2               @OPCODE_1291:   ; [c64_ir] PushLiteral(-1)
002AECr 2  E8               inx
002AEDr 2  E8               inx
002AEEr 2  A9 FF            lda #255
002AF0r 2  95 00            sta $00,x
002AF2r 2  A9 FF            lda #255
002AF4r 2  95 01            sta $01,x
002AF6r 2               
002AF6r 2               ; src/prelude.fth:21:21 in `0=`
002AF6r 2               @OPCODE_1292:   ; [c64_ir] JumpTarget(115)
002AF6r 2               
002AF6r 2               @target_116:
002AF6r 2               
002AF6r 2               ; src/prelude.fth:3:10 in `swap`
002AF6r 2               @OPCODE_1294:   ; [c64_ir] AltPush
002AF6r 2  CA               dex
002AF7r 2  CA               dex
002AF8r 2  B5 03            lda $03,x
002AFAr 2  48               pha
002AFBr 2  B5 02            lda $02,x
002AFDr 2  48               pha
002AFEr 2               
002AFEr 2               ; src/prelude.fth:3:13 in `swap`
002AFEr 2               @OPCODE_1295:   ; [c64_ir] TempStore
002AFEr 2  CA               dex
002AFFr 2  CA               dex
002B00r 2  B5 03            lda $03,x
002B02r 2  85 96            sta TEMP_PAX2
002B04r 2  B5 02            lda $02,x
002B06r 2  85 95            sta TEMP_PAX1
002B08r 2               
002B08r 2               ; src/prelude.fth:3:19 in `swap`
002B08r 2               @OPCODE_1296:   ; [c64_ir] AltPop
002B08r 2  E8               inx
002B09r 2  E8               inx
002B0Ar 2  68               pla
002B0Br 2  95 00            sta $00,x
002B0Dr 2  68               pla
002B0Er 2  95 01            sta $01,x
002B10r 2               
002B10r 2               ; src/prelude.fth:3:22 in `swap`
002B10r 2               @OPCODE_1297:   ; [c64_ir] TempLoad
002B10r 2  E8               inx
002B11r 2  E8               inx
002B12r 2  A5 95            lda TEMP_PAX1
002B14r 2  95 00            sta $00,x
002B16r 2  A5 96            lda TEMP_PAX2
002B18r 2  95 01            sta $01,x
002B1Ar 2               
002B1Ar 2               ; snake.pax:141:3 in `is-horizontal`
002B1Ar 2               @OPCODE_1298:   ; [c64_ir] PushLiteral(39)
002B1Ar 2  E8               inx
002B1Br 2  E8               inx
002B1Cr 2  A9 27            lda #39
002B1Er 2  95 00            sta $00,x
002B20r 2  A9 00            lda #0
002B22r 2  95 01            sta $01,x
002B24r 2               
002B24r 2               ; src/prelude.fth:14:12 in `invert`
002B24r 2               @OPCODE_1299:   ; [c64_ir] PushLiteral(-1)
002B24r 2  E8               inx
002B25r 2  E8               inx
002B26r 2  A9 FF            lda #255
002B28r 2  95 00            sta $00,x
002B2Ar 2  A9 FF            lda #255
002B2Cr 2  95 01            sta $01,x
002B2Er 2               
002B2Er 2               ; src/prelude.fth:14:15 in `invert`
002B2Er 2               @OPCODE_1300:   ; [c64_ir] Nand
002B2Er 2                   ; 26
002B2Er 2  CA               dex
002B2Fr 2  CA               dex
002B30r 2  B5 00            lda $00,x
002B32r 2  35 02            and $02,x
002B34r 2  49 FF            eor #$ff
002B36r 2  95 00            sta $00,x
002B38r 2  B5 01            lda $01,x
002B3Ar 2  35 03            and $03,x
002B3Cr 2  49 FF            eor #$ff
002B3Er 2  95 01            sta $01,x
002B40r 2               
002B40r 2               ; src/prelude.fth:15:19 in `negate`
002B40r 2               @OPCODE_1301:   ; [c64_ir] PushLiteral(1)
002B40r 2  E8               inx
002B41r 2  E8               inx
002B42r 2  A9 01            lda #1
002B44r 2  95 00            sta $00,x
002B46r 2  A9 00            lda #0
002B48r 2  95 01            sta $01,x
002B4Ar 2               
002B4Ar 2               ; src/prelude.fth:15:21 in `negate`
002B4Ar 2               @OPCODE_1302:   ; [c64_ir] Add
002B4Ar 2                   ; 21
002B4Ar 2  CA               dex
002B4Br 2  CA               dex
002B4Cr 2  18               clc
002B4Dr 2  B5 00            lda $00,x
002B4Fr 2  75 02            adc $02,x
002B51r 2  95 00            sta $00,x
002B53r 2  B5 01            lda $01,x
002B55r 2  75 03            adc $03,x
002B57r 2  95 01            sta $01,x
002B59r 2               
002B59r 2               ; src/prelude.fth:16:19 in `-`
002B59r 2               @OPCODE_1303:   ; [c64_ir] Add
002B59r 2                   ; 21
002B59r 2  CA               dex
002B5Ar 2  CA               dex
002B5Br 2  18               clc
002B5Cr 2  B5 00            lda $00,x
002B5Er 2  75 02            adc $02,x
002B60r 2  95 00            sta $00,x
002B62r 2  B5 01            lda $01,x
002B64r 2  75 03            adc $03,x
002B66r 2  95 01            sta $01,x
002B68r 2               
002B68r 2               ; src/prelude.fth:21:8 in `0=`
002B68r 2               @OPCODE_1304:   ; [c64_ir] JumpIf0(118)
002B68r 2  CA               dex
002B69r 2  CA               dex
002B6Ar 2  B5 02            lda $02,x
002B6Cr 2  15 03            ora $03,x
002B6Er 2  D0 03            bne *+5
002B70r 2  4C rr rr         jmp @target_118
002B73r 2               
002B73r 2               @target_117:
002B73r 2               
002B73r 2               ; src/prelude.fth:21:11 in `0=`
002B73r 2               @OPCODE_1306:   ; [c64_ir] PushLiteral(0)
002B73r 2  E8               inx
002B74r 2  E8               inx
002B75r 2  A9 00            lda #0
002B77r 2  95 00            sta $00,x
002B79r 2  A9 00            lda #0
002B7Br 2  95 01            sta $01,x
002B7Dr 2               
002B7Dr 2               ; src/prelude.fth:21:13 in `0=`
002B7Dr 2               @OPCODE_1307:   ; [c64_ir] JumpElse(119)
002B7Dr 2  4C rr rr         jmp @target_119
002B80r 2               
002B80r 2               @target_118:
002B80r 2               
002B80r 2               ; src/prelude.fth:21:18 in `0=`
002B80r 2               @OPCODE_1309:   ; [c64_ir] PushLiteral(-1)
002B80r 2  E8               inx
002B81r 2  E8               inx
002B82r 2  A9 FF            lda #255
002B84r 2  95 00            sta $00,x
002B86r 2  A9 FF            lda #255
002B88r 2  95 01            sta $01,x
002B8Ar 2               
002B8Ar 2               ; src/prelude.fth:21:21 in `0=`
002B8Ar 2               @OPCODE_1310:   ; [c64_ir] JumpTarget(118)
002B8Ar 2               
002B8Ar 2               @target_119:
002B8Ar 2               
002B8Ar 2               ; src/prelude.fth:14:12 in `invert`
002B8Ar 2               @OPCODE_1312:   ; [c64_ir] PushLiteral(-1)
002B8Ar 2  E8               inx
002B8Br 2  E8               inx
002B8Cr 2  A9 FF            lda #255
002B8Er 2  95 00            sta $00,x
002B90r 2  A9 FF            lda #255
002B92r 2  95 01            sta $01,x
002B94r 2               
002B94r 2               ; src/prelude.fth:14:15 in `invert`
002B94r 2               @OPCODE_1313:   ; [c64_ir] Nand
002B94r 2                   ; 26
002B94r 2  CA               dex
002B95r 2  CA               dex
002B96r 2  B5 00            lda $00,x
002B98r 2  35 02            and $02,x
002B9Ar 2  49 FF            eor #$ff
002B9Cr 2  95 00            sta $00,x
002B9Er 2  B5 01            lda $01,x
002BA0r 2  35 03            and $03,x
002BA2r 2  49 FF            eor #$ff
002BA4r 2  95 01            sta $01,x
002BA6r 2               
002BA6r 2               ; src/prelude.fth:3:10 in `swap`
002BA6r 2               @OPCODE_1314:   ; [c64_ir] AltPush
002BA6r 2  CA               dex
002BA7r 2  CA               dex
002BA8r 2  B5 03            lda $03,x
002BAAr 2  48               pha
002BABr 2  B5 02            lda $02,x
002BADr 2  48               pha
002BAEr 2               
002BAEr 2               ; src/prelude.fth:3:13 in `swap`
002BAEr 2               @OPCODE_1315:   ; [c64_ir] TempStore
002BAEr 2  CA               dex
002BAFr 2  CA               dex
002BB0r 2  B5 03            lda $03,x
002BB2r 2  85 96            sta TEMP_PAX2
002BB4r 2  B5 02            lda $02,x
002BB6r 2  85 95            sta TEMP_PAX1
002BB8r 2               
002BB8r 2               ; src/prelude.fth:3:19 in `swap`
002BB8r 2               @OPCODE_1316:   ; [c64_ir] AltPop
002BB8r 2  E8               inx
002BB9r 2  E8               inx
002BBAr 2  68               pla
002BBBr 2  95 00            sta $00,x
002BBDr 2  68               pla
002BBEr 2  95 01            sta $01,x
002BC0r 2               
002BC0r 2               ; src/prelude.fth:3:22 in `swap`
002BC0r 2               @OPCODE_1317:   ; [c64_ir] TempLoad
002BC0r 2  E8               inx
002BC1r 2  E8               inx
002BC2r 2  A5 95            lda TEMP_PAX1
002BC4r 2  95 00            sta $00,x
002BC6r 2  A5 96            lda TEMP_PAX2
002BC8r 2  95 01            sta $01,x
002BCAr 2               
002BCAr 2               ; src/prelude.fth:14:12 in `invert`
002BCAr 2               @OPCODE_1318:   ; [c64_ir] PushLiteral(-1)
002BCAr 2  E8               inx
002BCBr 2  E8               inx
002BCCr 2  A9 FF            lda #255
002BCEr 2  95 00            sta $00,x
002BD0r 2  A9 FF            lda #255
002BD2r 2  95 01            sta $01,x
002BD4r 2               
002BD4r 2               ; src/prelude.fth:14:15 in `invert`
002BD4r 2               @OPCODE_1319:   ; [c64_ir] Nand
002BD4r 2                   ; 26
002BD4r 2  CA               dex
002BD5r 2  CA               dex
002BD6r 2  B5 00            lda $00,x
002BD8r 2  35 02            and $02,x
002BDAr 2  49 FF            eor #$ff
002BDCr 2  95 00            sta $00,x
002BDEr 2  B5 01            lda $01,x
002BE0r 2  35 03            and $03,x
002BE2r 2  49 FF            eor #$ff
002BE4r 2  95 01            sta $01,x
002BE6r 2               
002BE6r 2               ; src/prelude.fth:26:27 in `or`
002BE6r 2               @OPCODE_1320:   ; [c64_ir] Nand
002BE6r 2                   ; 26
002BE6r 2  CA               dex
002BE7r 2  CA               dex
002BE8r 2  B5 00            lda $00,x
002BEAr 2  35 02            and $02,x
002BECr 2  49 FF            eor #$ff
002BEEr 2  95 00            sta $00,x
002BF0r 2  B5 01            lda $01,x
002BF2r 2  35 03            and $03,x
002BF4r 2  49 FF            eor #$ff
002BF6r 2  95 01            sta $01,x
002BF8r 2               
002BF8r 2               ; <inline>:0:0 in `main`
002BF8r 2               @OPCODE_1321:   ; [c64_ir] AltPop
002BF8r 2  E8               inx
002BF9r 2  E8               inx
002BFAr 2  68               pla
002BFBr 2  95 00            sta $00,x
002BFDr 2  68               pla
002BFEr 2  95 01            sta $01,x
002C00r 2               
002C00r 2               ; <inline>:0:0 in `main`
002C00r 2               @OPCODE_1322:   ; [c64_ir] Drop
002C00r 2  CA               dex
002C01r 2  CA               dex
002C02r 2               
002C02r 2               ; snake.pax:149:29 in `turn-down`
002C02r 2               @OPCODE_1323:   ; [c64_ir] JumpIf0(121)
002C02r 2  CA               dex
002C03r 2  CA               dex
002C04r 2  B5 02            lda $02,x
002C06r 2  15 03            ora $03,x
002C08r 2  D0 03            bne *+5
002C0Ar 2  4C rr rr         jmp @target_121
002C0Dr 2               
002C0Dr 2               @target_120:
002C0Dr 2               
002C0Dr 2               ; snake.pax:149:32 in `turn-down`
002C0Dr 2               @OPCODE_1325:   ; [c64_ir] PushLiteral(40)
002C0Dr 2  E8               inx
002C0Er 2  E8               inx
002C0Fr 2  A9 28            lda #40
002C11r 2  95 00            sta $00,x
002C13r 2  A9 00            lda #0
002C15r 2  95 01            sta $01,x
002C17r 2               
002C17r 2               ; snake.pax:149:37 in `turn-down`
002C17r 2               @OPCODE_1326:   ; [c64_ir] PushLiteral(-26660)
002C17r 2  E8               inx
002C18r 2  E8               inx
002C19r 2  A9 DC            lda #220
002C1Br 2  95 00            sta $00,x
002C1Dr 2  A9 97            lda #151
002C1Fr 2  95 01            sta $01,x
002C21r 2               
002C21r 2               ; snake.pax:149:47 in `turn-down`
002C21r 2               @OPCODE_1327:   ; [c64_ir] Store
002C21r 2  CA               dex
002C22r 2  CA               dex
002C23r 2  CA               dex
002C24r 2  CA               dex
002C25r 2  B5 02            lda $02,x
002C27r 2  81 04            sta ($04,x)
002C29r 2                   ; TODO high byte
002C29r 2               
002C29r 2               ; snake.pax:149:49 in `turn-down`
002C29r 2               @OPCODE_1328:   ; [c64_ir] JumpTarget(120)
002C29r 2               
002C29r 2               @target_121:
002C29r 2               
002C29r 2               ; <inline>:0:0 in `main`
002C29r 2               @OPCODE_1330:   ; [c64_ir] AltPop
002C29r 2  E8               inx
002C2Ar 2  E8               inx
002C2Br 2  68               pla
002C2Cr 2  95 00            sta $00,x
002C2Er 2  68               pla
002C2Fr 2  95 01            sta $01,x
002C31r 2               
002C31r 2               ; <inline>:0:0 in `main`
002C31r 2               @OPCODE_1331:   ; [c64_ir] Drop
002C31r 2  CA               dex
002C32r 2  CA               dex
002C33r 2               
002C33r 2               ; snake.pax:157:3 in `change-direction`
002C33r 2               @OPCODE_1332:   ; [c64_ir] JumpTarget(121)
002C33r 2               
002C33r 2               @target_122:
002C33r 2               
002C33r 2               ; snake.pax:157:8 in `change-direction`
002C33r 2               @OPCODE_1334:   ; [c64_ir] JumpTarget(122)
002C33r 2               
002C33r 2               @target_123:
002C33r 2               
002C33r 2               ; snake.pax:157:13 in `change-direction`
002C33r 2               @OPCODE_1336:   ; [c64_ir] JumpTarget(123)
002C33r 2               
002C33r 2               @target_124:
002C33r 2               
002C33r 2               ; snake.pax:157:18 in `change-direction`
002C33r 2               @OPCODE_1338:   ; [c64_ir] JumpTarget(124)
002C33r 2               
002C33r 2               @target_125:
002C33r 2               
002C33r 2               ; snake.pax:157:23 in `change-direction`
002C33r 2               @OPCODE_1340:   ; [c64_ir] Drop
002C33r 2  CA               dex
002C34r 2  CA               dex
002C35r 2               
002C35r 2               ; <inline>:0:0 in `main`
002C35r 2               @OPCODE_1341:   ; [c64_ir] AltPop
002C35r 2  E8               inx
002C36r 2  E8               inx
002C37r 2  68               pla
002C38r 2  95 00            sta $00,x
002C3Ar 2  68               pla
002C3Br 2  95 01            sta $01,x
002C3Dr 2               
002C3Dr 2               ; <inline>:0:0 in `main`
002C3Dr 2               @OPCODE_1342:   ; [c64_ir] Drop
002C3Dr 2  CA               dex
002C3Er 2  CA               dex
002C3Fr 2               
002C3Fr 2               ; snake.pax:161:3 in `check-input`
002C3Fr 2               @OPCODE_1343:   ; [c64_ir] PushLiteral(0)
002C3Fr 2  E8               inx
002C40r 2  E8               inx
002C41r 2  A9 00            lda #0
002C43r 2  95 00            sta $00,x
002C45r 2  A9 00            lda #0
002C47r 2  95 01            sta $01,x
002C49r 2               
002C49r 2               ; snake.pax:161:5 in `check-input`
002C49r 2               @OPCODE_1344:   ; [c64_ir] PushLiteral(126)
002C49r 2  E8               inx
002C4Ar 2  E8               inx
002C4Br 2  A9 7E            lda #126
002C4Dr 2  95 00            sta $00,x
002C4Fr 2  A9 00            lda #0
002C51r 2  95 01            sta $01,x
002C53r 2               
002C53r 2               ; snake.pax:161:14 in `check-input`
002C53r 2               @OPCODE_1345:   ; [c64_ir] Store
002C53r 2  CA               dex
002C54r 2  CA               dex
002C55r 2  CA               dex
002C56r 2  CA               dex
002C57r 2  B5 02            lda $02,x
002C59r 2  81 04            sta ($04,x)
002C5Br 2                   ; TODO high byte
002C5Br 2               
002C5Br 2               ; <inline>:0:0 in `main`
002C5Br 2               @OPCODE_1346:   ; [c64_ir] AltPop
002C5Br 2  E8               inx
002C5Cr 2  E8               inx
002C5Dr 2  68               pla
002C5Er 2  95 00            sta $00,x
002C60r 2  68               pla
002C61r 2  95 01            sta $01,x
002C63r 2               
002C63r 2               ; <inline>:0:0 in `main`
002C63r 2               @OPCODE_1347:   ; [c64_ir] Drop
002C63r 2  CA               dex
002C64r 2  CA               dex
002C65r 2               
002C65r 2               ; <inline>:0:0 in `main`
002C65r 2               @OPCODE_1348:   ; [c64_ir] PushLiteral(7777)
002C65r 2  E8               inx
002C66r 2  E8               inx
002C67r 2  A9 61            lda #97
002C69r 2  95 00            sta $00,x
002C6Br 2  A9 1E            lda #30
002C6Dr 2  95 01            sta $01,x
002C6Fr 2               
002C6Fr 2               ; <inline>:0:0 in `main`
002C6Fr 2               @OPCODE_1349:   ; [c64_ir] AltPush
002C6Fr 2  CA               dex
002C70r 2  CA               dex
002C71r 2  B5 03            lda $03,x
002C73r 2  48               pha
002C74r 2  B5 02            lda $02,x
002C76r 2  48               pha
002C77r 2               
002C77r 2               ; snake.pax:133:3 in `move-snake-tail`
002C77r 2               @OPCODE_1350:   ; [c64_ir] PushLiteral(-1)
002C77r 2  E8               inx
002C78r 2  E8               inx
002C79r 2  A9 FF            lda #255
002C7Br 2  95 00            sta $00,x
002C7Dr 2  A9 FF            lda #255
002C7Fr 2  95 01            sta $01,x
002C81r 2               
002C81r 2               ; snake.pax:133:6 in `move-snake-tail`
002C81r 2               @OPCODE_1351:   ; [c64_ir] PushLiteral(-26658)
002C81r 2  E8               inx
002C82r 2  E8               inx
002C83r 2  A9 DE            lda #222
002C85r 2  95 00            sta $00,x
002C87r 2  A9 97            lda #151
002C89r 2  95 01            sta $01,x
002C8Br 2               
002C8Br 2               ; snake.pax:133:13 in `move-snake-tail`
002C8Br 2               @OPCODE_1352:   ; [c64_ir] Load
002C8Br 2  A1 00            lda ($00,x)
002C8Dr 2  95 00            sta $00,x
002C8Fr 2  A9 00            lda #0
002C91r 2  95 01            sta $01,x
002C93r 2               
002C93r 2               ; snake.pax:133:15 in `move-snake-tail`
002C93r 2               @OPCODE_1353:   ; [c64_ir] AltPush
002C93r 2  CA               dex
002C94r 2  CA               dex
002C95r 2  B5 03            lda $03,x
002C97r 2  48               pha
002C98r 2  B5 02            lda $02,x
002C9Ar 2  48               pha
002C9Br 2               
002C9Br 2               ; snake.pax:133:15 in `move-snake-tail`
002C9Br 2               @OPCODE_1354:   ; [c64_ir] AltPush
002C9Br 2  CA               dex
002C9Cr 2  CA               dex
002C9Dr 2  B5 03            lda $03,x
002C9Fr 2  48               pha
002CA0r 2  B5 02            lda $02,x
002CA2r 2  48               pha
002CA3r 2               
002CA3r 2               ; snake.pax:133:15 in `move-snake-tail`
002CA3r 2               @OPCODE_1355:   ; [c64_ir] LoopTarget(125)
002CA3r 2               
002CA3r 2               @target_126:
002CA3r 2               
002CA3r 2               ; src/prelude.fth:38:8 in `i`
002CA3r 2               @OPCODE_1357:   ; [c64_ir] AltPop
002CA3r 2  E8               inx
002CA4r 2  E8               inx
002CA5r 2  68               pla
002CA6r 2  95 00            sta $00,x
002CA8r 2  68               pla
002CA9r 2  95 01            sta $01,x
002CABr 2               
002CABr 2               ; src/prelude.fth:38:11 in `i`
002CABr 2               @OPCODE_1358:   ; [c64_ir] AltPop
002CABr 2  E8               inx
002CACr 2  E8               inx
002CADr 2  68               pla
002CAEr 2  95 00            sta $00,x
002CB0r 2  68               pla
002CB1r 2  95 01            sta $01,x
002CB3r 2               
002CB3r 2               ; src/prelude.fth:38:14 in `i`
002CB3r 2               @OPCODE_1359:   ; [c64_ir] TempStore
002CB3r 2  CA               dex
002CB4r 2  CA               dex
002CB5r 2  B5 03            lda $03,x
002CB7r 2  85 96            sta TEMP_PAX2
002CB9r 2  B5 02            lda $02,x
002CBBr 2  85 95            sta TEMP_PAX1
002CBDr 2               
002CBDr 2               ; src/prelude.fth:38:20 in `i`
002CBDr 2               @OPCODE_1360:   ; [c64_ir] TempLoad
002CBDr 2  E8               inx
002CBEr 2  E8               inx
002CBFr 2  A5 95            lda TEMP_PAX1
002CC1r 2  95 00            sta $00,x
002CC3r 2  A5 96            lda TEMP_PAX2
002CC5r 2  95 01            sta $01,x
002CC7r 2               
002CC7r 2               ; src/prelude.fth:38:26 in `i`
002CC7r 2               @OPCODE_1361:   ; [c64_ir] AltPush
002CC7r 2  CA               dex
002CC8r 2  CA               dex
002CC9r 2  B5 03            lda $03,x
002CCBr 2  48               pha
002CCCr 2  B5 02            lda $02,x
002CCEr 2  48               pha
002CCFr 2               
002CCFr 2               ; src/prelude.fth:38:29 in `i`
002CCFr 2               @OPCODE_1362:   ; [c64_ir] AltPush
002CCFr 2  CA               dex
002CD0r 2  CA               dex
002CD1r 2  B5 03            lda $03,x
002CD3r 2  48               pha
002CD4r 2  B5 02            lda $02,x
002CD6r 2  48               pha
002CD7r 2               
002CD7r 2               ; src/prelude.fth:38:8 in `i`
002CD7r 2               @OPCODE_1363:   ; [c64_ir] AltPop
002CD7r 2  E8               inx
002CD8r 2  E8               inx
002CD9r 2  68               pla
002CDAr 2  95 00            sta $00,x
002CDCr 2  68               pla
002CDDr 2  95 01            sta $01,x
002CDFr 2               
002CDFr 2               ; src/prelude.fth:38:11 in `i`
002CDFr 2               @OPCODE_1364:   ; [c64_ir] AltPop
002CDFr 2  E8               inx
002CE0r 2  E8               inx
002CE1r 2  68               pla
002CE2r 2  95 00            sta $00,x
002CE4r 2  68               pla
002CE5r 2  95 01            sta $01,x
002CE7r 2               
002CE7r 2               ; src/prelude.fth:38:14 in `i`
002CE7r 2               @OPCODE_1365:   ; [c64_ir] TempStore
002CE7r 2  CA               dex
002CE8r 2  CA               dex
002CE9r 2  B5 03            lda $03,x
002CEBr 2  85 96            sta TEMP_PAX2
002CEDr 2  B5 02            lda $02,x
002CEFr 2  85 95            sta TEMP_PAX1
002CF1r 2               
002CF1r 2               ; src/prelude.fth:38:20 in `i`
002CF1r 2               @OPCODE_1366:   ; [c64_ir] TempLoad
002CF1r 2  E8               inx
002CF2r 2  E8               inx
002CF3r 2  A5 95            lda TEMP_PAX1
002CF5r 2  95 00            sta $00,x
002CF7r 2  A5 96            lda TEMP_PAX2
002CF9r 2  95 01            sta $01,x
002CFBr 2               
002CFBr 2               ; src/prelude.fth:38:26 in `i`
002CFBr 2               @OPCODE_1367:   ; [c64_ir] AltPush
002CFBr 2  CA               dex
002CFCr 2  CA               dex
002CFDr 2  B5 03            lda $03,x
002CFFr 2  48               pha
002D00r 2  B5 02            lda $02,x
002D02r 2  48               pha
002D03r 2               
002D03r 2               ; src/prelude.fth:38:29 in `i`
002D03r 2               @OPCODE_1368:   ; [c64_ir] AltPush
002D03r 2  CA               dex
002D04r 2  CA               dex
002D05r 2  B5 03            lda $03,x
002D07r 2  48               pha
002D08r 2  B5 02            lda $02,x
002D0Ar 2  48               pha
002D0Br 2               
002D0Br 2               ; src/prelude.fth:38:35 in `i`
002D0Br 2               @OPCODE_1369:   ; [c64_ir] TempLoad
002D0Br 2  E8               inx
002D0Cr 2  E8               inx
002D0Dr 2  A5 95            lda TEMP_PAX1
002D0Fr 2  95 00            sta $00,x
002D11r 2  A5 96            lda TEMP_PAX2
002D13r 2  95 01            sta $01,x
002D15r 2               
002D15r 2               ; src/prelude.fth:6:10 in `dup`
002D15r 2               @OPCODE_1370:   ; [c64_ir] TempStore
002D15r 2  CA               dex
002D16r 2  CA               dex
002D17r 2  B5 03            lda $03,x
002D19r 2  85 96            sta TEMP_PAX2
002D1Br 2  B5 02            lda $02,x
002D1Dr 2  85 95            sta TEMP_PAX1
002D1Fr 2               
002D1Fr 2               ; src/prelude.fth:6:16 in `dup`
002D1Fr 2               @OPCODE_1371:   ; [c64_ir] TempLoad
002D1Fr 2  E8               inx
002D20r 2  E8               inx
002D21r 2  A5 95            lda TEMP_PAX1
002D23r 2  95 00            sta $00,x
002D25r 2  A5 96            lda TEMP_PAX2
002D27r 2  95 01            sta $01,x
002D29r 2               
002D29r 2               ; src/prelude.fth:6:22 in `dup`
002D29r 2               @OPCODE_1372:   ; [c64_ir] TempLoad
002D29r 2  E8               inx
002D2Ar 2  E8               inx
002D2Br 2  A5 95            lda TEMP_PAX1
002D2Dr 2  95 00            sta $00,x
002D2Fr 2  A5 96            lda TEMP_PAX2
002D31r 2  95 01            sta $01,x
002D33r 2               
002D33r 2               ; src/prelude.fth:41:13 in `cells`
002D33r 2               @OPCODE_1373:   ; [c64_ir] Add
002D33r 2                   ; 21
002D33r 2  CA               dex
002D34r 2  CA               dex
002D35r 2  18               clc
002D36r 2  B5 00            lda $00,x
002D38r 2  75 02            adc $02,x
002D3Ar 2  95 00            sta $00,x
002D3Cr 2  B5 01            lda $01,x
002D3Er 2  75 03            adc $03,x
002D40r 2  95 01            sta $01,x
002D42r 2               
002D42r 2               ; snake.pax:42:9 in `snake-x`
002D42r 2               @OPCODE_1374:   ; [c64_ir] PushLiteral(-28668)
002D42r 2  E8               inx
002D43r 2  E8               inx
002D44r 2  A9 04            lda #4
002D46r 2  95 00            sta $00,x
002D48r 2  A9 90            lda #144
002D4Ar 2  95 01            sta $01,x
002D4Cr 2               
002D4Cr 2               ; snake.pax:42:22 in `snake-x`
002D4Cr 2               @OPCODE_1375:   ; [c64_ir] Add
002D4Cr 2                   ; 21
002D4Cr 2  CA               dex
002D4Dr 2  CA               dex
002D4Er 2  18               clc
002D4Fr 2  B5 00            lda $00,x
002D51r 2  75 02            adc $02,x
002D53r 2  95 00            sta $00,x
002D55r 2  B5 01            lda $01,x
002D57r 2  75 03            adc $03,x
002D59r 2  95 01            sta $01,x
002D5Br 2               
002D5Br 2               ; snake.pax:134:24 in `move-snake-tail`
002D5Br 2               @OPCODE_1376:   ; [c64_ir] Load
002D5Br 2  A1 00            lda ($00,x)
002D5Dr 2  95 00            sta $00,x
002D5Fr 2  A9 00            lda #0
002D61r 2  95 01            sta $01,x
002D63r 2               
002D63r 2               ; src/prelude.fth:38:8 in `i`
002D63r 2               @OPCODE_1377:   ; [c64_ir] AltPop
002D63r 2  E8               inx
002D64r 2  E8               inx
002D65r 2  68               pla
002D66r 2  95 00            sta $00,x
002D68r 2  68               pla
002D69r 2  95 01            sta $01,x
002D6Br 2               
002D6Br 2               ; src/prelude.fth:38:11 in `i`
002D6Br 2               @OPCODE_1378:   ; [c64_ir] AltPop
002D6Br 2  E8               inx
002D6Cr 2  E8               inx
002D6Dr 2  68               pla
002D6Er 2  95 00            sta $00,x
002D70r 2  68               pla
002D71r 2  95 01            sta $01,x
002D73r 2               
002D73r 2               ; src/prelude.fth:38:14 in `i`
002D73r 2               @OPCODE_1379:   ; [c64_ir] TempStore
002D73r 2  CA               dex
002D74r 2  CA               dex
002D75r 2  B5 03            lda $03,x
002D77r 2  85 96            sta TEMP_PAX2
002D79r 2  B5 02            lda $02,x
002D7Br 2  85 95            sta TEMP_PAX1
002D7Dr 2               
002D7Dr 2               ; src/prelude.fth:38:20 in `i`
002D7Dr 2               @OPCODE_1380:   ; [c64_ir] TempLoad
002D7Dr 2  E8               inx
002D7Er 2  E8               inx
002D7Fr 2  A5 95            lda TEMP_PAX1
002D81r 2  95 00            sta $00,x
002D83r 2  A5 96            lda TEMP_PAX2
002D85r 2  95 01            sta $01,x
002D87r 2               
002D87r 2               ; src/prelude.fth:38:26 in `i`
002D87r 2               @OPCODE_1381:   ; [c64_ir] AltPush
002D87r 2  CA               dex
002D88r 2  CA               dex
002D89r 2  B5 03            lda $03,x
002D8Br 2  48               pha
002D8Cr 2  B5 02            lda $02,x
002D8Er 2  48               pha
002D8Fr 2               
002D8Fr 2               ; src/prelude.fth:38:29 in `i`
002D8Fr 2               @OPCODE_1382:   ; [c64_ir] AltPush
002D8Fr 2  CA               dex
002D90r 2  CA               dex
002D91r 2  B5 03            lda $03,x
002D93r 2  48               pha
002D94r 2  B5 02            lda $02,x
002D96r 2  48               pha
002D97r 2               
002D97r 2               ; src/prelude.fth:38:35 in `i`
002D97r 2               @OPCODE_1383:   ; [c64_ir] TempLoad
002D97r 2  E8               inx
002D98r 2  E8               inx
002D99r 2  A5 95            lda TEMP_PAX1
002D9Br 2  95 00            sta $00,x
002D9Dr 2  A5 96            lda TEMP_PAX2
002D9Fr 2  95 01            sta $01,x
002DA1r 2               
002DA1r 2               ; snake.pax:134:28 in `move-snake-tail`
002DA1r 2               @OPCODE_1384:   ; [c64_ir] PushLiteral(1)
002DA1r 2  E8               inx
002DA2r 2  E8               inx
002DA3r 2  A9 01            lda #1
002DA5r 2  95 00            sta $00,x
002DA7r 2  A9 00            lda #0
002DA9r 2  95 01            sta $01,x
002DABr 2               
002DABr 2               ; snake.pax:134:30 in `move-snake-tail`
002DABr 2               @OPCODE_1385:   ; [c64_ir] Add
002DABr 2                   ; 21
002DABr 2  CA               dex
002DACr 2  CA               dex
002DADr 2  18               clc
002DAEr 2  B5 00            lda $00,x
002DB0r 2  75 02            adc $02,x
002DB2r 2  95 00            sta $00,x
002DB4r 2  B5 01            lda $01,x
002DB6r 2  75 03            adc $03,x
002DB8r 2  95 01            sta $01,x
002DBAr 2               
002DBAr 2               ; src/prelude.fth:6:10 in `dup`
002DBAr 2               @OPCODE_1386:   ; [c64_ir] TempStore
002DBAr 2  CA               dex
002DBBr 2  CA               dex
002DBCr 2  B5 03            lda $03,x
002DBEr 2  85 96            sta TEMP_PAX2
002DC0r 2  B5 02            lda $02,x
002DC2r 2  85 95            sta TEMP_PAX1
002DC4r 2               
002DC4r 2               ; src/prelude.fth:6:16 in `dup`
002DC4r 2               @OPCODE_1387:   ; [c64_ir] TempLoad
002DC4r 2  E8               inx
002DC5r 2  E8               inx
002DC6r 2  A5 95            lda TEMP_PAX1
002DC8r 2  95 00            sta $00,x
002DCAr 2  A5 96            lda TEMP_PAX2
002DCCr 2  95 01            sta $01,x
002DCEr 2               
002DCEr 2               ; src/prelude.fth:6:22 in `dup`
002DCEr 2               @OPCODE_1388:   ; [c64_ir] TempLoad
002DCEr 2  E8               inx
002DCFr 2  E8               inx
002DD0r 2  A5 95            lda TEMP_PAX1
002DD2r 2  95 00            sta $00,x
002DD4r 2  A5 96            lda TEMP_PAX2
002DD6r 2  95 01            sta $01,x
002DD8r 2               
002DD8r 2               ; src/prelude.fth:41:13 in `cells`
002DD8r 2               @OPCODE_1389:   ; [c64_ir] Add
002DD8r 2                   ; 21
002DD8r 2  CA               dex
002DD9r 2  CA               dex
002DDAr 2  18               clc
002DDBr 2  B5 00            lda $00,x
002DDDr 2  75 02            adc $02,x
002DDFr 2  95 00            sta $00,x
002DE1r 2  B5 01            lda $01,x
002DE3r 2  75 03            adc $03,x
002DE5r 2  95 01            sta $01,x
002DE7r 2               
002DE7r 2               ; snake.pax:42:9 in `snake-x`
002DE7r 2               @OPCODE_1390:   ; [c64_ir] PushLiteral(-28668)
002DE7r 2  E8               inx
002DE8r 2  E8               inx
002DE9r 2  A9 04            lda #4
002DEBr 2  95 00            sta $00,x
002DEDr 2  A9 90            lda #144
002DEFr 2  95 01            sta $01,x
002DF1r 2               
002DF1r 2               ; snake.pax:42:22 in `snake-x`
002DF1r 2               @OPCODE_1391:   ; [c64_ir] Add
002DF1r 2                   ; 21
002DF1r 2  CA               dex
002DF2r 2  CA               dex
002DF3r 2  18               clc
002DF4r 2  B5 00            lda $00,x
002DF6r 2  75 02            adc $02,x
002DF8r 2  95 00            sta $00,x
002DFAr 2  B5 01            lda $01,x
002DFCr 2  75 03            adc $03,x
002DFEr 2  95 01            sta $01,x
002E00r 2               
002E00r 2               ; snake.pax:134:40 in `move-snake-tail`
002E00r 2               @OPCODE_1392:   ; [c64_ir] Store
002E00r 2  CA               dex
002E01r 2  CA               dex
002E02r 2  CA               dex
002E03r 2  CA               dex
002E04r 2  B5 02            lda $02,x
002E06r 2  81 04            sta ($04,x)
002E08r 2                   ; TODO high byte
002E08r 2               
002E08r 2               ; src/prelude.fth:38:8 in `i`
002E08r 2               @OPCODE_1393:   ; [c64_ir] AltPop
002E08r 2  E8               inx
002E09r 2  E8               inx
002E0Ar 2  68               pla
002E0Br 2  95 00            sta $00,x
002E0Dr 2  68               pla
002E0Er 2  95 01            sta $01,x
002E10r 2               
002E10r 2               ; src/prelude.fth:38:11 in `i`
002E10r 2               @OPCODE_1394:   ; [c64_ir] AltPop
002E10r 2  E8               inx
002E11r 2  E8               inx
002E12r 2  68               pla
002E13r 2  95 00            sta $00,x
002E15r 2  68               pla
002E16r 2  95 01            sta $01,x
002E18r 2               
002E18r 2               ; src/prelude.fth:38:14 in `i`
002E18r 2               @OPCODE_1395:   ; [c64_ir] TempStore
002E18r 2  CA               dex
002E19r 2  CA               dex
002E1Ar 2  B5 03            lda $03,x
002E1Cr 2  85 96            sta TEMP_PAX2
002E1Er 2  B5 02            lda $02,x
002E20r 2  85 95            sta TEMP_PAX1
002E22r 2               
002E22r 2               ; src/prelude.fth:38:20 in `i`
002E22r 2               @OPCODE_1396:   ; [c64_ir] TempLoad
002E22r 2  E8               inx
002E23r 2  E8               inx
002E24r 2  A5 95            lda TEMP_PAX1
002E26r 2  95 00            sta $00,x
002E28r 2  A5 96            lda TEMP_PAX2
002E2Ar 2  95 01            sta $01,x
002E2Cr 2               
002E2Cr 2               ; src/prelude.fth:38:26 in `i`
002E2Cr 2               @OPCODE_1397:   ; [c64_ir] AltPush
002E2Cr 2  CA               dex
002E2Dr 2  CA               dex
002E2Er 2  B5 03            lda $03,x
002E30r 2  48               pha
002E31r 2  B5 02            lda $02,x
002E33r 2  48               pha
002E34r 2               
002E34r 2               ; src/prelude.fth:38:29 in `i`
002E34r 2               @OPCODE_1398:   ; [c64_ir] AltPush
002E34r 2  CA               dex
002E35r 2  CA               dex
002E36r 2  B5 03            lda $03,x
002E38r 2  48               pha
002E39r 2  B5 02            lda $02,x
002E3Br 2  48               pha
002E3Cr 2               
002E3Cr 2               ; src/prelude.fth:38:35 in `i`
002E3Cr 2               @OPCODE_1399:   ; [c64_ir] TempLoad
002E3Cr 2  E8               inx
002E3Dr 2  E8               inx
002E3Er 2  A5 95            lda TEMP_PAX1
002E40r 2  95 00            sta $00,x
002E42r 2  A5 96            lda TEMP_PAX2
002E44r 2  95 01            sta $01,x
002E46r 2               
002E46r 2               ; src/prelude.fth:6:10 in `dup`
002E46r 2               @OPCODE_1400:   ; [c64_ir] TempStore
002E46r 2  CA               dex
002E47r 2  CA               dex
002E48r 2  B5 03            lda $03,x
002E4Ar 2  85 96            sta TEMP_PAX2
002E4Cr 2  B5 02            lda $02,x
002E4Er 2  85 95            sta TEMP_PAX1
002E50r 2               
002E50r 2               ; src/prelude.fth:6:16 in `dup`
002E50r 2               @OPCODE_1401:   ; [c64_ir] TempLoad
002E50r 2  E8               inx
002E51r 2  E8               inx
002E52r 2  A5 95            lda TEMP_PAX1
002E54r 2  95 00            sta $00,x
002E56r 2  A5 96            lda TEMP_PAX2
002E58r 2  95 01            sta $01,x
002E5Ar 2               
002E5Ar 2               ; src/prelude.fth:6:22 in `dup`
002E5Ar 2               @OPCODE_1402:   ; [c64_ir] TempLoad
002E5Ar 2  E8               inx
002E5Br 2  E8               inx
002E5Cr 2  A5 95            lda TEMP_PAX1
002E5Er 2  95 00            sta $00,x
002E60r 2  A5 96            lda TEMP_PAX2
002E62r 2  95 01            sta $01,x
002E64r 2               
002E64r 2               ; src/prelude.fth:41:13 in `cells`
002E64r 2               @OPCODE_1403:   ; [c64_ir] Add
002E64r 2                   ; 21
002E64r 2  CA               dex
002E65r 2  CA               dex
002E66r 2  18               clc
002E67r 2  B5 00            lda $00,x
002E69r 2  75 02            adc $02,x
002E6Br 2  95 00            sta $00,x
002E6Dr 2  B5 01            lda $01,x
002E6Fr 2  75 03            adc $03,x
002E71r 2  95 01            sta $01,x
002E73r 2               
002E73r 2               ; snake.pax:45:9 in `snake-y`
002E73r 2               @OPCODE_1404:   ; [c64_ir] PushLiteral(-27666)
002E73r 2  E8               inx
002E74r 2  E8               inx
002E75r 2  A9 EE            lda #238
002E77r 2  95 00            sta $00,x
002E79r 2  A9 93            lda #147
002E7Br 2  95 01            sta $01,x
002E7Dr 2               
002E7Dr 2               ; snake.pax:45:22 in `snake-y`
002E7Dr 2               @OPCODE_1405:   ; [c64_ir] Add
002E7Dr 2                   ; 21
002E7Dr 2  CA               dex
002E7Er 2  CA               dex
002E7Fr 2  18               clc
002E80r 2  B5 00            lda $00,x
002E82r 2  75 02            adc $02,x
002E84r 2  95 00            sta $00,x
002E86r 2  B5 01            lda $01,x
002E88r 2  75 03            adc $03,x
002E8Ar 2  95 01            sta $01,x
002E8Cr 2               
002E8Cr 2               ; snake.pax:135:17 in `move-snake-tail`
002E8Cr 2               @OPCODE_1406:   ; [c64_ir] Load
002E8Cr 2  A1 00            lda ($00,x)
002E8Er 2  95 00            sta $00,x
002E90r 2  A9 00            lda #0
002E92r 2  95 01            sta $01,x
002E94r 2               
002E94r 2               ; src/prelude.fth:38:8 in `i`
002E94r 2               @OPCODE_1407:   ; [c64_ir] AltPop
002E94r 2  E8               inx
002E95r 2  E8               inx
002E96r 2  68               pla
002E97r 2  95 00            sta $00,x
002E99r 2  68               pla
002E9Ar 2  95 01            sta $01,x
002E9Cr 2               
002E9Cr 2               ; src/prelude.fth:38:11 in `i`
002E9Cr 2               @OPCODE_1408:   ; [c64_ir] AltPop
002E9Cr 2  E8               inx
002E9Dr 2  E8               inx
002E9Er 2  68               pla
002E9Fr 2  95 00            sta $00,x
002EA1r 2  68               pla
002EA2r 2  95 01            sta $01,x
002EA4r 2               
002EA4r 2               ; src/prelude.fth:38:14 in `i`
002EA4r 2               @OPCODE_1409:   ; [c64_ir] TempStore
002EA4r 2  CA               dex
002EA5r 2  CA               dex
002EA6r 2  B5 03            lda $03,x
002EA8r 2  85 96            sta TEMP_PAX2
002EAAr 2  B5 02            lda $02,x
002EACr 2  85 95            sta TEMP_PAX1
002EAEr 2               
002EAEr 2               ; src/prelude.fth:38:20 in `i`
002EAEr 2               @OPCODE_1410:   ; [c64_ir] TempLoad
002EAEr 2  E8               inx
002EAFr 2  E8               inx
002EB0r 2  A5 95            lda TEMP_PAX1
002EB2r 2  95 00            sta $00,x
002EB4r 2  A5 96            lda TEMP_PAX2
002EB6r 2  95 01            sta $01,x
002EB8r 2               
002EB8r 2               ; src/prelude.fth:38:26 in `i`
002EB8r 2               @OPCODE_1411:   ; [c64_ir] AltPush
002EB8r 2  CA               dex
002EB9r 2  CA               dex
002EBAr 2  B5 03            lda $03,x
002EBCr 2  48               pha
002EBDr 2  B5 02            lda $02,x
002EBFr 2  48               pha
002EC0r 2               
002EC0r 2               ; src/prelude.fth:38:29 in `i`
002EC0r 2               @OPCODE_1412:   ; [c64_ir] AltPush
002EC0r 2  CA               dex
002EC1r 2  CA               dex
002EC2r 2  B5 03            lda $03,x
002EC4r 2  48               pha
002EC5r 2  B5 02            lda $02,x
002EC7r 2  48               pha
002EC8r 2               
002EC8r 2               ; src/prelude.fth:38:35 in `i`
002EC8r 2               @OPCODE_1413:   ; [c64_ir] TempLoad
002EC8r 2  E8               inx
002EC9r 2  E8               inx
002ECAr 2  A5 95            lda TEMP_PAX1
002ECCr 2  95 00            sta $00,x
002ECEr 2  A5 96            lda TEMP_PAX2
002ED0r 2  95 01            sta $01,x
002ED2r 2               
002ED2r 2               ; snake.pax:135:21 in `move-snake-tail`
002ED2r 2               @OPCODE_1414:   ; [c64_ir] PushLiteral(1)
002ED2r 2  E8               inx
002ED3r 2  E8               inx
002ED4r 2  A9 01            lda #1
002ED6r 2  95 00            sta $00,x
002ED8r 2  A9 00            lda #0
002EDAr 2  95 01            sta $01,x
002EDCr 2               
002EDCr 2               ; snake.pax:135:23 in `move-snake-tail`
002EDCr 2               @OPCODE_1415:   ; [c64_ir] Add
002EDCr 2                   ; 21
002EDCr 2  CA               dex
002EDDr 2  CA               dex
002EDEr 2  18               clc
002EDFr 2  B5 00            lda $00,x
002EE1r 2  75 02            adc $02,x
002EE3r 2  95 00            sta $00,x
002EE5r 2  B5 01            lda $01,x
002EE7r 2  75 03            adc $03,x
002EE9r 2  95 01            sta $01,x
002EEBr 2               
002EEBr 2               ; src/prelude.fth:6:10 in `dup`
002EEBr 2               @OPCODE_1416:   ; [c64_ir] TempStore
002EEBr 2  CA               dex
002EECr 2  CA               dex
002EEDr 2  B5 03            lda $03,x
002EEFr 2  85 96            sta TEMP_PAX2
002EF1r 2  B5 02            lda $02,x
002EF3r 2  85 95            sta TEMP_PAX1
002EF5r 2               
002EF5r 2               ; src/prelude.fth:6:16 in `dup`
002EF5r 2               @OPCODE_1417:   ; [c64_ir] TempLoad
002EF5r 2  E8               inx
002EF6r 2  E8               inx
002EF7r 2  A5 95            lda TEMP_PAX1
002EF9r 2  95 00            sta $00,x
002EFBr 2  A5 96            lda TEMP_PAX2
002EFDr 2  95 01            sta $01,x
002EFFr 2               
002EFFr 2               ; src/prelude.fth:6:22 in `dup`
002EFFr 2               @OPCODE_1418:   ; [c64_ir] TempLoad
002EFFr 2  E8               inx
002F00r 2  E8               inx
002F01r 2  A5 95            lda TEMP_PAX1
002F03r 2  95 00            sta $00,x
002F05r 2  A5 96            lda TEMP_PAX2
002F07r 2  95 01            sta $01,x
002F09r 2               
002F09r 2               ; src/prelude.fth:41:13 in `cells`
002F09r 2               @OPCODE_1419:   ; [c64_ir] Add
002F09r 2                   ; 21
002F09r 2  CA               dex
002F0Ar 2  CA               dex
002F0Br 2  18               clc
002F0Cr 2  B5 00            lda $00,x
002F0Er 2  75 02            adc $02,x
002F10r 2  95 00            sta $00,x
002F12r 2  B5 01            lda $01,x
002F14r 2  75 03            adc $03,x
002F16r 2  95 01            sta $01,x
002F18r 2               
002F18r 2               ; snake.pax:45:9 in `snake-y`
002F18r 2               @OPCODE_1420:   ; [c64_ir] PushLiteral(-27666)
002F18r 2  E8               inx
002F19r 2  E8               inx
002F1Ar 2  A9 EE            lda #238
002F1Cr 2  95 00            sta $00,x
002F1Er 2  A9 93            lda #147
002F20r 2  95 01            sta $01,x
002F22r 2               
002F22r 2               ; snake.pax:45:22 in `snake-y`
002F22r 2               @OPCODE_1421:   ; [c64_ir] Add
002F22r 2                   ; 21
002F22r 2  CA               dex
002F23r 2  CA               dex
002F24r 2  18               clc
002F25r 2  B5 00            lda $00,x
002F27r 2  75 02            adc $02,x
002F29r 2  95 00            sta $00,x
002F2Br 2  B5 01            lda $01,x
002F2Dr 2  75 03            adc $03,x
002F2Fr 2  95 01            sta $01,x
002F31r 2               
002F31r 2               ; snake.pax:135:33 in `move-snake-tail`
002F31r 2               @OPCODE_1422:   ; [c64_ir] Store
002F31r 2  CA               dex
002F32r 2  CA               dex
002F33r 2  CA               dex
002F34r 2  CA               dex
002F35r 2  B5 02            lda $02,x
002F37r 2  81 04            sta ($04,x)
002F39r 2                   ; TODO high byte
002F39r 2               
002F39r 2               ; src/prelude.fth:35:21 in `-loopimpl`
002F39r 2               @OPCODE_1423:   ; [c64_ir] AltPop
002F39r 2  E8               inx
002F3Ar 2  E8               inx
002F3Br 2  68               pla
002F3Cr 2  95 00            sta $00,x
002F3Er 2  68               pla
002F3Fr 2  95 01            sta $01,x
002F41r 2               
002F41r 2               ; src/prelude.fth:3:10 in `swap`
002F41r 2               @OPCODE_1424:   ; [c64_ir] AltPush
002F41r 2  CA               dex
002F42r 2  CA               dex
002F43r 2  B5 03            lda $03,x
002F45r 2  48               pha
002F46r 2  B5 02            lda $02,x
002F48r 2  48               pha
002F49r 2               
002F49r 2               ; src/prelude.fth:3:19 in `swap`
002F49r 2               @OPCODE_1425:   ; [c64_ir] AltPop
002F49r 2  E8               inx
002F4Ar 2  E8               inx
002F4Br 2  68               pla
002F4Cr 2  95 00            sta $00,x
002F4Er 2  68               pla
002F4Fr 2  95 01            sta $01,x
002F51r 2               
002F51r 2               ; src/prelude.fth:35:29 in `-loopimpl`
002F51r 2               @OPCODE_1426:   ; [c64_ir] AltPop
002F51r 2  E8               inx
002F52r 2  E8               inx
002F53r 2  68               pla
002F54r 2  95 00            sta $00,x
002F56r 2  68               pla
002F57r 2  95 01            sta $01,x
002F59r 2               
002F59r 2               ; src/prelude.fth:3:10 in `swap`
002F59r 2               @OPCODE_1427:   ; [c64_ir] AltPush
002F59r 2  CA               dex
002F5Ar 2  CA               dex
002F5Br 2  B5 03            lda $03,x
002F5Dr 2  48               pha
002F5Er 2  B5 02            lda $02,x
002F60r 2  48               pha
002F61r 2               
002F61r 2               ; src/prelude.fth:3:19 in `swap`
002F61r 2               @OPCODE_1428:   ; [c64_ir] AltPop
002F61r 2  E8               inx
002F62r 2  E8               inx
002F63r 2  68               pla
002F64r 2  95 00            sta $00,x
002F66r 2  68               pla
002F67r 2  95 01            sta $01,x
002F69r 2               
002F69r 2               ; src/prelude.fth:3:22 in `swap`
002F69r 2               @OPCODE_1429:   ; [c64_ir] PushLiteral(1)
002F69r 2  E8               inx
002F6Ar 2  E8               inx
002F6Br 2  A9 01            lda #1
002F6Dr 2  95 00            sta $00,x
002F6Fr 2  A9 00            lda #0
002F71r 2  95 01            sta $01,x
002F73r 2               
002F73r 2               ; src/prelude.fth:14:12 in `invert`
002F73r 2               @OPCODE_1430:   ; [c64_ir] PushLiteral(-1)
002F73r 2  E8               inx
002F74r 2  E8               inx
002F75r 2  A9 FF            lda #255
002F77r 2  95 00            sta $00,x
002F79r 2  A9 FF            lda #255
002F7Br 2  95 01            sta $01,x
002F7Dr 2               
002F7Dr 2               ; src/prelude.fth:14:15 in `invert`
002F7Dr 2               @OPCODE_1431:   ; [c64_ir] Nand
002F7Dr 2                   ; 26
002F7Dr 2  CA               dex
002F7Er 2  CA               dex
002F7Fr 2  B5 00            lda $00,x
002F81r 2  35 02            and $02,x
002F83r 2  49 FF            eor #$ff
002F85r 2  95 00            sta $00,x
002F87r 2  B5 01            lda $01,x
002F89r 2  35 03            and $03,x
002F8Br 2  49 FF            eor #$ff
002F8Dr 2  95 01            sta $01,x
002F8Fr 2               
002F8Fr 2               ; src/prelude.fth:15:19 in `negate`
002F8Fr 2               @OPCODE_1432:   ; [c64_ir] PushLiteral(1)
002F8Fr 2  E8               inx
002F90r 2  E8               inx
002F91r 2  A9 01            lda #1
002F93r 2  95 00            sta $00,x
002F95r 2  A9 00            lda #0
002F97r 2  95 01            sta $01,x
002F99r 2               
002F99r 2               ; src/prelude.fth:15:21 in `negate`
002F99r 2               @OPCODE_1433:   ; [c64_ir] Add
002F99r 2                   ; 21
002F99r 2  CA               dex
002F9Ar 2  CA               dex
002F9Br 2  18               clc
002F9Cr 2  B5 00            lda $00,x
002F9Er 2  75 02            adc $02,x
002FA0r 2  95 00            sta $00,x
002FA2r 2  B5 01            lda $01,x
002FA4r 2  75 03            adc $03,x
002FA6r 2  95 01            sta $01,x
002FA8r 2               
002FA8r 2               ; src/prelude.fth:16:19 in `-`
002FA8r 2               @OPCODE_1434:   ; [c64_ir] Add
002FA8r 2                   ; 21
002FA8r 2  CA               dex
002FA9r 2  CA               dex
002FAAr 2  18               clc
002FABr 2  B5 00            lda $00,x
002FADr 2  75 02            adc $02,x
002FAFr 2  95 00            sta $00,x
002FB1r 2  B5 01            lda $01,x
002FB3r 2  75 03            adc $03,x
002FB5r 2  95 01            sta $01,x
002FB7r 2               
002FB7r 2               ; src/prelude.fth:4:10 in `over`
002FB7r 2               @OPCODE_1435:   ; [c64_ir] AltPush
002FB7r 2  CA               dex
002FB8r 2  CA               dex
002FB9r 2  B5 03            lda $03,x
002FBBr 2  48               pha
002FBCr 2  B5 02            lda $02,x
002FBEr 2  48               pha
002FBFr 2               
002FBFr 2               ; src/prelude.fth:4:13 in `over`
002FBFr 2               @OPCODE_1436:   ; [c64_ir] TempStore
002FBFr 2  CA               dex
002FC0r 2  CA               dex
002FC1r 2  B5 03            lda $03,x
002FC3r 2  85 96            sta TEMP_PAX2
002FC5r 2  B5 02            lda $02,x
002FC7r 2  85 95            sta TEMP_PAX1
002FC9r 2               
002FC9r 2               ; src/prelude.fth:4:19 in `over`
002FC9r 2               @OPCODE_1437:   ; [c64_ir] TempLoad
002FC9r 2  E8               inx
002FCAr 2  E8               inx
002FCBr 2  A5 95            lda TEMP_PAX1
002FCDr 2  95 00            sta $00,x
002FCFr 2  A5 96            lda TEMP_PAX2
002FD1r 2  95 01            sta $01,x
002FD3r 2               
002FD3r 2               ; src/prelude.fth:4:25 in `over`
002FD3r 2               @OPCODE_1438:   ; [c64_ir] AltPop
002FD3r 2  E8               inx
002FD4r 2  E8               inx
002FD5r 2  68               pla
002FD6r 2  95 00            sta $00,x
002FD8r 2  68               pla
002FD9r 2  95 01            sta $01,x
002FDBr 2               
002FDBr 2               ; src/prelude.fth:4:28 in `over`
002FDBr 2               @OPCODE_1439:   ; [c64_ir] TempLoad
002FDBr 2  E8               inx
002FDCr 2  E8               inx
002FDDr 2  A5 95            lda TEMP_PAX1
002FDFr 2  95 00            sta $00,x
002FE1r 2  A5 96            lda TEMP_PAX2
002FE3r 2  95 01            sta $01,x
002FE5r 2               
002FE5r 2               ; src/prelude.fth:4:10 in `over`
002FE5r 2               @OPCODE_1440:   ; [c64_ir] AltPush
002FE5r 2  CA               dex
002FE6r 2  CA               dex
002FE7r 2  B5 03            lda $03,x
002FE9r 2  48               pha
002FEAr 2  B5 02            lda $02,x
002FECr 2  48               pha
002FEDr 2               
002FEDr 2               ; src/prelude.fth:4:13 in `over`
002FEDr 2               @OPCODE_1441:   ; [c64_ir] TempStore
002FEDr 2  CA               dex
002FEEr 2  CA               dex
002FEFr 2  B5 03            lda $03,x
002FF1r 2  85 96            sta TEMP_PAX2
002FF3r 2  B5 02            lda $02,x
002FF5r 2  85 95            sta TEMP_PAX1
002FF7r 2               
002FF7r 2               ; src/prelude.fth:4:19 in `over`
002FF7r 2               @OPCODE_1442:   ; [c64_ir] TempLoad
002FF7r 2  E8               inx
002FF8r 2  E8               inx
002FF9r 2  A5 95            lda TEMP_PAX1
002FFBr 2  95 00            sta $00,x
002FFDr 2  A5 96            lda TEMP_PAX2
002FFFr 2  95 01            sta $01,x
003001r 2               
003001r 2               ; src/prelude.fth:4:25 in `over`
003001r 2               @OPCODE_1443:   ; [c64_ir] AltPop
003001r 2  E8               inx
003002r 2  E8               inx
003003r 2  68               pla
003004r 2  95 00            sta $00,x
003006r 2  68               pla
003007r 2  95 01            sta $01,x
003009r 2               
003009r 2               ; src/prelude.fth:4:28 in `over`
003009r 2               @OPCODE_1444:   ; [c64_ir] TempLoad
003009r 2  E8               inx
00300Ar 2  E8               inx
00300Br 2  A5 95            lda TEMP_PAX1
00300Dr 2  95 00            sta $00,x
00300Fr 2  A5 96            lda TEMP_PAX2
003011r 2  95 01            sta $01,x
003013r 2               
003013r 2               ; src/prelude.fth:35:44 in `-loopimpl`
003013r 2               @OPCODE_1445:   ; [c64_ir] AltPush
003013r 2  CA               dex
003014r 2  CA               dex
003015r 2  B5 03            lda $03,x
003017r 2  48               pha
003018r 2  B5 02            lda $02,x
00301Ar 2  48               pha
00301Br 2               
00301Br 2               ; src/prelude.fth:35:47 in `-loopimpl`
00301Br 2               @OPCODE_1446:   ; [c64_ir] AltPush
00301Br 2  CA               dex
00301Cr 2  CA               dex
00301Dr 2  B5 03            lda $03,x
00301Fr 2  48               pha
003020r 2  B5 02            lda $02,x
003022r 2  48               pha
003023r 2               
003023r 2               ; src/prelude.fth:14:12 in `invert`
003023r 2               @OPCODE_1447:   ; [c64_ir] PushLiteral(-1)
003023r 2  E8               inx
003024r 2  E8               inx
003025r 2  A9 FF            lda #255
003027r 2  95 00            sta $00,x
003029r 2  A9 FF            lda #255
00302Br 2  95 01            sta $01,x
00302Dr 2               
00302Dr 2               ; src/prelude.fth:14:15 in `invert`
00302Dr 2               @OPCODE_1448:   ; [c64_ir] Nand
00302Dr 2                   ; 26
00302Dr 2  CA               dex
00302Er 2  CA               dex
00302Fr 2  B5 00            lda $00,x
003031r 2  35 02            and $02,x
003033r 2  49 FF            eor #$ff
003035r 2  95 00            sta $00,x
003037r 2  B5 01            lda $01,x
003039r 2  35 03            and $03,x
00303Br 2  49 FF            eor #$ff
00303Dr 2  95 01            sta $01,x
00303Fr 2               
00303Fr 2               ; src/prelude.fth:15:19 in `negate`
00303Fr 2               @OPCODE_1449:   ; [c64_ir] PushLiteral(1)
00303Fr 2  E8               inx
003040r 2  E8               inx
003041r 2  A9 01            lda #1
003043r 2  95 00            sta $00,x
003045r 2  A9 00            lda #0
003047r 2  95 01            sta $01,x
003049r 2               
003049r 2               ; src/prelude.fth:15:21 in `negate`
003049r 2               @OPCODE_1450:   ; [c64_ir] Add
003049r 2                   ; 21
003049r 2  CA               dex
00304Ar 2  CA               dex
00304Br 2  18               clc
00304Cr 2  B5 00            lda $00,x
00304Er 2  75 02            adc $02,x
003050r 2  95 00            sta $00,x
003052r 2  B5 01            lda $01,x
003054r 2  75 03            adc $03,x
003056r 2  95 01            sta $01,x
003058r 2               
003058r 2               ; src/prelude.fth:16:19 in `-`
003058r 2               @OPCODE_1451:   ; [c64_ir] Add
003058r 2                   ; 21
003058r 2  CA               dex
003059r 2  CA               dex
00305Ar 2  18               clc
00305Br 2  B5 00            lda $00,x
00305Dr 2  75 02            adc $02,x
00305Fr 2  95 00            sta $00,x
003061r 2  B5 01            lda $01,x
003063r 2  75 03            adc $03,x
003065r 2  95 01            sta $01,x
003067r 2               
003067r 2               ; src/prelude.fth:21:8 in `0=`
003067r 2               @OPCODE_1452:   ; [c64_ir] JumpIf0(128)
003067r 2  CA               dex
003068r 2  CA               dex
003069r 2  B5 02            lda $02,x
00306Br 2  15 03            ora $03,x
00306Dr 2  D0 03            bne *+5
00306Fr 2  4C rr rr         jmp @target_128
003072r 2               
003072r 2               @target_127:
003072r 2               
003072r 2               ; src/prelude.fth:21:11 in `0=`
003072r 2               @OPCODE_1454:   ; [c64_ir] PushLiteral(0)
003072r 2  E8               inx
003073r 2  E8               inx
003074r 2  A9 00            lda #0
003076r 2  95 00            sta $00,x
003078r 2  A9 00            lda #0
00307Ar 2  95 01            sta $01,x
00307Cr 2               
00307Cr 2               ; src/prelude.fth:21:13 in `0=`
00307Cr 2               @OPCODE_1455:   ; [c64_ir] JumpElse(129)
00307Cr 2  4C rr rr         jmp @target_129
00307Fr 2               
00307Fr 2               @target_128:
00307Fr 2               
00307Fr 2               ; src/prelude.fth:21:18 in `0=`
00307Fr 2               @OPCODE_1457:   ; [c64_ir] PushLiteral(-1)
00307Fr 2  E8               inx
003080r 2  E8               inx
003081r 2  A9 FF            lda #255
003083r 2  95 00            sta $00,x
003085r 2  A9 FF            lda #255
003087r 2  95 01            sta $01,x
003089r 2               
003089r 2               ; src/prelude.fth:21:21 in `0=`
003089r 2               @OPCODE_1458:   ; [c64_ir] JumpTarget(128)
003089r 2               
003089r 2               @target_129:
003089r 2               
003089r 2               ; src/prelude.fth:3:10 in `swap`
003089r 2               @OPCODE_1460:   ; [c64_ir] AltPush
003089r 2  CA               dex
00308Ar 2  CA               dex
00308Br 2  B5 03            lda $03,x
00308Dr 2  48               pha
00308Er 2  B5 02            lda $02,x
003090r 2  48               pha
003091r 2               
003091r 2               ; src/prelude.fth:3:19 in `swap`
003091r 2               @OPCODE_1461:   ; [c64_ir] AltPop
003091r 2  E8               inx
003092r 2  E8               inx
003093r 2  68               pla
003094r 2  95 00            sta $00,x
003096r 2  68               pla
003097r 2  95 01            sta $01,x
003099r 2               
003099r 2               ; snake.pax:136:5 in `move-snake-tail`
003099r 2               @OPCODE_1462:   ; [c64_ir] LoopIf0(126)
003099r 2  CA               dex
00309Ar 2  CA               dex
00309Br 2  B5 02            lda $02,x
00309Dr 2  15 03            ora $03,x
00309Fr 2  D0 03            bne *+5
0030A1r 2  4C rr rr         jmp @target_126
0030A4r 2               
0030A4r 2               @target_130:
0030A4r 2               
0030A4r 2               ; snake.pax:136:5 in `move-snake-tail`
0030A4r 2               @OPCODE_1464:   ; [c64_ir] AltPop
0030A4r 2  E8               inx
0030A5r 2  E8               inx
0030A6r 2  68               pla
0030A7r 2  95 00            sta $00,x
0030A9r 2  68               pla
0030AAr 2  95 01            sta $01,x
0030ACr 2               
0030ACr 2               ; snake.pax:136:5 in `move-snake-tail`
0030ACr 2               @OPCODE_1465:   ; [c64_ir] Drop
0030ACr 2  CA               dex
0030ADr 2  CA               dex
0030AEr 2               
0030AEr 2               ; snake.pax:136:5 in `move-snake-tail`
0030AEr 2               @OPCODE_1466:   ; [c64_ir] AltPop
0030AEr 2  E8               inx
0030AFr 2  E8               inx
0030B0r 2  68               pla
0030B1r 2  95 00            sta $00,x
0030B3r 2  68               pla
0030B4r 2  95 01            sta $01,x
0030B6r 2               
0030B6r 2               ; snake.pax:136:5 in `move-snake-tail`
0030B6r 2               @OPCODE_1467:   ; [c64_ir] Drop
0030B6r 2  CA               dex
0030B7r 2  CA               dex
0030B8r 2               
0030B8r 2               ; <inline>:0:0 in `main`
0030B8r 2               @OPCODE_1468:   ; [c64_ir] AltPop
0030B8r 2  E8               inx
0030B9r 2  E8               inx
0030BAr 2  68               pla
0030BBr 2  95 00            sta $00,x
0030BDr 2  68               pla
0030BEr 2  95 01            sta $01,x
0030C0r 2               
0030C0r 2               ; <inline>:0:0 in `main`
0030C0r 2               @OPCODE_1469:   ; [c64_ir] Drop
0030C0r 2  CA               dex
0030C1r 2  CA               dex
0030C2r 2               
0030C2r 2               ; <inline>:0:0 in `main`
0030C2r 2               @OPCODE_1470:   ; [c64_ir] PushLiteral(7777)
0030C2r 2  E8               inx
0030C3r 2  E8               inx
0030C4r 2  A9 61            lda #97
0030C6r 2  95 00            sta $00,x
0030C8r 2  A9 1E            lda #30
0030CAr 2  95 01            sta $01,x
0030CCr 2               
0030CCr 2               ; <inline>:0:0 in `main`
0030CCr 2               @OPCODE_1471:   ; [c64_ir] AltPush
0030CCr 2  CA               dex
0030CDr 2  CA               dex
0030CEr 2  B5 03            lda $03,x
0030D0r 2  48               pha
0030D1r 2  B5 02            lda $02,x
0030D3r 2  48               pha
0030D4r 2               
0030D4r 2               ; snake.pax:124:20 in `move-snake-head`
0030D4r 2               @OPCODE_1472:   ; [c64_ir] PushLiteral(-26660)
0030D4r 2  E8               inx
0030D5r 2  E8               inx
0030D6r 2  A9 DC            lda #220
0030D8r 2  95 00            sta $00,x
0030DAr 2  A9 97            lda #151
0030DCr 2  95 01            sta $01,x
0030DEr 2               
0030DEr 2               ; snake.pax:124:30 in `move-snake-head`
0030DEr 2               @OPCODE_1473:   ; [c64_ir] Load
0030DEr 2  A1 00            lda ($00,x)
0030E0r 2  95 00            sta $00,x
0030E2r 2  A9 00            lda #0
0030E4r 2  95 01            sta $01,x
0030E6r 2               
0030E6r 2               ; src/prelude.fth:4:13 in `over`
0030E6r 2               @OPCODE_1474:   ; [c64_ir] TempStore
0030E6r 2  CA               dex
0030E7r 2  CA               dex
0030E8r 2  B5 03            lda $03,x
0030EAr 2  85 96            sta TEMP_PAX2
0030ECr 2  B5 02            lda $02,x
0030EEr 2  85 95            sta TEMP_PAX1
0030F0r 2               
0030F0r 2               ; src/prelude.fth:4:19 in `over`
0030F0r 2               @OPCODE_1475:   ; [c64_ir] TempLoad
0030F0r 2  E8               inx
0030F1r 2  E8               inx
0030F2r 2  A5 95            lda TEMP_PAX1
0030F4r 2  95 00            sta $00,x
0030F6r 2  A5 96            lda TEMP_PAX2
0030F8r 2  95 01            sta $01,x
0030FAr 2               
0030FAr 2               ; src/prelude.fth:4:25 in `over`
0030FAr 2               @OPCODE_1476:   ; [c64_ir] PushLiteral(37)
0030FAr 2  E8               inx
0030FBr 2  E8               inx
0030FCr 2  A9 25            lda #37
0030FEr 2  95 00            sta $00,x
003100r 2  A9 00            lda #0
003102r 2  95 01            sta $01,x
003104r 2               
003104r 2               ; src/prelude.fth:4:28 in `over`
003104r 2               @OPCODE_1477:   ; [c64_ir] TempLoad
003104r 2  E8               inx
003105r 2  E8               inx
003106r 2  A5 95            lda TEMP_PAX1
003108r 2  95 00            sta $00,x
00310Ar 2  A5 96            lda TEMP_PAX2
00310Cr 2  95 01            sta $01,x
00310Er 2               
00310Er 2               ; src/prelude.fth:14:12 in `invert`
00310Er 2               @OPCODE_1478:   ; [c64_ir] PushLiteral(-1)
00310Er 2  E8               inx
00310Fr 2  E8               inx
003110r 2  A9 FF            lda #255
003112r 2  95 00            sta $00,x
003114r 2  A9 FF            lda #255
003116r 2  95 01            sta $01,x
003118r 2               
003118r 2               ; src/prelude.fth:14:15 in `invert`
003118r 2               @OPCODE_1479:   ; [c64_ir] Nand
003118r 2                   ; 26
003118r 2  CA               dex
003119r 2  CA               dex
00311Ar 2  B5 00            lda $00,x
00311Cr 2  35 02            and $02,x
00311Er 2  49 FF            eor #$ff
003120r 2  95 00            sta $00,x
003122r 2  B5 01            lda $01,x
003124r 2  35 03            and $03,x
003126r 2  49 FF            eor #$ff
003128r 2  95 01            sta $01,x
00312Ar 2               
00312Ar 2               ; src/prelude.fth:15:19 in `negate`
00312Ar 2               @OPCODE_1480:   ; [c64_ir] PushLiteral(1)
00312Ar 2  E8               inx
00312Br 2  E8               inx
00312Cr 2  A9 01            lda #1
00312Er 2  95 00            sta $00,x
003130r 2  A9 00            lda #0
003132r 2  95 01            sta $01,x
003134r 2               
003134r 2               ; src/prelude.fth:15:21 in `negate`
003134r 2               @OPCODE_1481:   ; [c64_ir] Add
003134r 2                   ; 21
003134r 2  CA               dex
003135r 2  CA               dex
003136r 2  18               clc
003137r 2  B5 00            lda $00,x
003139r 2  75 02            adc $02,x
00313Br 2  95 00            sta $00,x
00313Dr 2  B5 01            lda $01,x
00313Fr 2  75 03            adc $03,x
003141r 2  95 01            sta $01,x
003143r 2               
003143r 2               ; src/prelude.fth:16:19 in `-`
003143r 2               @OPCODE_1482:   ; [c64_ir] Add
003143r 2                   ; 21
003143r 2  CA               dex
003144r 2  CA               dex
003145r 2  18               clc
003146r 2  B5 00            lda $00,x
003148r 2  75 02            adc $02,x
00314Ar 2  95 00            sta $00,x
00314Cr 2  B5 01            lda $01,x
00314Er 2  75 03            adc $03,x
003150r 2  95 01            sta $01,x
003152r 2               
003152r 2               ; src/prelude.fth:21:8 in `0=`
003152r 2               @OPCODE_1483:   ; [c64_ir] JumpIf0(132)
003152r 2  CA               dex
003153r 2  CA               dex
003154r 2  B5 02            lda $02,x
003156r 2  15 03            ora $03,x
003158r 2  D0 03            bne *+5
00315Ar 2  4C rr rr         jmp @target_132
00315Dr 2               
00315Dr 2               @target_131:
00315Dr 2               
00315Dr 2               ; src/prelude.fth:21:11 in `0=`
00315Dr 2               @OPCODE_1485:   ; [c64_ir] PushLiteral(0)
00315Dr 2  E8               inx
00315Er 2  E8               inx
00315Fr 2  A9 00            lda #0
003161r 2  95 00            sta $00,x
003163r 2  A9 00            lda #0
003165r 2  95 01            sta $01,x
003167r 2               
003167r 2               ; src/prelude.fth:21:13 in `0=`
003167r 2               @OPCODE_1486:   ; [c64_ir] JumpElse(133)
003167r 2  4C rr rr         jmp @target_133
00316Ar 2               
00316Ar 2               @target_132:
00316Ar 2               
00316Ar 2               ; src/prelude.fth:21:18 in `0=`
00316Ar 2               @OPCODE_1488:   ; [c64_ir] PushLiteral(-1)
00316Ar 2  E8               inx
00316Br 2  E8               inx
00316Cr 2  A9 FF            lda #255
00316Er 2  95 00            sta $00,x
003170r 2  A9 FF            lda #255
003172r 2  95 01            sta $01,x
003174r 2               
003174r 2               ; src/prelude.fth:21:21 in `0=`
003174r 2               @OPCODE_1489:   ; [c64_ir] JumpTarget(132)
003174r 2               
003174r 2               @target_133:
003174r 2               
003174r 2               ; snake.pax:125:16 in `move-snake-head`
003174r 2               @OPCODE_1491:   ; [c64_ir] JumpIf0(135)
003174r 2  CA               dex
003175r 2  CA               dex
003176r 2  B5 02            lda $02,x
003178r 2  15 03            ora $03,x
00317Ar 2  D0 03            bne *+5
00317Cr 2  4C rr rr         jmp @target_135
00317Fr 2               
00317Fr 2               @target_134:
00317Fr 2               
00317Fr 2               ; snake.pax:120:14 in `move-left`
00317Fr 2               @OPCODE_1493:   ; [c64_ir] PushLiteral(-1)
00317Fr 2  E8               inx
003180r 2  E8               inx
003181r 2  A9 FF            lda #255
003183r 2  95 00            sta $00,x
003185r 2  A9 FF            lda #255
003187r 2  95 01            sta $01,x
003189r 2               
003189r 2               ; src/prelude.fth:6:16 in `dup`
003189r 2               @OPCODE_1494:   ; [c64_ir] PushLiteral(-28668)
003189r 2  E8               inx
00318Ar 2  E8               inx
00318Br 2  A9 04            lda #4
00318Dr 2  95 00            sta $00,x
00318Fr 2  A9 90            lda #144
003191r 2  95 01            sta $01,x
003193r 2               
003193r 2               ; src/prelude.fth:20:15 in `+!`
003193r 2               @OPCODE_1495:   ; [c64_ir] Load
003193r 2  A1 00            lda ($00,x)
003195r 2  95 00            sta $00,x
003197r 2  A9 00            lda #0
003199r 2  95 01            sta $01,x
00319Br 2               
00319Br 2               ; src/prelude.fth:20:17 in `+!`
00319Br 2               @OPCODE_1496:   ; [c64_ir] Add
00319Br 2                   ; 21
00319Br 2  CA               dex
00319Cr 2  CA               dex
00319Dr 2  18               clc
00319Er 2  B5 00            lda $00,x
0031A0r 2  75 02            adc $02,x
0031A2r 2  95 00            sta $00,x
0031A4r 2  B5 01            lda $01,x
0031A6r 2  75 03            adc $03,x
0031A8r 2  95 01            sta $01,x
0031AAr 2               
0031AAr 2               ; src/prelude.fth:20:19 in `+!`
0031AAr 2               @OPCODE_1497:   ; [c64_ir] PushLiteral(-28668)
0031AAr 2  E8               inx
0031ABr 2  E8               inx
0031ACr 2  A9 04            lda #4
0031AEr 2  95 00            sta $00,x
0031B0r 2  A9 90            lda #144
0031B2r 2  95 01            sta $01,x
0031B4r 2               
0031B4r 2               ; src/prelude.fth:20:22 in `+!`
0031B4r 2               @OPCODE_1498:   ; [c64_ir] Store
0031B4r 2  CA               dex
0031B5r 2  CA               dex
0031B6r 2  CA               dex
0031B7r 2  CA               dex
0031B8r 2  B5 02            lda $02,x
0031BAr 2  81 04            sta ($04,x)
0031BCr 2                   ; TODO high byte
0031BCr 2               
0031BCr 2               ; snake.pax:125:29 in `move-snake-head`
0031BCr 2               @OPCODE_1499:   ; [c64_ir] JumpElse(153)
0031BCr 2  4C rr rr         jmp @target_153
0031BFr 2               
0031BFr 2               @target_135:
0031BFr 2               
0031BFr 2               ; src/prelude.fth:4:13 in `over`
0031BFr 2               @OPCODE_1501:   ; [c64_ir] TempStore
0031BFr 2  CA               dex
0031C0r 2  CA               dex
0031C1r 2  B5 03            lda $03,x
0031C3r 2  85 96            sta TEMP_PAX2
0031C5r 2  B5 02            lda $02,x
0031C7r 2  85 95            sta TEMP_PAX1
0031C9r 2               
0031C9r 2               ; src/prelude.fth:4:19 in `over`
0031C9r 2               @OPCODE_1502:   ; [c64_ir] TempLoad
0031C9r 2  E8               inx
0031CAr 2  E8               inx
0031CBr 2  A5 95            lda TEMP_PAX1
0031CDr 2  95 00            sta $00,x
0031CFr 2  A5 96            lda TEMP_PAX2
0031D1r 2  95 01            sta $01,x
0031D3r 2               
0031D3r 2               ; src/prelude.fth:4:25 in `over`
0031D3r 2               @OPCODE_1503:   ; [c64_ir] PushLiteral(38)
0031D3r 2  E8               inx
0031D4r 2  E8               inx
0031D5r 2  A9 26            lda #38
0031D7r 2  95 00            sta $00,x
0031D9r 2  A9 00            lda #0
0031DBr 2  95 01            sta $01,x
0031DDr 2               
0031DDr 2               ; src/prelude.fth:4:28 in `over`
0031DDr 2               @OPCODE_1504:   ; [c64_ir] TempLoad
0031DDr 2  E8               inx
0031DEr 2  E8               inx
0031DFr 2  A5 95            lda TEMP_PAX1
0031E1r 2  95 00            sta $00,x
0031E3r 2  A5 96            lda TEMP_PAX2
0031E5r 2  95 01            sta $01,x
0031E7r 2               
0031E7r 2               ; src/prelude.fth:14:12 in `invert`
0031E7r 2               @OPCODE_1505:   ; [c64_ir] PushLiteral(-1)
0031E7r 2  E8               inx
0031E8r 2  E8               inx
0031E9r 2  A9 FF            lda #255
0031EBr 2  95 00            sta $00,x
0031EDr 2  A9 FF            lda #255
0031EFr 2  95 01            sta $01,x
0031F1r 2               
0031F1r 2               ; src/prelude.fth:14:15 in `invert`
0031F1r 2               @OPCODE_1506:   ; [c64_ir] Nand
0031F1r 2                   ; 26
0031F1r 2  CA               dex
0031F2r 2  CA               dex
0031F3r 2  B5 00            lda $00,x
0031F5r 2  35 02            and $02,x
0031F7r 2  49 FF            eor #$ff
0031F9r 2  95 00            sta $00,x
0031FBr 2  B5 01            lda $01,x
0031FDr 2  35 03            and $03,x
0031FFr 2  49 FF            eor #$ff
003201r 2  95 01            sta $01,x
003203r 2               
003203r 2               ; src/prelude.fth:15:19 in `negate`
003203r 2               @OPCODE_1507:   ; [c64_ir] PushLiteral(1)
003203r 2  E8               inx
003204r 2  E8               inx
003205r 2  A9 01            lda #1
003207r 2  95 00            sta $00,x
003209r 2  A9 00            lda #0
00320Br 2  95 01            sta $01,x
00320Dr 2               
00320Dr 2               ; src/prelude.fth:15:21 in `negate`
00320Dr 2               @OPCODE_1508:   ; [c64_ir] Add
00320Dr 2                   ; 21
00320Dr 2  CA               dex
00320Er 2  CA               dex
00320Fr 2  18               clc
003210r 2  B5 00            lda $00,x
003212r 2  75 02            adc $02,x
003214r 2  95 00            sta $00,x
003216r 2  B5 01            lda $01,x
003218r 2  75 03            adc $03,x
00321Ar 2  95 01            sta $01,x
00321Cr 2               
00321Cr 2               ; src/prelude.fth:16:19 in `-`
00321Cr 2               @OPCODE_1509:   ; [c64_ir] Add
00321Cr 2                   ; 21
00321Cr 2  CA               dex
00321Dr 2  CA               dex
00321Er 2  18               clc
00321Fr 2  B5 00            lda $00,x
003221r 2  75 02            adc $02,x
003223r 2  95 00            sta $00,x
003225r 2  B5 01            lda $01,x
003227r 2  75 03            adc $03,x
003229r 2  95 01            sta $01,x
00322Br 2               
00322Br 2               ; src/prelude.fth:21:8 in `0=`
00322Br 2               @OPCODE_1510:   ; [c64_ir] JumpIf0(137)
00322Br 2  CA               dex
00322Cr 2  CA               dex
00322Dr 2  B5 02            lda $02,x
00322Fr 2  15 03            ora $03,x
003231r 2  D0 03            bne *+5
003233r 2  4C rr rr         jmp @target_137
003236r 2               
003236r 2               @target_136:
003236r 2               
003236r 2               ; src/prelude.fth:21:11 in `0=`
003236r 2               @OPCODE_1512:   ; [c64_ir] PushLiteral(0)
003236r 2  E8               inx
003237r 2  E8               inx
003238r 2  A9 00            lda #0
00323Ar 2  95 00            sta $00,x
00323Cr 2  A9 00            lda #0
00323Er 2  95 01            sta $01,x
003240r 2               
003240r 2               ; src/prelude.fth:21:13 in `0=`
003240r 2               @OPCODE_1513:   ; [c64_ir] JumpElse(138)
003240r 2  4C rr rr         jmp @target_138
003243r 2               
003243r 2               @target_137:
003243r 2               
003243r 2               ; src/prelude.fth:21:18 in `0=`
003243r 2               @OPCODE_1515:   ; [c64_ir] PushLiteral(-1)
003243r 2  E8               inx
003244r 2  E8               inx
003245r 2  A9 FF            lda #255
003247r 2  95 00            sta $00,x
003249r 2  A9 FF            lda #255
00324Br 2  95 01            sta $01,x
00324Dr 2               
00324Dr 2               ; src/prelude.fth:21:21 in `0=`
00324Dr 2               @OPCODE_1516:   ; [c64_ir] JumpTarget(137)
00324Dr 2               
00324Dr 2               @target_138:
00324Dr 2               
00324Dr 2               ; snake.pax:126:16 in `move-snake-head`
00324Dr 2               @OPCODE_1518:   ; [c64_ir] JumpIf0(140)
00324Dr 2  CA               dex
00324Er 2  CA               dex
00324Fr 2  B5 02            lda $02,x
003251r 2  15 03            ora $03,x
003253r 2  D0 03            bne *+5
003255r 2  4C rr rr         jmp @target_140
003258r 2               
003258r 2               @target_139:
003258r 2               
003258r 2               ; snake.pax:119:12 in `move-up`
003258r 2               @OPCODE_1520:   ; [c64_ir] PushLiteral(-1)
003258r 2  E8               inx
003259r 2  E8               inx
00325Ar 2  A9 FF            lda #255
00325Cr 2  95 00            sta $00,x
00325Er 2  A9 FF            lda #255
003260r 2  95 01            sta $01,x
003262r 2               
003262r 2               ; src/prelude.fth:6:16 in `dup`
003262r 2               @OPCODE_1521:   ; [c64_ir] PushLiteral(-27666)
003262r 2  E8               inx
003263r 2  E8               inx
003264r 2  A9 EE            lda #238
003266r 2  95 00            sta $00,x
003268r 2  A9 93            lda #147
00326Ar 2  95 01            sta $01,x
00326Cr 2               
00326Cr 2               ; src/prelude.fth:20:15 in `+!`
00326Cr 2               @OPCODE_1522:   ; [c64_ir] Load
00326Cr 2  A1 00            lda ($00,x)
00326Er 2  95 00            sta $00,x
003270r 2  A9 00            lda #0
003272r 2  95 01            sta $01,x
003274r 2               
003274r 2               ; src/prelude.fth:20:17 in `+!`
003274r 2               @OPCODE_1523:   ; [c64_ir] Add
003274r 2                   ; 21
003274r 2  CA               dex
003275r 2  CA               dex
003276r 2  18               clc
003277r 2  B5 00            lda $00,x
003279r 2  75 02            adc $02,x
00327Br 2  95 00            sta $00,x
00327Dr 2  B5 01            lda $01,x
00327Fr 2  75 03            adc $03,x
003281r 2  95 01            sta $01,x
003283r 2               
003283r 2               ; src/prelude.fth:20:19 in `+!`
003283r 2               @OPCODE_1524:   ; [c64_ir] PushLiteral(-27666)
003283r 2  E8               inx
003284r 2  E8               inx
003285r 2  A9 EE            lda #238
003287r 2  95 00            sta $00,x
003289r 2  A9 93            lda #147
00328Br 2  95 01            sta $01,x
00328Dr 2               
00328Dr 2               ; src/prelude.fth:20:22 in `+!`
00328Dr 2               @OPCODE_1525:   ; [c64_ir] Store
00328Dr 2  CA               dex
00328Er 2  CA               dex
00328Fr 2  CA               dex
003290r 2  CA               dex
003291r 2  B5 02            lda $02,x
003293r 2  81 04            sta ($04,x)
003295r 2                   ; TODO high byte
003295r 2               
003295r 2               ; snake.pax:126:27 in `move-snake-head`
003295r 2               @OPCODE_1526:   ; [c64_ir] JumpElse(152)
003295r 2  4C rr rr         jmp @target_152
003298r 2               
003298r 2               @target_140:
003298r 2               
003298r 2               ; src/prelude.fth:4:13 in `over`
003298r 2               @OPCODE_1528:   ; [c64_ir] TempStore
003298r 2  CA               dex
003299r 2  CA               dex
00329Ar 2  B5 03            lda $03,x
00329Cr 2  85 96            sta TEMP_PAX2
00329Er 2  B5 02            lda $02,x
0032A0r 2  85 95            sta TEMP_PAX1
0032A2r 2               
0032A2r 2               ; src/prelude.fth:4:19 in `over`
0032A2r 2               @OPCODE_1529:   ; [c64_ir] TempLoad
0032A2r 2  E8               inx
0032A3r 2  E8               inx
0032A4r 2  A5 95            lda TEMP_PAX1
0032A6r 2  95 00            sta $00,x
0032A8r 2  A5 96            lda TEMP_PAX2
0032AAr 2  95 01            sta $01,x
0032ACr 2               
0032ACr 2               ; src/prelude.fth:4:25 in `over`
0032ACr 2               @OPCODE_1530:   ; [c64_ir] PushLiteral(39)
0032ACr 2  E8               inx
0032ADr 2  E8               inx
0032AEr 2  A9 27            lda #39
0032B0r 2  95 00            sta $00,x
0032B2r 2  A9 00            lda #0
0032B4r 2  95 01            sta $01,x
0032B6r 2               
0032B6r 2               ; src/prelude.fth:4:28 in `over`
0032B6r 2               @OPCODE_1531:   ; [c64_ir] TempLoad
0032B6r 2  E8               inx
0032B7r 2  E8               inx
0032B8r 2  A5 95            lda TEMP_PAX1
0032BAr 2  95 00            sta $00,x
0032BCr 2  A5 96            lda TEMP_PAX2
0032BEr 2  95 01            sta $01,x
0032C0r 2               
0032C0r 2               ; src/prelude.fth:14:12 in `invert`
0032C0r 2               @OPCODE_1532:   ; [c64_ir] PushLiteral(-1)
0032C0r 2  E8               inx
0032C1r 2  E8               inx
0032C2r 2  A9 FF            lda #255
0032C4r 2  95 00            sta $00,x
0032C6r 2  A9 FF            lda #255
0032C8r 2  95 01            sta $01,x
0032CAr 2               
0032CAr 2               ; src/prelude.fth:14:15 in `invert`
0032CAr 2               @OPCODE_1533:   ; [c64_ir] Nand
0032CAr 2                   ; 26
0032CAr 2  CA               dex
0032CBr 2  CA               dex
0032CCr 2  B5 00            lda $00,x
0032CEr 2  35 02            and $02,x
0032D0r 2  49 FF            eor #$ff
0032D2r 2  95 00            sta $00,x
0032D4r 2  B5 01            lda $01,x
0032D6r 2  35 03            and $03,x
0032D8r 2  49 FF            eor #$ff
0032DAr 2  95 01            sta $01,x
0032DCr 2               
0032DCr 2               ; src/prelude.fth:15:19 in `negate`
0032DCr 2               @OPCODE_1534:   ; [c64_ir] PushLiteral(1)
0032DCr 2  E8               inx
0032DDr 2  E8               inx
0032DEr 2  A9 01            lda #1
0032E0r 2  95 00            sta $00,x
0032E2r 2  A9 00            lda #0
0032E4r 2  95 01            sta $01,x
0032E6r 2               
0032E6r 2               ; src/prelude.fth:15:21 in `negate`
0032E6r 2               @OPCODE_1535:   ; [c64_ir] Add
0032E6r 2                   ; 21
0032E6r 2  CA               dex
0032E7r 2  CA               dex
0032E8r 2  18               clc
0032E9r 2  B5 00            lda $00,x
0032EBr 2  75 02            adc $02,x
0032EDr 2  95 00            sta $00,x
0032EFr 2  B5 01            lda $01,x
0032F1r 2  75 03            adc $03,x
0032F3r 2  95 01            sta $01,x
0032F5r 2               
0032F5r 2               ; src/prelude.fth:16:19 in `-`
0032F5r 2               @OPCODE_1536:   ; [c64_ir] Add
0032F5r 2                   ; 21
0032F5r 2  CA               dex
0032F6r 2  CA               dex
0032F7r 2  18               clc
0032F8r 2  B5 00            lda $00,x
0032FAr 2  75 02            adc $02,x
0032FCr 2  95 00            sta $00,x
0032FEr 2  B5 01            lda $01,x
003300r 2  75 03            adc $03,x
003302r 2  95 01            sta $01,x
003304r 2               
003304r 2               ; src/prelude.fth:21:8 in `0=`
003304r 2               @OPCODE_1537:   ; [c64_ir] JumpIf0(142)
003304r 2  CA               dex
003305r 2  CA               dex
003306r 2  B5 02            lda $02,x
003308r 2  15 03            ora $03,x
00330Ar 2  D0 03            bne *+5
00330Cr 2  4C rr rr         jmp @target_142
00330Fr 2               
00330Fr 2               @target_141:
00330Fr 2               
00330Fr 2               ; src/prelude.fth:21:11 in `0=`
00330Fr 2               @OPCODE_1539:   ; [c64_ir] PushLiteral(0)
00330Fr 2  E8               inx
003310r 2  E8               inx
003311r 2  A9 00            lda #0
003313r 2  95 00            sta $00,x
003315r 2  A9 00            lda #0
003317r 2  95 01            sta $01,x
003319r 2               
003319r 2               ; src/prelude.fth:21:13 in `0=`
003319r 2               @OPCODE_1540:   ; [c64_ir] JumpElse(143)
003319r 2  4C rr rr         jmp @target_143
00331Cr 2               
00331Cr 2               @target_142:
00331Cr 2               
00331Cr 2               ; src/prelude.fth:21:18 in `0=`
00331Cr 2               @OPCODE_1542:   ; [c64_ir] PushLiteral(-1)
00331Cr 2  E8               inx
00331Dr 2  E8               inx
00331Er 2  A9 FF            lda #255
003320r 2  95 00            sta $00,x
003322r 2  A9 FF            lda #255
003324r 2  95 01            sta $01,x
003326r 2               
003326r 2               ; src/prelude.fth:21:21 in `0=`
003326r 2               @OPCODE_1543:   ; [c64_ir] JumpTarget(142)
003326r 2               
003326r 2               @target_143:
003326r 2               
003326r 2               ; snake.pax:127:16 in `move-snake-head`
003326r 2               @OPCODE_1545:   ; [c64_ir] JumpIf0(145)
003326r 2  CA               dex
003327r 2  CA               dex
003328r 2  B5 02            lda $02,x
00332Ar 2  15 03            ora $03,x
00332Cr 2  D0 03            bne *+5
00332Er 2  4C rr rr         jmp @target_145
003331r 2               
003331r 2               @target_144:
003331r 2               
003331r 2               ; snake.pax:122:15 in `move-right`
003331r 2               @OPCODE_1547:   ; [c64_ir] PushLiteral(1)
003331r 2  E8               inx
003332r 2  E8               inx
003333r 2  A9 01            lda #1
003335r 2  95 00            sta $00,x
003337r 2  A9 00            lda #0
003339r 2  95 01            sta $01,x
00333Br 2               
00333Br 2               ; src/prelude.fth:6:16 in `dup`
00333Br 2               @OPCODE_1548:   ; [c64_ir] PushLiteral(-28668)
00333Br 2  E8               inx
00333Cr 2  E8               inx
00333Dr 2  A9 04            lda #4
00333Fr 2  95 00            sta $00,x
003341r 2  A9 90            lda #144
003343r 2  95 01            sta $01,x
003345r 2               
003345r 2               ; src/prelude.fth:20:15 in `+!`
003345r 2               @OPCODE_1549:   ; [c64_ir] Load
003345r 2  A1 00            lda ($00,x)
003347r 2  95 00            sta $00,x
003349r 2  A9 00            lda #0
00334Br 2  95 01            sta $01,x
00334Dr 2               
00334Dr 2               ; src/prelude.fth:20:17 in `+!`
00334Dr 2               @OPCODE_1550:   ; [c64_ir] Add
00334Dr 2                   ; 21
00334Dr 2  CA               dex
00334Er 2  CA               dex
00334Fr 2  18               clc
003350r 2  B5 00            lda $00,x
003352r 2  75 02            adc $02,x
003354r 2  95 00            sta $00,x
003356r 2  B5 01            lda $01,x
003358r 2  75 03            adc $03,x
00335Ar 2  95 01            sta $01,x
00335Cr 2               
00335Cr 2               ; src/prelude.fth:20:19 in `+!`
00335Cr 2               @OPCODE_1551:   ; [c64_ir] PushLiteral(-28668)
00335Cr 2  E8               inx
00335Dr 2  E8               inx
00335Er 2  A9 04            lda #4
003360r 2  95 00            sta $00,x
003362r 2  A9 90            lda #144
003364r 2  95 01            sta $01,x
003366r 2               
003366r 2               ; src/prelude.fth:20:22 in `+!`
003366r 2               @OPCODE_1552:   ; [c64_ir] Store
003366r 2  CA               dex
003367r 2  CA               dex
003368r 2  CA               dex
003369r 2  CA               dex
00336Ar 2  B5 02            lda $02,x
00336Cr 2  81 04            sta ($04,x)
00336Er 2                   ; TODO high byte
00336Er 2               
00336Er 2               ; snake.pax:127:30 in `move-snake-head`
00336Er 2               @OPCODE_1553:   ; [c64_ir] JumpElse(151)
00336Er 2  4C rr rr         jmp @target_151
003371r 2               
003371r 2               @target_145:
003371r 2               
003371r 2               ; src/prelude.fth:4:13 in `over`
003371r 2               @OPCODE_1555:   ; [c64_ir] TempStore
003371r 2  CA               dex
003372r 2  CA               dex
003373r 2  B5 03            lda $03,x
003375r 2  85 96            sta TEMP_PAX2
003377r 2  B5 02            lda $02,x
003379r 2  85 95            sta TEMP_PAX1
00337Br 2               
00337Br 2               ; src/prelude.fth:4:19 in `over`
00337Br 2               @OPCODE_1556:   ; [c64_ir] TempLoad
00337Br 2  E8               inx
00337Cr 2  E8               inx
00337Dr 2  A5 95            lda TEMP_PAX1
00337Fr 2  95 00            sta $00,x
003381r 2  A5 96            lda TEMP_PAX2
003383r 2  95 01            sta $01,x
003385r 2               
003385r 2               ; src/prelude.fth:4:25 in `over`
003385r 2               @OPCODE_1557:   ; [c64_ir] PushLiteral(40)
003385r 2  E8               inx
003386r 2  E8               inx
003387r 2  A9 28            lda #40
003389r 2  95 00            sta $00,x
00338Br 2  A9 00            lda #0
00338Dr 2  95 01            sta $01,x
00338Fr 2               
00338Fr 2               ; src/prelude.fth:4:28 in `over`
00338Fr 2               @OPCODE_1558:   ; [c64_ir] TempLoad
00338Fr 2  E8               inx
003390r 2  E8               inx
003391r 2  A5 95            lda TEMP_PAX1
003393r 2  95 00            sta $00,x
003395r 2  A5 96            lda TEMP_PAX2
003397r 2  95 01            sta $01,x
003399r 2               
003399r 2               ; src/prelude.fth:14:12 in `invert`
003399r 2               @OPCODE_1559:   ; [c64_ir] PushLiteral(-1)
003399r 2  E8               inx
00339Ar 2  E8               inx
00339Br 2  A9 FF            lda #255
00339Dr 2  95 00            sta $00,x
00339Fr 2  A9 FF            lda #255
0033A1r 2  95 01            sta $01,x
0033A3r 2               
0033A3r 2               ; src/prelude.fth:14:15 in `invert`
0033A3r 2               @OPCODE_1560:   ; [c64_ir] Nand
0033A3r 2                   ; 26
0033A3r 2  CA               dex
0033A4r 2  CA               dex
0033A5r 2  B5 00            lda $00,x
0033A7r 2  35 02            and $02,x
0033A9r 2  49 FF            eor #$ff
0033ABr 2  95 00            sta $00,x
0033ADr 2  B5 01            lda $01,x
0033AFr 2  35 03            and $03,x
0033B1r 2  49 FF            eor #$ff
0033B3r 2  95 01            sta $01,x
0033B5r 2               
0033B5r 2               ; src/prelude.fth:15:19 in `negate`
0033B5r 2               @OPCODE_1561:   ; [c64_ir] PushLiteral(1)
0033B5r 2  E8               inx
0033B6r 2  E8               inx
0033B7r 2  A9 01            lda #1
0033B9r 2  95 00            sta $00,x
0033BBr 2  A9 00            lda #0
0033BDr 2  95 01            sta $01,x
0033BFr 2               
0033BFr 2               ; src/prelude.fth:15:21 in `negate`
0033BFr 2               @OPCODE_1562:   ; [c64_ir] Add
0033BFr 2                   ; 21
0033BFr 2  CA               dex
0033C0r 2  CA               dex
0033C1r 2  18               clc
0033C2r 2  B5 00            lda $00,x
0033C4r 2  75 02            adc $02,x
0033C6r 2  95 00            sta $00,x
0033C8r 2  B5 01            lda $01,x
0033CAr 2  75 03            adc $03,x
0033CCr 2  95 01            sta $01,x
0033CEr 2               
0033CEr 2               ; src/prelude.fth:16:19 in `-`
0033CEr 2               @OPCODE_1563:   ; [c64_ir] Add
0033CEr 2                   ; 21
0033CEr 2  CA               dex
0033CFr 2  CA               dex
0033D0r 2  18               clc
0033D1r 2  B5 00            lda $00,x
0033D3r 2  75 02            adc $02,x
0033D5r 2  95 00            sta $00,x
0033D7r 2  B5 01            lda $01,x
0033D9r 2  75 03            adc $03,x
0033DBr 2  95 01            sta $01,x
0033DDr 2               
0033DDr 2               ; src/prelude.fth:21:8 in `0=`
0033DDr 2               @OPCODE_1564:   ; [c64_ir] JumpIf0(147)
0033DDr 2  CA               dex
0033DEr 2  CA               dex
0033DFr 2  B5 02            lda $02,x
0033E1r 2  15 03            ora $03,x
0033E3r 2  D0 03            bne *+5
0033E5r 2  4C rr rr         jmp @target_147
0033E8r 2               
0033E8r 2               @target_146:
0033E8r 2               
0033E8r 2               ; src/prelude.fth:21:11 in `0=`
0033E8r 2               @OPCODE_1566:   ; [c64_ir] PushLiteral(0)
0033E8r 2  E8               inx
0033E9r 2  E8               inx
0033EAr 2  A9 00            lda #0
0033ECr 2  95 00            sta $00,x
0033EEr 2  A9 00            lda #0
0033F0r 2  95 01            sta $01,x
0033F2r 2               
0033F2r 2               ; src/prelude.fth:21:13 in `0=`
0033F2r 2               @OPCODE_1567:   ; [c64_ir] JumpElse(148)
0033F2r 2  4C rr rr         jmp @target_148
0033F5r 2               
0033F5r 2               @target_147:
0033F5r 2               
0033F5r 2               ; src/prelude.fth:21:18 in `0=`
0033F5r 2               @OPCODE_1569:   ; [c64_ir] PushLiteral(-1)
0033F5r 2  E8               inx
0033F6r 2  E8               inx
0033F7r 2  A9 FF            lda #255
0033F9r 2  95 00            sta $00,x
0033FBr 2  A9 FF            lda #255
0033FDr 2  95 01            sta $01,x
0033FFr 2               
0033FFr 2               ; src/prelude.fth:21:21 in `0=`
0033FFr 2               @OPCODE_1570:   ; [c64_ir] JumpTarget(147)
0033FFr 2               
0033FFr 2               @target_148:
0033FFr 2               
0033FFr 2               ; snake.pax:128:16 in `move-snake-head`
0033FFr 2               @OPCODE_1572:   ; [c64_ir] JumpIf0(150)
0033FFr 2  CA               dex
003400r 2  CA               dex
003401r 2  B5 02            lda $02,x
003403r 2  15 03            ora $03,x
003405r 2  D0 03            bne *+5
003407r 2  4C rr rr         jmp @target_150
00340Ar 2               
00340Ar 2               @target_149:
00340Ar 2               
00340Ar 2               ; snake.pax:121:14 in `move-down`
00340Ar 2               @OPCODE_1574:   ; [c64_ir] PushLiteral(1)
00340Ar 2  E8               inx
00340Br 2  E8               inx
00340Cr 2  A9 01            lda #1
00340Er 2  95 00            sta $00,x
003410r 2  A9 00            lda #0
003412r 2  95 01            sta $01,x
003414r 2               
003414r 2               ; src/prelude.fth:6:16 in `dup`
003414r 2               @OPCODE_1575:   ; [c64_ir] PushLiteral(-27666)
003414r 2  E8               inx
003415r 2  E8               inx
003416r 2  A9 EE            lda #238
003418r 2  95 00            sta $00,x
00341Ar 2  A9 93            lda #147
00341Cr 2  95 01            sta $01,x
00341Er 2               
00341Er 2               ; src/prelude.fth:20:15 in `+!`
00341Er 2               @OPCODE_1576:   ; [c64_ir] Load
00341Er 2  A1 00            lda ($00,x)
003420r 2  95 00            sta $00,x
003422r 2  A9 00            lda #0
003424r 2  95 01            sta $01,x
003426r 2               
003426r 2               ; src/prelude.fth:20:17 in `+!`
003426r 2               @OPCODE_1577:   ; [c64_ir] Add
003426r 2                   ; 21
003426r 2  CA               dex
003427r 2  CA               dex
003428r 2  18               clc
003429r 2  B5 00            lda $00,x
00342Br 2  75 02            adc $02,x
00342Dr 2  95 00            sta $00,x
00342Fr 2  B5 01            lda $01,x
003431r 2  75 03            adc $03,x
003433r 2  95 01            sta $01,x
003435r 2               
003435r 2               ; src/prelude.fth:20:19 in `+!`
003435r 2               @OPCODE_1578:   ; [c64_ir] PushLiteral(-27666)
003435r 2  E8               inx
003436r 2  E8               inx
003437r 2  A9 EE            lda #238
003439r 2  95 00            sta $00,x
00343Br 2  A9 93            lda #147
00343Dr 2  95 01            sta $01,x
00343Fr 2               
00343Fr 2               ; src/prelude.fth:20:22 in `+!`
00343Fr 2               @OPCODE_1579:   ; [c64_ir] Store
00343Fr 2  CA               dex
003440r 2  CA               dex
003441r 2  CA               dex
003442r 2  CA               dex
003443r 2  B5 02            lda $02,x
003445r 2  81 04            sta ($04,x)
003447r 2                   ; TODO high byte
003447r 2               
003447r 2               ; snake.pax:129:3 in `move-snake-head`
003447r 2               @OPCODE_1580:   ; [c64_ir] JumpTarget(149)
003447r 2               
003447r 2               @target_150:
003447r 2               
003447r 2               ; snake.pax:129:8 in `move-snake-head`
003447r 2               @OPCODE_1582:   ; [c64_ir] JumpTarget(150)
003447r 2               
003447r 2               @target_151:
003447r 2               
003447r 2               ; snake.pax:129:13 in `move-snake-head`
003447r 2               @OPCODE_1584:   ; [c64_ir] JumpTarget(151)
003447r 2               
003447r 2               @target_152:
003447r 2               
003447r 2               ; snake.pax:129:18 in `move-snake-head`
003447r 2               @OPCODE_1586:   ; [c64_ir] JumpTarget(152)
003447r 2               
003447r 2               @target_153:
003447r 2               
003447r 2               ; snake.pax:129:23 in `move-snake-head`
003447r 2               @OPCODE_1588:   ; [c64_ir] Drop
003447r 2  CA               dex
003448r 2  CA               dex
003449r 2               
003449r 2               ; <inline>:0:0 in `main`
003449r 2               @OPCODE_1589:   ; [c64_ir] AltPop
003449r 2  E8               inx
00344Ar 2  E8               inx
00344Br 2  68               pla
00344Cr 2  95 00            sta $00,x
00344Er 2  68               pla
00344Fr 2  95 01            sta $01,x
003451r 2               
003451r 2               ; <inline>:0:0 in `main`
003451r 2               @OPCODE_1590:   ; [c64_ir] Drop
003451r 2  CA               dex
003452r 2  CA               dex
003453r 2               
003453r 2               ; <inline>:0:0 in `main`
003453r 2               @OPCODE_1591:   ; [c64_ir] PushLiteral(7777)
003453r 2  E8               inx
003454r 2  E8               inx
003455r 2  A9 61            lda #97
003457r 2  95 00            sta $00,x
003459r 2  A9 1E            lda #30
00345Br 2  95 01            sta $01,x
00345Dr 2               
00345Dr 2               ; <inline>:0:0 in `main`
00345Dr 2               @OPCODE_1592:   ; [c64_ir] AltPush
00345Dr 2  CA               dex
00345Er 2  CA               dex
00345Fr 2  B5 03            lda $03,x
003461r 2  48               pha
003462r 2  B5 02            lda $02,x
003464r 2  48               pha
003465r 2               
003465r 2               ; snake.pax:177:3 in `check-apple`
003465r 2               @OPCODE_1593:   ; [c64_ir] PushLiteral(-28668)
003465r 2  E8               inx
003466r 2  E8               inx
003467r 2  A9 04            lda #4
003469r 2  95 00            sta $00,x
00346Br 2  A9 90            lda #144
00346Dr 2  95 01            sta $01,x
00346Fr 2               
00346Fr 2               ; snake.pax:177:16 in `check-apple`
00346Fr 2               @OPCODE_1594:   ; [c64_ir] Load
00346Fr 2  A1 00            lda ($00,x)
003471r 2  95 00            sta $00,x
003473r 2  A9 00            lda #0
003475r 2  95 01            sta $01,x
003477r 2               
003477r 2               ; snake.pax:177:18 in `check-apple`
003477r 2               @OPCODE_1595:   ; [c64_ir] PushLiteral(-26664)
003477r 2  E8               inx
003478r 2  E8               inx
003479r 2  A9 D8            lda #216
00347Br 2  95 00            sta $00,x
00347Dr 2  A9 97            lda #151
00347Fr 2  95 01            sta $01,x
003481r 2               
003481r 2               ; snake.pax:177:26 in `check-apple`
003481r 2               @OPCODE_1596:   ; [c64_ir] Load
003481r 2  A1 00            lda ($00,x)
003483r 2  95 00            sta $00,x
003485r 2  A9 00            lda #0
003487r 2  95 01            sta $01,x
003489r 2               
003489r 2               ; src/prelude.fth:14:12 in `invert`
003489r 2               @OPCODE_1597:   ; [c64_ir] PushLiteral(-1)
003489r 2  E8               inx
00348Ar 2  E8               inx
00348Br 2  A9 FF            lda #255
00348Dr 2  95 00            sta $00,x
00348Fr 2  A9 FF            lda #255
003491r 2  95 01            sta $01,x
003493r 2               
003493r 2               ; src/prelude.fth:14:15 in `invert`
003493r 2               @OPCODE_1598:   ; [c64_ir] Nand
003493r 2                   ; 26
003493r 2  CA               dex
003494r 2  CA               dex
003495r 2  B5 00            lda $00,x
003497r 2  35 02            and $02,x
003499r 2  49 FF            eor #$ff
00349Br 2  95 00            sta $00,x
00349Dr 2  B5 01            lda $01,x
00349Fr 2  35 03            and $03,x
0034A1r 2  49 FF            eor #$ff
0034A3r 2  95 01            sta $01,x
0034A5r 2               
0034A5r 2               ; src/prelude.fth:15:19 in `negate`
0034A5r 2               @OPCODE_1599:   ; [c64_ir] PushLiteral(1)
0034A5r 2  E8               inx
0034A6r 2  E8               inx
0034A7r 2  A9 01            lda #1
0034A9r 2  95 00            sta $00,x
0034ABr 2  A9 00            lda #0
0034ADr 2  95 01            sta $01,x
0034AFr 2               
0034AFr 2               ; src/prelude.fth:15:21 in `negate`
0034AFr 2               @OPCODE_1600:   ; [c64_ir] Add
0034AFr 2                   ; 21
0034AFr 2  CA               dex
0034B0r 2  CA               dex
0034B1r 2  18               clc
0034B2r 2  B5 00            lda $00,x
0034B4r 2  75 02            adc $02,x
0034B6r 2  95 00            sta $00,x
0034B8r 2  B5 01            lda $01,x
0034BAr 2  75 03            adc $03,x
0034BCr 2  95 01            sta $01,x
0034BEr 2               
0034BEr 2               ; src/prelude.fth:16:19 in `-`
0034BEr 2               @OPCODE_1601:   ; [c64_ir] Add
0034BEr 2                   ; 21
0034BEr 2  CA               dex
0034BFr 2  CA               dex
0034C0r 2  18               clc
0034C1r 2  B5 00            lda $00,x
0034C3r 2  75 02            adc $02,x
0034C5r 2  95 00            sta $00,x
0034C7r 2  B5 01            lda $01,x
0034C9r 2  75 03            adc $03,x
0034CBr 2  95 01            sta $01,x
0034CDr 2               
0034CDr 2               ; src/prelude.fth:21:8 in `0=`
0034CDr 2               @OPCODE_1602:   ; [c64_ir] JumpIf0(155)
0034CDr 2  CA               dex
0034CEr 2  CA               dex
0034CFr 2  B5 02            lda $02,x
0034D1r 2  15 03            ora $03,x
0034D3r 2  D0 03            bne *+5
0034D5r 2  4C rr rr         jmp @target_155
0034D8r 2               
0034D8r 2               @target_154:
0034D8r 2               
0034D8r 2               ; src/prelude.fth:21:11 in `0=`
0034D8r 2               @OPCODE_1604:   ; [c64_ir] PushLiteral(0)
0034D8r 2  E8               inx
0034D9r 2  E8               inx
0034DAr 2  A9 00            lda #0
0034DCr 2  95 00            sta $00,x
0034DEr 2  A9 00            lda #0
0034E0r 2  95 01            sta $01,x
0034E2r 2               
0034E2r 2               ; src/prelude.fth:21:13 in `0=`
0034E2r 2               @OPCODE_1605:   ; [c64_ir] JumpElse(156)
0034E2r 2  4C rr rr         jmp @target_156
0034E5r 2               
0034E5r 2               @target_155:
0034E5r 2               
0034E5r 2               ; src/prelude.fth:21:18 in `0=`
0034E5r 2               @OPCODE_1607:   ; [c64_ir] PushLiteral(-1)
0034E5r 2  E8               inx
0034E6r 2  E8               inx
0034E7r 2  A9 FF            lda #255
0034E9r 2  95 00            sta $00,x
0034EBr 2  A9 FF            lda #255
0034EDr 2  95 01            sta $01,x
0034EFr 2               
0034EFr 2               ; src/prelude.fth:21:21 in `0=`
0034EFr 2               @OPCODE_1608:   ; [c64_ir] JumpTarget(155)
0034EFr 2               
0034EFr 2               @target_156:
0034EFr 2               
0034EFr 2               ; snake.pax:178:3 in `check-apple`
0034EFr 2               @OPCODE_1610:   ; [c64_ir] PushLiteral(-27666)
0034EFr 2  E8               inx
0034F0r 2  E8               inx
0034F1r 2  A9 EE            lda #238
0034F3r 2  95 00            sta $00,x
0034F5r 2  A9 93            lda #147
0034F7r 2  95 01            sta $01,x
0034F9r 2               
0034F9r 2               ; snake.pax:178:16 in `check-apple`
0034F9r 2               @OPCODE_1611:   ; [c64_ir] Load
0034F9r 2  A1 00            lda ($00,x)
0034FBr 2  95 00            sta $00,x
0034FDr 2  A9 00            lda #0
0034FFr 2  95 01            sta $01,x
003501r 2               
003501r 2               ; snake.pax:178:18 in `check-apple`
003501r 2               @OPCODE_1612:   ; [c64_ir] PushLiteral(-26662)
003501r 2  E8               inx
003502r 2  E8               inx
003503r 2  A9 DA            lda #218
003505r 2  95 00            sta $00,x
003507r 2  A9 97            lda #151
003509r 2  95 01            sta $01,x
00350Br 2               
00350Br 2               ; snake.pax:178:26 in `check-apple`
00350Br 2               @OPCODE_1613:   ; [c64_ir] Load
00350Br 2  A1 00            lda ($00,x)
00350Dr 2  95 00            sta $00,x
00350Fr 2  A9 00            lda #0
003511r 2  95 01            sta $01,x
003513r 2               
003513r 2               ; src/prelude.fth:14:12 in `invert`
003513r 2               @OPCODE_1614:   ; [c64_ir] PushLiteral(-1)
003513r 2  E8               inx
003514r 2  E8               inx
003515r 2  A9 FF            lda #255
003517r 2  95 00            sta $00,x
003519r 2  A9 FF            lda #255
00351Br 2  95 01            sta $01,x
00351Dr 2               
00351Dr 2               ; src/prelude.fth:14:15 in `invert`
00351Dr 2               @OPCODE_1615:   ; [c64_ir] Nand
00351Dr 2                   ; 26
00351Dr 2  CA               dex
00351Er 2  CA               dex
00351Fr 2  B5 00            lda $00,x
003521r 2  35 02            and $02,x
003523r 2  49 FF            eor #$ff
003525r 2  95 00            sta $00,x
003527r 2  B5 01            lda $01,x
003529r 2  35 03            and $03,x
00352Br 2  49 FF            eor #$ff
00352Dr 2  95 01            sta $01,x
00352Fr 2               
00352Fr 2               ; src/prelude.fth:15:19 in `negate`
00352Fr 2               @OPCODE_1616:   ; [c64_ir] PushLiteral(1)
00352Fr 2  E8               inx
003530r 2  E8               inx
003531r 2  A9 01            lda #1
003533r 2  95 00            sta $00,x
003535r 2  A9 00            lda #0
003537r 2  95 01            sta $01,x
003539r 2               
003539r 2               ; src/prelude.fth:15:21 in `negate`
003539r 2               @OPCODE_1617:   ; [c64_ir] Add
003539r 2                   ; 21
003539r 2  CA               dex
00353Ar 2  CA               dex
00353Br 2  18               clc
00353Cr 2  B5 00            lda $00,x
00353Er 2  75 02            adc $02,x
003540r 2  95 00            sta $00,x
003542r 2  B5 01            lda $01,x
003544r 2  75 03            adc $03,x
003546r 2  95 01            sta $01,x
003548r 2               
003548r 2               ; src/prelude.fth:16:19 in `-`
003548r 2               @OPCODE_1618:   ; [c64_ir] Add
003548r 2                   ; 21
003548r 2  CA               dex
003549r 2  CA               dex
00354Ar 2  18               clc
00354Br 2  B5 00            lda $00,x
00354Dr 2  75 02            adc $02,x
00354Fr 2  95 00            sta $00,x
003551r 2  B5 01            lda $01,x
003553r 2  75 03            adc $03,x
003555r 2  95 01            sta $01,x
003557r 2               
003557r 2               ; src/prelude.fth:21:8 in `0=`
003557r 2               @OPCODE_1619:   ; [c64_ir] JumpIf0(158)
003557r 2  CA               dex
003558r 2  CA               dex
003559r 2  B5 02            lda $02,x
00355Br 2  15 03            ora $03,x
00355Dr 2  D0 03            bne *+5
00355Fr 2  4C rr rr         jmp @target_158
003562r 2               
003562r 2               @target_157:
003562r 2               
003562r 2               ; src/prelude.fth:21:11 in `0=`
003562r 2               @OPCODE_1621:   ; [c64_ir] PushLiteral(0)
003562r 2  E8               inx
003563r 2  E8               inx
003564r 2  A9 00            lda #0
003566r 2  95 00            sta $00,x
003568r 2  A9 00            lda #0
00356Ar 2  95 01            sta $01,x
00356Cr 2               
00356Cr 2               ; src/prelude.fth:21:13 in `0=`
00356Cr 2               @OPCODE_1622:   ; [c64_ir] JumpElse(159)
00356Cr 2  4C rr rr         jmp @target_159
00356Fr 2               
00356Fr 2               @target_158:
00356Fr 2               
00356Fr 2               ; src/prelude.fth:21:18 in `0=`
00356Fr 2               @OPCODE_1624:   ; [c64_ir] PushLiteral(-1)
00356Fr 2  E8               inx
003570r 2  E8               inx
003571r 2  A9 FF            lda #255
003573r 2  95 00            sta $00,x
003575r 2  A9 FF            lda #255
003577r 2  95 01            sta $01,x
003579r 2               
003579r 2               ; src/prelude.fth:21:21 in `0=`
003579r 2               @OPCODE_1625:   ; [c64_ir] JumpTarget(158)
003579r 2               
003579r 2               @target_159:
003579r 2               
003579r 2               ; src/prelude.fth:28:9 in `and`
003579r 2               @OPCODE_1627:   ; [c64_ir] Nand
003579r 2                   ; 26
003579r 2  CA               dex
00357Ar 2  CA               dex
00357Br 2  B5 00            lda $00,x
00357Dr 2  35 02            and $02,x
00357Fr 2  49 FF            eor #$ff
003581r 2  95 00            sta $00,x
003583r 2  B5 01            lda $01,x
003585r 2  35 03            and $03,x
003587r 2  49 FF            eor #$ff
003589r 2  95 01            sta $01,x
00358Br 2               
00358Br 2               ; src/prelude.fth:14:12 in `invert`
00358Br 2               @OPCODE_1628:   ; [c64_ir] PushLiteral(-1)
00358Br 2  E8               inx
00358Cr 2  E8               inx
00358Dr 2  A9 FF            lda #255
00358Fr 2  95 00            sta $00,x
003591r 2  A9 FF            lda #255
003593r 2  95 01            sta $01,x
003595r 2               
003595r 2               ; src/prelude.fth:14:15 in `invert`
003595r 2               @OPCODE_1629:   ; [c64_ir] Nand
003595r 2                   ; 26
003595r 2  CA               dex
003596r 2  CA               dex
003597r 2  B5 00            lda $00,x
003599r 2  35 02            and $02,x
00359Br 2  49 FF            eor #$ff
00359Dr 2  95 00            sta $00,x
00359Fr 2  B5 01            lda $01,x
0035A1r 2  35 03            and $03,x
0035A3r 2  49 FF            eor #$ff
0035A5r 2  95 01            sta $01,x
0035A7r 2               
0035A7r 2               ; snake.pax:179:7 in `check-apple`
0035A7r 2               @OPCODE_1630:   ; [c64_ir] JumpIf0(182)
0035A7r 2  CA               dex
0035A8r 2  CA               dex
0035A9r 2  B5 02            lda $02,x
0035ABr 2  15 03            ora $03,x
0035ADr 2  D0 03            bne *+5
0035AFr 2  4C rr rr         jmp @target_182
0035B2r 2               
0035B2r 2               @target_160:
0035B2r 2               
0035B2r 2               ; <inline>:0:0 in `main`
0035B2r 2               @OPCODE_1632:   ; [c64_ir] PushLiteral(7777)
0035B2r 2  E8               inx
0035B3r 2  E8               inx
0035B4r 2  A9 61            lda #97
0035B6r 2  95 00            sta $00,x
0035B8r 2  A9 1E            lda #30
0035BAr 2  95 01            sta $01,x
0035BCr 2               
0035BCr 2               ; <inline>:0:0 in `main`
0035BCr 2               @OPCODE_1633:   ; [c64_ir] AltPush
0035BCr 2  CA               dex
0035BDr 2  CA               dex
0035BEr 2  B5 03            lda $03,x
0035C0r 2  48               pha
0035C1r 2  B5 02            lda $02,x
0035C3r 2  48               pha
0035C4r 2               
0035C4r 2               ; snake.pax:170:3 in `move-apple`
0035C4r 2               @OPCODE_1634:   ; [c64_ir] PushLiteral(-26664)
0035C4r 2  E8               inx
0035C5r 2  E8               inx
0035C6r 2  A9 D8            lda #216
0035C8r 2  95 00            sta $00,x
0035CAr 2  A9 97            lda #151
0035CCr 2  95 01            sta $01,x
0035CEr 2               
0035CEr 2               ; snake.pax:170:11 in `move-apple`
0035CEr 2               @OPCODE_1635:   ; [c64_ir] Load
0035CEr 2  A1 00            lda ($00,x)
0035D0r 2  95 00            sta $00,x
0035D2r 2  A9 00            lda #0
0035D4r 2  95 01            sta $01,x
0035D6r 2               
0035D6r 2               ; snake.pax:170:13 in `move-apple`
0035D6r 2               @OPCODE_1636:   ; [c64_ir] PushLiteral(-26662)
0035D6r 2  E8               inx
0035D7r 2  E8               inx
0035D8r 2  A9 DA            lda #218
0035DAr 2  95 00            sta $00,x
0035DCr 2  A9 97            lda #151
0035DEr 2  95 01            sta $01,x
0035E0r 2               
0035E0r 2               ; snake.pax:170:21 in `move-apple`
0035E0r 2               @OPCODE_1637:   ; [c64_ir] Load
0035E0r 2  A1 00            lda ($00,x)
0035E2r 2  95 00            sta $00,x
0035E4r 2  A9 00            lda #0
0035E6r 2  95 01            sta $01,x
0035E8r 2               
0035E8r 2               ; <inline>:0:0 in `main`
0035E8r 2               @OPCODE_1638:   ; [c64_ir] PushLiteral(7777)
0035E8r 2  E8               inx
0035E9r 2  E8               inx
0035EAr 2  A9 61            lda #97
0035ECr 2  95 00            sta $00,x
0035EEr 2  A9 1E            lda #30
0035F0r 2  95 01            sta $01,x
0035F2r 2               
0035F2r 2               ; <inline>:0:0 in `main`
0035F2r 2               @OPCODE_1639:   ; [c64_ir] AltPush
0035F2r 2  CA               dex
0035F3r 2  CA               dex
0035F4r 2  B5 03            lda $03,x
0035F6r 2  48               pha
0035F7r 2  B5 02            lda $02,x
0035F9r 2  48               pha
0035FAr 2               
0035FAr 2               ; src/prelude.fth:3:10 in `swap`
0035FAr 2               @OPCODE_1640:   ; [c64_ir] AltPush
0035FAr 2  CA               dex
0035FBr 2  CA               dex
0035FCr 2  B5 03            lda $03,x
0035FEr 2  48               pha
0035FFr 2  B5 02            lda $02,x
003601r 2  48               pha
003602r 2               
003602r 2               ; src/prelude.fth:3:13 in `swap`
003602r 2               @OPCODE_1641:   ; [c64_ir] TempStore
003602r 2  CA               dex
003603r 2  CA               dex
003604r 2  B5 03            lda $03,x
003606r 2  85 96            sta TEMP_PAX2
003608r 2  B5 02            lda $02,x
00360Ar 2  85 95            sta TEMP_PAX1
00360Cr 2               
00360Cr 2               ; src/prelude.fth:3:19 in `swap`
00360Cr 2               @OPCODE_1642:   ; [c64_ir] AltPop
00360Cr 2  E8               inx
00360Dr 2  E8               inx
00360Er 2  68               pla
00360Fr 2  95 00            sta $00,x
003611r 2  68               pla
003612r 2  95 01            sta $01,x
003614r 2               
003614r 2               ; src/prelude.fth:3:22 in `swap`
003614r 2               @OPCODE_1643:   ; [c64_ir] TempLoad
003614r 2  E8               inx
003615r 2  E8               inx
003616r 2  A5 95            lda TEMP_PAX1
003618r 2  95 00            sta $00,x
00361Ar 2  A5 96            lda TEMP_PAX2
00361Cr 2  95 01            sta $01,x
00361Er 2               
00361Er 2               ; src/prelude.fth:3:13 in `swap`
00361Er 2               @OPCODE_1644:   ; [c64_ir] TempStore
00361Er 2  CA               dex
00361Fr 2  CA               dex
003620r 2  B5 03            lda $03,x
003622r 2  85 96            sta TEMP_PAX2
003624r 2  B5 02            lda $02,x
003626r 2  85 95            sta TEMP_PAX1
003628r 2               
003628r 2               ; src/prelude.fth:3:22 in `swap`
003628r 2               @OPCODE_1645:   ; [c64_ir] TempLoad
003628r 2  E8               inx
003629r 2  E8               inx
00362Ar 2  A5 95            lda TEMP_PAX1
00362Cr 2  95 00            sta $00,x
00362Er 2  A5 96            lda TEMP_PAX2
003630r 2  95 01            sta $01,x
003632r 2               
003632r 2               ; src/prelude.fth:5:10 in `rot`
003632r 2               @OPCODE_1646:   ; [c64_ir] AltPush
003632r 2  CA               dex
003633r 2  CA               dex
003634r 2  B5 03            lda $03,x
003636r 2  48               pha
003637r 2  B5 02            lda $02,x
003639r 2  48               pha
00363Ar 2               
00363Ar 2               ; src/prelude.fth:3:13 in `swap`
00363Ar 2               @OPCODE_1647:   ; [c64_ir] TempStore
00363Ar 2  CA               dex
00363Br 2  CA               dex
00363Cr 2  B5 03            lda $03,x
00363Er 2  85 96            sta TEMP_PAX2
003640r 2  B5 02            lda $02,x
003642r 2  85 95            sta TEMP_PAX1
003644r 2               
003644r 2               ; src/prelude.fth:3:19 in `swap`
003644r 2               @OPCODE_1648:   ; [c64_ir] PushLiteral(32)
003644r 2  E8               inx
003645r 2  E8               inx
003646r 2  A9 20            lda #32
003648r 2  95 00            sta $00,x
00364Ar 2  A9 00            lda #0
00364Cr 2  95 01            sta $01,x
00364Er 2               
00364Er 2               ; src/prelude.fth:3:22 in `swap`
00364Er 2               @OPCODE_1649:   ; [c64_ir] TempLoad
00364Er 2  E8               inx
00364Fr 2  E8               inx
003650r 2  A5 95            lda TEMP_PAX1
003652r 2  95 00            sta $00,x
003654r 2  A5 96            lda TEMP_PAX2
003656r 2  95 01            sta $01,x
003658r 2               
003658r 2               ; src/prelude.fth:5:18 in `rot`
003658r 2               @OPCODE_1650:   ; [c64_ir] AltPop
003658r 2  E8               inx
003659r 2  E8               inx
00365Ar 2  68               pla
00365Br 2  95 00            sta $00,x
00365Dr 2  68               pla
00365Er 2  95 01            sta $01,x
003660r 2               
003660r 2               ; src/prelude.fth:3:10 in `swap`
003660r 2               @OPCODE_1651:   ; [c64_ir] AltPush
003660r 2  CA               dex
003661r 2  CA               dex
003662r 2  B5 03            lda $03,x
003664r 2  48               pha
003665r 2  B5 02            lda $02,x
003667r 2  48               pha
003668r 2               
003668r 2               ; src/prelude.fth:3:13 in `swap`
003668r 2               @OPCODE_1652:   ; [c64_ir] TempStore
003668r 2  CA               dex
003669r 2  CA               dex
00366Ar 2  B5 03            lda $03,x
00366Cr 2  85 96            sta TEMP_PAX2
00366Er 2  B5 02            lda $02,x
003670r 2  85 95            sta TEMP_PAX1
003672r 2               
003672r 2               ; src/prelude.fth:3:19 in `swap`
003672r 2               @OPCODE_1653:   ; [c64_ir] AltPop
003672r 2  E8               inx
003673r 2  E8               inx
003674r 2  68               pla
003675r 2  95 00            sta $00,x
003677r 2  68               pla
003678r 2  95 01            sta $01,x
00367Ar 2               
00367Ar 2               ; src/prelude.fth:3:22 in `swap`
00367Ar 2               @OPCODE_1654:   ; [c64_ir] TempLoad
00367Ar 2  E8               inx
00367Br 2  E8               inx
00367Cr 2  A5 95            lda TEMP_PAX1
00367Er 2  95 00            sta $00,x
003680r 2  A5 96            lda TEMP_PAX2
003682r 2  95 01            sta $01,x
003684r 2               
003684r 2               ; <inline>:0:0 in `main`
003684r 2               @OPCODE_1655:   ; [c64_ir] PushLiteral(7777)
003684r 2  E8               inx
003685r 2  E8               inx
003686r 2  A9 61            lda #97
003688r 2  95 00            sta $00,x
00368Ar 2  A9 1E            lda #30
00368Cr 2  95 01            sta $01,x
00368Er 2               
00368Er 2               ; <inline>:0:0 in `main`
00368Er 2               @OPCODE_1656:   ; [c64_ir] AltPush
00368Er 2  CA               dex
00368Fr 2  CA               dex
003690r 2  B5 03            lda $03,x
003692r 2  48               pha
003693r 2  B5 02            lda $02,x
003695r 2  48               pha
003696r 2               
003696r 2               ; <inline>:0:0 in `main`
003696r 2               @OPCODE_1657:   ; [c64_ir] PushLiteral(7777)
003696r 2  E8               inx
003697r 2  E8               inx
003698r 2  A9 61            lda #97
00369Ar 2  95 00            sta $00,x
00369Cr 2  A9 1E            lda #30
00369Er 2  95 01            sta $01,x
0036A0r 2               
0036A0r 2               ; <inline>:0:0 in `main`
0036A0r 2               @OPCODE_1658:   ; [c64_ir] AltPush
0036A0r 2  CA               dex
0036A1r 2  CA               dex
0036A2r 2  B5 03            lda $03,x
0036A4r 2  48               pha
0036A5r 2  B5 02            lda $02,x
0036A7r 2  48               pha
0036A8r 2               
0036A8r 2               ; <inline>:0:0 in `main`
0036A8r 2               @OPCODE_1659:   ; [c64_ir] PushLiteral(7777)
0036A8r 2  E8               inx
0036A9r 2  E8               inx
0036AAr 2  A9 61            lda #97
0036ACr 2  95 00            sta $00,x
0036AEr 2  A9 1E            lda #30
0036B0r 2  95 01            sta $01,x
0036B2r 2               
0036B2r 2               ; <inline>:0:0 in `main`
0036B2r 2               @OPCODE_1660:   ; [c64_ir] AltPush
0036B2r 2  CA               dex
0036B3r 2  CA               dex
0036B4r 2  B5 03            lda $03,x
0036B6r 2  48               pha
0036B7r 2  B5 02            lda $02,x
0036B9r 2  48               pha
0036BAr 2               
0036BAr 2               ; src/prelude.fth:44:8 in `*`
0036BAr 2               @OPCODE_1661:   ; [c64_ir] PushLiteral(0)
0036BAr 2  E8               inx
0036BBr 2  E8               inx
0036BCr 2  A9 00            lda #0
0036BEr 2  95 00            sta $00,x
0036C0r 2  A9 00            lda #0
0036C2r 2  95 01            sta $01,x
0036C4r 2               
0036C4r 2               ; src/prelude.fth:44:10 in `*`
0036C4r 2               @OPCODE_1662:   ; [c64_ir] PushLiteral(40)
0036C4r 2  E8               inx
0036C5r 2  E8               inx
0036C6r 2  A9 28            lda #40
0036C8r 2  95 00            sta $00,x
0036CAr 2  A9 00            lda #0
0036CCr 2  95 01            sta $01,x
0036CEr 2               
0036CEr 2               ; src/prelude.fth:44:13 in `*`
0036CEr 2               @OPCODE_1663:   ; [c64_ir] PushLiteral(0)
0036CEr 2  E8               inx
0036CFr 2  E8               inx
0036D0r 2  A9 00            lda #0
0036D2r 2  95 00            sta $00,x
0036D4r 2  A9 00            lda #0
0036D6r 2  95 01            sta $01,x
0036D8r 2               
0036D8r 2               ; src/prelude.fth:44:15 in `*`
0036D8r 2               @OPCODE_1664:   ; [c64_ir] AltPush
0036D8r 2  CA               dex
0036D9r 2  CA               dex
0036DAr 2  B5 03            lda $03,x
0036DCr 2  48               pha
0036DDr 2  B5 02            lda $02,x
0036DFr 2  48               pha
0036E0r 2               
0036E0r 2               ; src/prelude.fth:44:15 in `*`
0036E0r 2               @OPCODE_1665:   ; [c64_ir] AltPush
0036E0r 2  CA               dex
0036E1r 2  CA               dex
0036E2r 2  B5 03            lda $03,x
0036E4r 2  48               pha
0036E5r 2  B5 02            lda $02,x
0036E7r 2  48               pha
0036E8r 2               
0036E8r 2               ; src/prelude.fth:44:15 in `*`
0036E8r 2               @OPCODE_1666:   ; [c64_ir] LoopTarget(160)
0036E8r 2               
0036E8r 2               @target_161:
0036E8r 2               
0036E8r 2               ; src/prelude.fth:4:10 in `over`
0036E8r 2               @OPCODE_1668:   ; [c64_ir] AltPush
0036E8r 2  CA               dex
0036E9r 2  CA               dex
0036EAr 2  B5 03            lda $03,x
0036ECr 2  48               pha
0036EDr 2  B5 02            lda $02,x
0036EFr 2  48               pha
0036F0r 2               
0036F0r 2               ; src/prelude.fth:4:13 in `over`
0036F0r 2               @OPCODE_1669:   ; [c64_ir] TempStore
0036F0r 2  CA               dex
0036F1r 2  CA               dex
0036F2r 2  B5 03            lda $03,x
0036F4r 2  85 96            sta TEMP_PAX2
0036F6r 2  B5 02            lda $02,x
0036F8r 2  85 95            sta TEMP_PAX1
0036FAr 2               
0036FAr 2               ; src/prelude.fth:4:19 in `over`
0036FAr 2               @OPCODE_1670:   ; [c64_ir] TempLoad
0036FAr 2  E8               inx
0036FBr 2  E8               inx
0036FCr 2  A5 95            lda TEMP_PAX1
0036FEr 2  95 00            sta $00,x
003700r 2  A5 96            lda TEMP_PAX2
003702r 2  95 01            sta $01,x
003704r 2               
003704r 2               ; src/prelude.fth:4:25 in `over`
003704r 2               @OPCODE_1671:   ; [c64_ir] AltPop
003704r 2  E8               inx
003705r 2  E8               inx
003706r 2  68               pla
003707r 2  95 00            sta $00,x
003709r 2  68               pla
00370Ar 2  95 01            sta $01,x
00370Cr 2               
00370Cr 2               ; src/prelude.fth:4:28 in `over`
00370Cr 2               @OPCODE_1672:   ; [c64_ir] TempLoad
00370Cr 2  E8               inx
00370Dr 2  E8               inx
00370Er 2  A5 95            lda TEMP_PAX1
003710r 2  95 00            sta $00,x
003712r 2  A5 96            lda TEMP_PAX2
003714r 2  95 01            sta $01,x
003716r 2               
003716r 2               ; src/prelude.fth:44:23 in `*`
003716r 2               @OPCODE_1673:   ; [c64_ir] Add
003716r 2                   ; 21
003716r 2  CA               dex
003717r 2  CA               dex
003718r 2  18               clc
003719r 2  B5 00            lda $00,x
00371Br 2  75 02            adc $02,x
00371Dr 2  95 00            sta $00,x
00371Fr 2  B5 01            lda $01,x
003721r 2  75 03            adc $03,x
003723r 2  95 01            sta $01,x
003725r 2               
003725r 2               ; src/prelude.fth:33:15 in `loopimpl`
003725r 2               @OPCODE_1674:   ; [c64_ir] AltPop
003725r 2  E8               inx
003726r 2  E8               inx
003727r 2  68               pla
003728r 2  95 00            sta $00,x
00372Ar 2  68               pla
00372Br 2  95 01            sta $01,x
00372Dr 2               
00372Dr 2               ; src/prelude.fth:33:18 in `loopimpl`
00372Dr 2               @OPCODE_1675:   ; [c64_ir] AltPop
00372Dr 2  E8               inx
00372Er 2  E8               inx
00372Fr 2  68               pla
003730r 2  95 00            sta $00,x
003732r 2  68               pla
003733r 2  95 01            sta $01,x
003735r 2               
003735r 2               ; src/prelude.fth:18:8 in `1+`
003735r 2               @OPCODE_1676:   ; [c64_ir] PushLiteral(1)
003735r 2  E8               inx
003736r 2  E8               inx
003737r 2  A9 01            lda #1
003739r 2  95 00            sta $00,x
00373Br 2  A9 00            lda #0
00373Dr 2  95 01            sta $01,x
00373Fr 2               
00373Fr 2               ; src/prelude.fth:18:10 in `1+`
00373Fr 2               @OPCODE_1677:   ; [c64_ir] Add
00373Fr 2                   ; 21
00373Fr 2  CA               dex
003740r 2  CA               dex
003741r 2  18               clc
003742r 2  B5 00            lda $00,x
003744r 2  75 02            adc $02,x
003746r 2  95 00            sta $00,x
003748r 2  B5 01            lda $01,x
00374Ar 2  75 03            adc $03,x
00374Cr 2  95 01            sta $01,x
00374Er 2               
00374Er 2               ; src/prelude.fth:4:10 in `over`
00374Er 2               @OPCODE_1678:   ; [c64_ir] AltPush
00374Er 2  CA               dex
00374Fr 2  CA               dex
003750r 2  B5 03            lda $03,x
003752r 2  48               pha
003753r 2  B5 02            lda $02,x
003755r 2  48               pha
003756r 2               
003756r 2               ; src/prelude.fth:4:13 in `over`
003756r 2               @OPCODE_1679:   ; [c64_ir] TempStore
003756r 2  CA               dex
003757r 2  CA               dex
003758r 2  B5 03            lda $03,x
00375Ar 2  85 96            sta TEMP_PAX2
00375Cr 2  B5 02            lda $02,x
00375Er 2  85 95            sta TEMP_PAX1
003760r 2               
003760r 2               ; src/prelude.fth:4:19 in `over`
003760r 2               @OPCODE_1680:   ; [c64_ir] TempLoad
003760r 2  E8               inx
003761r 2  E8               inx
003762r 2  A5 95            lda TEMP_PAX1
003764r 2  95 00            sta $00,x
003766r 2  A5 96            lda TEMP_PAX2
003768r 2  95 01            sta $01,x
00376Ar 2               
00376Ar 2               ; src/prelude.fth:4:25 in `over`
00376Ar 2               @OPCODE_1681:   ; [c64_ir] AltPop
00376Ar 2  E8               inx
00376Br 2  E8               inx
00376Cr 2  68               pla
00376Dr 2  95 00            sta $00,x
00376Fr 2  68               pla
003770r 2  95 01            sta $01,x
003772r 2               
003772r 2               ; src/prelude.fth:4:28 in `over`
003772r 2               @OPCODE_1682:   ; [c64_ir] TempLoad
003772r 2  E8               inx
003773r 2  E8               inx
003774r 2  A5 95            lda TEMP_PAX1
003776r 2  95 00            sta $00,x
003778r 2  A5 96            lda TEMP_PAX2
00377Ar 2  95 01            sta $01,x
00377Cr 2               
00377Cr 2               ; src/prelude.fth:4:10 in `over`
00377Cr 2               @OPCODE_1683:   ; [c64_ir] AltPush
00377Cr 2  CA               dex
00377Dr 2  CA               dex
00377Er 2  B5 03            lda $03,x
003780r 2  48               pha
003781r 2  B5 02            lda $02,x
003783r 2  48               pha
003784r 2               
003784r 2               ; src/prelude.fth:4:13 in `over`
003784r 2               @OPCODE_1684:   ; [c64_ir] TempStore
003784r 2  CA               dex
003785r 2  CA               dex
003786r 2  B5 03            lda $03,x
003788r 2  85 96            sta TEMP_PAX2
00378Ar 2  B5 02            lda $02,x
00378Cr 2  85 95            sta TEMP_PAX1
00378Er 2               
00378Er 2               ; src/prelude.fth:4:19 in `over`
00378Er 2               @OPCODE_1685:   ; [c64_ir] TempLoad
00378Er 2  E8               inx
00378Fr 2  E8               inx
003790r 2  A5 95            lda TEMP_PAX1
003792r 2  95 00            sta $00,x
003794r 2  A5 96            lda TEMP_PAX2
003796r 2  95 01            sta $01,x
003798r 2               
003798r 2               ; src/prelude.fth:4:25 in `over`
003798r 2               @OPCODE_1686:   ; [c64_ir] AltPop
003798r 2  E8               inx
003799r 2  E8               inx
00379Ar 2  68               pla
00379Br 2  95 00            sta $00,x
00379Dr 2  68               pla
00379Er 2  95 01            sta $01,x
0037A0r 2               
0037A0r 2               ; src/prelude.fth:4:28 in `over`
0037A0r 2               @OPCODE_1687:   ; [c64_ir] TempLoad
0037A0r 2  E8               inx
0037A1r 2  E8               inx
0037A2r 2  A5 95            lda TEMP_PAX1
0037A4r 2  95 00            sta $00,x
0037A6r 2  A5 96            lda TEMP_PAX2
0037A8r 2  95 01            sta $01,x
0037AAr 2               
0037AAr 2               ; src/prelude.fth:33:29 in `loopimpl`
0037AAr 2               @OPCODE_1688:   ; [c64_ir] AltPush
0037AAr 2  CA               dex
0037ABr 2  CA               dex
0037ACr 2  B5 03            lda $03,x
0037AEr 2  48               pha
0037AFr 2  B5 02            lda $02,x
0037B1r 2  48               pha
0037B2r 2               
0037B2r 2               ; src/prelude.fth:33:32 in `loopimpl`
0037B2r 2               @OPCODE_1689:   ; [c64_ir] AltPush
0037B2r 2  CA               dex
0037B3r 2  CA               dex
0037B4r 2  B5 03            lda $03,x
0037B6r 2  48               pha
0037B7r 2  B5 02            lda $02,x
0037B9r 2  48               pha
0037BAr 2               
0037BAr 2               ; src/prelude.fth:14:12 in `invert`
0037BAr 2               @OPCODE_1690:   ; [c64_ir] PushLiteral(-1)
0037BAr 2  E8               inx
0037BBr 2  E8               inx
0037BCr 2  A9 FF            lda #255
0037BEr 2  95 00            sta $00,x
0037C0r 2  A9 FF            lda #255
0037C2r 2  95 01            sta $01,x
0037C4r 2               
0037C4r 2               ; src/prelude.fth:14:15 in `invert`
0037C4r 2               @OPCODE_1691:   ; [c64_ir] Nand
0037C4r 2                   ; 26
0037C4r 2  CA               dex
0037C5r 2  CA               dex
0037C6r 2  B5 00            lda $00,x
0037C8r 2  35 02            and $02,x
0037CAr 2  49 FF            eor #$ff
0037CCr 2  95 00            sta $00,x
0037CEr 2  B5 01            lda $01,x
0037D0r 2  35 03            and $03,x
0037D2r 2  49 FF            eor #$ff
0037D4r 2  95 01            sta $01,x
0037D6r 2               
0037D6r 2               ; src/prelude.fth:15:19 in `negate`
0037D6r 2               @OPCODE_1692:   ; [c64_ir] PushLiteral(1)
0037D6r 2  E8               inx
0037D7r 2  E8               inx
0037D8r 2  A9 01            lda #1
0037DAr 2  95 00            sta $00,x
0037DCr 2  A9 00            lda #0
0037DEr 2  95 01            sta $01,x
0037E0r 2               
0037E0r 2               ; src/prelude.fth:15:21 in `negate`
0037E0r 2               @OPCODE_1693:   ; [c64_ir] Add
0037E0r 2                   ; 21
0037E0r 2  CA               dex
0037E1r 2  CA               dex
0037E2r 2  18               clc
0037E3r 2  B5 00            lda $00,x
0037E5r 2  75 02            adc $02,x
0037E7r 2  95 00            sta $00,x
0037E9r 2  B5 01            lda $01,x
0037EBr 2  75 03            adc $03,x
0037EDr 2  95 01            sta $01,x
0037EFr 2               
0037EFr 2               ; src/prelude.fth:16:19 in `-`
0037EFr 2               @OPCODE_1694:   ; [c64_ir] Add
0037EFr 2                   ; 21
0037EFr 2  CA               dex
0037F0r 2  CA               dex
0037F1r 2  18               clc
0037F2r 2  B5 00            lda $00,x
0037F4r 2  75 02            adc $02,x
0037F6r 2  95 00            sta $00,x
0037F8r 2  B5 01            lda $01,x
0037FAr 2  75 03            adc $03,x
0037FCr 2  95 01            sta $01,x
0037FEr 2               
0037FEr 2               ; src/prelude.fth:21:8 in `0=`
0037FEr 2               @OPCODE_1695:   ; [c64_ir] JumpIf0(163)
0037FEr 2  CA               dex
0037FFr 2  CA               dex
003800r 2  B5 02            lda $02,x
003802r 2  15 03            ora $03,x
003804r 2  D0 03            bne *+5
003806r 2  4C rr rr         jmp @target_163
003809r 2               
003809r 2               @target_162:
003809r 2               
003809r 2               ; src/prelude.fth:21:11 in `0=`
003809r 2               @OPCODE_1697:   ; [c64_ir] PushLiteral(0)
003809r 2  E8               inx
00380Ar 2  E8               inx
00380Br 2  A9 00            lda #0
00380Dr 2  95 00            sta $00,x
00380Fr 2  A9 00            lda #0
003811r 2  95 01            sta $01,x
003813r 2               
003813r 2               ; src/prelude.fth:21:13 in `0=`
003813r 2               @OPCODE_1698:   ; [c64_ir] JumpElse(164)
003813r 2  4C rr rr         jmp @target_164
003816r 2               
003816r 2               @target_163:
003816r 2               
003816r 2               ; src/prelude.fth:21:18 in `0=`
003816r 2               @OPCODE_1700:   ; [c64_ir] PushLiteral(-1)
003816r 2  E8               inx
003817r 2  E8               inx
003818r 2  A9 FF            lda #255
00381Ar 2  95 00            sta $00,x
00381Cr 2  A9 FF            lda #255
00381Er 2  95 01            sta $01,x
003820r 2               
003820r 2               ; src/prelude.fth:21:21 in `0=`
003820r 2               @OPCODE_1701:   ; [c64_ir] JumpTarget(163)
003820r 2               
003820r 2               @target_164:
003820r 2               
003820r 2               ; src/prelude.fth:3:10 in `swap`
003820r 2               @OPCODE_1703:   ; [c64_ir] AltPush
003820r 2  CA               dex
003821r 2  CA               dex
003822r 2  B5 03            lda $03,x
003824r 2  48               pha
003825r 2  B5 02            lda $02,x
003827r 2  48               pha
003828r 2               
003828r 2               ; src/prelude.fth:3:19 in `swap`
003828r 2               @OPCODE_1704:   ; [c64_ir] AltPop
003828r 2  E8               inx
003829r 2  E8               inx
00382Ar 2  68               pla
00382Br 2  95 00            sta $00,x
00382Dr 2  68               pla
00382Er 2  95 01            sta $01,x
003830r 2               
003830r 2               ; src/prelude.fth:44:25 in `*`
003830r 2               @OPCODE_1705:   ; [c64_ir] LoopIf0(161)
003830r 2  CA               dex
003831r 2  CA               dex
003832r 2  B5 02            lda $02,x
003834r 2  15 03            ora $03,x
003836r 2  D0 03            bne *+5
003838r 2  4C rr rr         jmp @target_161
00383Br 2               
00383Br 2               @target_165:
00383Br 2               
00383Br 2               ; src/prelude.fth:44:25 in `*`
00383Br 2               @OPCODE_1707:   ; [c64_ir] AltPop
00383Br 2  E8               inx
00383Cr 2  E8               inx
00383Dr 2  68               pla
00383Er 2  95 00            sta $00,x
003840r 2  68               pla
003841r 2  95 01            sta $01,x
003843r 2               
003843r 2               ; src/prelude.fth:44:25 in `*`
003843r 2               @OPCODE_1708:   ; [c64_ir] Drop
003843r 2  CA               dex
003844r 2  CA               dex
003845r 2               
003845r 2               ; src/prelude.fth:44:25 in `*`
003845r 2               @OPCODE_1709:   ; [c64_ir] AltPop
003845r 2  E8               inx
003846r 2  E8               inx
003847r 2  68               pla
003848r 2  95 00            sta $00,x
00384Ar 2  68               pla
00384Br 2  95 01            sta $01,x
00384Dr 2               
00384Dr 2               ; src/prelude.fth:44:25 in `*`
00384Dr 2               @OPCODE_1710:   ; [c64_ir] Drop
00384Dr 2  CA               dex
00384Er 2  CA               dex
00384Fr 2               
00384Fr 2               ; src/prelude.fth:3:10 in `swap`
00384Fr 2               @OPCODE_1711:   ; [c64_ir] AltPush
00384Fr 2  CA               dex
003850r 2  CA               dex
003851r 2  B5 03            lda $03,x
003853r 2  48               pha
003854r 2  B5 02            lda $02,x
003856r 2  48               pha
003857r 2               
003857r 2               ; src/prelude.fth:3:13 in `swap`
003857r 2               @OPCODE_1712:   ; [c64_ir] TempStore
003857r 2  CA               dex
003858r 2  CA               dex
003859r 2  B5 03            lda $03,x
00385Br 2  85 96            sta TEMP_PAX2
00385Dr 2  B5 02            lda $02,x
00385Fr 2  85 95            sta TEMP_PAX1
003861r 2               
003861r 2               ; src/prelude.fth:3:19 in `swap`
003861r 2               @OPCODE_1713:   ; [c64_ir] AltPop
003861r 2  E8               inx
003862r 2  E8               inx
003863r 2  68               pla
003864r 2  95 00            sta $00,x
003866r 2  68               pla
003867r 2  95 01            sta $01,x
003869r 2               
003869r 2               ; <inline>:0:0 in `main`
003869r 2               @OPCODE_1714:   ; [c64_ir] AltPop
003869r 2  E8               inx
00386Ar 2  E8               inx
00386Br 2  68               pla
00386Cr 2  95 00            sta $00,x
00386Er 2  68               pla
00386Fr 2  95 01            sta $01,x
003871r 2               
003871r 2               ; <inline>:0:0 in `main`
003871r 2               @OPCODE_1715:   ; [c64_ir] Drop
003871r 2  CA               dex
003872r 2  CA               dex
003873r 2               
003873r 2               ; snake.pax:48:39 in `convert-x-y`
003873r 2               @OPCODE_1716:   ; [c64_ir] Add
003873r 2                   ; 21
003873r 2  CA               dex
003874r 2  CA               dex
003875r 2  18               clc
003876r 2  B5 00            lda $00,x
003878r 2  75 02            adc $02,x
00387Ar 2  95 00            sta $00,x
00387Cr 2  B5 01            lda $01,x
00387Er 2  75 03            adc $03,x
003880r 2  95 01            sta $01,x
003882r 2               
003882r 2               ; <inline>:0:0 in `main`
003882r 2               @OPCODE_1717:   ; [c64_ir] AltPop
003882r 2  E8               inx
003883r 2  E8               inx
003884r 2  68               pla
003885r 2  95 00            sta $00,x
003887r 2  68               pla
003888r 2  95 01            sta $01,x
00388Ar 2               
00388Ar 2               ; <inline>:0:0 in `main`
00388Ar 2               @OPCODE_1718:   ; [c64_ir] Drop
00388Ar 2  CA               dex
00388Br 2  CA               dex
00388Cr 2               
00388Cr 2               ; snake.pax:49:34 in `draw-index`
00388Cr 2               @OPCODE_1719:   ; [c64_ir] PushLiteral(1024)
00388Cr 2  E8               inx
00388Dr 2  E8               inx
00388Er 2  A9 00            lda #0
003890r 2  95 00            sta $00,x
003892r 2  A9 04            lda #4
003894r 2  95 01            sta $01,x
003896r 2               
003896r 2               ; snake.pax:49:43 in `draw-index`
003896r 2               @OPCODE_1720:   ; [c64_ir] Add
003896r 2                   ; 21
003896r 2  CA               dex
003897r 2  CA               dex
003898r 2  18               clc
003899r 2  B5 00            lda $00,x
00389Br 2  75 02            adc $02,x
00389Dr 2  95 00            sta $00,x
00389Fr 2  B5 01            lda $01,x
0038A1r 2  75 03            adc $03,x
0038A3r 2  95 01            sta $01,x
0038A5r 2               
0038A5r 2               ; snake.pax:49:45 in `draw-index`
0038A5r 2               @OPCODE_1721:   ; [c64_ir] Store8
0038A5r 2  CA               dex
0038A6r 2  CA               dex
0038A7r 2  CA               dex
0038A8r 2  CA               dex
0038A9r 2  B5 02            lda $02,x
0038ABr 2  81 04            sta ($04,x)
0038ADr 2                   ; TODO high byte
0038ADr 2               
0038ADr 2               ; <inline>:0:0 in `main`
0038ADr 2               @OPCODE_1722:   ; [c64_ir] AltPop
0038ADr 2  E8               inx
0038AEr 2  E8               inx
0038AFr 2  68               pla
0038B0r 2  95 00            sta $00,x
0038B2r 2  68               pla
0038B3r 2  95 01            sta $01,x
0038B5r 2               
0038B5r 2               ; <inline>:0:0 in `main`
0038B5r 2               @OPCODE_1723:   ; [c64_ir] Drop
0038B5r 2  CA               dex
0038B6r 2  CA               dex
0038B7r 2               
0038B7r 2               ; <inline>:0:0 in `main`
0038B7r 2               @OPCODE_1724:   ; [c64_ir] AltPop
0038B7r 2  E8               inx
0038B8r 2  E8               inx
0038B9r 2  68               pla
0038BAr 2  95 00            sta $00,x
0038BCr 2  68               pla
0038BDr 2  95 01            sta $01,x
0038BFr 2               
0038BFr 2               ; <inline>:0:0 in `main`
0038BFr 2               @OPCODE_1725:   ; [c64_ir] Drop
0038BFr 2  CA               dex
0038C0r 2  CA               dex
0038C1r 2               
0038C1r 2               ; <inline>:0:0 in `main`
0038C1r 2               @OPCODE_1726:   ; [c64_ir] PushLiteral(7777)
0038C1r 2  E8               inx
0038C2r 2  E8               inx
0038C3r 2  A9 61            lda #97
0038C5r 2  95 00            sta $00,x
0038C7r 2  A9 1E            lda #30
0038C9r 2  95 01            sta $01,x
0038CBr 2               
0038CBr 2               ; <inline>:0:0 in `main`
0038CBr 2               @OPCODE_1727:   ; [c64_ir] AltPush
0038CBr 2  CA               dex
0038CCr 2  CA               dex
0038CDr 2  B5 03            lda $03,x
0038CFr 2  48               pha
0038D0r 2  B5 02            lda $02,x
0038D2r 2  48               pha
0038D3r 2               
0038D3r 2               ; snake.pax:165:3 in `random-x-position`
0038D3r 2               @OPCODE_1728:   ; [c64_ir] PushLiteral(40)
0038D3r 2  E8               inx
0038D4r 2  E8               inx
0038D5r 2  A9 28            lda #40
0038D7r 2  95 00            sta $00,x
0038D9r 2  A9 00            lda #0
0038DBr 2  95 01            sta $01,x
0038DDr 2               
0038DDr 2               ; snake.pax:165:9 in `random-x-position`
0038DDr 2               @OPCODE_1729:   ; [c64_ir] PushLiteral(4)
0038DDr 2  E8               inx
0038DEr 2  E8               inx
0038DFr 2  A9 04            lda #4
0038E1r 2  95 00            sta $00,x
0038E3r 2  A9 00            lda #0
0038E5r 2  95 01            sta $01,x
0038E7r 2               
0038E7r 2               ; src/prelude.fth:14:12 in `invert`
0038E7r 2               @OPCODE_1730:   ; [c64_ir] PushLiteral(-1)
0038E7r 2  E8               inx
0038E8r 2  E8               inx
0038E9r 2  A9 FF            lda #255
0038EBr 2  95 00            sta $00,x
0038EDr 2  A9 FF            lda #255
0038EFr 2  95 01            sta $01,x
0038F1r 2               
0038F1r 2               ; src/prelude.fth:14:15 in `invert`
0038F1r 2               @OPCODE_1731:   ; [c64_ir] Nand
0038F1r 2                   ; 26
0038F1r 2  CA               dex
0038F2r 2  CA               dex
0038F3r 2  B5 00            lda $00,x
0038F5r 2  35 02            and $02,x
0038F7r 2  49 FF            eor #$ff
0038F9r 2  95 00            sta $00,x
0038FBr 2  B5 01            lda $01,x
0038FDr 2  35 03            and $03,x
0038FFr 2  49 FF            eor #$ff
003901r 2  95 01            sta $01,x
003903r 2               
003903r 2               ; src/prelude.fth:15:19 in `negate`
003903r 2               @OPCODE_1732:   ; [c64_ir] PushLiteral(1)
003903r 2  E8               inx
003904r 2  E8               inx
003905r 2  A9 01            lda #1
003907r 2  95 00            sta $00,x
003909r 2  A9 00            lda #0
00390Br 2  95 01            sta $01,x
00390Dr 2               
00390Dr 2               ; src/prelude.fth:15:21 in `negate`
00390Dr 2               @OPCODE_1733:   ; [c64_ir] Add
00390Dr 2                   ; 21
00390Dr 2  CA               dex
00390Er 2  CA               dex
00390Fr 2  18               clc
003910r 2  B5 00            lda $00,x
003912r 2  75 02            adc $02,x
003914r 2  95 00            sta $00,x
003916r 2  B5 01            lda $01,x
003918r 2  75 03            adc $03,x
00391Ar 2  95 01            sta $01,x
00391Cr 2               
00391Cr 2               ; src/prelude.fth:16:19 in `-`
00391Cr 2               @OPCODE_1734:   ; [c64_ir] Add
00391Cr 2                   ; 21
00391Cr 2  CA               dex
00391Dr 2  CA               dex
00391Er 2  18               clc
00391Fr 2  B5 00            lda $00,x
003921r 2  75 02            adc $02,x
003923r 2  95 00            sta $00,x
003925r 2  B5 01            lda $01,x
003927r 2  75 03            adc $03,x
003929r 2  95 01            sta $01,x
00392Br 2               
00392Br 2               ; <inline>:0:0 in `main`
00392Br 2               @OPCODE_1735:   ; [c64_ir] PushLiteral(7777)
00392Br 2  E8               inx
00392Cr 2  E8               inx
00392Dr 2  A9 61            lda #97
00392Fr 2  95 00            sta $00,x
003931r 2  A9 1E            lda #30
003933r 2  95 01            sta $01,x
003935r 2               
003935r 2               ; <inline>:0:0 in `main`
003935r 2               @OPCODE_1736:   ; [c64_ir] AltPush
003935r 2  CA               dex
003936r 2  CA               dex
003937r 2  B5 03            lda $03,x
003939r 2  48               pha
00393Ar 2  B5 02            lda $02,x
00393Cr 2  48               pha
00393Dr 2               
00393Dr 2               ; snake.pax:8:10 in `random`
00393Dr 2               @OPCODE_1737:   ; [c64_ir] PushLiteral(127)
00393Dr 2  E8               inx
00393Er 2  E8               inx
00393Fr 2  A9 7F            lda #127
003941r 2  95 00            sta $00,x
003943r 2  A9 00            lda #0
003945r 2  95 01            sta $01,x
003947r 2               
003947r 2               ; snake.pax:8:26 in `random`
003947r 2               @OPCODE_1738:   ; [c64_ir] Load
003947r 2  A1 00            lda ($00,x)
003949r 2  95 00            sta $00,x
00394Br 2  A9 00            lda #0
00394Dr 2  95 01            sta $01,x
00394Fr 2               
00394Fr 2               ; snake.pax:8:28 in `random`
00394Fr 2               @OPCODE_1739:   ; [c64_ir] PushLiteral(255)
00394Fr 2  E8               inx
003950r 2  E8               inx
003951r 2  A9 FF            lda #255
003953r 2  95 00            sta $00,x
003955r 2  A9 00            lda #0
003957r 2  95 01            sta $01,x
003959r 2               
003959r 2               ; src/prelude.fth:28:9 in `and`
003959r 2               @OPCODE_1740:   ; [c64_ir] Nand
003959r 2                   ; 26
003959r 2  CA               dex
00395Ar 2  CA               dex
00395Br 2  B5 00            lda $00,x
00395Dr 2  35 02            and $02,x
00395Fr 2  49 FF            eor #$ff
003961r 2  95 00            sta $00,x
003963r 2  B5 01            lda $01,x
003965r 2  35 03            and $03,x
003967r 2  49 FF            eor #$ff
003969r 2  95 01            sta $01,x
00396Br 2               
00396Br 2               ; src/prelude.fth:14:12 in `invert`
00396Br 2               @OPCODE_1741:   ; [c64_ir] PushLiteral(-1)
00396Br 2  E8               inx
00396Cr 2  E8               inx
00396Dr 2  A9 FF            lda #255
00396Fr 2  95 00            sta $00,x
003971r 2  A9 FF            lda #255
003973r 2  95 01            sta $01,x
003975r 2               
003975r 2               ; src/prelude.fth:14:15 in `invert`
003975r 2               @OPCODE_1742:   ; [c64_ir] Nand
003975r 2                   ; 26
003975r 2  CA               dex
003976r 2  CA               dex
003977r 2  B5 00            lda $00,x
003979r 2  35 02            and $02,x
00397Br 2  49 FF            eor #$ff
00397Dr 2  95 00            sta $00,x
00397Fr 2  B5 01            lda $01,x
003981r 2  35 03            and $03,x
003983r 2  49 FF            eor #$ff
003985r 2  95 01            sta $01,x
003987r 2               
003987r 2               ; src/prelude.fth:3:10 in `swap`
003987r 2               @OPCODE_1743:   ; [c64_ir] AltPush
003987r 2  CA               dex
003988r 2  CA               dex
003989r 2  B5 03            lda $03,x
00398Br 2  48               pha
00398Cr 2  B5 02            lda $02,x
00398Er 2  48               pha
00398Fr 2               
00398Fr 2               ; src/prelude.fth:3:13 in `swap`
00398Fr 2               @OPCODE_1744:   ; [c64_ir] TempStore
00398Fr 2  CA               dex
003990r 2  CA               dex
003991r 2  B5 03            lda $03,x
003993r 2  85 96            sta TEMP_PAX2
003995r 2  B5 02            lda $02,x
003997r 2  85 95            sta TEMP_PAX1
003999r 2               
003999r 2               ; src/prelude.fth:3:19 in `swap`
003999r 2               @OPCODE_1745:   ; [c64_ir] AltPop
003999r 2  E8               inx
00399Ar 2  E8               inx
00399Br 2  68               pla
00399Cr 2  95 00            sta $00,x
00399Er 2  68               pla
00399Fr 2  95 01            sta $01,x
0039A1r 2               
0039A1r 2               ; src/prelude.fth:3:22 in `swap`
0039A1r 2               @OPCODE_1746:   ; [c64_ir] TempLoad
0039A1r 2  E8               inx
0039A2r 2  E8               inx
0039A3r 2  A5 95            lda TEMP_PAX1
0039A5r 2  95 00            sta $00,x
0039A7r 2  A5 96            lda TEMP_PAX2
0039A9r 2  95 01            sta $01,x
0039ABr 2               
0039ABr 2               ; <inline>:0:0 in `main`
0039ABr 2               @OPCODE_1747:   ; [c64_ir] PushLiteral(7777)
0039ABr 2  E8               inx
0039ACr 2  E8               inx
0039ADr 2  A9 61            lda #97
0039AFr 2  95 00            sta $00,x
0039B1r 2  A9 1E            lda #30
0039B3r 2  95 01            sta $01,x
0039B5r 2               
0039B5r 2               ; <inline>:0:0 in `main`
0039B5r 2               @OPCODE_1748:   ; [c64_ir] AltPush
0039B5r 2  CA               dex
0039B6r 2  CA               dex
0039B7r 2  B5 03            lda $03,x
0039B9r 2  48               pha
0039BAr 2  B5 02            lda $02,x
0039BCr 2  48               pha
0039BDr 2               
0039BDr 2               ; src/prelude.fth:48:34 in `%`
0039BDr 2               @OPCODE_1749:   ; [c64_ir] LoopTarget(165)
0039BDr 2               
0039BDr 2               @target_166:
0039BDr 2               
0039BDr 2               ; src/prelude.fth:4:10 in `over`
0039BDr 2               @OPCODE_1751:   ; [c64_ir] AltPush
0039BDr 2  CA               dex
0039BEr 2  CA               dex
0039BFr 2  B5 03            lda $03,x
0039C1r 2  48               pha
0039C2r 2  B5 02            lda $02,x
0039C4r 2  48               pha
0039C5r 2               
0039C5r 2               ; src/prelude.fth:4:13 in `over`
0039C5r 2               @OPCODE_1752:   ; [c64_ir] TempStore
0039C5r 2  CA               dex
0039C6r 2  CA               dex
0039C7r 2  B5 03            lda $03,x
0039C9r 2  85 96            sta TEMP_PAX2
0039CBr 2  B5 02            lda $02,x
0039CDr 2  85 95            sta TEMP_PAX1
0039CFr 2               
0039CFr 2               ; src/prelude.fth:4:19 in `over`
0039CFr 2               @OPCODE_1753:   ; [c64_ir] TempLoad
0039CFr 2  E8               inx
0039D0r 2  E8               inx
0039D1r 2  A5 95            lda TEMP_PAX1
0039D3r 2  95 00            sta $00,x
0039D5r 2  A5 96            lda TEMP_PAX2
0039D7r 2  95 01            sta $01,x
0039D9r 2               
0039D9r 2               ; src/prelude.fth:4:25 in `over`
0039D9r 2               @OPCODE_1754:   ; [c64_ir] AltPop
0039D9r 2  E8               inx
0039DAr 2  E8               inx
0039DBr 2  68               pla
0039DCr 2  95 00            sta $00,x
0039DEr 2  68               pla
0039DFr 2  95 01            sta $01,x
0039E1r 2               
0039E1r 2               ; src/prelude.fth:4:28 in `over`
0039E1r 2               @OPCODE_1755:   ; [c64_ir] TempLoad
0039E1r 2  E8               inx
0039E2r 2  E8               inx
0039E3r 2  A5 95            lda TEMP_PAX1
0039E5r 2  95 00            sta $00,x
0039E7r 2  A5 96            lda TEMP_PAX2
0039E9r 2  95 01            sta $01,x
0039EBr 2               
0039EBr 2               ; src/prelude.fth:4:10 in `over`
0039EBr 2               @OPCODE_1756:   ; [c64_ir] AltPush
0039EBr 2  CA               dex
0039ECr 2  CA               dex
0039EDr 2  B5 03            lda $03,x
0039EFr 2  48               pha
0039F0r 2  B5 02            lda $02,x
0039F2r 2  48               pha
0039F3r 2               
0039F3r 2               ; src/prelude.fth:4:13 in `over`
0039F3r 2               @OPCODE_1757:   ; [c64_ir] TempStore
0039F3r 2  CA               dex
0039F4r 2  CA               dex
0039F5r 2  B5 03            lda $03,x
0039F7r 2  85 96            sta TEMP_PAX2
0039F9r 2  B5 02            lda $02,x
0039FBr 2  85 95            sta TEMP_PAX1
0039FDr 2               
0039FDr 2               ; src/prelude.fth:4:19 in `over`
0039FDr 2               @OPCODE_1758:   ; [c64_ir] TempLoad
0039FDr 2  E8               inx
0039FEr 2  E8               inx
0039FFr 2  A5 95            lda TEMP_PAX1
003A01r 2  95 00            sta $00,x
003A03r 2  A5 96            lda TEMP_PAX2
003A05r 2  95 01            sta $01,x
003A07r 2               
003A07r 2               ; src/prelude.fth:4:25 in `over`
003A07r 2               @OPCODE_1759:   ; [c64_ir] AltPop
003A07r 2  E8               inx
003A08r 2  E8               inx
003A09r 2  68               pla
003A0Ar 2  95 00            sta $00,x
003A0Cr 2  68               pla
003A0Dr 2  95 01            sta $01,x
003A0Fr 2               
003A0Fr 2               ; src/prelude.fth:4:28 in `over`
003A0Fr 2               @OPCODE_1760:   ; [c64_ir] TempLoad
003A0Fr 2  E8               inx
003A10r 2  E8               inx
003A11r 2  A5 95            lda TEMP_PAX1
003A13r 2  95 00            sta $00,x
003A15r 2  A5 96            lda TEMP_PAX2
003A17r 2  95 01            sta $01,x
003A19r 2               
003A19r 2               ; src/prelude.fth:14:12 in `invert`
003A19r 2               @OPCODE_1761:   ; [c64_ir] PushLiteral(-1)
003A19r 2  E8               inx
003A1Ar 2  E8               inx
003A1Br 2  A9 FF            lda #255
003A1Dr 2  95 00            sta $00,x
003A1Fr 2  A9 FF            lda #255
003A21r 2  95 01            sta $01,x
003A23r 2               
003A23r 2               ; src/prelude.fth:14:15 in `invert`
003A23r 2               @OPCODE_1762:   ; [c64_ir] Nand
003A23r 2                   ; 26
003A23r 2  CA               dex
003A24r 2  CA               dex
003A25r 2  B5 00            lda $00,x
003A27r 2  35 02            and $02,x
003A29r 2  49 FF            eor #$ff
003A2Br 2  95 00            sta $00,x
003A2Dr 2  B5 01            lda $01,x
003A2Fr 2  35 03            and $03,x
003A31r 2  49 FF            eor #$ff
003A33r 2  95 01            sta $01,x
003A35r 2               
003A35r 2               ; src/prelude.fth:15:19 in `negate`
003A35r 2               @OPCODE_1763:   ; [c64_ir] PushLiteral(1)
003A35r 2  E8               inx
003A36r 2  E8               inx
003A37r 2  A9 01            lda #1
003A39r 2  95 00            sta $00,x
003A3Br 2  A9 00            lda #0
003A3Dr 2  95 01            sta $01,x
003A3Fr 2               
003A3Fr 2               ; src/prelude.fth:15:21 in `negate`
003A3Fr 2               @OPCODE_1764:   ; [c64_ir] Add
003A3Fr 2                   ; 21
003A3Fr 2  CA               dex
003A40r 2  CA               dex
003A41r 2  18               clc
003A42r 2  B5 00            lda $00,x
003A44r 2  75 02            adc $02,x
003A46r 2  95 00            sta $00,x
003A48r 2  B5 01            lda $01,x
003A4Ar 2  75 03            adc $03,x
003A4Cr 2  95 01            sta $01,x
003A4Er 2               
003A4Er 2               ; src/prelude.fth:16:19 in `-`
003A4Er 2               @OPCODE_1765:   ; [c64_ir] Add
003A4Er 2                   ; 21
003A4Er 2  CA               dex
003A4Fr 2  CA               dex
003A50r 2  18               clc
003A51r 2  B5 00            lda $00,x
003A53r 2  75 02            adc $02,x
003A55r 2  95 00            sta $00,x
003A57r 2  B5 01            lda $01,x
003A59r 2  75 03            adc $03,x
003A5Br 2  95 01            sta $01,x
003A5Dr 2               
003A5Dr 2               ; src/prelude.fth:6:10 in `dup`
003A5Dr 2               @OPCODE_1766:   ; [c64_ir] TempStore
003A5Dr 2  CA               dex
003A5Er 2  CA               dex
003A5Fr 2  B5 03            lda $03,x
003A61r 2  85 96            sta TEMP_PAX2
003A63r 2  B5 02            lda $02,x
003A65r 2  85 95            sta TEMP_PAX1
003A67r 2               
003A67r 2               ; src/prelude.fth:6:16 in `dup`
003A67r 2               @OPCODE_1767:   ; [c64_ir] TempLoad
003A67r 2  E8               inx
003A68r 2  E8               inx
003A69r 2  A5 95            lda TEMP_PAX1
003A6Br 2  95 00            sta $00,x
003A6Dr 2  A5 96            lda TEMP_PAX2
003A6Fr 2  95 01            sta $01,x
003A71r 2               
003A71r 2               ; src/prelude.fth:6:22 in `dup`
003A71r 2               @OPCODE_1768:   ; [c64_ir] TempLoad
003A71r 2  E8               inx
003A72r 2  E8               inx
003A73r 2  A5 95            lda TEMP_PAX1
003A75r 2  95 00            sta $00,x
003A77r 2  A5 96            lda TEMP_PAX2
003A79r 2  95 01            sta $01,x
003A7Br 2               
003A7Br 2               ; src/prelude.fth:47:8 in `0<`
003A7Br 2               @OPCODE_1769:   ; [c64_ir] PushLiteral(-32768)
003A7Br 2  E8               inx
003A7Cr 2  E8               inx
003A7Dr 2  A9 00            lda #0
003A7Fr 2  95 00            sta $00,x
003A81r 2  A9 80            lda #128
003A83r 2  95 01            sta $01,x
003A85r 2               
003A85r 2               ; src/prelude.fth:47:14 in `0<`
003A85r 2               @OPCODE_1770:   ; [c64_ir] Nand
003A85r 2                   ; 26
003A85r 2  CA               dex
003A86r 2  CA               dex
003A87r 2  B5 00            lda $00,x
003A89r 2  35 02            and $02,x
003A8Br 2  49 FF            eor #$ff
003A8Dr 2  95 00            sta $00,x
003A8Fr 2  B5 01            lda $01,x
003A91r 2  35 03            and $03,x
003A93r 2  49 FF            eor #$ff
003A95r 2  95 01            sta $01,x
003A97r 2               
003A97r 2               ; src/prelude.fth:14:12 in `invert`
003A97r 2               @OPCODE_1771:   ; [c64_ir] PushLiteral(-1)
003A97r 2  E8               inx
003A98r 2  E8               inx
003A99r 2  A9 FF            lda #255
003A9Br 2  95 00            sta $00,x
003A9Dr 2  A9 FF            lda #255
003A9Fr 2  95 01            sta $01,x
003AA1r 2               
003AA1r 2               ; src/prelude.fth:14:15 in `invert`
003AA1r 2               @OPCODE_1772:   ; [c64_ir] Nand
003AA1r 2                   ; 26
003AA1r 2  CA               dex
003AA2r 2  CA               dex
003AA3r 2  B5 00            lda $00,x
003AA5r 2  35 02            and $02,x
003AA7r 2  49 FF            eor #$ff
003AA9r 2  95 00            sta $00,x
003AABr 2  B5 01            lda $01,x
003AADr 2  35 03            and $03,x
003AAFr 2  49 FF            eor #$ff
003AB1r 2  95 01            sta $01,x
003AB3r 2               
003AB3r 2               ; src/prelude.fth:47:26 in `0<`
003AB3r 2               @OPCODE_1773:   ; [c64_ir] JumpIf0(168)
003AB3r 2  CA               dex
003AB4r 2  CA               dex
003AB5r 2  B5 02            lda $02,x
003AB7r 2  15 03            ora $03,x
003AB9r 2  D0 03            bne *+5
003ABBr 2  4C rr rr         jmp @target_168
003ABEr 2               
003ABEr 2               @target_167:
003ABEr 2               
003ABEr 2               ; src/prelude.fth:47:29 in `0<`
003ABEr 2               @OPCODE_1775:   ; [c64_ir] PushLiteral(-1)
003ABEr 2  E8               inx
003ABFr 2  E8               inx
003AC0r 2  A9 FF            lda #255
003AC2r 2  95 00            sta $00,x
003AC4r 2  A9 FF            lda #255
003AC6r 2  95 01            sta $01,x
003AC8r 2               
003AC8r 2               ; src/prelude.fth:47:32 in `0<`
003AC8r 2               @OPCODE_1776:   ; [c64_ir] JumpElse(169)
003AC8r 2  4C rr rr         jmp @target_169
003ACBr 2               
003ACBr 2               @target_168:
003ACBr 2               
003ACBr 2               ; src/prelude.fth:47:37 in `0<`
003ACBr 2               @OPCODE_1778:   ; [c64_ir] PushLiteral(0)
003ACBr 2  E8               inx
003ACCr 2  E8               inx
003ACDr 2  A9 00            lda #0
003ACFr 2  95 00            sta $00,x
003AD1r 2  A9 00            lda #0
003AD3r 2  95 01            sta $01,x
003AD5r 2               
003AD5r 2               ; src/prelude.fth:47:39 in `0<`
003AD5r 2               @OPCODE_1779:   ; [c64_ir] JumpTarget(168)
003AD5r 2               
003AD5r 2               @target_169:
003AD5r 2               
003AD5r 2               ; src/prelude.fth:48:54 in `%`
003AD5r 2               @OPCODE_1781:   ; [c64_ir] JumpIf0(171)
003AD5r 2  CA               dex
003AD6r 2  CA               dex
003AD7r 2  B5 02            lda $02,x
003AD9r 2  15 03            ora $03,x
003ADBr 2  D0 03            bne *+5
003ADDr 2  4C rr rr         jmp @target_171
003AE0r 2               
003AE0r 2               @target_170:
003AE0r 2               
003AE0r 2               ; src/prelude.fth:48:57 in `%`
003AE0r 2               @OPCODE_1783:   ; [c64_ir] Add
003AE0r 2                   ; 21
003AE0r 2  CA               dex
003AE1r 2  CA               dex
003AE2r 2  18               clc
003AE3r 2  B5 00            lda $00,x
003AE5r 2  75 02            adc $02,x
003AE7r 2  95 00            sta $00,x
003AE9r 2  B5 01            lda $01,x
003AEBr 2  75 03            adc $03,x
003AEDr 2  95 01            sta $01,x
003AEFr 2               
003AEFr 2               ; src/prelude.fth:48:59 in `%`
003AEFr 2               @OPCODE_1784:   ; [c64_ir] PushLiteral(-1)
003AEFr 2  E8               inx
003AF0r 2  E8               inx
003AF1r 2  A9 FF            lda #255
003AF3r 2  95 00            sta $00,x
003AF5r 2  A9 FF            lda #255
003AF7r 2  95 01            sta $01,x
003AF9r 2               
003AF9r 2               ; src/prelude.fth:48:62 in `%`
003AF9r 2               @OPCODE_1785:   ; [c64_ir] JumpElse(172)
003AF9r 2  4C rr rr         jmp @target_172
003AFCr 2               
003AFCr 2               @target_171:
003AFCr 2               
003AFCr 2               ; src/prelude.fth:5:10 in `rot`
003AFCr 2               @OPCODE_1787:   ; [c64_ir] AltPush
003AFCr 2  CA               dex
003AFDr 2  CA               dex
003AFEr 2  B5 03            lda $03,x
003B00r 2  48               pha
003B01r 2  B5 02            lda $02,x
003B03r 2  48               pha
003B04r 2               
003B04r 2               ; src/prelude.fth:3:10 in `swap`
003B04r 2               @OPCODE_1788:   ; [c64_ir] AltPush
003B04r 2  CA               dex
003B05r 2  CA               dex
003B06r 2  B5 03            lda $03,x
003B08r 2  48               pha
003B09r 2  B5 02            lda $02,x
003B0Br 2  48               pha
003B0Cr 2               
003B0Cr 2               ; src/prelude.fth:3:13 in `swap`
003B0Cr 2               @OPCODE_1789:   ; [c64_ir] TempStore
003B0Cr 2  CA               dex
003B0Dr 2  CA               dex
003B0Er 2  B5 03            lda $03,x
003B10r 2  85 96            sta TEMP_PAX2
003B12r 2  B5 02            lda $02,x
003B14r 2  85 95            sta TEMP_PAX1
003B16r 2               
003B16r 2               ; src/prelude.fth:3:19 in `swap`
003B16r 2               @OPCODE_1790:   ; [c64_ir] AltPop
003B16r 2  E8               inx
003B17r 2  E8               inx
003B18r 2  68               pla
003B19r 2  95 00            sta $00,x
003B1Br 2  68               pla
003B1Cr 2  95 01            sta $01,x
003B1Er 2               
003B1Er 2               ; src/prelude.fth:5:18 in `rot`
003B1Er 2               @OPCODE_1791:   ; [c64_ir] AltPop
003B1Er 2  E8               inx
003B1Fr 2  E8               inx
003B20r 2  68               pla
003B21r 2  95 00            sta $00,x
003B23r 2  68               pla
003B24r 2  95 01            sta $01,x
003B26r 2               
003B26r 2               ; src/prelude.fth:3:10 in `swap`
003B26r 2               @OPCODE_1792:   ; [c64_ir] AltPush
003B26r 2  CA               dex
003B27r 2  CA               dex
003B28r 2  B5 03            lda $03,x
003B2Ar 2  48               pha
003B2Br 2  B5 02            lda $02,x
003B2Dr 2  48               pha
003B2Er 2               
003B2Er 2               ; src/prelude.fth:3:19 in `swap`
003B2Er 2               @OPCODE_1793:   ; [c64_ir] AltPop
003B2Er 2  E8               inx
003B2Fr 2  E8               inx
003B30r 2  68               pla
003B31r 2  95 00            sta $00,x
003B33r 2  68               pla
003B34r 2  95 01            sta $01,x
003B36r 2               
003B36r 2               ; src/prelude.fth:3:10 in `swap`
003B36r 2               @OPCODE_1794:   ; [c64_ir] AltPush
003B36r 2  CA               dex
003B37r 2  CA               dex
003B38r 2  B5 03            lda $03,x
003B3Ar 2  48               pha
003B3Br 2  B5 02            lda $02,x
003B3Dr 2  48               pha
003B3Er 2               
003B3Er 2               ; src/prelude.fth:3:13 in `swap`
003B3Er 2               @OPCODE_1795:   ; [c64_ir] TempStore
003B3Er 2  CA               dex
003B3Fr 2  CA               dex
003B40r 2  B5 03            lda $03,x
003B42r 2  85 96            sta TEMP_PAX2
003B44r 2  B5 02            lda $02,x
003B46r 2  85 95            sta TEMP_PAX1
003B48r 2               
003B48r 2               ; src/prelude.fth:3:19 in `swap`
003B48r 2               @OPCODE_1796:   ; [c64_ir] AltPop
003B48r 2  E8               inx
003B49r 2  E8               inx
003B4Ar 2  68               pla
003B4Br 2  95 00            sta $00,x
003B4Dr 2  68               pla
003B4Er 2  95 01            sta $01,x
003B50r 2               
003B50r 2               ; src/prelude.fth:3:22 in `swap`
003B50r 2               @OPCODE_1797:   ; [c64_ir] TempLoad
003B50r 2  E8               inx
003B51r 2  E8               inx
003B52r 2  A5 95            lda TEMP_PAX1
003B54r 2  95 00            sta $00,x
003B56r 2  A5 96            lda TEMP_PAX2
003B58r 2  95 01            sta $01,x
003B5Ar 2               
003B5Ar 2               ; src/prelude.fth:48:81 in `%`
003B5Ar 2               @OPCODE_1798:   ; [c64_ir] PushLiteral(0)
003B5Ar 2  E8               inx
003B5Br 2  E8               inx
003B5Cr 2  A9 00            lda #0
003B5Er 2  95 00            sta $00,x
003B60r 2  A9 00            lda #0
003B62r 2  95 01            sta $01,x
003B64r 2               
003B64r 2               ; src/prelude.fth:48:83 in `%`
003B64r 2               @OPCODE_1799:   ; [c64_ir] JumpTarget(171)
003B64r 2               
003B64r 2               @target_172:
003B64r 2               
003B64r 2               ; src/prelude.fth:48:88 in `%`
003B64r 2               @OPCODE_1801:   ; [c64_ir] LoopIf0(166)
003B64r 2  CA               dex
003B65r 2  CA               dex
003B66r 2  B5 02            lda $02,x
003B68r 2  15 03            ora $03,x
003B6Ar 2  D0 03            bne *+5
003B6Cr 2  4C rr rr         jmp @target_166
003B6Fr 2               
003B6Fr 2               @target_173:
003B6Fr 2               
003B6Fr 2               ; src/prelude.fth:3:10 in `swap`
003B6Fr 2               @OPCODE_1803:   ; [c64_ir] AltPush
003B6Fr 2  CA               dex
003B70r 2  CA               dex
003B71r 2  B5 03            lda $03,x
003B73r 2  48               pha
003B74r 2  B5 02            lda $02,x
003B76r 2  48               pha
003B77r 2               
003B77r 2               ; src/prelude.fth:3:13 in `swap`
003B77r 2               @OPCODE_1804:   ; [c64_ir] TempStore
003B77r 2  CA               dex
003B78r 2  CA               dex
003B79r 2  B5 03            lda $03,x
003B7Br 2  85 96            sta TEMP_PAX2
003B7Dr 2  B5 02            lda $02,x
003B7Fr 2  85 95            sta TEMP_PAX1
003B81r 2               
003B81r 2               ; src/prelude.fth:3:19 in `swap`
003B81r 2               @OPCODE_1805:   ; [c64_ir] AltPop
003B81r 2  E8               inx
003B82r 2  E8               inx
003B83r 2  68               pla
003B84r 2  95 00            sta $00,x
003B86r 2  68               pla
003B87r 2  95 01            sta $01,x
003B89r 2               
003B89r 2               ; <inline>:0:0 in `main`
003B89r 2               @OPCODE_1806:   ; [c64_ir] AltPop
003B89r 2  E8               inx
003B8Ar 2  E8               inx
003B8Br 2  68               pla
003B8Cr 2  95 00            sta $00,x
003B8Er 2  68               pla
003B8Fr 2  95 01            sta $01,x
003B91r 2               
003B91r 2               ; <inline>:0:0 in `main`
003B91r 2               @OPCODE_1807:   ; [c64_ir] Drop
003B91r 2  CA               dex
003B92r 2  CA               dex
003B93r 2               
003B93r 2               ; <inline>:0:0 in `main`
003B93r 2               @OPCODE_1808:   ; [c64_ir] AltPop
003B93r 2  E8               inx
003B94r 2  E8               inx
003B95r 2  68               pla
003B96r 2  95 00            sta $00,x
003B98r 2  68               pla
003B99r 2  95 01            sta $01,x
003B9Br 2               
003B9Br 2               ; <inline>:0:0 in `main`
003B9Br 2               @OPCODE_1809:   ; [c64_ir] Drop
003B9Br 2  CA               dex
003B9Cr 2  CA               dex
003B9Dr 2               
003B9Dr 2               ; snake.pax:165:20 in `random-x-position`
003B9Dr 2               @OPCODE_1810:   ; [c64_ir] PushLiteral(2)
003B9Dr 2  E8               inx
003B9Er 2  E8               inx
003B9Fr 2  A9 02            lda #2
003BA1r 2  95 00            sta $00,x
003BA3r 2  A9 00            lda #0
003BA5r 2  95 01            sta $01,x
003BA7r 2               
003BA7r 2               ; snake.pax:165:22 in `random-x-position`
003BA7r 2               @OPCODE_1811:   ; [c64_ir] Add
003BA7r 2                   ; 21
003BA7r 2  CA               dex
003BA8r 2  CA               dex
003BA9r 2  18               clc
003BAAr 2  B5 00            lda $00,x
003BACr 2  75 02            adc $02,x
003BAEr 2  95 00            sta $00,x
003BB0r 2  B5 01            lda $01,x
003BB2r 2  75 03            adc $03,x
003BB4r 2  95 01            sta $01,x
003BB6r 2               
003BB6r 2               ; <inline>:0:0 in `main`
003BB6r 2               @OPCODE_1812:   ; [c64_ir] AltPop
003BB6r 2  E8               inx
003BB7r 2  E8               inx
003BB8r 2  68               pla
003BB9r 2  95 00            sta $00,x
003BBBr 2  68               pla
003BBCr 2  95 01            sta $01,x
003BBEr 2               
003BBEr 2               ; <inline>:0:0 in `main`
003BBEr 2               @OPCODE_1813:   ; [c64_ir] Drop
003BBEr 2  CA               dex
003BBFr 2  CA               dex
003BC0r 2               
003BC0r 2               ; <inline>:0:0 in `main`
003BC0r 2               @OPCODE_1814:   ; [c64_ir] PushLiteral(7777)
003BC0r 2  E8               inx
003BC1r 2  E8               inx
003BC2r 2  A9 61            lda #97
003BC4r 2  95 00            sta $00,x
003BC6r 2  A9 1E            lda #30
003BC8r 2  95 01            sta $01,x
003BCAr 2               
003BCAr 2               ; <inline>:0:0 in `main`
003BCAr 2               @OPCODE_1815:   ; [c64_ir] AltPush
003BCAr 2  CA               dex
003BCBr 2  CA               dex
003BCCr 2  B5 03            lda $03,x
003BCEr 2  48               pha
003BCFr 2  B5 02            lda $02,x
003BD1r 2  48               pha
003BD2r 2               
003BD2r 2               ; snake.pax:167:3 in `random-y-position`
003BD2r 2               @OPCODE_1816:   ; [c64_ir] PushLiteral(25)
003BD2r 2  E8               inx
003BD3r 2  E8               inx
003BD4r 2  A9 19            lda #25
003BD6r 2  95 00            sta $00,x
003BD8r 2  A9 00            lda #0
003BDAr 2  95 01            sta $01,x
003BDCr 2               
003BDCr 2               ; snake.pax:167:10 in `random-y-position`
003BDCr 2               @OPCODE_1817:   ; [c64_ir] PushLiteral(4)
003BDCr 2  E8               inx
003BDDr 2  E8               inx
003BDEr 2  A9 04            lda #4
003BE0r 2  95 00            sta $00,x
003BE2r 2  A9 00            lda #0
003BE4r 2  95 01            sta $01,x
003BE6r 2               
003BE6r 2               ; src/prelude.fth:14:12 in `invert`
003BE6r 2               @OPCODE_1818:   ; [c64_ir] PushLiteral(-1)
003BE6r 2  E8               inx
003BE7r 2  E8               inx
003BE8r 2  A9 FF            lda #255
003BEAr 2  95 00            sta $00,x
003BECr 2  A9 FF            lda #255
003BEEr 2  95 01            sta $01,x
003BF0r 2               
003BF0r 2               ; src/prelude.fth:14:15 in `invert`
003BF0r 2               @OPCODE_1819:   ; [c64_ir] Nand
003BF0r 2                   ; 26
003BF0r 2  CA               dex
003BF1r 2  CA               dex
003BF2r 2  B5 00            lda $00,x
003BF4r 2  35 02            and $02,x
003BF6r 2  49 FF            eor #$ff
003BF8r 2  95 00            sta $00,x
003BFAr 2  B5 01            lda $01,x
003BFCr 2  35 03            and $03,x
003BFEr 2  49 FF            eor #$ff
003C00r 2  95 01            sta $01,x
003C02r 2               
003C02r 2               ; src/prelude.fth:15:19 in `negate`
003C02r 2               @OPCODE_1820:   ; [c64_ir] PushLiteral(1)
003C02r 2  E8               inx
003C03r 2  E8               inx
003C04r 2  A9 01            lda #1
003C06r 2  95 00            sta $00,x
003C08r 2  A9 00            lda #0
003C0Ar 2  95 01            sta $01,x
003C0Cr 2               
003C0Cr 2               ; src/prelude.fth:15:21 in `negate`
003C0Cr 2               @OPCODE_1821:   ; [c64_ir] Add
003C0Cr 2                   ; 21
003C0Cr 2  CA               dex
003C0Dr 2  CA               dex
003C0Er 2  18               clc
003C0Fr 2  B5 00            lda $00,x
003C11r 2  75 02            adc $02,x
003C13r 2  95 00            sta $00,x
003C15r 2  B5 01            lda $01,x
003C17r 2  75 03            adc $03,x
003C19r 2  95 01            sta $01,x
003C1Br 2               
003C1Br 2               ; src/prelude.fth:16:19 in `-`
003C1Br 2               @OPCODE_1822:   ; [c64_ir] Add
003C1Br 2                   ; 21
003C1Br 2  CA               dex
003C1Cr 2  CA               dex
003C1Dr 2  18               clc
003C1Er 2  B5 00            lda $00,x
003C20r 2  75 02            adc $02,x
003C22r 2  95 00            sta $00,x
003C24r 2  B5 01            lda $01,x
003C26r 2  75 03            adc $03,x
003C28r 2  95 01            sta $01,x
003C2Ar 2               
003C2Ar 2               ; <inline>:0:0 in `main`
003C2Ar 2               @OPCODE_1823:   ; [c64_ir] PushLiteral(7777)
003C2Ar 2  E8               inx
003C2Br 2  E8               inx
003C2Cr 2  A9 61            lda #97
003C2Er 2  95 00            sta $00,x
003C30r 2  A9 1E            lda #30
003C32r 2  95 01            sta $01,x
003C34r 2               
003C34r 2               ; <inline>:0:0 in `main`
003C34r 2               @OPCODE_1824:   ; [c64_ir] AltPush
003C34r 2  CA               dex
003C35r 2  CA               dex
003C36r 2  B5 03            lda $03,x
003C38r 2  48               pha
003C39r 2  B5 02            lda $02,x
003C3Br 2  48               pha
003C3Cr 2               
003C3Cr 2               ; snake.pax:8:10 in `random`
003C3Cr 2               @OPCODE_1825:   ; [c64_ir] PushLiteral(127)
003C3Cr 2  E8               inx
003C3Dr 2  E8               inx
003C3Er 2  A9 7F            lda #127
003C40r 2  95 00            sta $00,x
003C42r 2  A9 00            lda #0
003C44r 2  95 01            sta $01,x
003C46r 2               
003C46r 2               ; snake.pax:8:26 in `random`
003C46r 2               @OPCODE_1826:   ; [c64_ir] Load
003C46r 2  A1 00            lda ($00,x)
003C48r 2  95 00            sta $00,x
003C4Ar 2  A9 00            lda #0
003C4Cr 2  95 01            sta $01,x
003C4Er 2               
003C4Er 2               ; snake.pax:8:28 in `random`
003C4Er 2               @OPCODE_1827:   ; [c64_ir] PushLiteral(255)
003C4Er 2  E8               inx
003C4Fr 2  E8               inx
003C50r 2  A9 FF            lda #255
003C52r 2  95 00            sta $00,x
003C54r 2  A9 00            lda #0
003C56r 2  95 01            sta $01,x
003C58r 2               
003C58r 2               ; src/prelude.fth:28:9 in `and`
003C58r 2               @OPCODE_1828:   ; [c64_ir] Nand
003C58r 2                   ; 26
003C58r 2  CA               dex
003C59r 2  CA               dex
003C5Ar 2  B5 00            lda $00,x
003C5Cr 2  35 02            and $02,x
003C5Er 2  49 FF            eor #$ff
003C60r 2  95 00            sta $00,x
003C62r 2  B5 01            lda $01,x
003C64r 2  35 03            and $03,x
003C66r 2  49 FF            eor #$ff
003C68r 2  95 01            sta $01,x
003C6Ar 2               
003C6Ar 2               ; src/prelude.fth:14:12 in `invert`
003C6Ar 2               @OPCODE_1829:   ; [c64_ir] PushLiteral(-1)
003C6Ar 2  E8               inx
003C6Br 2  E8               inx
003C6Cr 2  A9 FF            lda #255
003C6Er 2  95 00            sta $00,x
003C70r 2  A9 FF            lda #255
003C72r 2  95 01            sta $01,x
003C74r 2               
003C74r 2               ; src/prelude.fth:14:15 in `invert`
003C74r 2               @OPCODE_1830:   ; [c64_ir] Nand
003C74r 2                   ; 26
003C74r 2  CA               dex
003C75r 2  CA               dex
003C76r 2  B5 00            lda $00,x
003C78r 2  35 02            and $02,x
003C7Ar 2  49 FF            eor #$ff
003C7Cr 2  95 00            sta $00,x
003C7Er 2  B5 01            lda $01,x
003C80r 2  35 03            and $03,x
003C82r 2  49 FF            eor #$ff
003C84r 2  95 01            sta $01,x
003C86r 2               
003C86r 2               ; src/prelude.fth:3:10 in `swap`
003C86r 2               @OPCODE_1831:   ; [c64_ir] AltPush
003C86r 2  CA               dex
003C87r 2  CA               dex
003C88r 2  B5 03            lda $03,x
003C8Ar 2  48               pha
003C8Br 2  B5 02            lda $02,x
003C8Dr 2  48               pha
003C8Er 2               
003C8Er 2               ; src/prelude.fth:3:13 in `swap`
003C8Er 2               @OPCODE_1832:   ; [c64_ir] TempStore
003C8Er 2  CA               dex
003C8Fr 2  CA               dex
003C90r 2  B5 03            lda $03,x
003C92r 2  85 96            sta TEMP_PAX2
003C94r 2  B5 02            lda $02,x
003C96r 2  85 95            sta TEMP_PAX1
003C98r 2               
003C98r 2               ; src/prelude.fth:3:19 in `swap`
003C98r 2               @OPCODE_1833:   ; [c64_ir] AltPop
003C98r 2  E8               inx
003C99r 2  E8               inx
003C9Ar 2  68               pla
003C9Br 2  95 00            sta $00,x
003C9Dr 2  68               pla
003C9Er 2  95 01            sta $01,x
003CA0r 2               
003CA0r 2               ; src/prelude.fth:3:22 in `swap`
003CA0r 2               @OPCODE_1834:   ; [c64_ir] TempLoad
003CA0r 2  E8               inx
003CA1r 2  E8               inx
003CA2r 2  A5 95            lda TEMP_PAX1
003CA4r 2  95 00            sta $00,x
003CA6r 2  A5 96            lda TEMP_PAX2
003CA8r 2  95 01            sta $01,x
003CAAr 2               
003CAAr 2               ; <inline>:0:0 in `main`
003CAAr 2               @OPCODE_1835:   ; [c64_ir] PushLiteral(7777)
003CAAr 2  E8               inx
003CABr 2  E8               inx
003CACr 2  A9 61            lda #97
003CAEr 2  95 00            sta $00,x
003CB0r 2  A9 1E            lda #30
003CB2r 2  95 01            sta $01,x
003CB4r 2               
003CB4r 2               ; <inline>:0:0 in `main`
003CB4r 2               @OPCODE_1836:   ; [c64_ir] AltPush
003CB4r 2  CA               dex
003CB5r 2  CA               dex
003CB6r 2  B5 03            lda $03,x
003CB8r 2  48               pha
003CB9r 2  B5 02            lda $02,x
003CBBr 2  48               pha
003CBCr 2               
003CBCr 2               ; src/prelude.fth:48:34 in `%`
003CBCr 2               @OPCODE_1837:   ; [c64_ir] LoopTarget(173)
003CBCr 2               
003CBCr 2               @target_174:
003CBCr 2               
003CBCr 2               ; src/prelude.fth:4:10 in `over`
003CBCr 2               @OPCODE_1839:   ; [c64_ir] AltPush
003CBCr 2  CA               dex
003CBDr 2  CA               dex
003CBEr 2  B5 03            lda $03,x
003CC0r 2  48               pha
003CC1r 2  B5 02            lda $02,x
003CC3r 2  48               pha
003CC4r 2               
003CC4r 2               ; src/prelude.fth:4:13 in `over`
003CC4r 2               @OPCODE_1840:   ; [c64_ir] TempStore
003CC4r 2  CA               dex
003CC5r 2  CA               dex
003CC6r 2  B5 03            lda $03,x
003CC8r 2  85 96            sta TEMP_PAX2
003CCAr 2  B5 02            lda $02,x
003CCCr 2  85 95            sta TEMP_PAX1
003CCEr 2               
003CCEr 2               ; src/prelude.fth:4:19 in `over`
003CCEr 2               @OPCODE_1841:   ; [c64_ir] TempLoad
003CCEr 2  E8               inx
003CCFr 2  E8               inx
003CD0r 2  A5 95            lda TEMP_PAX1
003CD2r 2  95 00            sta $00,x
003CD4r 2  A5 96            lda TEMP_PAX2
003CD6r 2  95 01            sta $01,x
003CD8r 2               
003CD8r 2               ; src/prelude.fth:4:25 in `over`
003CD8r 2               @OPCODE_1842:   ; [c64_ir] AltPop
003CD8r 2  E8               inx
003CD9r 2  E8               inx
003CDAr 2  68               pla
003CDBr 2  95 00            sta $00,x
003CDDr 2  68               pla
003CDEr 2  95 01            sta $01,x
003CE0r 2               
003CE0r 2               ; src/prelude.fth:4:28 in `over`
003CE0r 2               @OPCODE_1843:   ; [c64_ir] TempLoad
003CE0r 2  E8               inx
003CE1r 2  E8               inx
003CE2r 2  A5 95            lda TEMP_PAX1
003CE4r 2  95 00            sta $00,x
003CE6r 2  A5 96            lda TEMP_PAX2
003CE8r 2  95 01            sta $01,x
003CEAr 2               
003CEAr 2               ; src/prelude.fth:4:10 in `over`
003CEAr 2               @OPCODE_1844:   ; [c64_ir] AltPush
003CEAr 2  CA               dex
003CEBr 2  CA               dex
003CECr 2  B5 03            lda $03,x
003CEEr 2  48               pha
003CEFr 2  B5 02            lda $02,x
003CF1r 2  48               pha
003CF2r 2               
003CF2r 2               ; src/prelude.fth:4:13 in `over`
003CF2r 2               @OPCODE_1845:   ; [c64_ir] TempStore
003CF2r 2  CA               dex
003CF3r 2  CA               dex
003CF4r 2  B5 03            lda $03,x
003CF6r 2  85 96            sta TEMP_PAX2
003CF8r 2  B5 02            lda $02,x
003CFAr 2  85 95            sta TEMP_PAX1
003CFCr 2               
003CFCr 2               ; src/prelude.fth:4:19 in `over`
003CFCr 2               @OPCODE_1846:   ; [c64_ir] TempLoad
003CFCr 2  E8               inx
003CFDr 2  E8               inx
003CFEr 2  A5 95            lda TEMP_PAX1
003D00r 2  95 00            sta $00,x
003D02r 2  A5 96            lda TEMP_PAX2
003D04r 2  95 01            sta $01,x
003D06r 2               
003D06r 2               ; src/prelude.fth:4:25 in `over`
003D06r 2               @OPCODE_1847:   ; [c64_ir] AltPop
003D06r 2  E8               inx
003D07r 2  E8               inx
003D08r 2  68               pla
003D09r 2  95 00            sta $00,x
003D0Br 2  68               pla
003D0Cr 2  95 01            sta $01,x
003D0Er 2               
003D0Er 2               ; src/prelude.fth:4:28 in `over`
003D0Er 2               @OPCODE_1848:   ; [c64_ir] TempLoad
003D0Er 2  E8               inx
003D0Fr 2  E8               inx
003D10r 2  A5 95            lda TEMP_PAX1
003D12r 2  95 00            sta $00,x
003D14r 2  A5 96            lda TEMP_PAX2
003D16r 2  95 01            sta $01,x
003D18r 2               
003D18r 2               ; src/prelude.fth:14:12 in `invert`
003D18r 2               @OPCODE_1849:   ; [c64_ir] PushLiteral(-1)
003D18r 2  E8               inx
003D19r 2  E8               inx
003D1Ar 2  A9 FF            lda #255
003D1Cr 2  95 00            sta $00,x
003D1Er 2  A9 FF            lda #255
003D20r 2  95 01            sta $01,x
003D22r 2               
003D22r 2               ; src/prelude.fth:14:15 in `invert`
003D22r 2               @OPCODE_1850:   ; [c64_ir] Nand
003D22r 2                   ; 26
003D22r 2  CA               dex
003D23r 2  CA               dex
003D24r 2  B5 00            lda $00,x
003D26r 2  35 02            and $02,x
003D28r 2  49 FF            eor #$ff
003D2Ar 2  95 00            sta $00,x
003D2Cr 2  B5 01            lda $01,x
003D2Er 2  35 03            and $03,x
003D30r 2  49 FF            eor #$ff
003D32r 2  95 01            sta $01,x
003D34r 2               
003D34r 2               ; src/prelude.fth:15:19 in `negate`
003D34r 2               @OPCODE_1851:   ; [c64_ir] PushLiteral(1)
003D34r 2  E8               inx
003D35r 2  E8               inx
003D36r 2  A9 01            lda #1
003D38r 2  95 00            sta $00,x
003D3Ar 2  A9 00            lda #0
003D3Cr 2  95 01            sta $01,x
003D3Er 2               
003D3Er 2               ; src/prelude.fth:15:21 in `negate`
003D3Er 2               @OPCODE_1852:   ; [c64_ir] Add
003D3Er 2                   ; 21
003D3Er 2  CA               dex
003D3Fr 2  CA               dex
003D40r 2  18               clc
003D41r 2  B5 00            lda $00,x
003D43r 2  75 02            adc $02,x
003D45r 2  95 00            sta $00,x
003D47r 2  B5 01            lda $01,x
003D49r 2  75 03            adc $03,x
003D4Br 2  95 01            sta $01,x
003D4Dr 2               
003D4Dr 2               ; src/prelude.fth:16:19 in `-`
003D4Dr 2               @OPCODE_1853:   ; [c64_ir] Add
003D4Dr 2                   ; 21
003D4Dr 2  CA               dex
003D4Er 2  CA               dex
003D4Fr 2  18               clc
003D50r 2  B5 00            lda $00,x
003D52r 2  75 02            adc $02,x
003D54r 2  95 00            sta $00,x
003D56r 2  B5 01            lda $01,x
003D58r 2  75 03            adc $03,x
003D5Ar 2  95 01            sta $01,x
003D5Cr 2               
003D5Cr 2               ; src/prelude.fth:6:10 in `dup`
003D5Cr 2               @OPCODE_1854:   ; [c64_ir] TempStore
003D5Cr 2  CA               dex
003D5Dr 2  CA               dex
003D5Er 2  B5 03            lda $03,x
003D60r 2  85 96            sta TEMP_PAX2
003D62r 2  B5 02            lda $02,x
003D64r 2  85 95            sta TEMP_PAX1
003D66r 2               
003D66r 2               ; src/prelude.fth:6:16 in `dup`
003D66r 2               @OPCODE_1855:   ; [c64_ir] TempLoad
003D66r 2  E8               inx
003D67r 2  E8               inx
003D68r 2  A5 95            lda TEMP_PAX1
003D6Ar 2  95 00            sta $00,x
003D6Cr 2  A5 96            lda TEMP_PAX2
003D6Er 2  95 01            sta $01,x
003D70r 2               
003D70r 2               ; src/prelude.fth:6:22 in `dup`
003D70r 2               @OPCODE_1856:   ; [c64_ir] TempLoad
003D70r 2  E8               inx
003D71r 2  E8               inx
003D72r 2  A5 95            lda TEMP_PAX1
003D74r 2  95 00            sta $00,x
003D76r 2  A5 96            lda TEMP_PAX2
003D78r 2  95 01            sta $01,x
003D7Ar 2               
003D7Ar 2               ; src/prelude.fth:47:8 in `0<`
003D7Ar 2               @OPCODE_1857:   ; [c64_ir] PushLiteral(-32768)
003D7Ar 2  E8               inx
003D7Br 2  E8               inx
003D7Cr 2  A9 00            lda #0
003D7Er 2  95 00            sta $00,x
003D80r 2  A9 80            lda #128
003D82r 2  95 01            sta $01,x
003D84r 2               
003D84r 2               ; src/prelude.fth:47:14 in `0<`
003D84r 2               @OPCODE_1858:   ; [c64_ir] Nand
003D84r 2                   ; 26
003D84r 2  CA               dex
003D85r 2  CA               dex
003D86r 2  B5 00            lda $00,x
003D88r 2  35 02            and $02,x
003D8Ar 2  49 FF            eor #$ff
003D8Cr 2  95 00            sta $00,x
003D8Er 2  B5 01            lda $01,x
003D90r 2  35 03            and $03,x
003D92r 2  49 FF            eor #$ff
003D94r 2  95 01            sta $01,x
003D96r 2               
003D96r 2               ; src/prelude.fth:14:12 in `invert`
003D96r 2               @OPCODE_1859:   ; [c64_ir] PushLiteral(-1)
003D96r 2  E8               inx
003D97r 2  E8               inx
003D98r 2  A9 FF            lda #255
003D9Ar 2  95 00            sta $00,x
003D9Cr 2  A9 FF            lda #255
003D9Er 2  95 01            sta $01,x
003DA0r 2               
003DA0r 2               ; src/prelude.fth:14:15 in `invert`
003DA0r 2               @OPCODE_1860:   ; [c64_ir] Nand
003DA0r 2                   ; 26
003DA0r 2  CA               dex
003DA1r 2  CA               dex
003DA2r 2  B5 00            lda $00,x
003DA4r 2  35 02            and $02,x
003DA6r 2  49 FF            eor #$ff
003DA8r 2  95 00            sta $00,x
003DAAr 2  B5 01            lda $01,x
003DACr 2  35 03            and $03,x
003DAEr 2  49 FF            eor #$ff
003DB0r 2  95 01            sta $01,x
003DB2r 2               
003DB2r 2               ; src/prelude.fth:47:26 in `0<`
003DB2r 2               @OPCODE_1861:   ; [c64_ir] JumpIf0(176)
003DB2r 2  CA               dex
003DB3r 2  CA               dex
003DB4r 2  B5 02            lda $02,x
003DB6r 2  15 03            ora $03,x
003DB8r 2  D0 03            bne *+5
003DBAr 2  4C rr rr         jmp @target_176
003DBDr 2               
003DBDr 2               @target_175:
003DBDr 2               
003DBDr 2               ; src/prelude.fth:47:29 in `0<`
003DBDr 2               @OPCODE_1863:   ; [c64_ir] PushLiteral(-1)
003DBDr 2  E8               inx
003DBEr 2  E8               inx
003DBFr 2  A9 FF            lda #255
003DC1r 2  95 00            sta $00,x
003DC3r 2  A9 FF            lda #255
003DC5r 2  95 01            sta $01,x
003DC7r 2               
003DC7r 2               ; src/prelude.fth:47:32 in `0<`
003DC7r 2               @OPCODE_1864:   ; [c64_ir] JumpElse(177)
003DC7r 2  4C rr rr         jmp @target_177
003DCAr 2               
003DCAr 2               @target_176:
003DCAr 2               
003DCAr 2               ; src/prelude.fth:47:37 in `0<`
003DCAr 2               @OPCODE_1866:   ; [c64_ir] PushLiteral(0)
003DCAr 2  E8               inx
003DCBr 2  E8               inx
003DCCr 2  A9 00            lda #0
003DCEr 2  95 00            sta $00,x
003DD0r 2  A9 00            lda #0
003DD2r 2  95 01            sta $01,x
003DD4r 2               
003DD4r 2               ; src/prelude.fth:47:39 in `0<`
003DD4r 2               @OPCODE_1867:   ; [c64_ir] JumpTarget(176)
003DD4r 2               
003DD4r 2               @target_177:
003DD4r 2               
003DD4r 2               ; src/prelude.fth:48:54 in `%`
003DD4r 2               @OPCODE_1869:   ; [c64_ir] JumpIf0(179)
003DD4r 2  CA               dex
003DD5r 2  CA               dex
003DD6r 2  B5 02            lda $02,x
003DD8r 2  15 03            ora $03,x
003DDAr 2  D0 03            bne *+5
003DDCr 2  4C rr rr         jmp @target_179
003DDFr 2               
003DDFr 2               @target_178:
003DDFr 2               
003DDFr 2               ; src/prelude.fth:48:57 in `%`
003DDFr 2               @OPCODE_1871:   ; [c64_ir] Add
003DDFr 2                   ; 21
003DDFr 2  CA               dex
003DE0r 2  CA               dex
003DE1r 2  18               clc
003DE2r 2  B5 00            lda $00,x
003DE4r 2  75 02            adc $02,x
003DE6r 2  95 00            sta $00,x
003DE8r 2  B5 01            lda $01,x
003DEAr 2  75 03            adc $03,x
003DECr 2  95 01            sta $01,x
003DEEr 2               
003DEEr 2               ; src/prelude.fth:48:59 in `%`
003DEEr 2               @OPCODE_1872:   ; [c64_ir] PushLiteral(-1)
003DEEr 2  E8               inx
003DEFr 2  E8               inx
003DF0r 2  A9 FF            lda #255
003DF2r 2  95 00            sta $00,x
003DF4r 2  A9 FF            lda #255
003DF6r 2  95 01            sta $01,x
003DF8r 2               
003DF8r 2               ; src/prelude.fth:48:62 in `%`
003DF8r 2               @OPCODE_1873:   ; [c64_ir] JumpElse(180)
003DF8r 2  4C rr rr         jmp @target_180
003DFBr 2               
003DFBr 2               @target_179:
003DFBr 2               
003DFBr 2               ; src/prelude.fth:5:10 in `rot`
003DFBr 2               @OPCODE_1875:   ; [c64_ir] AltPush
003DFBr 2  CA               dex
003DFCr 2  CA               dex
003DFDr 2  B5 03            lda $03,x
003DFFr 2  48               pha
003E00r 2  B5 02            lda $02,x
003E02r 2  48               pha
003E03r 2               
003E03r 2               ; src/prelude.fth:3:10 in `swap`
003E03r 2               @OPCODE_1876:   ; [c64_ir] AltPush
003E03r 2  CA               dex
003E04r 2  CA               dex
003E05r 2  B5 03            lda $03,x
003E07r 2  48               pha
003E08r 2  B5 02            lda $02,x
003E0Ar 2  48               pha
003E0Br 2               
003E0Br 2               ; src/prelude.fth:3:13 in `swap`
003E0Br 2               @OPCODE_1877:   ; [c64_ir] TempStore
003E0Br 2  CA               dex
003E0Cr 2  CA               dex
003E0Dr 2  B5 03            lda $03,x
003E0Fr 2  85 96            sta TEMP_PAX2
003E11r 2  B5 02            lda $02,x
003E13r 2  85 95            sta TEMP_PAX1
003E15r 2               
003E15r 2               ; src/prelude.fth:3:19 in `swap`
003E15r 2               @OPCODE_1878:   ; [c64_ir] AltPop
003E15r 2  E8               inx
003E16r 2  E8               inx
003E17r 2  68               pla
003E18r 2  95 00            sta $00,x
003E1Ar 2  68               pla
003E1Br 2  95 01            sta $01,x
003E1Dr 2               
003E1Dr 2               ; src/prelude.fth:5:18 in `rot`
003E1Dr 2               @OPCODE_1879:   ; [c64_ir] AltPop
003E1Dr 2  E8               inx
003E1Er 2  E8               inx
003E1Fr 2  68               pla
003E20r 2  95 00            sta $00,x
003E22r 2  68               pla
003E23r 2  95 01            sta $01,x
003E25r 2               
003E25r 2               ; src/prelude.fth:3:10 in `swap`
003E25r 2               @OPCODE_1880:   ; [c64_ir] AltPush
003E25r 2  CA               dex
003E26r 2  CA               dex
003E27r 2  B5 03            lda $03,x
003E29r 2  48               pha
003E2Ar 2  B5 02            lda $02,x
003E2Cr 2  48               pha
003E2Dr 2               
003E2Dr 2               ; src/prelude.fth:3:19 in `swap`
003E2Dr 2               @OPCODE_1881:   ; [c64_ir] AltPop
003E2Dr 2  E8               inx
003E2Er 2  E8               inx
003E2Fr 2  68               pla
003E30r 2  95 00            sta $00,x
003E32r 2  68               pla
003E33r 2  95 01            sta $01,x
003E35r 2               
003E35r 2               ; src/prelude.fth:3:10 in `swap`
003E35r 2               @OPCODE_1882:   ; [c64_ir] AltPush
003E35r 2  CA               dex
003E36r 2  CA               dex
003E37r 2  B5 03            lda $03,x
003E39r 2  48               pha
003E3Ar 2  B5 02            lda $02,x
003E3Cr 2  48               pha
003E3Dr 2               
003E3Dr 2               ; src/prelude.fth:3:13 in `swap`
003E3Dr 2               @OPCODE_1883:   ; [c64_ir] TempStore
003E3Dr 2  CA               dex
003E3Er 2  CA               dex
003E3Fr 2  B5 03            lda $03,x
003E41r 2  85 96            sta TEMP_PAX2
003E43r 2  B5 02            lda $02,x
003E45r 2  85 95            sta TEMP_PAX1
003E47r 2               
003E47r 2               ; src/prelude.fth:3:19 in `swap`
003E47r 2               @OPCODE_1884:   ; [c64_ir] AltPop
003E47r 2  E8               inx
003E48r 2  E8               inx
003E49r 2  68               pla
003E4Ar 2  95 00            sta $00,x
003E4Cr 2  68               pla
003E4Dr 2  95 01            sta $01,x
003E4Fr 2               
003E4Fr 2               ; src/prelude.fth:3:22 in `swap`
003E4Fr 2               @OPCODE_1885:   ; [c64_ir] TempLoad
003E4Fr 2  E8               inx
003E50r 2  E8               inx
003E51r 2  A5 95            lda TEMP_PAX1
003E53r 2  95 00            sta $00,x
003E55r 2  A5 96            lda TEMP_PAX2
003E57r 2  95 01            sta $01,x
003E59r 2               
003E59r 2               ; src/prelude.fth:48:81 in `%`
003E59r 2               @OPCODE_1886:   ; [c64_ir] PushLiteral(0)
003E59r 2  E8               inx
003E5Ar 2  E8               inx
003E5Br 2  A9 00            lda #0
003E5Dr 2  95 00            sta $00,x
003E5Fr 2  A9 00            lda #0
003E61r 2  95 01            sta $01,x
003E63r 2               
003E63r 2               ; src/prelude.fth:48:83 in `%`
003E63r 2               @OPCODE_1887:   ; [c64_ir] JumpTarget(179)
003E63r 2               
003E63r 2               @target_180:
003E63r 2               
003E63r 2               ; src/prelude.fth:48:88 in `%`
003E63r 2               @OPCODE_1889:   ; [c64_ir] LoopIf0(174)
003E63r 2  CA               dex
003E64r 2  CA               dex
003E65r 2  B5 02            lda $02,x
003E67r 2  15 03            ora $03,x
003E69r 2  D0 03            bne *+5
003E6Br 2  4C rr rr         jmp @target_174
003E6Er 2               
003E6Er 2               @target_181:
003E6Er 2               
003E6Er 2               ; src/prelude.fth:3:10 in `swap`
003E6Er 2               @OPCODE_1891:   ; [c64_ir] AltPush
003E6Er 2  CA               dex
003E6Fr 2  CA               dex
003E70r 2  B5 03            lda $03,x
003E72r 2  48               pha
003E73r 2  B5 02            lda $02,x
003E75r 2  48               pha
003E76r 2               
003E76r 2               ; src/prelude.fth:3:13 in `swap`
003E76r 2               @OPCODE_1892:   ; [c64_ir] TempStore
003E76r 2  CA               dex
003E77r 2  CA               dex
003E78r 2  B5 03            lda $03,x
003E7Ar 2  85 96            sta TEMP_PAX2
003E7Cr 2  B5 02            lda $02,x
003E7Er 2  85 95            sta TEMP_PAX1
003E80r 2               
003E80r 2               ; src/prelude.fth:3:19 in `swap`
003E80r 2               @OPCODE_1893:   ; [c64_ir] AltPop
003E80r 2  E8               inx
003E81r 2  E8               inx
003E82r 2  68               pla
003E83r 2  95 00            sta $00,x
003E85r 2  68               pla
003E86r 2  95 01            sta $01,x
003E88r 2               
003E88r 2               ; <inline>:0:0 in `main`
003E88r 2               @OPCODE_1894:   ; [c64_ir] AltPop
003E88r 2  E8               inx
003E89r 2  E8               inx
003E8Ar 2  68               pla
003E8Br 2  95 00            sta $00,x
003E8Dr 2  68               pla
003E8Er 2  95 01            sta $01,x
003E90r 2               
003E90r 2               ; <inline>:0:0 in `main`
003E90r 2               @OPCODE_1895:   ; [c64_ir] Drop
003E90r 2  CA               dex
003E91r 2  CA               dex
003E92r 2               
003E92r 2               ; <inline>:0:0 in `main`
003E92r 2               @OPCODE_1896:   ; [c64_ir] AltPop
003E92r 2  E8               inx
003E93r 2  E8               inx
003E94r 2  68               pla
003E95r 2  95 00            sta $00,x
003E97r 2  68               pla
003E98r 2  95 01            sta $01,x
003E9Ar 2               
003E9Ar 2               ; <inline>:0:0 in `main`
003E9Ar 2               @OPCODE_1897:   ; [c64_ir] Drop
003E9Ar 2  CA               dex
003E9Br 2  CA               dex
003E9Cr 2               
003E9Cr 2               ; snake.pax:167:21 in `random-y-position`
003E9Cr 2               @OPCODE_1898:   ; [c64_ir] PushLiteral(2)
003E9Cr 2  E8               inx
003E9Dr 2  E8               inx
003E9Er 2  A9 02            lda #2
003EA0r 2  95 00            sta $00,x
003EA2r 2  A9 00            lda #0
003EA4r 2  95 01            sta $01,x
003EA6r 2               
003EA6r 2               ; snake.pax:167:23 in `random-y-position`
003EA6r 2               @OPCODE_1899:   ; [c64_ir] Add
003EA6r 2                   ; 21
003EA6r 2  CA               dex
003EA7r 2  CA               dex
003EA8r 2  18               clc
003EA9r 2  B5 00            lda $00,x
003EABr 2  75 02            adc $02,x
003EADr 2  95 00            sta $00,x
003EAFr 2  B5 01            lda $01,x
003EB1r 2  75 03            adc $03,x
003EB3r 2  95 01            sta $01,x
003EB5r 2               
003EB5r 2               ; <inline>:0:0 in `main`
003EB5r 2               @OPCODE_1900:   ; [c64_ir] AltPop
003EB5r 2  E8               inx
003EB6r 2  E8               inx
003EB7r 2  68               pla
003EB8r 2  95 00            sta $00,x
003EBAr 2  68               pla
003EBBr 2  95 01            sta $01,x
003EBDr 2               
003EBDr 2               ; <inline>:0:0 in `main`
003EBDr 2               @OPCODE_1901:   ; [c64_ir] Drop
003EBDr 2  CA               dex
003EBEr 2  CA               dex
003EBFr 2               
003EBFr 2               ; snake.pax:98:22 in `set-apple-position`
003EBFr 2               @OPCODE_1902:   ; [c64_ir] PushLiteral(-26664)
003EBFr 2  E8               inx
003EC0r 2  E8               inx
003EC1r 2  A9 D8            lda #216
003EC3r 2  95 00            sta $00,x
003EC5r 2  A9 97            lda #151
003EC7r 2  95 01            sta $01,x
003EC9r 2               
003EC9r 2               ; snake.pax:98:30 in `set-apple-position`
003EC9r 2               @OPCODE_1903:   ; [c64_ir] Store
003EC9r 2  CA               dex
003ECAr 2  CA               dex
003ECBr 2  CA               dex
003ECCr 2  CA               dex
003ECDr 2  B5 02            lda $02,x
003ECFr 2  81 04            sta ($04,x)
003ED1r 2                   ; TODO high byte
003ED1r 2               
003ED1r 2               ; snake.pax:98:32 in `set-apple-position`
003ED1r 2               @OPCODE_1904:   ; [c64_ir] PushLiteral(-26662)
003ED1r 2  E8               inx
003ED2r 2  E8               inx
003ED3r 2  A9 DA            lda #218
003ED5r 2  95 00            sta $00,x
003ED7r 2  A9 97            lda #151
003ED9r 2  95 01            sta $01,x
003EDBr 2               
003EDBr 2               ; snake.pax:98:40 in `set-apple-position`
003EDBr 2               @OPCODE_1905:   ; [c64_ir] Store
003EDBr 2  CA               dex
003EDCr 2  CA               dex
003EDDr 2  CA               dex
003EDEr 2  CA               dex
003EDFr 2  B5 02            lda $02,x
003EE1r 2  81 04            sta ($04,x)
003EE3r 2                   ; TODO high byte
003EE3r 2               
003EE3r 2               ; <inline>:0:0 in `main`
003EE3r 2               @OPCODE_1906:   ; [c64_ir] AltPop
003EE3r 2  E8               inx
003EE4r 2  E8               inx
003EE5r 2  68               pla
003EE6r 2  95 00            sta $00,x
003EE8r 2  68               pla
003EE9r 2  95 01            sta $01,x
003EEBr 2               
003EEBr 2               ; <inline>:0:0 in `main`
003EEBr 2               @OPCODE_1907:   ; [c64_ir] Drop
003EEBr 2  CA               dex
003EECr 2  CA               dex
003EEDr 2               
003EEDr 2               ; snake.pax:174:15 in `grow-snake`
003EEDr 2               @OPCODE_1908:   ; [c64_ir] PushLiteral(1)
003EEDr 2  E8               inx
003EEEr 2  E8               inx
003EEFr 2  A9 01            lda #1
003EF1r 2  95 00            sta $00,x
003EF3r 2  A9 00            lda #0
003EF5r 2  95 01            sta $01,x
003EF7r 2               
003EF7r 2               ; src/prelude.fth:6:16 in `dup`
003EF7r 2               @OPCODE_1909:   ; [c64_ir] PushLiteral(-26658)
003EF7r 2  E8               inx
003EF8r 2  E8               inx
003EF9r 2  A9 DE            lda #222
003EFBr 2  95 00            sta $00,x
003EFDr 2  A9 97            lda #151
003EFFr 2  95 01            sta $01,x
003F01r 2               
003F01r 2               ; src/prelude.fth:20:15 in `+!`
003F01r 2               @OPCODE_1910:   ; [c64_ir] Load
003F01r 2  A1 00            lda ($00,x)
003F03r 2  95 00            sta $00,x
003F05r 2  A9 00            lda #0
003F07r 2  95 01            sta $01,x
003F09r 2               
003F09r 2               ; src/prelude.fth:20:17 in `+!`
003F09r 2               @OPCODE_1911:   ; [c64_ir] Add
003F09r 2                   ; 21
003F09r 2  CA               dex
003F0Ar 2  CA               dex
003F0Br 2  18               clc
003F0Cr 2  B5 00            lda $00,x
003F0Er 2  75 02            adc $02,x
003F10r 2  95 00            sta $00,x
003F12r 2  B5 01            lda $01,x
003F14r 2  75 03            adc $03,x
003F16r 2  95 01            sta $01,x
003F18r 2               
003F18r 2               ; src/prelude.fth:20:19 in `+!`
003F18r 2               @OPCODE_1912:   ; [c64_ir] PushLiteral(-26658)
003F18r 2  E8               inx
003F19r 2  E8               inx
003F1Ar 2  A9 DE            lda #222
003F1Cr 2  95 00            sta $00,x
003F1Er 2  A9 97            lda #151
003F20r 2  95 01            sta $01,x
003F22r 2               
003F22r 2               ; src/prelude.fth:20:22 in `+!`
003F22r 2               @OPCODE_1913:   ; [c64_ir] Store
003F22r 2  CA               dex
003F23r 2  CA               dex
003F24r 2  CA               dex
003F25r 2  CA               dex
003F26r 2  B5 02            lda $02,x
003F28r 2  81 04            sta ($04,x)
003F2Ar 2                   ; TODO high byte
003F2Ar 2               
003F2Ar 2               ; snake.pax:182:3 in `check-apple`
003F2Ar 2               @OPCODE_1914:   ; [c64_ir] JumpTarget(181)
003F2Ar 2               
003F2Ar 2               @target_182:
003F2Ar 2               
003F2Ar 2               ; <inline>:0:0 in `main`
003F2Ar 2               @OPCODE_1916:   ; [c64_ir] AltPop
003F2Ar 2  E8               inx
003F2Br 2  E8               inx
003F2Cr 2  68               pla
003F2Dr 2  95 00            sta $00,x
003F2Fr 2  68               pla
003F30r 2  95 01            sta $01,x
003F32r 2               
003F32r 2               ; <inline>:0:0 in `main`
003F32r 2               @OPCODE_1917:   ; [c64_ir] Drop
003F32r 2  CA               dex
003F33r 2  CA               dex
003F34r 2               
003F34r 2               ; <inline>:0:0 in `main`
003F34r 2               @OPCODE_1918:   ; [c64_ir] PushLiteral(7777)
003F34r 2  E8               inx
003F35r 2  E8               inx
003F36r 2  A9 61            lda #97
003F38r 2  95 00            sta $00,x
003F3Ar 2  A9 1E            lda #30
003F3Cr 2  95 01            sta $01,x
003F3Er 2               
003F3Er 2               ; <inline>:0:0 in `main`
003F3Er 2               @OPCODE_1919:   ; [c64_ir] AltPush
003F3Er 2  CA               dex
003F3Fr 2  CA               dex
003F40r 2  B5 03            lda $03,x
003F42r 2  48               pha
003F43r 2  B5 02            lda $02,x
003F45r 2  48               pha
003F46r 2               
003F46r 2               ; snake.pax:186:3 in `check-collision`
003F46r 2               @OPCODE_1920:   ; [c64_ir] PushLiteral(-28668)
003F46r 2  E8               inx
003F47r 2  E8               inx
003F48r 2  A9 04            lda #4
003F4Ar 2  95 00            sta $00,x
003F4Cr 2  A9 90            lda #144
003F4Er 2  95 01            sta $01,x
003F50r 2               
003F50r 2               ; snake.pax:186:16 in `check-collision`
003F50r 2               @OPCODE_1921:   ; [c64_ir] Load
003F50r 2  A1 00            lda ($00,x)
003F52r 2  95 00            sta $00,x
003F54r 2  A9 00            lda #0
003F56r 2  95 01            sta $01,x
003F58r 2               
003F58r 2               ; snake.pax:186:18 in `check-collision`
003F58r 2               @OPCODE_1922:   ; [c64_ir] PushLiteral(-27666)
003F58r 2  E8               inx
003F59r 2  E8               inx
003F5Ar 2  A9 EE            lda #238
003F5Cr 2  95 00            sta $00,x
003F5Er 2  A9 93            lda #147
003F60r 2  95 01            sta $01,x
003F62r 2               
003F62r 2               ; snake.pax:186:31 in `check-collision`
003F62r 2               @OPCODE_1923:   ; [c64_ir] Load
003F62r 2  A1 00            lda ($00,x)
003F64r 2  95 00            sta $00,x
003F66r 2  A9 00            lda #0
003F68r 2  95 01            sta $01,x
003F6Ar 2               
003F6Ar 2               ; <inline>:0:0 in `main`
003F6Ar 2               @OPCODE_1924:   ; [c64_ir] PushLiteral(7777)
003F6Ar 2  E8               inx
003F6Br 2  E8               inx
003F6Cr 2  A9 61            lda #97
003F6Er 2  95 00            sta $00,x
003F70r 2  A9 1E            lda #30
003F72r 2  95 01            sta $01,x
003F74r 2               
003F74r 2               ; <inline>:0:0 in `main`
003F74r 2               @OPCODE_1925:   ; [c64_ir] AltPush
003F74r 2  CA               dex
003F75r 2  CA               dex
003F76r 2  B5 03            lda $03,x
003F78r 2  48               pha
003F79r 2  B5 02            lda $02,x
003F7Br 2  48               pha
003F7Cr 2               
003F7Cr 2               ; <inline>:0:0 in `main`
003F7Cr 2               @OPCODE_1926:   ; [c64_ir] PushLiteral(7777)
003F7Cr 2  E8               inx
003F7Dr 2  E8               inx
003F7Er 2  A9 61            lda #97
003F80r 2  95 00            sta $00,x
003F82r 2  A9 1E            lda #30
003F84r 2  95 01            sta $01,x
003F86r 2               
003F86r 2               ; <inline>:0:0 in `main`
003F86r 2               @OPCODE_1927:   ; [c64_ir] AltPush
003F86r 2  CA               dex
003F87r 2  CA               dex
003F88r 2  B5 03            lda $03,x
003F8Ar 2  48               pha
003F8Br 2  B5 02            lda $02,x
003F8Dr 2  48               pha
003F8Er 2               
003F8Er 2               ; src/prelude.fth:44:8 in `*`
003F8Er 2               @OPCODE_1928:   ; [c64_ir] PushLiteral(0)
003F8Er 2  E8               inx
003F8Fr 2  E8               inx
003F90r 2  A9 00            lda #0
003F92r 2  95 00            sta $00,x
003F94r 2  A9 00            lda #0
003F96r 2  95 01            sta $01,x
003F98r 2               
003F98r 2               ; src/prelude.fth:44:10 in `*`
003F98r 2               @OPCODE_1929:   ; [c64_ir] PushLiteral(40)
003F98r 2  E8               inx
003F99r 2  E8               inx
003F9Ar 2  A9 28            lda #40
003F9Cr 2  95 00            sta $00,x
003F9Er 2  A9 00            lda #0
003FA0r 2  95 01            sta $01,x
003FA2r 2               
003FA2r 2               ; src/prelude.fth:44:13 in `*`
003FA2r 2               @OPCODE_1930:   ; [c64_ir] PushLiteral(0)
003FA2r 2  E8               inx
003FA3r 2  E8               inx
003FA4r 2  A9 00            lda #0
003FA6r 2  95 00            sta $00,x
003FA8r 2  A9 00            lda #0
003FAAr 2  95 01            sta $01,x
003FACr 2               
003FACr 2               ; src/prelude.fth:44:15 in `*`
003FACr 2               @OPCODE_1931:   ; [c64_ir] AltPush
003FACr 2  CA               dex
003FADr 2  CA               dex
003FAEr 2  B5 03            lda $03,x
003FB0r 2  48               pha
003FB1r 2  B5 02            lda $02,x
003FB3r 2  48               pha
003FB4r 2               
003FB4r 2               ; src/prelude.fth:44:15 in `*`
003FB4r 2               @OPCODE_1932:   ; [c64_ir] AltPush
003FB4r 2  CA               dex
003FB5r 2  CA               dex
003FB6r 2  B5 03            lda $03,x
003FB8r 2  48               pha
003FB9r 2  B5 02            lda $02,x
003FBBr 2  48               pha
003FBCr 2               
003FBCr 2               ; src/prelude.fth:44:15 in `*`
003FBCr 2               @OPCODE_1933:   ; [c64_ir] LoopTarget(182)
003FBCr 2               
003FBCr 2               @target_183:
003FBCr 2               
003FBCr 2               ; src/prelude.fth:4:10 in `over`
003FBCr 2               @OPCODE_1935:   ; [c64_ir] AltPush
003FBCr 2  CA               dex
003FBDr 2  CA               dex
003FBEr 2  B5 03            lda $03,x
003FC0r 2  48               pha
003FC1r 2  B5 02            lda $02,x
003FC3r 2  48               pha
003FC4r 2               
003FC4r 2               ; src/prelude.fth:4:13 in `over`
003FC4r 2               @OPCODE_1936:   ; [c64_ir] TempStore
003FC4r 2  CA               dex
003FC5r 2  CA               dex
003FC6r 2  B5 03            lda $03,x
003FC8r 2  85 96            sta TEMP_PAX2
003FCAr 2  B5 02            lda $02,x
003FCCr 2  85 95            sta TEMP_PAX1
003FCEr 2               
003FCEr 2               ; src/prelude.fth:4:19 in `over`
003FCEr 2               @OPCODE_1937:   ; [c64_ir] TempLoad
003FCEr 2  E8               inx
003FCFr 2  E8               inx
003FD0r 2  A5 95            lda TEMP_PAX1
003FD2r 2  95 00            sta $00,x
003FD4r 2  A5 96            lda TEMP_PAX2
003FD6r 2  95 01            sta $01,x
003FD8r 2               
003FD8r 2               ; src/prelude.fth:4:25 in `over`
003FD8r 2               @OPCODE_1938:   ; [c64_ir] AltPop
003FD8r 2  E8               inx
003FD9r 2  E8               inx
003FDAr 2  68               pla
003FDBr 2  95 00            sta $00,x
003FDDr 2  68               pla
003FDEr 2  95 01            sta $01,x
003FE0r 2               
003FE0r 2               ; src/prelude.fth:4:28 in `over`
003FE0r 2               @OPCODE_1939:   ; [c64_ir] TempLoad
003FE0r 2  E8               inx
003FE1r 2  E8               inx
003FE2r 2  A5 95            lda TEMP_PAX1
003FE4r 2  95 00            sta $00,x
003FE6r 2  A5 96            lda TEMP_PAX2
003FE8r 2  95 01            sta $01,x
003FEAr 2               
003FEAr 2               ; src/prelude.fth:44:23 in `*`
003FEAr 2               @OPCODE_1940:   ; [c64_ir] Add
003FEAr 2                   ; 21
003FEAr 2  CA               dex
003FEBr 2  CA               dex
003FECr 2  18               clc
003FEDr 2  B5 00            lda $00,x
003FEFr 2  75 02            adc $02,x
003FF1r 2  95 00            sta $00,x
003FF3r 2  B5 01            lda $01,x
003FF5r 2  75 03            adc $03,x
003FF7r 2  95 01            sta $01,x
003FF9r 2               
003FF9r 2               ; src/prelude.fth:33:15 in `loopimpl`
003FF9r 2               @OPCODE_1941:   ; [c64_ir] AltPop
003FF9r 2  E8               inx
003FFAr 2  E8               inx
003FFBr 2  68               pla
003FFCr 2  95 00            sta $00,x
003FFEr 2  68               pla
003FFFr 2  95 01            sta $01,x
004001r 2               
004001r 2               ; src/prelude.fth:33:18 in `loopimpl`
004001r 2               @OPCODE_1942:   ; [c64_ir] AltPop
004001r 2  E8               inx
004002r 2  E8               inx
004003r 2  68               pla
004004r 2  95 00            sta $00,x
004006r 2  68               pla
004007r 2  95 01            sta $01,x
004009r 2               
004009r 2               ; src/prelude.fth:18:8 in `1+`
004009r 2               @OPCODE_1943:   ; [c64_ir] PushLiteral(1)
004009r 2  E8               inx
00400Ar 2  E8               inx
00400Br 2  A9 01            lda #1
00400Dr 2  95 00            sta $00,x
00400Fr 2  A9 00            lda #0
004011r 2  95 01            sta $01,x
004013r 2               
004013r 2               ; src/prelude.fth:18:10 in `1+`
004013r 2               @OPCODE_1944:   ; [c64_ir] Add
004013r 2                   ; 21
004013r 2  CA               dex
004014r 2  CA               dex
004015r 2  18               clc
004016r 2  B5 00            lda $00,x
004018r 2  75 02            adc $02,x
00401Ar 2  95 00            sta $00,x
00401Cr 2  B5 01            lda $01,x
00401Er 2  75 03            adc $03,x
004020r 2  95 01            sta $01,x
004022r 2               
004022r 2               ; src/prelude.fth:4:10 in `over`
004022r 2               @OPCODE_1945:   ; [c64_ir] AltPush
004022r 2  CA               dex
004023r 2  CA               dex
004024r 2  B5 03            lda $03,x
004026r 2  48               pha
004027r 2  B5 02            lda $02,x
004029r 2  48               pha
00402Ar 2               
00402Ar 2               ; src/prelude.fth:4:13 in `over`
00402Ar 2               @OPCODE_1946:   ; [c64_ir] TempStore
00402Ar 2  CA               dex
00402Br 2  CA               dex
00402Cr 2  B5 03            lda $03,x
00402Er 2  85 96            sta TEMP_PAX2
004030r 2  B5 02            lda $02,x
004032r 2  85 95            sta TEMP_PAX1
004034r 2               
004034r 2               ; src/prelude.fth:4:19 in `over`
004034r 2               @OPCODE_1947:   ; [c64_ir] TempLoad
004034r 2  E8               inx
004035r 2  E8               inx
004036r 2  A5 95            lda TEMP_PAX1
004038r 2  95 00            sta $00,x
00403Ar 2  A5 96            lda TEMP_PAX2
00403Cr 2  95 01            sta $01,x
00403Er 2               
00403Er 2               ; src/prelude.fth:4:25 in `over`
00403Er 2               @OPCODE_1948:   ; [c64_ir] AltPop
00403Er 2  E8               inx
00403Fr 2  E8               inx
004040r 2  68               pla
004041r 2  95 00            sta $00,x
004043r 2  68               pla
004044r 2  95 01            sta $01,x
004046r 2               
004046r 2               ; src/prelude.fth:4:28 in `over`
004046r 2               @OPCODE_1949:   ; [c64_ir] TempLoad
004046r 2  E8               inx
004047r 2  E8               inx
004048r 2  A5 95            lda TEMP_PAX1
00404Ar 2  95 00            sta $00,x
00404Cr 2  A5 96            lda TEMP_PAX2
00404Er 2  95 01            sta $01,x
004050r 2               
004050r 2               ; src/prelude.fth:4:10 in `over`
004050r 2               @OPCODE_1950:   ; [c64_ir] AltPush
004050r 2  CA               dex
004051r 2  CA               dex
004052r 2  B5 03            lda $03,x
004054r 2  48               pha
004055r 2  B5 02            lda $02,x
004057r 2  48               pha
004058r 2               
004058r 2               ; src/prelude.fth:4:13 in `over`
004058r 2               @OPCODE_1951:   ; [c64_ir] TempStore
004058r 2  CA               dex
004059r 2  CA               dex
00405Ar 2  B5 03            lda $03,x
00405Cr 2  85 96            sta TEMP_PAX2
00405Er 2  B5 02            lda $02,x
004060r 2  85 95            sta TEMP_PAX1
004062r 2               
004062r 2               ; src/prelude.fth:4:19 in `over`
004062r 2               @OPCODE_1952:   ; [c64_ir] TempLoad
004062r 2  E8               inx
004063r 2  E8               inx
004064r 2  A5 95            lda TEMP_PAX1
004066r 2  95 00            sta $00,x
004068r 2  A5 96            lda TEMP_PAX2
00406Ar 2  95 01            sta $01,x
00406Cr 2               
00406Cr 2               ; src/prelude.fth:4:25 in `over`
00406Cr 2               @OPCODE_1953:   ; [c64_ir] AltPop
00406Cr 2  E8               inx
00406Dr 2  E8               inx
00406Er 2  68               pla
00406Fr 2  95 00            sta $00,x
004071r 2  68               pla
004072r 2  95 01            sta $01,x
004074r 2               
004074r 2               ; src/prelude.fth:4:28 in `over`
004074r 2               @OPCODE_1954:   ; [c64_ir] TempLoad
004074r 2  E8               inx
004075r 2  E8               inx
004076r 2  A5 95            lda TEMP_PAX1
004078r 2  95 00            sta $00,x
00407Ar 2  A5 96            lda TEMP_PAX2
00407Cr 2  95 01            sta $01,x
00407Er 2               
00407Er 2               ; src/prelude.fth:33:29 in `loopimpl`
00407Er 2               @OPCODE_1955:   ; [c64_ir] AltPush
00407Er 2  CA               dex
00407Fr 2  CA               dex
004080r 2  B5 03            lda $03,x
004082r 2  48               pha
004083r 2  B5 02            lda $02,x
004085r 2  48               pha
004086r 2               
004086r 2               ; src/prelude.fth:33:32 in `loopimpl`
004086r 2               @OPCODE_1956:   ; [c64_ir] AltPush
004086r 2  CA               dex
004087r 2  CA               dex
004088r 2  B5 03            lda $03,x
00408Ar 2  48               pha
00408Br 2  B5 02            lda $02,x
00408Dr 2  48               pha
00408Er 2               
00408Er 2               ; src/prelude.fth:14:12 in `invert`
00408Er 2               @OPCODE_1957:   ; [c64_ir] PushLiteral(-1)
00408Er 2  E8               inx
00408Fr 2  E8               inx
004090r 2  A9 FF            lda #255
004092r 2  95 00            sta $00,x
004094r 2  A9 FF            lda #255
004096r 2  95 01            sta $01,x
004098r 2               
004098r 2               ; src/prelude.fth:14:15 in `invert`
004098r 2               @OPCODE_1958:   ; [c64_ir] Nand
004098r 2                   ; 26
004098r 2  CA               dex
004099r 2  CA               dex
00409Ar 2  B5 00            lda $00,x
00409Cr 2  35 02            and $02,x
00409Er 2  49 FF            eor #$ff
0040A0r 2  95 00            sta $00,x
0040A2r 2  B5 01            lda $01,x
0040A4r 2  35 03            and $03,x
0040A6r 2  49 FF            eor #$ff
0040A8r 2  95 01            sta $01,x
0040AAr 2               
0040AAr 2               ; src/prelude.fth:15:19 in `negate`
0040AAr 2               @OPCODE_1959:   ; [c64_ir] PushLiteral(1)
0040AAr 2  E8               inx
0040ABr 2  E8               inx
0040ACr 2  A9 01            lda #1
0040AEr 2  95 00            sta $00,x
0040B0r 2  A9 00            lda #0
0040B2r 2  95 01            sta $01,x
0040B4r 2               
0040B4r 2               ; src/prelude.fth:15:21 in `negate`
0040B4r 2               @OPCODE_1960:   ; [c64_ir] Add
0040B4r 2                   ; 21
0040B4r 2  CA               dex
0040B5r 2  CA               dex
0040B6r 2  18               clc
0040B7r 2  B5 00            lda $00,x
0040B9r 2  75 02            adc $02,x
0040BBr 2  95 00            sta $00,x
0040BDr 2  B5 01            lda $01,x
0040BFr 2  75 03            adc $03,x
0040C1r 2  95 01            sta $01,x
0040C3r 2               
0040C3r 2               ; src/prelude.fth:16:19 in `-`
0040C3r 2               @OPCODE_1961:   ; [c64_ir] Add
0040C3r 2                   ; 21
0040C3r 2  CA               dex
0040C4r 2  CA               dex
0040C5r 2  18               clc
0040C6r 2  B5 00            lda $00,x
0040C8r 2  75 02            adc $02,x
0040CAr 2  95 00            sta $00,x
0040CCr 2  B5 01            lda $01,x
0040CEr 2  75 03            adc $03,x
0040D0r 2  95 01            sta $01,x
0040D2r 2               
0040D2r 2               ; src/prelude.fth:21:8 in `0=`
0040D2r 2               @OPCODE_1962:   ; [c64_ir] JumpIf0(185)
0040D2r 2  CA               dex
0040D3r 2  CA               dex
0040D4r 2  B5 02            lda $02,x
0040D6r 2  15 03            ora $03,x
0040D8r 2  D0 03            bne *+5
0040DAr 2  4C rr rr         jmp @target_185
0040DDr 2               
0040DDr 2               @target_184:
0040DDr 2               
0040DDr 2               ; src/prelude.fth:21:11 in `0=`
0040DDr 2               @OPCODE_1964:   ; [c64_ir] PushLiteral(0)
0040DDr 2  E8               inx
0040DEr 2  E8               inx
0040DFr 2  A9 00            lda #0
0040E1r 2  95 00            sta $00,x
0040E3r 2  A9 00            lda #0
0040E5r 2  95 01            sta $01,x
0040E7r 2               
0040E7r 2               ; src/prelude.fth:21:13 in `0=`
0040E7r 2               @OPCODE_1965:   ; [c64_ir] JumpElse(186)
0040E7r 2  4C rr rr         jmp @target_186
0040EAr 2               
0040EAr 2               @target_185:
0040EAr 2               
0040EAr 2               ; src/prelude.fth:21:18 in `0=`
0040EAr 2               @OPCODE_1967:   ; [c64_ir] PushLiteral(-1)
0040EAr 2  E8               inx
0040EBr 2  E8               inx
0040ECr 2  A9 FF            lda #255
0040EEr 2  95 00            sta $00,x
0040F0r 2  A9 FF            lda #255
0040F2r 2  95 01            sta $01,x
0040F4r 2               
0040F4r 2               ; src/prelude.fth:21:21 in `0=`
0040F4r 2               @OPCODE_1968:   ; [c64_ir] JumpTarget(185)
0040F4r 2               
0040F4r 2               @target_186:
0040F4r 2               
0040F4r 2               ; src/prelude.fth:3:10 in `swap`
0040F4r 2               @OPCODE_1970:   ; [c64_ir] AltPush
0040F4r 2  CA               dex
0040F5r 2  CA               dex
0040F6r 2  B5 03            lda $03,x
0040F8r 2  48               pha
0040F9r 2  B5 02            lda $02,x
0040FBr 2  48               pha
0040FCr 2               
0040FCr 2               ; src/prelude.fth:3:19 in `swap`
0040FCr 2               @OPCODE_1971:   ; [c64_ir] AltPop
0040FCr 2  E8               inx
0040FDr 2  E8               inx
0040FEr 2  68               pla
0040FFr 2  95 00            sta $00,x
004101r 2  68               pla
004102r 2  95 01            sta $01,x
004104r 2               
004104r 2               ; src/prelude.fth:44:25 in `*`
004104r 2               @OPCODE_1972:   ; [c64_ir] LoopIf0(183)
004104r 2  CA               dex
004105r 2  CA               dex
004106r 2  B5 02            lda $02,x
004108r 2  15 03            ora $03,x
00410Ar 2  D0 03            bne *+5
00410Cr 2  4C rr rr         jmp @target_183
00410Fr 2               
00410Fr 2               @target_187:
00410Fr 2               
00410Fr 2               ; src/prelude.fth:44:25 in `*`
00410Fr 2               @OPCODE_1974:   ; [c64_ir] AltPop
00410Fr 2  E8               inx
004110r 2  E8               inx
004111r 2  68               pla
004112r 2  95 00            sta $00,x
004114r 2  68               pla
004115r 2  95 01            sta $01,x
004117r 2               
004117r 2               ; src/prelude.fth:44:25 in `*`
004117r 2               @OPCODE_1975:   ; [c64_ir] Drop
004117r 2  CA               dex
004118r 2  CA               dex
004119r 2               
004119r 2               ; src/prelude.fth:44:25 in `*`
004119r 2               @OPCODE_1976:   ; [c64_ir] AltPop
004119r 2  E8               inx
00411Ar 2  E8               inx
00411Br 2  68               pla
00411Cr 2  95 00            sta $00,x
00411Er 2  68               pla
00411Fr 2  95 01            sta $01,x
004121r 2               
004121r 2               ; src/prelude.fth:44:25 in `*`
004121r 2               @OPCODE_1977:   ; [c64_ir] Drop
004121r 2  CA               dex
004122r 2  CA               dex
004123r 2               
004123r 2               ; src/prelude.fth:3:10 in `swap`
004123r 2               @OPCODE_1978:   ; [c64_ir] AltPush
004123r 2  CA               dex
004124r 2  CA               dex
004125r 2  B5 03            lda $03,x
004127r 2  48               pha
004128r 2  B5 02            lda $02,x
00412Ar 2  48               pha
00412Br 2               
00412Br 2               ; src/prelude.fth:3:13 in `swap`
00412Br 2               @OPCODE_1979:   ; [c64_ir] TempStore
00412Br 2  CA               dex
00412Cr 2  CA               dex
00412Dr 2  B5 03            lda $03,x
00412Fr 2  85 96            sta TEMP_PAX2
004131r 2  B5 02            lda $02,x
004133r 2  85 95            sta TEMP_PAX1
004135r 2               
004135r 2               ; src/prelude.fth:3:19 in `swap`
004135r 2               @OPCODE_1980:   ; [c64_ir] AltPop
004135r 2  E8               inx
004136r 2  E8               inx
004137r 2  68               pla
004138r 2  95 00            sta $00,x
00413Ar 2  68               pla
00413Br 2  95 01            sta $01,x
00413Dr 2               
00413Dr 2               ; <inline>:0:0 in `main`
00413Dr 2               @OPCODE_1981:   ; [c64_ir] AltPop
00413Dr 2  E8               inx
00413Er 2  E8               inx
00413Fr 2  68               pla
004140r 2  95 00            sta $00,x
004142r 2  68               pla
004143r 2  95 01            sta $01,x
004145r 2               
004145r 2               ; <inline>:0:0 in `main`
004145r 2               @OPCODE_1982:   ; [c64_ir] Drop
004145r 2  CA               dex
004146r 2  CA               dex
004147r 2               
004147r 2               ; snake.pax:48:39 in `convert-x-y`
004147r 2               @OPCODE_1983:   ; [c64_ir] Add
004147r 2                   ; 21
004147r 2  CA               dex
004148r 2  CA               dex
004149r 2  18               clc
00414Ar 2  B5 00            lda $00,x
00414Cr 2  75 02            adc $02,x
00414Er 2  95 00            sta $00,x
004150r 2  B5 01            lda $01,x
004152r 2  75 03            adc $03,x
004154r 2  95 01            sta $01,x
004156r 2               
004156r 2               ; <inline>:0:0 in `main`
004156r 2               @OPCODE_1984:   ; [c64_ir] AltPop
004156r 2  E8               inx
004157r 2  E8               inx
004158r 2  68               pla
004159r 2  95 00            sta $00,x
00415Br 2  68               pla
00415Cr 2  95 01            sta $01,x
00415Er 2               
00415Er 2               ; <inline>:0:0 in `main`
00415Er 2               @OPCODE_1985:   ; [c64_ir] Drop
00415Er 2  CA               dex
00415Fr 2  CA               dex
004160r 2               
004160r 2               ; snake.pax:189:15 in `check-collision`
004160r 2               @OPCODE_1986:   ; [c64_ir] PushLiteral(1024)
004160r 2  E8               inx
004161r 2  E8               inx
004162r 2  A9 00            lda #0
004164r 2  95 00            sta $00,x
004166r 2  A9 04            lda #4
004168r 2  95 01            sta $01,x
00416Ar 2               
00416Ar 2               ; snake.pax:189:24 in `check-collision`
00416Ar 2               @OPCODE_1987:   ; [c64_ir] Add
00416Ar 2                   ; 21
00416Ar 2  CA               dex
00416Br 2  CA               dex
00416Cr 2  18               clc
00416Dr 2  B5 00            lda $00,x
00416Fr 2  75 02            adc $02,x
004171r 2  95 00            sta $00,x
004173r 2  B5 01            lda $01,x
004175r 2  75 03            adc $03,x
004177r 2  95 01            sta $01,x
004179r 2               
004179r 2               ; snake.pax:189:26 in `check-collision`
004179r 2               @OPCODE_1988:   ; [c64_ir] Load8
004179r 2  A1 00            lda ($00,x)
00417Br 2  95 00            sta $00,x
00417Dr 2  A9 00            lda #0
00417Fr 2  95 01            sta $01,x
004181r 2               
004181r 2               ; snake.pax:192:3 in `check-collision`
004181r 2               @OPCODE_1989:   ; [c64_ir] PushLiteral(32)
004181r 2  E8               inx
004182r 2  E8               inx
004183r 2  A9 20            lda #32
004185r 2  95 00            sta $00,x
004187r 2  A9 00            lda #0
004189r 2  95 01            sta $01,x
00418Br 2               
00418Br 2               ; src/prelude.fth:14:12 in `invert`
00418Br 2               @OPCODE_1990:   ; [c64_ir] PushLiteral(-1)
00418Br 2  E8               inx
00418Cr 2  E8               inx
00418Dr 2  A9 FF            lda #255
00418Fr 2  95 00            sta $00,x
004191r 2  A9 FF            lda #255
004193r 2  95 01            sta $01,x
004195r 2               
004195r 2               ; src/prelude.fth:14:15 in `invert`
004195r 2               @OPCODE_1991:   ; [c64_ir] Nand
004195r 2                   ; 26
004195r 2  CA               dex
004196r 2  CA               dex
004197r 2  B5 00            lda $00,x
004199r 2  35 02            and $02,x
00419Br 2  49 FF            eor #$ff
00419Dr 2  95 00            sta $00,x
00419Fr 2  B5 01            lda $01,x
0041A1r 2  35 03            and $03,x
0041A3r 2  49 FF            eor #$ff
0041A5r 2  95 01            sta $01,x
0041A7r 2               
0041A7r 2               ; src/prelude.fth:15:19 in `negate`
0041A7r 2               @OPCODE_1992:   ; [c64_ir] PushLiteral(1)
0041A7r 2  E8               inx
0041A8r 2  E8               inx
0041A9r 2  A9 01            lda #1
0041ABr 2  95 00            sta $00,x
0041ADr 2  A9 00            lda #0
0041AFr 2  95 01            sta $01,x
0041B1r 2               
0041B1r 2               ; src/prelude.fth:15:21 in `negate`
0041B1r 2               @OPCODE_1993:   ; [c64_ir] Add
0041B1r 2                   ; 21
0041B1r 2  CA               dex
0041B2r 2  CA               dex
0041B3r 2  18               clc
0041B4r 2  B5 00            lda $00,x
0041B6r 2  75 02            adc $02,x
0041B8r 2  95 00            sta $00,x
0041BAr 2  B5 01            lda $01,x
0041BCr 2  75 03            adc $03,x
0041BEr 2  95 01            sta $01,x
0041C0r 2               
0041C0r 2               ; src/prelude.fth:16:19 in `-`
0041C0r 2               @OPCODE_1994:   ; [c64_ir] Add
0041C0r 2                   ; 21
0041C0r 2  CA               dex
0041C1r 2  CA               dex
0041C2r 2  18               clc
0041C3r 2  B5 00            lda $00,x
0041C5r 2  75 02            adc $02,x
0041C7r 2  95 00            sta $00,x
0041C9r 2  B5 01            lda $01,x
0041CBr 2  75 03            adc $03,x
0041CDr 2  95 01            sta $01,x
0041CFr 2               
0041CFr 2               ; src/prelude.fth:21:8 in `0=`
0041CFr 2               @OPCODE_1995:   ; [c64_ir] JumpIf0(189)
0041CFr 2  CA               dex
0041D0r 2  CA               dex
0041D1r 2  B5 02            lda $02,x
0041D3r 2  15 03            ora $03,x
0041D5r 2  D0 03            bne *+5
0041D7r 2  4C rr rr         jmp @target_189
0041DAr 2               
0041DAr 2               @target_188:
0041DAr 2               
0041DAr 2               ; src/prelude.fth:21:11 in `0=`
0041DAr 2               @OPCODE_1997:   ; [c64_ir] PushLiteral(0)
0041DAr 2  E8               inx
0041DBr 2  E8               inx
0041DCr 2  A9 00            lda #0
0041DEr 2  95 00            sta $00,x
0041E0r 2  A9 00            lda #0
0041E2r 2  95 01            sta $01,x
0041E4r 2               
0041E4r 2               ; src/prelude.fth:21:13 in `0=`
0041E4r 2               @OPCODE_1998:   ; [c64_ir] JumpElse(190)
0041E4r 2  4C rr rr         jmp @target_190
0041E7r 2               
0041E7r 2               @target_189:
0041E7r 2               
0041E7r 2               ; src/prelude.fth:21:18 in `0=`
0041E7r 2               @OPCODE_2000:   ; [c64_ir] PushLiteral(-1)
0041E7r 2  E8               inx
0041E8r 2  E8               inx
0041E9r 2  A9 FF            lda #255
0041EBr 2  95 00            sta $00,x
0041EDr 2  A9 FF            lda #255
0041EFr 2  95 01            sta $01,x
0041F1r 2               
0041F1r 2               ; src/prelude.fth:21:21 in `0=`
0041F1r 2               @OPCODE_2001:   ; [c64_ir] JumpTarget(189)
0041F1r 2               
0041F1r 2               @target_190:
0041F1r 2               
0041F1r 2               ; <inline>:0:0 in `main`
0041F1r 2               @OPCODE_2003:   ; [c64_ir] AltPop
0041F1r 2  E8               inx
0041F2r 2  E8               inx
0041F3r 2  68               pla
0041F4r 2  95 00            sta $00,x
0041F6r 2  68               pla
0041F7r 2  95 01            sta $01,x
0041F9r 2               
0041F9r 2               ; <inline>:0:0 in `main`
0041F9r 2               @OPCODE_2004:   ; [c64_ir] Drop
0041F9r 2  CA               dex
0041FAr 2  CA               dex
0041FBr 2               
0041FBr 2               ; snake.pax:217:1 in `main`
0041FBr 2               @OPCODE_2005:   ; [c64_ir] JumpIf0(192)
0041FBr 2  CA               dex
0041FCr 2  CA               dex
0041FDr 2  B5 02            lda $02,x
0041FFr 2  15 03            ora $03,x
004201r 2  D0 03            bne *+5
004203r 2  4C rr rr         jmp @target_192
004206r 2               
004206r 2               @target_191:
004206r 2               
004206r 2               ; snake.pax:217:4 in `main`
004206r 2               @OPCODE_2007:   ; [c64_ir] JumpElse(193)
004206r 2  4C rr rr         jmp @target_193
004209r 2               
004209r 2               @target_192:
004209r 2               
004209r 2               ; snake.pax:217:9 in `main`
004209r 2               @OPCODE_2009:   ; [c64_ir] PushLiteral(0)
004209r 2  E8               inx
00420Ar 2  E8               inx
00420Br 2  A9 00            lda #0
00420Dr 2  95 00            sta $00,x
00420Fr 2  A9 00            lda #0
004211r 2  95 01            sta $01,x
004213r 2               
004213r 2               ; snake.pax:217:11 in `main`
004213r 2               @OPCODE_2010:   ; [c64_ir] PushLiteral(-28672)
004213r 2  E8               inx
004214r 2  E8               inx
004215r 2  A9 00            lda #0
004217r 2  95 00            sta $00,x
004219r 2  A9 90            lda #144
00421Br 2  95 01            sta $01,x
00421Dr 2               
00421Dr 2               ; snake.pax:217:23 in `main`
00421Dr 2               @OPCODE_2011:   ; [c64_ir] Store
00421Dr 2  CA               dex
00421Er 2  CA               dex
00421Fr 2  CA               dex
004220r 2  CA               dex
004221r 2  B5 02            lda $02,x
004223r 2  81 04            sta ($04,x)
004225r 2                   ; TODO high byte
004225r 2               
004225r 2               ; snake.pax:217:25 in `main`
004225r 2               @OPCODE_2012:   ; [c64_ir] JumpTarget(192)
004225r 2               
004225r 2               @target_193:
004225r 2               
004225r 2               ; :0:0 in ``
004225r 2               @OPCODE_2014:   ; [c64_ir] Exit
004225r 2  60               rts
004226r 2               .endproc
004226r 2               
004226r 2               
004226r 2               
004226r 2               
004226r 2               
004226r 2               ; function start
004226r 2               
004226r 2               
004226r 2               
004226r 1               

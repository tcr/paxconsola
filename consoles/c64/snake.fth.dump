( fn "draw-apple" )
    Block(0)
        PushLiteral(-26664)            // snake.fth:208:3 in `draw-apple`
        Load                           // snake.fth:208:11 in `draw-apple`
        PushLiteral(-26662)            // snake.fth:208:13 in `draw-apple`
        Load                           // snake.fth:208:21 in `draw-apple`
        Call("draw-apple-tile")        // snake.fth:208:23 in `draw-apple`
    Block(1)
        Exit                           // snake.fth:208:39 in `draw-apple`


( fn "swap" )
    Block(0)
        AltPush                        // src/prelude.fth:3:10 in `swap`
        TempStore                      // src/prelude.fth:3:13 in `swap`
        AltPop                         // src/prelude.fth:3:19 in `swap`
        TempLoad                       // src/prelude.fth:3:22 in `swap`
        Exit                           // src/prelude.fth:3:28 in `swap`


( fn "over" )
    Block(0)
        AltPush                        // src/prelude.fth:4:10 in `over`
        TempStore                      // src/prelude.fth:4:13 in `over`
        TempLoad                       // src/prelude.fth:4:19 in `over`
        AltPop                         // src/prelude.fth:4:25 in `over`
        TempLoad                       // src/prelude.fth:4:28 in `over`
        Exit                           // src/prelude.fth:4:34 in `over`


( fn "rot" )
    Block(0)
        AltPush                        // src/prelude.fth:5:10 in `rot`
        Call("swap")                   // src/prelude.fth:5:13 in `rot`
    Block(1)
        AltPop                         // src/prelude.fth:5:18 in `rot`
        Call("swap")                   // src/prelude.fth:5:21 in `rot`
    Block(2)
        Exit                           // src/prelude.fth:5:26 in `rot`


( fn "dup" )
    Block(0)
        TempStore                      // src/prelude.fth:6:10 in `dup`
        TempLoad                       // src/prelude.fth:6:16 in `dup`
        TempLoad                       // src/prelude.fth:6:22 in `dup`
        Exit                           // src/prelude.fth:6:28 in `dup`


( fn "2dup" )
    Block(0)
        Call("over")                   // src/prelude.fth:8:10 in `2dup`
    Block(1)
        Call("over")                   // src/prelude.fth:8:15 in `2dup`
    Block(2)
        Exit                           // src/prelude.fth:8:20 in `2dup`


( fn "invert" )
    Block(0)
        PushLiteral(-1)                // src/prelude.fth:14:12 in `invert`
        Nand                           // src/prelude.fth:14:15 in `invert`
        Exit                           // src/prelude.fth:14:20 in `invert`


( fn "negate" )
    Block(0)
        Call("invert")                 // src/prelude.fth:15:12 in `negate`
    Block(1)
        PushLiteral(1)                 // src/prelude.fth:15:19 in `negate`
        Add                            // src/prelude.fth:15:21 in `negate`
        Exit                           // src/prelude.fth:15:23 in `negate`


( fn "-" )
    Block(0)
        Call("negate")                 // src/prelude.fth:16:12 in `-`
    Block(1)
        Add                            // src/prelude.fth:16:19 in `-`
        Exit                           // src/prelude.fth:16:21 in `-`


( fn "1+" )
    Block(0)
        PushLiteral(1)                 // src/prelude.fth:18:8 in `1+`
        Add                            // src/prelude.fth:18:10 in `1+`
        Exit                           // src/prelude.fth:18:12 in `1+`


( fn "+!" )
    Block(0)
        Call("dup")                    // src/prelude.fth:20:8 in `+!`
    Block(1)
        AltPush                        // src/prelude.fth:20:12 in `+!`
        Load                           // src/prelude.fth:20:15 in `+!`
        Add                            // src/prelude.fth:20:17 in `+!`
        AltPop                         // src/prelude.fth:20:19 in `+!`
        Store                          // src/prelude.fth:20:22 in `+!`
        Exit                           // src/prelude.fth:20:24 in `+!`


( fn "0=" )
    Block(0)
        JumpIf0(2)                     // src/prelude.fth:21:8 in `0=`
    Block(1)
        PushLiteral(0)                 // src/prelude.fth:21:11 in `0=`
        JumpElse(3)                    // src/prelude.fth:21:13 in `0=`
    Block(2)
        PushLiteral(-1)                // src/prelude.fth:21:18 in `0=`
        JumpTarget(2)                  // src/prelude.fth:21:21 in `0=`
    Block(3)
        Exit                           // src/prelude.fth:21:26 in `0=`


( fn "=" )
    Block(0)
        Call("-")                      // src/prelude.fth:22:8 in `=`
    Block(1)
        Call("0=")                     // src/prelude.fth:22:10 in `=`
    Block(2)
        Exit                           // src/prelude.fth:22:13 in `=`


( fn "or" )
    Block(0)
        Call("invert")                 // src/prelude.fth:26:8 in `or`
    Block(1)
        Call("swap")                   // src/prelude.fth:26:15 in `or`
    Block(2)
        Call("invert")                 // src/prelude.fth:26:20 in `or`
    Block(3)
        Nand                           // src/prelude.fth:26:27 in `or`
        Exit                           // src/prelude.fth:26:32 in `or`


( fn "and" )
    Block(0)
        Nand                           // src/prelude.fth:28:9 in `and`
        Call("invert")                 // src/prelude.fth:28:14 in `and`
    Block(1)
        Exit                           // src/prelude.fth:28:21 in `and`


( fn "loopimpl" )
    Block(0)
        AltPop                         // src/prelude.fth:33:12 in `loopimpl`
        AltPop                         // src/prelude.fth:33:15 in `loopimpl`
        AltPop                         // src/prelude.fth:33:18 in `loopimpl`
        Call("1+")                     // src/prelude.fth:33:21 in `loopimpl`
    Block(1)
        Call("2dup")                   // src/prelude.fth:33:24 in `loopimpl`
    Block(2)
        AltPush                        // src/prelude.fth:33:29 in `loopimpl`
        AltPush                        // src/prelude.fth:33:32 in `loopimpl`
        Call("=")                      // src/prelude.fth:33:35 in `loopimpl`
    Block(3)
        Call("swap")                   // src/prelude.fth:33:37 in `loopimpl`
    Block(4)
        AltPush                        // src/prelude.fth:33:42 in `loopimpl`
        Exit                           // src/prelude.fth:33:45 in `loopimpl`


( fn "-loopimpl" )
    Block(0)
        AltPop                         // src/prelude.fth:35:13 in `-loopimpl`
        Call("swap")                   // src/prelude.fth:35:16 in `-loopimpl`
    Block(1)
        AltPop                         // src/prelude.fth:35:21 in `-loopimpl`
        Call("swap")                   // src/prelude.fth:35:24 in `-loopimpl`
    Block(2)
        AltPop                         // src/prelude.fth:35:29 in `-loopimpl`
        Call("swap")                   // src/prelude.fth:35:32 in `-loopimpl`
    Block(3)
        Call("-")                      // src/prelude.fth:35:37 in `-loopimpl`
    Block(4)
        Call("2dup")                   // src/prelude.fth:35:39 in `-loopimpl`
    Block(5)
        AltPush                        // src/prelude.fth:35:44 in `-loopimpl`
        AltPush                        // src/prelude.fth:35:47 in `-loopimpl`
        Call("=")                      // src/prelude.fth:35:50 in `-loopimpl`
    Block(6)
        Call("swap")                   // src/prelude.fth:35:52 in `-loopimpl`
    Block(7)
        AltPush                        // src/prelude.fth:35:57 in `-loopimpl`
        Exit                           // src/prelude.fth:35:60 in `-loopimpl`


( fn "i" )
    Block(0)
        AltPop                         // src/prelude.fth:38:5 in `i`
        AltPop                         // src/prelude.fth:38:8 in `i`
        AltPop                         // src/prelude.fth:38:11 in `i`
        TempStore                      // src/prelude.fth:38:14 in `i`
        TempLoad                       // src/prelude.fth:38:20 in `i`
        AltPush                        // src/prelude.fth:38:26 in `i`
        AltPush                        // src/prelude.fth:38:29 in `i`
        AltPush                        // src/prelude.fth:38:32 in `i`
        TempLoad                       // src/prelude.fth:38:35 in `i`
        Exit                           // src/prelude.fth:38:41 in `i`


( fn "cells" )
    Block(0)
        Call("dup")                    // src/prelude.fth:41:9 in `cells`
    Block(1)
        Add                            // src/prelude.fth:41:13 in `cells`
        Exit                           // src/prelude.fth:41:15 in `cells`


( fn "*" )
    Block(0)
        AltPush                        // src/prelude.fth:44:5 in `*`
        PushLiteral(0)                 // src/prelude.fth:44:8 in `*`
        AltPop                         // src/prelude.fth:44:10 in `*`
        PushLiteral(0)                 // src/prelude.fth:44:13 in `*`
        AltPush                        // src/prelude.fth:44:15 in `*`
        AltPush                        // src/prelude.fth:44:15 in `*`
        LoopTarget(0)                  // src/prelude.fth:44:15 in `*`
    Block(1)
        Call("over")                   // src/prelude.fth:44:18 in `*`
    Block(2)
        Add                            // src/prelude.fth:44:23 in `*`
        Call("loopimpl")               // src/prelude.fth:44:25 in `*`
    Block(3)
        LoopIf0(1)                     // src/prelude.fth:44:25 in `*`
    Block(4)
        AltPop                         // src/prelude.fth:44:25 in `*`
        Drop                           // src/prelude.fth:44:25 in `*`
        AltPop                         // src/prelude.fth:44:25 in `*`
        Drop                           // src/prelude.fth:44:25 in `*`
        Call("swap")                   // src/prelude.fth:44:30 in `*`
    Block(5)
        Drop                           // src/prelude.fth:44:35 in `*`
        Exit                           // src/prelude.fth:44:40 in `*`


( fn "0<" )
    Block(0)
        PushLiteral(-32768)            // src/prelude.fth:47:8 in `0<`
        Nand                           // src/prelude.fth:47:14 in `0<`
        Call("invert")                 // src/prelude.fth:47:19 in `0<`
    Block(1)
        JumpIf0(3)                     // src/prelude.fth:47:26 in `0<`
    Block(2)
        PushLiteral(-1)                // src/prelude.fth:47:29 in `0<`
        JumpElse(4)                    // src/prelude.fth:47:32 in `0<`
    Block(3)
        PushLiteral(0)                 // src/prelude.fth:47:37 in `0<`
        JumpTarget(3)                  // src/prelude.fth:47:39 in `0<`
    Block(4)
        Exit                           // src/prelude.fth:47:44 in `0<`


( fn "%" )
    Block(0)
        LoopTarget(0)                  // src/prelude.fth:48:34 in `%`
    Block(1)
        Call("2dup")                   // src/prelude.fth:48:40 in `%`
    Block(2)
        Call("-")                      // src/prelude.fth:48:45 in `%`
    Block(3)
        Call("dup")                    // src/prelude.fth:48:47 in `%`
    Block(4)
        Call("0<")                     // src/prelude.fth:48:51 in `%`
    Block(5)
        JumpIf0(7)                     // src/prelude.fth:48:54 in `%`
    Block(6)
        Add                            // src/prelude.fth:48:57 in `%`
        PushLiteral(-1)                // src/prelude.fth:48:59 in `%`
        JumpElse(10)                   // src/prelude.fth:48:62 in `%`
    Block(7)
        Call("rot")                    // src/prelude.fth:48:67 in `%`
    Block(8)
        Drop                           // src/prelude.fth:48:71 in `%`
        Call("swap")                   // src/prelude.fth:48:76 in `%`
    Block(9)
        PushLiteral(0)                 // src/prelude.fth:48:81 in `%`
        JumpTarget(9)                  // src/prelude.fth:48:83 in `%`
    Block(10)
        LoopIf0(1)                     // src/prelude.fth:48:88 in `%`
    Block(11)
        Call("swap")                   // src/prelude.fth:48:94 in `%`
    Block(12)
        Drop                           // src/prelude.fth:48:99 in `%`
        Exit                           // src/prelude.fth:48:104 in `%`


( fn "random" )
    Block(0)
        PushLiteral(127)               // snake.fth:8:10 in `random`
        Load                           // snake.fth:8:26 in `random`
        PushLiteral(255)               // snake.fth:8:28 in `random`
        Call("and")                    // snake.fth:8:32 in `random`
    Block(1)
        Call("swap")                   // snake.fth:8:36 in `random`
    Block(2)
        Call("%")                      // snake.fth:8:41 in `random`
    Block(3)
        Exit                           // snake.fth:8:43 in `random`


( fn "snake-x" )
    Block(0)
        Call("cells")                  // snake.fth:42:3 in `snake-x`
    Block(1)
        PushLiteral(-28668)            // snake.fth:42:9 in `snake-x`
        Add                            // snake.fth:42:22 in `snake-x`
        Exit                           // snake.fth:42:24 in `snake-x`


( fn "snake-y" )
    Block(0)
        Call("cells")                  // snake.fth:45:3 in `snake-y`
    Block(1)
        PushLiteral(-27666)            // snake.fth:45:9 in `snake-y`
        Add                            // snake.fth:45:22 in `snake-y`
        Exit                           // snake.fth:45:24 in `snake-y`


( fn "convert-x-y" )
    Block(0)
        PushLiteral(40)                // snake.fth:48:34 in `convert-x-y`
        Call("*")                      // snake.fth:48:37 in `convert-x-y`
    Block(1)
        Add                            // snake.fth:48:39 in `convert-x-y`
        Exit                           // snake.fth:48:41 in `convert-x-y`


( fn "draw-index" )
    Block(0)
        PushLiteral(1024)              // snake.fth:49:34 in `draw-index`
        Add                            // snake.fth:49:43 in `draw-index`
        Store8                         // snake.fth:49:45 in `draw-index`
        Exit                           // snake.fth:49:48 in `draw-index`


( fn "draw" )
    Block(0)
        Call("convert-x-y")            // snake.fth:50:26 in `draw`
    Block(1)
        Call("draw-index")             // snake.fth:50:38 in `draw`
    Block(2)
        Exit                           // snake.fth:50:49 in `draw`


( fn "draw-white" )
    Block(0)
        PushLiteral(32)                // snake.fth:51:26 in `draw-white`
        Call("rot")                    // snake.fth:51:38 in `draw-white`
    Block(1)
        Call("rot")                    // snake.fth:51:42 in `draw-white`
    Block(2)
        Call("draw")                   // snake.fth:51:46 in `draw-white`
    Block(3)
        Exit                           // snake.fth:51:51 in `draw-white`


( fn "draw-snake-tile" )
    Block(0)
        PushLiteral(232)               // snake.fth:53:31 in `draw-snake-tile`
        Call("rot")                    // snake.fth:53:36 in `draw-snake-tile`
    Block(1)
        Call("rot")                    // snake.fth:53:40 in `draw-snake-tile`
    Block(2)
        Call("draw")                   // snake.fth:53:44 in `draw-snake-tile`
    Block(3)
        Exit                           // snake.fth:53:49 in `draw-snake-tile`


( fn "draw-apple-tile" )
    Block(0)
        PushLiteral(233)               // snake.fth:54:31 in `draw-apple-tile`
        Call("rot")                    // snake.fth:54:36 in `draw-apple-tile`
    Block(1)
        Call("rot")                    // snake.fth:54:40 in `draw-apple-tile`
    Block(2)
        Call("draw")                   // snake.fth:54:44 in `draw-apple-tile`
    Block(3)
        Exit                           // snake.fth:54:49 in `draw-apple-tile`


( fn "draw-background" )
    Block(0)
        PushLiteral(0)                 // snake.fth:57:5 in `draw-background`
        PushLiteral(25)                // snake.fth:58:5 in `draw-background`
        PushLiteral(0)                 // snake.fth:58:12 in `draw-background`
        AltPush                        // snake.fth:58:14 in `draw-background`
        AltPush                        // snake.fth:58:14 in `draw-background`
        LoopTarget(0)                  // snake.fth:58:14 in `draw-background`
    Block(1)
        PushLiteral(40)                // snake.fth:59:9 in `draw-background`
        PushLiteral(0)                 // snake.fth:59:15 in `draw-background`
        AltPush                        // snake.fth:59:17 in `draw-background`
        AltPush                        // snake.fth:59:17 in `draw-background`
        LoopTarget(1)                  // snake.fth:59:17 in `draw-background`
    Block(2)
        PushLiteral(32)                // snake.fth:60:13 in `draw-background`
        Call("over")                   // snake.fth:60:25 in `draw-background`
    Block(3)
        Call("i")                      // snake.fth:60:30 in `draw-background`
    Block(4)
        Add                            // snake.fth:60:32 in `draw-background`
        Call("draw-index")             // snake.fth:60:34 in `draw-background`
    Block(5)
        Call("loopimpl")               // snake.fth:61:9 in `draw-background`
    Block(6)
        LoopIf0(2)                     // snake.fth:61:9 in `draw-background`
    Block(7)
        AltPop                         // snake.fth:61:9 in `draw-background`
        Drop                           // snake.fth:61:9 in `draw-background`
        AltPop                         // snake.fth:61:9 in `draw-background`
        Drop                           // snake.fth:61:9 in `draw-background`
        PushLiteral(40)                // snake.fth:62:9 in `draw-background`
        Add                            // snake.fth:62:15 in `draw-background`
        Call("loopimpl")               // snake.fth:63:4 in `draw-background`
    Block(8)
        LoopIf0(1)                     // snake.fth:63:4 in `draw-background`
    Block(9)
        AltPop                         // snake.fth:63:4 in `draw-background`
        Drop                           // snake.fth:63:4 in `draw-background`
        AltPop                         // snake.fth:63:4 in `draw-background`
        Drop                           // snake.fth:63:4 in `draw-background`
        Drop                           // snake.fth:64:4 in `draw-background`
        Exit                           // snake.fth:65:4 in `draw-background`


( fn "draw-walls" )
    Block(0)
        PushLiteral(40)                // snake.fth:69:5 in `draw-walls`
        PushLiteral(25)                // snake.fth:69:11 in `draw-walls`
        PushLiteral(1)                 // snake.fth:69:18 in `draw-walls`
        Call("-")                      // snake.fth:69:20 in `draw-walls`
    Block(1)
        Call("*")                      // snake.fth:69:22 in `draw-walls`
    Block(2)
        PushLiteral(40)                // snake.fth:70:5 in `draw-walls`
        PushLiteral(0)                 // snake.fth:70:11 in `draw-walls`
        AltPush                        // snake.fth:70:13 in `draw-walls`
        AltPush                        // snake.fth:70:13 in `draw-walls`
        LoopTarget(2)                  // snake.fth:70:13 in `draw-walls`
    Block(3)
        PushLiteral(230)               // snake.fth:71:9 in `draw-walls`
        Call("over")                   // snake.fth:71:14 in `draw-walls`
    Block(4)
        Call("i")                      // snake.fth:71:19 in `draw-walls`
    Block(5)
        Add                            // snake.fth:71:21 in `draw-walls`
        Call("draw-index")             // snake.fth:71:23 in `draw-walls`
    Block(6)
        Call("loopimpl")               // snake.fth:72:5 in `draw-walls`
    Block(7)
        LoopIf0(3)                     // snake.fth:72:5 in `draw-walls`
    Block(8)
        AltPop                         // snake.fth:72:5 in `draw-walls`
        Drop                           // snake.fth:72:5 in `draw-walls`
        AltPop                         // snake.fth:72:5 in `draw-walls`
        Drop                           // snake.fth:72:5 in `draw-walls`
        Drop                           // snake.fth:73:5 in `draw-walls`
        PushLiteral(40)                // snake.fth:76:5 in `draw-walls`
        PushLiteral(0)                 // snake.fth:76:11 in `draw-walls`
        AltPush                        // snake.fth:76:13 in `draw-walls`
        AltPush                        // snake.fth:76:13 in `draw-walls`
        LoopTarget(8)                  // snake.fth:76:13 in `draw-walls`
    Block(9)
        PushLiteral(230)               // snake.fth:77:9 in `draw-walls`
        Call("i")                      // snake.fth:77:14 in `draw-walls`
    Block(10)
        Call("draw-index")             // snake.fth:77:16 in `draw-walls`
    Block(11)
        Call("loopimpl")               // snake.fth:78:5 in `draw-walls`
    Block(12)
        LoopIf0(9)                     // snake.fth:78:5 in `draw-walls`
    Block(13)
        AltPop                         // snake.fth:78:5 in `draw-walls`
        Drop                           // snake.fth:78:5 in `draw-walls`
        AltPop                         // snake.fth:78:5 in `draw-walls`
        Drop                           // snake.fth:78:5 in `draw-walls`
        PushLiteral(40)                // snake.fth:81:5 in `draw-walls`
        PushLiteral(1)                 // snake.fth:81:11 in `draw-walls`
        Call("-")                      // snake.fth:81:13 in `draw-walls`
    Block(14)
        PushLiteral(25)                // snake.fth:82:5 in `draw-walls`
        PushLiteral(0)                 // snake.fth:82:12 in `draw-walls`
        AltPush                        // snake.fth:82:14 in `draw-walls`
        AltPush                        // snake.fth:82:14 in `draw-walls`
        LoopTarget(14)                 // snake.fth:82:14 in `draw-walls`
    Block(15)
        PushLiteral(230)               // snake.fth:83:9 in `draw-walls`
        Call("over")                   // snake.fth:83:14 in `draw-walls`
    Block(16)
        Call("draw-index")             // snake.fth:83:19 in `draw-walls`
    Block(17)
        PushLiteral(40)                // snake.fth:84:9 in `draw-walls`
        Add                            // snake.fth:84:15 in `draw-walls`
        Call("loopimpl")               // snake.fth:85:5 in `draw-walls`
    Block(18)
        LoopIf0(15)                    // snake.fth:85:5 in `draw-walls`
    Block(19)
        AltPop                         // snake.fth:85:5 in `draw-walls`
        Drop                           // snake.fth:85:5 in `draw-walls`
        AltPop                         // snake.fth:85:5 in `draw-walls`
        Drop                           // snake.fth:85:5 in `draw-walls`
        Drop                           // snake.fth:86:5 in `draw-walls`
        PushLiteral(0)                 // snake.fth:89:5 in `draw-walls`
        PushLiteral(25)                // snake.fth:90:5 in `draw-walls`
        PushLiteral(0)                 // snake.fth:90:12 in `draw-walls`
        AltPush                        // snake.fth:90:14 in `draw-walls`
        AltPush                        // snake.fth:90:14 in `draw-walls`
        LoopTarget(19)                 // snake.fth:90:14 in `draw-walls`
    Block(20)
        PushLiteral(230)               // snake.fth:91:9 in `draw-walls`
        Call("over")                   // snake.fth:91:14 in `draw-walls`
    Block(21)
        Call("draw-index")             // snake.fth:91:19 in `draw-walls`
    Block(22)
        PushLiteral(40)                // snake.fth:92:9 in `draw-walls`
        Add                            // snake.fth:92:15 in `draw-walls`
        Call("loopimpl")               // snake.fth:93:5 in `draw-walls`
    Block(23)
        LoopIf0(20)                    // snake.fth:93:5 in `draw-walls`
    Block(24)
        AltPop                         // snake.fth:93:5 in `draw-walls`
        Drop                           // snake.fth:93:5 in `draw-walls`
        AltPop                         // snake.fth:93:5 in `draw-walls`
        Drop                           // snake.fth:93:5 in `draw-walls`
        Drop                           // snake.fth:94:5 in `draw-walls`
        Exit                           // snake.fth:95:5 in `draw-walls`


( fn "initialize-snake" )
    Block(0)
        PushLiteral(16)                // snake.fth:98:3 in `initialize-snake`
        PushLiteral(-26658)            // snake.fth:98:6 in `initialize-snake`
        Store                          // snake.fth:98:13 in `initialize-snake`
        PushLiteral(-26658)            // snake.fth:99:3 in `initialize-snake`
        Load                           // snake.fth:99:10 in `initialize-snake`
        PushLiteral(1)                 // snake.fth:99:12 in `initialize-snake`
        Add                            // snake.fth:99:14 in `initialize-snake`
        PushLiteral(0)                 // snake.fth:99:16 in `initialize-snake`
        AltPush                        // snake.fth:99:18 in `initialize-snake`
        AltPush                        // snake.fth:99:18 in `initialize-snake`
        LoopTarget(0)                  // snake.fth:99:18 in `initialize-snake`
    Block(1)
        PushLiteral(8)                 // snake.fth:100:5 in `initialize-snake`
        Call("i")                      // snake.fth:100:7 in `initialize-snake`
    Block(2)
        Call("-")                      // snake.fth:100:9 in `initialize-snake`
    Block(3)
        Call("i")                      // snake.fth:100:11 in `initialize-snake`
    Block(4)
        Call("snake-x")                // snake.fth:100:13 in `initialize-snake`
    Block(5)
        Store                          // snake.fth:100:21 in `initialize-snake`
        PushLiteral(8)                 // snake.fth:101:5 in `initialize-snake`
        Call("i")                      // snake.fth:101:7 in `initialize-snake`
    Block(6)
        Call("snake-y")                // snake.fth:101:9 in `initialize-snake`
    Block(7)
        Store                          // snake.fth:101:17 in `initialize-snake`
        Call("loopimpl")               // snake.fth:102:3 in `initialize-snake`
    Block(8)
        LoopIf0(1)                     // snake.fth:102:3 in `initialize-snake`
    Block(9)
        AltPop                         // snake.fth:102:3 in `initialize-snake`
        Drop                           // snake.fth:102:3 in `initialize-snake`
        AltPop                         // snake.fth:102:3 in `initialize-snake`
        Drop                           // snake.fth:102:3 in `initialize-snake`
        PushLiteral(39)                // snake.fth:103:3 in `initialize-snake`
        PushLiteral(-26660)            // snake.fth:103:9 in `initialize-snake`
        Store                          // snake.fth:103:19 in `initialize-snake`
        Exit                           // snake.fth:103:21 in `initialize-snake`


( fn "set-apple-position" )
    Block(0)
        PushLiteral(-26664)            // snake.fth:105:22 in `set-apple-position`
        Store                          // snake.fth:105:30 in `set-apple-position`
        PushLiteral(-26662)            // snake.fth:105:32 in `set-apple-position`
        Store                          // snake.fth:105:40 in `set-apple-position`
        Exit                           // snake.fth:105:42 in `set-apple-position`


( fn "initialize-apple" )
    Block(0)
        PushLiteral(8)                 // snake.fth:107:21 in `initialize-apple`
        PushLiteral(13)                // snake.fth:107:23 in `initialize-apple`
        Call("set-apple-position")     // snake.fth:107:26 in `initialize-apple`
    Block(1)
        Exit                           // snake.fth:107:45 in `initialize-apple`


( fn "draw-full-snake" )
    Block(0)
        PushLiteral(-26658)            // snake.fth:110:3 in `draw-full-snake`
        Load                           // snake.fth:110:10 in `draw-full-snake`
        PushLiteral(0)                 // snake.fth:110:12 in `draw-full-snake`
        AltPush                        // snake.fth:110:14 in `draw-full-snake`
        AltPush                        // snake.fth:110:14 in `draw-full-snake`
        LoopTarget(0)                  // snake.fth:110:14 in `draw-full-snake`
    Block(1)
        Call("i")                      // snake.fth:111:5 in `draw-full-snake`
    Block(2)
        Call("snake-x")                // snake.fth:111:7 in `draw-full-snake`
    Block(3)
        Load                           // snake.fth:111:15 in `draw-full-snake`
        Call("i")                      // snake.fth:111:17 in `draw-full-snake`
    Block(4)
        Call("snake-y")                // snake.fth:111:19 in `draw-full-snake`
    Block(5)
        Load                           // snake.fth:111:27 in `draw-full-snake`
        Call("draw-snake-tile")        // snake.fth:111:29 in `draw-full-snake`
    Block(6)
        Call("loopimpl")               // snake.fth:112:3 in `draw-full-snake`
    Block(7)
        LoopIf0(1)                     // snake.fth:112:3 in `draw-full-snake`
    Block(8)
        AltPop                         // snake.fth:112:3 in `draw-full-snake`
        Drop                           // snake.fth:112:3 in `draw-full-snake`
        AltPop                         // snake.fth:112:3 in `draw-full-snake`
        Drop                           // snake.fth:112:3 in `draw-full-snake`
        Exit                           // snake.fth:113:3 in `draw-full-snake`


( fn "initialize" )
    Block(0)
        Call("draw-background")        // snake.fth:116:3 in `initialize`
    Block(1)
        Call("draw-walls")             // snake.fth:117:3 in `initialize`
    Block(2)
        Call("initialize-snake")       // snake.fth:118:3 in `initialize`
    Block(3)
        Call("initialize-apple")       // snake.fth:119:3 in `initialize`
    Block(4)
        Call("draw-full-snake")        // snake.fth:120:3 in `initialize`
    Block(5)
        Exit                           // snake.fth:121:3 in `initialize`


( fn "move-up" )
    Block(0)
        PushLiteral(-1)                // snake.fth:126:12 in `move-up`
        PushLiteral(-27666)            // snake.fth:126:15 in `move-up`
        Call("+!")                     // snake.fth:126:28 in `move-up`
    Block(1)
        Exit                           // snake.fth:126:31 in `move-up`


( fn "move-left" )
    Block(0)
        PushLiteral(-1)                // snake.fth:127:14 in `move-left`
        PushLiteral(-28668)            // snake.fth:127:17 in `move-left`
        Call("+!")                     // snake.fth:127:30 in `move-left`
    Block(1)
        Exit                           // snake.fth:127:33 in `move-left`


( fn "move-down" )
    Block(0)
        PushLiteral(1)                 // snake.fth:128:14 in `move-down`
        PushLiteral(-27666)            // snake.fth:128:16 in `move-down`
        Call("+!")                     // snake.fth:128:29 in `move-down`
    Block(1)
        Exit                           // snake.fth:128:32 in `move-down`


( fn "move-right" )
    Block(0)
        PushLiteral(1)                 // snake.fth:129:15 in `move-right`
        PushLiteral(-28668)            // snake.fth:129:17 in `move-right`
        Call("+!")                     // snake.fth:129:30 in `move-right`
    Block(1)
        Exit                           // snake.fth:129:33 in `move-right`


( fn "move-snake-head" )
    Block(0)
        PushLiteral(-26660)            // snake.fth:131:20 in `move-snake-head`
        Load                           // snake.fth:131:30 in `move-snake-head`
        PushLiteral(37)                // snake.fth:132:3 in `move-snake-head`
        Call("over")                   // snake.fth:132:8 in `move-snake-head`
    Block(1)
        Call("=")                      // snake.fth:132:14 in `move-snake-head`
    Block(2)
        JumpIf0(5)                     // snake.fth:132:16 in `move-snake-head`
    Block(3)
        Call("move-left")              // snake.fth:132:19 in `move-snake-head`
    Block(4)
        JumpElse(23)                   // snake.fth:132:29 in `move-snake-head`
    Block(5)
        PushLiteral(38)                // snake.fth:133:3 in `move-snake-head`
        Call("over")                   // snake.fth:133:6 in `move-snake-head`
    Block(6)
        Call("=")                      // snake.fth:133:14 in `move-snake-head`
    Block(7)
        JumpIf0(10)                    // snake.fth:133:16 in `move-snake-head`
    Block(8)
        Call("move-up")                // snake.fth:133:19 in `move-snake-head`
    Block(9)
        JumpElse(22)                   // snake.fth:133:27 in `move-snake-head`
    Block(10)
        PushLiteral(39)                // snake.fth:134:3 in `move-snake-head`
        Call("over")                   // snake.fth:134:9 in `move-snake-head`
    Block(11)
        Call("=")                      // snake.fth:134:14 in `move-snake-head`
    Block(12)
        JumpIf0(15)                    // snake.fth:134:16 in `move-snake-head`
    Block(13)
        Call("move-right")             // snake.fth:134:19 in `move-snake-head`
    Block(14)
        JumpElse(21)                   // snake.fth:134:30 in `move-snake-head`
    Block(15)
        PushLiteral(40)                // snake.fth:135:3 in `move-snake-head`
        Call("over")                   // snake.fth:135:8 in `move-snake-head`
    Block(16)
        Call("=")                      // snake.fth:135:14 in `move-snake-head`
    Block(17)
        JumpIf0(20)                    // snake.fth:135:16 in `move-snake-head`
    Block(18)
        Call("move-down")              // snake.fth:135:19 in `move-snake-head`
    Block(19)
        JumpTarget(19)                 // snake.fth:136:3 in `move-snake-head`
    Block(20)
        JumpTarget(20)                 // snake.fth:136:8 in `move-snake-head`
    Block(21)
        JumpTarget(21)                 // snake.fth:136:13 in `move-snake-head`
    Block(22)
        JumpTarget(22)                 // snake.fth:136:18 in `move-snake-head`
    Block(23)
        Drop                           // snake.fth:136:23 in `move-snake-head`
        Exit                           // snake.fth:136:28 in `move-snake-head`


( fn "move-snake-tail" )
    Block(0)
        PushLiteral(-1)                // snake.fth:140:3 in `move-snake-tail`
        PushLiteral(-26658)            // snake.fth:140:6 in `move-snake-tail`
        Load                           // snake.fth:140:13 in `move-snake-tail`
        AltPush                        // snake.fth:140:15 in `move-snake-tail`
        AltPush                        // snake.fth:140:15 in `move-snake-tail`
        LoopTarget(0)                  // snake.fth:140:15 in `move-snake-tail`
    Block(1)
        Call("i")                      // snake.fth:141:7 in `move-snake-tail`
    Block(2)
        Drop                           // snake.fth:141:9 in `move-snake-tail`
        Call("i")                      // snake.fth:141:14 in `move-snake-tail`
    Block(3)
        Call("snake-x")                // snake.fth:141:16 in `move-snake-tail`
    Block(4)
        Load                           // snake.fth:141:24 in `move-snake-tail`
        Call("i")                      // snake.fth:141:26 in `move-snake-tail`
    Block(5)
        PushLiteral(1)                 // snake.fth:141:28 in `move-snake-tail`
        Add                            // snake.fth:141:30 in `move-snake-tail`
        Call("snake-x")                // snake.fth:141:32 in `move-snake-tail`
    Block(6)
        Store                          // snake.fth:141:40 in `move-snake-tail`
        Call("i")                      // snake.fth:142:7 in `move-snake-tail`
    Block(7)
        Call("snake-y")                // snake.fth:142:9 in `move-snake-tail`
    Block(8)
        Load                           // snake.fth:142:17 in `move-snake-tail`
        Call("i")                      // snake.fth:142:19 in `move-snake-tail`
    Block(9)
        PushLiteral(1)                 // snake.fth:142:21 in `move-snake-tail`
        Add                            // snake.fth:142:23 in `move-snake-tail`
        Call("snake-y")                // snake.fth:142:25 in `move-snake-tail`
    Block(10)
        Store                          // snake.fth:142:33 in `move-snake-tail`
        PushLiteral(1)                 // snake.fth:143:3 in `move-snake-tail`
        Call("-loopimpl")              // snake.fth:143:5 in `move-snake-tail`
    Block(11)
        LoopIf0(1)                     // snake.fth:143:5 in `move-snake-tail`
    Block(12)
        AltPop                         // snake.fth:143:5 in `move-snake-tail`
        Drop                           // snake.fth:143:5 in `move-snake-tail`
        AltPop                         // snake.fth:143:5 in `move-snake-tail`
        Drop                           // snake.fth:143:5 in `move-snake-tail`
        Exit                           // snake.fth:144:3 in `move-snake-tail`


( fn "is-horizontal" )
    Block(0)
        PushLiteral(-26660)            // snake.fth:146:18 in `is-horizontal`
        Load                           // snake.fth:146:28 in `is-horizontal`
        Call("dup")                    // snake.fth:146:30 in `is-horizontal`
    Block(1)
        PushLiteral(37)                // snake.fth:147:3 in `is-horizontal`
        Call("=")                      // snake.fth:147:8 in `is-horizontal`
    Block(2)
        Call("swap")                   // snake.fth:147:10 in `is-horizontal`
    Block(3)
        PushLiteral(39)                // snake.fth:148:3 in `is-horizontal`
        Call("=")                      // snake.fth:148:9 in `is-horizontal`
    Block(4)
        Call("or")                     // snake.fth:148:11 in `is-horizontal`
    Block(5)
        Exit                           // snake.fth:148:14 in `is-horizontal`


( fn "is-vertical" )
    Block(0)
        PushLiteral(-26660)            // snake.fth:150:16 in `is-vertical`
        Load                           // snake.fth:150:26 in `is-vertical`
        Call("dup")                    // snake.fth:150:28 in `is-vertical`
    Block(1)
        PushLiteral(38)                // snake.fth:151:3 in `is-vertical`
        Call("=")                      // snake.fth:151:6 in `is-vertical`
    Block(2)
        Call("swap")                   // snake.fth:151:8 in `is-vertical`
    Block(3)
        PushLiteral(40)                // snake.fth:152:3 in `is-vertical`
        Call("=")                      // snake.fth:152:8 in `is-vertical`
    Block(4)
        Call("or")                     // snake.fth:152:10 in `is-vertical`
    Block(5)
        Exit                           // snake.fth:152:13 in `is-vertical`


( fn "turn-up" )
    Block(0)
        Call("is-horizontal")          // snake.fth:154:15 in `turn-up`
    Block(1)
        JumpIf0(3)                     // snake.fth:154:29 in `turn-up`
    Block(2)
        PushLiteral(38)                // snake.fth:154:32 in `turn-up`
        PushLiteral(-26660)            // snake.fth:154:35 in `turn-up`
        Store                          // snake.fth:154:45 in `turn-up`
        JumpTarget(2)                  // snake.fth:154:47 in `turn-up`
    Block(3)
        Exit                           // snake.fth:154:52 in `turn-up`


( fn "turn-left" )
    Block(0)
        Call("is-vertical")            // snake.fth:155:15 in `turn-left`
    Block(1)
        JumpIf0(3)                     // snake.fth:155:27 in `turn-left`
    Block(2)
        PushLiteral(37)                // snake.fth:155:30 in `turn-left`
        PushLiteral(-26660)            // snake.fth:155:35 in `turn-left`
        Store                          // snake.fth:155:45 in `turn-left`
        JumpTarget(2)                  // snake.fth:155:47 in `turn-left`
    Block(3)
        Exit                           // snake.fth:155:52 in `turn-left`


( fn "turn-down" )
    Block(0)
        Call("is-horizontal")          // snake.fth:156:15 in `turn-down`
    Block(1)
        JumpIf0(3)                     // snake.fth:156:29 in `turn-down`
    Block(2)
        PushLiteral(40)                // snake.fth:156:32 in `turn-down`
        PushLiteral(-26660)            // snake.fth:156:37 in `turn-down`
        Store                          // snake.fth:156:47 in `turn-down`
        JumpTarget(2)                  // snake.fth:156:49 in `turn-down`
    Block(3)
        Exit                           // snake.fth:156:54 in `turn-down`


( fn "turn-right" )
    Block(0)
        Call("is-vertical")            // snake.fth:157:15 in `turn-right`
    Block(1)
        JumpIf0(3)                     // snake.fth:157:27 in `turn-right`
    Block(2)
        PushLiteral(39)                // snake.fth:157:30 in `turn-right`
        PushLiteral(-26660)            // snake.fth:157:36 in `turn-right`
        Store                          // snake.fth:157:46 in `turn-right`
        JumpTarget(2)                  // snake.fth:157:48 in `turn-right`
    Block(3)
        Exit                           // snake.fth:157:53 in `turn-right`


( fn "change-direction" )
    Block(0)
        PushLiteral(37)                // snake.fth:160:3 in `change-direction`
        Call("over")                   // snake.fth:160:8 in `change-direction`
    Block(1)
        Call("=")                      // snake.fth:160:13 in `change-direction`
    Block(2)
        JumpIf0(5)                     // snake.fth:160:15 in `change-direction`
    Block(3)
        Call("turn-left")              // snake.fth:160:18 in `change-direction`
    Block(4)
        JumpElse(23)                   // snake.fth:160:28 in `change-direction`
    Block(5)
        PushLiteral(38)                // snake.fth:161:3 in `change-direction`
        Call("over")                   // snake.fth:161:6 in `change-direction`
    Block(6)
        Call("=")                      // snake.fth:161:11 in `change-direction`
    Block(7)
        JumpIf0(10)                    // snake.fth:161:13 in `change-direction`
    Block(8)
        Call("turn-up")                // snake.fth:161:16 in `change-direction`
    Block(9)
        JumpElse(22)                   // snake.fth:161:24 in `change-direction`
    Block(10)
        PushLiteral(39)                // snake.fth:162:3 in `change-direction`
        Call("over")                   // snake.fth:162:9 in `change-direction`
    Block(11)
        Call("=")                      // snake.fth:162:14 in `change-direction`
    Block(12)
        JumpIf0(15)                    // snake.fth:162:16 in `change-direction`
    Block(13)
        Call("turn-right")             // snake.fth:162:19 in `change-direction`
    Block(14)
        JumpElse(21)                   // snake.fth:162:30 in `change-direction`
    Block(15)
        PushLiteral(40)                // snake.fth:163:3 in `change-direction`
        Call("over")                   // snake.fth:163:8 in `change-direction`
    Block(16)
        Call("=")                      // snake.fth:163:13 in `change-direction`
    Block(17)
        JumpIf0(20)                    // snake.fth:163:15 in `change-direction`
    Block(18)
        Call("turn-down")              // snake.fth:163:18 in `change-direction`
    Block(19)
        JumpTarget(19)                 // snake.fth:164:3 in `change-direction`
    Block(20)
        JumpTarget(20)                 // snake.fth:164:8 in `change-direction`
    Block(21)
        JumpTarget(21)                 // snake.fth:164:13 in `change-direction`
    Block(22)
        JumpTarget(22)                 // snake.fth:164:18 in `change-direction`
    Block(23)
        Drop                           // snake.fth:164:23 in `change-direction`
        Exit                           // snake.fth:164:28 in `change-direction`


( fn "check-input" )
    Block(0)
        PushLiteral(126)               // snake.fth:167:3 in `check-input`
        Load                           // snake.fth:167:12 in `check-input`
        Call("change-direction")       // snake.fth:167:14 in `check-input`
    Block(1)
        PushLiteral(0)                 // snake.fth:168:3 in `check-input`
        PushLiteral(126)               // snake.fth:168:5 in `check-input`
        Store                          // snake.fth:168:14 in `check-input`
        Exit                           // snake.fth:168:16 in `check-input`


( fn "random-x-position" )
    Block(0)
        PushLiteral(40)                // snake.fth:172:3 in `random-x-position`
        PushLiteral(4)                 // snake.fth:172:9 in `random-x-position`
        Call("-")                      // snake.fth:172:11 in `random-x-position`
    Block(1)
        Call("random")                 // snake.fth:172:13 in `random-x-position`
    Block(2)
        PushLiteral(2)                 // snake.fth:172:20 in `random-x-position`
        Add                            // snake.fth:172:22 in `random-x-position`
        Exit                           // snake.fth:172:24 in `random-x-position`


( fn "random-y-position" )
    Block(0)
        PushLiteral(25)                // snake.fth:174:3 in `random-y-position`
        PushLiteral(4)                 // snake.fth:174:10 in `random-y-position`
        Call("-")                      // snake.fth:174:12 in `random-y-position`
    Block(1)
        Call("random")                 // snake.fth:174:14 in `random-y-position`
    Block(2)
        PushLiteral(2)                 // snake.fth:174:21 in `random-y-position`
        Add                            // snake.fth:174:23 in `random-y-position`
        Exit                           // snake.fth:174:25 in `random-y-position`


( fn "move-apple" )
    Block(0)
        PushLiteral(-26664)            // snake.fth:177:3 in `move-apple`
        Load                           // snake.fth:177:11 in `move-apple`
        PushLiteral(-26662)            // snake.fth:177:13 in `move-apple`
        Load                           // snake.fth:177:21 in `move-apple`
        Call("draw-white")             // snake.fth:177:23 in `move-apple`
    Block(1)
        Call("random-x-position")      // snake.fth:178:3 in `move-apple`
    Block(2)
        Call("random-y-position")      // snake.fth:178:21 in `move-apple`
    Block(3)
        Call("set-apple-position")     // snake.fth:179:3 in `move-apple`
    Block(4)
        Exit                           // snake.fth:179:22 in `move-apple`


( fn "grow-snake" )
    Block(0)
        PushLiteral(1)                 // snake.fth:181:15 in `grow-snake`
        PushLiteral(-26658)            // snake.fth:181:17 in `grow-snake`
        Call("+!")                     // snake.fth:181:24 in `grow-snake`
    Block(1)
        Exit                           // snake.fth:181:27 in `grow-snake`


( fn "check-apple" )
    Block(0)
        PushLiteral(-28668)            // snake.fth:184:3 in `check-apple`
        Load                           // snake.fth:184:16 in `check-apple`
        PushLiteral(-26664)            // snake.fth:184:18 in `check-apple`
        Load                           // snake.fth:184:26 in `check-apple`
        Call("=")                      // snake.fth:184:28 in `check-apple`
    Block(1)
        PushLiteral(-27666)            // snake.fth:185:3 in `check-apple`
        Load                           // snake.fth:185:16 in `check-apple`
        PushLiteral(-26662)            // snake.fth:185:18 in `check-apple`
        Load                           // snake.fth:185:26 in `check-apple`
        Call("=")                      // snake.fth:185:28 in `check-apple`
    Block(2)
        Call("and")                    // snake.fth:186:3 in `check-apple`
    Block(3)
        JumpIf0(7)                     // snake.fth:186:7 in `check-apple`
    Block(4)
        Call("move-apple")             // snake.fth:187:5 in `check-apple`
    Block(5)
        Call("grow-snake")             // snake.fth:188:5 in `check-apple`
    Block(6)
        JumpTarget(6)                  // snake.fth:189:3 in `check-apple`
    Block(7)
        Exit                           // snake.fth:189:8 in `check-apple`


( fn "check-collision" )
    Block(0)
        PushLiteral(-28668)            // snake.fth:193:3 in `check-collision`
        Load                           // snake.fth:193:16 in `check-collision`
        PushLiteral(-27666)            // snake.fth:193:18 in `check-collision`
        Load                           // snake.fth:193:31 in `check-collision`
        Call("convert-x-y")            // snake.fth:196:3 in `check-collision`
    Block(1)
        PushLiteral(1024)              // snake.fth:196:15 in `check-collision`
        Add                            // snake.fth:196:24 in `check-collision`
        Load8                          // snake.fth:196:26 in `check-collision`
        PushLiteral(32)                // snake.fth:199:3 in `check-collision`
        Call("=")                      // snake.fth:199:15 in `check-collision`
    Block(2)
        Exit                           // snake.fth:199:17 in `check-collision`


( fn "draw-snake-head-tail" )
    Block(0)
        PushLiteral(0)                 // snake.fth:202:3 in `draw-snake-head-tail`
        Call("snake-x")                // snake.fth:202:5 in `draw-snake-head-tail`
    Block(1)
        Load                           // snake.fth:202:13 in `draw-snake-head-tail`
        PushLiteral(0)                 // snake.fth:202:15 in `draw-snake-head-tail`
        Call("snake-y")                // snake.fth:202:17 in `draw-snake-head-tail`
    Block(2)
        Load                           // snake.fth:202:25 in `draw-snake-head-tail`
        Call("draw-snake-tile")        // snake.fth:202:27 in `draw-snake-head-tail`
    Block(3)
        PushLiteral(-26658)            // snake.fth:203:3 in `draw-snake-head-tail`
        Load                           // snake.fth:203:10 in `draw-snake-head-tail`
        Call("snake-x")                // snake.fth:203:12 in `draw-snake-head-tail`
    Block(4)
        Load                           // snake.fth:203:20 in `draw-snake-head-tail`
        PushLiteral(-26658)            // snake.fth:204:3 in `draw-snake-head-tail`
        Load                           // snake.fth:204:10 in `draw-snake-head-tail`
        Call("snake-y")                // snake.fth:204:12 in `draw-snake-head-tail`
    Block(5)
        Load                           // snake.fth:204:20 in `draw-snake-head-tail`
        Call("draw-white")             // snake.fth:205:3 in `draw-snake-head-tail`
    Block(6)
        Exit                           // snake.fth:205:14 in `draw-snake-head-tail`


( fn "main" )
    Block(0)
        PushLiteral(500)               // snake.fth:23:1 in `main`
        Call("cells")                  // snake.fth:23:5 in `main`
    Block(1)
        Drop                           // snake.fth:23:11 in `main`
        PushLiteral(500)               // snake.fth:26:1 in `main`
        Call("cells")                  // snake.fth:26:5 in `main`
    Block(2)
        Drop                           // snake.fth:26:11 in `main`
        PushLiteral(-28672)            // snake.fth:212:1 in `main`
        Load                           // snake.fth:212:13 in `main`
        Call("0=")                     // snake.fth:212:15 in `main`
    Block(3)
        JumpIf0(6)                     // snake.fth:212:18 in `main`
    Block(4)
        Call("initialize")             // snake.fth:212:21 in `main`
    Block(5)
        JumpTarget(5)                  // snake.fth:212:32 in `main`
    Block(6)
        PushLiteral(1)                 // snake.fth:213:1 in `main`
        PushLiteral(-28672)            // snake.fth:213:3 in `main`
        Store                          // snake.fth:213:15 in `main`
        Call("draw-snake-head-tail")   // snake.fth:216:1 in `main`
    Block(7)
        Call("draw-apple")             // snake.fth:217:1 in `main`
    Block(8)
        Call("check-input")            // snake.fth:218:1 in `main`
    Block(9)
        Call("move-snake-tail")        // snake.fth:219:1 in `main`
    Block(10)
        Call("move-snake-head")        // snake.fth:220:1 in `main`
    Block(11)
        Call("check-apple")            // snake.fth:221:1 in `main`
    Block(12)
        Call("check-collision")        // snake.fth:223:1 in `main`
    Block(13)
        JumpIf0(15)                    // snake.fth:224:1 in `main`
    Block(14)
        JumpElse(16)                   // snake.fth:224:4 in `main`
    Block(15)
        PushLiteral(0)                 // snake.fth:224:9 in `main`
        PushLiteral(-28672)            // snake.fth:224:11 in `main`
        Store                          // snake.fth:224:23 in `main`
        JumpTarget(15)                 // snake.fth:224:25 in `main`
    Block(16)
        Exit                           // :0:0 in ``


